{"version":3,"file":"static/js/8709.459cb0e6.chunk.js","mappings":"+GAAA,q1J","sources":["../../packages/control/README.md"],"sourcesContent":["export default \"Control 自定义控件\\n===\\n\\n您可以通过此组件来实现自定义控件。同时你可以使用 `Map` 组件 `widget` 属性来更方便，设置自带默认控件。\\n\\n```jsx\\nimport { Control, useControl } from '@uiw/react-baidu-map';\\n// 或者单独安装使用\\nimport Control, { useControl } from '@uiw/react-baidu-map-control';\\n```\\n\\n### 基本用法\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useState, useRef } from 'react';\\nimport { Map, Control, APILoader } from '@uiw/react-baidu-map';\\n\\nconst Example = () => {\\n  const [count, setCount] = useState(0);\\n  const map = useRef(null);\\n  return (\\n    <Map zoom={13} ref={map} widget={['NavigationControl']} style={{ height: 350 }}>\\n      <Control\\n        ref={(instance) => {\\n          if (instance && instance.control) {\\n            instance.control.setAnchor(BMAP_ANCHOR_BOTTOM_RIGHT);\\n          }\\n        }}\\n      >\\n        <div\\n          style={{ background: 'gray', padding: '10px', fontSize: 12 }}\\n          onClick={() => setCount(count + 1)}\\n        >\\n          Current Count: {count}\\n        </div>\\n      </Control>\\n      <Control anchor={BMAP_ANCHOR_TOP_RIGHT}>\\n        <div\\n          style={{ background: 'gray', padding: '10px', fontSize: 12, display: 'inline-block' }}\\n          onClick={() => {\\n            const instanceMap = map.current.map\\n            if (instanceMap) {\\n              instanceMap.setZoom(instanceMap.getZoom() + 2);\\n            }\\n          }}\\n        >\\n          放大2级\\n        </div>\\n        <div\\n          style={{ background: 'gray', padding: '10px', fontSize: 12, display: 'inline-block', color: '#fff' }}\\n          onClick={() => {\\n            const instanceMap = map.current.map\\n            if (instanceMap) {\\n              instanceMap.setZoom(instanceMap.getZoom() - 2);\\n            }\\n          }}\\n        >\\n          缩小2级\\n        </div>\\n      </Control>\\n    </Map>\\n  );\\n}\\n\\nconst Demo = () => (\\n  <div style={{ width: '100%' }}>\\n    <APILoader akay=\\\"GTrnXa5hwXGwgQnTBG28SHBubErMKm3f\\\">\\n      <Example />\\n    </APILoader>\\n  </div>\\n);\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### 使用 hooks\\n\\n`control`, `setControl`\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { useMemo, useRef, useEffect, useState } from 'react';\\nimport { Map, APILoader, useMap, useControl, useMapContext } from '@uiw/react-baidu-map';\\n\\nconst Example = () => {\\n  const divElm = useRef(null);\\n  const [count, setCount] = useState(4);\\n  const { map } = useMapContext();\\n  const children = (\\n    <div style={{ background: 'gray', padding: '10px' }}>\\n      <button\\n        onClick={() => {\\n          setCount(count + 1);\\n          map.setZoom(map.getZoom() + 1);\\n        }}\\n      >\\n        放大1级 {count}\\n      </button>\\n      <button\\n        onClick={() => {\\n          setCount(count - 1);\\n          map.setZoom(map.getZoom() - 2);\\n        }}\\n      >\\n        缩小1级 {count}\\n      </button>\\n    </div>\\n  );\\n  useControl({ children, anchor: BMAP_ANCHOR_TOP_RIGHT });\\n  useControl({ children, anchor: BMAP_ANCHOR_BOTTOM_RIGHT });\\n  return null\\n}\\n\\nconst Demo = () => (\\n  <div style={{ width: '100%' }}>\\n    <APILoader akay=\\\"GTrnXa5hwXGwgQnTBG28SHBubErMKm3f\\\">\\n      <Map zoom={13} widget={['NavigationControl']} style={{ height: 350 }}>\\n        <Example />\\n      </Map>\\n    </APILoader>\\n  </div>\\n);\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n| ----- | ----- | ----- | ----- |\\n| visiable | 覆盖物是否可见。 | `boolean` | - |\\n| anchor | 控件的停靠位置。| `ControlAnchor` | `BMAP_ANCHOR_TOP_LEFT` |\\n| offset | 控件的位置偏移值。 | `BMap.Size` | `new BMap.Size(10, 10)` |\\n| children | 展示控件内容。 | `JSX.Element` | - |\\n\\n### ControlAnchor\\n\\n此常量表示控件的定位。\\n\\n| 常量 | 值 | 描述 |\\n| ----- | ----- | ----- |\\n| BMAP_ANCHOR_TOP_LEFT | `0` | `↖` 控件将定位到地图的左上角 |\\n| BMAP_ANCHOR_TOP_RIGHT | `1` | `↗` 控件将定位到地图的右上角 |\\n| BMAP_ANCHOR_BOTTOM_LEFT | `2` | `↙` 控件将定位到地图的左下角 |\\n| BMAP_ANCHOR_BOTTOM_RIGHT | `3` | `↘` 控件将定位到地图的右下角 |\\n\";"],"names":[],"sourceRoot":""}