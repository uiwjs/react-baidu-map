{"version":3,"file":"static/js/45.6e724c9b.chunk.js","mappings":"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","sources":["../../packages/drawing-manager/README.md"],"sourcesContent":["\nexport default {\n    components: { 20: (function() { \"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactBaiduMap = require(\"@uiw/react-baidu-map\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nvar styleOptions = {\n  strokeColor: 'red',\n  //边线颜色。\n  fillColor: 'red',\n  //填充颜色。当参数为空时，圆形将没有填充效果。\n  strokeWeight: 3,\n  //边线的宽度，以像素为单位。\n  strokeOpacity: 0.8,\n  //边线透明度，取值范围0 - 1。\n  fillOpacity: 0.6,\n  //填充的透明度，取值范围0 - 1。\n  strokeStyle: 'solid' //边线的样式，solid或dashed。\n};\nvar Example = function Example() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(_reactBaiduMap.Map, {\n    zoom: 4,\n    center: \"\\u6B66\\u6C49\",\n    widget: ['NavigationControl'],\n    style: {\n      height: 350\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactBaiduMap.DrawingManager, {\n    isOpen: true,\n    enableDrawingTool: true,\n    drawingToolOptions: {\n      anchor: window.BMAP_ANCHOR_TOP_RIGHT,\n      offset: new BMap.Size(5, 5)\n    },\n    circleOptions: styleOptions,\n    polylineOptions: styleOptions,\n    polygonOptions: styleOptions,\n    rectangleOptions: styleOptions\n  })));\n};\nvar Demo = function Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: {\n      width: '100%'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactBaiduMap.APILoader, {\n    akay: \"eYpCTECSntZmw0WyoQ7zFpCRR9cpgHFG\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(Example, null)));\n};\nreturn Demo; })(),67: (function() { \"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactBaiduMap = require(\"@uiw/react-baidu-map\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != _typeof(e) && \"function\" != typeof e) return { \"default\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\"default\"] = e, t && t.set(e, n), n; }\nvar Example = function Example() {\n  var styleOptions = {\n    strokeColor: 'red',\n    // 边线颜色。\n    fillColor: 'red',\n    // 填充颜色。当参数为空时，圆形将没有填充效果。\n    strokeWeight: 3,\n    // 边线的宽度，以像素为单位。\n    strokeOpacity: 0.8,\n    // 边线透明度，取值范围0 - 1。\n    fillOpacity: 0.6,\n    // 填充的透明度，取值范围0 - 1。\n    strokeStyle: 'solid' // 边线的样式，solid或dashed。\n  };\n  var divElm = (0, _react.useRef)(null);\n  var _useMap = (0, _reactBaiduMap.useMap)({\n      zoom: 8,\n      enableScrollWheelZoom: true,\n      widget: ['GeolocationControl', 'NavigationControl']\n    }),\n    setContainer = _useMap.setContainer,\n    map = _useMap.map;\n  var _useDrawingManager = (0, _reactBaiduMap.useDrawingManager)({\n      map: map,\n      isOpen: true,\n      // 是否开启绘制模式\n      enableDrawingTool: true,\n      // 是否显示工具栏\n      drawingToolOptions: {\n        anchor: window.BMAP_ANCHOR_TOP_RIGHT,\n        // 位置\n        offset: new BMap.Size(5, 5) // 偏离值\n      },\n      circleOptions: styleOptions,\n      // 圆的样式\n      polylineOptions: styleOptions,\n      // 线的样式\n      polygonOptions: styleOptions,\n      // 多边形的样式\n      rectangleOptions: styleOptions // 矩形的样式\n    }),\n    drawingManager = _useDrawingManager.drawingManager;\n  (0, _react.useEffect)(function () {\n    if (divElm.current && !map) {\n      setContainer(divElm.current);\n    }\n  }, [map]);\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    ref: divElm,\n    style: {\n      height: 350\n    }\n  }));\n};\nvar Demo = function Demo() {\n  return /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: {\n      width: '100%'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactBaiduMap.APILoader, {\n    akay: \"eYpCTECSntZmw0WyoQ7zFpCRR9cpgHFG\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactBaiduMap.Provider, null, /*#__PURE__*/_react[\"default\"].createElement(Example, null))));\n};\nreturn Demo; })(), },\n    data: {\n  \"20\": {\n    \"name\": 20,\n    \"meta\": {},\n    \"code\": \"\\\"use strict\\\";\\n\\nfunction _typeof(o) { \\\"@babel/helpers - typeof\\\"; return _typeof = \\\"function\\\" == typeof Symbol && \\\"symbol\\\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \\\"function\\\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \\\"symbol\\\" : typeof o; }, _typeof(o); }\\nvar _react = _interopRequireWildcard(require(\\\"react\\\"));\\nvar _reactBaiduMap = require(\\\"@uiw/react-baidu-map\\\");\\nfunction _getRequireWildcardCache(e) { if (\\\"function\\\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \\\"object\\\" != _typeof(e) && \\\"function\\\" != typeof e) return { \\\"default\\\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\\\"default\\\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\\\"default\\\"] = e, t && t.set(e, n), n; }\\nvar styleOptions = {\\n  strokeColor: 'red',\\n  //边线颜色。\\n  fillColor: 'red',\\n  //填充颜色。当参数为空时，圆形将没有填充效果。\\n  strokeWeight: 3,\\n  //边线的宽度，以像素为单位。\\n  strokeOpacity: 0.8,\\n  //边线透明度，取值范围0 - 1。\\n  fillOpacity: 0.6,\\n  //填充的透明度，取值范围0 - 1。\\n  strokeStyle: 'solid' //边线的样式，solid或dashed。\\n};\\nvar Example = function Example() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(_reactBaiduMap.Map, {\\n    zoom: 4,\\n    center: \\\"\\\\u6B66\\\\u6C49\\\",\\n    widget: ['NavigationControl'],\\n    style: {\\n      height: 350\\n    }\\n  }, /*#__PURE__*/_react[\\\"default\\\"].createElement(_reactBaiduMap.DrawingManager, {\\n    isOpen: true,\\n    enableDrawingTool: true,\\n    drawingToolOptions: {\\n      anchor: window.BMAP_ANCHOR_TOP_RIGHT,\\n      offset: new BMap.Size(5, 5)\\n    },\\n    circleOptions: styleOptions,\\n    polylineOptions: styleOptions,\\n    polygonOptions: styleOptions,\\n    rectangleOptions: styleOptions\\n  })));\\n};\\nvar Demo = function Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(\\\"div\\\", {\\n    style: {\\n      width: '100%'\\n    }\\n  }, /*#__PURE__*/_react[\\\"default\\\"].createElement(_reactBaiduMap.APILoader, {\\n    akay: \\\"eYpCTECSntZmw0WyoQ7zFpCRR9cpgHFG\\\"\\n  }, /*#__PURE__*/_react[\\\"default\\\"].createElement(Example, null)));\\n};\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React, { useState } from 'react'\\nimport { Map, DrawingManager, APILoader } from '@uiw/react-baidu-map'\\n\\nconst styleOptions = {\\n  strokeColor: 'red', //边线颜色。\\n  fillColor: 'red', //填充颜色。当参数为空时，圆形将没有填充效果。\\n  strokeWeight: 3, //边线的宽度，以像素为单位。\\n  strokeOpacity: 0.8, //边线透明度，取值范围0 - 1。\\n  fillOpacity: 0.6, //填充的透明度，取值范围0 - 1。\\n  strokeStyle: 'solid' //边线的样式，solid或dashed。\\n}\\n\\nconst Example = () => {\\n  return (\\n    <>\\n      <Map zoom={4} center=\\\"武汉\\\" widget={['NavigationControl']} style={{ height: 350 }}>\\n        <DrawingManager\\n          isOpen={true}\\n          enableDrawingTool={true}\\n          drawingToolOptions={{\\n            anchor: window.BMAP_ANCHOR_TOP_RIGHT,\\n            offset: new BMap.Size(5, 5)\\n          }}\\n          circleOptions={styleOptions}\\n          polylineOptions={styleOptions}\\n          polygonOptions={styleOptions}\\n          rectangleOptions={styleOptions}\\n        />\\n      </Map>\\n    </>\\n  )\\n}\\n\\nconst Demo = () => (\\n  <div style={{ width: '100%' }}>\\n    <APILoader akay=\\\"eYpCTECSntZmw0WyoQ7zFpCRR9cpgHFG\\\">\\n      <Example />\\n    </APILoader>\\n  </div>\\n)\\nexport default Demo;\"\n  },\n  \"67\": {\n    \"name\": 67,\n    \"meta\": {},\n    \"code\": \"\\\"use strict\\\";\\n\\nfunction _typeof(o) { \\\"@babel/helpers - typeof\\\"; return _typeof = \\\"function\\\" == typeof Symbol && \\\"symbol\\\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \\\"function\\\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \\\"symbol\\\" : typeof o; }, _typeof(o); }\\nvar _react = _interopRequireWildcard(require(\\\"react\\\"));\\nvar _reactBaiduMap = require(\\\"@uiw/react-baidu-map\\\");\\nfunction _getRequireWildcardCache(e) { if (\\\"function\\\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \\\"object\\\" != _typeof(e) && \\\"function\\\" != typeof e) return { \\\"default\\\": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\\\"default\\\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n[\\\"default\\\"] = e, t && t.set(e, n), n; }\\nvar Example = function Example() {\\n  var styleOptions = {\\n    strokeColor: 'red',\\n    // 边线颜色。\\n    fillColor: 'red',\\n    // 填充颜色。当参数为空时，圆形将没有填充效果。\\n    strokeWeight: 3,\\n    // 边线的宽度，以像素为单位。\\n    strokeOpacity: 0.8,\\n    // 边线透明度，取值范围0 - 1。\\n    fillOpacity: 0.6,\\n    // 填充的透明度，取值范围0 - 1。\\n    strokeStyle: 'solid' // 边线的样式，solid或dashed。\\n  };\\n  var divElm = (0, _react.useRef)(null);\\n  var _useMap = (0, _reactBaiduMap.useMap)({\\n      zoom: 8,\\n      enableScrollWheelZoom: true,\\n      widget: ['GeolocationControl', 'NavigationControl']\\n    }),\\n    setContainer = _useMap.setContainer,\\n    map = _useMap.map;\\n  var _useDrawingManager = (0, _reactBaiduMap.useDrawingManager)({\\n      map: map,\\n      isOpen: true,\\n      // 是否开启绘制模式\\n      enableDrawingTool: true,\\n      // 是否显示工具栏\\n      drawingToolOptions: {\\n        anchor: window.BMAP_ANCHOR_TOP_RIGHT,\\n        // 位置\\n        offset: new BMap.Size(5, 5) // 偏离值\\n      },\\n      circleOptions: styleOptions,\\n      // 圆的样式\\n      polylineOptions: styleOptions,\\n      // 线的样式\\n      polygonOptions: styleOptions,\\n      // 多边形的样式\\n      rectangleOptions: styleOptions // 矩形的样式\\n    }),\\n    drawingManager = _useDrawingManager.drawingManager;\\n  (0, _react.useEffect)(function () {\\n    if (divElm.current && !map) {\\n      setContainer(divElm.current);\\n    }\\n  }, [map]);\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(\\\"div\\\", {\\n    ref: divElm,\\n    style: {\\n      height: 350\\n    }\\n  }));\\n};\\nvar Demo = function Demo() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(\\\"div\\\", {\\n    style: {\\n      width: '100%'\\n    }\\n  }, /*#__PURE__*/_react[\\\"default\\\"].createElement(_reactBaiduMap.APILoader, {\\n    akay: \\\"eYpCTECSntZmw0WyoQ7zFpCRR9cpgHFG\\\"\\n  }, /*#__PURE__*/_react[\\\"default\\\"].createElement(_reactBaiduMap.Provider, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(Example, null))));\\n};\\nreturn Demo;\",\n    \"language\": \"jsx\",\n    \"value\": \"import React from 'react';\\nimport { useRef, useEffect, useState } from 'react'\\nimport { Map, APILoader, Provider, useMap, useDrawingManager } from '@uiw/react-baidu-map'\\n\\nconst Example = () => {\\n\\n  const styleOptions = {\\n    strokeColor: 'red', // 边线颜色。\\n    fillColor: 'red', // 填充颜色。当参数为空时，圆形将没有填充效果。\\n    strokeWeight: 3, // 边线的宽度，以像素为单位。\\n    strokeOpacity: 0.8, // 边线透明度，取值范围0 - 1。\\n    fillOpacity: 0.6, // 填充的透明度，取值范围0 - 1。\\n    strokeStyle: 'solid' // 边线的样式，solid或dashed。\\n  }\\n\\n  const divElm = useRef(null)\\n\\n  const { setContainer, map } = useMap({\\n    zoom: 8,\\n    enableScrollWheelZoom: true,\\n    widget: ['GeolocationControl', 'NavigationControl']\\n  })\\n\\n  const { drawingManager } = useDrawingManager({\\n    map,\\n    isOpen: true, // 是否开启绘制模式\\n    enableDrawingTool: true, // 是否显示工具栏\\n    drawingToolOptions: {\\n      anchor: window.BMAP_ANCHOR_TOP_RIGHT, // 位置\\n      offset: new BMap.Size(5, 5) // 偏离值\\n    },\\n    circleOptions: styleOptions, // 圆的样式\\n    polylineOptions: styleOptions, // 线的样式\\n    polygonOptions: styleOptions, // 多边形的样式\\n    rectangleOptions: styleOptions // 矩形的样式\\n  })\\n\\n  useEffect(() => {\\n    if (divElm.current && !map) {\\n      setContainer(divElm.current)\\n    }\\n  }, [map])\\n\\n  return (\\n    <>\\n      <div ref={divElm} style={{ height: 350 }} />\\n    </>\\n  )\\n}\\n\\nconst Demo = () => (\\n  <div style={{ width: '100%' }}>\\n    <APILoader akay=\\\"eYpCTECSntZmw0WyoQ7zFpCRR9cpgHFG\\\">\\n      <Provider>\\n        <Example />\\n      </Provider>\\n    </APILoader>\\n  </div>\\n)\\nexport default Demo;\"\n  }\n},\n    source: \"DrawingManager 鼠标绘制工具条库\\n===\\n\\n[![Buy me a coffee](https://img.shields.io/badge/Buy%20me%20a%20coffee-048754?logo=buymeacoffee)](https://jaywcjlove.github.io/#/sponsor)\\n[![npm version](https://img.shields.io/npm/v/@uiw/react-baidu-map-drawing-manager.svg)](https://www.npmjs.com/package/@uiw/react-baidu-map-drawing-manager)\\n[![Downloads](https://img.shields.io/npm/dm/@uiw/react-baidu-map-drawing-manager.svg?style=flat)](https://www.npmjs.com/package/@uiw/react-baidu-map-drawing-manager)\\n\\n提供鼠标绘制点、线、面、多边形（矩形、圆）的编辑工具条的开源代码库。且用户可使用 JavaScript API 对应覆盖物（点、线、面等）类接口对其进行属性（如颜色、线宽等）设置、编辑（如开启线顶点编辑等）等功能\\n\\n> 当前组件自动加载 [DrawingManager_min.js](http://api.map.baidu.com/library/DrawingManager/1.4/src/DrawingManager_min.js)，加载完成将会有个 [`window.BMapLib`](http://api.map.baidu.com/library/DrawingManager/1.4/docs/symbols/BMapLib.DrawingManager.html) 的全局对象。\\n\\n```jsx\\nimport { DrawingManager, useDrawingManager } from '@uiw/react-baidu-map';\\n// 或者单独安装使用\\nimport DrawingManager, { useDrawingManager } from '@uiw/react-baidu-map-drawing-manager';\\n```\\n\\n### 基本用法\\n\\n```jsx mdx:preview\\nimport React, { useState } from 'react'\\nimport { Map, DrawingManager, APILoader } from '@uiw/react-baidu-map'\\n\\nconst styleOptions = {\\n  strokeColor: 'red', //边线颜色。\\n  fillColor: 'red', //填充颜色。当参数为空时，圆形将没有填充效果。\\n  strokeWeight: 3, //边线的宽度，以像素为单位。\\n  strokeOpacity: 0.8, //边线透明度，取值范围0 - 1。\\n  fillOpacity: 0.6, //填充的透明度，取值范围0 - 1。\\n  strokeStyle: 'solid' //边线的样式，solid或dashed。\\n}\\n\\nconst Example = () => {\\n  return (\\n    <>\\n      <Map zoom={4} center=\\\"武汉\\\" widget={['NavigationControl']} style={{ height: 350 }}>\\n        <DrawingManager\\n          isOpen={true}\\n          enableDrawingTool={true}\\n          drawingToolOptions={{\\n            anchor: window.BMAP_ANCHOR_TOP_RIGHT,\\n            offset: new BMap.Size(5, 5)\\n          }}\\n          circleOptions={styleOptions}\\n          polylineOptions={styleOptions}\\n          polygonOptions={styleOptions}\\n          rectangleOptions={styleOptions}\\n        />\\n      </Map>\\n    </>\\n  )\\n}\\n\\nconst Demo = () => (\\n  <div style={{ width: '100%' }}>\\n    <APILoader akay=\\\"eYpCTECSntZmw0WyoQ7zFpCRR9cpgHFG\\\">\\n      <Example />\\n    </APILoader>\\n  </div>\\n)\\nexport default Demo;\\n```\\n\\n\\n### 使用 hooks\\n\\n```jsx mdx:preview\\nimport React from 'react';\\nimport { useRef, useEffect, useState } from 'react'\\nimport { Map, APILoader, Provider, useMap, useDrawingManager } from '@uiw/react-baidu-map'\\n\\nconst Example = () => {\\n\\n  const styleOptions = {\\n    strokeColor: 'red', // 边线颜色。\\n    fillColor: 'red', // 填充颜色。当参数为空时，圆形将没有填充效果。\\n    strokeWeight: 3, // 边线的宽度，以像素为单位。\\n    strokeOpacity: 0.8, // 边线透明度，取值范围0 - 1。\\n    fillOpacity: 0.6, // 填充的透明度，取值范围0 - 1。\\n    strokeStyle: 'solid' // 边线的样式，solid或dashed。\\n  }\\n\\n  const divElm = useRef(null)\\n\\n  const { setContainer, map } = useMap({\\n    zoom: 8,\\n    enableScrollWheelZoom: true,\\n    widget: ['GeolocationControl', 'NavigationControl']\\n  })\\n\\n  const { drawingManager } = useDrawingManager({\\n    map,\\n    isOpen: true, // 是否开启绘制模式\\n    enableDrawingTool: true, // 是否显示工具栏\\n    drawingToolOptions: {\\n      anchor: window.BMAP_ANCHOR_TOP_RIGHT, // 位置\\n      offset: new BMap.Size(5, 5) // 偏离值\\n    },\\n    circleOptions: styleOptions, // 圆的样式\\n    polylineOptions: styleOptions, // 线的样式\\n    polygonOptions: styleOptions, // 多边形的样式\\n    rectangleOptions: styleOptions // 矩形的样式\\n  })\\n\\n  useEffect(() => {\\n    if (divElm.current && !map) {\\n      setContainer(divElm.current)\\n    }\\n  }, [map])\\n\\n  return (\\n    <>\\n      <div ref={divElm} style={{ height: 350 }} />\\n    </>\\n  )\\n}\\n\\nconst Demo = () => (\\n  <div style={{ width: '100%' }}>\\n    <APILoader akay=\\\"eYpCTECSntZmw0WyoQ7zFpCRR9cpgHFG\\\">\\n      <Provider>\\n        <Example />\\n      </Provider>\\n    </APILoader>\\n  </div>\\n)\\nexport default Demo;\\n```\\n\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n| ----- | ----- | ----- | ----- |\\n| isOpen | 是否开启绘制模式 | `boolean` | - |\\n| enableDrawingTool |  是否添加绘制工具栏控件 | `boolean` | 默认不添加 |\\n| drawingToolOptions |  折线的宽度，以像素为单位 | Json Object | 可选的输入参数，非必填项 |\\n| enableCalculate |  绘制是否进行测距(画线时候)、测面(画圆、多边形、矩形) | `boolean` | - |\\n\\n### drawingToolOptions\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n| ----- | ----- | ----- | ----- |\\n| anchor | 是否开启绘制模式 | ControlAnchor | 停靠位置、默认左上角 |\\n| offset | 偏移值 | BMap.Size | - |\\n| scale | 工具栏的缩放比例,默认为1 | Number | - |\\n| drawingModes | 工具栏上可以选择出现的绘制模式 | Array | - |\\n\\n### 官方文档\\n\\n- demo: https://lbsyun.baidu.com/jsdemo.htm#f0_7\\n- api: http://api.map.baidu.com/library/DrawingManager/1.4/docs/symbols/BMapLib.DrawingManager.html\\n\\n\",\n    headings:[],\n    headingsList:[],\n  }"],"names":["components","_typeof","o","Symbol","iterator","constructor","prototype","_react","e","r","__esModule","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_reactBaiduMap","WeakMap","styleOptions","strokeColor","fillColor","strokeWeight","strokeOpacity","fillOpacity","strokeStyle","Example","createElement","Fragment","Map","zoom","center","widget","style","height","DrawingManager","isOpen","enableDrawingTool","drawingToolOptions","anchor","window","BMAP_ANCHOR_TOP_RIGHT","offset","BMap","Size","circleOptions","polylineOptions","polygonOptions","rectangleOptions","width","APILoader","akay","divElm","useRef","_useMap","useMap","enableScrollWheelZoom","setContainer","map","useDrawingManager","drawingManager","useEffect","current","ref","Provider","data","source","headings","headingsList"],"sourceRoot":""}