{"version":3,"sources":["../node_modules/@babel/template/lib/index.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/highlight/node_modules/color-convert/conversions.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/highlight/node_modules/chalk/index.js","../node_modules/@babel/highlight/node_modules/ansi-styles/index.js","../node_modules/@babel/highlight/node_modules/color-convert/index.js","../node_modules/@babel/highlight/node_modules/color-name/index.js","../node_modules/@babel/highlight/node_modules/color-convert/route.js","../node_modules/@babel/highlight/node_modules/supports-color/browser.js","../node_modules/@babel/highlight/node_modules/chalk/templates.js","../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","default","program","expression","statements","statement","smart","formatters","require","_builder","_default","assign","bind","undefined","ast","path","file","builtinClasses","isLoose","assumptions","classState","parent","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","body","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","list","map","Map","static","setState","newState","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","push","buildBody","paths","get","equals","params","constructor","template","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","constantSuper","refToPreserve","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Set","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","concat","bodyPaths","length","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","desc","obj","objectExpression","objectProperty","key","properties","args","arrayExpression","nullLiteral","lastNonNullIndex","i","isNullLiteral","slice","expressionStatement","call","bareSuperNode","superIsCallableConstructor","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","name","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","setClassMethods","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","descriptor","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","String","fn","toExpression","has","set","method","directives","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","arg","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","noClassCalls","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","WeakMap","beforeExpr","startsExpr","isAssign","prefix","TokenType","label","conf","this","keyword","rightAssociative","postfix","binop","updateContext","keywords$1","createKeyword","options","token","createBinop","types$1","num","bigint","decimal","regexp","string","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","slashAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","setTrailingComments","comments","trailingComments","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","CommentsParser","comment","loc","state","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","splice","leadingComments","commentStart","input","charCodeAt","type","specifiers","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","keys","forEach","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","offset","match","lineStart","lastIndex","exec","index","getLineInfo","raiseWithData","getLocationForPosition","message","_","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","preserveSpace","brace","context","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","SCOPE_PROGRAM","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","bindingType","checkRedeclarationInScope","maybeExportDefined","delete","isRedeclaredInScope","values","next","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inPipeline","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","exprAllowed","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","curPosition","skipArrays","val","Array","isArray","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","PlaceHolderErrors","ClassNameIsRequired","some","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","regex","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","stmt","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","refExpressionErrors","isLHS","toAssignable","optional","_node$arguments$","attributes","exported","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","out","chunkStart","ch","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","lookaheadState","curContext","jsxReadToken","jsxReadWord","jsxReadString","prevType","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","result","tryParse","failState","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","invalid","alternate","parseMaybeAssign","disallowInvalid","stack","arrows","finishArrowValidation","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","indexOf","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","finishOp","current","isIteratorStart","readIterator","isBinding","last","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","hasPrecedingLineBreak","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","hasOwnProperty","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","tsParseTypeParameterName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","isLineTerminator","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseIdentifierName","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","ranges","tokens","createParenthesizedExpressions","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","createLookaheadState","curr","cp","trail","clear","skipSpace","readTmplToken","getTokenFromCode","codePointAtPos","startSkip","spaceStart","loop","skipBlockComment","addComment","skipLineComment","CommentWhitespace","readToken_interpreter","nextPos","readWord1","readNumber","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","content","mods","char","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","_this$state$type$upda","_this$state$type","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","nextCh","allowAsi","messageOrType","missingPlugin","names","join","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","optionalParameters","isPrivateName","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","ExpressionParser","isRecord","protoRef","isObjectMethod","used","finalizeRemainingComments","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","update","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","resetPreviousNodeTrailingComments","parseSuper","parseImportMetaProperty","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","expectOnePlugin","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","elem","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseDecorator","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","inFunction","recordParameterInitializerError","delegating","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","enterInitialScopes","parseProgram","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","refNeedsArrowPos","parseBindingAtom","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","opts","getOptions","pluginMap","pluginsMap","parseTopLevel","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","matched","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","block","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","pushClassMethod","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","getPrivateNameSV","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","getParser","decoratorsBeforeExport","p","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","cssKeywords","reverseKeywords","convert","module","rgb","channels","hsl","hsv","hwb","cmyk","xyz","lch","ansi16","ansi256","hcg","apple","gray","model","h","r","g","rdif","gdif","bdif","s","v","diff","diffc","c","k","reversed","currentClosestKeyword","y","currentClosestDistance","distance","pow","z","t1","t2","t3","smin","lmin","hi","floor","q","sl","vmin","wh","bl","ratio","m","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","round","ansi","color","mult","rem","colorString","hue","chroma","mg","pure","w","metadata","prototype","placeholderName","reverse","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","assumption","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","text","toLowerCase","colorize","supportsColor","enabled","level","matchToToken","escapeStringRegexp","ansiStyles","stdoutColor","stdout","isSimpleWindowsTerm","platform","TERM","levelMapping","skipModels","styles","applyOptions","scLevel","Chalk","chalkTag","apply","setPrototypeOf","blue","open","closeRe","codes","build","_styles","_empty","visible","bgColor","bgModel","defineProperties","applyStyle","self","enumerable","hasGrey","__proto__","argsLen","originalDim","dim","strings","parts","colorConvert","wrapAnsi16","wrapAnsi256","wrapAnsi16m","italic","underline","inverse","hidden","strikethrough","black","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","groupName","group","styleName","style","ansi2ansi","rgb2rgb","ansi16m","suite","conversions","route","fromModel","routes","toModel","wrappedFn","conversion","wrapRounded","wrapRaw","deriveBFS","graph","models","buildGraph","queue","adjacents","adjacent","link","to","wrapConversion","stderr","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","parseArguments","results","chunks","trim","chunk","escape","chr","parseStyle","buildStyle","layer","escapeChar","errMsg","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"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AAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,MAAO,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,MAAO,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,KAAM,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,IAAK,G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","file":"static/js/vendors-runtime-template.dad1a23d.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else if (comments !== undefined) {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        commentWS.trailingNode.leadingComments = comments;\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const value = stmt.expression.value;\n    const directive = super.stmtToDirective(stmt);\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true)\n};\n\ntypes$1.braceR.updateContext = context => {\n  context.pop();\n};\n\ntypes$1.braceL.updateContext = types$1.braceHashL.updateContext = types$1.dollarBraceL.updateContext = context => {\n  context.push(types.brace);\n};\n\ntypes$1.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n          node = this.parseExport(node);\n\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n          return node;\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n      if (!result.node) {\n        if (result.error) {\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n      case \"TypeCastExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = as_ident.__clone();\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n      specifier.imported = this.parseIdentifier(true);\n      specifier.importKind = specifierTypeKind;\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = specifier.imported.__clone();\n      }\n    } else {\n      if (firstIdentIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n      }\n\n      isBinding = true;\n      specifier.imported = firstIdent;\n      specifier.importKind = null;\n      specifier.local = specifier.imported.__clone();\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.length -= 2;\n      } else if (curContext === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n\n        if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n          abort();\n        }\n\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.strictMode === true ? true : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = context => {\n  context.push(types.j_expr, types.j_oTag);\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === types$1.slash && prevType === types$1.jsxTagStart) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.exprAllowed = false;\n    } else if (type === types$1.jsxTagEnd) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n        context.pop();\n        this.state.exprAllowed = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.exprAllowed = true;\n      }\n    } else if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types$1.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    const value = this.input.slice(start + 2, end);\n    const comment = {\n      type: \"CommentBlock\",\n      value: value,\n      start: start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.slashAssign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.braceBarR);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  updateContext(prevType) {\n    var _this$state$type$upda, _this$state$type;\n\n    (_this$state$type$upda = (_this$state$type = this.state.type).updateContext) == null ? void 0 : _this$state$type$upda.call(_this$state$type, this.state.context);\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n\n    if (!andThrow) {\n      return shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0;\n    }\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types$1.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    setInnerComments(node, call.innerComments);\n    setInnerComments(node, call.callee.trailingComments);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case types$1.slash:\n      case types$1.slashAssign:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          const start = this.state.start;\n          const value = this.state.value;\n          node = this.parsePrivateName();\n\n          if (this.match(types$1._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(value, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, value);\n          } else {\n            throw this.unexpected(start);\n          }\n\n          return node;\n        }\n\n      case types$1.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      val.end = innerEndPos;\n      val.loc.end = innerEndLoc;\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(types$1.star);\n\n      switch (this.state.type) {\n        case types$1.semi:\n        case types$1.eof:\n        case types$1.braceR:\n        case types$1.parenR:\n        case types$1.bracketR:\n        case types$1.braceBarR:\n        case types$1.colon:\n        case types$1.comma:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      const matched = keywordRelationalOperator.exec(this.input);\n\n      if (matched !== null) {\n        const endCh = this.codePointAtPos(next + matched[0].length);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = this.match(types$1.name) && !this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(types$1.star) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = require(\"@babel/types\");\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = require(\"@babel/types\");\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}