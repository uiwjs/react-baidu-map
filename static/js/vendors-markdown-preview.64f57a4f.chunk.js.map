{"version":3,"sources":["../../src/index.tsx"],"names":["rehypeRewriteHandle","node","parent","test","child","class","type","tagName","properties","viewBox","version","width","height","ariaHidden","children","fillRule","d","prefixCls","warpperElement","mdp","React","useImperativeHandle","ref","cls","className","onScroll","onMouseOver","style","rehypePlugins","ignoreMissing","other","remarkPlugins","source"],"mappings":"wVAYMA,EAAsB,SAACC,EAAD,KAC1B,GAAIA,6BAA2BC,QAA0B,iBAAiBC,KAAKF,EAA/E,SAA8F,CAC5F,IAAMG,EAAQH,YAAiBA,WAA/B,GACIG,GAASA,EAATA,YAAJ,SAAiCA,0BAC/BA,kBAAqBC,MAAO,UAAaD,EAAzCA,YACAA,WAAiB,CACf,CACEE,KADF,UAEEC,QAFF,MAGEC,WAAY,CACVH,MADU,uBAEVI,QAFU,YAGVC,QAHU,MAIVC,MAJU,KAKVC,OALU,KAMVC,WAAY,QAEdC,SAAU,CACR,CACER,KADF,UAEEC,QAFF,OAGEC,WAAY,CACVO,SADU,UAEVC,EAAG,0WAwBJ,oBAA2D,cACxE,QAAQC,iBAAR,MAAM,oCAAN,EAAM,EAAN,EAAM,YAAN,EAAM,SAAN,EAAM,QAAN,EAAM,WAAN,EAAM,YAAN,IAA0GC,sBAA1G,MAA2H,GAA3H,aACMC,EAAMC,IAAZ,YACAC,8BAAoBC,GAAK,4BAAmBH,UAAQ,CAACA,EAArDE,IACA,IAAME,GAASN,GAAN,SAAyBO,GAAlC,IACA,OACE,yBAAKF,IAAL,EAAeG,SAAf,EAAmCC,YAAaA,GAAhD,GAAiFF,UAAjF,EAAiGG,MAAjG,WACE,4BAEEC,cAAa,CAAG,CAAC,EAAD,EAAc,CAAEC,eAAe,IAAhC,QAAyD,CAAC,EAAD,EAAzD,QAAF,mBAAuHC,iBAFtI,KAGEC,cAAa,sBAAQD,iBAAN,IAAF,CAHf,MAIEhB,SAAUkB,GAAU,a","file":"static/js/vendors-markdown-preview.64f57a4f.chunk.js","sourcesContent":["import React, { useImperativeHandle } from 'react';\nimport ReactMarkdown, { Options } from 'react-markdown';\nimport gfm from 'remark-gfm';\nimport slug from 'rehype-slug';\nimport headings from 'rehype-autolink-headings'\nimport rehypeRaw from 'rehype-raw';\n// @ts-ignore\nimport rehypePrism from '@mapbox/rehype-prism';\nimport rehypeRewrite from 'rehype-rewrite';\nimport './styles/markdown.less';\nimport './styles/markdowncolor.less';\n\nconst rehypeRewriteHandle = (node: any, index: number, parent: any) => {\n  if (node.type === 'element' && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n    const child = node.children && node.children[0];\n    if (child && child.properties && child.properties.ariaHidden === 'true') {\n      child.properties = { class: 'anchor', ...child.properties };\n      child.children = [\n        {\n          type: 'element',\n          tagName: 'svg',\n          properties: {\n            class: 'octicon octicon-link',\n            viewBox: '0 0 16 16',\n            version: '1.1',\n            width: '16',\n            height: '16',\n            ariaHidden: 'true',\n          },\n          children: [\n            {\n              type: 'element',\n              tagName: 'path',\n              properties: {\n                fillRule: 'evenodd',\n                d: 'M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z',\n              }\n            }\n          ]\n        }\n      ];\n    }\n  }\n}\n\nexport type MarkdownPreviewProps = {\n  prefixCls?: string;\n  className?: string;\n  source?: string;\n  style?: React.CSSProperties;\n  warpperElement?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n  onScroll?: (e: React.UIEvent<HTMLDivElement>) => void;\n  onMouseOver?: (e: React.MouseEvent<HTMLDivElement>) => void;\n} & Omit<Options, 'children'>;\n\nexport type MarkdownPreviewRef = {\n  mdp: React.RefObject<HTMLDivElement>;\n} & MarkdownPreviewProps;\n\nexport default React.forwardRef<MarkdownPreviewRef, MarkdownPreviewProps>((props, ref) => {\n  const { prefixCls = 'wmde-markdown wmde-markdown-color', className, source, style, onScroll, onMouseOver, warpperElement = {}, ...other  } = props;\n  const mdp = React.createRef<HTMLDivElement>();\n  useImperativeHandle(ref, () => ({ ...props, mdp }), [mdp, props]);\n  const cls = `${prefixCls || ''} ${className || ''}`;\n  return (\n    <div ref={mdp} onScroll={onScroll} onMouseOver={onMouseOver} {...warpperElement} className={cls} style={style}>\n      <ReactMarkdown\n        {...other}\n        rehypePlugins={[[rehypePrism, { ignoreMissing: true }], slug, headings, [rehypeRewrite as any, rehypeRewriteHandle], rehypeRaw, ...(other.rehypePlugins || [])]}\n        remarkPlugins={[ ...(other.remarkPlugins || []), gfm ]}\n        children={source || ''}\n      />\n    </div>\n  );\n});\n"],"sourceRoot":""}