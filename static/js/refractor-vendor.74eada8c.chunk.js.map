{"version":3,"file":"static/js/refractor-vendor.74eada8c.chunk.js","mappings":"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3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,KAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,MAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,OAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,MAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,QAC3BsD,EAAU3C,SAASX,EAAQ,S,kBC3Q3B,SAASuD,EAAK7D,GACZA,EA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ACZjC,MAAO,YA0BT,4BAA6B,CAC3BgC,QACE,0MACFC,YAAY,EACZjC,MAAO,WAET,eAAgB,CACdgC,QAAS,6DACTC,YAAY,EACZQ,QAAQ,EACRzC,MAAO,YAET,wBAAyB,CACvBgC,QAAS,uBACTC,YAAY,EACZjC,MAAO,YAGT,gCAAiC,CAC/B,CAEEgC,QAAS,wBACTC,YAAY,EACZjC,MAAO,YAET,CAEEgC,QAAS,iBACTC,YAAY,EACZjC,MAAO,aAIX,sBAAuB,CACrB,CAEEgC,QAAS,iBACTC,YAAY,EACZjC,MAAO,YAET,CAEEgC,QAAS,iBACTC,YAAY,EACZjC,MAAO,aAGX,cAAe,CACbgC,QAAS,0BACTC,YAAY,GAiBdF,OAAQ,CACNC,QAAS,qBACTS,QAAQ,EACRC,OAAQ4S,IAGRzR,EAAS,SAAU4R,GACrB,OAAQA,EAAM,IAAI9Q,QAAQ,4BAA6B,SAErD+Q,EAAmB,SAAUC,GAC/B,OAAO,IAAI5S,OAAO,aAAe4S,EAAItV,IAAIwD,GAAQnC,KAAK,KAAO,eAE3DkU,EAAW,CACb,iBAAkB,CAChB,KACA,QACA,QACA,OACA,UACA,MACA,WACA,kBACA,MACA,OACA,YACA,aACA,OACA,WACA,OACA,OACA,QACA,WACA,OACA,QACA,OACA,MACA,IACA,IACA,QACA,QACA,QACA,OACA,kBACA,MACA,SACA,MACA,QACA,OACA,QACA,SACA,OACA,UACA,UACA,OACA,UACA,MACA,gBACA,WACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,UACA,YACA,OACA,QACA,OACA,SACA,gBACA,SACA,QACA,YACA,WACA,oBACA,kBACA,OACA,YACA,MACA,QACA,MACA,QACA,MACA,iBACA,WAEF,uBAAwB,CAEtB,UACA,YACA,YACA,KACA,SACA,MACA,IACA,WACA,KACA,SACA,QACA,SACA,YACA,aACA,WACA,SACA,UACA,gBACA,oBACA,YACA,UACA,mBACA,KACA,WACA,IACA,KACA,MAEF,oBAAqB,CACnB,aACA,WACA,SACA,mBACA,SACA,aACA,aACA,YACA,mBACA,kBACA,WACA,aACA,OACA,WACA,UACA,aACA,YACA,WACA,OACA,OACA,MACA,WACA,UACA,SACA,UACA,aACA,aACA,SACA,QACA,UACA,oBACA,aACA,cACA,OACA,SACA,gBACA,oBACA,gCACA,iCACA,YACA,UACA,WACA,SACA,aACA,aACA,UACA,SACA,OACA,eACA,eACA,QACA,OACA,SACA,YACA,UACA,QACA,WACA,cACA,WACA,QACA,YACA,aACA,aACA,qBACA,SACA,SACA,WACA,eACA,UACA,aACA,OACA,UACA,QACA,SACA,SACA,OACA,aACA,WACA,YACA,MACA,aACA,UACA,aACA,SACA,cACA,YACA,OACA,YACA,SACA,YACA,iBACA,UACA,eACA,UACA,gBACA,eACA,YACA,mBACA,UACA,SACA,WACA,OACA,aACA,oBACA,YACA,UACA,UACA,YACA,WACA,WACA,aACA,OACA,cACA,iBACA,QACA,UACA,YACA,gBACA,cACA,oBACA,MACA,UACA,OACA,SACA,OACA,sBACA,aACA,aACA,mBACA,UACA,cACA,SACA,aACA,WACA,kBACA,OACA,OACA,QACA,QACA,QACA,YACA,SACA,eACA,eACA,WACA,WACA,MACA,aACA,YACA,WACA,QACA,oBACA,eACA,OACA,cACA,QACA,UACA,UACA,OACA,cACA,SACA,OACA,gBACA,YACA,eAEF,eAAgB,CACd,UACA,kBACA,MACA,cACA,iBACA,aACA,UACA,eACA,UACA,WACA,cACA,MACA,IACA,IACA,cACA,IACA,MACA,IACA,KACA,SACA,cACA,wBACA,OACA,IACA,OACA,IACA,WACA,SACA,cACA,KACA,QACA,aACA,SACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,UACA,WACA,KACA,iBACA,KACA,MACA,UACA,aACA,KACA,KACA,MACA,QACA,WACA,SACA,KACA,UACA,UACA,MACA,SACA,KACA,SACA,QACA,OACA,WACA,aACA,UACA,WACA,OACA,YACA,cACA,QACA,MACA,iBACA,YACA,yBACA,aACA,QACA,aACA,QACA,UACA,MACA,SACA,wBACA,MACA,OACA,KACA,OACA,WACA,QACA,YACA,cAGJ/D,OAAOhL,KAAK+O,GAAU9D,SAAQ,SAAU+D,GACtCT,EAAOS,GAAG7T,QAAU0T,EAAiBE,EAASC,OA0NhDT,EAAOI,YAAYxT,QAAU0T,EAxNX,CAEhB,MACA,QACA,OACA,MACA,OACA,QACA,QACA,OACA,QACA,UACA,MACA,MACA,OACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,SACA,KACA,UACA,YACA,MACA,OACA,YACA,QACA,OACA,QACA,OACA,QACA,UACA,KACA,QACA,OACA,SACA,aACA,aACA,WACA,QACA,UACA,OACA,KACA,OACA,SACA,QACA,OACA,SACA,MACA,OACA,SACA,MACA,WACA,YACA,iBACA,kBACA,SACA,YACA,QACA,YACA,YACA,WACA,cACA,UACA,YACA,gBACA,mBACA,SACA,MACA,UACA,cACA,aACA,SACA,cACA,OACA,eACA,YACA,UACA,eACA,eACA,aACA,kBACA,QACA,aACA,SACA,eACA,YACA,eACA,WACA,SACA,WACA,aACA,OACA,YACA,gBACA,eACA,OACA,UACA,UACA,YACA,gBACA,iBACA,kBACA,gBACA,UACA,OACA,YACA,cACA,UACA,cACA,aACA,OACA,aACA,iBACA,aACA,OACA,eACA,cACA,WACA,gBACA,YACA,UACA,QACA,aACA,QACA,OACA,aACA,UACA,aACA,aACA,QACA,OACA,YACA,iBACA,YACA,UACA,eACA,cACA,iBACA,YACA,oBACA,kBACA,QACA,iBACA,eACA,gBACA,kBACA,cACA,gBACA,gBACA,kBACA,cACA,OACA,UACA,YACA,YACA,UACA,eACA,iBACA,aACA,OACA,SACA,cACA,qBACA,SACA,mBACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,gBACA,cACA,iBACA,cACA,eACA,aACA,cACA,WACA,iBACA,oBACA,cACA,qBACA,WACA,eACA,mBACA,oBACA,iBACA,UACA,iBACA,iBACA,cACA,SACA,gBACA,eACA,eACA,aACA,aACA,UACA,oBACA,eACA,YACA,cACA,wBACA,oBAGF1X,EAAMqB,UAAU+V,OAASA,EAp5B1B,CAq5BEpX,GAz5BLsB,EAAOC,QAAU6V,EACjBA,EAAOjW,YAAc,SACrBiW,EAAO9S,QAAU,I,kBCCjB,SAASwT,EAAO9X,IACb,SAAWA,GAMVA,EAAMqB,UAAN,MAA2B,CACzByC,QAAS,CACPE,QAAS,aAEXD,OAAQ,CACNC,QAAS,UACTS,QAAQ,GAEV,iBAAkB,CAChBT,QAAS,mBACThC,MAAO,UAET,iBAAkB,CAChBgC,QAAS,OACThC,MAAO,aAETmC,OAAQ,MACRC,SAAU,sCACVC,YAAa,QACbmB,SAAU,QACV,eAAgB,CACdxB,QAAS,eACThC,MAAO,SA5BZ,CA+BEhC,GAnCLsB,EAAOC,QAAUuW,EACjBA,EAAO3W,YAAc,SACrB2W,EAAOxT,QAAU,I,kBCCjB,SAASyT,EAAuB/X,GAC9BA,EAAMqB,UAAU,4BAA8BrB,EAAMqB,UAAU6D,OAC5D,QACA,CACEpB,QAAS,SACTI,QACE,oEACFE,SAAU,kDAGPpE,EAAMqB,UAAU,4BAA4B,cACnDrB,EAAMqB,UAAU8D,aAAa,2BAA4B,UAAW,CAClE6R,KAAM,CACJhT,QACE,gGACFC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNc,SAAU,CACRxB,QAAS,yDACTU,OAAQ,CACNN,SAAU,IACVF,QAAS,OACTG,YAAa,aAGjBA,YAAa,OAGjB2T,OAAQ,CAENhU,QAAS,kDACTC,YAAY,EACZjC,MAAO,UACP0C,OAAQ,CACNL,YAAa,QAtCrB/C,EAAOC,QAAUwW,EACjBA,EAAuB5W,YAAc,yBACrC4W,EAAuBzT,QAAU,I,kBCCjC,SAAS2T,EAAKjY,IACX,SAAWA,GACVA,EAAMqB,UAAU4W,KAAOjY,EAAMqB,UAAU6D,OAAO,aAAc,IAC5DlF,EAAMqB,UAAU8D,aAAa,OAAQ,UAAW,CAC9CtD,KAAM,CACJ,CACEmC,QACE,sEACFhC,MAAO,UAIbhC,EAAMqB,UAAU4W,KAAK,qBAAqBjU,QACxC,8KACKhE,EAAMqB,UAAU4W,KAAhB,UACPjY,EAAMqB,UAAU8D,aAAa,OAAQ,WAAY,CAC/C,mBAAoB,CAClBnB,QAAS,YACThC,MAAO,iBAGNkW,MAAMC,QAAQnY,EAAMqB,UAAU4W,KAAK/T,WACtClE,EAAMqB,UAAU4W,KAAK/T,QAAU,CAAClE,EAAMqB,UAAU4W,KAAK/T,UAEvDlE,EAAMqB,UAAU4W,KAAK/T,QAAQkU,QAC3B,CACEpU,QAAS,kDACTC,YAAY,GAEd,CACED,QACE,wGACFC,YAAY,IA/BjB,CAkCEjE,GAtCLsB,EAAOC,QAAU0W,EACjBA,EAAK9W,YAAc,OACnB8W,EAAK3T,QAAU,I,kBCCf,SAAS+T,EAAQrY,GACfA,EAAMqB,UAAUgX,QAAU,CACxB,gBAAiB,CACfrU,QAAS,0BACThC,MAAO,UAET+B,OAAQ,CACNC,QACE,gGACFU,OAAQ,CACNZ,QAAS,CACPE,QAAS,wBACTC,YAAY,KAIlBH,QAAS,CACPE,QAAS,MACTS,QAAQ,GAEVa,QAAS,+BACTnB,OAAQ,yDACRD,QAAS,CAEP,oEACA,gIACA,4VACA,+JAEFE,SAAU,CACR,qDACA,CAEEJ,QAAS,sBACTC,YAAY,IAGhBI,YAAa,sBAxCjB/C,EAAOC,QAAU8W,EACjBA,EAAQlX,YAAc,UACtBkX,EAAQ/T,QAAU,I,kBCClB,SAASgU,EAAOtY,GACdA,EAAMqB,UAAUiX,OAAStY,EAAMqB,UAAU6D,OAAO,QAAS,CACvDpB,QAAS,CACP,CACEE,QAAS,kCACTC,YAAY,GAEd,CACED,QAAS,mBACTC,YAAY,IAGhBF,OAAQ,CACNC,QACE,wIACFS,QAAQ,GAEV,aAAc,CACZT,QACE,yHACFC,YAAY,EACZS,OAAQ,CACNN,SAAU,QACVC,YAAa,OAGjBH,QACE,ooBACFC,OAAQ,CACN,iCACA,uBACA,oDACA,kCAEFC,SACE,6GAEJpE,EAAMqB,UAAU8D,aAAa,SAAU,UAAW,CAChD+K,aAAc,CACZlM,QAAS,gBACTC,YAAY,EACZjC,MAAO,WACP0C,OAAQ,CACN4E,UAAW,CACTtF,QAAS,8CACTC,YAAY,EACZjC,MAAO,eAKfhC,EAAMqB,UAAU8D,aAAa,SAAU,cAAe,CACpD,yBAA0B,CACxBnB,QAAS,wBACThC,MAAO,aAGXhC,EAAMqB,UAAU8D,aAAa,SAAU,SAAU,CAC/Ca,WAAY,CACVhC,QAAS,YACTU,OAAQ,CACNL,YAAa,YACb,aAAc,CACZL,QAAS,+BACTC,YAAY,GAEd,qBAAsB,CACpBD,QAAS,UACTU,OAAQ1E,EAAMqB,UAAUiX,YAvElChX,EAAOC,QAAU+W,EACjBA,EAAOnX,YAAc,SACrBmX,EAAOhU,QAAU,I,sBCHjB,IAAI8P,EAA4B9T,EAAQ,OAIxC,SAASiY,EAAIvY,GACXA,EAAMiB,SAASmT,GACd,SAAWpU,GAMV,IAHA,IAAIwY,EACF,iGACG9R,OACIqC,EAAI,EAAGA,EAAI,EAAGA,IACrByP,EAAWA,EAAS7R,QAAQ,WAAW,WACrC,OAAO6R,KAGXA,EAAWA,EAAS7R,QAAQ,UAAW,UAAUD,QACjD,IAAI6R,EAAM,CACRzU,QAAS,kBACTC,OAAQ,CACN,CAEEC,QAAS,iCACTS,QAAQ,GAEV,CACET,QAASe,OACP,+DAA+D2B,OAAOC,QACpE,WACA,WACE,OAAO6R,MAIb/T,QAAQ,EACRC,OAAQ,CACNoH,cAAe,CACb9H,QAASe,OACP,oDAAoD2B,OAAOC,QACzD,WACA,WACE,OAAO6R,MAIbvU,YAAY,EACZS,OAAQ,CACN,4BAA6B,CAC3BV,QAAS,YACThC,MAAO,eAETkH,KAAM,UAMhBhF,QAAS,aACToB,QAAS,qBACT,mBAAoB,CAClBtB,QAAS,uBACTC,YAAY,EACZjC,MAAO,YAET0D,SAAU,iBACVvB,OAAQ,oBACRC,SACE,4EACFC,YAAa,iBAEfkU,EAAIxU,OAAO,GAAGW,OAAOoH,cAAcpH,OAAOwE,KAAOqP,EACjDvY,EAAMqB,UAAUkX,IAAM,CACpB,cAAe,CAEbvU,QAAS,eACThC,MAAO,WAET,gBAAiB,CACfgC,QAAS,cACTU,OAAQ,CACN4E,UAAW,CACTtF,QAAS,uBACTC,YAAY,EACZjC,MAAO,WAETqC,YAAa,cACblB,QAAS,CACPa,QAAS,eACThC,MAAO,MACP0C,OAAQ6T,KAId,oBAAqB,CACnBvU,QAAS,kBACTU,OAAQ,CACNL,YAAa,YACblB,QAAS,CACPa,QAAS,eACThC,MAAO,MACP0C,OAAQ6T,MAKhBvY,EAAMwD,MAAM2F,IAAI,mBAAmB,SAAUpG,GAE3C,IAAIiB,EAAUe,OACZ,mEAAmE2B,OAAOC,QACxE,WACA,WACE,OAAO6R,KAGX,MAEFxY,EAAMqB,UAAU,qBAAqBmT,kBACnCzR,EACA,MACAiB,MAGJhE,EAAMwD,MAAM2F,IAAI,kBAAkB,SAAUpG,GAC1C/C,EAAMqB,UAAU,qBAAqBoT,qBAAqB1R,EAAK,UAtHlE,CAwHE/C,GA7HLsB,EAAOC,QAAUgX,EACjBA,EAAIpX,YAAc,MAClBoX,EAAIjU,QAAU,I,kBCCd,SAASmU,EAAIzY,GAGXA,EAAMqB,UAAUoX,IAAM,CACpBlN,MAAO,CACLvH,QAAS,sCACTS,QAAQ,EACRC,OAAQ,CACN+T,IAAK,CACHzU,QAAS,0CACTC,YAAY,EACZS,OAAQ,MAEVL,YAAa,UAGjBP,QAAS,CACPE,QAAS,MACTS,QAAQ,GAEVV,OAAQ,CACNC,QACE,sFACFC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNgU,aAAc,CACZ1U,QAAS,YACTC,YAAY,EACZjC,MAAO,iBAIbkC,QACE,wMACFoB,QAAS,qBACTI,SAAU,wBACVvB,OAAQ,CACNH,QACE,uFACFC,YAAY,GAEdyU,aAAc,CACZ1U,QAAS,YACTC,YAAY,EACZjC,MAAO,eAEToC,SAAU,kCACVC,YAAa,iBAEfrE,EAAMqB,UAAUoX,IAAIlN,MAAM7G,OAAO+T,IAAI/T,OAAS1E,EAAMqB,UAAUoX,IArDhEnX,EAAOC,QAAUkX,EACjBA,EAAItX,YAAc,MAClBsX,EAAInU,QAAU,I,kBCCd,SAASqU,EAAM3Y,GACbA,EAAMqB,UAAUsX,MAAQ,CACtB7U,QAAS,kBACTC,OAAQ,CACNC,QAAS,iBACTS,QAAQ,GAEVP,QAAS,wBACTqD,SAAU,UACVqR,SAAU,CACR5U,QAAS,QACThC,MAAO,eAGTqC,YAAa,KAjBjB/C,EAAOC,QAAUoX,EACjBA,EAAMxX,YAAc,QACpBwX,EAAMrU,QAAU,I,iBCChB,SAASuU,EAAS7Y,GAChBA,EAAMqB,UAAUwX,SAAW,CACzB/U,QAAS,MACTC,OAAQ,CACNC,QACE,6EACFS,QAAQ,GAEV,aAAc,CAMZT,QACE,6IACFC,YAAY,GAEdC,QACE,4QACFwB,SAAU,2BACVF,SAAU,QACVrB,OAAQ,CACN,4FACA,0BAEF+B,SAAU,qBACVZ,QAAS,qBACTlB,SAAU,2CACVC,YAAa,iBAhCjB/C,EAAOC,QAAUsX,EACjBA,EAAS1X,YAAc,WACvB0X,EAASvU,QAAU,I,kBCCnB,SAASwU,EAAO9Y,GACdA,EAAMqB,UAAUyX,OAAS,CACvB,aAAc,CAEZ9U,QACE,mFACFC,YAAY,EACZS,OAAQ,CACNiI,QAAS,CACP3I,QAAS,yDACThC,MAAO,cAIboB,IAAK,CAEHY,QACE,gFACFC,YAAY,EACZjC,MAAO,UAET8L,MAAO,CACL9J,QAAS,gBACTC,YAAY,EACZjC,MAAO,UAET2K,QAAS,CACP3I,QAAS,uDACThC,MAAO,aA/BbV,EAAOC,QAAUuX,EACjBA,EAAO3X,YAAc,SACrB2X,EAAOxU,QAAU,I,kBCCjB,SAASyU,EAAQ/Y,IACd,SAAWA,GACV,IAAIgZ,EAAW,uCAAuCtS,OACtD1G,EAAMqB,UAAU0X,QAAU,CACxBE,SAAU,CACRjV,QAAS,sBACThC,MAAO,UAET8B,QAAS,CACPE,QAAS,gBACTC,YAAY,GAEdb,IAAK,CACHY,QAAS,iBACTC,YAAY,GAEdiV,QAAS,CACPlV,QACE,6vEACFC,YAAY,EACZS,OAAQ,CACNwF,UAAW,CACTlG,QAAS,cACTC,YAAY,GAEdC,QAAS,eAGbiV,SAAU,CACRnV,QACE,89NACFC,YAAY,EACZS,OAAQ,CACNwF,UAAW,CACTlG,QAAS,cACTC,YAAY,GAEdC,QAAS,eAGb,aAAc,CAEZF,QAASe,OAAO,IAAMiU,EAAW,OAASA,EAAW,MACrD/U,YAAY,EACZS,OAAQ,CACN0U,QAAS,CACPpV,QAAS,UACThC,MAAO,YAETqX,GAAI,CACFrV,QAAS,iBACThC,MAAO,UAETqC,YAAa,OAGjB,aAAc,CACZL,QAASe,OAAOiU,GAChBtU,OAAQ,CACN4U,GAAI,CACFtV,QAAS,iBACThC,MAAO,YAETqC,YAAa,OAGjBoO,OAAQ,CACNzO,QACE,mtKACFC,YAAY,GAEdF,OAAQ,CACNC,QAAS,8CACTU,OAAQ,CACN0U,QAAS,CACPpV,QAAS,UACThC,MAAO,cAIboX,QAAS,CACPpV,QAAS,UACThC,MAAO,aAjFZ,CAoFEhC,GAxFLsB,EAAOC,QAAUwX,EACjBA,EAAQ5X,YAAc,UACtB4X,EAAQzU,QAAU,I,kBCClB,SAASiV,EAAIvZ,GACXA,EAAMqB,UAAUkY,IAAM,CAUpBzV,QAAS,QAIT0V,QAAS,gBACT5L,SAAU,SAIV7J,OAAQ,mCAMRgC,QAAS,CACP/B,QAAS,iBACTU,OAAQ,CAONgH,UAAW,cAgBfgI,MAAO,YAWP,cAAe,oBAjEnBpS,EAAOC,QAAUgY,EACjBA,EAAIpY,YAAc,MAClBoY,EAAIjV,QAAU,I,sBCHd,IAAI8H,EAAa9L,EAAQ,OAIzB,SAASmZ,EAAKzZ,GACZA,EAAMiB,SAASmL,GACfpM,EAAMqB,UAAUoY,KAAOzZ,EAAMqB,UAAU6D,OAAO,IAAK,CACjDhB,QACE,ghCAPN5C,EAAOC,QAAUkY,EACjBA,EAAKtY,YAAc,OACnBsY,EAAKnV,QAAU,I,kBCCf,SAASoV,EAAI1Z,GACXA,EAAMqB,UAAUsY,kBAAoB3Z,EAAMqB,UAAUqY,IAClD1Z,EAAMqB,UAAU6D,OAAO,QAAS,CAC9BhB,QACE,8GACFC,OACE,wEACFC,SACE,mFACF8B,SACE,s5LACFV,SACE,6rDAfRlE,EAAOC,QAAUmY,EACjBA,EAAIvY,YAAc,MAClBuY,EAAIpV,QAAU,I,kBCCd,SAASsV,EAAG5Z,GAEVA,EAAMqB,UAAUuY,GAAK,CACnB9V,QAAS,CACPE,QAAS,MACTS,QAAQ,GAEV,iBAAkB,CAChBT,QAAS,kCACTC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNoH,cAAe,CACb9H,QACE,0EACFC,YAAY,EACZS,OAAQ,CACNP,OAAQ,kBACRqB,SAAU,UACV,4BAA6B,CAC3BxB,QAAS,YACThC,MAAO,eAET+J,WAAY,CACV/H,QAAS,UACTU,OAAQ,QAIdX,OAAQ,YAGZG,QAAS,kBACToB,QAAS,qBACT,mBAAoB,CAElBtB,QACE,mFACFhC,MAAO,WAET0D,SAAU,wBACVQ,SACE,kLACF/B,OAAQ,YACRC,SAAU,qBACVC,YAAa,eAEfrE,EAAMqB,UAAUuY,GAAG,kBAAkBlV,OAArC,cAA6DA,OAA7D,WAEEA,OAAS1E,EAAMqB,UAAUuY,GAC3B5Z,EAAMqB,UAAUwY,IAAM7Z,EAAMqB,UAAUuY,GArDxCtY,EAAOC,QAAUqY,EACjBA,EAAGzY,YAAc,KACjByY,EAAGtV,QAAU,CAAC,Q,kBCCd,SAASwV,EAAG9Z,GACVA,EAAMqB,UAAUyY,GAAK9Z,EAAMqB,UAAU6D,OAAO,QAAS,CACnDnB,OAAQ,CACNC,QAAS,qCACTS,QAAQ,GAEVP,QACE,sKACFoB,QAAS,gCACTnB,OAAQ,gEACRC,SACE,wFACFsD,QACE,oMAEG1H,EAAMqB,UAAUyY,GAAG,cAlB5BxY,EAAOC,QAAUuY,EACjBA,EAAG3Y,YAAc,KACjB2Y,EAAGxV,QAAU,I,kBCCb,SAASyV,EAAQ/Z,GACfA,EAAMqB,UAAU0Y,QAAU,CACxBjW,QAAS,MACTkW,YAAa,CACXhW,QACE,mEACFS,QAAQ,EACRzC,MAAO,SACP0C,OAAQ,CACN,oBAAqB,CACnBV,QAAS,kCACTC,YAAY,EACZS,OAAQ1E,EAAMqB,UAAU4Y,YAI9BlW,OAAQ,CACNC,QAAS,iDACTS,QAAQ,GAEVN,OAAQ,2CACRmB,QAAS,qBACTE,SAAU,eACV8D,UAAW,CACTtF,QAAS,cACThC,MAAO,YAET,YAAa,CACXgC,QAAS,+DACTS,QAAQ,GAEV,aAAc,CACZT,QAAS,0BACThC,MAAO,cAETkY,OAAQ,sCACRhU,SAAU,qBACV,aAAc,CACZlC,QACE,kFACFC,YAAY,GAEdkW,SAAU,CACRnW,QAAS,+CACTC,YAAY,EACZjC,MAAO,YAET,sBAAuB,CACrBgC,QAAS,8BACTC,YAAY,EACZjC,MAAO,YAET,mBAAoB,CAClBgC,QAAS,2BACTC,YAAY,EACZjC,MAAO,YAETkC,QACE,uIACFE,SAAU,eACV,iBAAkB,eAClBgW,OAAQ,eACR/V,YAAa,iBACbkD,SAAU,OAEZvH,EAAMwD,MAAM2F,IAAI,kBAAkB,SAA8BpG,GAC9D,GAAqB,YAAjBA,EAAIR,SAwFR,IA/EA,IAAI8X,EAActX,EAAIJ,OAAO2R,QAAO,SAAUgG,GAC5C,MACmB,kBAAVA,GACQ,YAAfA,EAAMzY,MACS,WAAfyY,EAAMzY,QAGN0Y,EAAe,EAwEZA,EAAeF,EAAYlY,QAAU,CAC1C,IAAIqY,EAAaH,EAAYE,KAC7B,GAAwB,YAApBC,EAAW3Y,MAA6C,aAAvB2Y,EAAWrX,QAAwB,CAEtE,IAAIsX,EAAiB,GACrB,GACEC,EAAY,CAAC,sBAAuB,iBACZ,MAAxBC,EAAS,GAAGxX,QACZ,CAEAoX,GAAgB,EAChB,IAAIK,EAAgBC,EAAmB,OAAQ,QAC/C,IAAuB,IAAnBD,EACF,SAEF,KAAOL,EAAeK,EAAeL,IAAgB,CACnD,IAAIO,EAAIH,EAAS,GACF,aAAXG,EAAEjZ,OACJkZ,EAASD,EAAG,kBACZL,EAAehY,KAAKqY,EAAE3X,UAG1BoX,EAAeK,EAAgB,EAEjC,GACEF,EAAY,CAAC,cAAe,oBACJ,MAAxBC,EAAS,GAAGxX,UAEZoX,IACAQ,EAASJ,EAAS,GAAI,qBAClBF,EAAetY,OAAS,GAAG,CAC7B,IAAI6Y,EAAcH,EAAmB,OAAQ,QAC7C,IAAqB,IAAjBG,EACF,SAEF,IAAK,IAAIjS,EAAIwR,EAAcxR,EAAIiS,EAAajS,IAAK,CAC/C,IAAIkS,EAAWZ,EAAYtR,GAEP,aAAlBkS,EAASpZ,MACT4Y,EAAeS,QAAQD,EAAS9X,UAAY,GAE5C4X,EAASE,EAAU,qBA1G/B,SAASN,EAASQ,GAChB,OAAOd,EAAYE,EAAeY,GASpC,SAAST,EAAYjQ,EAAO0Q,GAC1BA,EAASA,GAAU,EACnB,IAAK,IAAIpS,EAAI,EAAGA,EAAI0B,EAAMtI,OAAQ4G,IAAK,CACrC,IAAIuR,EAAQK,EAAS5R,EAAIoS,GACzB,IAAKb,GAASA,EAAMzY,OAAS4I,EAAM1B,GACjC,OAAO,EAGX,OAAO,EAaT,SAAS8R,EAAmBO,EAAMC,GAEhC,IADA,IAAIC,EAAc,EACTvS,EAAIwR,EAAcxR,EAAIsR,EAAYlY,OAAQ4G,IAAK,CACtD,IAAIuR,EAAQD,EAAYtR,GACpB5F,EAAUmX,EAAMnX,QACpB,GAAmB,gBAAfmX,EAAMzY,MAA6C,kBAAZsB,EACzC,GAAIiY,EAAKpH,KAAK7Q,GACZmY,SACK,GAAID,EAAMrH,KAAK7Q,IAEA,MADpBmY,EAEE,OAAOvS,EAKf,OAAQ,EASV,SAASgS,EAAST,EAAOtY,GACvB,IAAIsC,EAAUgW,EAAMtY,MACfsC,EAEO4T,MAAMC,QAAQ7T,KACxBgW,EAAMtY,MAAQsC,EAAU,CAACA,IAFzBgW,EAAMtY,MAAQsC,EAAU,GAI1BA,EAAQ7B,KAAKT,OA3JnBV,EAAOC,QAAUwY,EACjBA,EAAQ5Y,YAAc,UACtB4Y,EAAQzV,QAAU,I,kBCClB,SAASiX,EAAOvb,GACdA,EAAMqB,UAAUka,OAASvb,EAAMqB,UAAU6D,OAAO,QAAS,CACvDnB,OAAQ,CACN,CAEEC,QACE,kFACFS,QAAQ,GAEV,CAGET,QAAS,oCACTS,QAAQ,IAGZP,QACE,6WACFC,OACE,6FACFC,SAAU,CACRJ,QACE,oJACFC,YAAY,GAEdI,YAAa,sBAEfrE,EAAMqB,UAAU8D,aAAa,SAAU,SAAU,CAC/CkG,QAAS,CACPrH,QAAS,OACThC,MAAO,aAGXhC,EAAMqB,UAAU8D,aAAa,SAAU,cAAe,CACpD,cAAe,0DAEjBnF,EAAMqB,UAAU8D,aAAa,SAAU,WAAY,CACjDa,WAAY,CACVhC,QAAS,eACTC,YAAY,EACZjC,MAAO,iBAGXhC,EAAMwD,MAAM2F,IAAI,QAAQ,SAAUpG,GAChC,GAAqB,WAAjBA,EAAIR,UAAsC,WAAbQ,EAAIlB,KAAmB,CACtD,IAAI0K,EAAYxJ,EAAII,QAAQ1B,MAAM,GAClC,GAAiB,KAAb8K,EAAkB,CACpB,IAAIvI,EAAU,kCACI,MAAduI,IACFvI,EAAU,mCAEZjB,EAAII,QAAQ1B,MAAQsB,EAAII,QAAQ1B,MAC7BkF,QAAQ,QAAS,KACjBA,QAAQ,SAAU,KACrB5D,EAAII,QAAUnD,EAAMwB,UAAUuB,EAAII,QAAQ1B,MAAO,CAC/CsK,WAAY,CACV/H,QAASA,EACTC,YAAY,EACZS,OAAQ1E,EAAMqB,UAAUka,UAG5BxY,EAAIM,QAAQZ,KAAmB,MAAd8J,EAAoB,QAAU,gBAhEvDjL,EAAOC,QAAUga,EACjBA,EAAOpa,YAAc,SACrBoa,EAAOjX,QAAU,I,sBCHjB,IAAIqK,EAAgBrO,EAAQ,OAI5B,SAASkb,EAAKxb,GACZA,EAAMiB,SAAS0N,GAOd,SAAW3O,GACVA,EAAMqB,UAAUma,KAAO,CAErB,oBAAqB,CACnBxX,QACE,gEACFC,YAAY,EACZjC,MAAO,WAET,iBAAkB,CAChB,CACEgC,QACE,6GACFC,YAAY,EACZS,OAAQ1E,EAAMqB,UAAUoa,MAE1B,CACEzX,QACE,sFACFC,YAAY,EACZS,OAAQ1E,EAAMqB,UAAUoa,OAI5BnH,OAAQ,CACNtQ,QACE,iFACFC,YAAY,EACZS,OAAQ,CACN,cAAe,CACbV,QAAS,WACThC,MAAO,cAIbxB,OAAQ,CACNwD,QAAS,4BACTC,YAAY,EACZS,OAAQ1E,EAAMqB,UAAUb,QAE1Bkb,QAAS,CACP1X,QAAS,oCACTC,YAAY,GAEdb,IAAK,CAEHY,QACE,sGACFC,YAAY,EACZS,OAAQ,CACNpB,WAAY,CACV,CAGEU,QAAS,mCACTC,YAAY,EACZS,OAAQ1E,EAAMqB,UAAUoa,MAE1B,CACEzX,QAAS,YACTU,OAAQ,CACN,aAAc,CACZV,QAAS,0CACTC,YAAY,GAEd,YAAa,4BACbI,YAAa,WAGjB,CACEL,QAAS,aACTU,OAAQ1E,EAAMqB,UAAUoa,OAG5BpX,YAAa,SAGjBsX,KAAM,CACJ3X,QAAS,0CACTC,YAAY,EACZS,OAAQ1E,EAAMqB,UAAUoa,MAG1B3P,cAAe,CACb9H,QAAS,aACTU,OAAQ,CACN6H,UAAW,CACTvI,QAAS,WACThC,MAAO,eAETkH,KAAMlJ,EAAMqB,UAAUoa,OAG1BpX,YAAa,CACXL,QAAS,kCACTC,YAAY,IAoBhB,IAjBA,IAEI2X,EAAU,CACZ,MACA,CACEtH,OAAQ,SACR/R,SAAU,gBAEZ,MACA,aACA,OACA,WACA,OACA,OACA,WAEEsZ,EAAc,GACT9S,EAAI,EAAGC,EAAI4S,EAAQzZ,OAAQ4G,EAAIC,EAAGD,IAAK,CAC9C,IAAIuL,EAASsH,EAAQ7S,GACrBuL,EACoB,kBAAXA,EACH,CACEA,OAAQA,EACR/R,SAAU+R,GAEZA,EACFtU,EAAMqB,UAAUiT,EAAO/R,YACzBsZ,EAAY,UAAYvH,EAAOA,QAAU,CACvCtQ,QAASe,OA3Bb,uGA4BqB4B,QAAQ,mBAAmB,WACxC,OAAO2N,EAAOA,WAGlBrQ,YAAY,EACZS,OAAQ,CACN,cAAe,CACbV,QAAS,WACThC,MAAO,YAETkH,KAAMlJ,EAAMqB,UAAUiT,EAAO/R,aAKrCvC,EAAMqB,UAAU8D,aAAa,OAAQ,SAAU0W,GA9IhD,CA+IE7b,GA1JLsB,EAAOC,QAAUia,EACjBA,EAAKra,YAAc,OACnBqa,EAAKlX,QAAU,I,sBCHf,IAAI8P,EAA4B9T,EAAQ,OAIxC,SAASwb,EAAW9b,GAClBA,EAAMiB,SAASmT,GACd,SAAWpU,GACVA,EAAMqB,UAAUya,WAAa,CAC3BhY,QAAS,oBACTyI,UAAW,CACTvI,QAAS,qBACThC,MAAO,eAET+B,OAAQ,mCACRI,OAAQ,iEACRmB,QAAS,qBACTuM,MAAO,CACL7N,QAAS,gDACTC,YAAY,EACZjC,MAAO,WAET+Z,SAAU,CACR/X,QAAS,aACTU,OAAQ,CACNL,YAAa,QACbmB,SAAU,YAGdnB,YAAa,qCACbmB,SAAU,wCAEZxF,EAAMwD,MAAM2F,IAAI,mBAAmB,SAAUpG,GAE3C/C,EAAMqB,UAAU,qBAAqBmT,kBACnCzR,EACA,aAHsB,6CAO1B/C,EAAMwD,MAAM2F,IAAI,kBAAkB,SAAUpG,GAC1C/C,EAAMqB,UAAU,qBAAqBoT,qBACnC1R,EACA,iBAGJ/C,EAAMqB,UAAU2a,IAAMhc,EAAMqB,UAAUya,WAvCvC,CAwCE9b,GA7CLsB,EAAOC,QAAUua,EACjBA,EAAW3a,YAAc,aACzB2a,EAAWxX,QAAU,CAAC,Q,kBCCtB,SAAS2X,EAAQjc,GACfA,EAAMqB,UAAU4a,QAAU,CACxBnY,QAAS,CACPE,QACE,4FACFC,YAAY,GAEdsB,KAAM,CACJvB,QACE,sMACFhC,MAAO,UAET+B,OAAQ,CACNC,QAAS,+BACTS,QAAQ,GAEVP,QACE,wHACF,mBAAoB,CAIlBF,QACE,sIACFC,YAAY,EACZS,OAAQ,CACNR,QAAS,qCACTG,YAAa,OAIjBqD,QACE,yoDAEFvD,OAAQ,4DACRC,SAAU,CACR,CAEEJ,QAAS,mCACTS,QAAQ,GAEV,CAEET,QAAS,eACTC,YAAY,GAQd,gFAGFqS,UAAW,CACTtS,QAAS,mCACTU,OAAQ,CACNL,YAAa,OAGjB6B,SAAU,CACRlC,QAAS,kCACTU,OAAQ,CACNL,YAAa,OAGjBA,YAAa,iBAEfrE,EAAMqB,UAAU6a,GAAKlc,EAAMqB,UAAU4a,QAxEvC3a,EAAOC,QAAU0a,EACjBA,EAAQ9a,YAAc,UACtB8a,EAAQ3X,QAAU,CAAC,O,kBCCnB,SAAS6X,EAAKnc,GACZA,EAAMqB,UAAU8a,KAAOnc,EAAMqB,UAAU6D,OAAO,QAAS,CAErDnB,OAAQ,CACNC,QAAS,oCACTS,QAAQ,EACRC,OAAQ,CACNoH,cAAe,CACb9H,QAAS,+BACTC,YAAY,EACZS,OAAQ,CACNoH,cAAe,CACb9H,QAAS,SACThC,MAAO,gBAOjBkC,QACE,wRACFE,SAAU,+DAEZpE,EAAMqB,UAAU8D,aAAa,OAAQ,aAAc,CACjDkB,MAAO,CACLrC,QAAS,oCACTS,QAAQ,KAGZzE,EAAMqB,UAAU8D,aAAa,OAAQ,UAAW,CAC9C+K,aAAc,CACZlM,QAAS,OACThC,MAAO,WAETmK,SAAU,CACRnI,QAAS,SACThC,MAAO,UAEToa,YAAa,CACXpY,QAAS,mBACThC,MAAO,cAGXhC,EAAMqB,UAAU8a,KAAhB,OAA+BzX,OAA/B,cAAuDA,OAAOwE,KAC5DlJ,EAAMqB,UAAU8a,YACXnc,EAAMqB,UAAU8a,KAAK,cAjD9B7a,EAAOC,QAAU4a,EACjBA,EAAKhb,YAAc,OACnBgb,EAAK7X,QAAU,I,kBCCf,SAAS+X,EAAIrc,GACXA,EAAMqB,UAAUgb,IAAM,CACpBvY,QAAS,sCACTwY,QAAS,CACPtY,QAAS,gCACTS,QAAQ,EACRzC,MAAO,UAETkC,QAAS,CACP,CACEF,QACE,sEACFU,OAAQ,CACN7C,KAAM,CACJmC,QAAS,iDACTC,YAAY,EACZjC,MAAO,cAIb,CACEgC,QACE,wGACFU,OAAQ,CACN7C,KAAM,CACJmC,QACE,gGACFC,YAAY,EACZjC,MAAO,cAIb,mBAEFuF,SAAU,CAAC,wBAAyB,qCACpCxD,OAAQ,CACNC,QACE,gGACFS,QAAQ,EACRC,OAAQ,CACNoH,cAAe,CACb9H,QAAS,mDACTC,YAAY,EACZS,OAAQ,CACN7C,KAAM,CACJmC,QACE,sEACFC,YAAY,EACZjC,MAAO,YAETkC,QAAS,2DACTwB,SAAU,YACV3B,OAAQ,CACNC,QAAS,yBACTS,QAAQ,GAEVN,OAAQ,gDACRE,YAAa,2CAKrBF,OAAQ,gDACRmB,QAAS,sBACTjB,YAAa,aAnEjB/C,EAAOC,QAAU8a,EACjBA,EAAIlb,YAAc,MAClBkb,EAAI/X,QAAU,I,sBCHd,IAAI8H,EAAa9L,EAAQ,OAIzB,SAASic,EAAKvc,GACZA,EAAMiB,SAASmL,GACfpM,EAAMqB,UAAUkb,KAAOvc,EAAMqB,UAAU6D,OAAO,IAAK,CAKjD,aAAc,CACZlF,EAAMqB,UAAUiL,EAAE,cAClB,wgBAEFpI,QAAS,CAEP,gyBACA,gHAGFC,OACE,gFACFmB,QAAS,uBAtBbhE,EAAOC,QAAUgb,EACjBA,EAAKpb,YAAc,OACnBob,EAAKjY,QAAU,I,kBCCf,SAASkY,EAAKxc,GACZA,EAAMqB,UAAUmb,KAAO,CACrBtW,SAAU,qBACVpC,QAAS,CACPE,QAAS,OACTS,QAAQ,GAEV,aAAc,CACZ,CACET,QAAS,kCAEX,MAEF0B,SAAU,kDACV3B,OAAQ,CACNC,QAAS,kBACTS,QAAQ,GAEVP,QACE,gOAtBN5C,EAAOC,QAAUib,EACjBA,EAAKrb,YAAc,OACnBqb,EAAKlY,QAAU,I,kBCCf,SAASmY,EAAKzc,GAMZA,EAAMqB,UAAUob,KAAO,CACrBnT,UAAW,CACTtF,QACE,mHACFhC,MAAO,WAETgQ,KAAM,CACJhO,QAAS,aACThC,MAAO,YAETiQ,OAAQ,CACNjO,QAAS,cACThC,MAAO,aArBbV,EAAOC,QAAUkb,EACjBA,EAAKtb,YAAc,OACnBsb,EAAKnY,QAAU,I,kBCCf,SAASoY,EAAK1c,GAMZA,EAAMqB,UAAUqb,KAAO,CACrBpT,UAAW,CACTtF,QAAS,2CACThC,MAAO,WAETgQ,KAAM,CACJhO,QAAS,aACThC,MAAO,YAETiQ,OAAQ,CACNjO,QAAS,cACThC,MAAO,aApBbV,EAAOC,QAAUmb,EACjBA,EAAKvb,YAAc,OACnBub,EAAKpY,QAAU,I,kBCCf,SAASqY,EAAK3c,IACX,SAAWA,GACVA,EAAMqB,UAAUsb,KAAO,CACrB,eAAgB,CACd3Y,QACE,8GACFU,OAAQ,CAENsT,OAAQ,CACNhU,QAAS,YACThC,MAAO,YAGT,iBAAkB,CAChBgC,QAAS,mCACTC,YAAY,EACZjC,MAAO,MACP0C,OAAQ1E,EAAMqB,UAAUub,KAG1B,eAAgB,CACd5Y,QAAS,qBACTC,YAAY,EACZjC,MAAO,cAIb,kBAAmB,CACjBgC,QAAS,yBACTU,OAAQ,CAEN,eAAgB,CACdV,QAAS,iBACThC,MAAO,YAGT,cAAe,CACbgC,QAAS,iBACTC,YAAY,EACZjC,MAAO,UAGT,gBAAiB,CACfgC,QAAS,UACTC,YAAY,EACZjC,MAAO,YAKb,cAAe,CACbgC,QAAS,iBACThC,MAAO,YAGX,IAyBImT,EAzBA0H,EAAQ7c,EAAMqB,UACdyb,EAAgB,CAClB,yBAA0BD,EAAM/S,WAChC,mBAAoB+S,EAAME,MAAQF,EAAM/S,WACxC,kBAAmB+S,EAAMzX,IACzB,WAAYyX,EAAMzX,IAClB,YAAayX,EAAMjL,KACnB,WAAYiL,EAAMpc,KAEhBuc,EAAc,CAChB,oBAAoB,EACpB,mBAAmB,GAQrB,SAASC,EAAiBC,GACxB,IAAIC,EAASD,EAAYvW,QAAQ,YAAa,IAE9C,MAAO,MAAQuW,EAAc,KADT,wBAA0BC,EAAS,gBACJ,IAIrD,IAAK,IAAID,KAAeJ,EACtB,GAAIA,EAAcI,GAAc,CAC9B/H,EAAUA,GAAW,GACrB,IAAInR,EAAUgZ,EAAYE,GACtBD,EAAiBC,GACjBA,EACJ/H,EAAQ+H,EAAYvW,QAAQ,MAAO,MAAQ,CACzC3C,QAASe,OACP,qBACEf,EACA,qDACF,KAEFC,YAAY,EACZS,OAAQoY,EAAcI,IAIxB/H,GACFnV,EAAMqB,UAAU8D,aAAa,OAAQ,cAAegQ,GAnGvD,CAqGEnV,GAzGLsB,EAAOC,QAAUob,EACjBA,EAAKxb,YAAc,OACnBwb,EAAKrY,QAAU,I,kBCCf,SAAS8Y,EAAUpd,GAGjBA,EAAMqB,UAAU+b,UAAY,CAC1BtZ,QAAS,2BACTC,OAAQ,CACNC,QAAS,0CACTS,QAAQ,GAEVN,OAAQ,mEACRD,QACE,mSACFwB,SACE,sIACFO,MAAO,cACP7B,SAAU,wDACVC,YAAa,eAnBjB/C,EAAOC,QAAU6b,EACjBA,EAAUjc,YAAc,YACxBic,EAAU9Y,QAAU,I,kBCCpB,SAAS+Y,EAAKrd,GACZA,EAAMqB,UAAUgc,KAAO,CACrBvZ,QAAS,MACTC,OAAQ,CACNC,QAAS,2DACTS,QAAQ,GAEVN,OAAQ,4DACR,kBAAmB,CACjBH,QACE,kRACFhC,MAAO,YAETsH,UAAW,CACTtF,QAAS,QACThC,MAAO,WAETkC,QACE,mLACFwB,SAAU,mCACVtB,SACE,8GACFC,YAAa,gBAzBjB/C,EAAOC,QAAU8b,EACjBA,EAAKlc,YAAc,OACnBkc,EAAK/Y,QAAU,I,kBCCf,SAASgZ,EAAiBtd,IAGvB,SAAWA,GAMV,SAAS8O,EAAOpI,EAAQoH,GACtB,OAAIA,GAAS,EACJ,KAAKpH,OAELA,EAAOC,QAAQ,WAAW,WAC/B,OAAOmI,EAAOpI,EAAQoH,EAAQ,MAIpC,IAAIyP,EAAgB,6BAChB1X,EAAS,CACX7B,QAAS,KACTS,QAAQ,EACRzC,MAAO,YAEL+B,EAAS,CACXC,QAASuZ,EACT9Y,QAAQ,EACRC,OAAQ,CACNmB,OAAQA,IAGR2X,EAAiB1O,EACnB,8CAA8CpI,OAAOC,QACnD,UACA,WACE,OAAO4W,EAAc7W,UAGzB,GAEE+W,EAAgB,CAClBzZ,QAASe,OAAOyY,GAChB9Y,OAAQ,CACNgZ,QAAS,CACP1Z,QAAS,sBACTC,YAAY,EACZS,OAAQ,MAEV,oBAAqB,CACnBV,QAAS,IACThC,MAAO,iBAIbhC,EAAMqB,UAAU,sBAAwB,CACtCsJ,SAAU,CACR3G,QAASe,OAAOyY,GAChB/Y,QAAQ,EACRC,OAAQ,CACNvB,QAAS,CACPa,QAAS,sBACTC,YAAY,EACZS,OAAQ,CACN,gBAAiB,CACfV,QAAS,oBACTC,YAAY,GAEd,eAAgB,CAEdD,QAAS,0CACTC,YAAY,EACZS,OAAQ,CACNL,YAAa,KACbM,MAAO,CACLX,QAAS,mDACTC,YAAY,EACZS,OAAQ,CACNN,SAAU,aACVD,OAAQ,QAGZ+E,KAAM,OAGV,eAAgB,CAEdlF,QACE,4DACFC,YAAY,EACZS,OAAQ,CACNyW,OAAQ,iBACR,iBAAkBsC,EAClBzT,SAAU,CACRhG,QAAS,mBACTU,OAAQ,CACNR,QAAS,wCAKjB,eAAgB,CAEdF,QAAS,0CACTC,YAAY,EACZS,OAAQ,CACN,iBAAkB+Y,EAClBzT,SAAU,CACRhG,QAAS,cACTU,OAAQ,CACNR,QAAS,cAKjBA,QAAS,6CACT,WAAY,CACVF,QAAS,qDACThC,MAAO,WAET,eAAgB,CACdgC,QAAS,sBACTC,YAAY,GAEd,YAAa,CACXD,QACE,oEACFC,YAAY,GAEd,iBAAkB,CAChBD,QAASe,OACP,mBAAmB2B,OACjBoI,EAAO,sCAAsCpI,OAAQ,GACrD,KAEJzC,YAAY,EACZjC,MAAO,UAETqC,YAAa,MAGjB,qBAAsB,CACpBL,QAAS,IACThC,MAAO,cAIb6D,OAAQA,EACR9B,OAAQA,GAEV0Z,EAAc/Y,OAAOgZ,QAAQhZ,OAAS1E,EAAMqB,UAAU,sBACtDrB,EAAMqB,UAAU,sBAAsBsJ,SAASjG,OAAOvB,QAAQuB,OAC5D,gBACAA,OAAOwE,KAAOlJ,EAAMqB,UAAU,sBArJjC,CAsJErB,GA5JLsB,EAAOC,QAAU+b,EACjBA,EAAiBnc,YAAc,mBAC/Bmc,EAAiBhZ,QAAU,I,sBCH3B,IAAIqZ,EAAmBrd,EAAQ,OAI/B,SAASsd,EAAM5d,GACbA,EAAMiB,SAAS0c,GACf3d,EAAMqB,UAAUuc,MAAQ5d,EAAMqB,UAAU6D,OAAO,UAAW,CACxDpB,QAAS,CACPE,QAAS,wCAEXE,QACE,kTACF,mBAAoB,CAClBF,QAAS,oDACTC,YAAY,GAEdyD,aAASzH,IAEXD,EAAMqB,UAAUwc,IAAM7d,EAAMqB,UAAUuc,MAjBxCtc,EAAOC,QAAUqc,EACjBA,EAAMzc,YAAc,QACpByc,EAAMtZ,QAAU,CAAC,Q,kBCCjB,SAASwZ,EAAM9d,GACbA,EAAMqB,UAAUyc,MAAQ,CACtBha,QAAS,CACP,CACEE,QACE,gFACFC,YAAY,GAEd,CACED,QAAS,mBACTC,YAAY,EACZQ,QAAQ,IAGZV,OAAQ,CACNC,QAAS,iDACTS,QAAQ,GAEV,aACE,yPACFP,QACE,qPACFsB,SACE,+HACFyE,OAAQ,kCACR9F,OACE,oIACFmB,QAAS,0BACTI,SAAU,YACVtB,SACE,uFACFC,YAAa,QACbxC,KAAM,CACJmC,QAAS,IACThC,MAAO,aArCbV,EAAOC,QAAUuc,EACjBA,EAAM3c,YAAc,QACpB2c,EAAMxZ,QAAU,I,eCChB,SAASyZ,EAAO/d,IACb,SAAWA,GACVA,EAAMqB,UAAU0c,OAAS,CAEvBja,QAAS,QACTka,MAAO,CACLha,QAAS,0BACThC,MAAO,SACP0C,OAAQ,CACNN,SAAU,cACViC,MAAO,CACLrC,QAAS,wBACTC,YAAY,GAEdI,YAAa,QAInBrE,EAAMqB,UAAU4c,UAAYje,EAAMqB,UAAU0c,OAC5C/d,EAAMqB,UAAU6c,SAAWle,EAAMqB,UAAU0c,OAC3C/d,EAAMqB,UAAU8c,UAAYne,EAAMqB,UAAU0c,OAnB7C,CAoBE/d,GAxBLsB,EAAOC,QAAUwc,EACjBA,EAAO5c,YAAc,SACrB4c,EAAOzZ,QAAU,CAAC,YAAa,WAAY,c,kBCC3C,SAAS8Z,EAAQpe,GACfA,EAAMqB,UAAU+c,QAAU,CACxBra,OAAQ,CACNC,QAAS,UACTU,OAAQ,CACN2Z,aAAc,CACZra,QAAS,eACTU,OAAQ,CACN6H,UAAW,CACTvI,QAAS,QACThC,MAAO,mBAMjB8B,QAAS,CACPE,QAAS,eACTS,QAAQ,GAEVwD,MAAO,CACLjE,QAAS,iEACThC,MAAO,aAETmC,OAAQ,CACNH,QACE,mIACFC,YAAY,GAEdqa,KAAM,CACJta,QACE,ovBACFC,YAAY,EACZjC,MAAO,YAETkC,QAAS,CACPF,QACE,iVACFC,YAAY,GAEdsD,SAAU,CACRvD,QACE,4tBACFC,YAAY,EACZjC,MAAO,UAETuc,SAAU,CACRva,QACE,yQACFC,YAAY,EACZjC,MAAO,WAETH,KAAM,CACJmC,QACE,kWACFC,YAAY,EACZjC,MAAO,YAETqC,YAAa,cAEfrE,EAAMqB,UAAU+c,QAAhB,OAAkC1Z,OAAlC,aAAyDA,OAAOwE,KAC9DlJ,EAAMqB,UAAU+c,QAClBpe,EAAMqB,UAAU+c,QAAhB,OAAkC1Z,OAAlC,aAAyDA,OAAOwE,KAAKsV,KAAO,CAC1Exa,QAAS,eACThC,MAAO,WAnEXV,EAAOC,QAAU6c,EACjBA,EAAQjd,YAAc,UACtBid,EAAQ9Z,QAAU,I,kBCClB,SAASma,EAAIze,GACXA,EAAMqB,UAAUod,IAAM,CAMpB3a,QAAS,CACPE,QAAS,6BACTC,YAAY,GAEdya,OAAQ,CACN1a,QAAS,gCACTC,YAAY,EACZS,OAAQ,CACN,eAAgB,CACdV,QAAS,2DACTC,YAAY,EACZjC,MAAO,YAETqC,YAAa,UAGjBpC,IAAK,CACH+B,QACE,+EACFC,YAAY,EACZjC,MAAO,aAETP,MAAO,CACLuC,QAAS,6DACTC,YAAY,EACZjC,MAAO,aACP0C,OAAQ,CACN,cAAe,CACbV,QAAS,kBACTC,YAAY,KAIlBI,YAAa,KA3CjB/C,EAAOC,QAAUkd,EACjBA,EAAItd,YAAc,MAClBsd,EAAIna,QAAU,I,kBCCd,SAASqa,EAAG3e,GACVA,EAAMqB,UAAUsd,GAAK,CACnB7a,QAAS,CACP,CACEE,QAAS,kCACTC,YAAY,GAEd,CACED,QAAS,kBACTC,YAAY,GAEd,CACED,QAAS,eACTC,YAAY,IAGhB,uBAAwB,CACtBD,QAAS,mCACTS,QAAQ,EACRzC,MAAO,UAET+B,OAAQ,CACNC,QAAS,wBACTS,QAAQ,GAEVP,QACE,6kBACFwD,QACE,imBACFpC,QAAS,yBACTnB,OAAQ,yDACRC,SACE,8GACFC,YAAa,iBApCjB/C,EAAOC,QAAUod,EACjBA,EAAGxd,YAAc,KACjBwd,EAAGra,QAAU,I,kBCCb,SAASsa,EAAE5e,GACTA,EAAMqB,UAAUud,EAAI,CAClB9a,QAAS,WACTC,OAAQ,CACNC,QAAS,qBACTS,QAAQ,GAEVP,QACE,mNACFoa,KAAM,CAGJta,QACE,8IACFhC,MAAO,WAETmC,OACE,4GACF0a,OAAQ,CACN7a,QAAS,+BACThC,MAAO,WAEToC,SAAU,eACV0a,YAAa,CACX9a,QAAS,0DACThC,MAAO,YAETqC,YAAa,QA9BjB/C,EAAOC,QAAUqd,EACjBA,EAAEzd,YAAc,IAChByd,EAAEta,QAAU,I,kBCCZ,SAASya,EAAK/e,IACX,SAAWA,GACV,IAAIwG,EACF,idACEwY,EAAkB,uDACnBtY,OACCD,EAAY,CACdzC,QAASe,OAAOia,EAAkB,gCAAgCtY,QAClEzC,YAAY,EACZS,OAAQ,CACNiJ,UAAW,CACT3J,QAAS,2CACTU,OAAQ,CACNL,YAAa,OAGjBA,YAAa,OAGjBrE,EAAMqB,UAAU0d,KAAO/e,EAAMqB,UAAU6D,OAAO,QAAS,CACrD,aAAc,CACZuB,EACA,CAGEzC,QAASe,OACPia,EAAkB,+BAA+BtY,QAEnDzC,YAAY,EACZS,OAAQ+B,EAAU/B,SAGtBR,QAASsC,EACTd,SAAU,CACR1F,EAAMqB,UAAUX,MAAMgF,SACtB,CACE1B,QAAS,mBACTC,YAAY,IAGhBE,OACE,8IACFC,SAAU,CACRJ,QACE,wEACFC,YAAY,KAGhBjE,EAAMqB,UAAU8D,aAAa,OAAQ,SAAU,CAC7C,uBAAwB,CAEtBnB,QAAS,iDACTS,QAAQ,EACRzC,MAAO,YAGXhC,EAAMqB,UAAU8D,aAAa,OAAQ,aAAc,CACjDa,WAAY,CACVhC,QAAS,+BACTC,YAAY,EACZjC,MAAO,eAETkR,SAAU,CACRlP,QACE,kGACFU,OAAQ,CACN,aAAc+B,EACdvC,QAASsC,EACTnC,YAAa,YACbD,SAAU,UAGduJ,UAAW,CACT3J,QAASe,OACP,qJAAqJ2B,OAAOC,QAC1J,cACA,WACE,OAAOH,EAASE,WAItBzC,YAAY,EACZS,OAAQ,CACNL,YAAa,SAlFpB,CAsFErE,GA1FLsB,EAAOC,QAAUwd,EACjBA,EAAK5d,YAAc,OACnB4d,EAAKza,QAAU,I,sBCHf,IAAI2a,EAAgB3e,EAAQ,OACxB4e,EAAuB5e,EAAQ,OAInC,SAAS6e,EAAQnf,GACfA,EAAMiB,SAASge,GACfjf,EAAMiB,SAASie,GACd,SAAWlf,GACV,IAAIof,EAAkB,oCAClBC,EAAkB,4BAA4B3Y,OAC9CmQ,EACF,0DAA0DnQ,OAAOC,QAC/D,UACA,WACE,OAAO0Y,KAGbrf,EAAMqB,UAAU8d,QAAUnf,EAAMqB,UAAU6D,OAAO,cAAe,IAChElF,EAAMqB,UAAU8D,aAAa,UAAW,UAAW,CACjD0R,UAAW,CACT7S,QAASe,OACP,gEACG2B,OACD,MACAmQ,EACA,KAEJ5S,YAAY,EACZS,OAAQ,CACNgB,SAAU,CACR1B,QAAS,qBACTC,YAAY,GAEdqb,MAAO,CACLtb,QAAS,YACTC,YAAY,GAEd0J,UAAW,CACT3J,QAAS,0BACTU,OAAQ,CACNL,YAAa,OAGjB,aAAc,aACdH,QAASlE,EAAMqB,UAAU0d,KAAK7a,QAC9BG,YAAa,eAGjB,aAAc,CAEZL,QAAS,wBACTC,YAAY,EACZS,OAAQ,CACNL,YAAa,UAGjB,eAAgB,CACd,CACEL,QACE,+GACFC,YAAY,EACZS,OAAQ,CACNiX,KAAM,CAEJ3X,QAASob,EACTnb,YAAY,EACZS,OAAQ1E,EAAMqB,UAAU0d,KACxB/c,MAAO,mBAIb,CACEgC,QACE,8DACFC,YAAY,EACZS,OAAQ,CACNwP,KAAM,CACJlQ,QAASob,EACTnb,YAAY,EACZS,OAAQ,CAENtB,IAAKpD,EAAMqB,UAAUb,OAAO4C,IAC5BuF,OAAQ3I,EAAMqB,UAAUb,OAAOmI,OAC/BgT,KAAM,CAEJ3X,QAAS,KACTU,OAAQ1E,EAAMqB,UAAU0d,KACxB/c,MAAO,sBAOnBoB,IAAKpD,EAAMqB,UAAUb,OAAO4C,IAC5BuF,OAAQ3I,EAAMqB,UAAUb,OAAOmI,SAEjC3I,EAAMqB,UAAUke,YAAYC,WAAW,OAAQxf,EAAMqB,UAAU8d,SA1FhE,CA2FEnf,GAjGLsB,EAAOC,QAAU4d,EACjBA,EAAQhe,YAAc,UACtBge,EAAQ7a,QAAU,I,kBCAlB,SAASib,EAAYvf,IAClB,SAAWA,GACV,IAAIyf,EAAezf,EAAMqB,UAAUke,YAAc,CAC/C7T,UAAW,CACT1H,QACE,iEACFC,YAAY,GAEdC,QAAS,CAGPF,QAAS,wDACTC,YAAY,GAEdI,YAAa,QAgEfwP,OAAOM,eAAesL,EAAa,aAAc,CAC/Che,MAdF,SAAoBJ,EAAWqe,GACJ,kBAAdre,IACTA,EAAY,CAACA,IAEfA,EAAUyS,SAAQ,SAAU6L,IA/C9B,SAA2BA,EAAMC,GAC/B,IAAIC,EAAY,cACZ3e,EAAUlB,EAAMqB,UAAUse,GAC9B,GAAKze,EAAL,CAGA,IAAIoZ,EAAQpZ,EAAQ2e,GACpB,IAAKvF,EAAO,CAEV,IAAIxV,EAAa,CACjBA,cAAwB,CACtBd,QAAS,wCACTC,YAAY,EACZjC,MAAO,YAGTsY,GADApZ,EAAUlB,EAAMqB,UAAU8D,aAAawa,EAAM,UAAW7a,IACxC+a,GAQlB,GANIvF,aAAiBvV,SAEnBuV,EAAQpZ,EAAQ2e,GAAa,CAC3B7b,QAASsW,IAGTpC,MAAMC,QAAQmC,GAChB,IAAK,IAAIvR,EAAI,EAAGC,EAAIsR,EAAMnY,OAAQ4G,EAAIC,EAAGD,IACnCuR,EAAMvR,aAAchE,SACtBuV,EAAMvR,GAAK,CACT/E,QAASsW,EAAMvR,KAGnB6W,EAAStF,EAAMvR,SAGjB6W,EAAStF,IAcTwF,CAAkBH,GAAM,SAAU3b,GAC3BA,EAAQU,SACXV,EAAQU,OAAS,IAEnBV,EAAQU,OAAOwE,KAAOwW,WAO5BD,EAAYD,WAAW,CAAC,OAAQ,aAAc,OAAQC,GAhFvD,CAiFEzf,GArFLsB,EAAOC,QAAUge,EACjBA,EAAYpe,YAAc,cAC1Boe,EAAYjb,QAAU,I,kBCCtB,SAASwF,EAAW9J,GAClBA,EAAMqB,UAAUyI,WAAa9J,EAAMqB,UAAU6D,OAAO,QAAS,CAC3D,aAAc,CACZlF,EAAMqB,UAAUX,MAAM,cACtB,CACEsD,QACE,0GACFC,YAAY,IAGhBC,QAAS,CACP,CACEF,QAAS,uBACTC,YAAY,GAEd,CACED,QACE,mdACFC,YAAY,IAIhByB,SACE,oGACFvB,OACE,gOACFC,SACE,8FAEJpE,EAAMqB,UAAUyI,WAAW,cAAc,GAAG9F,QAC1C,uEACFhE,EAAMqB,UAAU8D,aAAa,aAAc,UAAW,CACpDkB,MAAO,CAELrC,QACE,yLACFC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACN,eAAgB,CACdV,QAAS,4BACTC,YAAY,EACZjC,MAAO,iBACP0C,OAAQ1E,EAAMqB,UAAUgF,OAE1B,kBAAmB,UACnB,cAAe,aAInB,oBAAqB,CACnBrC,QACE,gMACFhC,MAAO,YAET0J,UAAW,CACT,CACE1H,QACE,sIACFC,YAAY,EACZS,OAAQ1E,EAAMqB,UAAUyI,YAE1B,CACE9F,QACE,qFACFC,YAAY,EACZS,OAAQ1E,EAAMqB,UAAUyI,YAE1B,CACE9F,QACE,kEACFC,YAAY,EACZS,OAAQ1E,EAAMqB,UAAUyI,YAE1B,CACE9F,QACE,8eACFC,YAAY,EACZS,OAAQ1E,EAAMqB,UAAUyI,aAG5B5D,SAAU,8BAEZlG,EAAMqB,UAAU8D,aAAa,aAAc,SAAU,CACnD4a,SAAU,CACR/b,QAAS,QACTS,QAAQ,EACRzC,MAAO,WAET,kBAAmB,CACjBgC,QACE,2EACFS,QAAQ,EACRC,OAAQ,CACN,uBAAwB,CACtBV,QAAS,QACThC,MAAO,UAET8J,cAAe,CACb9H,QACE,mEACFC,YAAY,EACZS,OAAQ,CACN,4BAA6B,CAC3BV,QAAS,YACThC,MAAO,eAETkH,KAAMlJ,EAAMqB,UAAUyI,aAG1B/F,OAAQ,cAIV/D,EAAMqB,UAAUb,SAClBR,EAAMqB,UAAUb,OAAO4C,IAAIsP,WAAW,SAAU,cAEhD1S,EAAMqB,UAAUb,OAAO4C,IAAIuP,aACzB,yNACGjM,OACH,eAGJ1G,EAAMqB,UAAUV,GAAKX,EAAMqB,UAAUyI,WA9HvCxI,EAAOC,QAAUuI,EACjBA,EAAW3I,YAAc,aACzB2I,EAAWxF,QAAU,CAAC,O,kBCCtB,SAAS0b,EAAehgB,GAGtBA,EAAMqB,UAAU2e,eAAiB,CAM/BC,QAAS,CACPjc,QACE,4FACFU,OAAQ,CACNR,QAAS,CACPF,QACE,+DACFC,YAAY,GAGdF,OAAQ,CACNC,QAAS,gBACTC,YAAY,GAEdic,WAAY,CACVlc,QAAS,yBACTC,YAAY,EACZS,OAAQ,CACN,aAAc,gBACdiJ,UAAW,WACXtJ,YAAa,SAGjBqZ,QAAS,CACP1Z,QAAS,aACTC,YAAY,EACZjC,MAAO,UAETqC,YAAa,MAwBjB,cAAe,CACbL,QAAS,4DACTU,OAAQ,CACNR,QAAS,CACPF,QAAS,gBACTC,YAAY,GAEdyC,OAAQ,CAGN,CACE1C,QAAS,yBACTC,YAAY,EACZS,OAAQ,CACNqS,KAAM,YACN1S,YAAa,IACb,cAAe,CACbL,QAAS,MACThC,MAAO,YAMb,CACEgC,QAAS,mBACTC,YAAY,EACZS,OAAQ,CACNR,QAAS,wCAIf,aAAc,kCACdwB,SAAU,0BACV,eAAgB,CACd1B,QAAS,8CACTC,YAAY,EACZjC,MAAO,YACP0C,OAAQ,CACNL,YAAa,OAGjB/C,OAAQ,CACN0C,QAAS,sDACTC,YAAY,EACZS,OAAQ,CACNyb,QAAS,CACPnc,QAAS,aACTC,YAAY,EACZjC,MAAO,UAETqC,YAAa,SAGjBsJ,UAAW,CACT3J,QAAS,kBACTU,OAAQ,CACNL,YAAa,OAGjBA,YAAa,WAKjB+b,KAAM,CACJpc,QAAS,uCACTU,OAAQ,CACNL,YAAa,QACbF,OAAQ,MACRD,QAAS,4BAtIjB5C,EAAOC,QAAUye,EACjBA,EAAe7e,YAAc,iBAC7B6e,EAAe1b,QAAU,I,iBCCzB,SAAS+b,EAAKrgB,GACZA,EAAMqB,UAAUgf,KAAO,CACrBtc,OAAQ,oCACRuc,UAAW,CACTtc,QACE,4JACFhC,MAAO,WACPiC,YAAY,GAEdyB,SACE,8JACFvB,OAAQ,8BACRC,SAAU,yCACVkB,QAAS,qBACTpB,QAAS,SACTG,YAAa,eAlBjB/C,EAAOC,QAAU8e,EACjBA,EAAKlf,YAAc,OACnBkf,EAAK/b,QAAU,I,kBCCf,SAASic,EAAMvgB,GACbA,EAAMqB,UAAUkf,MAAQvgB,EAAMqB,UAAU6D,OAAO,QAAS,CACtDnB,OAAQ,CACNC,QAAS,iDACTS,QAAQ,GAEVP,QACE,2cACFC,OAAQ,+CACRC,SAAU,mDACVC,YAAa,OACbqD,QACE,yEACFuC,OAAQ,iBAEHjK,EAAMqB,UAAUkf,MAAM,cAC7BvgB,EAAMqB,UAAU8D,aAAa,QAAS,UAAW,CAC/CO,SAAU,CACR1B,QAAS,gEACTC,YAAY,GAEduc,WAAY,CACVxc,QACE,8EACFC,YAAY,EACZS,OAAQ,CACN,iBAAkB,CAChBV,QAAS,eACTU,OAAQ,CACNR,QAAS,aAGbwB,SAAU,CACR1B,QAAS,OAEXK,YAAa,CACXL,QAAS,OAIfyc,UAAW,CACTzc,QACE,mEACFC,YAAY,EACZS,OAAQ,CACNL,YAAa,CACXL,QAAS,KAEX0B,SAAU,CACR1B,QAAS,OAEXiG,OAAQ,CACNjG,QAAS,UAvDnB1C,EAAOC,QAAUgf,EACjBA,EAAMpf,YAAc,QACpBof,EAAMjc,QAAU,I,kBCChB,SAASoc,EAAG1gB,IACT,SAAWA,GACV,IAAI8L,EAAgB,8BAA8BpF,OAC9C3C,EAASgB,OACX,kCAAkC2B,OAAOC,QAAQ,OAAO,WACtD,OAAOmF,MAGP6U,EAAsB,CACxB7U,cAAe,CACb9H,QAASe,OAAO,0BAA0B2B,OAASoF,GACnD7H,YAAY,EACZS,OAAQ,CACNvB,QAAS,CACPa,QAAS,wBACTC,YAAY,EACZS,OAAQ,MAEVL,YAAa,eAIfqc,EAAM1gB,EAAMqB,UAAUqf,GAAK,CAC7B5c,QAAS,MACTyD,SAAU,CACRvD,QAASe,OAAOhB,EAAO2C,OAAS,gBAAgBA,QAChDjC,QAAQ,EACRC,OAAQic,GAEV5c,OAAQ,CACNC,QAASD,EACTU,QAAQ,EACRC,OAAQic,GAEVjb,SAAU,CACR1B,QAAS,uBACTC,YAAY,GAEduB,SAAU,UACV,mBAAoB,CAClBxB,QAAS,4BACThC,MAAO,YAETkC,QACE,wHACFoB,QAAS,qBACTnB,OAAQ,4CACRC,SAAU,CACR,CACEJ,QAAS,OACThC,MAAO,QAET,kEAEF,mBAAoB,CAClBgC,QAAS,wBACThC,MAAO,YAETqC,YAAa,oCACbgR,IAAK,CACHrR,QAAS,KACThC,MAAO,cAGX2e,EAAoB7U,cAAcpH,OAAOvB,QAAQuB,OAASgc,EA/D3D,CAgEE1gB,GApELsB,EAAOC,QAAUmf,EACjBA,EAAGvf,YAAc,KACjBuf,EAAGpc,QAAU,I,kBCCb,SAASsc,EAAS5gB,IACf,SAAWA,GA2CV,SAAS6gB,EAAOna,EAAQ6D,GACtB,OAAOxF,OACL2B,EAAOC,QAAQ,SAAS,WACtB,MAAO,yDAAyDD,UAElE6D,GA/CJvK,EAAMqB,UAAU8D,aAAa,aAAc,oBAAqB,CAC9D,kBAAmB,CACjBnB,QAASe,OACP,YACE/E,EAAMqB,UAAUyI,WAAW,qBAAqB9F,QAAQ0C,QAE5DzC,YAAY,EACZjC,MAAO,CAAC,oBAAqB,SAAU,WAAY,sBAGvDhC,EAAMqB,UAAU8D,aAAa,aAAc,WAAY,CACrD6S,OAAQ,CACNhU,QAASe,OACP,YAAc/E,EAAMqB,UAAUyI,WAAhB,SAAuCpD,QAEvDzC,YAAY,EACZjC,MAAO,CAAC,WAAY,sBAGxBhC,EAAMqB,UAAU8D,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAClB,CAGEnB,QACE,yOACFhC,MAAO,cAET,CAEEgC,QAAS,wBACThC,MAAO,iBAmBbhC,EAAMqB,UAAU8D,aAAa,aAAc,UAAW,CACpD2b,QAAS,CAEP9c,QAAS6c,EACP,4GACGna,QAELzC,YAAY,EACZS,OAAQ1E,EAAMqB,UAAUyI,YAE1BvI,QAAS,CAEPyC,QAAS6c,EACP,mEACGna,QAELzC,YAAY,EACZS,OAAQ1E,EAAMqB,UAAUyI,cAG5B9J,EAAMqB,UAAUyI,WAAhB,QAAsCsO,QACpC,CACEpU,QAAS,wCACThC,MAAO,UAET,CACEgC,QACE,gGACFhC,MAAO,gBAET,CACEgC,QAAS,WACThC,MAAO,CAAC,OAAQ,QAElB,CACEgC,QAAS,gBACThC,MAAO,QAGXhC,EAAMqB,UAAU8D,aAAa,aAAc,WAAY,CACrD4b,OAAQ,CACN/c,QAAS,QACThC,MAAO,YAETgf,MAAO,CACLhd,QAAS,KACThC,MAAO,cAGXhC,EAAMqB,UAAU8D,aAAa,aAAc,cAAe,CACxD,kBAAmB,CACjBnB,QAAS6c,EAAO,gBAAgBna,QAChCzC,YAAY,GAEd,mBAAoB,CAClBD,QAAS,8CACTC,YAAY,GAEdgd,IAAK,CAEHjd,QACE,kFACFhC,MAAO,YAETkf,QAAS,CACPld,QAAS,qBACThC,MAAO,gBAUX,IAPA,IAAImf,EAAuB,CACzB,WACA,oBACA,SACA,kBACA,mBAEOpY,EAAI,EAAGA,EAAIoY,EAAqBhf,OAAQ4G,IAAK,CACpD,IAAIuR,EAAQ6G,EAAqBpY,GAC7BtH,EAAQzB,EAAMqB,UAAUyI,WAAWwQ,GACR,WAA3Bta,EAAM4B,KAAKC,KAAKJ,KAClBA,EAAQzB,EAAMqB,UAAUyI,WAAWwQ,GAAS,CAC1CtW,QAASvC,IAGb,IAAIiD,EAASjD,EAAMiD,QAAU,GAC7BjD,EAAMiD,OAASA,EACfA,EAAO,oBAAsB,iBAzIhC,CA2IE1E,GA/ILsB,EAAOC,QAAUqf,EACjBA,EAASzf,YAAc,WACvByf,EAAStc,QAAU,I,kBCCnB,SAAS8c,EAAYphB,IAClB,SAAWA,GACV,IAAIqhB,EAAiBrhB,EAAMqB,UAAUyI,WAAW,mBAC5CwX,EAAyBD,EAAerd,QAAQ0C,OAChD6a,EAAsBF,EAAe3c,OAAf,cACtB8c,EACFD,EAAoB7c,OAAO,6BACzB+c,EAAuBF,EAAoBvd,QAAQ0C,OAYvD,SAASgb,EAAenf,EAAUa,GAChC,GAAKpD,EAAMqB,UAAUkB,GAGrB,MAAO,CACLyB,QAASe,OAAO,OAAS3B,EAAM,SAAWke,GAC1Crd,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACN,uBAAwB,CACtBV,QAAS,QACThC,MAAO,UAET,gBAAiB,CACfgC,QAAS,UACThC,MAAOO,KAiCf,SAASof,EAAeC,EAASrf,GAC/B,MAAO,MAAQA,EAASsf,cAAgB,IAAMD,EAAU,MAU1D,SAASE,EAAkBnG,EAAMza,EAASqB,GACxC,IAAIQ,EAAM,CACR4Y,KAAMA,EACNza,QAASA,EACTqB,SAAUA,GAKZ,OAHAvC,EAAMwD,MAAMC,IAAI,kBAAmBV,GACnCA,EAAIJ,OAAS3C,EAAM+hB,SAAShf,EAAI4Y,KAAM5Y,EAAI7B,SAC1ClB,EAAMwD,MAAMC,IAAI,iBAAkBV,GAC3BA,EAAIJ,OAQb,SAASqf,EAAgCjW,GACvC,IAAIkW,EAAc,GAClBA,EAAY,6BAA+BT,EAE3C,IAAI7e,EAAS3C,EAAM+hB,SAAShW,EAAYkW,GACxC,GAAsB,IAAlBtf,EAAOR,OAAc,CASvB,IAAI+f,EAAO,CAAC,EAAG,GACfA,EAAKzf,KAAK0f,MACRD,EACAJ,EAAkBnf,EAAO,GAAI3C,EAAMqB,UAAUyI,WAAY,eAE3DnH,EAAOyf,OAAOD,MAAMxf,EAAQuf,GAE9B,OAAO,IAAIliB,EAAM4C,MACf,gBACAD,EACA4e,EAAoBvf,MACpB+J,GAoBJ,SAASsW,EAAiB1G,EAAMza,EAASqB,GAIvC,IAAI+f,EAAUtiB,EAAM+hB,SAASpG,EAAM,CACjC7P,cAAe,CACb9H,QAASe,OAAO0c,GAChBxd,YAAY,KAGZse,EAAqB,EAErBC,EAAiB,GAoBjBC,EAAiBX,EAnBFQ,EAChBjgB,KAAI,SAAUiY,GACb,GAAqB,kBAAVA,EACT,OAAOA,EAIP,IAFA,IACIoI,EADAC,EAA0BrI,EAAMnX,SAK3B,IAFPwY,EAAKT,QACFwH,EAAcf,EAAeY,IAAsBhgB,MAMxD,OADAigB,EAAeE,GAAeC,EACvBD,KAGVhf,KAAK,IAC6CxC,EAASqB,GAC1DqgB,EAAe/O,OAAOhL,KAAK2Z,GAwD/B,OAvDAD,EAAqB,EAMrB,SAASM,EAAWlgB,GAClB,IAAK,IAAIoG,EAAI,EAAGA,EAAIpG,EAAOR,OAAQ4G,IAAK,CACtC,GAAIwZ,GAAsBK,EAAazgB,OACrC,OAEF,IAAImY,EAAQ3X,EAAOoG,GACnB,GAAqB,kBAAVuR,GAA+C,kBAAlBA,EAAMnX,QAAsB,CAClE,IAAIuf,EAAcE,EAAaL,GAC3BO,EACe,kBAAVxI,EACHA,EAEAA,EAAMnX,QACRf,EAAQ0gB,EAAE5H,QAAQwH,GACtB,IAAe,IAAXtgB,EAAc,GACdmgB,EACF,IAAIQ,EAASD,EAAEE,UAAU,EAAG5gB,GACxB6gB,EAASjB,EACXQ,EAAeE,IAEbQ,EAAQJ,EAAEE,UAAU5gB,EAAQsgB,EAAYvgB,QACxCuG,EAAc,GAKlB,GAJIqa,GACFra,EAAYjG,KAAKsgB,GAEnBra,EAAYjG,KAAKwgB,GACbC,EAAO,CACT,IAAIC,EAAc,CAACD,GACnBL,EAAWM,GACXza,EAAYjG,KAAK0f,MAAMzZ,EAAaya,GAEjB,kBAAV7I,GACT3X,EAAOyf,OAAOD,MAAMxf,EAAQ,CAACoG,EAAG,GAAGxF,OAAOmF,IAC1CK,GAAKL,EAAYvG,OAAS,GAE1BmY,EAAMnX,QAAUuF,OAGf,CACL,IAAIvF,EAAUmX,EAAMnX,QAChB+U,MAAMC,QAAQhV,GAChB0f,EAAW1f,GAEX0f,EAAW,CAAC1f,MAKpB0f,CAAWJ,GACJ,IAAIziB,EAAM4C,MACfL,EACAkgB,EACA,YAAclgB,EACdoZ,GAlMJ3b,EAAMqB,UAAUyI,WAAW,mBAAqB,CAK9C4X,EACE,MACA,0HACGhb,QAGLgb,EAAe,OAAQ,yCAAyChb,QAChEgb,EAAe,MAAO,QAAQhb,QAC9Bgb,EAAe,WAAY,oBAAoBhb,QAC/Cgb,EACE,UACA,6CAA6Chb,QAE/Cgb,EAAe,MAAO,QAAQhb,QAC9B2a,GACA/M,OAAO8O,SAsLT,IAAIC,EAAqB,CACvBvZ,YAAY,EACZnJ,IAAI,EACJ2iB,YAAY,EACZC,IAAI,EACJC,KAAK,EACLC,KAAK,GAsEP,SAASC,EAAcjiB,GACrB,MAAqB,kBAAVA,EACFA,EACEyW,MAAMC,QAAQ1W,GAChBA,EAAMY,IAAIqhB,GAAehgB,KAAK,IAE9BggB,EAAcjiB,EAAM0B,SA1E/BnD,EAAMwD,MAAM2F,IAAI,kBAAkB,SAAUpG,GACpCA,EAAIR,YAAY8gB,GAStB,SAASM,EAAoBhhB,GAC3B,IAAK,IAAIoG,EAAI,EAAGC,EAAIrG,EAAOR,OAAQ4G,EAAIC,EAAGD,IAAK,CAC7C,IAAIuR,EAAQ3X,EAAOoG,GACnB,GAAqB,kBAAVuR,EAAX,CAGA,IAAInX,EAAUmX,EAAMnX,QACpB,GAAK+U,MAAMC,QAAQhV,GAMnB,GAAmB,oBAAfmX,EAAMzY,KAA4B,CAepC,IAAI+hB,EAAWzgB,EAAQ,GACvB,GACqB,IAAnBA,EAAQhB,QACY,kBAAbyhB,GACW,kBAAlBA,EAAS/hB,KACT,CAEA,IAAI8Z,EAAO+H,EAAcE,GACrB5hB,EAAQ4hB,EAAS5hB,MACjBO,EAAW2V,MAAMC,QAAQnW,GAASA,EAAM,GAAKA,EAC7Cd,EAAUlB,EAAMqB,UAAUkB,GAC9B,IAAKrB,EAEH,SAEFiC,EAAQ,GAAKkf,EAAiB1G,EAAMza,EAASqB,SAG/CohB,EAAoBxgB,OAtCG,kBAAZA,GACTwgB,EAAoB,CAACxgB,MAyC7BwgB,CAAoB5gB,EAAIJ,WApT3B,CAqUE3C,GAzULsB,EAAOC,QAAU6f,EACjBA,EAAYjgB,YAAc,cAC1BigB,EAAY9c,QAAU,I,sBCHtB,IAAI4a,EAAuB5e,EAAQ,OAC/BujB,EAAsBvjB,EAAQ,OAIlC,SAASwjB,EAAM9jB,GACbA,EAAMiB,SAASie,GACflf,EAAMiB,SAAS4iB,GACd,SAAW7jB,GACV,IAAI8J,EAAa9J,EAAMqB,UAAUyI,WAC7BjI,EAAO,2CAA2C6E,OAClDqd,EACF,2CAA6CliB,EAAO,UACtD7B,EAAMqB,UAAUyiB,MAAQ9jB,EAAMqB,UAAU6D,OAAO,cAAe,CAC5DwG,UAAW,CAET1H,QAASe,OACPgf,EAAkB,uCAAuCrd,QAE3DzC,YAAY,EACZS,OAAQ,CACNL,YAAa,SAInBrE,EAAMqB,UAAU8D,aAAa,QAAS,UAAW,CAC/C,qBAAsB,CAEpBnB,QAASe,OACPgf,EACE,wDAAwDrd,QAE5DzC,YAAY,EACZS,OAAQ,CACNgH,UAAW,CACT1H,QAAS,2BACTC,YAAY,EACZS,OAAQ,CACNL,YAAa,OAGjBsX,KAAM,CACJ3X,QAAS,oBACTC,YAAY,EACZS,OAAQoF,EACR9H,MAAO,uBAETqC,YAAa,WAGjB,aAAc,CACZ,CACEL,QAASe,OACP,mHAAmH2B,OAAOC,QACxH,WACA,WACE,OAAO9E,MAIboC,YAAY,EACZS,OAAQ,CACNL,YAAa,OAGjB,CACEL,QAASe,OAAO,gBAAkBlD,GAClCoC,YAAY,EACZS,OAAQ,CACNX,OAAQ+F,EAAW/F,OACnBI,OAAQ2F,EAAW3F,OACnBmB,QAASwE,EAAWxE,QACpBpB,QAASlE,EAAMqB,UAAUiiB,WAAWpf,QACpCE,SAAU,oBACVC,YAAa,qBAInB2f,QAAS,CACPhgB,QACE,yEACFC,YAAY,EACZS,OAAQ,CACNiX,KAAM,CACJ3X,QAAS,4BACTC,YAAY,EACZS,OAAQoF,EACR9H,MAAO,2BAKfhC,EAAMqB,UAAUke,YAAYC,WAAW,aAAcxf,EAAMqB,UAAUyiB,OApFtE,CAqFE9jB,GA3FLsB,EAAOC,QAAUuiB,EACjBA,EAAM3iB,YAAc,QACpB2iB,EAAMxf,QAAU,I,kBCAhB,SAASyY,EAAK/c,GAEZA,EAAMqB,UAAU0b,KAAO,CACrBxV,SAAU,CACRvD,QAAS,yCACTC,YAAY,EACZQ,QAAQ,GAEVV,OAAQ,CACNC,QAAS,yCACTC,YAAY,EACZQ,QAAQ,GAEVX,QAAS,CACPE,QAAS,gCACTS,QAAQ,GAEVN,OAAQ,qCACRE,YAAa,WACbD,SAAU,IACVkB,QAAS,qBACT2e,KAAM,CACJjgB,QAAS,WACThC,MAAO,YAGXhC,EAAMqB,UAAU6iB,YAAclkB,EAAMqB,UAAU0b,KA7BhDzb,EAAOC,QAAUwb,EACjBA,EAAK5b,YAAc,OACnB4b,EAAKzY,QAAU,CAAC,gB,sBCHhB,IAAI6f,EAAgB7jB,EAAQ,OAI5B,SAAS8jB,EAAMpkB,GACbA,EAAMiB,SAASkjB,GACd,SAAWnkB,GACV,IAAI+D,EAAS,+CACb/D,EAAMqB,UAAU+iB,MAAQpkB,EAAMqB,UAAU6D,OAAO,OAAQ,CACrDqC,SAAU,CACR,CACEvD,QAASe,OAAOhB,EAAO2C,OAAS,aAChCjC,QAAQ,GAEV,CACET,QACE,iEACFhC,MAAO,aAGX+B,OAAQ,CACNC,QAASD,EACTU,QAAQ,GAEVN,OACE,gGAnBL,CAqBEnE,GA1BLsB,EAAOC,QAAU6iB,EACjBA,EAAMjjB,YAAc,QACpBijB,EAAM9f,QAAU,I,sBCHhB,IAAI6f,EAAgB7jB,EAAQ,OAI5B,SAAS+jB,EAAMrkB,GACbA,EAAMiB,SAASkjB,GACfnkB,EAAMqB,UAAUgjB,MAAQrkB,EAAMqB,UAAU6D,OAAO,OAAQ,CACrDb,YAAa,iBAEfrE,EAAMqB,UAAU8D,aAAa,QAAS,cAAe,CACnDO,SAAU,oEATdpE,EAAOC,QAAU8iB,EACjBA,EAAMljB,YAAc,QACpBkjB,EAAM/f,QAAU,I,kBCChB,SAASggB,EAAatkB,GACpBA,EAAMqB,UAAUijB,aAAe,CAC7B,gBAAiB,CACftgB,QAAS,SACThC,MAAO,UAET,cAAe,CACbgC,QAAS,sBACTC,YAAY,EACZS,OAAQ,CACN,cAAe,CACbV,QACE,+HACFhC,MAAO,WAETuiB,SAAU,CACRvgB,QAAS,+CACTC,YAAY,EACZjC,MAAO,OAET0D,SAAU,CACR1B,QACE,qEACFC,YAAY,EACZS,OAAQ,CACNL,YAAa,OAGjBA,YAAa,OACbH,QAAS,iBACTlC,MAAO,CACLgC,QAAS,6DACThC,MAAO,YAET,cAAe,CACbgC,QAAS,wBACThC,MAAO,SACP0C,OAAQ,CACNL,YAAa,SAzCzB/C,EAAOC,QAAU+iB,EACjBA,EAAanjB,YAAc,eAC3BmjB,EAAahgB,QAAU,I,kBCCvB,SAASkf,EAAIxjB,IACV,SAAWA,GACV,IAAI8J,EAAa9J,EAAM4B,KAAK4iB,MAAMxkB,EAAMqB,UAAUyI,YAC9CgL,EAAQ,+CAA+CpO,OACvD+d,EAAS,+CAA+C/d,OACxDqa,EAAS,uCAAuCra,OAKpD,SAAS2D,EAAG3D,EAAQ6D,GAWlB,OAVA7D,EAASA,EACNC,QAAQ,QAAQ,WACf,OAAOmO,KAERnO,QAAQ,aAAa,WACpB,OAAO8d,KAER9d,QAAQ,aAAa,WACpB,OAAOoa,KAEJhc,OAAO2B,EAAQ6D,GAExBwW,EAAS1W,EAAG0W,GAAQra,OACpB1G,EAAMqB,UAAUmiB,IAAMxjB,EAAMqB,UAAU6D,OAAO,SAAU4E,GACvD9J,EAAMqB,UAAUmiB,IAAIpgB,IAAIY,QAAUqG,EAChC,wIACG3D,QAEL1G,EAAMqB,UAAUmiB,IAAIpgB,IAAIsB,OAAxB,IAAsCV,QAAU,kBAChDhE,EAAMqB,UAAUmiB,IAAIpgB,IAAIsB,OAAO,cAAcV,QAC3C,sEACFhE,EAAMqB,UAAUmiB,IAAIpgB,IAAIsB,OAAxB,IAAsCA,OAAO,cAC3C,4BACF1E,EAAMqB,UAAUmiB,IAAIpgB,IAAIsB,OAAxB,QAA4CoF,EAAU,QACtD9J,EAAMqB,UAAU8D,aACd,SACA,YACA,CACE4b,OAAQ,CACN/c,QAASqG,EAAG,WAAW3D,QACvBhC,OAAQ1E,EAAMqB,UAAUmiB,MAG5BxjB,EAAMqB,UAAUmiB,IAAIpgB,KAEtBpD,EAAMqB,UAAU8D,aACd,SACA,eACA,CACE6I,OAAQ,CAENhK,QAASqG,EAAG,YAAY3D,QACxBhC,OAAQ,CACN,qBAAsB,CACpBV,QAAS,WACThC,MAAO,eAETkH,KAAMlJ,EAAMqB,UAAUmiB,KAExBxhB,MAAO,wBAGXhC,EAAMqB,UAAUmiB,IAAIpgB,KAEtB,IAAIshB,EAAiB,SAAjBA,EAA2BpK,GAC7B,OAAKA,EAGgB,kBAAVA,EACFA,EAEoB,kBAAlBA,EAAMnX,QACRmX,EAAMnX,QAERmX,EAAMnX,QAAQd,IAAIqiB,GAAgBhhB,KAAK,IARrC,IAUPmf,EAAa,SAAbA,EAAuBlgB,GAEzB,IADA,IAAIgiB,EAAa,GACR5b,EAAI,EAAGA,EAAIpG,EAAOR,OAAQ4G,IAAK,CACtC,IAAIuR,EAAQ3X,EAAOoG,GACf6b,GAAiB,EAgDrB,GA/CqB,kBAAVtK,IAEQ,QAAfA,EAAMzY,MACNyY,EAAMnX,QAAQ,IACY,QAA1BmX,EAAMnX,QAAQ,GAAGtB,KAG2B,OAAxCyY,EAAMnX,QAAQ,GAAGA,QAAQ,GAAGA,QAG5BwhB,EAAWxiB,OAAS,GACpBwiB,EAAWA,EAAWxiB,OAAS,GAAG0iB,UAChCH,EAAepK,EAAMnX,QAAQ,GAAGA,QAAQ,KAG1CwhB,EAAWG,MAG2C,OAApDxK,EAAMnX,QAAQmX,EAAMnX,QAAQhB,OAAS,GAAGgB,SAI1CwhB,EAAWliB,KAAK,CACdoiB,QAASH,EAAepK,EAAMnX,QAAQ,GAAGA,QAAQ,IACjD4hB,aAAc,IAKpBJ,EAAWxiB,OAAS,GACL,gBAAfmY,EAAMzY,MACY,MAAlByY,EAAMnX,QAGNwhB,EAAWA,EAAWxiB,OAAS,GAAG4iB,eAElCJ,EAAWxiB,OAAS,GACpBwiB,EAAWA,EAAWxiB,OAAS,GAAG4iB,aAAe,GAClC,gBAAfzK,EAAMzY,MACY,MAAlByY,EAAMnX,QAGNwhB,EAAWA,EAAWxiB,OAAS,GAAG4iB,eAElCH,GAAiB,IAGjBA,GAAmC,kBAAVtK,IAEzBqK,EAAWxiB,OAAS,GAC+B,IAAnDwiB,EAAWA,EAAWxiB,OAAS,GAAG4iB,aAClC,CAGA,IAAIC,EAAYN,EAAepK,GAE7BvR,EAAIpG,EAAOR,OAAS,IACM,kBAAlBQ,EAAOoG,EAAI,IACM,eAAvBpG,EAAOoG,EAAI,GAAGlH,QAEhBmjB,GAAaN,EAAe/hB,EAAOoG,EAAI,IACvCpG,EAAOyf,OAAOrZ,EAAI,EAAG,IAGrBA,EAAI,IACsB,kBAAlBpG,EAAOoG,EAAI,IACM,eAAvBpG,EAAOoG,EAAI,GAAGlH,QAEhBmjB,EAAYN,EAAe/hB,EAAOoG,EAAI,IAAMic,EAC5CriB,EAAOyf,OAAOrZ,EAAI,EAAG,GACrBA,KAEFpG,EAAOoG,GAAK,IAAI/I,EAAM4C,MACpB,aACAoiB,EACA,KACAA,GAIF1K,EAAMnX,SAAoC,kBAAlBmX,EAAMnX,SAChC0f,EAAWvI,EAAMnX,WAIvBnD,EAAMwD,MAAM2F,IAAI,kBAAkB,SAAUpG,GACrB,QAAjBA,EAAIR,UAAuC,QAAjBQ,EAAIR,UAGlCsgB,EAAW9f,EAAIJ,WA1KlB,CA4KE3C,GAhLLsB,EAAOC,QAAUiiB,EACjBA,EAAIriB,YAAc,MAClBqiB,EAAIlf,QAAU,I,kBCCd,SAAS2gB,EAAMjlB,GACbA,EAAMqB,UAAU4jB,MAAQ,CACtBnhB,QAAS,CAGPE,QACE,6EACFC,YAAY,GAEdoC,MAAO,CAELrC,QAAS,oCACTS,QAAQ,GAEVV,OAAQ,CAKNC,QACE,oHACFC,YAAY,EACZQ,QAAQ,GAEVP,QACE,6PACFoB,QAAS,qBACTnB,OACE,kIAGFC,SACE,gIACFC,YAAa,oBAEb6B,SAAU,yDAtCd5E,EAAOC,QAAU0jB,EACjBA,EAAM9jB,YAAc,QACpB8jB,EAAM3gB,QAAU,I,iBCChB,SAAS4gB,EAAOllB,GACdA,EAAMqB,UAAU6jB,OAAS,CACvBphB,QAAS,WACT4B,SACE,qGAEF3B,OAAQ,aACR0E,KAAM,CAEJ,8TACA,+HAEFvE,QACE,+HAEFuO,OAAQ,6DAERtO,OAAQ,0CAERC,SAAU,YACVhB,IAAK,mDAvBT9B,EAAOC,QAAU2jB,EACjBA,EAAO/jB,YAAc,SACrB+jB,EAAO5gB,QAAU,I,kBCCjB,SAAS6gB,EAAOnlB,IACb,SAAWA,GACVA,EAAMqB,UAAU8jB,OAASnlB,EAAMqB,UAAU6D,OAAO,QAAS,CACvDhB,QAAS,CAEPF,QACE,2bACFC,YAAY,GAEdyB,SAAU,CACR,CACE1B,QAAS,iCACTS,QAAQ,GAEV,CACET,QAAS,mCACTC,YAAY,EACZQ,QAAQ,IAGZN,OACE,kIACFC,SACE,gHAEGpE,EAAMqB,UAAU8jB,OAAO,cAC9BnlB,EAAMqB,UAAU8D,aAAa,SAAU,SAAU,CAC/C,aAAc,CACZnB,QAAS,sBACThC,MAAO,YAGXhC,EAAMqB,UAAU8D,aAAa,SAAU,UAAW,CAChDa,WAAY,CACVhC,QAAS,sCACThC,MAAO,aAGXhC,EAAMqB,UAAU8D,aAAa,SAAU,WAAY,CACjDc,MAAO,CACLjC,QAAS,gBACThC,MAAO,YAGX,IAAI8J,EAAgB,CAClB,CACE9H,QAAS,cACTU,OAAQ,CACN6H,UAAW,CACTvI,QAAS,YACThC,MAAO,YAETkH,KAAMlJ,EAAMqB,UAAU8jB,SAG1B,CACEnhB,QAAS,QACThC,MAAO,aAGXhC,EAAMqB,UAAU8jB,OAAhB,OAAiCzgB,OAAS1E,EAAMqB,UAAU8jB,OACxD,cACAzgB,OAAS,CACToH,cAAeA,GAEjB9L,EAAMqB,UAAU+jB,GAAKplB,EAAMqB,UAAU8jB,OACrCnlB,EAAMqB,UAAUgkB,IAAMrlB,EAAMqB,UAAU8jB,OAjEvC,CAkEEnlB,GAtELsB,EAAOC,QAAU4jB,EACjBA,EAAOhkB,YAAc,SACrBgkB,EAAO7gB,QAAU,CAAC,KAAM,Q,kBCCxB,SAASghB,EAAMtlB,IAEZ,SAAWA,GAMV,IAAIulB,EAAQ,sDAAsD7e,OAQlE,SAAS8e,EAAOxhB,EAASuG,GACvB,OAAOxF,OAAOf,EAAQ2C,QAAQ,WAAY4e,GAAQhb,GAEpDvK,EAAMqB,UAAUikB,MAAQ,CACtBxhB,QAAS,CACPE,QAAS,QAEXyhB,OAAQ,CACNzhB,QAAS,MACTS,QAAQ,GAEVV,OAAQ,CACNC,QAAS,0BACTS,QAAQ,GAEVa,QAAS,CACPtB,QAASwhB,EAAO,kEAAyC9e,QACzDzC,YAAY,GAEd,gBAAiB,CACfD,QAASwhB,EAAO,yEAA2C9e,QAC3DzC,YAAY,EACZjC,MAAO,WAET,kBAAmB,CACjBgC,QAASwhB,EAAO,uDAAmC9e,QACnDzC,YAAY,EACZjC,MAAO,WAETH,KAAM,CACJ,CACEmC,QAASwhB,EACP,6JACG9e,QAELzC,YAAY,EACZjC,MAAO,WAET,CACEgC,QAASwhB,EACP,8JAA0D9e,QAE5DzC,YAAY,EACZjC,MAAO,cAQXkC,QAAS,CACPF,QAASwhB,EACP,84BACG9e,QAELzC,YAAY,GAGdvC,KAAM,CAEJsC,QAASwhB,EACP,2EACG9e,QAELzC,YAAY,GAGdE,OAAQ,CACNH,QAASwhB,EACP,2FACG9e,OACH,KAEFzC,YAAY,GAGdI,YAAa,iBAMb,gBAAiB,CACfL,QAAS,0BACThC,MAAO,aAGXhC,EAAMqB,UAAUqkB,IAAM1lB,EAAMqB,UAAUikB,MAtGvC,CAuGEtlB,GA5GLsB,EAAOC,QAAU+jB,EACjBA,EAAMnkB,YAAc,QACpBmkB,EAAMhhB,QAAU,CAAC,Q,iBCCjB,SAASqhB,EAAM3lB,GACbA,EAAMqB,UAAUskB,MAAQ,CACtB7hB,QAAS,CACPE,QAAS,SACTS,QAAQ,GAEVV,OAAQ,CACNC,QACE,mGACFS,QAAQ,GAEV6Z,KAAM,CACJta,QAAS,sBACTC,YAAY,EACZjC,MAAO,WAET+D,QAAS,CACP/B,QAAS,qBACThC,MAAO,WAET,aACE,2EACFkC,QACE,ibACFoB,QAAS,0BACTI,SAAU,uBACVkgB,SAAU,CACR,CAEE5hB,QACE,2QACFhC,MAAO,UAET,CAEEgC,QACE,2GACFhC,MAAO,WAGXmC,OACE,uHACFC,SAAU,kCACVC,YAAa,kBA9CjB/C,EAAOC,QAAUokB,EACjBA,EAAMxkB,YAAc,QACpBwkB,EAAMrhB,QAAU,I,kBCChB,SAASuhB,EAAM7lB,IACZ,SAAWA,GACV,IAAI8lB,EAAc,6BACdC,EAAY,CACd,mBAAoB,CAClB/hB,QAAS8hB,EACT9jB,MAAO,UAGXhC,EAAMqB,UAAUwkB,MAAQ,CACtB/hB,QAAS,OAETkiB,MAAO,CACLhiB,QACE,mEACFC,YAAY,GAMdgiB,SAAU,CACR,CACEjiB,QACE,0FACFU,OAAQqhB,EACR/jB,MAAO,UAET,CACEgC,QACE,4FACFC,YAAY,EACZS,OAAQqhB,EACR/jB,MAAO,WAOXkC,QAAS,CACPF,QACE,wFACFC,YAAY,GAEdsE,IAAK,CACHvE,QAAS,uBACTC,YAAY,GAMdiiB,SAAU,CACRliB,QACE,4JACFC,YAAY,EACZjC,MAAO,cAET0D,SAAU,CACR1B,QAAS8hB,EACT9jB,MAAO,YAETqC,YAAa,YAEfrE,EAAMqB,UAAU8kB,IAAMnmB,EAAMqB,UAAUwkB,MACtC7lB,EAAMqB,UAAU+kB,QAAUpmB,EAAMqB,UAAUwkB,MAjE3C,CAkEE7lB,GAtELsB,EAAOC,QAAUskB,EACjBA,EAAM1kB,YAAc,QACpB0kB,EAAMvhB,QAAU,CAAC,MAAO,Y,sBCHxB,IAAI8P,EAA4B9T,EAAQ,OACpC+lB,EAAe/lB,EAAQ,OAI3B,SAASgmB,EAAMtmB,GACbA,EAAMiB,SAASmT,GACfpU,EAAMiB,SAASolB,GACd,SAAWrmB,GACVA,EAAMqB,UAAUilB,MAAQ,CACtBxiB,QAAS,eACTyiB,GAAI,CACFviB,QAAS,kCACTU,OAAQ,CACNL,YAAa,SACbjB,IAAK,CACHY,QAAS,KACThC,MAAO,eAIbwkB,GAAI,CACFxiB,QAAS,MACTU,OAAQ,CACNL,YAAa,OAGjBoiB,IAAK,CACHziB,QAAS,mBACThC,MAAO,eACP0C,OAAQ1E,EAAMqB,UAAUolB,MAG5B,IAAIC,EAAc1mB,EAAMqB,UAAU6D,OAAO,SAAU,IACnDlF,EAAMqB,UAAU8D,aACd,SACA,aACA,CACE,SAAU,CACRnB,QAAS,qDACTU,OAAQ,CACN,YAAa,CACXV,QAAS,WACThC,MAAO,aAET,aAAc,CACZgC,QAAS,WACTU,OAAQ,CACNL,YAAa,CACX,KACA,CACEL,QAAS,mBACTC,YAAY,IAGhBwiB,IAAK,CACHziB,QAAS,mBACTU,OAAQ1E,EAAMqB,UAAUolB,UAOpCC,EAAYtjB,KAEdpD,EAAMwD,MAAM2F,IAAI,mBAAmB,SAAUpG,GAC3C,GAAqB,UAAjBA,EAAIR,SAAR,CAKAvC,EAAMqB,UAAU,qBAAqBmT,kBACnCzR,EACA,QAHA,wHAMFA,EAAI7B,QAAUwlB,MAEhB1mB,EAAMwD,MAAM2F,IAAI,kBAAkB,SAAUpG,GAC1C/C,EAAMqB,UAAU,qBAAqBoT,qBAAqB1R,EAAK,YAxElE,CA0EE/C,GAhFLsB,EAAOC,QAAU+kB,EACjBA,EAAMnlB,YAAc,QACpBmlB,EAAMhiB,QAAU,I,kBCAhB,SAASqiB,EAAK3mB,GAQZA,EAAMqB,UAAUslB,KAAO3mB,EAAMqB,UAAU6D,OAAO,MAAO,CACnDpB,QAAS,CACP,mBACA,CACEE,QAAS,kBACTC,YAAY,IAGhBwO,OAAQ,CACNzO,QACE,0EACFU,OAAQ,CACNL,YAAa,UAIjB2F,SAAU,CACRhG,QACE,0GACFU,OAAQ,CAENc,SAAU,aAGd+B,SAAU,2CACVnD,SAAU,aAEZpE,EAAMqB,UAAU8D,aAAa,OAAQ,WAAY,CAC/CK,SAAU,CAER,CACExB,QAAS,cACTU,OAAQ,CACNL,YAAa,MAGjB,aAEF,cAAe,CACbL,QAAS,sCACTC,YAAY,EACZjC,MAAO,cApDbV,EAAOC,QAAUolB,EACjBA,EAAKxlB,YAAc,OACnBwlB,EAAKriB,QAAU,I,sBCHf,IAAIsiB,EAAkBtmB,EAAQ,OAI9B,SAASumB,EAAS7mB,GAChBA,EAAMiB,SAAS2lB,GACd,SAAW5mB,GAMV,IALA,IAAI8mB,EACF,mGACGpgB,OAGIqC,EAAI,EAAGA,EADQ,EACeA,IACrC+d,EAAmBA,EAAiBngB,QAAQ,WAAW,WACrD,OAAOmgB,KAGXA,EAAmBA,EAAiBngB,QAAQ,UAAW,UAAUD,QACjE,IAAImgB,EAAY7mB,EAAMqB,UAAUwlB,SAAW,CACzC/iB,QAAS,8BACT,kBAAmB,CACjBE,QAASe,OACP,8DAA8D2B,OAAOC,QACnE,WACA,WACE,OAAOmgB,KAGX,KAEF7iB,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNqiB,OAAQ,CACN/iB,QAAS,eACTC,YAAY,EACZjC,MAAO,kBACP0C,OAAQ,CACN,oBAAqB,CACnBV,QAAS,iBACTS,QAAQ,EACRC,OAAQ,CACNL,YAAa,YACbwiB,SAAU,CACR7iB,QAAS,UACThC,MAAO,oBACP0C,OAAQ,QAIdwE,KAAMlJ,EAAMqB,UAAU0lB,SAG1B1iB,YAAa,MAGjBN,OAAQ,CACNC,QAAS,oBACTS,QAAQ,GAEV,aAAc,CACZT,QAAS,mBACTC,YAAY,GAEdC,QAAS,CACPF,QAAS,iBACTU,OAAQ,CACNL,YAAa,QAGjBD,SAAU,aACVC,YAAa,CACXL,QACE,uGACFC,YAAY,GAEdE,OAAQ,qBAEV0iB,EAAS,mBAAmBniB,OAA5B,OAA6CA,OAC3C,qBACAA,OAFF,SAEqBA,OAASmiB,EAC9B7mB,EAAMqB,UAAU2lB,GAAKH,EA3EtB,CA4EE7mB,GAjFLsB,EAAOC,QAAUslB,EACjBA,EAAS1lB,YAAc,WACvB0lB,EAASviB,QAAU,I,sBCHnB,IAAI8P,EAA4B9T,EAAQ,OAIxC,SAAS2mB,EAAOjnB,GACdA,EAAMiB,SAASmT,GACfpU,EAAMqB,UAAU4lB,OAAS,CACvBnjB,QAAS,CACPE,QAAS,2DACTC,YAAY,GAEdsI,UAAW,CACTvI,QAAS,0CACThC,MAAO,eAET+B,OAAQ,CACNC,QAAS,kBACTS,QAAQ,GAEVP,QACE,oOACFkW,OACE,gzBACF1U,SAAU,CACR,CACE1B,QAAS,aACTC,YAAY,EACZjC,MAAO,UAET,CAEEgC,QAAS,6BACTC,YAAY,IAGhBqB,QAAS,yBACTX,MAAO,CACLX,QAAS,OACThC,MAAO,YAGTmC,OAAQ,oBACRC,SAAU,wDACVC,YAAa,aACb6iB,MAAO,CACLljB,QAAS,YACThC,MAAO,YAGXhC,EAAMwD,MAAM2F,IAAI,mBAAmB,SAAUpG,GAC3C,IAEIokB,GAAY,EAChBnnB,EAAMqB,UAAU,qBAAqBmT,kBACnCzR,EACA,SAJA,uGAMA,SAAUqkB,GACR,IAAIC,EAAW,iBAAiBpT,KAAKmT,GACrC,GAAIC,EAAU,CACZ,IAAIjkB,EAAMikB,EAAS,GACnB,GAAY,QAARjkB,IAAkB+jB,EAEpB,OADAA,GAAY,GACL,EACF,GAAY,WAAR/jB,EAET,OADA+jB,GAAY,GACL,EAGX,OAAQA,QAIdnnB,EAAMwD,MAAM2F,IAAI,kBAAkB,SAAUpG,GAC1C/C,EAAMqB,UAAU,qBAAqBoT,qBAAqB1R,EAAK,aAzEnEzB,EAAOC,QAAU0lB,EACjBA,EAAO9lB,YAAc,SACrB8lB,EAAO3iB,QAAU,I,kBCCjB,SAASgjB,EAAKtnB,IACX,SAAWA,GAIV,SAASunB,EAAY7lB,GACnB,OAAOqD,OAAO,QAAUrD,EAAO,gBAEjC,SAAS8lB,EAAUxjB,GACjB,OAAOe,OAAO,YAAcf,EAAU,cAIxC,IAAIiG,EAAS,wBAETwd,EAAM,QACNC,EAAS,UAETnlB,EAAW,CAGbolB,QAAS,CACP3jB,QAAS,QACThC,MAAO,CAAC,UAAW,UAErB8B,QAAS,MACTC,OAAQ,CACNC,QAAS,oBACTS,QAAQ,EACRC,OAAQ,CACNiG,SAAU,oBACVV,OAAQlF,OAAO,IAAMkF,EAAS,OAGlC,gBAAiB,CACfjG,QAASe,OAAO,MAAQkF,GACxBjI,MAAO,CAAC,WAAY,WAEtB,gBAAiB,CACfgC,QAASe,OAAO,IAAMkF,GACtBjI,MAAO,YAETogB,OAAQ,CACNpe,QAASe,OAAO,MAAQkF,GACxBjI,MAAO,CAAC,SAAU,aAEpBkC,QAAS,CACP,CACEF,QAASe,OACP0iB,2JAIFxjB,YAAY,GAEd,CACED,QAASe,OACP0iB,qEAIFxjB,YAAY,IAGhB2jB,QAAS,CACP5jB,QAASujB,EAAY,WACrBtjB,YAAY,EACZjC,MAAO,WAET6lB,YAAa,CACX7jB,QAASujB,EAAY,eACrBtjB,YAAY,EACZjC,MAAO,WAETsD,QAAS,CACPtB,QAASwjB,EAAU,aACnBvjB,YAAY,GAEdE,OAAQ,CACNH,QAASwjB,EAAU,yBACnBvjB,YAAY,GAEd6jB,OAAQ,CACN9jB,QAASe,OAAO0iB,yCAA4Cxd,GAC5DhG,YAAY,EACZS,OAAQ,CACNR,QAAS,aACTsB,SAAUT,OAAOkF,KAGrB8d,MAAO,CACL/jB,QAASe,OACP0iB,0CAEExd,EACA,wBAEJhG,YAAY,EACZS,OAAQ,CACNR,QAAS,kBAGT8jB,UAAW,KACXtiB,SAAU,CACR1B,QAASe,OAAO,SAAWkF,GAC3BhG,YAAY,GAEdI,YAAa,SAGjB4jB,OAAQ,CACNjkB,QAASe,OACP0iB,8BAEExd,EACA,YACAA,EACA,eAEJhG,YAAY,EACZS,OAAQ,CACNR,QAAS,UAGT8jB,UAAW,KACX3jB,YAAa,SAGjB6jB,IAAK,CACHlkB,QAASe,OAAO0iB,EAAMxd,GACtBhG,YAAY,GAEdI,YAAa,CAEX,uBACA,CACEL,QAAS,eACTC,YAAY,KAIdkkB,EAAM,CACR,cAAepjB,OAhIJ,0BAiIXmE,KAAM,CACJyB,SAAU,CACR3G,QAASe,OAAOkF,GAChBjI,MAAO,YAETomB,QAAS,CACPpkB,QAASe,OAAO0iB,EAAMxd,EAAS,mBAAqByd,GACpDzjB,YAAY,EACZS,OAAQ,CACNX,OAAQxB,EAASwB,OACjBuB,QAAS/C,EAAS+C,QAClBnB,OAAQ5B,EAAS4B,OACjB8F,OAAQ1H,EAAS0H,OACjB5F,YAAa,WAKjBgkB,EAAQ,oBACRC,EAAU,CACZtkB,QAASe,OAAO0iB,yBAChBxjB,YAAY,EACZS,OAAQ,CACN,YAAa,CACXV,QAASe,OAAO,qBAAuBsjB,GACvC3jB,OAAQyjB,GAEV,oBAAqB,CACnBnkB,QAASe,OAAO,wBAA0BsjB,GAC1C3jB,OAAQyjB,GAEVtf,KAAM,CACJ7E,QAASe,OAAO,WAAasjB,EAAQ,8BACrC3jB,OAAQyjB,GAEVxd,SAAU,CACR3G,QAASe,OAAOkF,GAChBjI,MAAO,YAETqC,YAAa,SAGjB9B,EAAQ,OAAWmC,OAAOsjB,UAAYM,EACtC/lB,EAAQ,MAAUmC,OAAOsjB,UAAYhoB,EAAM4B,KAAK4iB,MAAM8D,GACtD/lB,EAAQ,MAAUmC,OAAOsjB,UAAUtjB,OAAO6jB,QAAUD,EACpDtoB,EAAMqB,UAAUimB,KAAO/kB,EACvBvC,EAAMqB,UAAUmnB,MAAQjmB,EACxBvC,EAAMqB,UAAUonB,MAAQlmB,EACxBvC,EAAMqB,UAAU,cAAgBkB,EA9LjC,CA+LEvC,GAnMLsB,EAAOC,QAAU+lB,EACjBA,EAAKnmB,YAAc,OACnBmmB,EAAKhjB,QAAU,I,kBCCf,SAASokB,EAAW1oB,GAClBA,EAAMqB,UAAUqnB,WAAa,CAC3B5kB,QAAS,CACP,CACEE,QAAS,4BACTC,YAAY,GAEd,CACED,QAAS,eACTC,YAAY,IAGhB,sBAAuB,CAGrBD,QAAS,kDACTC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNc,SAAU,CACRxB,QAAS,sCACTC,YAAY,GAEd6H,cAAe,CACb9H,QAAS,uBACTC,YAAY,EACZS,OAAQ,CACN,4BAA6B,CAC3BV,QAAS,WACThC,MAAO,cAIb+B,OAAQ,YAGZA,OAAQ,CACN,CACEC,QAAS,qCACTS,QAAQ,GAEV,CACET,QAAS,iBACTS,QAAQ,GAEV,kBAEF4B,MAAO,CACL,CACErC,QAAS,8DACTS,QAAQ,EACRC,OAAQ,CACNZ,QAAS,CACPE,QAAS,eACTC,YAAY,KAIlB,CACED,QAAS,uDACTS,QAAQ,IAGZP,QAAS,CACPF,QACE,wQACFC,YAAY,GAEd,mBAAoB,CAClBD,QACE,+JACFC,YAAY,EACZjC,MAAO,YAETsD,QAAS,CACPtB,QAAS,iDACTC,YAAY,GAEd0G,SAAU,CAER3G,QAAS,8BACTC,YAAY,EACZjC,MAAO,YAETmC,OAAQ,2DACR2G,WAAY,4BACZ1G,SAAU,CAER,CACEJ,QAAS,aACTC,YAAY,GAwBd,qLAEFI,YAAa,oBAEfrE,EAAMqB,UAAUqnB,WAAW,uBAAuBhkB,OAAlD,cAEEA,OAAOwE,KAAOlJ,EAAMqB,UAAUqnB,WA3HlCpnB,EAAOC,QAAUmnB,EACjBA,EAAWvnB,YAAc,aACzBunB,EAAWpkB,QAAU,I,kBCCrB,SAASqkB,EAAK3oB,IACX,SAAWA,GACVA,EAAMqB,UAAUsnB,KAAO,CACrB7kB,QAAS,MACTC,OAAQ,CACNC,QAAS,UACTS,QAAQ,GAEVa,QAAS,qBACTE,SAAU,iDACVS,MAAO,oCACPpE,KAAM,CACJmC,QACE,iGACFhC,MAAO,cAETkC,QAAS,uBACTC,OACE,gIACFE,YAAa,qBAlBhB,CAoBErE,GAxBLsB,EAAOC,QAAUonB,EACjBA,EAAKxnB,YAAc,OACnBwnB,EAAKrkB,QAAU,I,kBCCf,SAASskB,EAAI5oB,GAKXA,EAAMqB,UAAUunB,IAAM,CACpB7kB,OAAQ,CAENC,QAAS,2DACTS,QAAQ,GAEVokB,UAAW,CACT7kB,QACE,uIACFC,YAAY,EACZQ,QAAQ,EACRzC,MAAO,CAAC,iBAAkB,2BAC1B0C,OAAQ1E,EAAMqB,UAAN,gBAAqC,CAC3C6C,QAAS,SACTwB,SAAU,qBACVrB,YAAa,WAGjByJ,MAAO,CACL,CACE9J,QACE,6EACFhC,MAAO,CAAC,QAAS,cAEnB,CACEgC,QAAS,2BACThC,MAAO,CAAC,UAAW,cAErB,CACEgC,QAAS,yCACThC,MAAO,CAAC,OAAQ,YAElB,CACEgC,QAAS,yBACThC,MAAO,CAAC,QAAS,YAEnB,CACEgC,QAAS,6CACThC,MAAO,CAAC,QAAS,aAGrBuF,SAAU,CACRvD,QACE,wFACFC,YAAY,GAEd6kB,UAAW,CACT9kB,QAAS,oCACTC,YAAY,EACZjC,MAAO,WAETuG,IAAK,oDACLwgB,MAAO,CACL/kB,QAAS,6DACTC,YAAY,EACZjC,MAAO,OAET,aAAc,CACZgC,QAAS,mCACThC,MAAO,YAET,cAAe,CACbgC,QAAS,sCACThC,MAAO,YAETgnB,OAAQ,CACNhlB,QACE,qEACFC,YAAY,EACZjC,MAAO,YAETinB,KAAM,CACJjlB,QACE,oEACFhC,MAAO,YAETwR,KAAM,CACJxP,QAAS,6BACThC,MAAO,YAET,YAAa,CACXgC,QACE,qFACFC,YAAY,EACZQ,QAAQ,EACRzC,MAAO,UAEToR,KAAM,CACJpP,QAASe,OACP,4DAA4D2B,OAC1D,IACA,4FACGA,OACH,IACA,uKACGA,OACL,KAEF1E,MAAO,UAETknB,KAAM,CACJllB,QACE,qEACFhC,MAAO,UAETsD,QAAS,2BACTnB,OAAQ,CACNH,QACE,yGACFC,YAAY,GAEdG,SAAU,6BACVC,YAAa,YAxHjB/C,EAAOC,QAAUqnB,EACjBA,EAAIznB,YAAc,MAClBynB,EAAItkB,QAAU,I,kBCCd,SAAS6kB,EAAQnpB,GACfA,EAAMqB,UAAU8nB,QAAU,CACxBrlB,QAAS,CAAC,2BAA4B,WACtCC,OAAQ,CACNC,QAAS,kBACTU,OAAQ,CACNc,SAAU,aACVyE,OAAQ,CAAC,iBAAkB,cAAe,aAE5CxF,QAAQ,GAEVN,OAAQ,sCACR8F,OAAQ,CACNjG,QAAS,iEACTC,YAAY,EACZS,OAAQ,CACNR,QAAS,YAGb+B,MAAO,CACLjC,QAAS,iDACTC,YAAY,EACZjC,MAAO,UAET0D,SAAU,CACR1B,QAAS,6CACTC,YAAY,GAEdC,QAAS,CACP,CACEF,QACE,sRACFC,YAAY,GAEd,gBAEFqB,QAAS,CACPtB,QAAS,+BACTC,YAAY,GAEduB,SAAU,CACRxB,QAAS,qBACTC,YAAY,GAEdG,SAAU,CACRJ,QACE,uHACFC,YAAY,GAEdI,YAAa,oBApDjB/C,EAAOC,QAAU4nB,EACjBA,EAAQhoB,YAAc,UACtBgoB,EAAQ7kB,QAAU,I,kBCClB,SAASqS,EAAI3W,GACXA,EAAMqB,UAAUsV,IAAM,CACpB7S,QAAS,yCAETC,OAAQ,CACNC,QACE,qFACFS,QAAQ,GAEVN,OACE,gHACFD,QACE,0HACFwB,SAAU,2BACVtB,SAAU,CACR,wCACA,CAEEJ,QAAS,qBACTC,YAAY,IAGhBI,YAAa,uBAzBjB/C,EAAOC,QAAUoV,EACjBA,EAAIxV,YAAc,MAClBwV,EAAIrS,QAAU,I,kBCCd,SAAS8kB,EAAMppB,GACbA,EAAMqB,UAAU+nB,MAAQ,CACtBC,OAAQ,CACNrlB,QACE,2GACFC,YAAY,EACZQ,QAAQ,GAEVX,QAAS,CACPE,QAAS,0BACTS,QAAQ,GAEVV,OAAQ,CACNC,QAAS,kCACTC,YAAY,EACZQ,QAAQ,GAGVP,QACE,ggBACFoB,QAAS,qBACTgkB,UAAW,CACTtlB,QAAS,uBACThC,MAAO,cAET0D,SAAU,wBACVvB,OAAQ,CACNH,QACE,uFACFC,YAAY,GAEdG,SAAU,0BACVC,YAAa,mBAnCjB/C,EAAOC,QAAU6nB,EACjBA,EAAMjoB,YAAc,QACpBioB,EAAM9kB,QAAU,I,kBCChB,SAASilB,EAASvpB,GAChBA,EAAMqB,UAAUkoB,SAAW,CACzBzlB,QAAS,CACPE,QAAS,6CACTC,YAAY,GAEdF,OAAQ,CACNC,QAAS,iDACTS,QAAQ,GAGViD,QAAS,gCAETuC,OAAQ,CACNjG,QAAS,8CACTU,OAAQ,CACNc,SAAU,wCAGdA,SAAU,wDACVtB,QAAS,CAEP,6HACA,CACEF,QACE,wQACFC,YAAY,IAGhBG,SAAU,uBACVC,YAAa,YAjCjB/C,EAAOC,QAAUgoB,EACjBA,EAASpoB,YAAc,WACvBooB,EAASjlB,QAAU,I,kBCCnB,SAAS2V,EAASja,IACf,SAAWA,GAEV,IAAIwpB,EAAQ,2CAA2C9iB,OAWvD,SAAS+iB,EAAazlB,GAIpB,OAHAA,EAAUA,EAAQ2C,QAAQ,YAAY,WACpC,OAAO6iB,KAEFzkB,OAAO,0BAA0B2B,OAAS,MAAQ1C,EAAU,KAErE,IAAI0lB,EAAY,4DACbhjB,OACCsS,EACF,+CAA+CtS,OAAOC,QACpD,OACA,WACE,OAAO+iB,KAGTC,EACF,sEACGjjB,OACL1G,EAAMqB,UAAU4Y,SAAWja,EAAMqB,UAAU6D,OAAO,SAAU,IAC5DlF,EAAMqB,UAAU8D,aAAa,WAAY,SAAU,CACjD,qBAAsB,CACpBnB,QAAS,kDACTC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNL,YAAa,YACb,cAAe,CACbL,QAAS,iBACThC,MAAO,CAAC,OAAQ,iBAChB0C,OAAQ1E,EAAMqB,UAAUuoB,QAI9BC,WAAY,CAEV7lB,QAAS,kBACThC,MAAO,eAET+F,MAAO,CACL/D,QAASe,OACP,IAAMiU,EAAW2Q,EAAY,MAAQ3Q,EAAW,KAChD,KAEFtU,OAAQ,CACN,kBAAmB,CACjBV,QAASe,OACP,KAAOiU,EAAW2Q,EAAY,OAAS3Q,EAAW,OAEpD/U,YAAY,EACZS,OAAQ,CACN,aAAc,CACZV,QAASe,OAAO2kB,GAChBhlB,OAAQ1E,EAAMqB,UAAU4Y,UAE1B5V,YAAa,OAGjB,aAAc,CACZL,QAASe,OAAO,KAAOiU,EAAW,IAAM2Q,EAAY,KACpD1lB,YAAY,EACZS,OAAQ,CACNL,YAAa,iBAGjB,mBAAoB,CAClBL,QAASe,OAAO,IAAMiU,EAAW,KACjCtU,OAAQ,CACN,eAAgB,CACdV,QAASe,OAAO2kB,GAChB1nB,MAAO,YACP0C,OAAQ1E,EAAMqB,UAAU4Y,UAE1B5V,YAAa,SAKrBsX,KAAM,CACJ,CAEE3X,QACE,uFACFC,YAAY,EACZjC,MAAO,WAET,CAIEgC,QAAS,qBACTS,QAAQ,EACRC,OAAQ,CACN,aAAc,CACZV,QAAS,qDACTC,YAAY,GAEd,gBAAiB,CACfD,QAAS,WACTC,YAAY,GAEdI,YAAa,SAInB4D,MAAO,CACL,CAKEjE,QAAS,0CACThC,MAAO,YACP0C,OAAQ,CACNL,YAAa,cAGjB,CAGEL,QAAS,aACTC,YAAY,EACZjC,MAAO,YACP0C,OAAQ,CACNL,YAAa,aAInB6D,GAAI,CAKFlE,QAAS,wCACTC,YAAY,EACZjC,MAAO,eAETE,KAAM,CAKJ8B,QAAS,mCACTC,YAAY,EACZjC,MAAO,eAET,gBAAiB,CAKfgC,QACE,qHACFU,OAAQ,CACNc,SAAU,CACRxB,QAAS,gBACTC,YAAY,GAEdF,OACE,+DACFM,YAAa,kBAEfrC,MAAO,OAETyG,KAAM,CAIJzE,QAASylB,EACP,kGACG/iB,QAELzC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNvB,QAAS,CACPa,QAAS,sBACTC,YAAY,EACZS,OAAQ,IAEVL,YAAa,YAGjBmE,OAAQ,CAINxE,QAASylB,EACP,kGACG/iB,QAELzC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNvB,QAAS,CACPa,QAAS,oBACTC,YAAY,EACZS,OAAQ,IAEVL,YAAa,SAGjBylB,OAAQ,CAIN9lB,QAASylB,EAAa,2BAA2B/iB,QACjDzC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNvB,QAAS,CACPa,QAAS,uBACTC,YAAY,EACZS,OAAQ,IAEVL,YAAa,QAGjB,eAAgB,CAGdL,QACE,mEACFC,YAAY,EACZQ,QAAQ,EACRzC,MAAO,CAAC,OAAQ,YAElBuG,IAAK,CAIHvE,QAASylB,EACP,mGACG/iB,QAELzC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNN,SAAU,KACVjB,QAAS,CACPa,QAAS,oBACTC,YAAY,EACZS,OAAQ,IAEVc,SAAU,CACRxB,QAAS,6BACTC,YAAY,GAEdsE,IAAK,CACHvE,QAAS,iBACTC,YAAY,GAEdF,OAAQ,CACNC,QAAS,oCACTC,YAAY,OAKnB,CAAC,MAAO,OAAQ,SAAU,UAAU6P,SAAQ,SAAUwG,GACpD,CAAC,MAAO,OAAQ,SAAU,SAAU,gBAAgBxG,SAAQ,SAC3DpP,GAEI4V,IAAU5V,IACZ1E,EAAMqB,UAAU4Y,SAASK,GAAO5V,OAAOvB,QAAQuB,OAAOA,GACpD1E,EAAMqB,UAAU4Y,SAASvV,UAIjC1E,EAAMwD,MAAM2F,IAAI,kBAAkB,SAAUpG,GACrB,aAAjBA,EAAIR,UAA4C,OAAjBQ,EAAIR,UAGvC,SAASsgB,EAAWlgB,GAClB,GAAKA,GAA4B,kBAAXA,EAGtB,IAAK,IAAIoG,EAAI,EAAGC,EAAIrG,EAAOR,OAAQ4G,EAAIC,EAAGD,IAAK,CAC7C,IAAIuR,EAAQ3X,EAAOoG,GACnB,GAAmB,SAAfuR,EAAMzY,KAAV,CAiBA,IAAIkoB,EAAWzP,EAAMnX,QAAQ,GACzB6mB,EAAY1P,EAAMnX,QAAQ,GAC9B,GACE4mB,GACAC,GACkB,kBAAlBD,EAASloB,MACU,eAAnBmoB,EAAUnoB,MACkB,kBAArBkoB,EAAS5mB,QAChB,CAGA,IAAIwc,EAAOoK,EAAS5mB,QACjBwD,QAAQ,OAAQ,SAChBA,QAAQ,UAAW,MAElB3E,EAAQ,aADZ2d,GAAQ,eAAe1L,KAAK0L,IAAS,CAAC,KAAK,GAAGsK,eAEzCD,EAAUhoB,MAEuB,kBAApBgoB,EAAUhoB,MAC1BgoB,EAAUhoB,MAAQ,CAACgoB,EAAUhoB,MAAOA,GAEpCgoB,EAAUhoB,MAAMS,KAAKT,GAJrBgoB,EAAUhoB,MAAQ,CAACA,SAjCrB6gB,EAAWvI,EAAMnX,UA0CvB0f,CAAW9f,EAAIJ,WAEjB3C,EAAMwD,MAAM2F,IAAI,QAAQ,SAAUpG,GAChC,GAAiB,eAAbA,EAAIlB,KAAR,CAIA,IADA,IAAIkoB,EAAW,GACNhhB,EAAI,EAAGC,EAAIjG,EAAIM,QAAQlB,OAAQ4G,EAAIC,EAAGD,IAAK,CAClD,IAAImhB,EAAMnnB,EAAIM,QAAQ0F,GAClBqe,EAAQ,gBAAgBnT,KAAKiW,GACjC,GAAI9C,EAAO,CACT2C,EAAW3C,EAAM,GACjB,OAGJ,IAAIlmB,EAAUlB,EAAMqB,UAAU0oB,GAC9B,GAAK7oB,EAoBH6B,EAAII,QAAUnD,EAAMwB,UA4BxB,SAAqBoQ,GAEnB,IAAI4M,EAAO5M,EAAKjL,QAAQwjB,EAAY,IAmBpC,OAlBA3L,EAAOA,EAAK7X,QAAQ,iCAAiC,SAAU6D,EAAGmR,GAG9D,IAAIla,EADN,GAAgB,OADhBka,EAAOA,EAAKsO,eACH,GAOP,OAJExoB,EADc,MAAZka,EAAK,GACCyO,SAASzO,EAAK0O,MAAM,GAAI,IAExBC,OAAO3O,EAAK0O,MAAM,IAErBE,EAAc9oB,GAErB,IAAI+oB,EAAQC,EAAmB9O,GAC/B,OAAI6O,GAGGhgB,KA7CPkgB,CAAY3nB,EAAII,QAAQ1B,OACxBP,EACA6oB,QAtBF,GAAIA,GAAyB,SAAbA,GAAuB/pB,EAAM2qB,QAAQC,WAAY,CAC/D,IAAIxY,EACF,OACA,IAAIyY,MAAOC,UACX,IACAC,KAAKC,MAAsB,KAAhBD,KAAKE,UAClBloB,EAAIO,WAAJ,GAAuB8O,EACvBpS,EAAM2qB,QAAQC,WAAWM,cAAcnB,GAAU,WAC/C,IAAIoB,EAAMC,SAASC,eAAejZ,GAC9B+Y,IACFA,EAAIG,UAAYtrB,EAAMwB,UACpB2pB,EAAIT,YACJ1qB,EAAMqB,UAAU0oB,GAChBA,YAaZ,IAAII,EAAaplB,OAAO/E,EAAMqB,UAAUb,OAAO4C,IAAIY,QAAQ0C,OAAQ,MAQ/D+jB,EAAqB,CACvBc,IAAK,IACLC,GAAI,IACJC,GAAI,IACJC,KAAM,KAEJnB,EAAgBoB,OAAOpB,eAAiBoB,OAAOC,aA8BnD5rB,EAAMqB,UAAUwqB,GAAK7rB,EAAMqB,UAAU4Y,SAratC,CAsaEja,GA1aLsB,EAAOC,QAAU0Y,EACjBA,EAAS9Y,YAAc,WACvB8Y,EAAS3V,QAAU,CAAC,O,kBCCpB,SAASiQ,EAAiBvU,IACvB,SAAWA,GAQV,SAAS2hB,EAAepf,EAAUH,GAChC,MAAO,MAAQG,EAASsf,cAAgBzf,EAAQ,MAElDyR,OAAOiY,iBAAkB9rB,EAAMqB,UAAU,qBAAuB,GAAK,CACnEmT,kBAAmB,CAYjB/S,MAAO,SAAUsB,EAAKR,EAAUwpB,EAAoBC,GAClD,GAAIjpB,EAAIR,WAAaA,EAArB,CAGA,IAAI0pB,EAAclpB,EAAIkpB,WAAa,GACnClpB,EAAI4Y,KAAO5Y,EAAI4Y,KAAKhV,QAAQolB,GAAoB,SAAU3E,GACxD,GAA6B,oBAAlB4E,IAAiCA,EAAc5E,GACxD,OAAOA,EAIT,IAFA,IACI1E,EADA3Z,EAAIkjB,EAAW9pB,QAIhB,IADDY,EAAI4Y,KAAKT,QAASwH,EAAcf,EAAepf,EAAUwG,OAGvDA,EAGJ,OADAkjB,EAAWljB,GAAKqe,EACT1E,KAET3f,EAAI7B,QAAUlB,EAAMqB,UAAUb,UAGlCiU,qBAAsB,CAOpBhT,MAAO,SAAUsB,EAAKR,GACpB,GAAIQ,EAAIR,WAAaA,GAAaQ,EAAIkpB,WAAtC,CAGAlpB,EAAI7B,QAAUlB,EAAMqB,UAAUkB,GAC9B,IAAIqc,EAAI,EACJ/V,EAAOgL,OAAOhL,KAAK9F,EAAIkpB,aAC3B,SAASpJ,EAAWlgB,GAClB,IAAK,IAAIoG,EAAI,EAAGA,EAAIpG,EAAOR,UAErByc,GAAK/V,EAAK1G,QAFmB4G,IAAK,CAKtC,IAAIuR,EAAQ3X,EAAOoG,GACnB,GACmB,kBAAVuR,GACNA,EAAMnX,SAAoC,kBAAlBmX,EAAMnX,QAC/B,CACA,IAAI0U,EAAIhP,EAAK+V,GACT9D,EAAI/X,EAAIkpB,WAAWpU,GACnBiL,EAAqB,kBAAVxI,EAAqBA,EAAQA,EAAMnX,QAC9Cuf,EAAcf,EAAepf,EAAUsV,GACvCzV,EAAQ0gB,EAAE5H,QAAQwH,GACtB,GAAItgB,GAAS,EAAG,GACZwc,EACF,IAAImE,EAASD,EAAEE,UAAU,EAAG5gB,GACxB6gB,EAAS,IAAIjjB,EAAM4C,MACrBL,EACAvC,EAAM+hB,SAASjH,EAAG/X,EAAI7B,SACtB,YAAcqB,EACduY,GAEEoI,EAAQJ,EAAEE,UAAU5gB,EAAQsgB,EAAYvgB,QACxCuG,EAAc,GACdqa,GACFra,EAAYjG,KAAK0f,MAAMzZ,EAAama,EAAW,CAACE,KAElDra,EAAYjG,KAAKwgB,GACbC,GACFxa,EAAYjG,KAAK0f,MAAMzZ,EAAama,EAAW,CAACK,KAE7B,kBAAV5I,EACT3X,EAAOyf,OAAOD,MAAMxf,EAAQ,CAACoG,EAAG,GAAGxF,OAAOmF,IAE1C4R,EAAMnX,QAAUuF,QAIpB4R,EAAMnX,SAGN0f,EAAWvI,EAAMnX,SAGrB,OAAOR,EAETkgB,CAAW9f,EAAIJ,aA9GtB,CAkHE3C,GAtHLsB,EAAOC,QAAUgT,EACjBA,EAAiBpT,YAAc,mBAC/BoT,EAAiBjQ,QAAU,I,kBCC3B,SAAS9D,EAAOR,GACdA,EAAMqB,UAAUb,OAAS,CACvBsD,QAAS,CACPE,QAAS,8BACTS,QAAQ,GAEVghB,OAAQ,CACNzhB,QAAS,iBACTS,QAAQ,GAEViX,QAAS,CAEP1X,QACE,uHACFS,QAAQ,EACRC,OAAQ,CACN,kBAAmB,CACjBV,QAAS,6BACTC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,MAEVX,OAAQ,CACNC,QAAS,kBACTS,QAAQ,GAEVJ,YAAa,eACb,cAAe,YACf3C,KAAM,eAGVskB,MAAO,CACLhiB,QAAS,4BACTS,QAAQ,GAEVrB,IAAK,CACHY,QACE,uHACFS,QAAQ,EACRC,OAAQ,CACNtB,IAAK,CACHY,QAAS,iBACTU,OAAQ,CACNL,YAAa,QACbsJ,UAAW,iBAGf,eAAgB,GAChB,aAAc,CACZ3J,QAAS,qCACTU,OAAQ,CACNL,YAAa,CACX,CACEL,QAAS,KACThC,MAAO,eAET,SAINqC,YAAa,OACb,YAAa,CACXL,QAAS,YACTU,OAAQ,CACNiJ,UAAW,mBAKnBhF,OAAQ,CACN,CACE3E,QAAS,kBACThC,MAAO,gBAET,uBAGJhC,EAAMqB,UAAUb,OAAhB,IAA8BkE,OAAO,cAAcA,OAAnD,OACE1E,EAAMqB,UAAUb,OAAhB,OACFR,EAAMqB,UAAUb,OAAhB,QAAkCkE,OAAO,mBAAmBA,OAC1D1E,EAAMqB,UAAUb,OAClBR,EAAMwD,MAAM2F,IAAI,QAAQ,SAAUpG,GACf,WAAbA,EAAIlB,OACNkB,EAAIO,WAAJ,MAA0BP,EAAII,QAAQ1B,MAAMkF,QAAQ,QAAS,SAGjEkN,OAAOM,eAAenU,EAAMqB,UAAUb,OAAO4C,IAAK,aAAc,CAY9D3B,MAAO,SAAoBojB,EAASlF,GAClC,IAAIuM,EAAsB,GAC1BA,EAAoB,YAAcvM,GAAQ,CACxC3b,QAAS,oCACTC,YAAY,EACZS,OAAQ1E,EAAMqB,UAAUse,IAE1BuM,EAAmB,MAAY,uBAC/B,IAAIxnB,EAAS,CACX,iBAAkB,CAChBV,QAAS,4BACTU,OAAQwnB,IAGZxnB,EAAO,YAAcib,GAAQ,CAC3B3b,QAAS,UACTU,OAAQ1E,EAAMqB,UAAUse,IAE1B,IAAIwM,EAAM,GACVA,EAAItH,GAAW,CACb7gB,QAASe,OACP,wFAAwF2B,OAAOC,QAC7F,OACA,WACE,OAAOke,KAGX,KAEF5gB,YAAY,EACZQ,QAAQ,EACRC,OAAQA,GAEV1E,EAAMqB,UAAU8D,aAAa,SAAU,QAASgnB,MAGpDtY,OAAOM,eAAenU,EAAMqB,UAAUb,OAAO4C,IAAK,eAAgB,CAYhE3B,MAAO,SAAU2qB,EAAUzM,GACzB3f,EAAMqB,UAAUb,OAAO4C,IAAIsB,OAAO,gBAAgBjC,KAAK,CACrDuB,QAASe,OACP,aAAa2B,OACX,MACA0lB,EACA,IACA,iDAAiD1lB,OACnD,KAEFzC,YAAY,EACZS,OAAQ,CACN,YAAa,WACb,aAAc,CACZV,QAAS,WACTU,OAAQ,CACNjD,MAAO,CACLuC,QAAS,yCACTC,YAAY,EACZjC,MAAO,CAAC2d,EAAM,YAAcA,GAC5Bjb,OAAQ1E,EAAMqB,UAAUse,IAE1Btb,YAAa,CACX,CACEL,QAAS,KACThC,MAAO,eAET,eAQdhC,EAAMqB,UAAUuQ,KAAO5R,EAAMqB,UAAUb,OACvCR,EAAMqB,UAAUgrB,OAASrsB,EAAMqB,UAAUb,OACzCR,EAAMqB,UAAUirB,IAAMtsB,EAAMqB,UAAUb,OACtCR,EAAMqB,UAAU+D,IAAMpF,EAAMqB,UAAU6D,OAAO,SAAU,IACvDlF,EAAMqB,UAAUkrB,KAAOvsB,EAAMqB,UAAU+D,IACvCpF,EAAMqB,UAAU+U,KAAOpW,EAAMqB,UAAU+D,IACvCpF,EAAMqB,UAAUmrB,IAAMxsB,EAAMqB,UAAU+D,IA9LxC9D,EAAOC,QAAUf,EACjBA,EAAOW,YAAc,SACrBX,EAAO8D,QAAU,CAAC,OAAQ,SAAU,MAAO,MAAO,OAAQ,OAAQ,Q,kBCClE,SAASmoB,EAAOzsB,GACdA,EAAMqB,UAAUorB,OAAS,CACvB3oB,QAAS,CAAC,iBAAkB,OAC5BC,OAAQ,CACNC,QAAS,uBACTS,QAAQ,GAGVN,OAAQ,iEACRD,QACE,8HACFwB,SAAU,uBACVtB,SAAU,0CACVC,YAAa,wBAhBjB/C,EAAOC,QAAUkrB,EACjBA,EAAOtrB,YAAc,SACrBsrB,EAAOnoB,QAAU,I,kBCCjB,SAASooB,EAAU1sB,GACjBA,EAAMqB,UAAUqrB,UAAY,CAC1B5oB,QAAS,CACPE,QAAS,8BACTS,QAAQ,GAEVV,OAAQ,CACNC,QAAS,iDACTC,YAAY,EACZQ,QAAQ,GAEVuS,KAAM,CACJhT,QAAS,4BACTS,QAAQ,EACRzC,MAAO,UAET,sBAAuB,CACrBgC,QAAS,8BACTC,YAAY,EACZjC,MAAO,YAET2I,SAAU,CACR3G,QAAS,oBACThC,MAAO,aAETkC,QACE,2SACFoB,QAAS,4BACT4jB,KAAM,CACJllB,QACE,sGACFC,YAAY,EACZjC,MAAO,UAETmC,OAAQ,CACN,CACEH,QACE,wFACFC,YAAY,GAEd,gBAEFiC,SAAU,8DACVsM,MAAO,CACLxO,QAAS,2DACThC,MAAO,YAEToC,SAAU,4BACVC,YAAa,+BAnDjB/C,EAAOC,QAAUmrB,EACjBA,EAAUvrB,YAAc,YACxBurB,EAAUpoB,QAAU,I,kBCCpB,SAASqoB,EAAI3sB,GACXA,EAAMqB,UAAUsrB,IAAM,CACpB7oB,QAAS,SACT6X,KAAM,CACJ3X,QAAS,wBACTS,QAAQ,EACRzC,MAAO,SACP0C,OAAQ,CACN6H,UAAW,CACTvI,QAAS,QACThC,MAAO,iBAIb+B,OAAQ,CACNC,QAAS,wBACTS,QAAQ,GAEVe,SAAU,QACVrB,OAAQ,4CACRyoB,KAAM,CACJ5oB,QAAS,cACThC,MAAO,YAETkC,QACE,uHACFwB,SACE,2ufACFtB,SAAU,CACR,8CACA,CAEEJ,QAAS,iBACTC,YAAY,GAEd,CAEED,QAAS,iBACTC,YAAY,IAGhBI,YAAa,yBAEfrE,EAAMqB,UAAUsrB,IAAhB,KAA4BjoB,OAAOwE,KAAOlJ,EAAMqB,UAAUsrB,IA9C5DrrB,EAAOC,QAAUorB,EACjBA,EAAIxrB,YAAc,MAClBwrB,EAAIroB,QAAU,I,kBCCd,SAASuoB,EAAQ7sB,GACfA,EAAMqB,UAAUwrB,QAAU,CACxB/oB,QAAS,CACPE,QAAS,OACTS,QAAQ,GAEVqoB,MAAO,CACL9oB,QACE,sEACFC,YAAY,EACZS,OAAQ,CACN6C,SAAU,wBACVnD,SAAU,IACVC,YAAa,MAGjB,oBAAqB,CACnBL,QACE,4IACFC,YAAY,EACZQ,QAAQ,EACRC,OAAQ,CACNsc,MAAO,CACLhd,QAAS,8BACThC,MAAO,YAETiE,MAAO,CACLjC,QAAS,qCACTC,YAAY,EACZjC,MAAO,YAET,aAAc,CACZgC,QAAS,OACThC,MAAO,CAAC,QAAS,eAIvBgf,MAAO,CAML,CAEEhd,QAAS,uDACTC,YAAY,EACZjC,MAAO,YAET,CAGEgC,QACE,qGACFC,YAAY,EACZjC,MAAO,YAET,CAEEgC,QACE,mEACFC,YAAY,EACZjC,MAAO,YAET,CAEEgC,QACE,uFACFC,YAAY,EACZjC,MAAO,aAGXiE,MAAO,CACLjC,QAAS,0CACTC,YAAY,EACZQ,QAAQ,EACRzC,MAAO,YAETwc,KAAM,CACJxa,QAAS,gEACThC,MAAO,UAET+B,OAAQ,CACNC,QAAS,cACTS,QAAQ,GAEVuB,WAAY,CACVhC,QACE,gGACFhC,MAAO,aAETkC,QAAS,CAEP,CACEF,QACE,yOACFC,YAAY,EACZQ,QAAQ,GAEV,CACET,QACE,2KACFC,YAAY,EACZQ,QAAQ,IAGZkE,OAAQ,cACRvE,SAAU,CACRJ,QAAS,gCACTC,YAAY,GAEdI,YAAa,WAlHjB/C,EAAOC,QAAUsrB,EACjBA,EAAQ1rB,YAAc,UACtB0rB,EAAQvoB,QAAU,I,kBCClB,SAASyoB,EAAM/sB,GACbA,EAAMqB,UAAU0rB,MAAQ,CACtBjpB,QAAS,OACTI,QACE,s0BACFwH,UAAW,CACT1H,QAAS,cACThC,MAAO,YAETwD,SAAU,aACVrB,OAAQ,gBACRC,SAAU,mBACVC,YAAa,yBAfjB/C,EAAOC,QAAUwrB,EACjBA,EAAM5rB,YAAc,QACpB4rB,EAAMzoB,QAAU,I,iBCChB,SAAS0oB,EAAQhtB,IACd,SAAWA,GACV,IAAIitB,EAAY,CAEd,MACA,MACA,OACA,MACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,UACA,QACA,QACA,cACA,OACA,SACA,QACA,SACA,iBACA,aACA,QACA,cACA,OACA,aACA,QACA,gBACA,cACA,gBACA,cACA,WACA,aACA,QACA,SACA,eACA,OACA,OACA,OACA,OACA,UACA,OACA,eACA,SACA,YACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,OACA,aACA,UACA,cACA,aACA,SACA,aACA,SACA,WACA,eACA,SACA,cACA,SACA,qBACA,gBACA,UACA,SACA,SACA,OACA,kBACA,WACA,UACA,eACA,eACA,UACA,OACA,QACA,QACA,eACA,aACA,SACA,UACA,OACA,eACA,QACA,SACA,OACA,YACA,mBACA,OACA,kBACA,eACA,iBACA,QACA,SACA,QACA,SACA,SACA,OACA,cACA,YACA,QACA,OACA,UACA,gBACA,QACA,WACA,OACA,iBACA,eACA,kBACA,gBACA,cACA,aACA,aACA,oBACA,UACA,MACA,OACA,UACA,SACA,SACA,YACA,MACA,OACA,QACA,UACA,MACA,gBACA,gBACA,aACA,WACA,YACA,gBACA,WACA,eACA,QACA,QACA,OACA,WACA,MACA,OACA,SACA,MACA,OACA,SACA,OACA,OACA,gBACA,QACA,OACA,eACA,UACA,OACA,SACA,YACA,MACA,OACA,iBACA,MACA,OACA,QACA,oBACA,SACA,UACA,aACA,gBACA,cACA,cACA,cACA,gBACA,SACA,SACA,UACA,iBACA,aACA,mBACA,eACA,YACA,QACA,OACA,SACA,SACA,QACA,aACA,cACA,cACA,eACA,YACA,UACA,eACA,YACA,YACA,OACA,UACA,OACA,UACA,UACA,aACA,YACA,SACA,UACA,cACA,YACA,WACA,WACA,QACA,SACA,QACA,QACA,QACA,OACA,WACA,WACA,QACA,OACA,aACA,OACA,WACA,SACA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","sources":["../../node_modules/refractor/core.js","../../node_modules/refractor/index.js","../../node_modules/refractor/lang/abap.js","../../node_modules/refractor/lang/abnf.js","../../node_modules/refractor/lang/actionscript.js","../../node_modules/refractor/lang/ada.js","../../node_modules/refractor/lang/agda.js","../../node_modules/refractor/lang/al.js","../../node_modules/refractor/lang/antlr4.js","../../node_modules/refractor/lang/apacheconf.js","../../node_modules/refractor/lang/apex.js","../../node_modules/refractor/lang/apl.js","../../node_modules/refractor/lang/applescript.js","../../node_modules/refractor/lang/aql.js","../../node_modules/refractor/lang/arduino.js","../../node_modules/refractor/lang/arff.js","../../node_modules/refractor/lang/asciidoc.js","../../node_modules/refractor/lang/asm6502.js","../../node_modules/refractor/lang/aspnet.js","../../node_modules/refractor/lang/autohotkey.js","../../node_modules/refractor/lang/autoit.js","../../node_modules/refractor/lang/avisynth.js","../../node_modules/refractor/lang/avro-idl.js","../../node_modules/refractor/lang/bash.js","../../node_modules/refractor/lang/basic.js","../../node_modules/refractor/lang/batch.js","../../node_modules/refractor/lang/bbcode.js","../../node_modules/refractor/lang/bicep.js","../../node_modules/refractor/lang/birb.js","../../node_modules/refractor/lang/bison.js","../../node_modules/refractor/lang/bnf.js","../../node_modules/refractor/lang/brainfuck.js","../../node_modules/refractor/lang/brightscript.js","../../node_modules/refractor/lang/bro.js","../../node_modules/refractor/lang/bsl.js","../../node_modules/refractor/lang/c.js","../../node_modules/refractor/lang/cfscript.js","../../node_modules/refractor/lang/chaiscript.js","../../node_modules/refractor/lang/cil.js","../../node_modules/refractor/lang/clike.js","../../node_modules/refractor/lang/clojure.js","../../node_modules/refractor/lang/cmake.js","../../node_modules/refractor/lang/cobol.js","../../node_modules/refractor/lang/coffeescript.js","../../node_modules/refractor/lang/concurnas.js","../../node_modules/refractor/lang/coq.js","../../node_modules/refractor/lang/cpp.js","../../node_modules/refractor/lang/crystal.js","../../node_modules/refractor/lang/csharp.js","../../node_modules/refractor/lang/cshtml.js","../../node_modules/refractor/lang/csp.js","../../node_modules/refractor/lang/css-extras.js","../../node_modules/refractor/lang/css.js","../../node_modules/refractor/lang/csv.js","../../node_modules/refractor/lang/cypher.js","../../node_modules/refractor/lang/d.js","../../node_modules/refractor/lang/dart.js","../../node_modules/refractor/lang/dataweave.js","../../node_modules/refractor/lang/dax.js","../../node_modules/refractor/lang/dhall.js","../../node_modules/refractor/lang/diff.js","../../node_modules/refractor/lang/django.js","../../node_modules/refractor/lang/dns-zone-file.js","../../node_modules/refractor/lang/docker.js","../../node_modules/refractor/lang/dot.js","../../node_modules/refractor/lang/ebnf.js","../../node_modules/refractor/lang/editorconfig.js","../../node_modules/refractor/lang/eiffel.js","../../node_modules/refractor/lang/ejs.js","../../node_modules/refractor/lang/elixir.js","../../node_modules/refractor/lang/elm.js","../../node_modules/refractor/lang/erb.js","../../node_modules/refractor/lang/erlang.js","../../node_modules/refractor/lang/etlua.js","../../node_modules/refractor/lang/excel-formula.js","../../node_modules/refractor/lang/factor.js","../../node_modules/refractor/lang/false.js","../../node_modules/refractor/lang/firestore-security-rules.js","../../node_modules/refractor/lang/flow.js","../../node_modules/refractor/lang/fortran.js","../../node_modules/refractor/lang/fsharp.js","../../node_modules/refractor/lang/ftl.js","../../node_modules/refractor/lang/gap.js","../../node_modules/refractor/lang/gcode.js","../../node_modules/refractor/lang/gdscript.js","../../node_modules/refractor/lang/gedcom.js","../../node_modules/refractor/lang/gherkin.js","../../node_modules/refractor/lang/git.js","../../node_modules/refractor/lang/glsl.js","../../node_modules/refractor/lang/gml.js","../../node_modules/refractor/lang/gn.js","../../node_modules/refractor/lang/go.js","../../node_modules/refractor/lang/graphql.js","../../node_modules/refractor/lang/groovy.js","../../node_modules/refractor/lang/haml.js","../../node_modules/refractor/lang/handlebars.js","../../node_modules/refractor/lang/haskell.js","../../node_modules/refractor/lang/haxe.js","../../node_modules/refractor/lang/hcl.js","../../node_modules/refractor/lang/hlsl.js","../../node_modules/refractor/lang/hoon.js","../../node_modules/refractor/lang/hpkp.js","../../node_modules/refractor/lang/hsts.js","../../node_modules/refractor/lang/http.js","../../node_modules/refractor/lang/ichigojam.js","../../node_modules/refractor/lang/icon.js","../../node_modules/refractor/lang/icu-message-format.js","../../node_modules/refractor/lang/idris.js","../../node_modules/refractor/lang/iecst.js","../../node_modules/refractor/lang/ignore.js","../../node_modules/refractor/lang/inform7.js","../../node_modules/refractor/lang/ini.js","../../node_modules/refractor/lang/io.js","../../node_modules/refractor/lang/j.js","../../node_modules/refractor/lang/java.js","../../node_modules/refractor/lang/javadoc.js","../../node_modules/refractor/lang/javadoclike.js","../../node_modules/refractor/lang/javascript.js","../../node_modules/refractor/lang/javastacktrace.js","../../node_modules/refractor/lang/jexl.js","../../node_modules/refractor/lang/jolie.js","../../node_modules/refractor/lang/jq.js","../../node_modules/refractor/lang/js-extras.js","../../node_modules/refractor/lang/js-templates.js","../../node_modules/refractor/lang/jsdoc.js","../../node_modules/refractor/lang/json.js","../../node_modules/refractor/lang/json5.js","../../node_modules/refractor/lang/jsonp.js","../../node_modules/refractor/lang/jsstacktrace.js","../../node_modules/refractor/lang/jsx.js","../../node_modules/refractor/lang/julia.js","../../node_modules/refractor/lang/keyman.js","../../node_modules/refractor/lang/kotlin.js","../../node_modules/refractor/lang/kumir.js","../../node_modules/refractor/lang/kusto.js","../../node_modules/refractor/lang/latex.js","../../node_modules/refractor/lang/latte.js","../../node_modules/refractor/lang/less.js","../../node_modules/refractor/lang/lilypond.js","../../node_modules/refractor/lang/liquid.js","../../node_modules/refractor/lang/lisp.js","../../node_modules/refractor/lang/livescript.js","../../node_modules/refractor/lang/llvm.js","../../node_modules/refractor/lang/log.js","../../node_modules/refractor/lang/lolcode.js","../../node_modules/refractor/lang/lua.js","../../node_modules/refractor/lang/magma.js","../../node_modules/refractor/lang/makefile.js","../../node_modules/refractor/lang/markdown.js","../../node_modules/refractor/lang/markup-templating.js","../../node_modules/refractor/lang/markup.js","../../node_modules/refractor/lang/matlab.js","../../node_modules/refractor/lang/maxscript.js","../../node_modules/refractor/lang/mel.js","../../node_modules/refractor/lang/mermaid.js","../../node_modules/refractor/lang/mizar.js","../../node_modules/refractor/lang/mongodb.js","../../node_modules/refractor/lang/monkey.js","../../node_modules/refractor/lang/moonscript.js","../../node_modules/refractor/lang/n1ql.js","../../node_modules/refractor/lang/n4js.js","../../node_modules/refractor/lang/nand2tetris-hdl.js","../../node_modules/refractor/lang/naniscript.js","../../node_modules/refractor/lang/nasm.js","../../node_modules/refractor/lang/neon.js","../../node_modules/refractor/lang/nevod.js","../../node_modules/refractor/lang/nginx.js","../../node_modules/refractor/lang/nim.js","../../node_modules/refractor/lang/nix.js","../../node_modules/refractor/lang/nsis.js","../../node_modules/refractor/lang/objectivec.js","../../node_modules/refractor/lang/ocaml.js","../../node_modules/refractor/lang/opencl.js","../../node_modules/refractor/lang/openqasm.js","../../node_modules/refractor/lang/oz.js","../../node_modules/refractor/lang/parigp.js","../../node_modules/refractor/lang/parser.js","../../node_modules/refractor/lang/pascal.js","../../node_modules/refractor/lang/pascaligo.js","../../node_modules/refractor/lang/pcaxis.js","../../node_modules/refractor/lang/peoplecode.js","../../node_modules/refractor/lang/perl.js","../../node_modules/refractor/lang/php-extras.js","../../node_modules/refractor/lang/php.js","../../node_modules/refractor/lang/phpdoc.js","../../node_modules/refractor/lang/plsql.js","../../node_modules/refractor/lang/powerquery.js","../../node_modules/refractor/lang/powershell.js","../../node_modules/refractor/lang/processing.js","../../node_modules/refractor/lang/prolog.js","../../node_modules/refractor/lang/promql.js","../../node_modules/refractor/lang/properties.js","../../node_modules/refractor/lang/protobuf.js","../../node_modules/refractor/lang/psl.js","../../node_modules/refractor/lang/pug.js","../../node_modules/refractor/lang/puppet.js","../../node_modules/refractor/lang/pure.js","../../node_modules/refractor/lang/purebasic.js","../../node_modules/refractor/lang/purescript.js","../../node_modules/refractor/lang/python.js","../../node_modules/refractor/lang/q.js","../../node_modules/refractor/lang/qml.js","../../node_modules/refractor/lang/qore.js","../../node_modules/refractor/lang/qsharp.js","../../node_modules/refractor/lang/r.js","../../node_modules/refractor/lang/racket.js","../../node_modules/refractor/lang/reason.js","../../node_modules/refractor/lang/regex.js","../../node_modules/refractor/lang/rego.js","../../node_modules/refractor/lang/renpy.js","../../node_modules/refractor/lang/rest.js","../../node_modules/refractor/lang/rip.js","../../node_modules/refractor/lang/roboconf.js","../../node_modules/refractor/lang/robotframework.js","../../node_modules/refractor/lang/ruby.js","../../node_modules/refractor/lang/rust.js","../../node_modules/refractor/lang/sas.js","../../node_modules/refractor/lang/sass.js","../../node_modules/refractor/lang/scala.js","../../node_modules/refractor/lang/scheme.js","../../node_modules/refractor/lang/scss.js","../../node_modules/refractor/lang/shell-session.js","../../node_modules/refractor/lang/smali.js","../../node_modules/refractor/lang/smalltalk.js","../../node_modules/refractor/lang/smarty.js","../../node_modules/refractor/lang/sml.js","../../node_modules/refractor/lang/solidity.js","../../node_modules/refractor/lang/solution-file.js","../../node_modules/refractor/lang/soy.js","../../node_modules/refractor/lang/sparql.js","../../node_modules/refractor/lang/splunk-spl.js","../../node_modules/refractor/lang/sqf.js","../../node_modules/refractor/lang/sql.js","../../node_modules/refractor/lang/squirrel.js","../../node_modules/refractor/lang/stan.js","../../node_modules/refractor/lang/stylus.js","../../node_modules/refractor/lang/swift.js","../../node_modules/refractor/lang/systemd.js","../../node_modules/refractor/lang/t4-cs.js","../../node_modules/refractor/lang/t4-templating.js","../../node_modules/refractor/lang/t4-vb.js","../../node_modules/refractor/lang/tap.js","../../node_modules/refractor/lang/tcl.js","../../node_modules/refractor/lang/textile.js","../../node_modules/refractor/lang/toml.js","../../node_modules/refractor/lang/tsx.js","../../node_modules/refractor/lang/tt2.js","../../node_modules/refractor/lang/turtle.js","../../node_modules/refractor/lang/twig.js","../../node_modules/refractor/lang/typescript.js","../../node_modules/refractor/lang/typoscript.js","../../node_modules/refractor/lang/unrealscript.js","../../node_modules/refractor/lang/uri.js","../../node_modules/refractor/lang/v.js","../../node_modules/refractor/lang/vala.js","../../node_modules/refractor/lang/vbnet.js","../../node_modules/refractor/lang/velocity.js","../../node_modules/refractor/lang/verilog.js","../../node_modules/refractor/lang/vhdl.js","../../node_modules/refractor/lang/vim.js","../../node_modules/refractor/lang/visual-basic.js","../../node_modules/refractor/lang/warpscript.js","../../node_modules/refractor/lang/wasm.js","../../node_modules/refractor/lang/wiki.js","../../node_modules/refractor/lang/wolfram.js","../../node_modules/refractor/lang/wren.js","../../node_modules/refractor/lang/xeora.js","../../node_modules/refractor/lang/xml-doc.js","../../node_modules/refractor/lang/xojo.js","../../node_modules/refractor/lang/xquery.js","../../node_modules/refractor/lang/yaml.js","../../node_modules/refractor/lang/yang.js","../../node_modules/refractor/lang/zig.js"],"sourcesContent":["'use strict'\n\n/* global window, self */\n\n// istanbul ignore next - Don't allow Prism to run on page load in browser or\n// to start messaging from workers.\nvar ctx =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n    ? self\n    : typeof window === 'object'\n    ? window\n    : typeof global === 'object'\n    ? global\n    : {}\n\nvar restore = capture()\n\nctx.Prism = {manual: true, disableWorkerMessageHandler: true}\n\n// Load all stuff in `prism.js` itself, except for `prism-file-highlight.js`.\n// The wrapped non-leaky grammars are loaded instead of Prism’s originals.\nvar h = require('hastscript')\nvar decode = require('parse-entities')\nvar Prism = require('prismjs/components/prism-core')\nvar markup = require('./lang/markup')\nvar css = require('./lang/css')\nvar clike = require('./lang/clike')\nvar js = require('./lang/javascript')\n\nrestore()\n\nvar own = {}.hasOwnProperty\n\n// Inherit.\nfunction Refractor() {}\n\nRefractor.prototype = Prism\n\n// Construct.\nvar refract = new Refractor()\n\n// Expose.\nmodule.exports = refract\n\n// Create.\nrefract.highlight = highlight\nrefract.register = register\nrefract.alias = alias\nrefract.registered = registered\nrefract.listLanguages = listLanguages\n\n// Register bundled grammars.\nregister(markup)\nregister(css)\nregister(clike)\nregister(js)\n\nrefract.util.encode = encode\nrefract.Token.stringify = stringify\n\nfunction register(grammar) {\n  if (typeof grammar !== 'function' || !grammar.displayName) {\n    throw new Error('Expected `function` for `grammar`, got `' + grammar + '`')\n  }\n\n  // Do not duplicate registrations.\n  if (refract.languages[grammar.displayName] === undefined) {\n    grammar(refract)\n  }\n}\n\nfunction alias(name, alias) {\n  var languages = refract.languages\n  var map = name\n  var key\n  var list\n  var length\n  var index\n\n  if (alias) {\n    map = {}\n    map[name] = alias\n  }\n\n  for (key in map) {\n    list = map[key]\n    list = typeof list === 'string' ? [list] : list\n    length = list.length\n    index = -1\n\n    while (++index < length) {\n      languages[list[index]] = languages[key]\n    }\n  }\n}\n\nfunction highlight(value, name) {\n  var sup = Prism.highlight\n  var grammar\n\n  if (typeof value !== 'string') {\n    throw new Error('Expected `string` for `value`, got `' + value + '`')\n  }\n\n  // `name` is a grammar object.\n  if (refract.util.type(name) === 'Object') {\n    grammar = name\n    name = null\n  } else {\n    if (typeof name !== 'string') {\n      throw new Error('Expected `string` for `name`, got `' + name + '`')\n    }\n\n    if (own.call(refract.languages, name)) {\n      grammar = refract.languages[name]\n    } else {\n      throw new Error('Unknown language: `' + name + '` is not registered')\n    }\n  }\n\n  return sup.call(this, value, grammar, name)\n}\n\nfunction registered(language) {\n  if (typeof language !== 'string') {\n    throw new Error('Expected `string` for `language`, got `' + language + '`')\n  }\n\n  return own.call(refract.languages, language)\n}\n\nfunction listLanguages() {\n  var languages = refract.languages\n  var list = []\n  var language\n\n  for (language in languages) {\n    if (\n      own.call(languages, language) &&\n      typeof languages[language] === 'object'\n    ) {\n      list.push(language)\n    }\n  }\n\n  return list\n}\n\nfunction stringify(value, language, parent) {\n  var env\n\n  if (typeof value === 'string') {\n    return {type: 'text', value: value}\n  }\n\n  if (refract.util.type(value) === 'Array') {\n    return stringifyAll(value, language)\n  }\n\n  env = {\n    type: value.type,\n    content: refract.Token.stringify(value.content, language, parent),\n    tag: 'span',\n    classes: ['token', value.type],\n    attributes: {},\n    language: language,\n    parent: parent\n  }\n\n  if (value.alias) {\n    env.classes = env.classes.concat(value.alias)\n  }\n\n  refract.hooks.run('wrap', env)\n\n  return h(\n    env.tag + '.' + env.classes.join('.'),\n    attributes(env.attributes),\n    env.content\n  )\n}\n\nfunction stringifyAll(values, language) {\n  var result = []\n  var length = values.length\n  var index = -1\n  var value\n\n  while (++index < length) {\n    value = values[index]\n\n    if (value !== '' && value !== null && value !== undefined) {\n      result.push(value)\n    }\n  }\n\n  index = -1\n  length = result.length\n\n  while (++index < length) {\n    value = result[index]\n    result[index] = refract.Token.stringify(value, language, result)\n  }\n\n  return result\n}\n\nfunction encode(tokens) {\n  return tokens\n}\n\nfunction attributes(attrs) {\n  var key\n\n  for (key in attrs) {\n    attrs[key] = decode(attrs[key])\n  }\n\n  return attrs\n}\n\nfunction capture() {\n  var defined = 'Prism' in ctx\n  /* istanbul ignore next */\n  var current = defined ? ctx.Prism : undefined\n\n  return restore\n\n  function restore() {\n    /* istanbul ignore else - Clean leaks after Prism. */\n    if (defined) {\n      ctx.Prism = current\n    } else {\n      delete ctx.Prism\n    }\n\n    defined = undefined\n    current = undefined\n  }\n}\n","'use strict'\n\nvar refractor = require('./core.js')\n\nmodule.exports = refractor\n\nrefractor.register(require('./lang/abap.js'))\nrefractor.register(require('./lang/abnf.js'))\nrefractor.register(require('./lang/actionscript.js'))\nrefractor.register(require('./lang/ada.js'))\nrefractor.register(require('./lang/agda.js'))\nrefractor.register(require('./lang/al.js'))\nrefractor.register(require('./lang/antlr4.js'))\nrefractor.register(require('./lang/apacheconf.js'))\nrefractor.register(require('./lang/apex.js'))\nrefractor.register(require('./lang/apl.js'))\nrefractor.register(require('./lang/applescript.js'))\nrefractor.register(require('./lang/aql.js'))\nrefractor.register(require('./lang/arduino.js'))\nrefractor.register(require('./lang/arff.js'))\nrefractor.register(require('./lang/asciidoc.js'))\nrefractor.register(require('./lang/asm6502.js'))\nrefractor.register(require('./lang/aspnet.js'))\nrefractor.register(require('./lang/autohotkey.js'))\nrefractor.register(require('./lang/autoit.js'))\nrefractor.register(require('./lang/avisynth.js'))\nrefractor.register(require('./lang/avro-idl.js'))\nrefractor.register(require('./lang/bash.js'))\nrefractor.register(require('./lang/basic.js'))\nrefractor.register(require('./lang/batch.js'))\nrefractor.register(require('./lang/bbcode.js'))\nrefractor.register(require('./lang/bicep.js'))\nrefractor.register(require('./lang/birb.js'))\nrefractor.register(require('./lang/bison.js'))\nrefractor.register(require('./lang/bnf.js'))\nrefractor.register(require('./lang/brainfuck.js'))\nrefractor.register(require('./lang/brightscript.js'))\nrefractor.register(require('./lang/bro.js'))\nrefractor.register(require('./lang/bsl.js'))\nrefractor.register(require('./lang/c.js'))\nrefractor.register(require('./lang/cfscript.js'))\nrefractor.register(require('./lang/chaiscript.js'))\nrefractor.register(require('./lang/cil.js'))\nrefractor.register(require('./lang/clojure.js'))\nrefractor.register(require('./lang/cmake.js'))\nrefractor.register(require('./lang/cobol.js'))\nrefractor.register(require('./lang/coffeescript.js'))\nrefractor.register(require('./lang/concurnas.js'))\nrefractor.register(require('./lang/coq.js'))\nrefractor.register(require('./lang/cpp.js'))\nrefractor.register(require('./lang/crystal.js'))\nrefractor.register(require('./lang/csharp.js'))\nrefractor.register(require('./lang/cshtml.js'))\nrefractor.register(require('./lang/csp.js'))\nrefractor.register(require('./lang/css-extras.js'))\nrefractor.register(require('./lang/csv.js'))\nrefractor.register(require('./lang/cypher.js'))\nrefractor.register(require('./lang/d.js'))\nrefractor.register(require('./lang/dart.js'))\nrefractor.register(require('./lang/dataweave.js'))\nrefractor.register(require('./lang/dax.js'))\nrefractor.register(require('./lang/dhall.js'))\nrefractor.register(require('./lang/diff.js'))\nrefractor.register(require('./lang/django.js'))\nrefractor.register(require('./lang/dns-zone-file.js'))\nrefractor.register(require('./lang/docker.js'))\nrefractor.register(require('./lang/dot.js'))\nrefractor.register(require('./lang/ebnf.js'))\nrefractor.register(require('./lang/editorconfig.js'))\nrefractor.register(require('./lang/eiffel.js'))\nrefractor.register(require('./lang/ejs.js'))\nrefractor.register(require('./lang/elixir.js'))\nrefractor.register(require('./lang/elm.js'))\nrefractor.register(require('./lang/erb.js'))\nrefractor.register(require('./lang/erlang.js'))\nrefractor.register(require('./lang/etlua.js'))\nrefractor.register(require('./lang/excel-formula.js'))\nrefractor.register(require('./lang/factor.js'))\nrefractor.register(require('./lang/false.js'))\nrefractor.register(require('./lang/firestore-security-rules.js'))\nrefractor.register(require('./lang/flow.js'))\nrefractor.register(require('./lang/fortran.js'))\nrefractor.register(require('./lang/fsharp.js'))\nrefractor.register(require('./lang/ftl.js'))\nrefractor.register(require('./lang/gap.js'))\nrefractor.register(require('./lang/gcode.js'))\nrefractor.register(require('./lang/gdscript.js'))\nrefractor.register(require('./lang/gedcom.js'))\nrefractor.register(require('./lang/gherkin.js'))\nrefractor.register(require('./lang/git.js'))\nrefractor.register(require('./lang/glsl.js'))\nrefractor.register(require('./lang/gml.js'))\nrefractor.register(require('./lang/gn.js'))\nrefractor.register(require('./lang/go.js'))\nrefractor.register(require('./lang/graphql.js'))\nrefractor.register(require('./lang/groovy.js'))\nrefractor.register(require('./lang/haml.js'))\nrefractor.register(require('./lang/handlebars.js'))\nrefractor.register(require('./lang/haskell.js'))\nrefractor.register(require('./lang/haxe.js'))\nrefractor.register(require('./lang/hcl.js'))\nrefractor.register(require('./lang/hlsl.js'))\nrefractor.register(require('./lang/hoon.js'))\nrefractor.register(require('./lang/hpkp.js'))\nrefractor.register(require('./lang/hsts.js'))\nrefractor.register(require('./lang/http.js'))\nrefractor.register(require('./lang/ichigojam.js'))\nrefractor.register(require('./lang/icon.js'))\nrefractor.register(require('./lang/icu-message-format.js'))\nrefractor.register(require('./lang/idris.js'))\nrefractor.register(require('./lang/iecst.js'))\nrefractor.register(require('./lang/ignore.js'))\nrefractor.register(require('./lang/inform7.js'))\nrefractor.register(require('./lang/ini.js'))\nrefractor.register(require('./lang/io.js'))\nrefractor.register(require('./lang/j.js'))\nrefractor.register(require('./lang/java.js'))\nrefractor.register(require('./lang/javadoc.js'))\nrefractor.register(require('./lang/javadoclike.js'))\nrefractor.register(require('./lang/javastacktrace.js'))\nrefractor.register(require('./lang/jexl.js'))\nrefractor.register(require('./lang/jolie.js'))\nrefractor.register(require('./lang/jq.js'))\nrefractor.register(require('./lang/js-extras.js'))\nrefractor.register(require('./lang/js-templates.js'))\nrefractor.register(require('./lang/jsdoc.js'))\nrefractor.register(require('./lang/json.js'))\nrefractor.register(require('./lang/json5.js'))\nrefractor.register(require('./lang/jsonp.js'))\nrefractor.register(require('./lang/jsstacktrace.js'))\nrefractor.register(require('./lang/jsx.js'))\nrefractor.register(require('./lang/julia.js'))\nrefractor.register(require('./lang/keyman.js'))\nrefractor.register(require('./lang/kotlin.js'))\nrefractor.register(require('./lang/kumir.js'))\nrefractor.register(require('./lang/kusto.js'))\nrefractor.register(require('./lang/latex.js'))\nrefractor.register(require('./lang/latte.js'))\nrefractor.register(require('./lang/less.js'))\nrefractor.register(require('./lang/lilypond.js'))\nrefractor.register(require('./lang/liquid.js'))\nrefractor.register(require('./lang/lisp.js'))\nrefractor.register(require('./lang/livescript.js'))\nrefractor.register(require('./lang/llvm.js'))\nrefractor.register(require('./lang/log.js'))\nrefractor.register(require('./lang/lolcode.js'))\nrefractor.register(require('./lang/lua.js'))\nrefractor.register(require('./lang/magma.js'))\nrefractor.register(require('./lang/makefile.js'))\nrefractor.register(require('./lang/markdown.js'))\nrefractor.register(require('./lang/markup-templating.js'))\nrefractor.register(require('./lang/matlab.js'))\nrefractor.register(require('./lang/maxscript.js'))\nrefractor.register(require('./lang/mel.js'))\nrefractor.register(require('./lang/mermaid.js'))\nrefractor.register(require('./lang/mizar.js'))\nrefractor.register(require('./lang/mongodb.js'))\nrefractor.register(require('./lang/monkey.js'))\nrefractor.register(require('./lang/moonscript.js'))\nrefractor.register(require('./lang/n1ql.js'))\nrefractor.register(require('./lang/n4js.js'))\nrefractor.register(require('./lang/nand2tetris-hdl.js'))\nrefractor.register(require('./lang/naniscript.js'))\nrefractor.register(require('./lang/nasm.js'))\nrefractor.register(require('./lang/neon.js'))\nrefractor.register(require('./lang/nevod.js'))\nrefractor.register(require('./lang/nginx.js'))\nrefractor.register(require('./lang/nim.js'))\nrefractor.register(require('./lang/nix.js'))\nrefractor.register(require('./lang/nsis.js'))\nrefractor.register(require('./lang/objectivec.js'))\nrefractor.register(require('./lang/ocaml.js'))\nrefractor.register(require('./lang/opencl.js'))\nrefractor.register(require('./lang/openqasm.js'))\nrefractor.register(require('./lang/oz.js'))\nrefractor.register(require('./lang/parigp.js'))\nrefractor.register(require('./lang/parser.js'))\nrefractor.register(require('./lang/pascal.js'))\nrefractor.register(require('./lang/pascaligo.js'))\nrefractor.register(require('./lang/pcaxis.js'))\nrefractor.register(require('./lang/peoplecode.js'))\nrefractor.register(require('./lang/perl.js'))\nrefractor.register(require('./lang/php-extras.js'))\nrefractor.register(require('./lang/php.js'))\nrefractor.register(require('./lang/phpdoc.js'))\nrefractor.register(require('./lang/plsql.js'))\nrefractor.register(require('./lang/powerquery.js'))\nrefractor.register(require('./lang/powershell.js'))\nrefractor.register(require('./lang/processing.js'))\nrefractor.register(require('./lang/prolog.js'))\nrefractor.register(require('./lang/promql.js'))\nrefractor.register(require('./lang/properties.js'))\nrefractor.register(require('./lang/protobuf.js'))\nrefractor.register(require('./lang/psl.js'))\nrefractor.register(require('./lang/pug.js'))\nrefractor.register(require('./lang/puppet.js'))\nrefractor.register(require('./lang/pure.js'))\nrefractor.register(require('./lang/purebasic.js'))\nrefractor.register(require('./lang/purescript.js'))\nrefractor.register(require('./lang/python.js'))\nrefractor.register(require('./lang/q.js'))\nrefractor.register(require('./lang/qml.js'))\nrefractor.register(require('./lang/qore.js'))\nrefractor.register(require('./lang/qsharp.js'))\nrefractor.register(require('./lang/r.js'))\nrefractor.register(require('./lang/racket.js'))\nrefractor.register(require('./lang/reason.js'))\nrefractor.register(require('./lang/regex.js'))\nrefractor.register(require('./lang/rego.js'))\nrefractor.register(require('./lang/renpy.js'))\nrefractor.register(require('./lang/rest.js'))\nrefractor.register(require('./lang/rip.js'))\nrefractor.register(require('./lang/roboconf.js'))\nrefractor.register(require('./lang/robotframework.js'))\nrefractor.register(require('./lang/ruby.js'))\nrefractor.register(require('./lang/rust.js'))\nrefractor.register(require('./lang/sas.js'))\nrefractor.register(require('./lang/sass.js'))\nrefractor.register(require('./lang/scala.js'))\nrefractor.register(require('./lang/scheme.js'))\nrefractor.register(require('./lang/scss.js'))\nrefractor.register(require('./lang/shell-session.js'))\nrefractor.register(require('./lang/smali.js'))\nrefractor.register(require('./lang/smalltalk.js'))\nrefractor.register(require('./lang/smarty.js'))\nrefractor.register(require('./lang/sml.js'))\nrefractor.register(require('./lang/solidity.js'))\nrefractor.register(require('./lang/solution-file.js'))\nrefractor.register(require('./lang/soy.js'))\nrefractor.register(require('./lang/sparql.js'))\nrefractor.register(require('./lang/splunk-spl.js'))\nrefractor.register(require('./lang/sqf.js'))\nrefractor.register(require('./lang/sql.js'))\nrefractor.register(require('./lang/squirrel.js'))\nrefractor.register(require('./lang/stan.js'))\nrefractor.register(require('./lang/stylus.js'))\nrefractor.register(require('./lang/swift.js'))\nrefractor.register(require('./lang/systemd.js'))\nrefractor.register(require('./lang/t4-cs.js'))\nrefractor.register(require('./lang/t4-templating.js'))\nrefractor.register(require('./lang/t4-vb.js'))\nrefractor.register(require('./lang/tap.js'))\nrefractor.register(require('./lang/tcl.js'))\nrefractor.register(require('./lang/textile.js'))\nrefractor.register(require('./lang/toml.js'))\nrefractor.register(require('./lang/tsx.js'))\nrefractor.register(require('./lang/tt2.js'))\nrefractor.register(require('./lang/turtle.js'))\nrefractor.register(require('./lang/twig.js'))\nrefractor.register(require('./lang/typescript.js'))\nrefractor.register(require('./lang/typoscript.js'))\nrefractor.register(require('./lang/unrealscript.js'))\nrefractor.register(require('./lang/uri.js'))\nrefractor.register(require('./lang/v.js'))\nrefractor.register(require('./lang/vala.js'))\nrefractor.register(require('./lang/vbnet.js'))\nrefractor.register(require('./lang/velocity.js'))\nrefractor.register(require('./lang/verilog.js'))\nrefractor.register(require('./lang/vhdl.js'))\nrefractor.register(require('./lang/vim.js'))\nrefractor.register(require('./lang/visual-basic.js'))\nrefractor.register(require('./lang/warpscript.js'))\nrefractor.register(require('./lang/wasm.js'))\nrefractor.register(require('./lang/wiki.js'))\nrefractor.register(require('./lang/wolfram.js'))\nrefractor.register(require('./lang/wren.js'))\nrefractor.register(require('./lang/xeora.js'))\nrefractor.register(require('./lang/xml-doc.js'))\nrefractor.register(require('./lang/xojo.js'))\nrefractor.register(require('./lang/xquery.js'))\nrefractor.register(require('./lang/yaml.js'))\nrefractor.register(require('./lang/yang.js'))\nrefractor.register(require('./lang/zig.js'))\n","'use strict'\n\nmodule.exports = abap\nabap.displayName = 'abap'\nabap.aliases = []\nfunction abap(Prism) {\n  Prism.languages.abap = {\n    comment: /^\\*.*/m,\n    string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n    'string-template': {\n      pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    /* End Of Line comments should not interfere with strings when the\nquote character occurs within them. We assume a string being highlighted\ninside an EOL comment is more acceptable than the opposite.\n*/\n    'eol-comment': {\n      pattern: /(^|\\s)\".*/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    keyword: {\n      pattern:\n        /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n      lookbehind: true\n    },\n    /* Numbers can be only integers. Decimal or Hex appear only as strings */\n    number: /\\b\\d+\\b/,\n    /* Operators must always be surrounded by whitespace, they cannot be put\nadjacent to operands.\n*/\n    operator: {\n      pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n      lookbehind: true\n    },\n    'string-operator': {\n      pattern: /(\\s)&&?(?=\\s)/,\n      lookbehind: true,\n      /* The official editor highlights */\n      alias: 'keyword'\n    },\n    'token-operator': [\n      {\n        /* Special operators used to access structure components, class methods/attributes, etc. */\n        pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      {\n        /* Special tokens used do delimit string templates */\n        pattern: /[|{}]/,\n        alias: 'punctuation'\n      }\n    ],\n    punctuation: /[,.:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = abnf\nabnf.displayName = 'abnf'\nabnf.aliases = []\nfunction abnf(Prism) {\n  ;(function (Prism) {\n    var coreRules =\n      '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)'\n    Prism.languages.abnf = {\n      comment: /;.*/,\n      string: {\n        pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n        greedy: true,\n        inside: {\n          punctuation: /^%[is]/\n        }\n      },\n      range: {\n        pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n        alias: 'number'\n      },\n      terminal: {\n        pattern:\n          /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n        alias: 'number'\n      },\n      repetition: {\n        pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      definition: {\n        pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,\n        lookbehind: true,\n        alias: 'keyword',\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      'core-rule': {\n        pattern: RegExp(\n          '(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])',\n          'i'\n        ),\n        lookbehind: true,\n        alias: ['rule', 'constant'],\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      rule: {\n        pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      operator: /=\\/?|\\//,\n      punctuation: /[()\\[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = actionscript\nactionscript.displayName = 'actionscript'\nactionscript.aliases = []\nfunction actionscript(Prism) {\n  Prism.languages.actionscript = Prism.languages.extend('javascript', {\n    keyword:\n      /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|override|set|static)\\b/,\n    operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n  })\n  Prism.languages.actionscript['class-name'].alias = 'function'\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('actionscript', 'string', {\n      xml: {\n        pattern:\n          /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      }\n    })\n  }\n}\n","'use strict'\n\nmodule.exports = ada\nada.displayName = 'ada'\nada.aliases = []\nfunction ada(Prism) {\n  Prism.languages.ada = {\n    comment: /--.*/,\n    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,\n    number: [\n      {\n        pattern:\n          /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n      },\n      {\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n      }\n    ],\n    'attr-name': /\\b'\\w+/i,\n    keyword:\n      /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n    punctuation: /\\.\\.?|[,;():]/,\n    char: /'.'/,\n    variable: /\\b[a-z](?:\\w)*\\b/i\n  }\n}\n","'use strict'\n\nmodule.exports = agda\nagda.displayName = 'agda'\nagda.aliases = []\nfunction agda(Prism) {\n  ;(function (Prism) {\n    Prism.languages.agda = {\n      comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      punctuation: /[(){}⦃⦄.;@]/,\n      'class-name': {\n        pattern: /((?:data|record) +)\\S+/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = al\nal.displayName = 'al'\nal.aliases = []\nfunction al(Prism) {\n  // based on https://github.com/microsoft/AL/blob/master/grammar/alsyntax.tmlanguage\n  Prism.languages.al = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    function: {\n      pattern:\n        /(\\b(?:event|procedure|trigger)\\s+|(?:^|[^.])\\.\\s*)[a-z_]\\w*(?=\\s*\\()/i,\n      lookbehind: true\n    },\n    keyword: [\n      // keywords\n      /\\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\\b/i, // objects and metadata that are used like keywords\n      /\\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\\b/i\n    ],\n    number:\n      /\\b(?:0x[\\da-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)(?:F|U(?:LL?)?|LL?)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    variable: /\\b(?:Curr(?:FieldNo|Page|Report)|RequestOptionsPage|x?Rec)\\b/,\n    'class-name':\n      /\\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\\b/i,\n    operator: /\\.\\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\\b(?:and|div|mod|not|or|xor)\\b/i,\n    punctuation: /[()\\[\\]{}:.;,]/\n  }\n}\n","'use strict'\n\nmodule.exports = antlr4\nantlr4.displayName = 'antlr4'\nantlr4.aliases = ['g4']\nfunction antlr4(Prism) {\n  Prism.languages.antlr4 = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    string: {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n      greedy: true\n    },\n    'character-class': {\n      pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\n      greedy: true,\n      alias: 'regex',\n      inside: {\n        range: {\n          pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\n          lookbehind: true,\n          alias: 'punctuation'\n        },\n        escape:\n          /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\n        punctuation: /[\\[\\]]/\n      }\n    },\n    action: {\n      pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\n      greedy: true,\n      inside: {\n        content: {\n          // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to\n          pattern: /(\\{)[\\s\\S]+(?=\\})/,\n          lookbehind: true\n        },\n        punctuation: /[{}]/\n      }\n    },\n    command: {\n      pattern:\n        /(->\\s*(?!\\s))(?:\\s*(?:,\\s*)?\\b[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\n      lookbehind: true,\n      inside: {\n        function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\n        punctuation: /[,()]/\n      }\n    },\n    annotation: {\n      pattern: /@\\w+(?:::\\w+)*/,\n      alias: 'keyword'\n    },\n    label: {\n      pattern: /#[ \\t]*\\w+/,\n      alias: 'punctuation'\n    },\n    keyword:\n      /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\n    definition: [\n      {\n        pattern: /\\b[a-z]\\w*(?=\\s*:)/,\n        alias: ['rule', 'class-name']\n      },\n      {\n        pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\n        alias: ['token', 'constant']\n      }\n    ],\n    constant: /\\b[A-Z][A-Z_]*\\b/,\n    operator: /\\.\\.|->|[|~]|[*+?]\\??/,\n    punctuation: /[;:()=]/\n  }\n  Prism.languages.g4 = Prism.languages.antlr4\n}\n","'use strict'\n\nmodule.exports = apacheconf\napacheconf.displayName = 'apacheconf'\napacheconf.aliases = []\nfunction apacheconf(Prism) {\n  Prism.languages.apacheconf = {\n    comment: /#.*/,\n    'directive-inline': {\n      pattern:\n        /(^[\\t ]*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|Type|UserFile|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferSize|BufferedLogs|CGIDScriptTimeout|CGIMapExtension|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DTracePrivileges|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtFilterDefine|ExtFilterOptions|ExtendedStatus|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|KeepAlive|KeepAliveTimeout|KeptBodySize|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|LanguagePriority|Limit(?:InternalRecursion|Request(?:Body|FieldSize|Fields|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|MMapFile|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|ModMimeUsePathInfo|ModemStandard|MultiviewsMatch|Mutex|NWSSLTrustedCerts|NWSSLUpgradeable|NameVirtualHost|NoProxy|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|RLimitCPU|RLimitMEM|RLimitNPROC|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|SSIETag|SSIEndTag|SSIErrorMsg|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|SRPUnknownUserSeed|SRPVerifierFile|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UseStapling|UserName|VerifyClient|VerifyDepth)|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadStackSize|ThreadsPerChild|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n      lookbehind: true,\n      alias: 'property'\n    },\n    'directive-block': {\n      pattern:\n        /<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b.*>/i,\n      inside: {\n        'directive-block': {\n          pattern: /^<\\/?\\w+/,\n          inside: {\n            punctuation: /^<\\/?/\n          },\n          alias: 'tag'\n        },\n        'directive-block-parameter': {\n          pattern: /.*[^>]/,\n          inside: {\n            punctuation: /:/,\n            string: {\n              pattern: /(\"|').*\\1/,\n              inside: {\n                variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n              }\n            }\n          },\n          alias: 'attr-value'\n        },\n        punctuation: />/\n      },\n      alias: 'tag'\n    },\n    'directive-flags': {\n      pattern: /\\[(?:[\\w=],?)+\\]/,\n      alias: 'keyword'\n    },\n    string: {\n      pattern: /(\"|').*\\1/,\n      inside: {\n        variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n      }\n    },\n    variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n    regex: /\\^?.*\\$|\\^.*\\$?/\n  }\n}\n","'use strict'\nvar refractorSql = require('./sql.js')\nmodule.exports = apex\napex.displayName = 'apex'\napex.aliases = []\nfunction apex(Prism) {\n  Prism.register(refractorSql)\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|get(?=\\s*[{};])|(?:after|before)(?=\\s+[a-z])|(?:inherited|with|without)\\s+sharing)\\b/i\n    var className =\n      /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(\n        /<keyword>/g,\n        function () {\n          return keywords.source\n        }\n      )\n    /** @param {string} pattern */\n    function insertClassName(pattern) {\n      return RegExp(\n        pattern.replace(/<CLASS-NAME>/g, function () {\n          return className\n        }),\n        'i'\n      )\n    }\n    var classNameInside = {\n      keyword: keywords,\n      punctuation: /[()\\[\\]{};,:.<>]/\n    }\n    Prism.languages.apex = {\n      comment: Prism.languages.clike.comment,\n      string: Prism.languages.clike.string,\n      sql: {\n        pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-sql',\n        inside: Prism.languages.sql\n      },\n      annotation: {\n        pattern: /@\\w+\\b/,\n        alias: 'punctuation'\n      },\n      'class-name': [\n        {\n          pattern: insertClassName(\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/\n              .source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // cast\n          pattern: insertClassName(\n            /(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // variable/parameter declaration and return types\n          pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\n          inside: classNameInside\n        }\n      ],\n      trigger: {\n        pattern: /(\\btrigger\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      keyword: keywords,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      boolean: /\\b(?:false|true)\\b/i,\n      number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\n      operator:\n        /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\n      punctuation: /[()\\[\\]{};,.]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = apl\napl.displayName = 'apl'\napl.aliases = []\nfunction apl(Prism) {\n  Prism.languages.apl = {\n    comment: /(?:⍝|#[! ]).*$/m,\n    string: {\n      pattern: /'(?:[^'\\r\\n]|'')*'/,\n      greedy: true\n    },\n    number:\n      /¯?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+)?|¯|∞))?/i,\n    statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n    'system-function': {\n      pattern: /⎕[A-Z]+/i,\n      alias: 'function'\n    },\n    constant: /[⍬⌾#⎕⍞]/,\n    function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n    'monadic-operator': {\n      pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n      alias: 'operator'\n    },\n    'dyadic-operator': {\n      pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,\n      alias: 'operator'\n    },\n    assignment: {\n      pattern: /←/,\n      alias: 'keyword'\n    },\n    punctuation: /[\\[;\\]()◇⋄]/,\n    dfn: {\n      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n      alias: 'builtin'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = applescript\napplescript.displayName = 'applescript'\napplescript.aliases = []\nfunction applescript(Prism) {\n  Prism.languages.applescript = {\n    comment: [\n      // Allow one level of nesting\n      /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n      /--.+/,\n      /#.+/\n    ],\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n    operator: [\n      /[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,\n      /\\b(?:(?:start|begin|end)s? with|(?:(?:does not|doesn't) contain|contains?)|(?:is|isn't|is not) (?:in|contained by)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:(?:does not|doesn't) come|comes) (?:before|after)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equals|equal to|isn't|is not)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|or|div|mod|as|not))\\b/\n    ],\n    keyword:\n      /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n    class: {\n      pattern:\n        /\\b(?:alias|application|boolean|class|constant|date|file|integer|list|number|POSIX file|real|record|reference|RGB color|script|text|centimetres|centimeters|feet|inches|kilometres|kilometers|metres|meters|miles|yards|square feet|square kilometres|square kilometers|square metres|square meters|square miles|square yards|cubic centimetres|cubic centimeters|cubic feet|cubic inches|cubic metres|cubic meters|cubic yards|gallons|litres|liters|quarts|grams|kilograms|ounces|pounds|degrees Celsius|degrees Fahrenheit|degrees Kelvin)\\b/,\n      alias: 'builtin'\n    },\n    punctuation: /[{}():,¬«»《》]/\n  }\n}\n","'use strict'\n\nmodule.exports = aql\naql.displayName = 'aql'\naql.aliases = []\nfunction aql(Prism) {\n  Prism.languages.aql = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    property: {\n      pattern:\n        /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    variable: /@@?\\w+/,\n    keyword: [\n      {\n        pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n        lookbehind: true\n      },\n      /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i, // pseudo keywords get a lookbehind to avoid false positives\n      {\n        pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n        lookbehind: true\n      },\n      {\n        pattern: /\\bOPTIONS(?=\\s*\\{)/i\n      }\n    ],\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    boolean: /\\b(?:true|false)\\b/i,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    number: [\n      /\\b0b[01]+/i,\n      /\\b0x[0-9a-f]+/i,\n      /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\n    ],\n    operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n    punctuation: /::|[?.:,;()[\\]{}]/\n  }\n}\n","'use strict'\nvar refractorCpp = require('./cpp.js')\nmodule.exports = arduino\narduino.displayName = 'arduino'\narduino.aliases = []\nfunction arduino(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.arduino = Prism.languages.extend('cpp', {\n    constant:\n      /\\b(?:DIGITAL_MESSAGE|FIRMATA_STRING|ANALOG_MESSAGE|REPORT_DIGITAL|REPORT_ANALOG|INPUT_PULLUP|SET_PIN_MODE|INTERNAL2V56|SYSTEM_RESET|LED_BUILTIN|INTERNAL1V1|SYSEX_START|INTERNAL|EXTERNAL|DEFAULT|OUTPUT|INPUT|HIGH|LOW)\\b/,\n    keyword:\n      /\\b(?:setup|if|else|while|do|for|return|in|instanceof|default|function|loop|goto|switch|case|new|try|throw|catch|finally|null|break|continue|boolean|bool|void|byte|word|string|String|array|int|long|integer|double)\\b/,\n    builtin:\n      /\\b(?:KeyboardController|MouseController|SoftwareSerial|EthernetServer|EthernetClient|LiquidCrystal|LiquidCrystal_I2C|RobotControl|GSMVoiceCall|EthernetUDP|EsploraTFT|HttpClient|RobotMotor|WiFiClient|GSMScanner|FileSystem|Scheduler|GSMServer|YunClient|YunServer|IPAddress|GSMClient|GSMModem|Keyboard|Ethernet|Console|GSMBand|Esplora|Stepper|Process|WiFiUDP|GSM_SMS|Mailbox|USBHost|Firmata|PImage|Client|Server|GSMPIN|FileIO|Bridge|Serial|EEPROM|Stream|Mouse|Audio|Servo|File|Task|GPRS|WiFi|Wire|TFT|GSM|SPI|SD|runShellCommandAsynchronously|analogWriteResolution|retrieveCallingNumber|printFirmwareVersion|analogReadResolution|sendDigitalPortPair|noListenOnLocalhost|readJoystickButton|setFirmwareVersion|readJoystickSwitch|scrollDisplayRight|getVoiceCallStatus|scrollDisplayLeft|writeMicroseconds|delayMicroseconds|beginTransmission|getSignalStrength|runAsynchronously|getAsynchronously|listenOnLocalhost|getCurrentCarrier|readAccelerometer|messageAvailable|sendDigitalPorts|lineFollowConfig|countryNameWrite|runShellCommand|readStringUntil|rewindDirectory|readTemperature|setClockDivider|readLightSensor|endTransmission|analogReference|detachInterrupt|countryNameRead|attachInterrupt|encryptionType|readBytesUntil|robotNameWrite|readMicrophone|robotNameRead|cityNameWrite|userNameWrite|readJoystickY|readJoystickX|mouseReleased|openNextFile|scanNetworks|noInterrupts|digitalWrite|beginSpeaker|mousePressed|isActionDone|mouseDragged|displayLogos|noAutoscroll|addParameter|remoteNumber|getModifiers|keyboardRead|userNameRead|waitContinue|processInput|parseCommand|printVersion|readNetworks|writeMessage|blinkVersion|cityNameRead|readMessage|setDataMode|parsePacket|isListening|setBitOrder|beginPacket|isDirectory|motorsWrite|drawCompass|digitalRead|clearScreen|serialEvent|rightToLeft|setTextSize|leftToRight|requestFrom|keyReleased|compassRead|analogWrite|interrupts|WiFiServer|disconnect|playMelody|parseFloat|autoscroll|getPINUsed|setPINUsed|setTimeout|sendAnalog|readSlider|analogRead|beginWrite|createChar|motorsStop|keyPressed|tempoWrite|readButton|subnetMask|debugPrint|macAddress|writeGreen|randomSeed|attachGPRS|readString|sendString|remotePort|releaseAll|mouseMoved|background|getXChange|getYChange|answerCall|getResult|voiceCall|endPacket|constrain|getSocket|writeJSON|getButton|available|connected|findUntil|readBytes|exitValue|readGreen|writeBlue|startLoop|isPressed|sendSysex|pauseMode|gatewayIP|setCursor|getOemKey|tuneWrite|noDisplay|loadImage|switchPIN|onRequest|onReceive|changePIN|playFile|noBuffer|parseInt|overflow|checkPIN|knobRead|beginTFT|bitClear|updateIR|bitWrite|position|writeRGB|highByte|writeRed|setSpeed|readBlue|noStroke|remoteIP|transfer|shutdown|hangCall|beginSMS|endWrite|attached|maintain|noCursor|checkReg|checkPUK|shiftOut|isValid|shiftIn|pulseIn|connect|println|localIP|pinMode|getIMEI|display|noBlink|process|getBand|running|beginSD|drawBMP|lowByte|setBand|release|bitRead|prepare|pointTo|readRed|setMode|noFill|remove|listen|stroke|detach|attach|noTone|exists|buffer|height|bitSet|circle|config|cursor|random|IRread|setDNS|endSMS|getKey|micros|millis|begin|print|write|ready|flush|width|isPIN|blink|clear|press|mkdir|rmdir|close|point|yield|image|BSSID|click|delay|read|text|move|peek|beep|rect|line|open|seek|fill|size|turn|stop|home|find|step|tone|sqrt|RSSI|SSID|end|bit|tan|cos|sin|pow|map|abs|max|min|get|run|put)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = arff\narff.displayName = 'arff'\narff.aliases = []\nfunction arff(Prism) {\n  Prism.languages.arff = {\n    comment: /%.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: /@(?:attribute|data|end|relation)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    punctuation: /[{},]/\n  }\n}\n","'use strict'\n\nmodule.exports = asciidoc\nasciidoc.displayName = 'asciidoc'\nasciidoc.aliases = ['adoc']\nfunction asciidoc(Prism) {\n  ;(function (Prism) {\n    var attributes = {\n      pattern:\n        /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n      lookbehind: true,\n      inside: {\n        quoted: {\n          pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          inside: {\n            punctuation: /^[$`]|[$`]$/\n          }\n        },\n        interpreted: {\n          pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n          inside: {\n            punctuation: /^'|'$/ // See rest below\n          }\n        },\n        string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        variable: /\\w+(?==)/,\n        punctuation: /^\\[|\\]$|,/,\n        operator: /=/,\n        // The negative look-ahead prevents blank matches\n        'attr-value': /(?!^\\s+$).+/\n      }\n    }\n    var asciidoc = (Prism.languages.asciidoc = {\n      'comment-block': {\n        pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n        alias: 'comment'\n      },\n      table: {\n        pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n        inside: {\n          specifiers: {\n            pattern:\n              /(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*](?:[<^>](?:\\.[<^>])?|\\.[<^>])?|[<^>](?:\\.[<^>])?|\\.[<^>])[a-z]*|[a-z]+)(?=\\|)/,\n            alias: 'attr-value'\n          },\n          punctuation: {\n            pattern: /(^|[^\\\\])[|!]=*/,\n            lookbehind: true\n          } // See rest below\n        }\n      },\n      'passthrough-block': {\n        pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^\\++|\\++$/ // See rest below\n        }\n      },\n      // Literal blocks and listing blocks\n      'literal-block': {\n        pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/ // See rest below\n        }\n      },\n      // Sidebar blocks, quote blocks, example blocks and open blocks\n      'other-block': {\n        pattern:\n          /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/ // See rest below\n        }\n      },\n      // list-punctuation and list-label must appear before indented-block\n      'list-punctuation': {\n        pattern:\n          /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'list-label': {\n        pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      'indented-block': {\n        pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n        lookbehind: true\n      },\n      comment: /^\\/\\/.*/m,\n      title: {\n        pattern:\n          /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n        alias: 'important',\n        inside: {\n          punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/ // See rest below\n        }\n      },\n      'attribute-entry': {\n        pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n        alias: 'tag'\n      },\n      attributes: attributes,\n      hr: {\n        pattern: /^'{3,}$/m,\n        alias: 'punctuation'\n      },\n      'page-break': {\n        pattern: /^<{3,}$/m,\n        alias: 'punctuation'\n      },\n      admonition: {\n        pattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,\n        alias: 'keyword'\n      },\n      callout: [\n        {\n          pattern: /(^[ \\t]*)<?\\d*>/m,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        {\n          pattern: /<\\d+>/,\n          alias: 'symbol'\n        }\n      ],\n      macro: {\n        pattern:\n          /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n        inside: {\n          function: /^[a-z\\d-]+(?=:)/,\n          punctuation: /^::?/,\n          attributes: {\n            pattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n            inside: attributes.inside\n          }\n        }\n      },\n      inline: {\n        /*\nThe initial look-behind prevents the highlighting of escaped quoted text.\nQuoted text can be multi-line but cannot span an empty line.\nAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\nFirst, we handle the constrained quotes.\nThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\nThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\nThen we handle the unconstrained quotes.\nThose do not have the restrictions of the constrained quotes.\nThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n*/\n        pattern:\n          /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n        lookbehind: true,\n        inside: {\n          attributes: attributes,\n          url: {\n            pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n            inside: {\n              punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n            }\n          },\n          'attribute-ref': {\n            pattern: /^\\{.+\\}$/,\n            inside: {\n              variable: {\n                pattern: /(^\\{)[a-z\\d,+_-]+/,\n                lookbehind: true\n              },\n              operator: /^[=?!#%@$]|!(?=[:}])/,\n              punctuation: /^\\{|\\}$|::?/\n            }\n          },\n          italic: {\n            pattern: /^(['_])[\\s\\S]+\\1$/,\n            inside: {\n              punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n            }\n          },\n          bold: {\n            pattern: /^\\*[\\s\\S]+\\*$/,\n            inside: {\n              punctuation: /^\\*\\*?|\\*\\*?$/\n            }\n          },\n          punctuation:\n            /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n        }\n      },\n      replacement: {\n        pattern: /\\((?:C|TM|R)\\)/,\n        alias: 'builtin'\n      },\n      entity: /&#?[\\da-z]{1,8};/i,\n      'line-continuation': {\n        pattern: /(^| )\\+$/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    }) // Allow some nesting. There is no recursion though, so cloning should not be needed.\n    function copyFromAsciiDoc(keys) {\n      keys = keys.split(' ')\n      var o = {}\n      for (var i = 0, l = keys.length; i < l; i++) {\n        o[keys[i]] = asciidoc[keys[i]]\n      }\n      return o\n    }\n    attributes.inside['interpreted'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    )\n    asciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro')\n    asciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout')\n    asciidoc['table'].inside.rest = copyFromAsciiDoc(\n      'comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation'\n    )\n    asciidoc['other-block'].inside.rest = copyFromAsciiDoc(\n      'table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation'\n    )\n    asciidoc['title'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    ) // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type === 'entity') {\n        env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n      }\n    })\n    Prism.languages.adoc = Prism.languages.asciidoc\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = asm6502\nasm6502.displayName = 'asm6502'\nasm6502.aliases = []\nfunction asm6502(Prism) {\n  Prism.languages.asm6502 = {\n    comment: /;.*/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'keyword'\n    },\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    opcode: {\n      pattern:\n        /\\b(?:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya|ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA)\\b/,\n      alias: 'property'\n    },\n    hexnumber: {\n      pattern: /#?\\$[\\da-f]{2,4}\\b/i,\n      alias: 'string'\n    },\n    binarynumber: {\n      pattern: /#?%[01]+\\b/,\n      alias: 'string'\n    },\n    decimalnumber: {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'string'\n    },\n    register: {\n      pattern: /\\b[xya]\\b/i,\n      alias: 'variable'\n    }\n  }\n}\n","'use strict'\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = aspnet\naspnet.displayName = 'aspnet'\naspnet.aliases = []\nfunction aspnet(Prism) {\n  Prism.register(refractorCsharp)\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\n    'page-directive': {\n      pattern: /<%\\s*@.*%>/i,\n      alias: 'tag',\n      inside: {\n        'page-directive': {\n          pattern:\n            /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n          alias: 'tag'\n        },\n        rest: Prism.languages.markup.tag.inside\n      }\n    },\n    directive: {\n      pattern: /<%.*%>/i,\n      alias: 'tag',\n      inside: {\n        directive: {\n          pattern: /<%\\s*?[$=%#:]{0,2}|%>/i,\n          alias: 'tag'\n        },\n        rest: Prism.languages.csharp\n      }\n    }\n  }) // Regexp copied from prism-markup, with a negative look-ahead added\n  Prism.languages.aspnet.tag.pattern =\n    /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i // match directives of attribute value foo=\"<% Bar %>\"\n  Prism.languages.insertBefore(\n    'inside',\n    'punctuation',\n    {\n      directive: Prism.languages.aspnet['directive']\n    },\n    Prism.languages.aspnet.tag.inside['attr-value']\n  )\n  Prism.languages.insertBefore('aspnet', 'comment', {\n    'asp-comment': {\n      pattern: /<%--[\\s\\S]*?--%>/,\n      alias: ['asp', 'comment']\n    }\n  }) // script runat=\"server\" contains csharp, not javascript\n  Prism.languages.insertBefore(\n    'aspnet',\n    Prism.languages.javascript ? 'script' : 'tag',\n    {\n      'asp-script': {\n        pattern:\n          /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        alias: ['asp', 'script'],\n        inside: Prism.languages.csharp || {}\n      }\n    }\n  )\n}\n","'use strict'\n\nmodule.exports = autohotkey\nautohotkey.displayName = 'autohotkey'\nautohotkey.aliases = []\nfunction autohotkey(Prism) {\n  // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n  Prism.languages.autohotkey = {\n    comment: [\n      {\n        pattern: /(^|\\s);.*/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^[\\t ]*)\\/\\*(?:[\\r\\n](?![ \\t]*\\*\\/)|[^\\r\\n])*(?:[\\r\\n][ \\t]*\\*\\/)?/m,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    tag: {\n      // labels\n      pattern: /^([ \\t]*)[^\\s,`\":]+(?=:[ \\t]*$)/m,\n      lookbehind: true\n    },\n    string: /\"(?:[^\"\\n\\r]|\"\")*\"/m,\n    variable: /%\\w+%/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator:\n      /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    selector:\n      /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n    constant:\n      /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|programfiles|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,\n    builtin:\n      /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|ltrim|rtrim|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|strreplace|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,\n    symbol:\n      /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n    important:\n      /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|DerefChar|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|If|IfTimeout|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InputLevel|InstallKeybdHook|InstallMouseHook|KeyHistory|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|MenuMaskKey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|Warn|WinActivateForce)\\b/i,\n    keyword:\n      /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Throw|Try|Catch|Finally|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i,\n    function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+(?=\\()/m,\n    punctuation: /[{}[\\]():,]/\n  }\n}\n","'use strict'\n\nmodule.exports = autoit\nautoit.displayName = 'autoit'\nautoit.aliases = []\nfunction autoit(Prism) {\n  Prism.languages.autoit = {\n    comment: [\n      /;.*/,\n      {\n        // The multi-line comments delimiters can actually be commented out with \";\"\n        pattern:\n          /(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:comments-end|ce)/m,\n        lookbehind: true\n      }\n    ],\n    url: {\n      pattern: /(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        variable: /([%$@])\\w+\\1/\n      }\n    },\n    directive: {\n      pattern: /(^[\\t ]*)#\\w+/m,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b\\w+(?=\\()/,\n    // Variables and macros\n    variable: /[$@]\\w+/,\n    keyword:\n      /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    boolean: /\\b(?:True|False)\\b/i,\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n    punctuation: /[\\[\\]().,:]/\n  }\n}\n","'use strict'\n\nmodule.exports = avisynth\navisynth.displayName = 'avisynth'\navisynth.aliases = ['avs']\nfunction avisynth(Prism) {\n  // http://avisynth.nl/index.php/The_full_AviSynth_grammar\n  ;(function (Prism) {\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return replacements[+index]\n      })\n    }\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    var types = /clip|int|float|string|bool|val/.source\n    var internals = [\n      // bools\n      /is(?:bool|clip|float|int|string)|defined|(?:var|(?:internal)?function)?exists?/\n        .source, // control\n      /apply|assert|default|eval|import|select|nop|undefined/.source, // global\n      /set(?:memorymax|cachemode|maxcpu|workingdir|planarlegacyalignment)|opt_(?:allowfloataudio|usewaveextensible|dwchannelmask|avipadscanlines|vdubplanarhack|enable_(?:v210|y3_10_10|y3_10_16|b64a|planartopackedrgb))/\n        .source, // conv\n      /hex(?:value)?|value/.source, // numeric\n      /max|min|muldiv|floor|ceil|round|fmod|pi|exp|log(?:10)?|pow|sqrt|abs|sign|frac|rand|spline|continued(?:numerator|denominator)?/\n        .source, // trig\n      /a?sinh?|a?cosh?|a?tan[2h]?/.source, // bit\n      /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/\n        .source, // runtime\n      /average(?:luma|chroma[uv]|[bgr])|(?:luma|chroma[uv]|rgb|[rgb]|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/\n        .source, // script\n      /script(?:name(?:utf8)?|file(?:utf8)?|dir(?:utf8)?)|setlogparams|logmsg|getprocessinfo/\n        .source, // string\n      /[lu]case|str(?:toutf8|fromutf8|len|cmpi?)|(?:rev|left|right|mid|find|replace|fill)str|format|trim(?:left|right|all)|chr|ord|time/\n        .source, // version\n      /version(?:number|string)|isversionorgreater/.source, // helper\n      /buildpixeltype|colorspacenametopixeltype/.source, // avsplus\n      /setfiltermtmode|prefetch|addautoloaddir|on(?:cpu|cuda)/.source\n    ].join('|')\n    var properties = [\n      // content\n      /has(?:audio|video)/.source, // resolution\n      /width|height/.source, // framerate\n      /frame(?:count|rate)|framerate(?:numerator|denominator)/.source, // interlacing\n      /is(?:field|frame)based|getparity/.source, // color format\n      /pixeltype|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:y2|va?))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|hasalpha|componentsize|numcomponents|bitspercomponent/\n        .source, // audio\n      /audio(?:rate|duration|length(?:[fs]|lo|hi)?|channels|bits)|isaudio(?:float|int)/\n        .source\n    ].join('|')\n    var filters = [\n      // source\n      /avi(?:file)?source|opendmlsource|directshowsource|image(?:reader|source|sourceanim)|segmented(?:avisource|directshowsource)|wavsource/\n        .source, // color\n      /coloryuv|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:444|422|420|411)|YUY2)|convertbacktoyuy2|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:luma|chroma)|rgbadjust|show(?:red|green|blue|alpha)|swapuv|tweak|[uv]toy8?|ytouv/\n        .source, // overlay\n      /(?:colorkey|reset)mask|mask(?:hs)?|layer|merge|overlay|subtract/.source, // geometry\n      /addborders|crop(?:bottom)?|flip(?:horizontal|vertical)|letterbox|(?:horizontal|vertical)?reduceby2|(?:bicubic|bilinear|blackman|gauss|lanczos|lanczos4|point|sinc|spline(?:16|36|64))resize|skewrows|turn(?:left|right|180)/\n        .source, // pixel\n      /blur|sharpen|generalconvolution|(?:spatial|temporal)soften|fixbrokenchromaupsampling/\n        .source, // timeline\n      /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|out|io)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/\n        .source, // interlace\n      /assume(?:frame|field)based|assume[bt]ff|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|rows|fields)|swapfields|weave(?:columns|rows)?/\n        .source, // audio\n      /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|supereq|ssrc|timestretch/\n        .source, // conditional\n      /conditional(?:filter|select|reader)|frameevaluate|scriptclip|writefile(?:if|start|end)?|animate|applyrange|tcp(?:server|source)/\n        .source, // export\n      /imagewriter/.source, // debug\n      /subtitle|blankclip|blackness|colorbars(?:hd)?|compare|dumpfiltergraph|setgraphanalysis|echo|histogram|info|messageclip|preroll|showfiveversions|show(?:framenumber|smpte|time)|stack(?:horizontal|vertical)|tone|version/\n        .source\n    ].join('|')\n    var allinternals = [internals, properties, filters].join('|')\n    Prism.languages.avisynth = {\n      comment: [\n        {\n          // Matches [* *] nestable block comments, but only supports 1 level of nested comments\n          // /\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|<self>)*\\*\\]/\n          pattern:\n            /(^|[^\\\\])\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\]))*\\*\\])*\\*\\]/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // Matches /* */ block comments\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // Matches # comments\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // Handle before strings because optional arguments are surrounded by double quotes\n      argument: {\n        pattern: re(/\\b(?:<<0>>)\\s+(\"?)\\w+\\1/.source, [types], 'i'),\n        inside: {\n          keyword: /^\\w+/\n        }\n      },\n      // Optional argument assignment\n      'argument-label': {\n        pattern: /([,(][\\s\\\\]*)\\w+\\s*=(?!=)/,\n        lookbehind: true,\n        inside: {\n          'argument-name': {\n            pattern: /^\\w+/,\n            alias: 'punctuation'\n          },\n          punctuation: /=$/\n        }\n      },\n      string: [\n        {\n          // triple double-quoted\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true\n        },\n        {\n          // single double-quoted\n          pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n          greedy: true,\n          inside: {\n            constant: {\n              // These *are* case-sensitive!\n              pattern:\n                /\\b(?:DEFAULT_MT_MODE|(?:SCRIPT|MAINSCRIPT|PROGRAM)DIR|(?:USER|MACHINE)_(?:PLUS|CLASSIC)_PLUGINS)\\b/\n            }\n          }\n        }\n      ],\n      // The special \"last\" variable that takes the value of the last implicitly returned clip\n      variable: /\\b(?:last)\\b/i,\n      boolean: /\\b(?:true|false|yes|no)\\b/i,\n      keyword:\n        /\\b(?:function|global|return|try|catch|if|else|while|for|__END__)\\b/i,\n      constant: /\\bMT_(?:NICE_FILTER|MULTI_INSTANCE|SERIALIZED|SPECIAL_MT)\\b/,\n      // AviSynth's internal functions, filters, and properties\n      'builtin-function': {\n        pattern: re(/\\b(?:<<0>>)\\b/.source, [allinternals], 'i'),\n        alias: 'function'\n      },\n      'type-cast': {\n        pattern: re(/\\b(?:<<0>>)(?=\\s*\\()/.source, [types], 'i'),\n        alias: 'keyword'\n      },\n      // External/user-defined filters\n      function: {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()|(\\.)[a-z_]\\w*\\b/i,\n        lookbehind: true\n      },\n      // Matches a \\ as the first or last character on a line\n      'line-continuation': {\n        pattern: /(^[ \\t]*)\\\\|\\\\(?=[ \\t]*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      number:\n        /\\B\\$(?:[\\da-f]{6}|[\\da-f]{8})\\b|(?:(?:\\b|\\B-)\\d+(?:\\.\\d*)?\\b|\\B\\.\\d+\\b)/i,\n      operator: /\\+\\+?|[!=<>]=?|&&|\\|\\||[?:*/%-]/,\n      punctuation: /[{}\\[\\]();,.]/\n    }\n    Prism.languages.avs = Prism.languages.avisynth\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = avroIdl\navroIdl.displayName = 'avroIdl'\navroIdl.aliases = []\nfunction avroIdl(Prism) {\n  // GitHub: https://github.com/apache/avro\n  // Docs: https://avro.apache.org/docs/current/idl.html\n  Prism.languages['avro-idl'] = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: [\n      {\n        pattern: /(^|[^\\\\])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\])'(?:[^\\r\\n'\\\\]|\\\\(?:[\\s\\S]|\\d{1,3}))'/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    annotation: {\n      pattern: /@(?:[$\\w.-]|`[^\\r\\n`]+`)+/,\n      greedy: true,\n      alias: 'function'\n    },\n    'function-identifier': {\n      pattern: /`[^\\r\\n`]+`(?=\\s*\\()/,\n      greedy: true,\n      alias: 'function'\n    },\n    identifier: {\n      pattern: /`[^\\r\\n`]+`/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|error|protocol|record|throws)\\b\\s+)[$\\w]+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: [\n      {\n        pattern:\n          /(^|[^\\w.])-?(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|0x(?:[a-f0-9]+(?:\\.[a-f0-9]*)?|\\.[a-f0-9]+)(?:p[+-]?\\d+)?)[dfl]?(?![\\w.])/i,\n        lookbehind: true\n      },\n      /-?\\b(?:NaN|Infinity)\\b/\n    ],\n    operator: /=/,\n    punctuation: /[()\\[\\]{}<>.:,;-]/\n  }\n  Prism.languages.avdl = Prism.languages['avro-idl']\n}\n","'use strict'\n\nmodule.exports = bash\nbash.displayName = 'bash'\nbash.aliases = ['shell']\nfunction bash(Prism) {\n  ;(function (Prism) {\n    // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n    // + LC_ALL, RANDOM, REPLY, SECONDS.\n    // + make sure PS1..4 are here as they are not always set,\n    // - some useless things.\n    var envVars =\n      '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b'\n    var commandAfterHeredoc = {\n      pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n      lookbehind: true,\n      alias: 'punctuation',\n      // this looks reasonably well in all themes\n      inside: null // see below\n    }\n    var insideString = {\n      bash: commandAfterHeredoc,\n      environment: {\n        pattern: RegExp('\\\\$' + envVars),\n        alias: 'constant'\n      },\n      variable: [\n        // [0]: Arithmetic Environment\n        {\n          pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n          greedy: true,\n          inside: {\n            // If there is a $ sign at the beginning highlight $(( and )) as variable\n            variable: [\n              {\n                pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n                lookbehind: true\n              },\n              /^\\$\\(\\(/\n            ],\n            number:\n              /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n            // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n            operator:\n              /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n            // If there is no $ sign at the beginning highlight (( and )) as punctuation\n            punctuation: /\\(\\(?|\\)\\)?|,|;/\n          }\n        }, // [1]: Command Substitution\n        {\n          pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n          greedy: true,\n          inside: {\n            variable: /^\\$\\(|^`|\\)$|`$/\n          }\n        }, // [2]: Brace expansion\n        {\n          pattern: /\\$\\{[^}]+\\}/,\n          greedy: true,\n          inside: {\n            operator: /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n            punctuation: /[\\[\\]]/,\n            environment: {\n              pattern: RegExp('(\\\\{)' + envVars),\n              lookbehind: true,\n              alias: 'constant'\n            }\n          }\n        },\n        /\\$(?:\\w+|[#?*!@$])/\n      ],\n      // Escape sequences from echo and printf's manuals, and escaped quotes.\n      entity:\n        /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|x[0-9a-fA-F]{1,2}|u[0-9a-fA-F]{4}|U[0-9a-fA-F]{8})/\n    }\n    Prism.languages.bash = {\n      shebang: {\n        pattern: /^#!\\s*\\/.*/,\n        alias: 'important'\n      },\n      comment: {\n        pattern: /(^|[^\"{\\\\$])#.*/,\n        lookbehind: true\n      },\n      'function-name': [\n        // a) function foo {\n        // b) foo() {\n        // c) function foo() {\n        // but not “foo {”\n        {\n          // a) and c)\n          pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n          lookbehind: true,\n          alias: 'function'\n        },\n        {\n          // b)\n          pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n          alias: 'function'\n        }\n      ],\n      // Highlight variable names as variables in for and select beginnings.\n      'for-or-select': {\n        pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n        alias: 'variable',\n        lookbehind: true\n      },\n      // Highlight variable names as variables in the left-hand part\n      // of assignments (“=” and “+=”).\n      'assign-left': {\n        pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n        inside: {\n          environment: {\n            pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n            lookbehind: true,\n            alias: 'constant'\n          }\n        },\n        alias: 'variable',\n        lookbehind: true\n      },\n      string: [\n        // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        }, // Here-document with quotes around the tag\n        // → No expansion (so no “inside”).\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            bash: commandAfterHeredoc\n          }\n        }, // “Normal” string\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n          pattern:\n            /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n          pattern: /(^|[^$\\\\])'[^']*'/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n          pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n          greedy: true,\n          inside: {\n            entity: insideString.entity\n          }\n        }\n      ],\n      environment: {\n        pattern: RegExp('\\\\$?' + envVars),\n        alias: 'constant'\n      },\n      variable: insideString.variable,\n      function: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|aptitude|apt-cache|apt-get|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:if|then|else|elif|fi|for|while|in|case|esac|function|select|do|done|until)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n      builtin: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:\\.|:|break|cd|continue|eval|exec|exit|export|getopts|hash|pwd|readonly|return|shift|test|times|trap|umask|unset|alias|bind|builtin|caller|command|declare|echo|enable|help|let|local|logout|mapfile|printf|read|readarray|source|type|typeset|ulimit|unalias|set|shopt)(?=$|[)\\s;|&])/,\n        lookbehind: true,\n        // Alias added to make those easier to distinguish from strings.\n        alias: 'class-name'\n      },\n      boolean: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:true|false)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      'file-descriptor': {\n        pattern: /\\B&\\d\\b/,\n        alias: 'important'\n      },\n      operator: {\n        // Lots of redirections here, but not just that.\n        pattern:\n          /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n        inside: {\n          'file-descriptor': {\n            pattern: /^\\d/,\n            alias: 'important'\n          }\n        }\n      },\n      punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n      number: {\n        pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n        lookbehind: true\n      }\n    }\n    commandAfterHeredoc.inside = Prism.languages.bash\n    /* Patterns in command substitution. */\n    var toBeCopied = [\n      'comment',\n      'function-name',\n      'for-or-select',\n      'assign-left',\n      'string',\n      'environment',\n      'function',\n      'keyword',\n      'builtin',\n      'boolean',\n      'file-descriptor',\n      'operator',\n      'punctuation',\n      'number'\n    ]\n    var inside = insideString.variable[1].inside\n    for (var i = 0; i < toBeCopied.length; i++) {\n      inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]]\n    }\n    Prism.languages.shell = Prism.languages.bash\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = basic\nbasic.displayName = 'basic'\nbasic.aliases = []\nfunction basic(Prism) {\n  Prism.languages.basic = {\n    comment: {\n      pattern: /(?:!|REM\\b).+/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/i,\n      greedy: true\n    },\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n    punctuation: /[,;:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = batch\nbatch.displayName = 'batch'\nbatch.aliases = []\nfunction batch(Prism) {\n  ;(function (Prism) {\n    var variable = /%%?[~:\\w]+%?|!\\S+!/\n    var parameter = {\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n      alias: 'attr-name',\n      inside: {\n        punctuation: /:/\n      }\n    }\n    var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/\n    var number = /(?:\\b|-)\\d+\\b/\n    Prism.languages.batch = {\n      comment: [\n        /^::.*/m,\n        {\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true\n        }\n      ],\n      label: {\n        pattern: /^:.*/m,\n        alias: 'property'\n      },\n      command: [\n        {\n          // FOR command\n          pattern:\n            /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^for\\b|\\b(?:in|do)\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // IF command\n          pattern:\n            /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n          lookbehind: true,\n          inside: {\n            keyword:\n              /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            operator: /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n          }\n        },\n        {\n          // ELSE command\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^else\\b/i\n          }\n        },\n        {\n          // SET command\n          pattern:\n            /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^set\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n            number: number,\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // Other commands\n          pattern:\n            /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\w+\\b/i,\n            string: string,\n            parameter: parameter,\n            label: {\n              pattern: /(^\\s*):\\S+/m,\n              lookbehind: true,\n              alias: 'property'\n            },\n            variable: variable,\n            number: number,\n            operator: /\\^/\n          }\n        }\n      ],\n      operator: /[&@]/,\n      punctuation: /[()']/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = bbcode\nbbcode.displayName = 'bbcode'\nbbcode.aliases = ['shortcode']\nfunction bbcode(Prism) {\n  Prism.languages.bbcode = {\n    tag: {\n      pattern:\n        /\\[\\/?[^\\s=\\]]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))?(?:\\s+[^\\s=\\]]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))*\\s*\\]/,\n      inside: {\n        tag: {\n          pattern: /^\\[\\/?[^\\s=\\]]+/,\n          inside: {\n            punctuation: /^\\[\\/?/\n          }\n        },\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+)/i,\n          inside: {\n            punctuation: [\n              /^=/,\n              {\n                pattern: /^(\\s*)[\"']|[\"']$/,\n                lookbehind: true\n              }\n            ]\n          }\n        },\n        punctuation: /\\]/,\n        'attr-name': /[^\\s=\\]]+/\n      }\n    }\n  }\n  Prism.languages.shortcode = Prism.languages.bbcode\n}\n","'use strict'\n\nmodule.exports = bicep\nbicep.displayName = 'bicep'\nbicep.aliases = []\nfunction bicep(Prism) {\n  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n  Prism.languages.bicep = {\n    comment: [\n      {\n        // multiline comments eg /* ASDF */\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        // singleline comments eg // ASDF\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    property: [\n      {\n        pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n        lookbehind: true\n      },\n      {\n        pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: /'''[^'][\\s\\S]*?'''/,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'interpolated-string': {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true\n            },\n            punctuation: /^\\$\\{|\\}$/\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    datatype: {\n      pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n    keyword:\n      /\\b(?:targetScope|resource|module|param|var|output|for|in|if|existing|null)\\b/,\n    decorator: /@\\w+\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.bicep\n}\n","'use strict'\n\nmodule.exports = birb\nbirb.displayName = 'birb'\nbirb.aliases = []\nfunction birb(Prism) {\n  Prism.languages.birb = Prism.languages.extend('clike', {\n    string: {\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    'class-name': [\n      /\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/, // matches variable and function return types (parameters as well).\n      /\\b[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/\n    ],\n    keyword:\n      /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|next|new|noSeeb|return|static|switch|throw|var|void|while)\\b/,\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\n    variable: /\\b[a-z_]\\w*\\b/\n  })\n  Prism.languages.insertBefore('birb', 'function', {\n    metadata: {\n      pattern: /<\\w+>/,\n      greedy: true,\n      alias: 'symbol'\n    }\n  })\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = bison\nbison.displayName = 'bison'\nbison.aliases = []\nfunction bison(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.bison = Prism.languages.extend('c', {})\n  Prism.languages.insertBefore('bison', 'comment', {\n    bison: {\n      // This should match all the beginning of the file\n      // including the prologue(s), the bison declarations and\n      // the grammar rules.\n      pattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\n      inside: {\n        c: {\n          // Allow for one level of nested braces\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^%?\\{|%?\\}$/,\n              alias: 'punctuation'\n            },\n            'bison-variable': {\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n              alias: 'variable',\n              inside: {\n                punctuation: /<|>/\n              }\n            },\n            rest: Prism.languages.c\n          }\n        },\n        comment: Prism.languages.c.comment,\n        string: Prism.languages.c.string,\n        property: /\\S+(?=:)/,\n        keyword: /%\\w+/,\n        number: {\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n          lookbehind: true\n        },\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = bnf\nbnf.displayName = 'bnf'\nbnf.aliases = ['rbnf']\nfunction bnf(Prism) {\n  Prism.languages.bnf = {\n    string: {\n      pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n    },\n    definition: {\n      pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n      alias: ['rule', 'keyword'],\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    rule: {\n      pattern: /<[^<>\\r\\n\\t]+>/,\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    operator: /::=|[|()[\\]{}*+?]|\\.{3}/\n  }\n  Prism.languages.rbnf = Prism.languages.bnf\n}\n","'use strict'\n\nmodule.exports = brainfuck\nbrainfuck.displayName = 'brainfuck'\nbrainfuck.aliases = []\nfunction brainfuck(Prism) {\n  Prism.languages.brainfuck = {\n    pointer: {\n      pattern: /<|>/,\n      alias: 'keyword'\n    },\n    increment: {\n      pattern: /\\+/,\n      alias: 'inserted'\n    },\n    decrement: {\n      pattern: /-/,\n      alias: 'deleted'\n    },\n    branching: {\n      pattern: /\\[|\\]/,\n      alias: 'important'\n    },\n    operator: /[.,]/,\n    comment: /\\S+/\n  }\n}\n","'use strict'\n\nmodule.exports = brightscript\nbrightscript.displayName = 'brightscript'\nbrightscript.aliases = []\nfunction brightscript(Prism) {\n  Prism.languages.brightscript = {\n    comment: /(?:\\brem|').*/i,\n    'directive-statement': {\n      pattern: /(^[\\t ]*)#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if).*/im,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        'error-message': {\n          pattern: /(^#error).+/,\n          lookbehind: true\n        },\n        directive: {\n          pattern: /^#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if)/,\n          alias: 'keyword'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    },\n    property: {\n      pattern:\n        /([\\r\\n{,][\\t ]*)(?:(?!\\d)\\w+|\"(?:[^\"\\r\\n]|\"\")*\"(?!\"))(?=[ \\t]*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\bAs[\\t ]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\\b/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    function: /\\b(?!\\d)\\w+(?=[\\t ]*\\()/i,\n    number: /(?:\\b\\d+(?:\\.\\d+)?(?:[ed][+-]\\d+)?|&h[a-f\\d]+)\\b[%&!#]?/i,\n    operator:\n      /--|\\+\\+|>>=?|<<=?|<>|[-+*/\\\\<>]=?|[:^=?]|\\b(?:and|mod|not|or)\\b/i,\n    punctuation: /[.,;()[\\]{}]/,\n    constant: /\\b(?:LINE_NUM)\\b/i\n  }\n  Prism.languages.brightscript['directive-statement'].inside.expression.inside =\n    Prism.languages.brightscript\n}\n","'use strict'\n\nmodule.exports = bro\nbro.displayName = 'bro'\nbro.aliases = []\nfunction bro(Prism) {\n  Prism.languages.bro = {\n    comment: {\n      pattern: /(^|[^\\\\$])#.*/,\n      lookbehind: true,\n      inside: {\n        italic: /\\b(?:TODO|FIXME|XXX)\\b/\n      }\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    boolean: /\\b[TF]\\b/,\n    function: {\n      pattern: /(?:function|hook|event) \\w+(?:::\\w+)?/,\n      inside: {\n        keyword: /^(?:function|hook|event)/\n      }\n    },\n    variable: {\n      pattern: /(?:global|local) \\w+/i,\n      inside: {\n        keyword: /(?:global|local)/\n      }\n    },\n    builtin:\n      /(?:@(?:load(?:-(?:sigs|plugin))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column))/,\n    constant: {\n      pattern: /const \\w+/i,\n      inside: {\n        keyword: /const/\n      }\n    },\n    keyword:\n      /\\b(?:break|next|continue|alarm|using|of|add|delete|export|print|return|schedule|when|timeout|addr|any|bool|count|double|enum|file|int|interval|pattern|opaque|port|record|set|string|subnet|table|time|vector|for|if|else|in|module|function)\\b/,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = bsl\nbsl.displayName = 'bsl'\nbsl.aliases = []\nfunction bsl(Prism) {\n  /* eslint-disable no-misleading-character-class */\n  // 1C:Enterprise\n  // https://github.com/Diversus23/\n  //\n  Prism.languages.bsl = {\n    comment: /\\/\\/.*/,\n    string: [\n      // Строки\n      // Strings\n      {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      }, // Дата и время\n      // Date & time\n      {\n        pattern: /'(?:[^'\\r\\n\\\\]|\\\\.)*'/\n      }\n    ],\n    keyword: [\n      {\n        // RU\n        pattern:\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n        lookbehind: true\n      },\n      {\n        // EN\n        pattern:\n          /\\b(?:while|for|new|break|try|except|raise|else|endtry|undefined|function|var|return|endfunction|null|if|elseif|procedure|endprocedure|then|val|export|endif|in|each|true|false|to|do|enddo|execute)\\b/i\n      }\n    ],\n    number: {\n      pattern:\n        /(^(?=\\d)|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:E[+-]?\\d+)?/i,\n      lookbehind: true\n    },\n    operator: [\n      /[<>+\\-*/]=?|[%=]/, // RU\n      {\n        pattern:\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:и|или|не)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n        lookbehind: true\n      }, // EN\n      {\n        pattern: /\\b(?:and|or|not)\\b/i\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/,\n    directive: [\n      // Теги препроцессора вида &Клиент, &Сервер, ...\n      // Preprocessor tags of the type &Client, &Server, ...\n      {\n        pattern: /^(\\s*)&.*/m,\n        lookbehind: true,\n        alias: 'important'\n      }, // Инструкции препроцессора вида:\n      // #Если Сервер Тогда\n      // ...\n      // #КонецЕсли\n      // Preprocessor instructions of the form:\n      // #If Server Then\n      // ...\n      // #EndIf\n      {\n        pattern: /^\\s*#.*/gm,\n        alias: 'important'\n      }\n    ]\n  }\n  Prism.languages.oscript = Prism.languages['bsl']\n}\n","'use strict'\n\nmodule.exports = c\nc.displayName = 'c'\nc.aliases = []\nfunction c(Prism) {\n  Prism.languages.c = Prism.languages.extend('clike', {\n    comment: {\n      pattern:\n        /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:__attribute__|_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number:\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern:\n        /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        string: [\n          {\n            // highlight the path of the include statement as a string\n            pattern: /^(#\\s*include\\s*)<[^>]+>/,\n            lookbehind: true\n          },\n          Prism.languages.c['string']\n        ],\n        comment: Prism.languages.c['comment'],\n        'macro-name': [\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n            lookbehind: true\n          },\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n            lookbehind: true,\n            alias: 'function'\n          }\n        ],\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /^(#\\s*)[a-z]+/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'directive-hash': /^#/,\n        punctuation: /##|\\\\(?=[\\r\\n])/,\n        expression: {\n          pattern: /\\S[\\s\\S]*/,\n          inside: Prism.languages.c\n        }\n      }\n    },\n    // highlight predefined macros as constants\n    constant:\n      /\\b(?:__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|stdin|stdout|stderr)\\b/\n  })\n  delete Prism.languages.c['boolean']\n}\n","'use strict'\n\nmodule.exports = cfscript\ncfscript.displayName = 'cfscript'\ncfscript.aliases = []\nfunction cfscript(Prism) {\n  // https://cfdocs.org/script\n  Prism.languages.cfscript = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        inside: {\n          annotation: {\n            pattern: /(?:^|[^.])@[\\w\\.]+/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\n    operator: [\n      /\\+\\+|--|&&|\\|\\||::|=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|[?:]/,\n      /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/\n    ],\n    scope: {\n      pattern:\n        /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\n      alias: 'global'\n    },\n    type: {\n      pattern:\n        /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\n      alias: 'builtin'\n    }\n  })\n  Prism.languages.insertBefore('cfscript', 'keyword', {\n    // This must be declared before keyword because we use \"function\" inside the lookahead\n    'function-variable': {\n      pattern:\n        /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    }\n  })\n  delete Prism.languages.cfscript['class-name']\n  Prism.languages.cfc = Prism.languages['cfscript']\n}\n","'use strict'\nvar refractorCpp = require('./cpp.js')\nmodule.exports = chaiscript\nchaiscript.displayName = 'chaiscript'\nchaiscript.aliases = []\nfunction chaiscript(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.chaiscript = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': [\n      {\n        // e.g. class Rectangle { ... }\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      },\n      {\n        // e.g. attr Rectangle::height, def Rectangle::area() { ... }\n        pattern: /(\\b(?:attr|def)\\s+)\\w+(?=\\s*::)/,\n        lookbehind: true\n      }\n    ],\n    keyword:\n      /\\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\\b/,\n    number: [Prism.languages.cpp.number, /\\b(?:Infinity|NaN)\\b/],\n    operator:\n      />>=?|<<=?|\\|\\||&&|:[:=]?|--|\\+\\+|[=!<>+\\-*/%|&^]=?|[?~]|`[^`\\r\\n]{1,4}`/\n  })\n  Prism.languages.insertBefore('chaiscript', 'operator', {\n    'parameter-type': {\n      // e.g. def foo(int x, Vector y) {...}\n      pattern: /([,(]\\s*)\\w+(?=\\s+\\w)/,\n      lookbehind: true,\n      alias: 'class-name'\n    }\n  })\n  Prism.languages.insertBefore('chaiscript', 'string', {\n    'string-interpolation': {\n      pattern:\n        /(^|[^\\\\])\"(?:[^\"$\\\\]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-expression': {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              inside: Prism.languages.chaiscript\n            },\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = cil\ncil.displayName = 'cil'\ncil.aliases = []\nfunction cil(Prism) {\n  Prism.languages.cil = {\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    directive: {\n      pattern: /(^|\\W)\\.[a-z]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    // Actually an assembly reference\n    variable: /\\[[\\w\\.]+\\]/,\n    keyword:\n      /\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|iant|idispatch|implements|import|initonly|instance|u?int(?:8|16|32|64)?|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,\n    function:\n      /\\b(?:(?:constrained|unaligned|volatile|readonly|tail|no)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.[0-9]+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.[0-9]+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|ldvirtftn|castclass|beq(?:\\.s)?|mkrefany|localloc|ckfinite|rethrow|ldtoken|ldsflda|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    number: /\\b-?(?:0x[0-9a-f]+|[0-9]+)(?:\\.[0-9a-f]+)?\\b/i,\n    punctuation: /[{}[\\];(),:=]|IL_[0-9A-Za-z]+/\n  }\n}\n","'use strict'\n\nmodule.exports = clike\nclike.displayName = 'clike'\nclike.aliases = []\nfunction clike(Prism) {\n  Prism.languages.clike = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword:\n      /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    function: /\\b\\w+(?=\\()/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = clojure\nclojure.displayName = 'clojure'\nclojure.aliases = []\nfunction clojure(Prism) {\n  // Copied from https://github.com/jeluard/prism-clojure\n  Prism.languages.clojure = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: [\n      {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      }, // characters\n      /\\\\\\w+/\n    ],\n    symbol: {\n      pattern: /(^|[\\s()\\[\\]{},])::?[\\w*+!?'<>=/.-]+/,\n      lookbehind: true\n    },\n    keyword: {\n      pattern:\n        /(\\()(?:-|->|->>|\\.|\\.\\.|\\*|\\/|\\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:true|false|nil)\\b/,\n    number: {\n      pattern:\n        /(^|[^\\w$@])(?:\\d+(?:[/.]\\d+)?(?:e[+-]?\\d+)?|0x[a-f0-9]+|[1-9]\\d?r[a-z0-9]+)[lmn]?(?![\\w$@])/i,\n      lookbehind: true\n    },\n    function: {\n      pattern: /((?:^|[^'])\\()[\\w*+!?'<>=/.-]+(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    operator: /[#@^`~]/,\n    punctuation: /[{}\\[\\](),]/\n  }\n}\n","'use strict'\n\nmodule.exports = cmake\ncmake.displayName = 'cmake'\ncmake.aliases = []\nfunction cmake(Prism) {\n  Prism.languages.cmake = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{(?:[^{}$]|\\$\\{[^{}$]*\\})*\\}/,\n          inside: {\n            punctuation: /\\$\\{|\\}/,\n            variable: /\\w+/\n          }\n        }\n      }\n    },\n    variable:\n      /\\b(?:CMAKE_\\w+|\\w+_(?:VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?|(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\\b/,\n    property:\n      /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\n    keyword:\n      /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\n    boolean: /\\b(?:ON|OFF|TRUE|FALSE)\\b/,\n    namespace:\n      /\\b(?:PROPERTIES|SHARED|PRIVATE|STATIC|PUBLIC|INTERFACE|TARGET_OBJECTS)\\b/,\n    operator:\n      /\\b(?:NOT|AND|OR|MATCHES|LESS|GREATER|EQUAL|STRLESS|STRGREATER|STREQUAL|VERSION_LESS|VERSION_EQUAL|VERSION_GREATER|DEFINED)\\b/,\n    inserted: {\n      pattern: /\\b\\w+::\\w+\\b/,\n      alias: 'class-name'\n    },\n    number: /\\b\\d+(?:\\.\\d+)*\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\n    punctuation: /[()>}]|\\$[<{]/\n  }\n}\n","'use strict'\n\nmodule.exports = cobol\ncobol.displayName = 'cobol'\ncobol.aliases = []\nfunction cobol(Prism) {\n  Prism.languages.cobol = {\n    comment: {\n      pattern: /\\*>.*|(^[ \\t]*)\\*.*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /[xzgn]?(?:\"(?:[^\\r\\n\"]|\"\")*\"(?!\")|'(?:[^\\r\\n']|'')*'(?!'))/i,\n      greedy: true\n    },\n    level: {\n      pattern: /(^[ \\t]*)\\d+\\b/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'number'\n    },\n    'class-name': {\n      // https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015\n      pattern:\n        /(\\bpic(?:ture)?\\s+)(?:(?:[-\\w$/,:*+<>]|\\.(?!\\s|$))(?:\\(\\d+\\))?)+/i,\n      lookbehind: true,\n      inside: {\n        number: {\n          pattern: /(\\()\\d+/,\n          lookbehind: true\n        },\n        punctuation: /[()]/\n      }\n    },\n    keyword: {\n      pattern:\n        /(^|[^\\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOUNDS|BOTTOM|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COLLATING|COL|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOP|ERASE|ERROR|EOL|EOS|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTIONNAME|FUNCTION-POINTER|GENERATE|GOBACK|GIVING|GLOBAL|GO|GRID|GROUP|HEADING|HIGHLIGHT|HIGH-VALUE|HIGH-VALUES|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINES|LINE-COUNTER|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOWER|LOWLIGHT|LOW-VALUE|LOW-VALUES|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|POSITION|POSITIVE|PORT|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|READER|REMOTE|RD|REAL|READ|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|REVERSE-VIDEO|RESET|RETURN|RETURN-CODE|RETURNING|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TASK|TAPE|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYMMDD|YYYYDDD|ZERO-FILL|ZEROS|ZEROES)(?![\\w-])/i,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[^\\w-])(?:false|true)(?![\\w-])/i,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^\\w-])(?:[+-]?(?:(?:\\d+(?:[.,]\\d+)?|[.,]\\d+)(?:e[+-]?\\d+)?|zero))(?![\\w-])/i,\n      lookbehind: true\n    },\n    operator: [\n      /<>|[<>]=?|[=+*/&]/,\n      {\n        pattern: /(^|[^\\w-])(?:-|and|equal|greater|less|not|or|than)(?![\\w-])/i,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[.:,()]/\n  }\n}\n","'use strict'\n\nmodule.exports = coffeescript\ncoffeescript.displayName = 'coffeescript'\ncoffeescript.aliases = ['coffee']\nfunction coffeescript(Prism) {\n  ;(function (Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      alias: 'variable'\n    }\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        },\n        {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ],\n      keyword:\n        /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          script: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-javascript',\n            inside: Prism.languages.javascript\n          }\n        }\n      },\n      // Block strings\n      'multiline-string': [\n        {\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        },\n        {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ]\n    })\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    })\n    delete Prism.languages.coffeescript['template-string']\n    Prism.languages.coffee = Prism.languages.coffeescript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = concurnas\nconcurnas.displayName = 'concurnas'\nconcurnas.aliases = ['conc']\nfunction concurnas(Prism) {\n  Prism.languages.concurnas = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    langext: {\n      pattern: /\\b\\w+\\s*\\|\\|[\\s\\S]+?\\|\\|/,\n      greedy: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /\\b0b[01][01_]*L?\\b|\\b0x(?:[\\da-f_]*\\.)?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfls]?/i,\n    punctuation: /[{}[\\];(),.:]/,\n    operator:\n      /<==|>==|=>|->|<-|<>|\\^|&==|&<>|!|\\?:?|\\.\\?|\\+\\+|--|[-+*/=<>]=?|\\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\\b=?/,\n    annotation: {\n      pattern: /@(?:\\w+:)?(?:\\w+|\\[[^\\]]+\\])?/,\n      alias: 'builtin'\n    }\n  }\n  Prism.languages.insertBefore('concurnas', 'langext', {\n    string: {\n      pattern: /[rs]?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.conc = Prism.languages.concurnas\n}\n","'use strict'\n\nmodule.exports = coq\ncoq.displayName = 'coq'\ncoq.aliases = []\nfunction coq(Prism) {\n  ;(function (Prism) {\n    // https://github.com/coq/coq\n    var commentSource = /\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source\n    for (var i = 0; i < 2; i++) {\n      commentSource = commentSource.replace(/<self>/g, function () {\n        return commentSource\n      })\n    }\n    commentSource = commentSource.replace(/<self>/g, '[]')\n    Prism.languages.coq = {\n      comment: RegExp(commentSource),\n      string: {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      },\n      attribute: [\n        {\n          pattern: RegExp(\n            /#\\[(?:[^\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(\n              /<comment>/g,\n              function () {\n                return commentSource\n              }\n            )\n          ),\n          greedy: true,\n          alias: 'attr-name',\n          inside: {\n            comment: RegExp(commentSource),\n            string: {\n              pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n              greedy: true\n            },\n            operator: /=/,\n            punctuation: /^#\\[|\\]$|[,()]/\n          }\n        },\n        {\n          pattern:\n            /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\n          alias: 'attr-name'\n        }\n      ],\n      keyword:\n        /\\b(?:_|Abort|About|Add|Admit|Admitted|All|apply|Arguments|as|As|Assumptions|at|Axiom|Axioms|Back|BackTo|Backtrace|Bind|BinOp|BinOpSpec|BinRel|Blacklist|by|Canonical|Case|Cd|Check|Class|Classes|Close|Coercion|Coercions|cofix|CoFixpoint|CoInductive|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|else|end|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|exists|exists2|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|fix|Fixpoint|Flags|Focus|for|forall|From|fun|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|Identity|if|IF|Immediate|Implicit|Implicits|Import|in|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|let|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|match|Match|measure|Method|Minimality|ML|Module|Modules|Morphism|move|Next|NoInline|Notation|Number|Obligation|Obligations|OCaml|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|Property|PropOp|Proposition|PropUOp|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|removed|Require|Reserved|Reset|Resolve|Restart|return|Rewrite|Right|Ring|Rings|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|SProp|Step|Strategies|Strategy|String|struct|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|then|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|UnOp|UnOpSpec|Unshelve|using|Variable|Variables|Variant|Verbose|View|Visibility|wf|where|with|Zify)\\b/,\n      number:\n        /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\n      punct: {\n        pattern: /@\\{|\\{\\||\\[=|:>/,\n        alias: 'punctuation'\n      },\n      operator:\n        /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\n      punctuation: /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = cpp\ncpp.displayName = 'cpp'\ncpp.aliases = []\nfunction cpp(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    var keyword =\n      /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char8_t|char16_t|char32_t|class|compl|concept|const|consteval|constexpr|constinit|const_cast|continue|co_await|co_return|co_yield|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/\n    var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(\n      /<keyword>/g,\n      function () {\n        return keyword.source\n      }\n    )\n    Prism.languages.cpp = Prism.languages.extend('c', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(\n              /<keyword>/g,\n              function () {\n                return keyword.source\n              }\n            )\n          ),\n          lookbehind: true\n        }, // This is intended to capture the class name of method implementations like:\n        //   void foo::bar() const {}\n        // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n        // it starts with an uppercase letter. This approximation should give decent results.\n        /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n        //   Foo::~Foo() {}\n        /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n        // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n        /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n      ],\n      keyword: keyword,\n      number: {\n        pattern:\n          /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n        greedy: true\n      },\n      operator:\n        />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n      boolean: /\\b(?:true|false)\\b/\n    })\n    Prism.languages.insertBefore('cpp', 'string', {\n      module: {\n        // https://en.cppreference.com/w/cpp/language/modules\n        pattern: RegExp(\n          /(\\b(?:module|import)\\s+)/.source +\n            '(?:' + // header-name\n            /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\n            '|' + // module name or partition or both\n            /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(\n              /<mod-name>/g,\n              function () {\n                return modName\n              }\n            ) +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: /^[<\"][\\s\\S]+/,\n          operator: /:/,\n          punctuation: /\\./\n        }\n      },\n      'raw-string': {\n        pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n        alias: 'string',\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'keyword', {\n      'generic-function': {\n        pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            alias: 'class-name',\n            inside: Prism.languages.cpp\n          }\n        }\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'class-name', {\n      // the base clause is an optional list of parent classes\n      // https://en.cppreference.com/w/cpp/language/class\n      'base-clause': {\n        pattern:\n          /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: Prism.languages.extend('cpp', {})\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'double-colon',\n      {\n        // All untokenized words that are not namespaces should be class names\n        'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n      },\n      Prism.languages.cpp['base-clause']\n    )\n  })(Prism)\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = crystal\ncrystal.displayName = 'crystal'\ncrystal.aliases = []\nfunction crystal(Prism) {\n  Prism.register(refractorRuby)\n  ;(function (Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [\n        /\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|select|self|sizeof|struct|super|then|type|typeof|uninitialized|union|unless|until|when|while|with|yield|__DIR__|__END_LINE__|__FILE__|__LINE__)\\b/,\n        {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/\n    })\n    Prism.languages.insertBefore('crystal', 'string', {\n      attribute: {\n        pattern: /@\\[.+?\\]/,\n        alias: 'attr-name',\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'tag'\n          },\n          rest: Prism.languages.crystal\n        }\n      },\n      expansion: [\n        {\n          pattern: /\\{\\{.+?\\}\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^\\{\\{|\\}\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        },\n        {\n          pattern: /\\{%.+?%\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^\\{%|%\\}$/,\n              alias: 'tag'\n            },\n            rest: Prism.languages.crystal\n          }\n        }\n      ]\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csharp\ncsharp.displayName = 'csharp'\ncsharp.aliases = ['dotnet', 'cs']\nfunction csharp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    } // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n      // keywords which are used to declare a type\n      typeDeclaration: 'class enum interface record struct',\n      // contextual keywords\n      // (\"var\" and \"dynamic\" are missing because they are used like types)\n      contextual:\n        'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\n      // all other keywords\n      other:\n        'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n    } // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var typeDeclarationKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration\n    )\n    var keywords = RegExp(\n      keywordsToPattern(\n        keywordKinds.type +\n          ' ' +\n          keywordKinds.typeDeclaration +\n          ' ' +\n          keywordKinds.contextual +\n          ' ' +\n          keywordKinds.other\n      )\n    )\n    var nonTypeKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.contextual +\n        ' ' +\n        keywordKinds.other\n    )\n    var nonContextualKeywords = keywordsToPattern(\n      keywordKinds.type +\n        ' ' +\n        keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.other\n    ) // types\n    var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2) // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n    var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2)\n    var name = /@?\\b[A-Za-z_]\\w*\\b/.source\n    var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic])\n    var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\n      nonTypeKeywords,\n      genericName\n    ])\n    var array = /\\[\\s*(?:,\\s*)*\\]/.source\n    var typeExpressionWithoutTuple = replace(\n      /<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source,\n      [identifier, array]\n    )\n    var tupleElement = replace(\n      /[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,\n      [generic, nestedRound, array]\n    )\n    var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement])\n    var typeExpression = replace(\n      /(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source,\n      [tuple, identifier, array]\n    )\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    } // strings & characters\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n    var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source // simplified pattern\n    var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source\n    var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source\n    Prism.languages.csharp = Prism.languages.extend('clike', {\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: RegExp(character),\n          greedy: true,\n          alias: 'character'\n        }\n      ],\n      'class-name': [\n        {\n          // Using static\n          // using static System.Math;\n          pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [\n            identifier\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (type)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\n            name,\n            typeExpression\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (alias)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Type declarations\n          // class Foo<A, B>\n          // interface Foo<out A, B>\n          pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\n            typeDeclarationKeywords,\n            genericName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Single catch exception declaration\n          // catch(Foo)\n          // (things like catch(Foo e) is covered by variable declaration)\n          pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Name of the type parameter of generic constraints\n          // where Foo : class\n          pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Casts and checks via as and is.\n          // as Foo<A>, is Bar<B>\n          // (things like if(a is Foo b) is covered by variable declaration)\n          pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [\n            typeExpressionWithoutTuple\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Variable, field and parameter declaration\n          // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n          pattern: re(\n            /\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/\n              .source,\n            [typeExpression, nonContextualKeywords, name]\n          ),\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n      number:\n        /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:ul|lu|[dflmu])?\\b/i,\n      operator: />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n      punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('csharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'punctuation', {\n      'named-parameter': {\n        pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      namespace: {\n        // namespace Foo.Bar {}\n        // using Foo.Bar;\n        pattern: re(\n          /(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source,\n          [name]\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      'type-expression': {\n        // default(Foo), typeof(Foo<Bar>), sizeof(int)\n        pattern: re(\n          /(\\b(?:default|typeof|sizeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/\n            .source,\n          [nestedRound]\n        ),\n        lookbehind: true,\n        alias: 'class-name',\n        inside: typeInside\n      },\n      'return-type': {\n        // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n        // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n        // int Foo => 0; int Foo { get; set } = 0;\n        pattern: re(\n          /<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source,\n          [typeExpression, identifier]\n        ),\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      'constructor-invocation': {\n        // new List<Foo<Bar[]>> { }\n        pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n        lookbehind: true,\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      /*'explicit-implementation': {\n// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\npattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\ninside: classNameInside,\nalias: 'class-name'\n},*/\n      'generic-method': {\n        // foo<Bar>()\n        pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\n        inside: {\n          function: re(/^<<0>>/.source, [name]),\n          generic: {\n            pattern: RegExp(generic),\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      },\n      'type-list': {\n        // The list of types inherited or of generic constraints\n        // class Foo<F> : Bar, IList<FooBar>\n        // where F : Bar, IList<int>\n        pattern: re(\n          /\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/\n            .source,\n          [\n            typeDeclarationKeywords,\n            genericName,\n            name,\n            typeExpression,\n            keywords.source,\n            nestedRound,\n            /\\bnew\\s*\\(\\s*\\)/.source\n          ]\n        ),\n        lookbehind: true,\n        inside: {\n          'record-arguments': {\n            pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [\n              genericName,\n              nestedRound\n            ]),\n            lookbehind: true,\n            greedy: true,\n            inside: Prism.languages.csharp\n          },\n          keyword: keywords,\n          'class-name': {\n            pattern: RegExp(typeExpression),\n            greedy: true,\n            inside: typeInside\n          },\n          punctuation: /[,()]/\n        }\n      },\n      preprocessor: {\n        pattern: /(^[\\t ]*)#.*/m,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight preprocessor directives as keywords\n          directive: {\n            pattern:\n              /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    }) // attributes\n    var regularStringOrCharacter = regularString + '|' + character\n    var regularStringCharacterOrComment = replace(\n      /\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source,\n      [regularStringOrCharacter]\n    )\n    var roundExpression = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    ) // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n    var attrTarget =\n      /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/\n        .source\n    var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\n      identifier,\n      roundExpression\n    ])\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      attribute: {\n        // Attributes\n        // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n        pattern: re(\n          /((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/\n            .source,\n          [attrTarget, attr]\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          target: {\n            pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n            alias: 'keyword'\n          },\n          'attribute-arguments': {\n            pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n            inside: Prism.languages.csharp\n          },\n          'class-name': {\n            pattern: RegExp(identifier),\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          punctuation: /[:,]/\n        }\n      }\n    }) // string interpolation\n    var formatString = /:[^}\\r\\n]+/.source // multi line\n    var mInterpolationRound = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    )\n    var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      mInterpolationRound,\n      formatString\n    ]) // single line\n    var sInterpolationRound = nested(\n      replace(\n        /[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/\n          .source,\n        [regularStringOrCharacter]\n      ),\n      2\n    )\n    var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      sInterpolationRound,\n      formatString\n    ])\n    function createInterpolationInside(interpolation, interpolationRound) {\n      return {\n        interpolation: {\n          pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n          lookbehind: true,\n          inside: {\n            'format-string': {\n              pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\n                interpolationRound,\n                formatString\n              ]),\n              lookbehind: true,\n              inside: {\n                punctuation: /^:/\n              }\n            },\n            punctuation: /^\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              alias: 'language-csharp',\n              inside: Prism.languages.csharp\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.insertBefore('csharp', 'string', {\n      'interpolation-string': [\n        {\n          pattern: re(\n            /(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source,\n            [mInterpolation]\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n        },\n        {\n          pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [\n            sInterpolation\n          ]),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n        }\n      ]\n    })\n  })(Prism)\n  Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp\n}\n","'use strict'\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = cshtml\ncshtml.displayName = 'cshtml'\ncshtml.aliases = ['razor']\nfunction cshtml(Prism) {\n  Prism.register(refractorCsharp)\n  // Docs:\n  // https://docs.microsoft.com/en-us/aspnet/core/razor-pages/?view=aspnetcore-5.0&tabs=visual-studio\n  // https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-5.0\n  ;(function (Prism) {\n    var commentLike = /\\/(?![/*])|\\/\\/.*[\\r\\n]|\\/\\*[^*]*(?:\\*(?!\\/)[^*]*)*\\*\\//\n      .source\n    var stringLike =\n      /@(?!\")|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|@\"(?:[^\\\\\"]|\"\"|\\\\[\\s\\S])*\"(?!\")/.source +\n      '|' +\n      /'(?:(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'|(?=[^\\\\](?!')))/.source\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<self>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern\n        .replace(/<self>/g, '[^\\\\s\\\\S]')\n        .replace(/<str>/g, '(?:' + stringLike + ')')\n        .replace(/<comment>/g, '(?:' + commentLike + ')')\n    }\n    var round = nested(/\\((?:[^()'\"@/]|<str>|<comment>|<self>)*\\)/.source, 2)\n    var square = nested(/\\[(?:[^\\[\\]'\"@/]|<str>|<comment>|<self>)*\\]/.source, 2)\n    var curly = nested(/\\{(?:[^{}'\"@/]|<str>|<comment>|<self>)*\\}/.source, 2)\n    var angle = nested(/<(?:[^<>'\"@/]|<str>|<comment>|<self>)*>/.source, 2) // Note about the above bracket patterns:\n    // They all ignore HTML expressions that might be in the C# code. This is a problem because HTML (like strings and\n    // comments) is parsed differently. This is a huge problem because HTML might contain brackets and quotes which\n    // messes up the bracket and string counting implemented by the above patterns.\n    //\n    // This problem is not fixable because 1) HTML expression are highly context sensitive and very difficult to detect\n    // and 2) they require one capturing group at every nested level. See the `tagRegion` pattern to admire the\n    // complexity of an HTML expression.\n    //\n    // To somewhat alleviate the problem a bit, the patterns for characters (e.g. 'a') is very permissive, it also\n    // allows invalid characters to support HTML expressions like this: <p>That's it!</p>.\n    var tagAttrs =\n      /(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?/\n        .source\n    var tagContent = /(?!\\d)[^\\s>\\/=$<%]+/.source + tagAttrs + /\\s*\\/?>/.source\n    var tagRegion =\n      /\\B@?/.source +\n      '(?:' +\n      /<([a-zA-Z][\\w:]*)/.source +\n      tagAttrs +\n      /\\s*>/.source +\n      '(?:' +\n      (/[^<]/.source +\n        '|' + // all tags that are not the start tag\n        // eslint-disable-next-line regexp/strict\n        /<\\/?(?!\\1\\b)/.source +\n        tagContent +\n        '|' + // nested start tag\n        nested(\n          // eslint-disable-next-line regexp/strict\n          /<\\1/.source +\n            tagAttrs +\n            /\\s*>/.source +\n            '(?:' +\n            (/[^<]/.source +\n              '|' + // all tags that are not the start tag\n              // eslint-disable-next-line regexp/strict\n              /<\\/?(?!\\1\\b)/.source +\n              tagContent +\n              '|' +\n              '<self>') +\n            ')*' + // eslint-disable-next-line regexp/strict\n            /<\\/\\1\\s*>/.source,\n          2\n        )) +\n      ')*' + // eslint-disable-next-line regexp/strict\n      /<\\/\\1\\s*>/.source +\n      '|' +\n      /</.source +\n      tagContent +\n      ')' // Now for the actual language definition(s):\n    //\n    // Razor as a language has 2 parts:\n    //  1) CSHTML: A markup-like language that has been extended with inline C# code expressions and blocks.\n    //  2) C#+HTML: A variant of C# that can contain CSHTML tags as expressions.\n    //\n    // In the below code, both CSHTML and C#+HTML will be create as separate language definitions that reference each\n    // other. However, only CSHTML will be exported via `Prism.languages`.\n    Prism.languages.cshtml = Prism.languages.extend('markup', {})\n    var csharpWithHtml = Prism.languages.insertBefore(\n      'csharp',\n      'string',\n      {\n        html: {\n          pattern: RegExp(tagRegion),\n          greedy: true,\n          inside: Prism.languages.cshtml\n        }\n      },\n      {\n        csharp: Prism.languages.extend('csharp', {})\n      }\n    )\n    var cs = {\n      pattern: /\\S[\\s\\S]*/,\n      alias: 'language-csharp',\n      inside: csharpWithHtml\n    }\n    Prism.languages.insertBefore('cshtml', 'prolog', {\n      'razor-comment': {\n        pattern: /@\\*[\\s\\S]*?\\*@/,\n        greedy: true,\n        alias: 'comment'\n      },\n      block: {\n        pattern: RegExp(\n          /(^|[^@])@/.source +\n            '(?:' +\n            [\n              // @{ ... }\n              curly, // @code{ ... }\n              /(?:code|functions)\\s*/.source + curly, // @for (...) { ... }\n              /(?:for|foreach|lock|switch|using|while)\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly, // @do { ... } while (...);\n              /do\\s*/.source +\n                curly +\n                /\\s*while\\s*/.source +\n                round +\n                /(?:\\s*;)?/.source, // @try { ... } catch (...) { ... } finally { ... }\n              /try\\s*/.source +\n                curly +\n                /\\s*catch\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                /\\s*finally\\s*/.source +\n                curly, // @if (...) {...} else if (...) {...} else {...}\n              /if\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                '(?:' +\n                /\\s*else/.source +\n                '(?:' +\n                /\\s+if\\s*/.source +\n                round +\n                ')?' +\n                /\\s*/.source +\n                curly +\n                ')*'\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w*/,\n          csharp: cs\n        }\n      },\n      directive: {\n        pattern:\n          /^([ \\t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\\s).*/m,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w+/,\n          csharp: cs\n        }\n      },\n      value: {\n        pattern: RegExp(\n          /(^|[^@])@/.source +\n            /(?:await\\b\\s*)?/.source +\n            '(?:' +\n            /\\w+\\b/.source +\n            '|' +\n            round +\n            ')' +\n            '(?:' +\n            /[?!]?\\.\\w+\\b/.source +\n            '|' +\n            round +\n            '|' +\n            square +\n            '|' +\n            angle +\n            round +\n            ')*'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'variable',\n        inside: {\n          keyword: /^@/,\n          csharp: cs\n        }\n      },\n      'delegate-operator': {\n        pattern: /(^|[^@])@(?=<)/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.razor = Prism.languages.cshtml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csp\ncsp.displayName = 'csp'\ncsp.aliases = []\nfunction csp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n   *\n   * Supports the following:\n   *  - CSP Level 1\n   *  - CSP Level 2\n   *  - CSP Level 3\n   */\n  Prism.languages.csp = {\n    directive: {\n      pattern:\n        /(^|[^-\\da-z])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[^-\\da-z]|$)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    safe: {\n      // CSP2 hashes and nonces are base64 values. CSP3 accepts both base64 and base64url values.\n      // See https://tools.ietf.org/html/rfc4648#section-4\n      // See https://tools.ietf.org/html/rfc4648#section-5\n      pattern:\n        /'(?:deny|none|report-sample|self|strict-dynamic|top-only|(?:nonce|sha(?:256|384|512))-[-+/\\w=]+)'/i,\n      alias: 'selector'\n    },\n    unsafe: {\n      pattern:\n        /(?:'unsafe-(?:allow-redirects|dynamic|eval|hash-attributes|hashed-attributes|hashes|inline)'|\\*)/i,\n      alias: 'function'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = cssExtras\ncssExtras.displayName = 'cssExtras'\ncssExtras.aliases = []\nfunction cssExtras(Prism) {\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var selectorInside\n    Prism.languages.css.selector = {\n      pattern: Prism.languages.css.selector.pattern,\n      lookbehind: true,\n      inside: (selectorInside = {\n        'pseudo-element':\n          /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+/,\n        class: /\\.[-\\w]+/,\n        id: /#[-\\w]+/,\n        attribute: {\n          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n          greedy: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            'case-sensitivity': {\n              pattern: /(\\s)[si]$/i,\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            namespace: {\n              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n              lookbehind: true,\n              inside: {\n                punctuation: /\\|$/\n              }\n            },\n            'attr-name': {\n              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n              lookbehind: true\n            },\n            'attr-value': [\n              string,\n              {\n                pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n                lookbehind: true\n              }\n            ],\n            operator: /[|~*^$]?=/\n          }\n        },\n        'n-th': [\n          {\n            pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n            lookbehind: true,\n            inside: {\n              number: /[\\dn]+/,\n              operator: /[+-]/\n            }\n          },\n          {\n            pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n            lookbehind: true\n          }\n        ],\n        combinator: />|\\+|~|\\|\\|/,\n        // the `tag` token has been existed and removed.\n        // because we can't find a perfect tokenize to match it.\n        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n        punctuation: /[(),]/\n      })\n    }\n    Prism.languages.css['atrule'].inside['selector-function-argument'].inside =\n      selectorInside\n    Prism.languages.insertBefore('css', 'property', {\n      variable: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n        lookbehind: true\n      }\n    })\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n      lookbehind: true\n    } // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    Prism.languages.insertBefore('css', 'function', {\n      operator: {\n        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n        lookbehind: true\n      },\n      // CAREFUL!\n      // Previewers and Inline color use hexcode and color.\n      hexcode: {\n        pattern: /\\B#[\\da-f]{3,8}\\b/i,\n        alias: 'color'\n      },\n      color: [\n        {\n          pattern:\n            /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      // it's important that there is no boundary assertion after the hex digits\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      number: number\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = css\ncss.displayName = 'css'\ncss.aliases = []\nfunction css(Prism) {\n  ;(function (Prism) {\n    var string =\n      /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n        inside: {\n          rule: /^@[\\w-]+/,\n          'selector-function-argument': {\n            pattern:\n              /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n            lookbehind: true,\n            alias: 'selector'\n          },\n          keyword: {\n            pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n            lookbehind: true\n          } // See rest below\n        }\n      },\n      url: {\n        // https://drafts.csswg.org/css-values-3/#urls\n        pattern: RegExp(\n          '\\\\burl\\\\((?:' +\n            string.source +\n            '|' +\n            /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source +\n            ')\\\\)',\n          'i'\n        ),\n        greedy: true,\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/,\n          string: {\n            pattern: RegExp('^' + string.source + '$'),\n            alias: 'url'\n          }\n        }\n      },\n      selector: {\n        pattern: RegExp(\n          '(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' +\n            string.source +\n            ')*(?=\\\\s*\\\\{)'\n        ),\n        lookbehind: true\n      },\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      property: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n        lookbehind: true\n      },\n      important: /!important\\b/i,\n      function: {\n        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n        lookbehind: true\n      },\n      punctuation: /[(){};:,]/\n    }\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css\n    var markup = Prism.languages.markup\n    if (markup) {\n      markup.tag.addInlined('style', 'css')\n      markup.tag.addAttribute('style', 'css')\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csv\ncsv.displayName = 'csv'\ncsv.aliases = []\nfunction csv(Prism) {\n  // https://tools.ietf.org/html/rfc4180\n  Prism.languages.csv = {\n    value: /[^\\r\\n,\"]+|\"(?:[^\"]|\"\")*\"(?!\")/,\n    punctuation: /,/\n  }\n}\n","'use strict'\n\nmodule.exports = cypher\ncypher.displayName = 'cypher'\ncypher.aliases = []\nfunction cypher(Prism) {\n  Prism.languages.cypher = {\n    // https://neo4j.com/docs/cypher-manual/current/syntax/comments/\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)(?=\\s*[{):])/,\n      lookbehind: true,\n      greedy: true\n    },\n    relationship: {\n      pattern:\n        /(-\\[\\s*(?:\\w+\\s*|`(?:[^`\\\\\\r\\n])*`\\s*)?:\\s*|\\|\\s*:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    identifier: {\n      pattern: /`(?:[^`\\\\\\r\\n])*`/,\n      greedy: true,\n      alias: 'symbol'\n    },\n    variable: /\\$\\w+/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/reserved/\n    keyword:\n      /\\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\\b/i,\n    function: /\\b\\w+\\b(?=\\s*\\()/,\n    boolean: /\\b(?:true|false|null)\\b/i,\n    number: /\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)\\b/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/operators/\n    operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\\.\\.\\.?/,\n    punctuation: /[()[\\]{},;.]/\n  }\n}\n","'use strict'\n\nmodule.exports = d\nd.displayName = 'd'\nd.aliases = []\nfunction d(Prism) {\n  Prism.languages.d = Prism.languages.extend('clike', {\n    comment: [\n      {\n        // Shebang\n        pattern: /^\\s*#!.+/,\n        greedy: true\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\\\\])/.source +\n            '(?:' +\n            [\n              // /+ comment +/\n              // Allow one level of nesting\n              /\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source, // // comment\n              /\\/\\/.*/.source, // /* comment */\n              /\\/\\*[\\s\\S]*?\\*\\//.source\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: RegExp(\n          [\n            // r\"\", x\"\"\n            /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source, // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n            /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source, // q\"IDENT\n            // ...\n            // IDENT\"\n            /\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source, // q\"//\", q\"||\", etc.\n            // eslint-disable-next-line regexp/strict\n            /\\bq\"(.)[\\s\\S]*?\\2\"/.source, // Characters\n            // 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\n            /'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/.source, // eslint-disable-next-line regexp/strict\n            /([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source\n          ].join('|'),\n          'm'\n        ),\n        greedy: true\n      },\n      {\n        pattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\n        greedy: true,\n        alias: 'token-string'\n      }\n    ],\n    // In order: $, keywords and special tokens, globally defined symbols\n    keyword:\n      /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n    number: [\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,\n      {\n        pattern:\n          /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\n        lookbehind: true\n      }\n    ],\n    operator:\n      /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n  })\n  Prism.languages.insertBefore('d', 'keyword', {\n    property: /\\B@\\w*/\n  })\n  Prism.languages.insertBefore('d', 'function', {\n    register: {\n      // Iasm registers\n      pattern:\n        /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n      alias: 'variable'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = dart\ndart.displayName = 'dart'\ndart.aliases = []\nfunction dart(Prism) {\n  ;(function (Prism) {\n    var keywords = [\n      /\\b(?:async|sync|yield)\\*/,\n      /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extension|external|extends|factory|final|finally|for|get|hide|if|implements|interface|import|in|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\n    ] // Handles named imports, such as http.Client\n    var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the dart naming conventions\n    var className = {\n      pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        }\n      }\n    }\n    Prism.languages.dart = Prism.languages.extend('clike', {\n      string: [\n        {\n          pattern: /r?(\"\"\"|''')[\\s\\S]*?\\1/,\n          greedy: true\n        },\n        {\n          pattern: /r?([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      operator:\n        /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n    })\n    Prism.languages.insertBefore('dart', 'function', {\n      metadata: {\n        pattern: /@\\w+/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dataweave\ndataweave.displayName = 'dataweave'\ndataweave.aliases = []\nfunction dataweave(Prism) {\n  ;(function (Prism) {\n    Prism.languages.dataweave = {\n      url: /\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,\n      property: {\n        pattern: /(?:\\b\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\b\\w+)(?=\\s*[:@])/,\n        greedy: true\n      },\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      'mime-type':\n        /\\b(?:text|audio|video|application|multipart|image)\\/[\\w+-]+/,\n      date: {\n        pattern: /\\|[\\w:+-]+\\|/,\n        greedy: true\n      },\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      regex: {\n        pattern: /\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,\n        greedy: true\n      },\n      function: /\\b[A-Z_]\\w*(?=\\s*\\()/i,\n      number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n      punctuation: /[{}[\\];(),.:@]/,\n      operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|!|\\?/,\n      boolean: /\\b(?:true|false)\\b/,\n      keyword:\n        /\\b(?:match|input|output|ns|type|update|null|if|else|using|unless|at|is|as|case|do|fun|var|not|and|or)\\b/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dax\ndax.displayName = 'dax'\ndax.aliases = []\nfunction dax(Prism) {\n  Prism.languages.dax = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/).*)/,\n      lookbehind: true\n    },\n    'data-field': {\n      pattern:\n        /'(?:[^']|'')*'(?!')(?:\\[[ \\w\\xA0-\\uFFFF]+\\])?|\\w+\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'symbol'\n    },\n    measure: {\n      pattern: /\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'constant'\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    function:\n      /\\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\\.DIST|BETA\\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\\.DIST|CHISQ\\.DIST\\.RT|CHISQ\\.INV|CHISQ\\.INV\\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\\.NORM|CONFIDENCE\\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\\.DIST|NORM\\.INV|NORM\\.S\\.DIST|NORM\\.S\\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\\.EXC|PERCENTILE\\.INC|PERCENTILEX\\.EXC|PERCENTILEX\\.INC|PERMUT|PI|POISSON\\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\\.P|STDEV\\.S|STDEVX\\.P|STDEVX\\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\\.DIST|T\\.DIST\\.2T|T\\.DIST\\.RT|T\\.INV|T\\.INV\\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\\.P|VAR\\.S|VARX\\.P|VARX\\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\\s*\\()/i,\n    keyword:\n      /\\b(?:DEFINE|MEASURE|EVALUATE|ORDER\\s+BY|RETURN|VAR|START\\s+AT|ASC|DESC)\\b/i,\n    boolean: {\n      pattern: /\\b(?:TRUE|FALSE|NULL)\\b/i,\n      alias: 'constant'\n    },\n    number: /\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator: /:=|[-+*\\/=^]|&&?|\\|\\||<(?:=>?|<|>)?|>[>=]?|\\b(?:IN|NOT)\\b/i,\n    punctuation: /[;\\[\\](){}`,.]/\n  }\n}\n","'use strict'\n\nmodule.exports = dhall\ndhall.displayName = 'dhall'\ndhall.aliases = []\nfunction dhall(Prism) {\n  // ABNF grammar:\n  // https://github.com/dhall-lang/dhall-lang/blob/master/standard/dhall.abnf\n  Prism.languages.dhall = {\n    // Multi-line comments can be nested. E.g. {- foo {- bar -} -}\n    // The multi-line pattern is essentially this:\n    //   \\{-(?:[^-{]|-(?!\\})|\\{(?!-)|<SELF>)*-\\}\n    comment:\n      /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              alias: 'language-dhall',\n              inside: null // see blow\n            },\n            punctuation: /\\$\\{|\\}/\n          }\n        }\n      }\n    },\n    label: {\n      pattern: /`[^`]*`/,\n      greedy: true\n    },\n    url: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596\n      pattern:\n        /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n      greedy: true\n    },\n    env: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661\n      pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n      greedy: true,\n      inside: {\n        function: /^env/,\n        operator: /^:/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    hash: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725\n      pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n      inside: {\n        function: /sha256/,\n        operator: /:/,\n        number: /[\\da-fA-F]{64}/\n      }\n    },\n    // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359\n    keyword:\n      /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n    builtin: /\\b(?:Some|None)\\b/,\n    boolean: /\\b(?:False|True)\\b/,\n    number:\n      /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n    operator:\n      /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n    punctuation: /\\.\\.|[{}\\[\\](),./]/,\n    // we'll just assume that every capital word left is a type name\n    'class-name': /\\b[A-Z]\\w*\\b/\n  }\n  Prism.languages.dhall.string.inside.interpolation.inside.expression.inside =\n    Prism.languages.dhall\n}\n","'use strict'\n\nmodule.exports = diff\ndiff.displayName = 'diff'\ndiff.aliases = []\nfunction diff(Prism) {\n  ;(function (Prism) {\n    Prism.languages.diff = {\n      coord: [\n        // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n        /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n        /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n        /^\\d.*$/m\n      ] // deleted, inserted, unchanged, diff\n    }\n    /**\n     * A map from the name of a block to its line prefix.\n     *\n     * @type {Object<string, string>}\n     */\n    var PREFIXES = {\n      'deleted-sign': '-',\n      'deleted-arrow': '<',\n      'inserted-sign': '+',\n      'inserted-arrow': '>',\n      unchanged: ' ',\n      diff: '!'\n    } // add a token for each prefix\n    Object.keys(PREFIXES).forEach(function (name) {\n      var prefix = PREFIXES[name]\n      var alias = []\n      if (!/^\\w+$/.test(name)) {\n        // \"deleted-sign\" -> \"deleted\"\n        alias.push(/\\w+/.exec(name)[0])\n      }\n      if (name === 'diff') {\n        alias.push('bold')\n      }\n      Prism.languages.diff[name] = {\n        pattern: RegExp(\n          '^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+',\n          'm'\n        ),\n        alias: alias,\n        inside: {\n          line: {\n            pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n            lookbehind: true\n          },\n          prefix: {\n            pattern: /[\\s\\S]/,\n            alias: /\\w+/.exec(name)[0]\n          }\n        }\n      }\n    }) // make prefixes available to Diff plugin\n    Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n      value: PREFIXES\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = django\ndjango.displayName = 'django'\ndjango.aliases = ['jinja2']\nfunction django(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n  ;(function (Prism) {\n    Prism.languages.django = {\n      comment: /^\\{#[\\s\\S]*?#\\}$/,\n      tag: {\n        pattern: /(^\\{%[+-]?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      delimiter: {\n        pattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\n        alias: 'punctuation'\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      filter: {\n        pattern: /(\\|)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      test: {\n        pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\n      keyword:\n        /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      boolean: /[Tt]rue|[Ff]alse|[Nn]one/,\n      variable: /\\b\\w+?\\b/,\n      punctuation: /[{}[\\](),.:;]/\n    }\n    var pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g\n    var markupTemplating = Prism.languages['markup-templating']\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'django', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'django')\n    }) // Add an Jinja2 alias\n    Prism.languages.jinja2 = Prism.languages.django\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'jinja2', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'jinja2')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dnsZoneFile\ndnsZoneFile.displayName = 'dnsZoneFile'\ndnsZoneFile.aliases = []\nfunction dnsZoneFile(Prism) {\n  Prism.languages['dns-zone-file'] = {\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(^\\$ORIGIN[ \\t]+)\\S+/m,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|\\s)@(?=\\s|$)/,\n        lookbehind: true\n      }\n    ],\n    keyword: /^\\$(?:ORIGIN|INCLUDE|TTL)(?=\\s|$)/m,\n    class: {\n      // https://tools.ietf.org/html/rfc1035#page-13\n      pattern: /(^|\\s)(?:IN|CH|CS|HS)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      // https://en.wikipedia.org/wiki/List_of_DNS_record_types\n      pattern:\n        /(^|\\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    punctuation: /[()]/\n  }\n  Prism.languages['dns-zone'] = Prism.languages['dns-zone-file']\n}\n","'use strict'\n\nmodule.exports = docker\ndocker.displayName = 'docker'\ndocker.aliases = ['dockerfile']\nfunction docker(Prism) {\n  ;(function (Prism) {\n    // Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n    // that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n    var spaceAfterBackSlash =\n      /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source // At least one space, comment, or line break\n    var space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(\n      /<SP_BS>/g,\n      function () {\n        return spaceAfterBackSlash\n      }\n    )\n    var string =\n      /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/\n        .source\n    var option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(\n      /<STR>/g,\n      function () {\n        return string\n      }\n    )\n    var stringRule = {\n      pattern: RegExp(string),\n      greedy: true\n    }\n    var commentRule = {\n      pattern: /(^[ \\t]*)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<OPT>/g, function () {\n          return option\n        })\n        .replace(/<SP>/g, function () {\n          return space\n        })\n      return RegExp(source, flags)\n    }\n    Prism.languages.docker = {\n      instruction: {\n        pattern:\n          /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          options: {\n            pattern: re(\n              /(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,\n              'i'\n            ),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              property: {\n                pattern: /(^|\\s)--[\\w-]+/,\n                lookbehind: true\n              },\n              string: [\n                stringRule,\n                {\n                  pattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n                  lookbehind: true\n                }\n              ],\n              operator: /\\\\$/m,\n              punctuation: /=/\n            }\n          },\n          keyword: [\n            {\n              // https://docs.docker.com/engine/reference/builder/#healthcheck\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#from\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#onbuild\n              pattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              pattern: /^\\w+/,\n              greedy: true\n            }\n          ],\n          comment: commentRule,\n          string: stringRule,\n          variable: /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n          operator: /\\\\$/m\n        }\n      },\n      comment: commentRule\n    }\n    Prism.languages.dockerfile = Prism.languages.docker\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dot\ndot.displayName = 'dot'\ndot.aliases = ['gv']\nfunction dot(Prism) {\n  // https://www.graphviz.org/doc/info/lang.html\n  ;(function (Prism) {\n    var ID =\n      '(?:' +\n      [\n        // an identifier\n        /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source, // a number\n        /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source, // a double-quoted string\n        /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source, // HTML-like string\n        /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/\n          .source\n      ].join('|') +\n      ')'\n    var IDInside = {\n      markup: {\n        pattern: /(^<)[\\s\\S]+(?=>$)/,\n        lookbehind: true,\n        alias: ['language-markup', 'language-html', 'language-xml'],\n        inside: Prism.languages.markup\n      }\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function withID(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return ID\n        }),\n        flags\n      )\n    }\n    Prism.languages.dot = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n        greedy: true\n      },\n      'graph-name': {\n        pattern: withID(\n          /(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source,\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name',\n        inside: IDInside\n      },\n      'attr-value': {\n        pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      'attr-name': {\n        pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n      'compass-point': {\n        pattern: /(:[ \\t\\r\\n]*)(?:[ns][ew]?|[ewc_])(?![\\w\\x80-\\uFFFF])/,\n        lookbehind: true,\n        alias: 'builtin'\n      },\n      node: {\n        pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      operator: /[=:]|-[->]/,\n      punctuation: /[\\[\\]{};,]/\n    }\n    Prism.languages.gv = Prism.languages.dot\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ebnf\nebnf.displayName = 'ebnf'\nebnf.aliases = []\nfunction ebnf(Prism) {\n  Prism.languages.ebnf = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    special: {\n      pattern: /\\?[^?\\r\\n]*\\?/,\n      greedy: true,\n      alias: 'class-name'\n    },\n    definition: {\n      pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n      lookbehind: true,\n      alias: ['rule', 'keyword']\n    },\n    rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n    operator: /[-=|*/!]/\n  }\n}\n","'use strict'\n\nmodule.exports = editorconfig\neditorconfig.displayName = 'editorconfig'\neditorconfig.aliases = []\nfunction editorconfig(Prism) {\n  Prism.languages.editorconfig = {\n    // https://editorconfig-specification.readthedocs.io/en/latest/\n    comment: /[;#].*/,\n    section: {\n      pattern: /(^[ \\t]*)\\[.+\\]/m,\n      lookbehind: true,\n      alias: 'keyword',\n      inside: {\n        regex: /\\\\\\\\[\\[\\]{},!?.*]/,\n        // Escape special characters with '\\\\'\n        operator: /[!?]|\\.\\.|\\*{1,2}/,\n        punctuation: /[\\[\\]{},]/\n      }\n    },\n    property: {\n      pattern: /(^[ \\t]*)[^\\s=]+(?=[ \\t]*=)/m,\n      lookbehind: true\n    },\n    value: {\n      pattern: /=.*/,\n      alias: 'string',\n      inside: {\n        punctuation: /^=/\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = eiffel\neiffel.displayName = 'eiffel'\neiffel.aliases = []\nfunction eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      }, // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      }, // Single-line string\n      {\n        pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }\n    ],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword:\n      /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:True|False)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': {\n      pattern: /\\b[A-Z][\\dA-Z_]*\\b/,\n      alias: 'builtin'\n    },\n    number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i, // Decimal\n      /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i\n    ],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  }\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ejs\nejs.displayName = 'ejs'\nejs.aliases = ['eta']\nfunction ejs(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.ejs = {\n      delimiter: {\n        pattern: /^<%[-_=]?|[-_]?%>$/,\n        alias: 'punctuation'\n      },\n      comment: /^#[\\s\\S]*/,\n      'language-javascript': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.javascript\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var ejsPattern = /<%(?!%)[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ejs',\n        ejsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ejs')\n    })\n    Prism.languages.eta = Prism.languages.ejs\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = elixir\nelixir.displayName = 'elixir'\nelixir.aliases = []\nfunction elixir(Prism) {\n  Prism.languages.elixir = {\n    doc: {\n      pattern:\n        /@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,\n      inside: {\n        attribute: /^@\\w+/,\n        string: /['\"][\\s\\S]+/\n      }\n    },\n    comment: {\n      pattern: /#.*/m,\n      greedy: true\n    },\n    // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n    regex: {\n      pattern:\n        /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n      greedy: true\n    },\n    string: [\n      {\n        // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n        pattern:\n          /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        // Multi-line strings are allowed\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }\n    ],\n    atom: {\n      // Look-behind prevents bad highlighting of the :: operator\n      pattern: /(^|[^:]):\\w+/,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    module: {\n      pattern: /\\b[A-Z]\\w*\\b/,\n      alias: 'class-name'\n    },\n    // Look-ahead prevents bad highlighting of the :: operator\n    'attr-name': /\\b\\w+\\??:(?!:)/,\n    argument: {\n      // Look-behind prevents bad highlighting of the && operator\n      pattern: /(^|[^&])&\\d+/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'variable'\n    },\n    function: /\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,\n    number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n    keyword:\n      /\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,\n    boolean: /\\b(?:true|false|nil)\\b/,\n    operator: [\n      /\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\n      {\n        // We don't want to match <<\n        pattern: /([^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /([^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,%\\[\\]{}()]/\n  }\n  Prism.languages.elixir.string.forEach(function (o) {\n    o.inside = {\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.elixir\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = elm\nelm.displayName = 'elm'\nelm.aliases = []\nfunction elm(Prism) {\n  Prism.languages.elm = {\n    comment: /--.*|\\{-[\\s\\S]*?-\\}/,\n    char: {\n      pattern: /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+))'/,\n      greedy: true\n    },\n    string: [\n      {\n        // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      },\n      {\n        pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      }\n    ],\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:import|as|exposing)\\b/\n      }\n    },\n    keyword:\n      /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n    // decimal integers and floating point numbers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n    // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n    operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n    // In Elm, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n    constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n    punctuation: /[{}[\\]|(),.:]/\n  }\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = erb\nerb.displayName = 'erb'\nerb.aliases = []\nfunction erb(Prism) {\n  Prism.register(refractorRuby)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.erb = Prism.languages.extend('ruby', {})\n    Prism.languages.insertBefore('erb', 'comment', {\n      delimiter: {\n        pattern: /^<%=?|%>$/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.hooks.add('before-tokenize', function (env) {\n      var erbPattern =\n        /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s(?:[^\\r\\n]|[\\r\\n](?!=end))*[\\r\\n]=end)+?%>/gm\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'erb',\n        erbPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = erlang\nerlang.displayName = 'erlang'\nerlang.aliases = []\nfunction erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n    number: [\n      /\\$\\\\?./,\n      /\\b\\d+#[a-z0-9]+/i,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    ],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [\n      /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  }\n}\n","'use strict'\nvar refractorLua = require('./lua.js')\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = etlua\netlua.displayName = 'etlua'\netlua.aliases = []\nfunction etlua(Prism) {\n  Prism.register(refractorLua)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.etlua = {\n      delimiter: {\n        pattern: /^<%[-=]?|-?%>$/,\n        alias: 'punctuation'\n      },\n      'language-lua': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.lua\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var pattern = /<%[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'etlua',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'etlua')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = excelFormula\nexcelFormula.displayName = 'excelFormula'\nexcelFormula.aliases = []\nfunction excelFormula(Prism) {\n  Prism.languages['excel-formula'] = {\n    comment: {\n      pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    reference: {\n      // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n      // Sales!B2\n      // 'Winter sales'!B2\n      // [Sales.xlsx]Jan!B2:B5\n      // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n      // '[Sales.xlsx]Jan sales'!B2:B5\n      // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n      pattern:\n        /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        operator: /!$/,\n        punctuation: /'/,\n        sheet: {\n          pattern: /[^[\\]]+$/,\n          alias: 'function'\n        },\n        file: {\n          pattern: /\\[[^[\\]]+\\]$/,\n          inside: {\n            punctuation: /[[\\]]/\n          }\n        },\n        path: /[\\s\\S]+/\n      }\n    },\n    'function-name': {\n      pattern: /\\b[A-Z]\\w*(?=\\()/i,\n      alias: 'keyword'\n    },\n    range: {\n      pattern:\n        /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n      alias: 'property',\n      inside: {\n        operator: /:/,\n        cell: /\\$?[A-Z]+\\$?\\d+/i,\n        column: /\\$?[A-Z]+/i,\n        row: /\\$?\\d+/\n      }\n    },\n    cell: {\n      // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n      // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n      pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n      alias: 'property'\n    },\n    number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:TRUE|FALSE)\\b/i,\n    operator: /[-+*/^%=&,]|<[=>]?|>=?/,\n    punctuation: /[[\\]();{}|]/\n  }\n  Prism.languages['xlsx'] = Prism.languages['xls'] =\n    Prism.languages['excel-formula']\n}\n","'use strict'\n\nmodule.exports = factor\nfactor.displayName = 'factor'\nfactor.aliases = []\nfunction factor(Prism) {\n  ;(function (Prism) {\n    var comment_inside = {\n      function:\n        /\\b(?:TODOS?|FIX(?:MES?)?|NOTES?|BUGS?|XX+|HACKS?|WARN(?:ING)?|\\?{2,}|!{2,})\\b/\n    }\n    var string_inside = {\n      number: /\\\\[^\\s']|%\\w/\n    }\n    var factor = {\n      comment: [\n        {\n          // ! single-line exclamation point comments with whitespace after/around the !\n          pattern: /(^|\\s)(?:! .*|!$)/,\n          lookbehind: true,\n          inside: comment_inside\n        },\n        /* from basis/multiline: */\n        {\n          // /* comment */, /* comment*/\n          pattern: /(^|\\s)\\/\\*\\s[\\s\\S]*?\\*\\/(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        },\n        {\n          // ![[ comment ]] , ![===[ comment]===]\n          pattern: /(^|\\s)!\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        }\n      ],\n      number: [\n        {\n          // basic base 10 integers 9, -9\n          pattern: /(^|\\s)[+-]?\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // base prefix integers 0b010 0o70 0xad 0d10 0XAD -0xa9\n          pattern: /(^|\\s)[+-]?0(?:b[01]+|o[0-7]+|d\\d+|x[\\dA-F]+)(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // fractional ratios 1/5 -1/5 and the literal float approximations 1/5. -1/5.\n          pattern: /(^|\\s)[+-]?\\d+\\/\\d+\\.?(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // positive mixed numbers 23+1/5 +23+1/5\n          pattern: /(^|\\s)\\+?\\d+\\+\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // negative mixed numbers -23-1/5\n          pattern: /(^|\\s)-\\d+-\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // basic decimal floats -0.01 0. .0 .1 -.1 -1. -12.13 +12.13\n          // and scientific notation with base 10 exponents 3e4 3e-4 .3e-4\n          pattern:\n            /(^|\\s)[+-]?(?:\\d*\\.\\d+|\\d+\\.\\d*|\\d+)(?:e[+-]?\\d+)?(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // NAN literal syntax NAN: 80000deadbeef, NAN: a\n          pattern: /(^|\\s)NAN:\\s+[\\da-fA-F]+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          /*\nbase prefix floats 0x1.0p3 (8.0) 0b1.010p2 (5.0) 0x1.p1 0b1.11111111p11111...\n\"The normalized hex form ±0x1.MMMMMMMMMMMMM[pP]±EEEE allows any floating-point number to be specified precisely.\nThe values of MMMMMMMMMMMMM and EEEE map directly to the mantissa and exponent fields of the binary IEEE 754 representation.\"\n<https://docs.factorcode.org/content/article-syntax-floats.html>\n*/\n          pattern:\n            /(^|\\s)[+-]?0(?:b1\\.[01]*|o1\\.[0-7]*|d1\\.\\d*|x1\\.[\\dA-F]*)p\\d+(?=\\s|$)/i,\n          lookbehind: true\n        }\n      ],\n      // R/ regexp?\\/\\\\/\n      regexp: {\n        pattern:\n          /(^|\\s)R\\/\\s(?:\\\\\\S|[^\\\\/])*\\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'number',\n        inside: {\n          variable: /\\\\\\S/,\n          keyword: /[+?*\\[\\]^$(){}.|]/,\n          operator: {\n            pattern: /(\\/)[idmsr]+(?:-[idmsr]+)?/,\n            lookbehind: true\n          }\n        }\n      },\n      boolean: {\n        pattern: /(^|\\s)[tf](?=\\s|$)/,\n        lookbehind: true\n      },\n      // SBUF\" asd\", URL\" ://...\", P\" /etc/\"\n      'custom-string': {\n        pattern: /(^|\\s)[A-Z0-9\\-]+\"\\s(?:\\\\\\S|[^\"\\\\])*\"/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          number: /\\\\\\S|%\\w|\\//\n        }\n      },\n      'multiline-string': [\n        {\n          // STRING: name \\n content \\n ; -> CONSTANT: name \"content\" (symbol)\n          pattern: /(^|\\s)STRING:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*;(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            number: string_inside.number,\n            // trailing semicolon on its own line\n            'semicolon-or-setlocal': {\n              pattern: /([\\r\\n][ \\t]*);(?=\\s|$)/,\n              lookbehind: true,\n              alias: 'function'\n            }\n          }\n        },\n        {\n          // HEREDOC: marker \\n content \\n marker ; -> \"content\" (immediate)\n          pattern: /(^|\\s)HEREDOC:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*\\S+(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        },\n        {\n          // [[ string ]], [==[ string]==]\n          pattern: /(^|\\s)\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        }\n      ],\n      'special-using': {\n        pattern: /(^|\\s)USING:(?:\\s\\S+)*(?=\\s+;(?:\\s|$))/,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          // this is essentially a regex for vocab names, which i don't want to specify\n          // but the USING: gets picked up as a vocab name\n          string: {\n            pattern: /(\\s)[^:\\s]+/,\n            lookbehind: true\n          }\n        }\n      },\n      /* this description of stack effect literal syntax is not complete and not as specific as theoretically possible\ntrying to do better is more work and regex-computation-time than it's worth though.\n- we'd like to have the \"delimiter\" parts of the stack effect [ (, --, and ) ] be a different (less-important or comment-like) colour to the stack effect contents\n- we'd like if nested stack effects were treated as such rather than just appearing flat (with `inside`)\n- we'd like if the following variable name conventions were recognised specifically:\nspecial row variables = ..a b..\ntype and stack effect annotations end with a colon = ( quot: ( a: ( -- ) -- b ) -- x ), ( x: number -- )\nword throws unconditional error = *\nany other word-like variable name = a ? q' etc\nhttps://docs.factorcode.org/content/article-effects.html\nthese are pretty complicated to highlight properly without a real parser, and therefore out of scope\nthe old pattern, which may be later useful, was: (^|\\s)(?:call|execute|eval)?\\((?:\\s+[^\"\\r\\n\\t ]\\S*)*?\\s+--(?:\\s+[^\"\\n\\t ]\\S*)*?\\s+\\)(?=\\s|$)\n*/\n      // current solution is not great\n      'stack-effect-delimiter': [\n        {\n          // opening parenthesis\n          pattern: /(^|\\s)(?:call|execute|eval)?\\((?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // middle --\n          pattern: /(\\s)--(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing parenthesis\n          pattern: /(\\s)\\)(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      combinators: {\n        pattern: null,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'kernel-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'sequences-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'math-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'constructor-word': {\n        // <array> but not <=>\n        pattern: /(^|\\s)<(?!=+>|-+>)\\S+>(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'other-builtin-syntax': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      /*\nfull list of supported word naming conventions: (the convention appears outside of the [brackets])\nset-[x]\nchange-[x]\nwith-[x]\nnew-[x]\n>[string]\n[base]>\n[string]>[number]\n+[symbol]+\n[boolean-word]?\n?[of]\n[slot-reader]>>\n>>[slot-setter]\n[slot-writer]<<\n([implementation-detail])\n[mutater]!\n[variant]*\n[prettyprint].\n$[help-markup]\n<constructors>, SYNTAX:, etc are supported by their own patterns.\n`with` and `new` from `kernel` are their own builtins.\nsee <https://docs.factorcode.org/content/article-conventions.html>\n*/\n      'conventionally-named-word': {\n        pattern:\n          /(^|\\s)(?!\")(?:(?:set|change|with|new)-\\S+|\\$\\S+|>[^>\\s]+|[^:>\\s]+>|[^>\\s]+>[^>\\s]+|\\+[^+\\s]+\\+|[^?\\s]+\\?|\\?[^?\\s]+|[^>\\s]+>>|>>[^>\\s]+|[^<\\s]+<<|\\([^()\\s]+\\)|[^!\\s]+!|[^*\\s]\\S*\\*|[^.\\s]\\S*\\.)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'colon-syntax': {\n        pattern: /(^|\\s)(?:[A-Z0-9\\-]+#?)?:{1,2}\\s+(?:;\\S+|(?!;)\\S+)(?=\\s|$)/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'semicolon-or-setlocal': {\n        pattern: /(\\s)(?:;|:>)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      // do not highlight leading } or trailing X{ at the begin/end of the file as it's invalid syntax\n      'curly-brace-literal-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)[a-z]*\\{(?=\\s)/i,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\}(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      // do not highlight leading ] or trailing [ at the begin/end of the file as it's invalid syntax\n      'quotation-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)\\[(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\](?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      'normal-word': {\n        pattern: /(^|\\s)[^\"\\s]\\S*(?=\\s|$)/,\n        lookbehind: true\n      },\n      /*\nbasic first-class string \"a\"\nwith escaped double-quote \"a\\\"\"\nescaped backslash \"\\\\\"\nand general escapes since Factor has so many \"\\N\"\nsyntax that works in the reference implementation that isn't fully\nsupported because it's an implementation detail:\n\"string 1\"\"string 2\" -> 2 strings (works anyway)\n\"string\"5 -> string, 5\n\"string\"[ ] -> string, quotation\n{ \"a\"} -> array<string>\nthe rest of those examples all properly recognise the string, but not\nthe other object (number, quotation, etc)\nthis is fine for a regex-only implementation.\n*/\n      string: {\n        pattern: /\"(?:\\\\\\S|[^\"\\\\])*\"/,\n        greedy: true,\n        inside: string_inside\n      }\n    }\n    var escape = function (str) {\n      return (str + '').replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, '\\\\$1')\n    }\n    var arrToWordsRegExp = function (arr) {\n      return new RegExp('(^|\\\\s)(?:' + arr.map(escape).join('|') + ')(?=\\\\s|$)')\n    }\n    var builtins = {\n      'kernel-builtin': [\n        'or',\n        '2nipd',\n        '4drop',\n        'tuck',\n        'wrapper',\n        'nip',\n        'wrapper?',\n        'callstack>array',\n        'die',\n        'dupd',\n        'callstack',\n        'callstack?',\n        '3dup',\n        'hashcode',\n        'pick',\n        '4nip',\n        'build',\n        '>boolean',\n        'nipd',\n        'clone',\n        '5nip',\n        'eq?',\n        '?',\n        '=',\n        'swapd',\n        '2over',\n        'clear',\n        '2dup',\n        'get-retainstack',\n        'not',\n        'tuple?',\n        'dup',\n        '3nipd',\n        'call',\n        '-rotd',\n        'object',\n        'drop',\n        'assert=',\n        'assert?',\n        '-rot',\n        'execute',\n        'boa',\n        'get-callstack',\n        'curried?',\n        '3drop',\n        'pickd',\n        'overd',\n        'over',\n        'roll',\n        '3nip',\n        'swap',\n        'and',\n        '2nip',\n        'rotd',\n        'throw',\n        '(clone)',\n        'hashcode*',\n        'spin',\n        'reach',\n        '4dup',\n        'equal?',\n        'get-datastack',\n        'assert',\n        '2drop',\n        '<wrapper>',\n        'boolean?',\n        'identity-hashcode',\n        'identity-tuple?',\n        'null',\n        'composed?',\n        'new',\n        '5drop',\n        'rot',\n        '-roll',\n        'xor',\n        'identity-tuple',\n        'boolean'\n      ],\n      'other-builtin-syntax': [\n        // syntax\n        '=======',\n        'recursive',\n        'flushable',\n        '>>',\n        '<<<<<<',\n        'M\\\\',\n        'B',\n        'PRIVATE>',\n        '\\\\',\n        '======',\n        'final',\n        'inline',\n        'delimiter',\n        'deprecated',\n        '<PRIVATE',\n        '>>>>>>',\n        '<<<<<<<',\n        'parse-complex',\n        'malformed-complex',\n        'read-only',\n        '>>>>>>>',\n        'call-next-method',\n        '<<',\n        'foldable', // literals\n        '$',\n        '$[',\n        '${'\n      ],\n      'sequences-builtin': [\n        'member-eq?',\n        'mismatch',\n        'append',\n        'assert-sequence=',\n        'longer',\n        'repetition',\n        'clone-like',\n        '3sequence',\n        'assert-sequence?',\n        'last-index-from',\n        'reversed',\n        'index-from',\n        'cut*',\n        'pad-tail',\n        'join-as',\n        'remove-eq!',\n        'concat-as',\n        'but-last',\n        'snip',\n        'nths',\n        'nth',\n        'sequence',\n        'longest',\n        'slice?',\n        '<slice>',\n        'remove-nth',\n        'tail-slice',\n        'empty?',\n        'tail*',\n        'member?',\n        'virtual-sequence?',\n        'set-length',\n        'drop-prefix',\n        'iota',\n        'unclip',\n        'bounds-error?',\n        'unclip-last-slice',\n        'non-negative-integer-expected',\n        'non-negative-integer-expected?',\n        'midpoint@',\n        'longer?',\n        '?set-nth',\n        '?first',\n        'rest-slice',\n        'prepend-as',\n        'prepend',\n        'fourth',\n        'sift',\n        'subseq-start',\n        'new-sequence',\n        '?last',\n        'like',\n        'first4',\n        '1sequence',\n        'reverse',\n        'slice',\n        'virtual@',\n        'repetition?',\n        'set-last',\n        'index',\n        '4sequence',\n        'max-length',\n        'set-second',\n        'immutable-sequence',\n        'first2',\n        'first3',\n        'supremum',\n        'unclip-slice',\n        'suffix!',\n        'insert-nth',\n        'tail',\n        '3append',\n        'short',\n        'suffix',\n        'concat',\n        'flip',\n        'immutable?',\n        'reverse!',\n        '2sequence',\n        'sum',\n        'delete-all',\n        'indices',\n        'snip-slice',\n        '<iota>',\n        'check-slice',\n        'sequence?',\n        'head',\n        'append-as',\n        'halves',\n        'sequence=',\n        'collapse-slice',\n        '?second',\n        'slice-error?',\n        'product',\n        'bounds-check?',\n        'bounds-check',\n        'immutable',\n        'virtual-exemplar',\n        'harvest',\n        'remove',\n        'pad-head',\n        'last',\n        'set-fourth',\n        'cartesian-product',\n        'remove-eq',\n        'shorten',\n        'shorter',\n        'reversed?',\n        'shorter?',\n        'shortest',\n        'head-slice',\n        'pop*',\n        'tail-slice*',\n        'but-last-slice',\n        'iota?',\n        'append!',\n        'cut-slice',\n        'new-resizable',\n        'head-slice*',\n        'sequence-hashcode',\n        'pop',\n        'set-nth',\n        '?nth',\n        'second',\n        'join',\n        'immutable-sequence?',\n        '<reversed>',\n        '3append-as',\n        'virtual-sequence',\n        'subseq?',\n        'remove-nth!',\n        'length',\n        'last-index',\n        'lengthen',\n        'assert-sequence',\n        'copy',\n        'move',\n        'third',\n        'first',\n        'tail?',\n        'set-first',\n        'prefix',\n        'bounds-error',\n        '<repetition>',\n        'exchange',\n        'surround',\n        'cut',\n        'min-length',\n        'set-third',\n        'push-all',\n        'head?',\n        'subseq-start-from',\n        'delete-slice',\n        'rest',\n        'sum-lengths',\n        'head*',\n        'infimum',\n        'remove!',\n        'glue',\n        'slice-error',\n        'subseq',\n        'push',\n        'replace-slice',\n        'subseq-as',\n        'unclip-last'\n      ],\n      'math-builtin': [\n        'number=',\n        'next-power-of-2',\n        '?1+',\n        'fp-special?',\n        'imaginary-part',\n        'float>bits',\n        'number?',\n        'fp-infinity?',\n        'bignum?',\n        'fp-snan?',\n        'denominator',\n        'gcd',\n        '*',\n        '+',\n        'fp-bitwise=',\n        '-',\n        'u>=',\n        '/',\n        '>=',\n        'bitand',\n        'power-of-2?',\n        'log2-expects-positive',\n        'neg?',\n        '<',\n        'log2',\n        '>',\n        'integer?',\n        'number',\n        'bits>double',\n        '2/',\n        'zero?',\n        'bits>float',\n        'float?',\n        'shift',\n        'ratio?',\n        'rect>',\n        'even?',\n        'ratio',\n        'fp-sign',\n        'bitnot',\n        '>fixnum',\n        'complex?',\n        '/i',\n        'integer>fixnum',\n        '/f',\n        'sgn',\n        '>bignum',\n        'next-float',\n        'u<',\n        'u>',\n        'mod',\n        'recip',\n        'rational',\n        '>float',\n        '2^',\n        'integer',\n        'fixnum?',\n        'neg',\n        'fixnum',\n        'sq',\n        'bignum',\n        '>rect',\n        'bit?',\n        'fp-qnan?',\n        'simple-gcd',\n        'complex',\n        '<fp-nan>',\n        'real',\n        '>fraction',\n        'double>bits',\n        'bitor',\n        'rem',\n        'fp-nan-payload',\n        'real-part',\n        'log2-expects-positive?',\n        'prev-float',\n        'align',\n        'unordered?',\n        'float',\n        'fp-nan?',\n        'abs',\n        'bitxor',\n        'integer>fixnum-strict',\n        'u<=',\n        'odd?',\n        '<=',\n        '/mod',\n        '>integer',\n        'real?',\n        'rational?',\n        'numerator'\n      ] // that's all for now\n    }\n    Object.keys(builtins).forEach(function (k) {\n      factor[k].pattern = arrToWordsRegExp(builtins[k])\n    })\n    var combinators = [\n      // kernel\n      '2bi',\n      'while',\n      '2tri',\n      'bi*',\n      '4dip',\n      'both?',\n      'same?',\n      'tri@',\n      'curry',\n      'prepose',\n      '3bi',\n      '?if',\n      'tri*',\n      '2keep',\n      '3keep',\n      'curried',\n      '2keepd',\n      'when',\n      '2bi*',\n      '2tri*',\n      '4keep',\n      'bi@',\n      'keepdd',\n      'do',\n      'unless*',\n      'tri-curry',\n      'if*',\n      'loop',\n      'bi-curry*',\n      'when*',\n      '2bi@',\n      '2tri@',\n      'with',\n      '2with',\n      'either?',\n      'bi',\n      'until',\n      '3dip',\n      '3curry',\n      'tri-curry*',\n      'tri-curry@',\n      'bi-curry',\n      'keepd',\n      'compose',\n      '2dip',\n      'if',\n      '3tri',\n      'unless',\n      'tuple',\n      'keep',\n      '2curry',\n      'tri',\n      'most',\n      'while*',\n      'dip',\n      'composed',\n      'bi-curry@', // sequences\n      'find-last-from',\n      'trim-head-slice',\n      'map-as',\n      'each-from',\n      'none?',\n      'trim-tail',\n      'partition',\n      'if-empty',\n      'accumulate*',\n      'reject!',\n      'find-from',\n      'accumulate-as',\n      'collector-for-as',\n      'reject',\n      'map',\n      'map-sum',\n      'accumulate!',\n      '2each-from',\n      'follow',\n      'supremum-by',\n      'map!',\n      'unless-empty',\n      'collector',\n      'padding',\n      'reduce-index',\n      'replicate-as',\n      'infimum-by',\n      'trim-tail-slice',\n      'count',\n      'find-index',\n      'filter',\n      'accumulate*!',\n      'reject-as',\n      'map-integers',\n      'map-find',\n      'reduce',\n      'selector',\n      'interleave',\n      '2map',\n      'filter-as',\n      'binary-reduce',\n      'map-index-as',\n      'find',\n      'produce',\n      'filter!',\n      'replicate',\n      'cartesian-map',\n      'cartesian-each',\n      'find-index-from',\n      'map-find-last',\n      '3map-as',\n      '3map',\n      'find-last',\n      'selector-as',\n      '2map-as',\n      '2map-reduce',\n      'accumulate',\n      'each',\n      'each-index',\n      'accumulate*-as',\n      'when-empty',\n      'all?',\n      'collector-as',\n      'push-either',\n      'new-like',\n      'collector-for',\n      '2selector',\n      'push-if',\n      '2all?',\n      'map-reduce',\n      '3each',\n      'any?',\n      'trim-slice',\n      '2reduce',\n      'change-nth',\n      'produce-as',\n      '2each',\n      'trim',\n      'trim-head',\n      'cartesian-find',\n      'map-index', // math\n      'if-zero',\n      'each-integer',\n      'unless-zero',\n      '(find-integer)',\n      'when-zero',\n      'find-last-integer',\n      '(all-integers?)',\n      'times',\n      '(each-integer)',\n      'find-integer',\n      'all-integers?', // math.combinators\n      'unless-negative',\n      'if-positive',\n      'when-positive',\n      'when-negative',\n      'unless-positive',\n      'if-negative', // combinators\n      'case',\n      '2cleave',\n      'cond>quot',\n      'case>quot',\n      '3cleave',\n      'wrong-values',\n      'to-fixed-point',\n      'alist>quot',\n      'cond',\n      'cleave',\n      'call-effect',\n      'recursive-hashcode',\n      'spread',\n      'deep-spread>quot', // combinators.short-circuit\n      '2||',\n      '0||',\n      'n||',\n      '0&&',\n      '2&&',\n      '3||',\n      '1||',\n      '1&&',\n      'n&&',\n      '3&&', // combinators.smart\n      'smart-unless*',\n      'keep-inputs',\n      'reduce-outputs',\n      'smart-when*',\n      'cleave>array',\n      'smart-with',\n      'smart-apply',\n      'smart-if',\n      'inputs/outputs',\n      'output>sequence-n',\n      'map-outputs',\n      'map-reduce-outputs',\n      'dropping',\n      'output>array',\n      'smart-map-reduce',\n      'smart-2map-reduce',\n      'output>array-n',\n      'nullary',\n      'input<sequence',\n      'append-outputs',\n      'drop-inputs',\n      'inputs',\n      'smart-2reduce',\n      'drop-outputs',\n      'smart-reduce',\n      'preserving',\n      'smart-when',\n      'outputs',\n      'append-outputs-as',\n      'smart-unless',\n      'smart-if*',\n      'sum-outputs',\n      'input<sequence-unsafe',\n      'output>sequence' // tafn\n    ]\n    factor.combinators.pattern = arrToWordsRegExp(combinators)\n    Prism.languages.factor = factor\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = $false\n$false.displayName = '$false'\n$false.aliases = []\nfunction $false(Prism) {\n  ;(function (Prism) {\n    /**\n     * Based on the manual by Wouter van Oortmerssen.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2801#issue-829717504}\n     */\n    Prism.languages['false'] = {\n      comment: {\n        pattern: /\\{[^}]*\\}/\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      'character-code': {\n        pattern: /'(?:[^\\r]|\\r\\n?)/,\n        alias: 'number'\n      },\n      'assembler-code': {\n        pattern: /\\d+`/,\n        alias: 'important'\n      },\n      number: /\\d+/,\n      operator: /[-!#$%&'*+,./:;=>?@\\\\^_`|~ßø]/,\n      punctuation: /\\[|\\]/,\n      variable: /[a-z]/,\n      'non-standard': {\n        pattern: /[()<BDO®]/,\n        alias: 'bold'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = firestoreSecurityRules\nfirestoreSecurityRules.displayName = 'firestoreSecurityRules'\nfirestoreSecurityRules.aliases = []\nfunction firestoreSecurityRules(Prism) {\n  Prism.languages['firestore-security-rules'] = Prism.languages.extend(\n    'clike',\n    {\n      comment: /\\/\\/.*/,\n      keyword:\n        /\\b(?:allow|function|if|match|null|return|rules_version|service)\\b/,\n      operator: /&&|\\|\\||[<>!=]=?|[-+*/%]|\\b(?:in|is)\\b/\n    }\n  )\n  delete Prism.languages['firestore-security-rules']['class-name']\n  Prism.languages.insertBefore('firestore-security-rules', 'keyword', {\n    path: {\n      pattern:\n        /(^|[\\s(),])(?:\\/(?:[\\w\\xA0-\\uFFFF]+|\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)))+/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)/,\n          inside: {\n            operator: /=/,\n            keyword: /\\*\\*/,\n            punctuation: /[.$(){}]/\n          }\n        },\n        punctuation: /\\//\n      }\n    },\n    method: {\n      // to make the pattern shorter, the actual method names are omitted\n      pattern: /(\\ballow\\s+)[a-z]+(?:\\s*,\\s*[a-z]+)*(?=\\s*[:;])/,\n      lookbehind: true,\n      alias: 'builtin',\n      inside: {\n        punctuation: /,/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = flow\nflow.displayName = 'flow'\nflow.aliases = []\nfunction flow(Prism) {\n  ;(function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [\n        {\n          pattern:\n            /\\b(?:[Nn]umber|[Ss]tring|[Bb]oolean|Function|any|mixed|null|void)\\b/,\n          alias: 'tag'\n        }\n      ]\n    })\n    Prism.languages.flow['function-variable'].pattern =\n      /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i\n    delete Prism.languages.flow['parameter']\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    })\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\n    }\n    Prism.languages.flow.keyword.unshift(\n      {\n        pattern: /(^|[^$]\\b)(?:type|opaque|declare|Class)\\b(?!\\$)/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^$]\\B)\\$(?:await|Diff|Exact|Keys|ObjMap|PropertyType|Shape|Record|Supertype|Subtype|Enum)\\b(?!\\$)/,\n        lookbehind: true\n      }\n    )\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = fortran\nfortran.displayName = 'fortran'\nfortran.aliases = []\nfunction fortran(Prism) {\n  Prism.languages.fortran = {\n    'quoted-number': {\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n      alias: 'number'\n    },\n    string: {\n      pattern:\n        /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\n      inside: {\n        comment: {\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n          lookbehind: true\n        }\n      }\n    },\n    comment: {\n      pattern: /!.*/,\n      greedy: true\n    },\n    boolean: /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n    keyword: [\n      // Types\n      /\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i, // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n    ],\n    operator: [\n      /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\n      {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n  }\n}\n","'use strict'\n\nmodule.exports = fsharp\nfsharp.displayName = 'fsharp'\nfsharp.aliases = []\nfunction fsharp(Prism) {\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    string: {\n      pattern:\n        /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n      lookbehind: true,\n      inside: {\n        operator: /->|\\*/,\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n    number: [\n      /\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/,\n      /\\b0b[01]+(?:y|uy)?\\b/,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n      /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/\n    ],\n    operator:\n      /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n  })\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /(^[\\t ]*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'punctuation', {\n    'computation-expression': {\n      pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'string', {\n    annotation: {\n      pattern: /\\[<.+?>\\]/,\n      inside: {\n        punctuation: /^\\[<|>\\]$/,\n        'class-name': {\n          pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n          lookbehind: true\n        },\n        'annotation-content': {\n          pattern: /[\\s\\S]+/,\n          inside: Prism.languages.fsharp\n        }\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ftl\nftl.displayName = 'ftl'\nftl.aliases = []\nfunction ftl(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\n    // FTL expression with 4 levels of nesting supported\n    var FTL_EXPR =\n      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\n        .source\n    for (var i = 0; i < 2; i++) {\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n        return FTL_EXPR\n      })\n    }\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var ftl = {\n      comment: /<#--[\\s\\S]*?-->/,\n      string: [\n        {\n          // raw string\n          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\n              /<expr>/g,\n              function () {\n                return FTL_EXPR\n              }\n            )\n          ),\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: RegExp(\n                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\n                  /<expr>/g,\n                  function () {\n                    return FTL_EXPR\n                  }\n                )\n              ),\n              lookbehind: true,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^\\$\\{|\\}$/,\n                  alias: 'punctuation'\n                },\n                rest: null\n              }\n            }\n          }\n        }\n      ],\n      keyword: /\\b(?:as)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      'builtin-function': {\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      operator:\n        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n      punctuation: /[,;.:()[\\]{}]/\n    }\n    ftl.string[1].inside.interpolation.inside.rest = ftl\n    Prism.languages.ftl = {\n      'ftl-comment': {\n        // the pattern is shortened to be more efficient\n        pattern: /^<#--[\\s\\S]*/,\n        alias: 'comment'\n      },\n      'ftl-directive': {\n        pattern: /^<[\\s\\S]+>$/,\n        inside: {\n          directive: {\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          punctuation: /^<\\/?|\\/?>$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      },\n      'ftl-interpolation': {\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n        inside: {\n          punctuation: /^\\$\\{|\\}$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      // eslint-disable-next-line regexp/no-useless-lazy\n      var pattern = RegExp(\n        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\n          /<expr>/g,\n          function () {\n            return FTL_EXPR\n          }\n        ),\n        'gi'\n      )\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ftl',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = gap\ngap.displayName = 'gap'\ngap.aliases = []\nfunction gap(Prism) {\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n  Prism.languages.gap = {\n    shell: {\n      pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n      greedy: true,\n      inside: {\n        gap: {\n          pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        punctuation: /^gap>/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        continuation: {\n          pattern: /([\\r\\n])>/,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n      }\n    },\n    keyword:\n      /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    continuation: {\n      pattern: /([\\r\\n])>/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n    punctuation: /[()[\\]{},;.:]/\n  }\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap\n}\n","'use strict'\n\nmodule.exports = gcode\ngcode.displayName = 'gcode'\ngcode.aliases = []\nfunction gcode(Prism) {\n  Prism.languages.gcode = {\n    comment: /;.*|\\B\\(.*?\\)\\B/,\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    keyword: /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n    property: /\\b[A-Z]/,\n    checksum: {\n      pattern: /\\*\\d+/,\n      alias: 'punctuation'\n    },\n    // T0:0:0\n    punctuation: /:/\n  }\n}\n","'use strict'\n\nmodule.exports = gdscript\ngdscript.displayName = 'gdscript'\ngdscript.aliases = []\nfunction gdscript(Prism) {\n  Prism.languages.gdscript = {\n    comment: /#.*/,\n    string: {\n      pattern:\n        /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\n      greedy: true\n    },\n    'class-name': {\n      // class_name Foo, extends Bar, class InnerClass\n      // export(int) var baz, export(int, 0) var i\n      // as Node\n      // const FOO: int = 9, var bar: bool = true\n      // func add(reference: Item, amount: int) -> Item:\n      pattern:\n        /(^(?:class_name|class|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    variable: /\\$\\w+/,\n    number: [\n      /\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,\n      /\\b(?:INF|NAN|PI|TAU)\\b/\n    ],\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\n    punctuation: /[.:,;()[\\]{}]/\n  }\n}\n","'use strict'\n\nmodule.exports = gedcom\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    tag: {\n      // Preceded by level and optional pointer\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'string'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = gherkin\ngherkin.displayName = 'gherkin'\ngherkin.aliases = []\nfunction gherkin(Prism) {\n  ;(function (Prism) {\n    var tableRow = /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|(?:(?!\\|).)*/.source\n    Prism.languages.gherkin = {\n      pystring: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        alias: 'string'\n      },\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[ \\t]*)@\\S*/m,\n        lookbehind: true\n      },\n      feature: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\\r\\n]+(?:\\r?\\n|\\r|$))*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]+/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      scenario: {\n        pattern:\n          /(^[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|ghantoH|Grundlage|Hannergrond|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|Lýsing Atburðarásar|Lýsing Dæma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/m,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]*/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      'table-body': {\n        // Look-behind is used to skip the table head, which has the same format as any table row\n        pattern: RegExp('(' + tableRow + ')(?:' + tableRow + ')+'),\n        lookbehind: true,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          },\n          td: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'string'\n          },\n          punctuation: /\\|/\n        }\n      },\n      'table-head': {\n        pattern: RegExp(tableRow),\n        inside: {\n          th: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'variable'\n          },\n          punctuation: /\\|/\n        }\n      },\n      atrule: {\n        pattern:\n          /(^[ \\t]+)(?:'ach|'a|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cando|Cand|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|Entonces|En|Epi|E|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kadar|Kada|Kad|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|ugeholl|Und|Un|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t])/m,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          }\n        }\n      },\n      outline: {\n        pattern: /<[^>]+>/,\n        alias: 'variable'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = git\ngit.displayName = 'git'\ngit.aliases = []\nfunction git(Prism) {\n  Prism.languages.git = {\n    /*\n     * A simple one line comment like in a git status command\n     * For instance:\n     * $ git status\n     * # On branch infinite-scroll\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n     * # and have 1 and 2 different commits each, respectively.\n     * nothing to commit (working directory clean)\n     */\n    comment: /^#.*/m,\n    /*\n     * Regexp to match the changed lines in a git diff output. Check the example below.\n     */\n    deleted: /^[-–].*/m,\n    inserted: /^\\+.*/m,\n    /*\n     * a string (double and simple quote)\n     */\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/m,\n    /*\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n     * For instance:\n     * $ git add file.txt\n     */\n    command: {\n      pattern: /^.*\\$ git .*$/m,\n      inside: {\n        /*\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\n         * For instance:\n         * $ git diff --cached\n         * $ git log -p\n         */\n        parameter: /\\s--?\\w+/m\n      }\n    },\n    /*\n     * Coordinates displayed in a git diff command\n     * For instance:\n     * $ git diff\n     * diff --git file.txt file.txt\n     * index 6214953..1d54a52 100644\n     * --- file.txt\n     * +++ file.txt\n     * @@ -1 +1,2 @@\n     * -Here's my tetx file\n     * +Here's my text file\n     * +And this is the second line\n     */\n    coord: /^@@.*@@$/m,\n    /*\n     * Match a \"commit [SHA1]\" line in a git log output.\n     * For instance:\n     * $ git log\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n     * Author: lgiraudel\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\n     *\n     *     Add of a new line\n     */\n    'commit-sha1': /^commit \\w{40}$/m\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = glsl\nglsl.displayName = 'glsl'\nglsl.aliases = []\nfunction glsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.glsl = Prism.languages.extend('c', {\n    keyword:\n      /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = gml\ngml.displayName = 'gml'\ngml.aliases = []\nfunction gml(Prism) {\n  Prism.languages.gamemakerlanguage = Prism.languages.gml =\n    Prism.languages.extend('clike', {\n      keyword:\n        /\\b(?:if|else|switch|case|default|break|for|repeat|while|do|until|continue|exit|return|globalvar|var|enum)\\b/,\n      number:\n        /(?:\\b0x[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]{0,4}/i,\n      operator:\n        /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at|xor)\\b/,\n      constant:\n        /\\b(?:self|other|all|noone|global|local|undefined|pointer_(?:invalid|null)|action_(?:stop|restart|continue|reverse)|pi|GM_build_date|GM_version|timezone_(?:local|utc)|gamespeed_(?:fps|microseconds)|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|pre|post)|keypress|keyrelease|trigger|(?:left|right|middle|no)_button|(?:left|right|middle)_press|(?:left|right|middle)_release|mouse_(?:enter|leave|wheel_up|wheel_down)|global_(?:left|right|middle)_button|global_(?:left|right|middle)_press|global_(?:left|right|middle)_release|joystick(?:1|2)_(?:left|right|up|down|button1|button2|button3|button4|button5|button6|button7|button8)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|step_(?:normal|begin|end)|gui|gui_begin|gui_end)|vk_(?:nokey|anykey|enter|return|shift|control|alt|escape|space|backspace|tab|pause|printscreen|left|right|up|down|home|end|delete|insert|pageup|pagedown|f\\d|numpad\\d|divide|multiply|subtract|add|decimal|lshift|lcontrol|lalt|rshift|rcontrol|ralt)|mb_(?:any|none|left|right|middle)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|purple|red|silver|teal|white|yellow|orange)|fa_(?:left|center|right|top|middle|bottom|readonly|hidden|sysfile|volumeid|directory|archive)|pr_(?:pointlist|linelist|linestrip|trianglelist|trianglestrip|trianglefan)|bm_(?:complex|normal|add|max|subtract|zero|one|src_colour|inv_src_colour|src_color|inv_src_color|src_alpha|inv_src_alpha|dest_alpha|inv_dest_alpha|dest_colour|inv_dest_colour|dest_color|inv_dest_color|src_alpha_sat)|audio_(?:falloff_(?:none|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|exponent_distance|exponent_distance_clamped)|old_system|new_system|mono|stereo|3d)|cr_(?:default|none|arrow|cross|beam|size_nesw|size_ns|size_nwse|size_we|uparrow|hourglass|drag|appstart|handpoint|size_all)|asset_(?:object|unknown|sprite|sound|room|path|script|font|timeline|tiles|shader)|ds_type_(?:map|list|stack|queue|grid|priority)|ef_(?:explosion|ring|ellipse|firework|smoke|smokeup|star|spark|flare|cloud|rain|snow)|pt_shape_(?:pixel|disk|square|line|star|circle|ring|sphere|flare|spark|explosion|cloud|smoke|snow)|ps_(?:distr|shape)_(?:linear|gaussian|invgaussian|rectangle|ellipse|diamond|line)|ty_(?:real|string)|dll_(?:cdel|cdecl|stdcall)|matrix_(?:view|projection|world)|os_(?:win32|windows|macosx|ios|android|linux|unknown|winphone|win8native|psvita|ps4|xboxone|ps3|uwp)|browser_(?:not_a_browser|unknown|ie|firefox|chrome|safari|safari_mobile|opera|tizen|windows_store|ie_mobile)|device_ios_(?:unknown|iphone|iphone_retina|ipad|ipad_retina|iphone5|iphone6|iphone6plus)|device_(?:emulator|tablet)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|of_challenge_(?:win|lose|tie)|leaderboard_type_(?:number|time_mins_secs)|cmpfunc_(?:never|less|equal|lessequal|greater|notequal|greaterequal|always)|cull_(?:noculling|clockwise|counterclockwise)|lighttype_(?:dir|point)|iap_(?:ev_storeload|ev_product|ev_purchase|ev_consume|ev_restore|storeload_ok|storeload_failed|status_uninitialised|status_unavailable|status_loading|status_available|status_processing|status_restoring|failed|unavailable|available|purchased|canceled|refunded)|fb_login_(?:default|fallback_to_webview|no_fallback_to_webview|forcing_webview|use_system_account|forcing_safari)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|reaction_force_x|reaction_force_y|reaction_torque|motor_speed|angle|motor_torque|max_motor_torque|translation|speed|motor_force|max_motor_force|length_1|length_2|damping_ratio|frequency|lower_angle_limit|upper_angle_limit|angle_limits|max_length|max_torque|max_force)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_particle_flag_(?:water|zombie|wall|spring|elastic|viscous|powder|tensile|colourmixing|colormixing)|phy_particle_group_flag_(?:solid|rigid)|phy_particle_data_flag_(?:typeflags|position|velocity|colour|color|category)|achievement_(?:our_info|friends_info|leaderboard_info|info|filter_(?:all_players|friends_only|favorites_only)|type_challenge|type_score_challenge|pic_loaded|show_(?:ui|profile|leaderboard|achievement|bank|friend_picker|purchase_prompt))|network_(?:socket_(?:tcp|udp|bluetooth)|type_(?:connect|disconnect|data|non_blocking_connect)|config_(?:connect_timeout|use_non_blocking_socket|enable_reliable_udp|disable_reliable_udp))|buffer_(?:fixed|grow|wrap|fast|vbuffer|network|u8|s8|u16|s16|u32|s32|u64|f16|f32|f64|bool|text|string|seek_start|seek_relative|seek_end|generalerror|outofspace|outofbounds|invalidtype)|gp_(?:face\\d|shoulderl|shoulderr|shoulderlb|shoulderrb|select|start|stickl|stickr|padu|padd|padl|padr|axislh|axislv|axisrh|axisrv)|ov_(?:friends|community|players|settings|gamegroup|achievements)|lb_sort_(?:none|ascending|descending)|lb_disp_(?:none|numeric|time_sec|time_ms)|ugc_(?:result_success|filetype_(?:community|microtrans)|visibility_(?:public|friends_only|private)|query_RankedBy(?:Vote|PublicationDate|Trend|NumTimesReported|TotalVotesAsc|VotesUp|TextSearch)|query_(?:AcceptedForGameRankedByAcceptanceDate|FavoritedByFriendsRankedByPublicationDate|CreatedByFriendsRankedByPublicationDate|NotYetRated)|sortorder_CreationOrder(?:Desc|Asc)|sortorder_(?:TitleAsc|LastUpdatedDesc|SubscriptionDateDesc|VoteScoreDesc|ForModeration)|list_(?:Published|VotedOn|VotedUp|VotedDown|WillVoteLater|Favorited|Subscribed|UsedOrPlayed|Followed)|match_(?:Items|Items_Mtx|Items_ReadyToUse|Collections|Artwork|Videos|Screenshots|AllGuides|WebGuides|IntegratedGuides|UsableInGame|ControllerBindings))|vertex_usage_(?:position|colour|color|normal|texcoord|textcoord|blendweight|blendindices|psize|tangent|binormal|fog|depth|sample)|vertex_type_(?:float\\d|colour|color|ubyte4)|layerelementtype_(?:undefined|background|instance|oldtilemap|sprite|tilemap|particlesystem|tile)|tile_(?:rotate|flip|mirror|index_mask)|input_type|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|(?:obj|scr|spr|rm)\\w+)\\b/,\n      variable:\n        /\\b(?:x|y|(?:x|y)(?:previous|start)|(?:h|v)speed|direction|speed|friction|gravity|gravity_direction|path_(?:index|position|positionprevious|speed|scale|orientation|endaction)|object_index|id|solid|persistent|mask_index|instance_(?:count|id)|alarm|timeline_(?:index|position|speed|running|loop)|visible|sprite_(?:index|width|height|xoffset|yoffset)|image_(?:number|index|speed|depth|xscale|yscale|angle|alpha|blend)|bbox_(?:left|right|top|bottom)|layer|phy_(?:rotation|(?:position|linear_velocity|speed|com|collision|col_normal)_(?:x|y)|angular_(?:velocity|damping)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|working_directory|webgl_enabled|view_(?:(?:y|x|w|h)view|(?:y|x|w|h)port|(?:v|h)(?:speed|border)|visible|surface_id|object|enabled|current|angle)|undefined|transition_(?:steps|kind|color)|temp_directory|show_(?:score|lives|health)|secure_mode|score|room_(?:width|speed|persistent|last|height|first|caption)|room|pointer_(?:null|invalid)|os_(?:version|type|device|browser)|mouse_(?:y|x|lastbutton|button)|lives|keyboard_(?:string|lastkey|lastchar|key)|iap_data|health|gamemaker_(?:version|registered|pro)|game_(?:save|project|display)_(?:id|name)|fps_real|fps|event_(?:type|object|number|action)|error_(?:occurred|last)|display_aa|delta_time|debug_mode|cursor_sprite|current_(?:year|weekday|time|second|month|minute|hour|day)|caption_(?:score|lives|health)|browser_(?:width|height)|background_(?:yscale|y|xscale|x|width|vtiled|vspeed|visible|showcolour|showcolor|index|htiled|hspeed|height|foreground|colour|color|blend|alpha)|async_load|application_surface|argument(?:_relitive|_count|\\d)|argument|global|local|self|other)\\b/\n    })\n}\n","'use strict'\n\nmodule.exports = gn\ngn.displayName = 'gn'\ngn.aliases = ['gni']\nfunction gn(Prism) {\n  // https://gn.googlesource.com/gn/+/refs/heads/main/docs/reference.md#grammar\n  Prism.languages.gn = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'string-literal': {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[\\s\\S]*?\\}|[a-zA-Z_]\\w*|0x[a-fA-F0-9]{2})/,\n          lookbehind: true,\n          inside: {\n            number: /^\\$0x[\\s\\S]{2}$/,\n            variable: /^\\$\\w+$/,\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    keyword: /\\b(?:else|if)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    'builtin-function': {\n      // a few functions get special highlighting to improve readability\n      pattern:\n        /\\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\\s*\\()/i,\n      alias: 'keyword'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant:\n      /\\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_out_dir|target_os)\\b/,\n    number: /-?\\b\\d+\\b/,\n    operator: /[-+!=<>]=?|&&|\\|\\|/,\n    punctuation: /[(){}[\\],.]/\n  }\n  Prism.languages.gn['string-literal'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.gn\n  Prism.languages.gni = Prism.languages.gn\n}\n","'use strict'\n\nmodule.exports = go\ngo.displayName = 'go'\ngo.aliases = []\nfunction go(Prism) {\n  Prism.languages.go = Prism.languages.extend('clike', {\n    string: {\n      pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n    boolean: /\\b(?:_|iota|nil|true|false)\\b/,\n    number: /(?:\\b0x[a-f\\d]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[-+]?\\d+)?)i?/i,\n    operator:\n      /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n    builtin:\n      /\\b(?:bool|byte|complex(?:64|128)|error|float(?:32|64)|rune|string|u?int(?:8|16|32|64)?|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(?:ln)?|real|recover)\\b/\n  })\n  delete Prism.languages.go['class-name']\n}\n","'use strict'\n\nmodule.exports = graphql\ngraphql.displayName = 'graphql'\ngraphql.aliases = []\nfunction graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    description: {\n      pattern:\n        /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'language-markdown': {\n          pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: Prism.languages.markdown\n        }\n      }\n    },\n    string: {\n      pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:true|false)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'atom-input': {\n      pattern: /[A-Z]\\w*Input(?=!?.*$)/m,\n      alias: 'class-name'\n    },\n    scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-mutation': {\n      pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-query': {\n      pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword:\n      /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n    operator: /[!=|&]|\\.{3}/,\n    'property-query': /\\w+(?=\\s*\\()/,\n    object: /\\w+(?=\\s*\\{)/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    property: /\\w+/\n  }\n  Prism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n    if (env.language !== 'graphql') {\n      return\n    }\n    /**\n     * get the graphql token stream that we want to customize\n     *\n     * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n     * @type {Token[]}\n     */\n    var validTokens = env.tokens.filter(function (token) {\n      return (\n        typeof token !== 'string' &&\n        token.type !== 'comment' &&\n        token.type !== 'scalar'\n      )\n    })\n    var currentIndex = 0\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {number} offset\n     * @returns {Token | undefined}\n     */\n    function getToken(offset) {\n      return validTokens[currentIndex + offset]\n    }\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {readonly string[]} types\n     * @param {number} [offset=0]\n     * @returns {boolean}\n     */\n    function isTokenType(types, offset) {\n      offset = offset || 0\n      for (var i = 0; i < types.length; i++) {\n        var token = getToken(i + offset)\n        if (!token || token.type !== types[i]) {\n          return false\n        }\n      }\n      return true\n    }\n    /**\n     * Returns the index of the closing bracket to an opening bracket.\n     *\n     * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n     *\n     * If no closing bracket could be found, `-1` will be returned.\n     *\n     * @param {RegExp} open\n     * @param {RegExp} close\n     * @returns {number}\n     */\n    function findClosingBracket(open, close) {\n      var stackHeight = 1\n      for (var i = currentIndex; i < validTokens.length; i++) {\n        var token = validTokens[i]\n        var content = token.content\n        if (token.type === 'punctuation' && typeof content === 'string') {\n          if (open.test(content)) {\n            stackHeight++\n          } else if (close.test(content)) {\n            stackHeight--\n            if (stackHeight === 0) {\n              return i\n            }\n          }\n        }\n      }\n      return -1\n    }\n    /**\n     * Adds an alias to the given token.\n     *\n     * @param {Token} token\n     * @param {string} alias\n     * @returns {void}\n     */\n    function addAlias(token, alias) {\n      var aliases = token.alias\n      if (!aliases) {\n        token.alias = aliases = []\n      } else if (!Array.isArray(aliases)) {\n        token.alias = aliases = [aliases]\n      }\n      aliases.push(alias)\n    }\n    for (; currentIndex < validTokens.length; ) {\n      var startToken = validTokens[currentIndex++] // add special aliases for mutation tokens\n      if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n        // any array of the names of all input variables (if any)\n        var inputVariables = []\n        if (\n          isTokenType(['definition-mutation', 'punctuation']) &&\n          getToken(1).content === '('\n        ) {\n          // definition\n          currentIndex += 2 // skip 'definition-mutation' and 'punctuation'\n          var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/)\n          if (definitionEnd === -1) {\n            continue\n          } // find all input variables\n          for (; currentIndex < definitionEnd; currentIndex++) {\n            var t = getToken(0)\n            if (t.type === 'variable') {\n              addAlias(t, 'variable-input')\n              inputVariables.push(t.content)\n            }\n          }\n          currentIndex = definitionEnd + 1\n        }\n        if (\n          isTokenType(['punctuation', 'property-query']) &&\n          getToken(0).content === '{'\n        ) {\n          currentIndex++ // skip opening bracket\n          addAlias(getToken(0), 'property-mutation')\n          if (inputVariables.length > 0) {\n            var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/)\n            if (mutationEnd === -1) {\n              continue\n            } // give references to input variables a special alias\n            for (var i = currentIndex; i < mutationEnd; i++) {\n              var varToken = validTokens[i]\n              if (\n                varToken.type === 'variable' &&\n                inputVariables.indexOf(varToken.content) >= 0\n              ) {\n                addAlias(varToken, 'variable-input')\n              }\n            }\n          }\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = groovy\ngroovy.displayName = 'groovy'\ngroovy.aliases = []\nfunction groovy(Prism) {\n  Prism.languages.groovy = Prism.languages.extend('clike', {\n    string: [\n      {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern:\n          /(\"\"\"|''')(?:[^\\\\]|\\\\[\\s\\S])*?\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true\n      },\n      {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern: /([\"'/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n    number:\n      /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n    operator: {\n      pattern:\n        /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n      lookbehind: true\n    },\n    punctuation: /\\.+|[{}[\\];(),:$]/\n  })\n  Prism.languages.insertBefore('groovy', 'string', {\n    shebang: {\n      pattern: /#!.+/,\n      alias: 'comment'\n    }\n  })\n  Prism.languages.insertBefore('groovy', 'punctuation', {\n    'spock-block': /\\b(?:setup|given|when|then|and|cleanup|expect|where):/\n  })\n  Prism.languages.insertBefore('groovy', 'function', {\n    annotation: {\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true,\n      alias: 'punctuation'\n    }\n  }) // Handle string interpolation\n  Prism.hooks.add('wrap', function (env) {\n    if (env.language === 'groovy' && env.type === 'string') {\n      var delimiter = env.content.value[0]\n      if (delimiter != \"'\") {\n        var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        if (delimiter === '$') {\n          pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        } // To prevent double HTML-encoding we have to decode env.content first\n        env.content.value = env.content.value\n          .replace(/&lt;/g, '<')\n          .replace(/&amp;/g, '&')\n        env.content = Prism.highlight(env.content.value, {\n          expression: {\n            pattern: pattern,\n            lookbehind: true,\n            inside: Prism.languages.groovy\n          }\n        })\n        env.classes.push(delimiter === '/' ? 'regex' : 'gstring')\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = haml\nhaml.displayName = 'haml'\nhaml.aliases = []\nfunction haml(Prism) {\n  Prism.register(refractorRuby)\n  /* TODO\nHandle multiline code after tag\n%foo= some |\nmultiline |\ncode |\n*/\n  ;(function (Prism) {\n    Prism.languages.haml = {\n      // Multiline stuff should appear before the rest\n      'multiline-comment': {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      'multiline-code': [\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*\\|[\\t ]*)*/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        }\n      ],\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          }\n        }\n      },\n      markup: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n        lookbehind: true\n      },\n      tag: {\n        // Allows for one nested group of braces\n        pattern:\n          /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^{}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              // Lookbehind tries to prevent interpolations from breaking it all\n              // Allows for one nested group of braces\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^{}])+\\}/,\n              lookbehind: true,\n              inside: Prism.languages.ruby\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                  lookbehind: true\n                },\n                'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[=(),]/\n              }\n            },\n            {\n              pattern: /\\[[^\\]]+\\]/,\n              inside: Prism.languages.ruby\n            }\n          ],\n          punctuation: /[<>]/\n        }\n      },\n      code: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n        lookbehind: true,\n        inside: Prism.languages.ruby\n      },\n      // Interpolations in plain text\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.ruby\n        }\n      },\n      punctuation: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n        lookbehind: true\n      }\n    }\n    var filter_pattern =\n      '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ].+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+' // Non exhaustive list of available filters and associated languages\n    var filters = [\n      'css',\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'erb',\n      'javascript',\n      'less',\n      'markdown',\n      'ruby',\n      'scss',\n      'textile'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('{{filter_name}}', function () {\n              return filter.filter\n            })\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            },\n            rest: Prism.languages[filter.language]\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('haml', 'filter', all_filters)\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = handlebars\nhandlebars.displayName = 'handlebars'\nhandlebars.aliases = ['hbs']\nfunction handlebars(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.handlebars = {\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n      delimiter: {\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      boolean: /\\b(?:true|false)\\b/,\n      block: {\n        pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/i,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      brackets: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          punctuation: /\\[|\\]/,\n          variable: /[\\s\\S]+/\n        }\n      },\n      punctuation: /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n      variable: /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'handlebars',\n        handlebarsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(\n        env,\n        'handlebars'\n      )\n    })\n    Prism.languages.hbs = Prism.languages.handlebars\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = haskell\nhaskell.displayName = 'haskell'\nhaskell.aliases = ['hs']\nfunction haskell(Prism) {\n  Prism.languages.haskell = {\n    comment: {\n      pattern:\n        /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|$)|\\{-[\\s\\S]*?-\\})/m,\n      lookbehind: true\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\(?:\\S|\\s+\\\\))*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:import|qualified|as|hiding)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n    // decimal integers and floating point numbers | octal integers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n    operator: [\n      {\n        // infix operator\n        pattern: /`(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n        greedy: true\n      },\n      {\n        // function composition\n        pattern: /(\\s)\\.(?=\\s)/,\n        lookbehind: true\n      }, // Most of this is needed because of the meaning of a single '.'.\n      // If it stands alone freely, it is the function composition.\n      // It may also be a separator between a module name and an identifier => no\n      // operator. If it comes together with other special characters it is an\n      // operator too.\n      //\n      // This regex means: /[-!#$%*+=?&@|~.:<>^\\\\\\/]+/ without /\\./.\n      /[-!#$%*+=?&@|~:<>^\\\\\\/][-!#$%*+=?&@|~.:<>^\\\\\\/]*|\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+/\n    ],\n    // In Haskell, nearly everything is a variable, do not highlight these.\n    hvariable: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    constant: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.hs = Prism.languages.haskell\n}\n","'use strict'\n\nmodule.exports = haxe\nhaxe.displayName = 'haxe'\nhaxe.aliases = []\nfunction haxe(Prism) {\n  Prism.languages.haxe = Prism.languages.extend('clike', {\n    // Strings can be multi-line\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,\n          lookbehind: true,\n          inside: {\n            interpolation: {\n              pattern: /^\\$\\w*/,\n              alias: 'variable'\n            } // See rest below\n          }\n        }\n      }\n    },\n    // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n    keyword:\n      /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,\n    operator: /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/\n  })\n  Prism.languages.insertBefore('haxe', 'class-name', {\n    regex: {\n      pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'keyword', {\n    preprocessor: {\n      pattern: /#\\w+/,\n      alias: 'builtin'\n    },\n    metadata: {\n      pattern: /@:?\\w+/,\n      alias: 'symbol'\n    },\n    reification: {\n      pattern: /\\$(?:\\w+|(?=\\{))/,\n      alias: 'variable'\n    }\n  })\n  Prism.languages.haxe['string'].inside['interpolation'].inside.rest =\n    Prism.languages.haxe\n  delete Prism.languages.haxe['class-name']\n}\n","'use strict'\n\nmodule.exports = hcl\nhcl.displayName = 'hcl'\nhcl.aliases = []\nfunction hcl(Prism) {\n  Prism.languages.hcl = {\n    comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    heredoc: {\n      pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n      greedy: true,\n      alias: 'string'\n    },\n    keyword: [\n      {\n        pattern:\n          /(?:resource|data)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\n        inside: {\n          type: {\n            pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      {\n        pattern:\n          /(?:provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\n        inside: {\n          type: {\n            pattern:\n              /(provider|provisioner|variable|output|module|backend)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      /[\\w-]+(?=\\s+\\{)/\n    ],\n    property: [/[-\\w\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n    string: {\n      pattern:\n        /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n          lookbehind: true,\n          inside: {\n            type: {\n              pattern:\n                /(\\b(?:terraform|var|self|count|module|path|data|local)\\b\\.)[\\w\\*]+/i,\n              lookbehind: true,\n              alias: 'variable'\n            },\n            keyword: /\\b(?:terraform|var|self|count|module|path|data|local)\\b/i,\n            function: /\\w+(?=\\()/,\n            string: {\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              greedy: true\n            },\n            number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n            punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n          }\n        }\n      }\n    },\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    punctuation: /[=\\[\\]{}]/\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = hlsl\nhlsl.displayName = 'hlsl'\nhlsl.aliases = []\nfunction hlsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.hlsl = Prism.languages.extend('c', {\n    // Regarding keywords and class names:\n    // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\n    'class-name': [\n      Prism.languages.c['class-name'],\n      /\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RasterizerState|RenderTargetView|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\n    ],\n    keyword: [\n      // HLSL keyword\n      /\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/, // scalar, vector, and matrix types\n      /\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\n    ],\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\n    boolean: /\\b(?:false|true)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = hoon\nhoon.displayName = 'hoon'\nhoon.aliases = []\nfunction hoon(Prism) {\n  Prism.languages.hoon = {\n    constant: /%(?:\\.[ny]|[\\w-]+)/,\n    comment: {\n      pattern: /::.*/,\n      greedy: true\n    },\n    'class-name': [\n      {\n        pattern: /@(?:[A-Za-z0-9-]*[A-Za-z0-9])?/\n      },\n      /\\*/\n    ],\n    function: /(?:\\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword:\n      /\\.[\\^\\+\\*=\\?]|![><:\\.=\\?!]|=[>|:,\\.\\-\\^<+;/~\\*\\?]|\\?[>|:\\.\\-\\^<\\+&~=@!]|\\|[\\$_%:\\.\\-\\^~\\*=@\\?]|\\+[|\\$\\+\\*]|:[_\\-\\^\\+~\\*]|%[_:\\.\\-\\^\\+~\\*=]|\\^[|:\\.\\-\\+&~\\*=\\?]|\\$[|_%:<>\\-\\^&~@=\\?]|;[:<\\+;\\/~\\*=]|~[>|\\$_%<\\+\\/&=\\?!]|--|==/\n  }\n}\n","'use strict'\n\nmodule.exports = hpkp\nhpkp.displayName = 'hpkp'\nhpkp.aliases = []\nfunction hpkp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */\n  Prism.languages.hpkp = {\n    directive: {\n      pattern:\n        /\\b(?:(?:includeSubDomains|preload|strict)(?: |;)|pin-sha256=\"[a-zA-Z\\d+=/]+\"|(?:max-age|report-uri)=|report-to )/,\n      alias: 'keyword'\n    },\n    safe: {\n      pattern: /\\b\\d{7,}\\b/,\n      alias: 'selector'\n    },\n    unsafe: {\n      pattern: /\\b\\d{1,6}\\b/,\n      alias: 'function'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = hsts\nhsts.displayName = 'hsts'\nhsts.aliases = []\nfunction hsts(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */\n  Prism.languages.hsts = {\n    directive: {\n      pattern: /\\b(?:max-age=|includeSubDomains|preload)/,\n      alias: 'keyword'\n    },\n    safe: {\n      pattern: /\\b\\d{8,}\\b/,\n      alias: 'selector'\n    },\n    unsafe: {\n      pattern: /\\b\\d{1,7}\\b/,\n      alias: 'function'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = http\nhttp.displayName = 'http'\nhttp.aliases = []\nfunction http(Prism) {\n  ;(function (Prism) {\n    Prism.languages.http = {\n      'request-line': {\n        pattern:\n          /^(?:GET|HEAD|POST|PUT|DELETE|CONNECT|OPTIONS|TRACE|PATCH|PRI|SEARCH)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[0-9.]+/m,\n        inside: {\n          // HTTP Method\n          method: {\n            pattern: /^[A-Z]+\\b/,\n            alias: 'property'\n          },\n          // Request Target e.g. http://example.com, /path/to/file\n          'request-target': {\n            pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n            lookbehind: true,\n            alias: 'url',\n            inside: Prism.languages.uri\n          },\n          // HTTP Version\n          'http-version': {\n            pattern: /^(\\s)HTTP\\/[0-9.]+/,\n            lookbehind: true,\n            alias: 'property'\n          }\n        }\n      },\n      'response-status': {\n        pattern: /^HTTP\\/[0-9.]+ \\d+ .+/m,\n        inside: {\n          // HTTP Version\n          'http-version': {\n            pattern: /^HTTP\\/[0-9.]+/,\n            alias: 'property'\n          },\n          // Status Code\n          'status-code': {\n            pattern: /^(\\s)\\d+(?=\\s)/,\n            lookbehind: true,\n            alias: 'number'\n          },\n          // Reason Phrase\n          'reason-phrase': {\n            pattern: /^(\\s).+/,\n            lookbehind: true,\n            alias: 'string'\n          }\n        }\n      },\n      // HTTP header name\n      'header-name': {\n        pattern: /^[\\w-]+:(?=.)/m,\n        alias: 'keyword'\n      }\n    } // Create a mapping of Content-Type headers to language definitions\n    var langs = Prism.languages\n    var httpLanguages = {\n      'application/javascript': langs.javascript,\n      'application/json': langs.json || langs.javascript,\n      'application/xml': langs.xml,\n      'text/xml': langs.xml,\n      'text/html': langs.html,\n      'text/css': langs.css\n    } // Declare which types can also be suffixes\n    var suffixTypes = {\n      'application/json': true,\n      'application/xml': true\n    }\n    /**\n     * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n     *\n     * @param {string} contentType\n     * @returns {string}\n     */\n    function getSuffixPattern(contentType) {\n      var suffix = contentType.replace(/^[a-z]+\\//, '')\n      var suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])'\n      return '(?:' + contentType + '|' + suffixPattern + ')'\n    } // Insert each content type parser that has its associated language\n    // currently loaded.\n    var options\n    for (var contentType in httpLanguages) {\n      if (httpLanguages[contentType]) {\n        options = options || {}\n        var pattern = suffixTypes[contentType]\n          ? getSuffixPattern(contentType)\n          : contentType\n        options[contentType.replace(/\\//g, '-')] = {\n          pattern: RegExp(\n            '(content-type:\\\\s*' +\n              pattern +\n              '(?:(?:\\\\r\\\\n?|\\\\n).+)*)(?:\\\\r?\\\\n|\\\\r){2}[\\\\s\\\\S]*',\n            'i'\n          ),\n          lookbehind: true,\n          inside: httpLanguages[contentType]\n        }\n      }\n    }\n    if (options) {\n      Prism.languages.insertBefore('http', 'header-name', options)\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ichigojam\nichigojam.displayName = 'ichigojam'\nichigojam.aliases = []\nfunction ichigojam(Prism) {\n  // according to the offical reference (EN)\n  // https://ichigojam.net/IchigoJam-en.html\n  Prism.languages.ichigojam = {\n    comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/i,\n      greedy: true\n    },\n    number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GSB|GOTO|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|RIGHT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n    label: /(?:\\B@\\S+)/i,\n    operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n    punctuation: /[\\[,;:()\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = icon\nicon.displayName = 'icon'\nicon.aliases = []\nfunction icon(Prism) {\n  Prism.languages.icon = {\n    comment: /#.*/,\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n    'builtin-keyword': {\n      pattern:\n        /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\$\\w+/,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n    operator:\n      /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n    punctuation: /[\\[\\](){},;]/\n  }\n}\n","'use strict'\n\nmodule.exports = icuMessageFormat\nicuMessageFormat.displayName = 'icuMessageFormat'\nicuMessageFormat.aliases = []\nfunction icuMessageFormat(Prism) {\n  // https://unicode-org.github.io/icu/userguide/format_parse/messages/\n  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @param {number} level\n     * @returns {string}\n     */\n    function nested(source, level) {\n      if (level <= 0) {\n        return /[]/.source\n      } else {\n        return source.replace(/<SELF>/g, function () {\n          return nested(source, level - 1)\n        })\n      }\n    }\n    var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/\n    var escape = {\n      pattern: /''/,\n      greedy: true,\n      alias: 'operator'\n    }\n    var string = {\n      pattern: stringPattern,\n      greedy: true,\n      inside: {\n        escape: escape\n      }\n    }\n    var argumentSource = nested(\n      /\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(\n        /<STR>/g,\n        function () {\n          return stringPattern.source\n        }\n      ),\n      8\n    )\n    var nestedMessage = {\n      pattern: RegExp(argumentSource),\n      inside: {\n        message: {\n          pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        'message-delimiter': {\n          pattern: /./,\n          alias: 'punctuation'\n        }\n      }\n    }\n    Prism.languages['icu-message-format'] = {\n      argument: {\n        pattern: RegExp(argumentSource),\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            inside: {\n              'argument-name': {\n                pattern: /^(\\s*)[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'choice-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\n                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  punctuation: /\\|/,\n                  range: {\n                    pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\n                    lookbehind: true,\n                    inside: {\n                      operator: /[<#\\u2264]/,\n                      number: /\\S+/\n                    }\n                  },\n                  rest: null // see below\n                }\n              },\n              'plural-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern:\n                  /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  offset: /^offset:\\s*\\d+/,\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /=\\d+|[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^(?:zero|one|two|few|many|other)$/\n                    }\n                  }\n                }\n              },\n              'select-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^other$/\n                    }\n                  }\n                }\n              },\n              keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\n              'arg-type': {\n                pattern: /\\b(?:number|date|time|spellout|ordinal|duration)\\b/,\n                alias: 'keyword'\n              },\n              'arg-skeleton': {\n                pattern: /(,\\s*)::[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'arg-style': {\n                pattern:\n                  /(,\\s*)(?:short|medium|long|full|integer|currency|percent)(?=\\s*$)/,\n                lookbehind: true\n              },\n              'arg-style-text': {\n                pattern: RegExp(\n                  /(^\\s*,\\s*(?=\\S))/.source +\n                    nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) +\n                    '$'\n                ),\n                lookbehind: true,\n                alias: 'string'\n              },\n              punctuation: /,/\n            }\n          },\n          'argument-delimiter': {\n            pattern: /./,\n            alias: 'operator'\n          }\n        }\n      },\n      escape: escape,\n      string: string\n    }\n    nestedMessage.inside.message.inside = Prism.languages['icu-message-format']\n    Prism.languages['icu-message-format'].argument.inside.content.inside[\n      'choice-style'\n    ].inside.rest = Prism.languages['icu-message-format']\n  })(Prism)\n}\n","'use strict'\nvar refractorHaskell = require('./haskell.js')\nmodule.exports = idris\nidris.displayName = 'idris'\nidris.aliases = ['idr']\nfunction idris(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.idris = Prism.languages.extend('haskell', {\n    comment: {\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n    },\n    keyword:\n      /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n    'import-statement': {\n      pattern: /(^\\s*)import\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n      lookbehind: true\n    },\n    builtin: undefined\n  })\n  Prism.languages.idr = Prism.languages.idris\n}\n","'use strict'\n\nmodule.exports = iecst\niecst.displayName = 'iecst'\niecst.aliases = []\nfunction iecst(Prism) {\n  Prism.languages.iecst = {\n    comment: [\n      {\n        pattern:\n          /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\(\\*[\\s\\S]*?(?:\\*\\)|$)|\\{[\\s\\S]*?(?:\\}|$))/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name':\n      /\\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:GLOBAL|INPUT|PUTPUT|IN_OUT|ACCESS|TEMP|EXTERNAL|CONFIG)|VAR|METHOD|PROPERTY)\\b/i,\n    keyword:\n      /\\b(?:(?:END_)?(?:IF|WHILE|REPEAT|CASE|FOR)|ELSE|FROM|THEN|ELSIF|DO|TO|BY|PRIVATE|PUBLIC|PROTECTED|CONSTANT|RETURN|EXIT|CONTINUE|GOTO|JMP|AT|RETAIN|NON_RETAIN|TASK|WITH|UNTIL|USING|EXTENDS|IMPLEMENTS|GET|SET|__TRY|__CATCH|__FINALLY|__ENDTRY)\\b/,\n    variable:\n      /\\b(?:AT|BOOL|BYTE|(?:D|L)?WORD|U?(?:S|D|L)?INT|L?REAL|TIME(?:_OF_DAY)?|TOD|DT|DATE(?:_AND_TIME)?|STRING|ARRAY|ANY|POINTER)\\b/,\n    symbol: /%[IQM][XBWDL][\\d.]*|%[IQ][\\d.]*/,\n    number:\n      /\\b(?:16#[\\da-f]+|2#[01_]+|0x[\\da-f]+)\\b|\\b(?:T|D|DT|TOD)#[\\d_shmd:]*|\\b[A-Z]*#[\\d.,_]*|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:TRUE|FALSE|NULL)\\b/,\n    function: /\\w+(?=\\()/,\n    operator:\n      /(?:S?R?:?=>?|&&?|\\*\\*?|<=?|>=?|[-:^/+])|\\b(?:OR|AND|MOD|NOT|XOR|LE|GE|EQ|NE|GT|LT)\\b/,\n    punctuation: /[();]/,\n    type: {\n      pattern: /#/,\n      alias: 'selector'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = ignore\nignore.displayName = 'ignore'\nignore.aliases = ['gitignore', 'hgignore', 'npmignore']\nfunction ignore(Prism) {\n  ;(function (Prism) {\n    Prism.languages.ignore = {\n      // https://git-scm.com/docs/gitignore\n      comment: /^#.*/m,\n      entry: {\n        pattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\n        alias: 'string',\n        inside: {\n          operator: /^!|\\*\\*?|\\?/,\n          regex: {\n            pattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\n            lookbehind: true\n          },\n          punctuation: /\\//\n        }\n      }\n    }\n    Prism.languages.gitignore = Prism.languages.ignore\n    Prism.languages.hgignore = Prism.languages.ignore\n    Prism.languages.npmignore = Prism.languages.ignore\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = inform7\ninform7.displayName = 'inform7'\ninform7.aliases = []\nfunction inform7(Prism) {\n  Prism.languages.inform7 = {\n    string: {\n      pattern: /\"[^\"]*\"/,\n      inside: {\n        substitution: {\n          pattern: /\\[[^\\[\\]]+\\]/,\n          inside: {\n            delimiter: {\n              pattern: /\\[|\\]/,\n              alias: 'punctuation'\n            } // See rest below\n          }\n        }\n      }\n    },\n    comment: {\n      pattern: /\\[[^\\[\\]]+\\]/,\n      greedy: true\n    },\n    title: {\n      pattern: /^[ \\t]*(?:volume|book|part(?! of)|chapter|section|table)\\b.+/im,\n      alias: 'important'\n    },\n    number: {\n      pattern:\n        /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?(?:(?!\\d)\\w+)?|\\b(?:one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve))\\b(?!-)/i,\n      lookbehind: true\n    },\n    verb: {\n      pattern:\n        /(^|[^-])\\b(?:applying to|are|attacking|answering|asking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:s|ing)?|consulting|contain(?:s|ing)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:ve|s|ving)|hold(?:s|ing)?|impl(?:y|ies)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:s|ing)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:s|ing)?|setting|showing|singing|sleeping|smelling|squeezing|switching|support(?:s|ing)?|swearing|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:s|ing)?|var(?:y|ies|ying)|waiting|waking|waving|wear(?:s|ing)?)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    keyword: {\n      pattern:\n        /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|unless|the story)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n      lookbehind: true\n    },\n    property: {\n      pattern:\n        /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: on| off)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    position: {\n      pattern:\n        /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      pattern:\n        /(^|[^-])\\b(?:actions?|activit(?:y|ies)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    punctuation: /[.,:;(){}]/\n  }\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest =\n    Prism.languages.inform7 // We don't want the remaining text in the substitution to be highlighted as the string.\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\n    pattern: /\\S(?:\\s*\\S)*/,\n    alias: 'comment'\n  }\n}\n","'use strict'\n\nmodule.exports = ini\nini.displayName = 'ini'\nini.aliases = []\nfunction ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    header: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n","'use strict'\n\nmodule.exports = io\nio.displayName = 'io'\nio.aliases = []\nfunction io(Prism) {\n  Prism.languages.io = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    ],\n    'triple-quoted-string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:activate|activeCoroCount|asString|block|break|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getSlot|getEnvironmentVariable|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|call|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n    builtin:\n      /\\b(?:Array|AudioDevice|AudioMixer|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Regex|SGML|SGMLElement|SGMLParser|SQLite|Server|Sequence|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink|Random|BigNum)\\b/,\n    boolean: /\\b(?:true|false|nil)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?/i,\n    operator:\n      /[=!*/%+\\-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|\\b(?:return|and|or|not)\\b|@@?|\\?\\??|\\.\\./,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = j\nj.displayName = 'j'\nj.aliases = []\nfunction j(Prism) {\n  Prism.languages.j = {\n    comment: /\\bNB\\..*/,\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:(?:adverb|conjunction|CR|def|define|dyad|LF|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n    verb: {\n      // Negative look-ahead prevents bad highlighting\n      // of ^: ;. =. =: !. !:\n      pattern:\n        /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:[ejpx]|ad|ar)_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_\\b(?!\\.))/,\n    adverb: {\n      pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n      alias: 'builtin'\n    },\n    operator: /[=a][.:]|_\\./,\n    conjunction: {\n      pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n      alias: 'variable'\n    },\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = java\njava.displayName = 'java'\njava.aliases = []\nfunction java(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/ // full package (optional) + parent classes (optional)\n    var classNamePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the java naming conventions\n    var className = {\n      pattern: RegExp(classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /\\./\n      }\n    }\n    Prism.languages.java = Prism.languages.extend('clike', {\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      function: [\n        Prism.languages.clike.function,\n        {\n          pattern: /(::\\s*)[a-z_]\\w*/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'string', {\n      'triple-quoted-string': {\n        // http://openjdk.java.net/jeps/355#Description\n        pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      }\n    })\n    Prism.languages.insertBefore('java', 'class-name', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      },\n      namespace: {\n        pattern: RegExp(\n          /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(\n            /<keyword>/g,\n            function () {\n              return keywords.source\n            }\n          )\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJava = require('./java.js')\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = javadoc\njavadoc.displayName = 'javadoc'\njavadoc.aliases = []\nfunction javadoc(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorJavadoclike)\n  ;(function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\n    var reference =\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\n        /<mem>/g,\n        function () {\n          return memberReference\n        }\n      )\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(\n          /(@(?:exception|throws|see|link|linkplain|value)\\s+(?:\\*\\s*)?)/\n            .source +\n            '(?:' +\n            reference +\n            ')'\n        ),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [\n        {\n          pattern:\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n          lookbehind: true,\n          inside: {\n            code: {\n              // there can't be any HTML inside of {@code} tags\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: Prism.languages.java,\n              alias: 'language-java'\n            }\n          }\n        },\n        {\n          pattern:\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n          lookbehind: true,\n          inside: {\n            line: {\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: {\n                // highlight HTML tags and entities\n                tag: Prism.languages.markup.tag,\n                entity: Prism.languages.markup.entity,\n                code: {\n                  // everything else is Java code\n                  pattern: /.+/,\n                  inside: Prism.languages.java,\n                  alias: 'language-java'\n                }\n              }\n            }\n          }\n        }\n      ],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    })\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = javadoclike\njavadoclike.displayName = 'javadoclike'\njavadoclike.aliases = []\nfunction javadoclike(Prism) {\n  ;(function (Prism) {\n    var javaDocLike = (Prism.languages.javadoclike = {\n      parameter: {\n        pattern:\n          /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:param|arg|arguments)\\s+)\\w+/m,\n        lookbehind: true\n      },\n      keyword: {\n        // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n        // @word, {@word}\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n        lookbehind: true\n      },\n      punctuation: /[{}]/\n    })\n    /**\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n     *\n     * @param {string} lang the language add doc comment support to.\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n     */\n    function docCommentSupport(lang, callback) {\n      var tokenName = 'doc-comment'\n      var grammar = Prism.languages[lang]\n      if (!grammar) {\n        return\n      }\n      var token = grammar[tokenName]\n      if (!token) {\n        // add doc comment: /** */\n        var definition = {}\n        definition[tokenName] = {\n          pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          alias: 'comment'\n        }\n        grammar = Prism.languages.insertBefore(lang, 'comment', definition)\n        token = grammar[tokenName]\n      }\n      if (token instanceof RegExp) {\n        // convert regex to object\n        token = grammar[tokenName] = {\n          pattern: token\n        }\n      }\n      if (Array.isArray(token)) {\n        for (var i = 0, l = token.length; i < l; i++) {\n          if (token[i] instanceof RegExp) {\n            token[i] = {\n              pattern: token[i]\n            }\n          }\n          callback(token[i])\n        }\n      } else {\n        callback(token)\n      }\n    }\n    /**\n     * Adds doc-comment support to the given languages for the given documentation language.\n     *\n     * @param {string[]|string} languages\n     * @param {Object} docLanguage\n     */\n    function addSupport(languages, docLanguage) {\n      if (typeof languages === 'string') {\n        languages = [languages]\n      }\n      languages.forEach(function (lang) {\n        docCommentSupport(lang, function (pattern) {\n          if (!pattern.inside) {\n            pattern.inside = {}\n          }\n          pattern.inside.rest = docLanguage\n        })\n      })\n    }\n    Object.defineProperty(javaDocLike, 'addSupport', {\n      value: addSupport\n    })\n    javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = javascript\njavascript.displayName = 'javascript'\njavascript.aliases = ['js']\nfunction javascript(Prism) {\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [\n      Prism.languages.clike['class-name'],\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:prototype|constructor))/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /((?:^|\\})\\s*)catch\\b/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n        lookbehind: true\n      }\n    ],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function:\n      /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    number:\n      /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n  })\n  Prism.languages.javascript['class-name'][0].pattern =\n    /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      // eslint-disable-next-line regexp/no-dupe-characters-character-class\n      pattern:\n        /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\/|\\/$/,\n        'regex-flags': /^[a-z]+$/\n      }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern:\n        /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [\n      {\n        pattern:\n          /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    ],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  })\n  Prism.languages.insertBefore('javascript', 'string', {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    'template-string': {\n      pattern:\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript') // add attribute support for all DOM events.\n    // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n    Prism.languages.markup.tag.addAttribute(\n      /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/\n        .source,\n      'javascript'\n    )\n  }\n  Prism.languages.js = Prism.languages.javascript\n}\n","'use strict'\n\nmodule.exports = javastacktrace\njavastacktrace.displayName = 'javastacktrace'\njavastacktrace.aliases = []\nfunction javastacktrace(Prism) {\n  // Specification:\n  // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/Throwable.html#printStackTrace()\n  Prism.languages.javastacktrace = {\n    // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: com.example.myproject.MyProjectServletException\n    // Caused by: MidLevelException: LowLevelException\n    // Suppressed: Resource$CloseFailException: Resource ID = 0\n    summary: {\n      pattern:\n        /^[\\t ]*(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\n      inside: {\n        keyword: {\n          pattern:\n            /^(\\s*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n          lookbehind: true\n        },\n        // the current thread if the summary starts with 'Exception in thread'\n        string: {\n          pattern: /^(\\s*)\"[^\"]*\"/,\n          lookbehind: true\n        },\n        exceptions: {\n          pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n          lookbehind: true,\n          inside: {\n            'class-name': /[\\w$]+(?=$|:)/,\n            namespace: /[a-z]\\w*/,\n            punctuation: /[.:]/\n          }\n        },\n        message: {\n          pattern: /(:\\s*)\\S.*/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        punctuation: /:/\n      }\n    },\n    // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n    // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n    // at java.base/java.lang.Class.forName0(Native Method)\n    // at Util.<init>(Unknown Source)\n    // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\n    // at com.foo.loader//com.foo.bar.App.run(App.java:12)\n    // at acme@2.1/org.acme.Lib.test(Lib.java:80)\n    // at MyClass.mash(MyClass.java:9)\n    //\n    // More information:\n    // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\n    //\n    // A valid Java module name is defined as:\n    //   \"A module name consists of one or more Java identifiers (§3.8) separated by \".\" tokens.\"\n    // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\n    //\n    // A Java module version is defined by this class:\n    // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\n    // This is the implementation of the `parse` method in JDK13:\n    // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\n    // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\n    'stack-frame': {\n      pattern: /^[\\t ]*at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)at(?= )/,\n          lookbehind: true\n        },\n        source: [\n          // (Main.java:15)\n          // (Main.scala:15)\n          {\n            pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\n            lookbehind: true,\n            inside: {\n              file: /^\\w+\\.\\w+/,\n              punctuation: /:/,\n              'line-number': {\n                pattern: /\\d+/,\n                alias: 'number'\n              }\n            }\n          }, // (Unknown Source)\n          // (Native Method)\n          // (...something...)\n          {\n            pattern: /(\\()[^()]*(?=\\))/,\n            lookbehind: true,\n            inside: {\n              keyword: /^(?:Unknown Source|Native Method)$/\n            }\n          }\n        ],\n        'class-name': /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n        function: /(?:<init>|[\\w$]+)(?=\\()/,\n        'class-loader': {\n          pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        module: {\n          pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\n          lookbehind: true,\n          inside: {\n            version: {\n              pattern: /(@)[\\s\\S]+/,\n              lookbehind: true,\n              alias: 'number'\n            },\n            punctuation: /[@.]/\n          }\n        },\n        namespace: {\n          pattern: /(?:[a-z]\\w*\\.)+/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()/.]/\n      }\n    },\n    // ... 32 more\n    // ... 32 common frames omitted\n    more: {\n      pattern: /^[\\t ]*\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n      inside: {\n        punctuation: /\\.{3}/,\n        number: /\\d+/,\n        keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = jexl\njexl.displayName = 'jexl'\njexl.aliases = []\nfunction jexl(Prism) {\n  Prism.languages.jexl = {\n    string: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    transform: {\n      pattern:\n        /(\\|\\s*)[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*/,\n      alias: 'function',\n      lookbehind: true\n    },\n    function:\n      /[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*\\s*(?=\\()/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+\\b/,\n    operator: /[<>!]=?|-|\\+|&&|==|\\|\\|?|\\/\\/?|[?:*^%]/,\n    boolean: /\\b(?:true|false)\\b/,\n    keyword: /\\bin\\b/,\n    punctuation: /[{}[\\](),.]/\n  }\n}\n","'use strict'\n\nmodule.exports = jolie\njolie.displayName = 'jolie'\njolie.aliases = []\nfunction jolie(Prism) {\n  Prism.languages.jolie = Prism.languages.extend('clike', {\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n    operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[:?\\/%^]/,\n    punctuation: /[,.]/,\n    builtin:\n      /\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,\n    symbol: /[|;@]/\n  })\n  delete Prism.languages.jolie['class-name']\n  Prism.languages.insertBefore('jolie', 'keyword', {\n    function: {\n      pattern: /((?:\\b(?:outputPort|inputPort|in|service|courier)\\b|@)\\s*)\\w+/,\n      lookbehind: true\n    },\n    aggregates: {\n      pattern:\n        /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n      lookbehind: true,\n      inside: {\n        'with-extension': {\n          pattern: /\\bwith\\s+\\w+/,\n          inside: {\n            keyword: /\\bwith\\b/\n          }\n        },\n        function: {\n          pattern: /\\w+/\n        },\n        punctuation: {\n          pattern: /,/\n        }\n      }\n    },\n    redirects: {\n      pattern:\n        /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n      lookbehind: true,\n      inside: {\n        punctuation: {\n          pattern: /,/\n        },\n        function: {\n          pattern: /\\w+/\n        },\n        symbol: {\n          pattern: /=>/\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = jq\njq.displayName = 'jq'\njq.aliases = []\nfunction jq(Prism) {\n  ;(function (Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var string = RegExp(\n      /\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(/__/g, function () {\n        return interpolation\n      })\n    )\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    }\n    var jq = (Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword:\n        /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [\n        {\n          pattern: /\\|=?/,\n          alias: 'pipe'\n        },\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|or|not)\\b/\n      ],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    })\n    stringInterpolation.interpolation.inside.content.inside = jq\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = jsExtras\njsExtras.displayName = 'jsExtras'\njsExtras.aliases = []\nfunction jsExtras(Prism) {\n  ;(function (Prism) {\n    Prism.languages.insertBefore('javascript', 'function-variable', {\n      'method-variable': {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' +\n            Prism.languages.javascript['function-variable'].pattern.source\n        ),\n        lookbehind: true,\n        alias: ['function-variable', 'method', 'function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'function', {\n      method: {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source\n        ),\n        lookbehind: true,\n        alias: ['function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'constant', {\n      'known-class-name': [\n        {\n          // standard built-ins\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n          pattern:\n            /\\b(?:(?:(?:Uint|Int)(?:8|16|32)|Uint8Clamped|Float(?:32|64))?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|(?:Weak)?(?:Set|Map)|WebAssembly)\\b/,\n          alias: 'class-name'\n        },\n        {\n          // errors\n          pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n          alias: 'class-name'\n        }\n      ]\n    })\n    /**\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n     *\n     * @param {string} source\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function withId(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source\n        }),\n        flags\n      )\n    }\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      imports: {\n        // https://tc39.es/ecma262/#sec-imports\n        pattern: withId(\n          /(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      exports: {\n        // https://tc39.es/ecma262/#sec-exports\n        pattern: withId(\n          /(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    })\n    Prism.languages.javascript['keyword'].unshift(\n      {\n        pattern: /\\b(?:as|default|export|from|import)\\b/,\n        alias: 'module'\n      },\n      {\n        pattern:\n          /\\b(?:await|break|catch|continue|do|else|for|finally|if|return|switch|throw|try|while|yield)\\b/,\n        alias: 'control-flow'\n      },\n      {\n        pattern: /\\bnull\\b/,\n        alias: ['null', 'nil']\n      },\n      {\n        pattern: /\\bundefined\\b/,\n        alias: 'nil'\n      }\n    )\n    Prism.languages.insertBefore('javascript', 'operator', {\n      spread: {\n        pattern: /\\.{3}/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /=>/,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'punctuation', {\n      'property-access': {\n        pattern: withId(/(\\.\\s*)#?<ID>/.source),\n        lookbehind: true\n      },\n      'maybe-class-name': {\n        pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n        lookbehind: true\n      },\n      dom: {\n        // this contains only a few commonly used DOM variables\n        pattern:\n          /\\b(?:document|location|navigator|performance|(?:local|session)Storage|window)\\b/,\n        alias: 'variable'\n      },\n      console: {\n        pattern: /\\bconsole(?=\\s*\\.)/,\n        alias: 'class-name'\n      }\n    }) // add 'maybe-class-name' to tokens which might be a class name\n    var maybeClassNameTokens = [\n      'function',\n      'function-variable',\n      'method',\n      'method-variable',\n      'property-access'\n    ]\n    for (var i = 0; i < maybeClassNameTokens.length; i++) {\n      var token = maybeClassNameTokens[i]\n      var value = Prism.languages.javascript[token] // convert regex to object\n      if (Prism.util.type(value) === 'RegExp') {\n        value = Prism.languages.javascript[token] = {\n          pattern: value\n        }\n      } // keep in mind that we don't support arrays\n      var inside = value.inside || {}\n      value.inside = inside\n      inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = jsTemplates\njsTemplates.displayName = 'jsTemplates'\njsTemplates.aliases = []\nfunction jsTemplates(Prism) {\n  ;(function (Prism) {\n    var templateString = Prism.languages.javascript['template-string'] // see the pattern in prism-javascript.js\n    var templateLiteralPattern = templateString.pattern.source\n    var interpolationObject = templateString.inside['interpolation']\n    var interpolationPunctuationObject =\n      interpolationObject.inside['interpolation-punctuation']\n    var interpolationPattern = interpolationObject.pattern.source\n    /**\n     * Creates a new pattern to match a template string with a special tag.\n     *\n     * This will return `undefined` if there is no grammar with the given language id.\n     *\n     * @param {string} language The language id of the embedded language. E.g. `markdown`.\n     * @param {string} tag The regex pattern to match the tag.\n     * @returns {object | undefined}\n     * @example\n     * createTemplate('css', /\\bcss/.source);\n     */\n    function createTemplate(language, tag) {\n      if (!Prism.languages[language]) {\n        return undefined\n      }\n      return {\n        pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'template-punctuation': {\n            pattern: /^`|`$/,\n            alias: 'string'\n          },\n          'embedded-code': {\n            pattern: /[\\s\\S]+/,\n            alias: language\n          }\n        }\n      }\n    }\n    Prism.languages.javascript['template-string'] = [\n      // styled-jsx:\n      //   css`a { color: #25F; }`\n      // styled-components:\n      //   styled.h1`color: red;`\n      createTemplate(\n        'css',\n        /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/\n          .source\n      ), // html`<p></p>`\n      // div.innerHTML = `<p></p>`\n      createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n      createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n      createTemplate('markdown', /\\b(?:md|markdown)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n      createTemplate(\n        'graphql',\n        /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source\n      ), // sql`...`\n      createTemplate('sql', /\\bsql/.source), // vanilla template string\n      templateString\n    ].filter(Boolean)\n    /**\n     * Returns a specific placeholder literal for the given language.\n     *\n     * @param {number} counter\n     * @param {string} language\n     * @returns {string}\n     */\n    function getPlaceholder(counter, language) {\n      return '___' + language.toUpperCase() + '_' + counter + '___'\n    }\n    /**\n     * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n     *\n     * @param {string} code\n     * @param {any} grammar\n     * @param {string} language\n     * @returns {(string|Token)[]}\n     */\n    function tokenizeWithHooks(code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language\n      }\n      Prism.hooks.run('before-tokenize', env)\n      env.tokens = Prism.tokenize(env.code, env.grammar)\n      Prism.hooks.run('after-tokenize', env)\n      return env.tokens\n    }\n    /**\n     * Returns the token of the given JavaScript interpolation expression.\n     *\n     * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n     * @returns {Token}\n     */\n    function tokenizeInterpolationExpression(expression) {\n      var tempGrammar = {}\n      tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject\n      /** @type {Array} */\n      var tokens = Prism.tokenize(expression, tempGrammar)\n      if (tokens.length === 3) {\n        /**\n         * The token array will look like this\n         * [\n         *     [\"interpolation-punctuation\", \"${\"]\n         *     \"...\" // JavaScript expression of the interpolation\n         *     [\"interpolation-punctuation\", \"}\"]\n         * ]\n         */\n        var args = [1, 1]\n        args.push.apply(\n          args,\n          tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript')\n        )\n        tokens.splice.apply(tokens, args)\n      }\n      return new Prism.Token(\n        'interpolation',\n        tokens,\n        interpolationObject.alias,\n        expression\n      )\n    }\n    /**\n     * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n     *\n     * This function has 3 phases:\n     *\n     * 1. Replace all JavaScript interpolation expression with a placeholder.\n     *    The placeholder will have the syntax of a identify of the target language.\n     * 2. Tokenize the code with placeholders.\n     * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n     *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n     *    tokenized as two tokens by the grammar of the embedded language.\n     *\n     * @param {string} code\n     * @param {object} grammar\n     * @param {string} language\n     * @returns {Token}\n     */\n    function tokenizeEmbedded(code, grammar, language) {\n      // 1. First filter out all interpolations\n      // because they might be escaped, we need a lookbehind, so we use Prism\n      /** @type {(Token|string)[]} */\n      var _tokens = Prism.tokenize(code, {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          lookbehind: true\n        }\n      }) // replace all interpolations with a placeholder which is not in the code already\n      var placeholderCounter = 0\n      /** @type {Object<string, string>} */\n      var placeholderMap = {}\n      var embeddedCode = _tokens\n        .map(function (token) {\n          if (typeof token === 'string') {\n            return token\n          } else {\n            var interpolationExpression = token.content\n            var placeholder\n            while (\n              code.indexOf(\n                (placeholder = getPlaceholder(placeholderCounter++, language))\n              ) !== -1\n            ) {\n              /* noop */\n            }\n            placeholderMap[placeholder] = interpolationExpression\n            return placeholder\n          }\n        })\n        .join('') // 2. Tokenize the embedded code\n      var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language) // 3. Re-insert the interpolation\n      var placeholders = Object.keys(placeholderMap)\n      placeholderCounter = 0\n      /**\n       *\n       * @param {(Token|string)[]} tokens\n       * @returns {void}\n       */\n      function walkTokens(tokens) {\n        for (var i = 0; i < tokens.length; i++) {\n          if (placeholderCounter >= placeholders.length) {\n            return\n          }\n          var token = tokens[i]\n          if (typeof token === 'string' || typeof token.content === 'string') {\n            var placeholder = placeholders[placeholderCounter]\n            var s =\n              typeof token === 'string'\n                ? token\n                : /** @type {string} */\n                  token.content\n            var index = s.indexOf(placeholder)\n            if (index !== -1) {\n              ++placeholderCounter\n              var before = s.substring(0, index)\n              var middle = tokenizeInterpolationExpression(\n                placeholderMap[placeholder]\n              )\n              var after = s.substring(index + placeholder.length)\n              var replacement = []\n              if (before) {\n                replacement.push(before)\n              }\n              replacement.push(middle)\n              if (after) {\n                var afterTokens = [after]\n                walkTokens(afterTokens)\n                replacement.push.apply(replacement, afterTokens)\n              }\n              if (typeof token === 'string') {\n                tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                i += replacement.length - 1\n              } else {\n                token.content = replacement\n              }\n            }\n          } else {\n            var content = token.content\n            if (Array.isArray(content)) {\n              walkTokens(content)\n            } else {\n              walkTokens([content])\n            }\n          }\n        }\n      }\n      walkTokens(embeddedTokens)\n      return new Prism.Token(\n        language,\n        embeddedTokens,\n        'language-' + language,\n        code\n      )\n    }\n    /**\n     * The languages for which JS templating will handle tagged template literals.\n     *\n     * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n     */\n    var supportedLanguages = {\n      javascript: true,\n      js: true,\n      typescript: true,\n      ts: true,\n      jsx: true,\n      tsx: true\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (!(env.language in supportedLanguages)) {\n        return\n      }\n      /**\n       * Finds and tokenizes all template strings with an embedded languages.\n       *\n       * @param {(Token | string)[]} tokens\n       * @returns {void}\n       */\n      function findTemplateStrings(tokens) {\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (typeof token === 'string') {\n            continue\n          }\n          var content = token.content\n          if (!Array.isArray(content)) {\n            if (typeof content !== 'string') {\n              findTemplateStrings([content])\n            }\n            continue\n          }\n          if (token.type === 'template-string') {\n            /**\n             * A JavaScript template-string token will look like this:\n             *\n             * [\"template-string\", [\n             *     [\"template-punctuation\", \"`\"],\n             *     (\n             *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n             *         or\n             *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n             *                                  It also has an alias which is the language of the embedded code.\n             *     ),\n             *     [\"template-punctuation\", \"`\"]\n             * ]]\n             */\n            var embedded = content[1]\n            if (\n              content.length === 3 &&\n              typeof embedded !== 'string' &&\n              embedded.type === 'embedded-code'\n            ) {\n              // get string content\n              var code = stringContent(embedded)\n              var alias = embedded.alias\n              var language = Array.isArray(alias) ? alias[0] : alias\n              var grammar = Prism.languages[language]\n              if (!grammar) {\n                // the embedded language isn't registered.\n                continue\n              }\n              content[1] = tokenizeEmbedded(code, grammar, language)\n            }\n          } else {\n            findTemplateStrings(content)\n          }\n        }\n      }\n      findTemplateStrings(env.tokens)\n    })\n    /**\n     * Returns the string content of a token or token stream.\n     *\n     * @param {string | Token | (string | Token)[]} value\n     * @returns {string}\n     */\n    function stringContent(value) {\n      if (typeof value === 'string') {\n        return value\n      } else if (Array.isArray(value)) {\n        return value.map(stringContent).join('')\n      } else {\n        return stringContent(value.content)\n      }\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorJavadoclike = require('./javadoclike.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = jsdoc\njsdoc.displayName = 'jsdoc'\njsdoc.aliases = []\nfunction jsdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var javascript = Prism.languages.javascript\n    var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source\n    var parameterPrefix =\n      '(@(?:param|arg|argument|property)\\\\s+(?:' + type + '\\\\s+)?)'\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(\n          parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(\n          parameterPrefix +\n            /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(@(?:augments|extends|class|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(\n              /<TYPE>/g,\n              function () {\n                return type\n              }\n            )\n          ),\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        {\n          pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n          lookbehind: true,\n          inside: {\n            string: javascript.string,\n            number: javascript.number,\n            boolean: javascript.boolean,\n            keyword: Prism.languages.typescript.keyword,\n            operator: /=>|\\.\\.\\.|[&|?:*]/,\n            punctuation: /[.,;=<>{}()[\\]]/\n          }\n        }\n      ],\n      example: {\n        pattern:\n          /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    })\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = json\njson.displayName = 'json'\njson.aliases = ['webmanifest']\nfunction json(Prism) {\n  // https://www.json.org/json-en.html\n  Prism.languages.json = {\n    property: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    punctuation: /[{}[\\],]/,\n    operator: /:/,\n    boolean: /\\b(?:true|false)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.languages.webmanifest = Prism.languages.json\n}\n","'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = json5\njson5.displayName = 'json5'\njson5.aliases = []\nfunction json5(Prism) {\n  Prism.register(refractorJson)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\n    Prism.languages.json5 = Prism.languages.extend('json', {\n      property: [\n        {\n          pattern: RegExp(string.source + '(?=\\\\s*:)'),\n          greedy: true\n        },\n        {\n          pattern:\n            /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n          alias: 'unquoted'\n        }\n      ],\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      number:\n        /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = jsonp\njsonp.displayName = 'jsonp'\njsonp.aliases = []\nfunction jsonp(Prism) {\n  Prism.register(refractorJson)\n  Prism.languages.jsonp = Prism.languages.extend('json', {\n    punctuation: /[{}[\\]();,.]/\n  })\n  Prism.languages.insertBefore('jsonp', 'punctuation', {\n    function: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*\\()/\n  })\n}\n","'use strict'\n\nmodule.exports = jsstacktrace\njsstacktrace.displayName = 'jsstacktrace'\njsstacktrace.aliases = []\nfunction jsstacktrace(Prism) {\n  Prism.languages.jsstacktrace = {\n    'error-message': {\n      pattern: /^\\S.*/m,\n      alias: 'string'\n    },\n    'stack-frame': {\n      pattern: /(^[ \\t]+)at[ \\t].*/m,\n      lookbehind: true,\n      inside: {\n        'not-my-code': {\n          pattern:\n            /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\n          alias: 'comment'\n        },\n        filename: {\n          pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n          lookbehind: true,\n          alias: 'url'\n        },\n        function: {\n          pattern:\n            /(at\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()]/,\n        keyword: /\\b(?:at|new)\\b/,\n        alias: {\n          pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n          alias: 'variable'\n        },\n        'line-number': {\n          pattern: /:[0-9]+(?::[0-9]+)?\\b/,\n          alias: 'number',\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = jsx\njsx.displayName = 'jsx'\njsx.aliases = []\nfunction jsx(Prism) {\n  ;(function (Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript)\n    var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source\n    var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source\n    var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<S>/g, function () {\n          return space\n        })\n        .replace(/<BRACES>/g, function () {\n          return braces\n        })\n        .replace(/<SPREAD>/g, function () {\n          return spread\n        })\n      return RegExp(source, flags)\n    }\n    spread = re(spread).source\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript)\n    Prism.languages.jsx.tag.pattern = re(\n      /<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/\n        .source\n    )\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i\n    Prism.languages.jsx.tag.inside['attr-value'].pattern =\n      /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/i\n    Prism.languages.jsx.tag.inside['tag'].inside['class-name'] =\n      /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/\n    Prism.languages.jsx.tag.inside['comment'] = javascript['comment']\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-name',\n      {\n        spread: {\n          pattern: re(/<SPREAD>/.source),\n          inside: Prism.languages.jsx\n        }\n      },\n      Prism.languages.jsx.tag\n    )\n    Prism.languages.insertBefore(\n      'inside',\n      'special-attr',\n      {\n        script: {\n          // Allow for two levels of nesting\n          pattern: re(/=<BRACES>/.source),\n          inside: {\n            'script-punctuation': {\n              pattern: /^=(?=\\{)/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.jsx\n          },\n          alias: 'language-javascript'\n        }\n      },\n      Prism.languages.jsx.tag\n    ) // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (!token) {\n        return ''\n      }\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{'\n          ) {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token) // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            tokens[i] = new Prism.Token(\n              'plain-text',\n              plainText,\n              null,\n              plainText\n            )\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = julia\njulia.displayName = 'julia'\njulia.aliases = []\nfunction julia(Prism) {\n  Prism.languages.julia = {\n    comment: {\n      // support one level of nested comments\n      // https://github.com/JuliaLang/julia/pull/6128\n      pattern:\n        /(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,\n      lookbehind: true\n    },\n    regex: {\n      // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1\n      pattern: /r\"(?:\\\\.|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/,\n      greedy: true\n    },\n    string: {\n      // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1\n      // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1\n      // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1\n      // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1\n      pattern:\n        /\"\"\"[\\s\\S]+?\"\"\"|(?:\\b\\w+)?\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'|`(?:[^\\\\`\\r\\n]|\\\\.)*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i,\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1\n    operator:\n      /&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,\n    punctuation: /::?|[{}[\\]();,.?]/,\n    // https://docs.julialang.org/en/v1/base/numbers/#Base.im\n    constant: /\\b(?:(?:NaN|Inf)(?:16|32|64)?|im|pi)\\b|[πℯ]/\n  }\n}\n","'use strict'\n\nmodule.exports = keyman\nkeyman.displayName = 'keyman'\nkeyman.aliases = []\nfunction keyman(Prism) {\n  Prism.languages.keyman = {\n    comment: /\\bc\\s.*/i,\n    function:\n      /\\[\\s*(?:(?:CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*(?:[TKU]_[\\w?]+|\".+?\"|'.+?')\\s*\\]/i,\n    // virtual key\n    string: /(\"|').*?\\1/,\n    bold: [\n      // header statements, system stores and variable system stores\n      /&(?:baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i,\n      /\\b(?:bitmap|bitmaps|caps on only|caps always off|shift frees caps|copyright|hotkey|language|layout|message|name|version)\\b/i\n    ],\n    keyword:\n      /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|return|reset|save|set|store|use)\\b/i,\n    // rule keywords\n    atrule: /\\b(?:ansi|begin|unicode|group|using keys|match|nomatch)\\b/i,\n    // structural keywords\n    number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n    // U+####, x###, d### characters and numbers\n    operator: /[+>\\\\,()]/,\n    tag: /\\$(?:keyman|kmfl|weaver|keymanweb|keymanonly):/i // prefixes\n  }\n}\n","'use strict'\n\nmodule.exports = kotlin\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\nfunction kotlin(Prism) {\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    Prism.languages.insertBefore('kotlin', 'string', {\n      'raw-string': {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        alias: 'string' // See interpolation below\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    var interpolation = [\n      {\n        pattern: /\\$\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.kotlin\n        }\n      },\n      {\n        pattern: /\\$\\w+/,\n        alias: 'variable'\n      }\n    ]\n    Prism.languages.kotlin['string'].inside = Prism.languages.kotlin[\n      'raw-string'\n    ].inside = {\n      interpolation: interpolation\n    }\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = kumir\nkumir.displayName = 'kumir'\nkumir.aliases = ['kum']\nfunction kumir(Prism) {\n  /* eslint-disable regexp/no-dupe-characters-character-class */\n  ;(function (Prism) {\n    /**\n     * Regular expression for characters that are not allowed in identifiers.\n     *\n     * @type {string}\n     */\n    var nonId = /\\s\\x00-\\x1f\\x22-\\x2f\\x3a-\\x3f\\x5b-\\x5e\\x60\\x7b-\\x7e/.source\n    /**\n     * Surround a regular expression for IDs with patterns for non-ID sequences.\n     *\n     * @param {string} pattern A regular expression for identifiers.\n     * @param {string} [flags] The regular expression flags.\n     * @returns {RegExp} A wrapped regular expression for identifiers.\n     */\n    function wrapId(pattern, flags) {\n      return RegExp(pattern.replace(/<nonId>/g, nonId), flags)\n    }\n    Prism.languages.kumir = {\n      comment: {\n        pattern: /\\|.*/\n      },\n      prolog: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\\n\\r\"]*\"|'[^\\n\\r']*'/,\n        greedy: true\n      },\n      boolean: {\n        pattern: wrapId(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),\n        lookbehind: true\n      },\n      'operator-word': {\n        pattern: wrapId(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'system-variable': {\n        pattern: wrapId(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      type: [\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\\x20*таб)?(?=[<nonId>]|$)/\n              .source\n          ),\n          lookbehind: true,\n          alias: 'builtin'\n        },\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source\n          ),\n          lookbehind: true,\n          alias: 'important'\n        }\n      ],\n      /**\n       * Should be performed after searching for type names because of \"таб\".\n       * \"таб\" is a reserved word, but never used without a preceding type name.\n       * \"НАЗНАЧИТЬ\", \"Фввод\", and \"Фвывод\" are not reserved words.\n       */\n      keyword: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:алг|арг(?:\\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\\x20+|_)исп)?|кц(?:(?:\\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for reserved words. */\n      name: {\n        // eslint-disable-next-line regexp/no-super-linear-backtracking\n        pattern: wrapId(\n          /(^|[<nonId>])[^\\d<nonId>][^<nonId>]*(?:\\x20+[^<nonId>]+)*(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for names. */\n      number: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:\\B\\$[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?=[<nonId>]|$)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for words. */\n      punctuation: /:=|[(),:;\\[\\]]/,\n      /**\n       * Should be performed after searching for\n       * - numeric constants (because of \"+\" and \"-\");\n       * - punctuation marks (because of \":=\" and \"=\").\n       */\n      'operator-char': {\n        pattern: /\\*\\*?|<[=>]?|>=?|[-+/=]/,\n        alias: 'operator'\n      }\n    }\n    Prism.languages.kum = Prism.languages.kumir\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = kusto\nkusto.displayName = 'kusto'\nkusto.aliases = []\nfunction kusto(Prism) {\n  Prism.languages.kusto = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,\n      greedy: true\n    },\n    verb: {\n      pattern: /(\\|\\s*)[a-z][\\w-]*/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    command: {\n      pattern: /\\.[a-z][a-z\\d-]*\\b/,\n      alias: 'keyword'\n    },\n    'class-name':\n      /\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,\n    keyword:\n      /\\b(?:access|alias|and|anti|as|asc|auto|between|by|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|(?:has(?:perfix|suffix)?|contains|(?:starts|ends)with)(?:_cs)?|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,\n    boolean: /\\b(?:true|false|null)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/,\n    datetime: [\n      {\n        // RFC 822 + RFC 850\n        pattern:\n          /\\b(?:(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:(?:U|GM|[ECMT][DS])T|[A-Z])|[+-]\\d{4}))?\\b/,\n        alias: 'number'\n      },\n      {\n        // ISO 8601\n        pattern:\n          /[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,\n        alias: 'number'\n      }\n    ],\n    number:\n      /\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|tick|microsecond|[dhms])\\b)?|[+-]?\\binf\\b/,\n    operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,\n    punctuation: /[()\\[\\]{},;.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = latex\nlatex.displayName = 'latex'\nlatex.aliases = ['tex', 'context']\nfunction latex(Prism) {\n  ;(function (Prism) {\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i\n    var insideEqu = {\n      'equation-command': {\n        pattern: funcPattern,\n        alias: 'regex'\n      }\n    }\n    Prism.languages.latex = {\n      comment: /%.*/m,\n      // the verbatim environment prints whitespace to the document\n      cdata: {\n        pattern:\n          /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true\n      },\n      /*\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */\n      equation: [\n        {\n          pattern:\n            /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        },\n        {\n          pattern:\n            /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }\n      ],\n      /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */\n      keyword: {\n        pattern:\n          /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */\n      headline: {\n        pattern:\n          /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      function: {\n        pattern: funcPattern,\n        alias: 'selector'\n      },\n      punctuation: /[[\\]{}&]/\n    }\n    Prism.languages.tex = Prism.languages.latex\n    Prism.languages.context = Prism.languages.latex\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nvar refractorPhp = require('./php.js')\nmodule.exports = latte\nlatte.displayName = 'latte'\nlatte.aliases = []\nfunction latte(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorPhp)\n  ;(function (Prism) {\n    Prism.languages.latte = {\n      comment: /^\\{\\*[\\s\\S]*/,\n      ld: {\n        pattern: /^\\{(?:[=_]|\\/?(?!\\d|\\w+\\()\\w+)?/,\n        inside: {\n          punctuation: /^\\{\\/?/,\n          tag: {\n            pattern: /.+/,\n            alias: 'important'\n          }\n        }\n      },\n      rd: {\n        pattern: /\\}$/,\n        inside: {\n          punctuation: /.+/\n        }\n      },\n      php: {\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        alias: 'language-php',\n        inside: Prism.languages.php\n      }\n    }\n    var markupLatte = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-value',\n      {\n        'n-attr': {\n          pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n          inside: {\n            'attr-name': {\n              pattern: /^[^\\s=]+/,\n              alias: 'important'\n            },\n            'attr-value': {\n              pattern: /=[\\s\\S]+/,\n              inside: {\n                punctuation: [\n                  /^=/,\n                  {\n                    pattern: /^(\\s*)[\"']|[\"']$/,\n                    lookbehind: true\n                  }\n                ],\n                php: {\n                  pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                  inside: Prism.languages.php\n                }\n              }\n            }\n          }\n        }\n      },\n      markupLatte.tag\n    )\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (env.language !== 'latte') {\n        return\n      }\n      var lattePattern =\n        /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'latte',\n        lattePattern\n      )\n      env.grammar = markupLatte\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = less\nless.displayName = 'less'\nless.aliases = []\nfunction less(Prism) {\n  /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    atrule: {\n      pattern:\n        /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern:\n        /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,\n    operator: /[+\\-*\\/]/\n  })\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      }, // Variable usage\n      /@@?[\\w-]+/\n    ],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  })\n}\n","'use strict'\nvar refractorScheme = require('./scheme.js')\nmodule.exports = lilypond\nlilypond.displayName = 'lilypond'\nlilypond.aliases = []\nfunction lilypond(Prism) {\n  Prism.register(refractorScheme)\n  ;(function (Prism) {\n    var schemeExpression =\n      /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/\n        .source // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n    // For some reason, this can't be 4\n    var recursivenessLog2 = 5\n    for (var i = 0; i < recursivenessLog2; i++) {\n      schemeExpression = schemeExpression.replace(/<expr>/g, function () {\n        return schemeExpression\n      })\n    }\n    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var lilypond = (Prism.languages.lilypond = {\n      comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n      'embedded-scheme': {\n        pattern: RegExp(\n          /(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(\n            /<expr>/g,\n            function () {\n              return schemeExpression\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          scheme: {\n            pattern: /^(#)[\\s\\S]+$/,\n            lookbehind: true,\n            alias: 'language-scheme',\n            inside: {\n              'embedded-lilypond': {\n                pattern: /#\\{[\\s\\S]*?#\\}/,\n                greedy: true,\n                inside: {\n                  punctuation: /^#\\{|#\\}$/,\n                  lilypond: {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'language-lilypond',\n                    inside: null // see below\n                  }\n                }\n              },\n              rest: Prism.languages.scheme\n            }\n          },\n          punctuation: /#/\n        }\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\\\new\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /\\\\[a-z][-\\w]*/i,\n        inside: {\n          punctuation: /^\\\\/\n        }\n      },\n      operator: /[=|]|<<|>>/,\n      punctuation: {\n        pattern:\n          /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\/\\d+)?\\b/\n    })\n    lilypond['embedded-scheme'].inside['scheme'].inside[\n      'embedded-lilypond'\n    ].inside['lilypond'].inside = lilypond\n    Prism.languages.ly = lilypond\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = liquid\nliquid.displayName = 'liquid'\nliquid.aliases = []\nfunction liquid(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.liquid = {\n    comment: {\n      pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n      lookbehind: true\n    },\n    delimiter: {\n      pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|assign|break|continue|cycle|decrement|echo|else|elsif|(?:end)?(?:capture|case|comment|for|form|if|paginate|style|raw|tablerow|unless)|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n    object:\n      /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|comment|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|form|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|paginate|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|section|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tablerow|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\n    function: [\n      {\n        pattern: /(\\|\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'filter'\n      },\n      {\n        // array functions\n        pattern: /(\\.\\s*)(?:first|last|size)/,\n        lookbehind: true\n      }\n    ],\n    boolean: /\\b(?:true|false|nil)\\b/,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|or|contains(?=\\s))\\b/,\n    punctuation: /[.,\\[\\]()]/,\n    empty: {\n      pattern: /\\bempty\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    var liquidPattern =\n      /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g\n    var insideRaw = false\n    Prism.languages['markup-templating'].buildPlaceholders(\n      env,\n      'liquid',\n      liquidPattern,\n      function (match) {\n        var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match)\n        if (tagMatch) {\n          var tag = tagMatch[1]\n          if (tag === 'raw' && !insideRaw) {\n            insideRaw = true\n            return true\n          } else if (tag === 'endraw') {\n            insideRaw = false\n            return true\n          }\n        }\n        return !insideRaw\n      }\n    )\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid')\n  })\n}\n","'use strict'\n\nmodule.exports = lisp\nlisp.displayName = 'lisp'\nlisp.aliases = []\nfunction lisp(Prism) {\n  ;(function (Prism) {\n    // Functions to construct regular expressions\n    // simple form\n    // e.g. (interactive ... or (interactive)\n    function simple_form(name) {\n      return RegExp('(\\\\()' + name + '(?=[\\\\s\\\\)])')\n    } // booleans and numbers\n    function primitive(pattern) {\n      return RegExp('([\\\\s([])' + pattern + '(?=[\\\\s)])')\n    } // Patterns in regular expressions\n    // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n    // & and : are excluded as they are usually used for special purposes\n    var symbol = '[-+*/~!@$%^=<>{}\\\\w]+' // symbol starting with & used in function arguments\n    var marker = '&' + symbol // Open parenthesis for look-behind\n    var par = '(\\\\()'\n    var endpar = '(?=\\\\))' // End the pattern with look-ahead space\n    var space = '(?=\\\\s)'\n    var language = {\n      // Three or four semicolons are considered a heading.\n      // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n      heading: {\n        pattern: /;;;.*/,\n        alias: ['comment', 'title']\n      },\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true,\n        inside: {\n          argument: /[-A-Z]+(?=[.,\\s])/,\n          symbol: RegExp('`' + symbol + \"'\")\n        }\n      },\n      'quoted-symbol': {\n        pattern: RegExp(\"#?'\" + symbol),\n        alias: ['variable', 'symbol']\n      },\n      'lisp-property': {\n        pattern: RegExp(':' + symbol),\n        alias: 'property'\n      },\n      splice: {\n        pattern: RegExp(',@?' + symbol),\n        alias: ['symbol', 'variable']\n      },\n      keyword: [\n        {\n          pattern: RegExp(\n            par +\n              '(?:(?:lexical-)?let\\\\*?|(?:cl-)?letf|if|when|while|unless|cons|cl-loop|and|or|not|cond|setq|error|message|null|require|provide|use-package)' +\n              space\n          ),\n          lookbehind: true\n        },\n        {\n          pattern: RegExp(\n            par +\n              '(?:for|do|collect|return|finally|append|concat|in|by)' +\n              space\n          ),\n          lookbehind: true\n        }\n      ],\n      declare: {\n        pattern: simple_form('declare'),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      interactive: {\n        pattern: simple_form('interactive'),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      boolean: {\n        pattern: primitive('(?:t|nil)'),\n        lookbehind: true\n      },\n      number: {\n        pattern: primitive('[-+]?\\\\d+(?:\\\\.\\\\d*)?'),\n        lookbehind: true\n      },\n      defvar: {\n        pattern: RegExp(par + 'def(?:var|const|custom|group)\\\\s+' + symbol),\n        lookbehind: true,\n        inside: {\n          keyword: /^def[a-z]+/,\n          variable: RegExp(symbol)\n        }\n      },\n      defun: {\n        pattern: RegExp(\n          par +\n            '(?:cl-)?(?:defun\\\\*?|defmacro)\\\\s+' +\n            symbol +\n            '\\\\s+\\\\([\\\\s\\\\S]*?\\\\)'\n        ),\n        lookbehind: true,\n        inside: {\n          keyword: /^(?:cl-)?def\\S+/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          function: {\n            pattern: RegExp('(^\\\\s)' + symbol),\n            lookbehind: true\n          },\n          punctuation: /[()]/\n        }\n      },\n      lambda: {\n        pattern: RegExp(\n          par +\n            'lambda\\\\s+\\\\(\\\\s*(?:&?' +\n            symbol +\n            '(?:\\\\s+&?' +\n            symbol +\n            ')*\\\\s*)?\\\\)'\n        ),\n        lookbehind: true,\n        inside: {\n          keyword: /^lambda/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          punctuation: /[()]/\n        }\n      },\n      car: {\n        pattern: RegExp(par + symbol),\n        lookbehind: true\n      },\n      punctuation: [\n        // open paren, brackets, and close paren\n        /(?:['`,]?\\(|[)\\[\\]])/, // cons\n        {\n          pattern: /(\\s)\\.(?=\\s)/,\n          lookbehind: true\n        }\n      ]\n    }\n    var arg = {\n      'lisp-marker': RegExp(marker),\n      rest: {\n        argument: {\n          pattern: RegExp(symbol),\n          alias: 'variable'\n        },\n        varform: {\n          pattern: RegExp(par + symbol + '\\\\s+\\\\S[\\\\s\\\\S]*' + endpar),\n          lookbehind: true,\n          inside: {\n            string: language.string,\n            boolean: language.boolean,\n            number: language.number,\n            symbol: language.symbol,\n            punctuation: /[()]/\n          }\n        }\n      }\n    }\n    var forms = '\\\\S+(?:\\\\s+\\\\S+)*'\n    var arglist = {\n      pattern: RegExp(par + '[\\\\s\\\\S]*' + endpar),\n      lookbehind: true,\n      inside: {\n        'rest-vars': {\n          pattern: RegExp('&(?:rest|body)\\\\s+' + forms),\n          inside: arg\n        },\n        'other-marker-vars': {\n          pattern: RegExp('&(?:optional|aux)\\\\s+' + forms),\n          inside: arg\n        },\n        keys: {\n          pattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n          inside: arg\n        },\n        argument: {\n          pattern: RegExp(symbol),\n          alias: 'variable'\n        },\n        punctuation: /[()]/\n      }\n    }\n    language['lambda'].inside.arguments = arglist\n    language['defun'].inside.arguments = Prism.util.clone(arglist)\n    language['defun'].inside.arguments.inside.sublist = arglist\n    Prism.languages.lisp = language\n    Prism.languages.elisp = language\n    Prism.languages.emacs = language\n    Prism.languages['emacs-lisp'] = language\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = livescript\nlivescript.displayName = 'livescript'\nlivescript.aliases = []\nfunction livescript(Prism) {\n  Prism.languages.livescript = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    ],\n    'interpolated-string': {\n      /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n      pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n          lookbehind: true\n        },\n        interpolation: {\n          pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^#\\{|\\}$/,\n              alias: 'variable'\n            } // See rest below\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    string: [\n      {\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      {\n        pattern: /<\\[[\\s\\S]*?\\]>/,\n        greedy: true\n      },\n      /\\\\[^\\s,;\\])}]+/\n    ],\n    regex: [\n      {\n        pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n        greedy: true,\n        inside: {\n          comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        }\n      },\n      {\n        pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n        greedy: true\n      }\n    ],\n    keyword: {\n      pattern:\n        /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n      lookbehind: true\n    },\n    'keyword-operator': {\n      pattern:\n        /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    boolean: {\n      pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n      lookbehind: true\n    },\n    argument: {\n      // Don't match .&. nor &&\n      pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n    identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n    operator: [\n      // Spaced .\n      {\n        pattern: /( )\\.(?= )/,\n        lookbehind: true\n      }, // Full list, in order:\n      // .= .~ .. ...\n      // .&. .^. .<<. .>>. .>>>.\n      // := :: ::=\n      // &&\n      // || |>\n      // < << <<< <<<<\n      // <- <-- <-! <--!\n      // <~ <~~ <~! <~~!\n      // <| <= <?\n      // > >> >= >?\n      // - -- -> -->\n      // + ++\n      // @ @@\n      // % %%\n      // * **\n      // ! != !~=\n      // !~> !~~>\n      // !-> !-->\n      // ~ ~> ~~> ~=\n      // = ==\n      // ^ ^^\n      // / ?\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n    ],\n    punctuation: /[(){}\\[\\]|.,:;`]/\n  }\n  Prism.languages.livescript['interpolated-string'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.livescript\n}\n","'use strict'\n\nmodule.exports = llvm\nllvm.displayName = 'llvm'\nllvm.aliases = []\nfunction llvm(Prism) {\n  ;(function (Prism) {\n    Prism.languages.llvm = {\n      comment: /;.*/,\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      boolean: /\\b(?:true|false)\\b/,\n      variable: /[%@!#](?:(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+|\\d+)/i,\n      label: /(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+:/i,\n      type: {\n        pattern:\n          /\\b(?:double|float|fp128|half|i[1-9]\\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\\b/,\n        alias: 'class-name'\n      },\n      keyword: /\\b[a-z_][a-z_0-9]*\\b/,\n      number:\n        /[+-]?\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-Fa-f]+\\b|\\b0xK[\\dA-Fa-f]{20}\\b|\\b0x[ML][\\dA-Fa-f]{32}\\b|\\b0xH[\\dA-Fa-f]{4}\\b/,\n      punctuation: /[{}[\\];(),.!*=<>]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = log\nlog.displayName = 'log'\nlog.aliases = []\nfunction log(Prism) {\n  // This is a language definition for generic log files.\n  // Since there is no one log format, this language definition has to support all formats to some degree.\n  //\n  // Based on https://github.com/MTDL9/vim-log-highlighting\n  Prism.languages.log = {\n    string: {\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    exception: {\n      pattern:\n        /(^|[^\\w.])[a-z][\\w.]*(?:Exception|Error):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['javastacktrace', 'language-javastacktrace'],\n      inside: Prism.languages['javastacktrace'] || {\n        keyword: /\\bat\\b/,\n        function: /[a-z_][\\w$]*(?=\\()/,\n        punctuation: /[.:()]/\n      }\n    },\n    level: [\n      {\n        pattern:\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n        alias: ['error', 'important']\n      },\n      {\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n        alias: ['warning', 'important']\n      },\n      {\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n        alias: ['info', 'keyword']\n      },\n      {\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n        alias: ['debug', 'keyword']\n      },\n      {\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n        alias: ['trace', 'comment']\n      }\n    ],\n    property: {\n      pattern:\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n      lookbehind: true\n    },\n    separator: {\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    url: /\\b(?:https?|ftp|file):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n    email: {\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n      lookbehind: true,\n      alias: 'url'\n    },\n    'ip-address': {\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/i,\n      alias: 'constant'\n    },\n    'mac-address': {\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n      alias: 'constant'\n    },\n    domain: {\n      pattern:\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    uuid: {\n      pattern:\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n      alias: 'constant'\n    },\n    hash: {\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n      alias: 'constant'\n    },\n    'file-path': {\n      pattern:\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string'\n    },\n    date: {\n      pattern: RegExp(\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n          '|' +\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)[-/ ]\\d{2,4}T?\\b/\n            .source +\n          '|' +\n          /\\b(?:(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun)(?:\\s{1,2}(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec))?|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s{1,2}\\d{1,2}\\b/\n            .source,\n        'i'\n      ),\n      alias: 'number'\n    },\n    time: {\n      pattern:\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n      alias: 'number'\n    },\n    boolean: /\\b(?:true|false|null)\\b/i,\n    number: {\n      pattern:\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n      lookbehind: true\n    },\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n    punctuation: /[\\[\\].,]/\n  }\n}\n","'use strict'\n\nmodule.exports = lolcode\nlolcode.displayName = 'lolcode'\nlolcode.aliases = []\nfunction lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\":])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [\n      {\n        pattern:\n          /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      /'Z(?=\\s|,|$)/\n    ],\n    boolean: {\n      pattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern:\n        /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|…|,|!/\n  }\n}\n","'use strict'\n\nmodule.exports = lua\nlua.displayName = 'lua'\nlua.aliases = []\nfunction lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern:\n        /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number:\n      /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword:\n      /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n      {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  }\n}\n","'use strict'\n\nmodule.exports = magma\nmagma.displayName = 'magma'\nmagma.aliases = []\nfunction magma(Prism) {\n  Prism.languages.magma = {\n    output: {\n      pattern:\n        /^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    // http://magma.maths.usyd.edu.au/magma/handbook/text/82\n    keyword:\n      /\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    generator: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*<)/i,\n      alias: 'class-name'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    operator: /->|[-+*/^~!|#=]|:=|\\.\\./,\n    punctuation: /[()[\\]{}<>,;.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = makefile\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\nfunction makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    // Built-in target names\n    builtin: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    // Targets\n    symbol: {\n      pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n      inside: {\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    keyword: [\n      // Directives\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n      {\n        pattern:\n          /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n        lookbehind: true\n      }\n    ],\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = markdown\nmarkdown.displayName = 'markdown'\nmarkdown.aliases = ['md']\nfunction markdown(Prism) {\n  ;(function (Prism) {\n    // Allow only one line break\n    var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source\n    /**\n     * This function is intended for the creation of the bold or italic pattern.\n     *\n     * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n     *\n     * _Note:_ Keep in mind that this adds a capturing group.\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function createInline(pattern) {\n      pattern = pattern.replace(/<inner>/g, function () {\n        return inner\n      })\n      return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')')\n    }\n    var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/\n      .source\n    var tableRow =\n      /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(\n        /__/g,\n        function () {\n          return tableCell\n        }\n      )\n    var tableLine =\n      /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/\n        .source\n    Prism.languages.markdown = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore('markdown', 'prolog', {\n      'front-matter-block': {\n        pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^---|---$/,\n          'font-matter': {\n            pattern: /\\S+(?:\\s+\\S+)*/,\n            alias: ['yaml', 'language-yaml'],\n            inside: Prism.languages.yaml\n          }\n        }\n      },\n      blockquote: {\n        // > ...\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: 'punctuation'\n      },\n      table: {\n        pattern: RegExp(\n          '^' + tableRow + tableLine + '(?:' + tableRow + ')*',\n          'm'\n        ),\n        inside: {\n          'table-data-rows': {\n            pattern: RegExp(\n              '^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'\n            ),\n            lookbehind: true,\n            inside: {\n              'table-data': {\n                pattern: RegExp(tableCell),\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          },\n          'table-line': {\n            pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n            lookbehind: true,\n            inside: {\n              punctuation: /\\||:?-{3,}:?/\n            }\n          },\n          'table-header-row': {\n            pattern: RegExp('^' + tableRow + '$'),\n            inside: {\n              'table-header': {\n                pattern: RegExp(tableCell),\n                alias: 'important',\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          }\n        }\n      },\n      code: [\n        {\n          // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n          pattern:\n            /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        {\n          // ```optional language\n          // code block\n          // ```\n          pattern: /^```[\\s\\S]*?^```$/m,\n          greedy: true,\n          inside: {\n            'code-block': {\n              pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n              lookbehind: true\n            },\n            'code-language': {\n              pattern: /^(```).+/,\n              lookbehind: true\n            },\n            punctuation: /```/\n          }\n        }\n      ],\n      title: [\n        {\n          // title 1\n          // =======\n          // title 2\n          // -------\n          pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n          alias: 'important',\n          inside: {\n            punctuation: /==+$|--+$/\n          }\n        },\n        {\n          // # title 1\n          // ###### title 6\n          pattern: /(^\\s*)#.+/m,\n          lookbehind: true,\n          alias: 'important',\n          inside: {\n            punctuation: /^#+|#+$/\n          }\n        }\n      ],\n      hr: {\n        // ***\n        // ---\n        // * * *\n        // -----------\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      list: {\n        // * item\n        // + item\n        // - item\n        // 1. item\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern:\n          /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string:\n            /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: 'url'\n      },\n      bold: {\n        // **strong**\n        // __strong__\n        // allow one nested instance of italic text using the same delimiter\n        pattern: createInline(\n          /\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^..)[\\s\\S]+(?=..$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /\\*\\*|__/\n        }\n      },\n      italic: {\n        // *em*\n        // _em_\n        // allow one nested instance of bold text using the same delimiter\n        pattern: createInline(\n          /\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^.)[\\s\\S]+(?=.$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /[*_]/\n        }\n      },\n      strike: {\n        // ~~strike through~~\n        // ~strike~\n        // eslint-disable-next-line regexp/strict\n        pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /~~?/\n        }\n      },\n      'code-snippet': {\n        // `code`\n        // ``code``\n        pattern:\n          /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n        lookbehind: true,\n        greedy: true,\n        alias: ['code', 'keyword']\n      },\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example][id]\n        // [example] [id]\n        pattern: createInline(\n          /!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          operator: /^!/,\n          content: {\n            pattern: /(^\\[)[^\\]]+(?=\\])/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          variable: {\n            pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          url: {\n            pattern: /(^\\]\\()[^\\s)]+/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n            lookbehind: true\n          }\n        }\n      }\n    })\n    ;['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n      ;['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (\n        inside\n      ) {\n        if (token !== inside) {\n          Prism.languages.markdown[token].inside.content.inside[inside] =\n            Prism.languages.markdown[inside]\n        }\n      })\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'markdown' && env.language !== 'md') {\n        return\n      }\n      function walkTokens(tokens) {\n        if (!tokens || typeof tokens === 'string') {\n          return\n        }\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (token.type !== 'code') {\n            walkTokens(token.content)\n            continue\n          }\n          /*\n           * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n           * is optional. But the grammar is defined so that there is only one case we have to handle:\n           *\n           * token.content = [\n           *     <span class=\"punctuation\">```</span>,\n           *     <span class=\"code-language\">xxxx</span>,\n           *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n           *     <span class=\"code-block\">...</span>,\n           *     '\\n', // exactly one new lines again\n           *     <span class=\"punctuation\">```</span>\n           * ];\n           */\n          var codeLang = token.content[1]\n          var codeBlock = token.content[3]\n          if (\n            codeLang &&\n            codeBlock &&\n            codeLang.type === 'code-language' &&\n            codeBlock.type === 'code-block' &&\n            typeof codeLang.content === 'string'\n          ) {\n            // this might be a language that Prism does not support\n            // do some replacements to support C++, C#, and F#\n            var lang = codeLang.content\n              .replace(/\\b#/g, 'sharp')\n              .replace(/\\b\\+\\+/g, 'pp') // only use the first word\n            lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase()\n            var alias = 'language-' + lang // add alias\n            if (!codeBlock.alias) {\n              codeBlock.alias = [alias]\n            } else if (typeof codeBlock.alias === 'string') {\n              codeBlock.alias = [codeBlock.alias, alias]\n            } else {\n              codeBlock.alias.push(alias)\n            }\n          }\n        }\n      }\n      walkTokens(env.tokens)\n    })\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type !== 'code-block') {\n        return\n      }\n      var codeLang = ''\n      for (var i = 0, l = env.classes.length; i < l; i++) {\n        var cls = env.classes[i]\n        var match = /language-(.+)/.exec(cls)\n        if (match) {\n          codeLang = match[1]\n          break\n        }\n      }\n      var grammar = Prism.languages[codeLang]\n      if (!grammar) {\n        if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n          var id =\n            'md-' +\n            new Date().valueOf() +\n            '-' +\n            Math.floor(Math.random() * 1e16)\n          env.attributes['id'] = id\n          Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n            var ele = document.getElementById(id)\n            if (ele) {\n              ele.innerHTML = Prism.highlight(\n                ele.textContent,\n                Prism.languages[codeLang],\n                codeLang\n              )\n            }\n          })\n        }\n      } else {\n        env.content = Prism.highlight(\n          textContent(env.content.value),\n          grammar,\n          codeLang\n        )\n      }\n    })\n    var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi')\n    /**\n     * A list of known entity names.\n     *\n     * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n     *\n     * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n     */\n    var KNOWN_ENTITY_NAMES = {\n      amp: '&',\n      lt: '<',\n      gt: '>',\n      quot: '\"'\n    } // IE 11 doesn't support `String.fromCodePoint`\n    var fromCodePoint = String.fromCodePoint || String.fromCharCode\n    /**\n     * Returns the text content of a given HTML source code string.\n     *\n     * @param {string} html\n     * @returns {string}\n     */\n    function textContent(html) {\n      // remove all tags\n      var text = html.replace(tagPattern, '') // decode known entities\n      text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n        code = code.toLowerCase()\n        if (code[0] === '#') {\n          var value\n          if (code[1] === 'x') {\n            value = parseInt(code.slice(2), 16)\n          } else {\n            value = Number(code.slice(1))\n          }\n          return fromCodePoint(value)\n        } else {\n          var known = KNOWN_ENTITY_NAMES[code]\n          if (known) {\n            return known\n          } // unable to decode\n          return m\n        }\n      })\n      return text\n    }\n    Prism.languages.md = Prism.languages.markdown\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = markupTemplating\nmarkupTemplating.displayName = 'markupTemplating'\nmarkupTemplating.aliases = []\nfunction markupTemplating(Prism) {\n  ;(function (Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___'\n    }\n    Object.defineProperties((Prism.languages['markup-templating'] = {}), {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function (env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return\n          }\n          var tokenStack = (env.tokenStack = [])\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match\n            }\n            var i = tokenStack.length\n            var placeholder // Check for existing strings\n            while (\n              env.code.indexOf((placeholder = getPlaceholder(language, i))) !==\n              -1\n            ) {\n              ++i\n            } // Create a sparse array\n            tokenStack[i] = match\n            return placeholder\n          }) // Switch the grammar to markup\n          env.grammar = Prism.languages.markup\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function (env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return\n          } // Switch the grammar back\n          env.grammar = Prism.languages[language]\n          var j = 0\n          var keys = Object.keys(env.tokenStack)\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break\n              }\n              var token = tokens[i]\n              if (\n                typeof token === 'string' ||\n                (token.content && typeof token.content === 'string')\n              ) {\n                var k = keys[j]\n                var t = env.tokenStack[k]\n                var s = typeof token === 'string' ? token : token.content\n                var placeholder = getPlaceholder(language, k)\n                var index = s.indexOf(placeholder)\n                if (index > -1) {\n                  ++j\n                  var before = s.substring(0, index)\n                  var middle = new Prism.Token(\n                    language,\n                    Prism.tokenize(t, env.grammar),\n                    'language-' + language,\n                    t\n                  )\n                  var after = s.substring(index + placeholder.length)\n                  var replacement = []\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]))\n                  }\n                  replacement.push(middle)\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]))\n                  }\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                  } else {\n                    token.content = replacement\n                  }\n                }\n              } else if (\n                token.content\n                /* && typeof token.content !== 'string' */\n              ) {\n                walkTokens(token.content)\n              }\n            }\n            return tokens\n          }\n          walkTokens(env.tokens)\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = markup\nmarkup.displayName = 'markup'\nmarkup.aliases = ['html', 'mathml', 'svg', 'xml', 'ssml', 'atom', 'rss']\nfunction markup(Prism) {\n  Prism.languages.markup = {\n    comment: {\n      pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n      greedy: true\n    },\n    prolog: {\n      pattern: /<\\?[\\s\\S]+?\\?>/,\n      greedy: true\n    },\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern:\n        /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/i,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: {\n      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n      greedy: true\n    },\n    tag: {\n      pattern:\n        /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'special-attr': [],\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [\n              {\n                pattern: /^=/,\n                alias: 'attr-equals'\n              },\n              /\"|'/\n            ]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [\n      {\n        pattern: /&[\\da-z]{1,8};/i,\n        alias: 'named-entity'\n      },\n      /&#x?[\\da-f]{1,8};/i\n    ]\n  }\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.markup['entity']\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside =\n    Prism.languages.markup // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {}\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      }\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      }\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      }\n      var def = {}\n      def[tagName] = {\n        pattern: RegExp(\n          /(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\n            /__/g,\n            function () {\n              return tagName\n            }\n          ),\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      }\n      Prism.languages.insertBefore('markup', 'cdata', def)\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n    /**\n     * Adds an pattern to highlight languages embedded in HTML attributes.\n     *\n     * An example of an inlined language is CSS with `style` attributes.\n     *\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addAttribute('style', 'css');\n     */\n    value: function (attrName, lang) {\n      Prism.languages.markup.tag.inside['special-attr'].push({\n        pattern: RegExp(\n          /(^|[\"'\\s])/.source +\n            '(?:' +\n            attrName +\n            ')' +\n            /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n          'i'\n        ),\n        lookbehind: true,\n        inside: {\n          'attr-name': /^[^\\s=]+/,\n          'attr-value': {\n            pattern: /=[\\s\\S]+/,\n            inside: {\n              value: {\n                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                lookbehind: true,\n                alias: [lang, 'language-' + lang],\n                inside: Prism.languages[lang]\n              },\n              punctuation: [\n                {\n                  pattern: /^=/,\n                  alias: 'attr-equals'\n                },\n                /\"|'/\n              ]\n            }\n          }\n        }\n      })\n    }\n  })\n  Prism.languages.html = Prism.languages.markup\n  Prism.languages.mathml = Prism.languages.markup\n  Prism.languages.svg = Prism.languages.markup\n  Prism.languages.xml = Prism.languages.extend('markup', {})\n  Prism.languages.ssml = Prism.languages.xml\n  Prism.languages.atom = Prism.languages.xml\n  Prism.languages.rss = Prism.languages.xml\n}\n","'use strict'\n\nmodule.exports = matlab\nmatlab.displayName = 'matlab'\nmatlab.aliases = []\nfunction matlab(Prism) {\n  Prism.languages.matlab = {\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n    string: {\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    // FIXME We could handle imaginary numbers as a whole\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n    keyword:\n      /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n  }\n}\n","'use strict'\n\nmodule.exports = maxscript\nmaxscript.displayName = 'maxscript'\nmaxscript.aliases = []\nfunction maxscript(Prism) {\n  Prism.languages.maxscript = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    path: {\n      pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n      greedy: true,\n      alias: 'string'\n    },\n    'function-definition': {\n      pattern: /(\\b(?:function|fn)\\s+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    argument: {\n      pattern: /\\b[a-z_]\\w*(?=:)/i,\n      alias: 'attr-name'\n    },\n    keyword:\n      /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i,\n    boolean: /\\b(?:true|false|on|off)\\b/,\n    time: {\n      pattern:\n        /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    number: [\n      {\n        pattern:\n          /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n        lookbehind: true\n      },\n      /\\b(?:e|pi)\\b/\n    ],\n    constant: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/,\n    color: {\n      pattern: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/i,\n      alias: 'constant'\n    },\n    operator: /[-+*/<>=!]=?|[&^]|#(?!\\()/,\n    punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n  }\n}\n","'use strict'\n\nmodule.exports = mel\nmel.displayName = 'mel'\nmel.aliases = []\nfunction mel(Prism) {\n  Prism.languages.mel = {\n    comment: /\\/\\/.*/,\n    code: {\n      pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n      greedy: true,\n      alias: 'italic',\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        } // See rest below\n      }\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+/,\n    flag: {\n      pattern: /-[^\\d\\W]\\w*/,\n      alias: 'operator'\n    },\n    keyword:\n      /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n    function:\n      /\\b\\w+(?=\\()|\\b(?:about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|CBG|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|Mayatomr|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n    operator: [\n      /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,:;?\\[\\](){}]/\n  }\n  Prism.languages.mel['code'].inside.rest = Prism.languages.mel\n}\n","'use strict'\n\nmodule.exports = mermaid\nmermaid.displayName = 'mermaid'\nmermaid.aliases = []\nfunction mermaid(Prism) {\n  Prism.languages.mermaid = {\n    comment: {\n      pattern: /%%.*/,\n      greedy: true\n    },\n    style: {\n      pattern:\n        /^([ \\t]*(?:classDef|linkStyle|style)[ \\t]+[\\w$-]+[ \\t]+)\\w.*[^\\s;]/m,\n      lookbehind: true,\n      inside: {\n        property: /\\b\\w[\\w-]*(?=[ \\t]*:)/,\n        operator: /:/,\n        punctuation: /,/\n      }\n    },\n    'inter-arrow-label': {\n      pattern:\n        /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \\t]*(?:\"[^\"\\r\\n]*\"|[^\\s\".=-](?:[^\\r\\n.=-]*[^\\s.=-])?)[ \\t]*(?:\\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        arrow: {\n          pattern: /(?:\\.+->?|--+[->]|==+[=>])$/,\n          alias: 'operator'\n        },\n        label: {\n          pattern: /^([\\s\\S]{2}[ \\t]*)\\S(?:[\\s\\S]*\\S)?/,\n          lookbehind: true,\n          alias: 'property'\n        },\n        'arrow-head': {\n          pattern: /^\\S+/,\n          alias: ['arrow', 'operator']\n        }\n      }\n    },\n    arrow: [\n      // This might look complex but it really isn't.\n      // There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The\n      // problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow\n      // characters in the one lookbehind because that would create too many false negatives. So we have to split the\n      // arrows into different patterns.\n      {\n        // ER diagram\n        pattern: /(^|[^{}|o.-])[|}][|o](?:--|\\.\\.)[|o][|{](?![{}|o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // flow chart\n        // (?:==+|--+|-\\.*-)\n        pattern:\n          /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\\.*-)[>ox]?|(?:==+|--+|-\\.*-)[>ox]|===+|---+|-\\.+-)(?![<>ox.=-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // sequence diagram\n        pattern:\n          /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // class diagram\n        pattern:\n          /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\\|?(?:--|\\.\\.)|(?:--|\\.\\.)\\|?>|--|\\.\\.)(?![<>|*o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    ],\n    label: {\n      pattern: /(^|[^|<])\\|(?:[^\\r\\n\"|]|\"[^\"\\r\\n]*\")+\\|/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    text: {\n      pattern: /(?:[(\\[{]+|\\b>)(?:[^\\r\\n\"()\\[\\]{}]|\"[^\"\\r\\n]*\")+(?:[)\\]}]+|>)/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    annotation: {\n      pattern:\n        /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\\[\\[(?:choice|fork|join)\\]\\]/i,\n      alias: 'important'\n    },\n    keyword: [\n      // This language has both case-sensitive and case-insensitive keywords\n      {\n        pattern:\n          /(^[ \\t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\\w$-])/m,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern:\n          /(^[ \\t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \\t]+note)?|loop|opt|par|participant|rect|state|note[ \\t]+(?:over|(?:left|right)[ \\t]+of))(?![\\w$-])/im,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    entity: /#[a-z0-9]+;/,\n    operator: {\n      pattern: /(\\w[ \\t]*)&(?=[ \\t]*\\w)|:::|:/,\n      lookbehind: true\n    },\n    punctuation: /[(){};]/\n  }\n}\n","'use strict'\n\nmodule.exports = mizar\nmizar.displayName = 'mizar'\nmizar.aliases = []\nfunction mizar(Prism) {\n  Prism.languages.mizar = {\n    comment: /::.+/,\n    keyword:\n      /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,\n    parameter: {\n      pattern: /\\$(?:10|\\d)/,\n      alias: 'variable'\n    },\n    variable: /\\b\\w+(?=:)/,\n    number: /(?:\\b|-)\\d+\\b/,\n    operator: /\\.\\.\\.|->|&|\\.?=/,\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = mongodb\nmongodb.displayName = 'mongodb'\nmongodb.aliases = []\nfunction mongodb(Prism) {\n  ;(function (Prism) {\n    var operators = [\n      // query and projection\n      '$eq',\n      '$gt',\n      '$gte',\n      '$in',\n      '$lt',\n      '$lte',\n      '$ne',\n      '$nin',\n      '$and',\n      '$not',\n      '$nor',\n      '$or',\n      '$exists',\n      '$type',\n      '$expr',\n      '$jsonSchema',\n      '$mod',\n      '$regex',\n      '$text',\n      '$where',\n      '$geoIntersects',\n      '$geoWithin',\n      '$near',\n      '$nearSphere',\n      '$all',\n      '$elemMatch',\n      '$size',\n      '$bitsAllClear',\n      '$bitsAllSet',\n      '$bitsAnyClear',\n      '$bitsAnySet',\n      '$comment',\n      '$elemMatch',\n      '$meta',\n      '$slice', // update\n      '$currentDate',\n      '$inc',\n      '$min',\n      '$max',\n      '$mul',\n      '$rename',\n      '$set',\n      '$setOnInsert',\n      '$unset',\n      '$addToSet',\n      '$pop',\n      '$pull',\n      '$push',\n      '$pullAll',\n      '$each',\n      '$position',\n      '$slice',\n      '$sort',\n      '$bit', // aggregation pipeline stages\n      '$addFields',\n      '$bucket',\n      '$bucketAuto',\n      '$collStats',\n      '$count',\n      '$currentOp',\n      '$facet',\n      '$geoNear',\n      '$graphLookup',\n      '$group',\n      '$indexStats',\n      '$limit',\n      '$listLocalSessions',\n      '$listSessions',\n      '$lookup',\n      '$match',\n      '$merge',\n      '$out',\n      '$planCacheStats',\n      '$project',\n      '$redact',\n      '$replaceRoot',\n      '$replaceWith',\n      '$sample',\n      '$set',\n      '$skip',\n      '$sort',\n      '$sortByCount',\n      '$unionWith',\n      '$unset',\n      '$unwind', // aggregation pipeline operators\n      '$abs',\n      '$accumulator',\n      '$acos',\n      '$acosh',\n      '$add',\n      '$addToSet',\n      '$allElementsTrue',\n      '$and',\n      '$anyElementTrue',\n      '$arrayElemAt',\n      '$arrayToObject',\n      '$asin',\n      '$asinh',\n      '$atan',\n      '$atan2',\n      '$atanh',\n      '$avg',\n      '$binarySize',\n      '$bsonSize',\n      '$ceil',\n      '$cmp',\n      '$concat',\n      '$concatArrays',\n      '$cond',\n      '$convert',\n      '$cos',\n      '$dateFromParts',\n      '$dateToParts',\n      '$dateFromString',\n      '$dateToString',\n      '$dayOfMonth',\n      '$dayOfWeek',\n      '$dayOfYear',\n      '$degreesToRadians',\n      '$divide',\n      '$eq',\n      '$exp',\n      '$filter',\n      '$first',\n      '$floor',\n      '$function',\n      '$gt',\n      '$gte',\n      '$hour',\n      '$ifNull',\n      '$in',\n      '$indexOfArray',\n      '$indexOfBytes',\n      '$indexOfCP',\n      '$isArray',\n      '$isNumber',\n      '$isoDayOfWeek',\n      '$isoWeek',\n      '$isoWeekYear',\n      '$last',\n      '$last',\n      '$let',\n      '$literal',\n      '$ln',\n      '$log',\n      '$log10',\n      '$lt',\n      '$lte',\n      '$ltrim',\n      '$map',\n      '$max',\n      '$mergeObjects',\n      '$meta',\n      '$min',\n      '$millisecond',\n      '$minute',\n      '$mod',\n      '$month',\n      '$multiply',\n      '$ne',\n      '$not',\n      '$objectToArray',\n      '$or',\n      '$pow',\n      '$push',\n      '$radiansToDegrees',\n      '$range',\n      '$reduce',\n      '$regexFind',\n      '$regexFindAll',\n      '$regexMatch',\n      '$replaceOne',\n      '$replaceAll',\n      '$reverseArray',\n      '$round',\n      '$rtrim',\n      '$second',\n      '$setDifference',\n      '$setEquals',\n      '$setIntersection',\n      '$setIsSubset',\n      '$setUnion',\n      '$size',\n      '$sin',\n      '$slice',\n      '$split',\n      '$sqrt',\n      '$stdDevPop',\n      '$stdDevSamp',\n      '$strcasecmp',\n      '$strLenBytes',\n      '$strLenCP',\n      '$substr',\n      '$substrBytes',\n      '$substrCP',\n      '$subtract',\n      '$sum',\n      '$switch',\n      '$tan',\n      '$toBool',\n      '$toDate',\n      '$toDecimal',\n      '$toDouble',\n      '$toInt',\n      '$toLong',\n      '$toObjectId',\n      '$toString',\n      '$toLower',\n      '$toUpper',\n      '$trim',\n      '$trunc',\n      '$type',\n      '$week',\n      '$year',\n      '$zip', // aggregation pipeline query modifiers\n      '$comment',\n      '$explain',\n      '$hint',\n      '$max',\n      '$maxTimeMS',\n      '$min',\n      '$orderby',\n      '$query',\n      '$returnKey',\n      '$showDiskLoc',\n      '$natural'\n    ]\n    var builtinFunctions = [\n      'ObjectId',\n      'Code',\n      'BinData',\n      'DBRef',\n      'Timestamp',\n      'NumberLong',\n      'NumberDecimal',\n      'MaxKey',\n      'MinKey',\n      'RegExp',\n      'ISODate',\n      'UUID'\n    ]\n    operators = operators.map(function (operator) {\n      return operator.replace('$', '\\\\$')\n    })\n    var operatorsSource = '(?:' + operators.join('|') + ')\\\\b'\n    Prism.languages.mongodb = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('mongodb', 'string', {\n      property: {\n        pattern:\n          /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n        greedy: true,\n        inside: {\n          keyword: RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\n        }\n      }\n    })\n    Prism.languages.mongodb.string.inside = {\n      url: {\n        // url pattern\n        pattern:\n          /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n        greedy: true\n      },\n      entity: {\n        // ipv4\n        pattern:\n          /\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b/,\n        greedy: true\n      }\n    }\n    Prism.languages.insertBefore('mongodb', 'constant', {\n      builtin: {\n        pattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\n        alias: 'keyword'\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = monkey\nmonkey.displayName = 'monkey'\nmonkey.aliases = []\nfunction monkey(Prism) {\n  Prism.languages.monkey = {\n    string: /\"[^\"\\r\\n]*\"/,\n    comment: [\n      {\n        pattern: /^#Rem\\s[\\s\\S]*?^#End/im,\n        greedy: true\n      },\n      {\n        pattern: /'.+/,\n        greedy: true\n      }\n    ],\n    preprocessor: {\n      pattern: /(^[ \\t]*)#.+/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    function: /\\b\\w+(?=\\()/,\n    'type-char': {\n      pattern: /(\\w)[?%#$]/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: {\n      pattern:\n        /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,\n    operator:\n      /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[.,:;()\\[\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = moonscript\nmoonscript.displayName = 'moonscript'\nmoonscript.aliases = ['moon']\nfunction moonscript(Prism) {\n  Prism.languages.moonscript = {\n    comment: /--.*/,\n    string: [\n      {\n        pattern: /'[^']*'|\\[(=*)\\[[\\s\\S]*?\\]\\1\\]/,\n        greedy: true\n      },\n      {\n        pattern: /\"[^\"]*\"/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /#\\{[^{}]*\\}/,\n            inside: {\n              moonscript: {\n                pattern: /(^#\\{)[\\s\\S]+(?=\\})/,\n                lookbehind: true,\n                inside: null // see beow\n              },\n              'interpolation-punctuation': {\n                pattern: /#\\{|\\}/,\n                alias: 'punctuation'\n              }\n            }\n          }\n        }\n      }\n    ],\n    'class-name': [\n      {\n        pattern: /(\\b(?:class|extends)[ \\t]+)\\w+/,\n        lookbehind: true\n      }, // class-like names start with a capital letter\n      /\\b[A-Z]\\w*/\n    ],\n    keyword:\n      /\\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\\b/,\n    variable: /@@?\\w*/,\n    property: {\n      pattern: /\\b(?!\\d)\\w+(?=:)|(:)(?!\\d)\\w+/,\n      lookbehind: true\n    },\n    function: {\n      pattern:\n        /\\b(?:_G|_VERSION|assert|collectgarbage|coroutine\\.(?:running|create|resume|status|wrap|yield)|debug\\.(?:debug|gethook|getinfo|getlocal|getupvalue|setlocal|setupvalue|sethook|traceback|getfenv|getmetatable|getregistry|setfenv|setmetatable)|dofile|error|getfenv|getmetatable|io\\.(?:stdin|stdout|stderr|close|flush|input|lines|open|output|popen|read|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\\.(?:abs|acos|asin|atan|atan2|ceil|sin|cos|tan|deg|exp|floor|log|log10|max|min|fmod|modf|cosh|sinh|tanh|pow|rad|sqrt|frexp|ldexp|random|randomseed|pi)|module|next|os\\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\\.(?:byte|char|dump|find|len|lower|rep|sub|upper|format|gsub|gmatch|match|reverse)|table\\.(?:maxn|concat|sort|insert|remove)|tonumber|tostring|type|unpack|xpcall)\\b/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\B\\.\\d+|\\b\\d+\\.\\d+|\\b\\d+(?=[eE]))(?:[eE][-+]?\\d+)?\\b|\\b(?:0x[a-fA-F\\d]+|\\d+)(?:U?LL)?\\b/,\n    operator:\n      /\\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\\.\\.)=?|[:#^]|\\b(?:and|or)\\b=?|\\b(?:not)\\b/,\n    punctuation: /[.,()[\\]{}\\\\]/\n  }\n  Prism.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside =\n    Prism.languages.moonscript\n  Prism.languages.moon = Prism.languages.moonscript\n}\n","'use strict'\n\nmodule.exports = n1ql\nn1ql.displayName = 'n1ql'\nn1ql.aliases = []\nfunction n1ql(Prism) {\n  Prism.languages.n1ql = {\n    comment: /\\/\\*[\\s\\S]*?(?:$|\\*\\/)/,\n    parameter: /\\$[\\w.]+/,\n    string: {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n      greedy: true\n    },\n    function:\n      /\\b(?:ABS|ACOS|ARRAY_AGG|ARRAY_APPEND|ARRAY_AVG|ARRAY_CONCAT|ARRAY_CONTAINS|ARRAY_COUNT|ARRAY_DISTINCT|ARRAY_FLATTEN|ARRAY_IFNULL|ARRAY_INSERT|ARRAY_INTERSECT|ARRAY_LENGTH|ARRAY_MAX|ARRAY_MIN|ARRAY_POSITION|ARRAY_PREPEND|ARRAY_PUT|ARRAY_RANGE|ARRAY_REMOVE|ARRAY_REPEAT|ARRAY_REPLACE|ARRAY_REVERSE|ARRAY_SORT|ARRAY_STAR|ARRAY_SUM|ARRAY_SYMDIFF|ARRAY_SYMDIFFN|ARRAY_UNION|ASIN|ATAN|ATAN2|AVG|BASE64|BASE64_DECODE|BASE64_ENCODE|BITAND|BITCLEAR|BITNOT|BITOR|BITSET|BITSHIFT|BITTEST|BITXOR|CEIL|CLOCK_LOCAL|CLOCK_MILLIS|CLOCK_STR|CLOCK_TZ|CLOCK_UTC|CONTAINS|CONTAINS_TOKEN|CONTAINS_TOKEN_LIKE|CONTAINS_TOKEN_REGEXP|COS|COUNT|CURL|DATE_ADD_MILLIS|DATE_ADD_STR|DATE_DIFF_MILLIS|DATE_DIFF_STR|DATE_FORMAT_STR|DATE_PART_MILLIS|DATE_PART_STR|DATE_RANGE_MILLIS|DATE_RANGE_STR|DATE_TRUNC_MILLIS|DATE_TRUNC_STR|DECODE_JSON|DEGREES|DURATION_TO_STR|E|ENCODED_SIZE|ENCODE_JSON|EXP|FLOOR|GREATEST|HAS_TOKEN|IFINF|IFMISSING|IFMISSINGORNULL|IFNAN|IFNANORINF|IFNULL|INITCAP|ISARRAY|ISATOM|ISBOOLEAN|ISNUMBER|ISOBJECT|ISSTRING|IsBitSET|LEAST|LENGTH|LN|LOG|LOWER|LTRIM|MAX|META|MILLIS|MILLIS_TO_LOCAL|MILLIS_TO_STR|MILLIS_TO_TZ|MILLIS_TO_UTC|MILLIS_TO_ZONE_NAME|MIN|MISSINGIF|NANIF|NEGINFIF|NOW_LOCAL|NOW_MILLIS|NOW_STR|NOW_TZ|NOW_UTC|NULLIF|OBJECT_ADD|OBJECT_CONCAT|OBJECT_INNER_PAIRS|OBJECT_INNER_VALUES|OBJECT_LENGTH|OBJECT_NAMES|OBJECT_PAIRS|OBJECT_PUT|OBJECT_REMOVE|OBJECT_RENAME|OBJECT_REPLACE|OBJECT_UNWRAP|OBJECT_VALUES|PAIRS|PI|POLY_LENGTH|POSINFIF|POSITION|POWER|RADIANS|RANDOM|REGEXP_CONTAINS|REGEXP_LIKE|REGEXP_POSITION|REGEXP_REPLACE|REPEAT|REPLACE|REVERSE|ROUND|RTRIM|SIGN|SIN|SPLIT|SQRT|STR_TO_DURATION|STR_TO_MILLIS|STR_TO_TZ|STR_TO_UTC|STR_TO_ZONE_NAME|SUBSTR|SUFFIXES|SUM|TAN|TITLE|TOARRAY|TOATOM|TOBOOLEAN|TOKENS|TONUMBER|TOOBJECT|TOSTRING|TRIM|TRUNC|TYPE|UPPER|WEEKDAY_MILLIS|WEEKDAY_STR)(?=\\s*\\()/i,\n    keyword:\n      /\\b(?:ALL|ALTER|ANALYZE|AS|ASC|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|CONNECT|CONTINUE|CORRELATE|COVER|CREATE|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FLATTEN|FOR|FORCE|FROM|FUNCTION|GRANT|GROUP|GSI|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LAST|LEFT|LET|LETTING|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NULL|NUMBER|OBJECT|OFFSET|ON|OPTION|ORDER|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROCEDURE|PUBLIC|RAW|REALM|REDUCE|RENAME|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|SATISFIES|SCHEMA|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TO|TRANSACTION|TRIGGER|TRUNCATE|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WITH|WORK|XOR)\\b/i,\n    boolean: /\\b(?:TRUE|FALSE)\\b/i,\n    number: /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n    punctuation: /[;[\\](),.{}:]/\n  }\n}\n","'use strict'\n\nmodule.exports = n4js\nn4js.displayName = 'n4js'\nn4js.aliases = ['n4jsd']\nfunction n4js(Prism) {\n  Prism.languages.n4js = Prism.languages.extend('javascript', {\n    // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n    keyword:\n      /\\b(?:any|Array|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n  })\n  Prism.languages.insertBefore('n4js', 'constant', {\n    // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n    annotation: {\n      pattern: /@+\\w+/,\n      alias: 'operator'\n    }\n  })\n  Prism.languages.n4jsd = Prism.languages.n4js\n}\n","'use strict'\n\nmodule.exports = nand2tetrisHdl\nnand2tetrisHdl.displayName = 'nand2tetrisHdl'\nnand2tetrisHdl.aliases = []\nfunction nand2tetrisHdl(Prism) {\n  Prism.languages['nand2tetris-hdl'] = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    keyword: /\\b(?:CHIP|IN|OUT|PARTS|BUILTIN|CLOCKED)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    function: /\\b[A-Za-z][A-Za-z0-9]*(?=\\()/,\n    number: /\\b\\d+\\b/,\n    operator: /=|\\.\\./,\n    punctuation: /[{}[\\];(),:]/\n  }\n}\n","'use strict'\n\nmodule.exports = naniscript\nnaniscript.displayName = 'naniscript'\nnaniscript.aliases = []\nfunction naniscript(Prism) {\n  ;(function (Prism) {\n    var expressionDef = /\\{[^\\r\\n\\[\\]{}]*\\}/\n    var params = {\n      'quoted-string': {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        alias: 'operator'\n      },\n      'command-param-id': {\n        pattern: /(\\s)\\w+:/,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'command-param-value': [\n        {\n          pattern: expressionDef,\n          alias: 'selector'\n        },\n        {\n          pattern: /([\\t ])\\S+/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'operator'\n        },\n        {\n          pattern: /\\S(?:.*\\S)?/,\n          alias: 'operator'\n        }\n      ]\n    }\n    Prism.languages.naniscript = {\n      // ; ...\n      comment: {\n        pattern: /^([\\t ]*);.*/m,\n        lookbehind: true\n      },\n      // > ...\n      // Define is a control line starting with '>' followed by a word, a space and a text.\n      define: {\n        pattern: /^>.+/m,\n        alias: 'tag',\n        inside: {\n          value: {\n            pattern: /(^>\\w+[\\t ]+)(?!\\s)[^{}\\r\\n]+/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          key: {\n            pattern: /(^>)\\w+/,\n            lookbehind: true\n          }\n        }\n      },\n      // # ...\n      label: {\n        pattern: /^([\\t ]*)#[\\t ]*\\w+[\\t ]*$/m,\n        lookbehind: true,\n        alias: 'regex'\n      },\n      command: {\n        pattern: /^([\\t ]*)@\\w+(?=[\\t ]|$).*/m,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          'command-name': /^@\\w+/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'command-params': {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            inside: params\n          }\n        }\n      },\n      // Generic is any line that doesn't start with operators: ;>#@\n      'generic-text': {\n        pattern: /(^[ \\t]*)[^#@>;\\s].*/m,\n        lookbehind: true,\n        alias: 'punctuation',\n        inside: {\n          // \\{ ... \\} ... \\[ ... \\] ... \\\"\n          'escaped-char': /\\\\[{}\\[\\]\"]/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'inline-command': {\n            pattern: /\\[[\\t ]*\\w[^\\r\\n\\[\\]]*\\]/,\n            greedy: true,\n            alias: 'function',\n            inside: {\n              'command-params': {\n                pattern: /(^\\[[\\t ]*\\w+\\b)[\\s\\S]+(?=\\]$)/,\n                lookbehind: true,\n                inside: params\n              },\n              'command-param-name': {\n                pattern: /^(\\[[\\t ]*)\\w+/,\n                lookbehind: true,\n                alias: 'name'\n              },\n              'start-stop-char': /[\\[\\]]/\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.nani = Prism.languages['naniscript']\n    /** @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token */\n    /**\n     * This hook is used to validate generic-text tokens for balanced brackets.\n     * Mark token as bad-line when contains not balanced brackets: {},[]\n     */\n    Prism.hooks.add('after-tokenize', function (env) {\n      /** @type {(Token | string)[]} */\n      var tokens = env.tokens\n      tokens.forEach(function (token) {\n        if (typeof token !== 'string' && token.type === 'generic-text') {\n          var content = getTextContent(token)\n          if (!isBracketsBalanced(content)) {\n            token.type = 'bad-line'\n            token.content = content\n          }\n        }\n      })\n    })\n    /**\n     * @param {string} input\n     * @returns {boolean}\n     */\n    function isBracketsBalanced(input) {\n      var brackets = '[]{}'\n      var stack = []\n      for (var i = 0; i < input.length; i++) {\n        var bracket = input[i]\n        var bracketsIndex = brackets.indexOf(bracket)\n        if (bracketsIndex !== -1) {\n          if (bracketsIndex % 2 === 0) {\n            stack.push(bracketsIndex + 1)\n          } else if (stack.pop() !== bracketsIndex) {\n            return false\n          }\n        }\n      }\n      return stack.length === 0\n    }\n    /**\n     * @param {string | Token | (string | Token)[]} token\n     * @returns {string}\n     */\n    function getTextContent(token) {\n      if (typeof token === 'string') {\n        return token\n      } else if (Array.isArray(token)) {\n        return token.map(getTextContent).join('')\n      } else {\n        return getTextContent(token.content)\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = nasm\nnasm.displayName = 'nasm'\nnasm.aliases = []\nfunction nasm(Prism) {\n  Prism.languages.nasm = {\n    comment: /;.*$/m,\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    label: {\n      pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: [\n      /\\[?BITS (?:16|32|64)\\]?/,\n      {\n        pattern: /(^\\s*)section\\s*[a-z.]+:?/im,\n        lookbehind: true\n      },\n      /(?:extern|global)[^;\\r\\n]*/i,\n      /(?:CPU|FLOAT|DEFAULT).*$/m\n    ],\n    register: {\n      pattern:\n        /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s)\\b/i,\n      alias: 'variable'\n    },\n    number:\n      /(?:\\b|(?=\\$))(?:0[hx](?:\\.[\\da-f]+|[\\da-f]+(?:\\.[\\da-f]+)?)(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n    operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n  }\n}\n","'use strict'\n\nmodule.exports = neon\nneon.displayName = 'neon'\nneon.aliases = []\nfunction neon(Prism) {\n  Prism.languages.neon = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    datetime: {\n      pattern:\n        /(^|[[{(=:,\\s])\\d\\d\\d\\d-\\d\\d?-\\d\\d?(?:(?:[Tt]| +)\\d\\d?:\\d\\d:\\d\\d(?:\\.\\d*)? *(?:Z|[-+]\\d\\d?(?::?\\d\\d)?)?)?(?=$|[\\]}),\\s])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    key: {\n      pattern: /(^|[[{(,\\s])[^,:=[\\]{}()'\"\\s]+(?=\\s*:(?:$|[\\]}),\\s])|\\s*=)/,\n      lookbehind: true,\n      alias: 'atrule'\n    },\n    number: {\n      pattern:\n        /(^|[[{(=:,\\s])[+-]?(?:0x[\\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:[eE][+-]?\\d+)?)(?=$|[\\]}),:=\\s])/,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[[{(=:,\\s])(?:true|false|yes|no)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true\n    },\n    null: {\n      pattern: /(^|[[{(=:,\\s])(?:null)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    string: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:('''|\"\"\")\\r?\\n(?:(?:[^\\r\\n]|\\r?\\n(?![\\t ]*\\2))*\\r?\\n)?[\\t ]*\\2|'[^'\\r\\n]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    literal: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:[^#\"',:=[\\]{}()\\s`-]|[:-][^\"',=[\\]{}()\\s])(?:[^,:=\\]})(\\s]|:(?![\\s,\\]})]|$)|[ \\t]+[^#,:=\\]})(\\s])*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    punctuation: /[,:=[\\]{}()-]/\n  }\n}\n","'use strict'\n\nmodule.exports = nevod\nnevod.displayName = 'nevod'\nnevod.aliases = []\nfunction nevod(Prism) {\n  Prism.languages.nevod = {\n    comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n    string: {\n      pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n      greedy: true,\n      inside: {\n        'string-attrs': /!$|!\\*$|\\*$/\n      }\n    },\n    namespace: {\n      pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n      lookbehind: true\n    },\n    pattern: {\n      pattern:\n        /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      inside: {\n        'pattern-name': {\n          pattern: /^#?[a-zA-Z0-9\\-.]+/,\n          alias: 'class-name'\n        },\n        fields: {\n          pattern: /\\(.*\\)/,\n          inside: {\n            'field-name': {\n              pattern: /[a-zA-Z0-9\\-.]+/,\n              alias: 'variable'\n            },\n            punctuation: /[,()]/,\n            operator: {\n              pattern: /~/,\n              alias: 'field-hidden-mark'\n            }\n          }\n        }\n      }\n    },\n    search: {\n      pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n      alias: 'function',\n      lookbehind: true\n    },\n    keyword:\n      /@(?:require|namespace|pattern|search|inside|outside|having|where)\\b/,\n    'standard-pattern': {\n      pattern:\n        /\\b(?:Word|Punct|Symbol|Space|LineBreak|Start|End|Alpha|AlphaNum|Num|NumAlpha|Blank|WordBreak|Any)(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n      inside: {\n        'standard-pattern-name': {\n          pattern: /^[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        quantifier: {\n          pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n          alias: 'number'\n        },\n        'standard-pattern-attr': {\n          pattern: /[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        punctuation: /[,()]/\n      }\n    },\n    quantifier: {\n      pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n      alias: 'number'\n    },\n    operator: [\n      {\n        pattern: /=/,\n        alias: 'pattern-def'\n      },\n      {\n        pattern: /&/,\n        alias: 'conjunction'\n      },\n      {\n        pattern: /~/,\n        alias: 'exception'\n      },\n      {\n        pattern: /\\?/,\n        alias: 'optionality'\n      },\n      {\n        pattern: /[[\\]]/,\n        alias: 'repetition'\n      },\n      {\n        pattern: /[{}]/,\n        alias: 'variation'\n      },\n      {\n        pattern: /[+_]/,\n        alias: 'sequence'\n      },\n      {\n        pattern: /\\.{2,3}/,\n        alias: 'span'\n      }\n    ],\n    'field-capture': [\n      {\n        pattern:\n          /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      },\n      {\n        pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      }\n    ],\n    punctuation: /[:;,()]/,\n    name: /[a-zA-Z0-9\\-.]+/\n  }\n}\n","'use strict'\n\nmodule.exports = nginx\nnginx.displayName = 'nginx'\nnginx.aliases = []\nfunction nginx(Prism) {\n  ;(function (Prism) {\n    var variable =\n      /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i\n    Prism.languages.nginx = {\n      comment: {\n        pattern: /(^|[\\s{};])#.*/,\n        lookbehind: true\n      },\n      directive: {\n        pattern:\n          /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n            lookbehind: true,\n            inside: {\n              escape: {\n                pattern: /\\\\[\"'\\\\nrt]/,\n                alias: 'entity'\n              },\n              variable: variable\n            }\n          },\n          comment: {\n            pattern: /(\\s)#.*/,\n            lookbehind: true,\n            greedy: true\n          },\n          keyword: {\n            pattern: /^\\S+/,\n            greedy: true\n          },\n          // other patterns\n          boolean: {\n            pattern: /(\\s)(?:off|on)(?!\\S)/,\n            lookbehind: true\n          },\n          number: {\n            pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n            lookbehind: true\n          },\n          variable: variable\n        }\n      },\n      punctuation: /[{};]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = nim\nnim.displayName = 'nim'\nnim.aliases = []\nfunction nim(Prism) {\n  Prism.languages.nim = {\n    comment: /#.*/,\n    // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n    // Character literals are handled specifically to prevent issues with numeric type suffixes\n    string: {\n      pattern:\n        /(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')/,\n      greedy: true\n    },\n    // The negative look ahead prevents wrong highlighting of the .. operator\n    number:\n      /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n    keyword:\n      /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n    function: {\n      pattern:\n        /(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n      inside: {\n        operator: /\\*$/\n      }\n    },\n    // We don't want to highlight operators inside backticks\n    ignore: {\n      pattern: /`[^`\\r\\n]+`/,\n      inside: {\n        punctuation: /`/\n      }\n    },\n    operator: {\n      // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n      // but allow the slice operator .. to take precedence over them\n      // One can define his own operators in Nim so all combination of operators might be an operator.\n      pattern:\n        /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)/m,\n      lookbehind: true\n    },\n    punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n  }\n}\n","'use strict'\n\nmodule.exports = nix\nnix.displayName = 'nix'\nnix.aliases = []\nfunction nix(Prism) {\n  Prism.languages.nix = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\n          lookbehind: true,\n          inside: {\n            antiquotation: {\n              pattern: /^\\$(?=\\{)/,\n              alias: 'variable'\n            } // See rest below\n          }\n        }\n      }\n    },\n    url: [\n      /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n      {\n        pattern:\n          /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }\n    ],\n    antiquotation: {\n      pattern: /\\$(?=\\{)/,\n      alias: 'variable'\n    },\n    number: /\\b\\d+\\b/,\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n    function:\n      /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n    boolean: /\\b(?:true|false)\\b/,\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n    punctuation: /[{}()[\\].,:;]/\n  }\n  Prism.languages.nix.string.inside.interpolation.inside.rest =\n    Prism.languages.nix\n}\n","'use strict'\n\nmodule.exports = nsis\nnsis.displayName = 'nsis'\nnsis.aliases = []\nfunction nsis(Prism) {\n  /**\n   * Original by Jan T. Sott (http://github.com/idleberg)\n   *\n   * Includes all commands and plug-ins shipped with NSIS 3.02\n   */\n  Prism.languages.nsis = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|Banner|BG(?:Font|Gradient|Image)|BrandingText|BringToFront|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|WriteUTF16LE|Seek|Write|WriteByte|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DlgItem|DLLVersion(?:Local)?|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|Name|Nop|ns(?:Dialogs|Exec)|NSISdl|OutFile|Page(?:Callbacks)?|PE(?:DllCharacteristics|SubsysVer)|Pop|Push|Quit|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|Unicode|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UninstPage|UnRegDLL|UserInfo|Var|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle)\\b/m,\n      lookbehind: true\n    },\n    property:\n      /\\b(?:admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user|ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)\\b/,\n    constant: /\\$\\{[\\w\\.:\\^-]+\\}|\\$\\([\\w\\.:\\^-]+\\)/i,\n    variable: /\\$\\w+/i,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n    punctuation: /[{}[\\];(),.:]/,\n    important: {\n      pattern:\n        /(^[\\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = objectivec\nobjectivec.displayName = 'objectivec'\nobjectivec.aliases = ['objc']\nfunction objectivec(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.objectivec = Prism.languages.extend('c', {\n    string:\n      /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    keyword:\n      /\\b(?:asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n  })\n  delete Prism.languages.objectivec['class-name']\n  Prism.languages.objc = Prism.languages.objectivec\n}\n","'use strict'\n\nmodule.exports = ocaml\nocaml.displayName = 'ocaml'\nocaml.aliases = []\nfunction ocaml(Prism) {\n  Prism.languages.ocaml = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: [\n      {\n        pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      {\n        pattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n        greedy: true\n      }\n    ],\n    number:\n      /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?[\\d_]+)?)/i,\n    directive: {\n      pattern: /\\B#\\w+/,\n      alias: 'important'\n    },\n    label: {\n      pattern: /\\B~\\w+/,\n      alias: 'function'\n    },\n    'type-variable': {\n      pattern: /\\B'\\w+/,\n      alias: 'function'\n    },\n    variant: {\n      pattern: /`\\w+/,\n      alias: 'variable'\n    },\n    module: {\n      pattern: /\\b[A-Z]\\w+/,\n      alias: 'variable'\n    },\n    // For the list of keywords and operators,\n    // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n    keyword:\n      /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    // Custom operators are allowed\n    operator:\n      /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n    punctuation: /[(){}\\[\\]|.,:;]|\\b_\\b/\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = opencl\nopencl.displayName = 'opencl'\nopencl.aliases = []\nfunction opencl(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    /* OpenCL kernel language */\n    Prism.languages.opencl = Prism.languages.extend('c', {\n      // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n      keyword:\n        /\\b(?:__attribute__|(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|auto|break|case|complex|const|continue|default|do|(?:float|double)(?:16(?:x(?:1|16|2|4|8))?|1x(?:1|16|2|4|8)|2(?:x(?:1|16|2|4|8))?|3|4(?:x(?:1|16|2|4|8))?|8(?:x(?:1|16|2|4|8))?)?|else|enum|extern|for|goto|(?:u?(?:char|short|int|long)|half|quad|bool)(?:2|3|4|8|16)?|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\\b/,\n      // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n      // Math Constants: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/mathConstants.html\n      // Macros and Limits: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/macroLimits.html\n      number:\n        /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[fuhl]{0,4}/i,\n      boolean: /\\b(?:false|true)\\b/,\n      'constant-opencl-kernel': {\n        pattern:\n          /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:LOCAL|GLOBAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|MANT_DIG|(?:MIN|MAX)(?:(?:_10)?_EXP)?)|FLT_RADIX|HUGE_VALF?|INFINITY|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|(?:UCHAR|USHRT|UINT|ULONG)_MAX|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:10|2)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN)\\b/,\n        alias: 'constant'\n      }\n    })\n    Prism.languages.insertBefore('opencl', 'class-name', {\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/scalarDataTypes.html\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/otherDataTypes.html\n      'builtin-type': {\n        pattern:\n          /\\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\\b/,\n        alias: 'keyword'\n      }\n    })\n    var attributes = {\n      // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n      'type-opencl-host': {\n        pattern:\n          /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|short|int|long)|float|double)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n        alias: 'keyword'\n      },\n      'boolean-opencl-host': {\n        pattern: /\\bCL_(?:TRUE|FALSE)\\b/,\n        alias: 'boolean'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n      'constant-opencl-host': {\n        pattern:\n          /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:16|24|8|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n        alias: 'constant'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n      'function-opencl-host': {\n        pattern:\n          /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|Kernel|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n        alias: 'function'\n      }\n    }\n    /* OpenCL host API */\n    Prism.languages.insertBefore('c', 'keyword', attributes) // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n    if (Prism.languages.cpp) {\n      // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n      attributes['type-opencl-host-cpp'] = {\n        pattern:\n          /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|Sampler|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|UserEvent)\\b/,\n        alias: 'keyword'\n      }\n      Prism.languages.insertBefore('cpp', 'keyword', attributes)\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = openqasm\nopenqasm.displayName = 'openqasm'\nopenqasm.aliases = ['qasm']\nfunction openqasm(Prism) {\n  // https://qiskit.github.io/openqasm/grammar/index.html\n  Prism.languages.openqasm = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while|CX|OPENQASM|U)\\b|#pragma\\b/,\n    'class-name':\n      /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n    function: /\\b(?:sin|cos|tan|exp|ln|sqrt|rotl|rotr|popcount)\\b(?=\\s*\\()/,\n    constant: /\\b(?:pi|tau|euler)\\b|π|𝜏|ℇ/,\n    number: {\n      pattern:\n        /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n      lookbehind: true\n    },\n    operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n    punctuation: /[(){}\\[\\];,:.]/\n  }\n  Prism.languages.qasm = Prism.languages.openqasm\n}\n","'use strict'\n\nmodule.exports = oz\noz.displayName = 'oz'\noz.aliases = []\nfunction oz(Prism) {\n  Prism.languages.oz = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    atom: {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\$|\\[\\]|\\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n    function: [\n      /\\b[a-z][A-Za-z\\d]*(?=\\()/,\n      {\n        pattern: /(\\{)[A-Z][A-Za-z\\d]*\\b/,\n        lookbehind: true\n      }\n    ],\n    number:\n      /\\b(?:0[bx][\\da-f]+|\\d+(?:\\.\\d*)?(?:e~?\\d+)?)\\b|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n    variable: /\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,\n    'attr-name': /\\b\\w+(?=:)/,\n    operator:\n      /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n    punctuation: /[\\[\\](){}.:;?]/\n  }\n}\n","'use strict'\n\nmodule.exports = parigp\nparigp.displayName = 'parigp'\nparigp.aliases = []\nfunction parigp(Prism) {\n  Prism.languages.parigp = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      greedy: true\n    },\n    // PARI/GP does not care about white spaces at all\n    // so let's process the keywords to build an appropriate regexp\n    // (e.g. \"b *r *e *a *k\", etc.)\n    keyword: (function () {\n      var keywords = [\n        'breakpoint',\n        'break',\n        'dbg_down',\n        'dbg_err',\n        'dbg_up',\n        'dbg_x',\n        'forcomposite',\n        'fordiv',\n        'forell',\n        'forpart',\n        'forprime',\n        'forstep',\n        'forsubgroup',\n        'forvec',\n        'for',\n        'iferr',\n        'if',\n        'local',\n        'my',\n        'next',\n        'return',\n        'until',\n        'while'\n      ]\n      keywords = keywords\n        .map(function (keyword) {\n          return keyword.split('').join(' *')\n        })\n        .join('|')\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b')\n    })(),\n    function: /\\b\\w(?:[\\w ]*\\w)?(?= *\\()/,\n    number: {\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\n      pattern:\n        /((?:\\. *\\. *)?)(?:\\b\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *(?:[+-] *)?\\d(?: *\\d)*)?/i,\n      lookbehind: true\n    },\n    operator:\n      /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n    punctuation: /[\\[\\]{}().,:;|]/\n  }\n}\n","'use strict'\n\nmodule.exports = parser\nparser.displayName = 'parser'\nparser.aliases = []\nfunction parser(Prism) {\n  ;(function (Prism) {\n    var parser = (Prism.languages.parser = Prism.languages.extend('markup', {\n      keyword: {\n        pattern:\n          /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n        lookbehind: true\n      },\n      variable: {\n        pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\.|:+/\n        }\n      },\n      function: {\n        pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /(^@)(?:GET_|SET_)/,\n            lookbehind: true\n          },\n          punctuation: /\\.|:+/\n        }\n      },\n      escape: {\n        pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n        alias: 'builtin'\n      },\n      punctuation: /[\\[\\](){};]/\n    }))\n    parser = Prism.languages.insertBefore('parser', 'keyword', {\n      'parser-comment': {\n        pattern: /(\\s)#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      expression: {\n        // Allow for 3 levels of depth\n        pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n        greedy: true,\n        lookbehind: true,\n        inside: {\n          string: {\n            pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n            lookbehind: true\n          },\n          keyword: parser.keyword,\n          variable: parser.variable,\n          function: parser.function,\n          boolean: /\\b(?:true|false)\\b/,\n          number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)\\b/i,\n          escape: parser.escape,\n          operator:\n            /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n          punctuation: parser.punctuation\n        }\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        expression: parser.expression,\n        keyword: parser.keyword,\n        variable: parser.variable,\n        function: parser.function,\n        escape: parser.escape,\n        'parser-punctuation': {\n          pattern: parser.punctuation,\n          alias: 'punctuation'\n        }\n      },\n      parser['tag'].inside['attr-value']\n    )\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pascal\npascal.displayName = 'pascal'\npascal.aliases = ['objectpascal']\nfunction pascal(Prism) {\n  // Based on Free Pascal\n  /* TODO\nSupport inline asm ?\n*/\n  Prism.languages.pascal = {\n    comment: [/\\(\\*[\\s\\S]+?\\*\\)/, /\\{[\\s\\S]+?\\}/, /\\/\\/.*/],\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    keyword: [\n      {\n        // Turbo Pascal\n        pattern:\n          /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Free Pascal\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Object Pascal\n        pattern:\n          /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Modifiers\n        pattern:\n          /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n        lookbehind: true\n      }\n    ],\n    number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n    ],\n    operator: [\n      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i,\n      {\n        pattern:\n          /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  }\n  Prism.languages.objectpascal = Prism.languages.pascal\n}\n","'use strict'\n\nmodule.exports = pascaligo\npascaligo.displayName = 'pascaligo'\npascaligo.aliases = []\nfunction pascaligo(Prism) {\n  ;(function (Prism) {\n    // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n    var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source\n    var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(\n      /<braces>/g,\n      function () {\n        return braces\n      }\n    )\n    var pascaligo = (Prism.languages.pascaligo = {\n      comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n        greedy: true\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(\n              /<type>/g,\n              function () {\n                return type\n              }\n            ),\n            'i'\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () {\n              return type\n            }),\n            'i'\n          ),\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /(:\\s*)<type>/.source.replace(/<type>/g, function () {\n              return type\n            })\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      keyword: {\n        pattern:\n          /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[^&])\\b(?:True|False)\\b/i,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n        lookbehind: true\n      },\n      function: /\\b\\w+(?=\\s*\\()/i,\n      number: [\n        // Hexadecimal, octal and binary\n        /%[01]+|&[0-7]+|\\$[a-f\\d]+/i, // Decimal\n        /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n      ],\n      operator:\n        /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n    })\n    var classNameInside = [\n      'comment',\n      'keyword',\n      'builtin',\n      'operator',\n      'punctuation'\n    ].reduce(function (accum, key) {\n      accum[key] = pascaligo[key]\n      return accum\n    }, {})\n    pascaligo['class-name'].forEach(function (p) {\n      p.inside = classNameInside\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pcaxis\npcaxis.displayName = 'pcaxis'\npcaxis.aliases = ['px']\nfunction pcaxis(Prism) {\n  Prism.languages.pcaxis = {\n    string: /\"[^\"]*\"/,\n    keyword: {\n      pattern:\n        /((?:^|;)\\s*)[-A-Z\\d]+(?:\\s*\\[[-\\w]+\\])?(?:\\s*\\(\"[^\"]*\"(?:,\\s*\"[^\"]*\")*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        keyword: /^[-A-Z\\d]+/,\n        language: {\n          pattern: /^(\\s*)\\[[-\\w]+\\]/,\n          lookbehind: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            property: /[-\\w]+/\n          }\n        },\n        'sub-key': {\n          pattern: /^(\\s*)\\S[\\s\\S]*/,\n          lookbehind: true,\n          inside: {\n            parameter: {\n              pattern: /\"[^\"]*\"/,\n              alias: 'property'\n            },\n            punctuation: /^\\(|\\)$|,/\n          }\n        }\n      }\n    },\n    operator: /=/,\n    tlist: {\n      pattern:\n        /TLIST\\s*\\(\\s*\\w+(?:(?:\\s*,\\s*\"[^\"]*\")+|\\s*,\\s*\"[^\"]*\"-\"[^\"]*\")?\\s*\\)/,\n      greedy: true,\n      inside: {\n        function: /^TLIST/,\n        property: {\n          pattern: /^(\\s*\\(\\s*)\\w+/,\n          lookbehind: true\n        },\n        string: /\"[^\"]*\"/,\n        punctuation: /[(),]/,\n        operator: /-/\n      }\n    },\n    punctuation: /[;,]/,\n    number: {\n      pattern: /(^|\\s)\\d+(?:\\.\\d+)?(?!\\S)/,\n      lookbehind: true\n    },\n    boolean: /YES|NO/\n  }\n  Prism.languages.px = Prism.languages.pcaxis\n}\n","'use strict'\n\nmodule.exports = peoplecode\npeoplecode.displayName = 'peoplecode'\npeoplecode.aliases = ['pcode']\nfunction peoplecode(Prism) {\n  Prism.languages.peoplecode = {\n    comment: RegExp(\n      [\n        // C-style multiline comments\n        /\\/\\*[\\s\\S]*?\\*\\//.source, // REM comments\n        /\\bREM[^;]*;/.source, // Nested <* *> comments\n        /<\\*(?:[^<*]|\\*(?!>)|<(?!\\*)|<\\*(?:(?!\\*>)[\\s\\S])*\\*>)*\\*>/.source, // /+ +/ comments\n        /\\/\\+[\\s\\S]*?\\+\\//.source\n      ].join('|')\n    ),\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    variable: /%\\w+/,\n    'function-definition': {\n      pattern: /((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'class-name': {\n      pattern:\n        /((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /:/\n      }\n    },\n    keyword:\n      /\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|implements|import|instance|if|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\n    'operator-keyword': {\n      pattern: /\\b(?:and|not|or)\\b/i,\n      alias: 'operator'\n    },\n    function: /[_a-z]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,\n    punctuation: /[:.;,()[\\]]/\n  }\n  Prism.languages.pcode = Prism.languages.peoplecode\n}\n","'use strict'\n\nmodule.exports = perl\nperl.displayName = 'perl'\nperl.aliases = []\nfunction perl(Prism) {\n  Prism.languages.perl = {\n    comment: [\n      {\n        // POD\n        pattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\$])#.*/,\n        lookbehind: true\n      }\n    ],\n    // TODO Could be nice to handle Heredoc too.\n    string: [\n      // q/.../\n      {\n        pattern:\n          /\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      }, // q a...a\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      }, // q(...)\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n        greedy: true\n      }, // q{...}\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,\n        greedy: true\n      }, // q[...]\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n        greedy: true\n      }, // q<...>\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n        greedy: true\n      }, // \"...\", `...`\n      {\n        pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      }, // '...'\n      // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n      {\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n        greedy: true\n      }\n    ],\n    regex: [\n      // m/.../\n      {\n        pattern:\n          /\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n        greedy: true\n      }, // m a...a\n      {\n        pattern:\n          /\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n        greedy: true\n      }, // m(...)\n      {\n        pattern: /\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,\n        greedy: true\n      }, // m{...}\n      {\n        pattern: /\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,\n        greedy: true\n      }, // m[...]\n      {\n        pattern: /\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,\n        greedy: true\n      }, // m<...>\n      {\n        pattern: /\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,\n        greedy: true\n      }, // The lookbehinds prevent -s from breaking\n      // FIXME We don't handle change of separator like s(...)[...]\n      // s/.../.../\n      {\n        pattern:\n          /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      }, // s a...a...a\n      {\n        pattern:\n          /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      }, // s(...)(...)\n      {\n        pattern:\n          /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      }, // s{...}{...}\n      {\n        pattern:\n          /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      }, // s[...][...]\n      {\n        pattern:\n          /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      }, // s<...><...>\n      {\n        pattern:\n          /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      }, // /.../\n      // The look-ahead tries to prevent two divisions on\n      // the same line from being highlighted as regex.\n      // This does not support multi-line regex.\n      {\n        pattern:\n          /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\n        greedy: true\n      }\n    ],\n    // FIXME Not sure about the handling of ::, ', and #\n    variable: [\n      // ${^POSTMATCH}\n      /[&*$@%]\\{\\^[A-Z]+\\}/, // $^V\n      /[&*$@%]\\^[A-Z_]/, // ${...}\n      /[&*$@%]#?(?=\\{)/, // $foo\n      /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/i, // $1\n      /[&*$@%]\\d+/, // $_, @_, %!\n      // The negative lookahead prevents from breaking the %= operator\n      /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n    ],\n    filehandle: {\n      // <>, <FOO>, _\n      pattern: /<(?![<=])\\S*>|\\b_\\b/,\n      alias: 'symbol'\n    },\n    vstring: {\n      // v1.2, 1.2.3\n      pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n      alias: 'string'\n    },\n    function: {\n      pattern: /sub \\w+/i,\n      inside: {\n        keyword: /sub/\n      }\n    },\n    keyword:\n      /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n    number:\n      /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n    operator:\n      /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,\n    punctuation: /[{}[\\];(),:]/\n  }\n}\n","'use strict'\nvar refractorPhp = require('./php.js')\nmodule.exports = phpExtras\nphpExtras.displayName = 'phpExtras'\nphpExtras.aliases = []\nfunction phpExtras(Prism) {\n  Prism.register(refractorPhp)\n  Prism.languages.insertBefore('php', 'variable', {\n    this: /\\$this\\b/,\n    global:\n      /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)\\b/,\n    scope: {\n      pattern: /\\b[\\w\\\\]+::/,\n      inside: {\n        keyword: /static|self|parent/,\n        punctuation: /::|\\\\/\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = php\nphp.displayName = 'php'\nphp.aliases = []\nfunction php(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   * Rewritten by Tom Pavelec\n   *\n   * Supports PHP 5.3 - 8.0\n   */\n  ;(function (Prism) {\n    var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/\n    var constant = [\n      {\n        pattern: /\\b(?:false|true)\\b/i,\n        alias: 'boolean'\n      },\n      {\n        pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n        greedy: true,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n        greedy: true,\n        lookbehind: true\n      },\n      /\\b(?:null)\\b/i,\n      /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/\n    ]\n    var number =\n      /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    var operator =\n      /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/\n    var punctuation = /[{}\\[\\](),:;]/\n    Prism.languages.php = {\n      delimiter: {\n        pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n        alias: 'important'\n      },\n      comment: comment,\n      variable: /\\$+(?:\\w+\\b|(?=\\{))/i,\n      package: {\n        pattern:\n          /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      'class-name-definition': {\n        pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'function-definition': {\n        pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\(\\s*)\\b(?:bool|boolean|int|integer|float|string|object|array)\\b(?=\\s*\\))/i,\n          alias: 'type-casting',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /([(,?]\\s*)\\b(?:bool|int|float|string|object|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /([(,?]\\s*[\\w|]\\|\\s*)(?:null|false)\\b(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|self|static|callable|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?[\\w|]\\|\\s*)(?:null|false)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:bool|int|float|string|object|void|array(?!\\s*\\()|mixed|iterable|(?:null|false)(?=\\s*\\|))\\b/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:null|false)\\b/i,\n          alias: 'type-declaration',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          // yield from\n          pattern: /(\\byield\\s+)from\\b/i,\n          lookbehind: true\n        }, // `class` is always a keyword unlike other keywords\n        /\\bclass\\b/i,\n        {\n          // https://www.php.net/manual/en/reserved.keywords.php\n          //\n          // keywords cannot be preceded by \"->\"\n          // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n          pattern:\n            /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:__halt_compiler|abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|namespace|match|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield)\\b/i,\n          lookbehind: true\n        }\n      ],\n      'argument-name': {\n        pattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-declaration'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n          alias: ['class-name-fully-qualified', 'static-context'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-hint'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: ['class-name-fully-qualified', 'return-type'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        }\n      ],\n      constant: constant,\n      function: {\n        pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      property: {\n        pattern: /(->\\s*)\\w+/,\n        lookbehind: true\n      },\n      number: number,\n      operator: operator,\n      punctuation: punctuation\n    }\n    var string_interpolation = {\n      pattern:\n        /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n      lookbehind: true,\n      inside: Prism.languages.php\n    }\n    var string = [\n      {\n        pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n        alias: 'nowdoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<'?|[';]$/\n            }\n          }\n        }\n      },\n      {\n        pattern:\n          /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n        alias: 'heredoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<\"?|[\";]$/\n            }\n          },\n          interpolation: string_interpolation\n        }\n      },\n      {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        alias: 'backtick-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        alias: 'single-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        alias: 'double-quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: string_interpolation\n        }\n      }\n    ]\n    Prism.languages.insertBefore('php', 'variable', {\n      string: string,\n      attribute: {\n        pattern:\n          /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n        greedy: true,\n        inside: {\n          'attribute-content': {\n            pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n            lookbehind: true,\n            // inside can appear subset of php\n            inside: {\n              comment: comment,\n              string: string,\n              'attribute-class-name': [\n                {\n                  pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                  alias: 'class-name',\n                  greedy: true,\n                  lookbehind: true\n                },\n                {\n                  pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n                  alias: ['class-name', 'class-name-fully-qualified'],\n                  greedy: true,\n                  lookbehind: true,\n                  inside: {\n                    punctuation: /\\\\/\n                  }\n                }\n              ],\n              constant: constant,\n              number: number,\n              operator: operator,\n              punctuation: punctuation\n            }\n          },\n          delimiter: {\n            pattern: /^#\\[|\\]$/,\n            alias: 'punctuation'\n          }\n        }\n      }\n    })\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (!/<\\?/.test(env.code)) {\n        return\n      }\n      var phpPattern =\n        /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/gi\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'php',\n        phpPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php')\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorPhp = require('./php.js')\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = phpdoc\nphpdoc.displayName = 'phpdoc'\nphpdoc.aliases = []\nfunction phpdoc(Prism) {\n  Prism.register(refractorPhp)\n  Prism.register(refractorJavadoclike)\n  ;(function (Prism) {\n    var typeExpression = /(?:\\b[a-zA-Z]\\w*|[|\\\\[\\]])+/.source\n    Prism.languages.phpdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        pattern: RegExp(\n          '(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:' +\n            typeExpression +\n            '\\\\s+)?)\\\\$\\\\w+'\n        ),\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('phpdoc', 'keyword', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            '(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)' +\n              typeExpression\n          ),\n          lookbehind: true,\n          inside: {\n            keyword:\n              /\\b(?:callback|resource|boolean|integer|double|object|string|array|false|float|mixed|bool|null|self|true|void|int)\\b/,\n            punctuation: /[|\\\\[\\]()]/\n          }\n        }\n      ]\n    })\n    Prism.languages.javadoclike.addSupport('php', Prism.languages.phpdoc)\n  })(Prism)\n}\n","'use strict'\nvar refractorSql = require('./sql.js')\nmodule.exports = plsql\nplsql.displayName = 'plsql'\nplsql.aliases = []\nfunction plsql(Prism) {\n  Prism.register(refractorSql)\n  ;(function (Prism) {\n    var plsql = (Prism.languages.plsql = Prism.languages.extend('sql', {\n      comment: [/\\/\\*[\\s\\S]*?\\*\\//, /--.*/]\n    }))\n    var keyword = plsql['keyword']\n    if (!Array.isArray(keyword)) {\n      keyword = plsql['keyword'] = [keyword]\n    }\n    keyword.unshift(\n      /\\b(?:ACCESS|AGENT|AGGREGATE|ARRAY|ARROW|AT|ATTRIBUTE|AUDIT|AUTHID|BFILE_BASE|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BYTE|CALLING|CHAR_BASE|CHARSET(?:FORM|ID)|CLOB_BASE|COLAUTH|COLLECT|CLUSTERS?|COMPILED|COMPRESS|CONSTANT|CONSTRUCTOR|CONTEXT|CRASH|CUSTOMDATUM|DANGLING|DATE_BASE|DEFINE|DETERMINISTIC|DURATION|ELEMENT|EMPTY|EXCEPTIONS?|EXCLUSIVE|EXTERNAL|FINAL|FORALL|FORM|FOUND|GENERAL|HEAP|HIDDEN|IDENTIFIED|IMMEDIATE|INCLUDING|INCREMENT|INDICATOR|INDEXES|INDICES|INFINITE|INITIAL|ISOPEN|INSTANTIABLE|INTERFACE|INVALIDATE|JAVA|LARGE|LEADING|LENGTH|LIBRARY|LIKE[24C]|LIMITED|LONG|LOOP|MAP|MAXEXTENTS|MAXLEN|MEMBER|MINUS|MLSLABEL|MULTISET|NAME|NAN|NATIVE|NEW|NOAUDIT|NOCOMPRESS|NOCOPY|NOTFOUND|NOWAIT|NUMBER(?:_BASE)?|OBJECT|OCI(?:COLL|DATE|DATETIME|DURATION|INTERVAL|LOBLOCATOR|NUMBER|RAW|REF|REFCURSOR|ROWID|STRING|TYPE)|OFFLINE|ONLINE|ONLY|OPAQUE|OPERATOR|ORACLE|ORADATA|ORGANIZATION|ORL(?:ANY|VARY)|OTHERS|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETERS?|PASCAL|PCTFREE|PIPE(?:LINED)?|PRAGMA|PRIOR|PRIVATE|RAISE|RANGE|RAW|RECORD|REF|REFERENCE|REM|REMAINDER|RESULT|RESOURCE|RETURNING|REVERSE|ROW(?:ID|NUM|TYPE)|SAMPLE|SB[124]|SEGMENT|SELF|SEPARATE|SEQUENCE|SHORT|SIZE(?:_T)?|SPARSE|SQL(?:CODE|DATA|NAME|STATE)|STANDARD|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUCCESSFUL|SYNONYM|SYSDATE|TABAUTH|TDO|THE|TIMEZONE_(?:ABBR|HOUR|MINUTE|REGION)|TRAILING|TRANSAC(?:TIONAL)?|TRUSTED|UB[124]|UID|UNDER|UNTRUSTED|VALIDATE|VALIST|VARCHAR2|VARIABLE|VARIANCE|VARRAY|VIEWS|VOID|WHENEVER|WRAPPED|ZONE)\\b/i\n    )\n    var operator = plsql['operator']\n    if (!Array.isArray(operator)) {\n      operator = plsql['operator'] = [operator]\n    }\n    operator.unshift(/:=/)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = powerquery\npowerquery.displayName = 'powerquery'\npowerquery.aliases = []\nfunction powerquery(Prism) {\n  // https://docs.microsoft.com/en-us/powerquery-m/power-query-m-language-specification\n  Prism.languages.powerquery = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/).*)/,\n      lookbehind: true\n    },\n    'quoted-identifier': {\n      pattern: /#\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true,\n      alias: 'variable'\n    },\n    string: {\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    constant: [\n      /\\bDay\\.(?:Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday)\\b/,\n      /\\bTraceLevel\\.(?:Critical|Error|Information|Verbose|Warning)\\b/,\n      /\\bOccurrence\\.(?:First|Last|All)\\b/,\n      /\\bOrder\\.(?:Ascending|Descending)\\b/,\n      /\\bRoundingMode\\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\\b/,\n      /\\bMissingField\\.(?:Error|Ignore|UseNull)\\b/,\n      /\\bQuoteStyle\\.(?:Csv|None)\\b/,\n      /\\bJoinKind\\.(?:Inner|LeftOuter|RightOuter|FullOuter|LeftAnti|RightAnti)\\b/,\n      /\\bGroupKind\\.(?:Global|Local)\\b/,\n      /\\bExtraValues\\.(?:List|Ignore|Error)\\b/,\n      /\\bJoinAlgorithm\\.(?:Dynamic|PairwiseHash|SortMerge|LeftHash|RightHash|LeftIndex|RightIndex)\\b/,\n      /\\bJoinSide\\.(?:Left|Right)\\b/,\n      /\\bPrecision\\.(?:Double|Decimal)\\b/,\n      /\\bRelativePosition\\.From(?:End|Start)\\b/,\n      /\\bTextEncoding\\.(?:Ascii|BigEndianUnicode|Unicode|Utf8|Utf16|Windows)\\b/,\n      /\\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Int8|Int16|Int32|Int64|Function|List|Logical|None|Number|Record|Table|Text|Time)\\.Type\\b/,\n      /\\bnull\\b/\n    ],\n    boolean: /\\b(?:true|false)\\b/,\n    keyword:\n      /\\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\\b/,\n    function: {\n      pattern: /(^|[^#\\w.])(?!\\d)[\\w.]+(?=\\s*\\()/,\n      lookbehind: true\n    },\n    'data-type': {\n      pattern:\n        /\\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time|type)\\b/,\n      alias: 'variable'\n    },\n    number: {\n      pattern:\n        /\\b0x[\\da-f]+\\b|(?:[+-]?(?:\\b\\d+\\.)?\\b\\d+|[+-]\\.\\d+|(^|[^.])\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n      lookbehind: true\n    },\n    operator: /[-+*\\/&?@^]|<(?:=>?|>)?|>=?|=>?|\\.\\.\\.?/,\n    punctuation: /[,;\\[\\](){}]/\n  }\n  Prism.languages.pq = Prism.languages['powerquery']\n  Prism.languages.mscript = Prism.languages['powerquery']\n}\n","'use strict'\n\nmodule.exports = powershell\npowershell.displayName = 'powershell'\npowershell.aliases = []\nfunction powershell(Prism) {\n  ;(function (Prism) {\n    var powershell = (Prism.languages.powershell = {\n      comment: [\n        {\n          pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^`])#.*/,\n          lookbehind: true\n        }\n      ],\n      string: [\n        {\n          pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n          greedy: true,\n          inside: {\n            function: {\n              // Allow for one level of nesting\n              pattern: /(^|[^`])\\$\\((?:\\$\\([^\\r\\n()]*\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n              lookbehind: true,\n              // Populated at end of file\n              inside: {}\n            }\n          }\n        },\n        {\n          pattern: /'(?:[^']|'')*'/,\n          greedy: true\n        }\n      ],\n      // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n      // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n      namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*\\]|[^\\[\\]])*\\]|[^\\[\\]])*\\]/i,\n      boolean: /\\$(?:true|false)\\b/i,\n      variable: /\\$\\w+\\b/,\n      // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n      // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      function: [\n        /\\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\\b/i,\n        /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\n      ],\n      // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n      keyword:\n        /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n      operator: {\n        pattern:\n          /(\\W?)(?:!|-(?:eq|ne|gt|ge|lt|le|sh[lr]|not|b?(?:and|x?or)|(?:Not)?(?:Like|Match|Contains|In)|Replace|Join|is(?:Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n        lookbehind: true\n      },\n      punctuation: /[|{}[\\];(),.]/\n    }) // Variable interpolation inside strings, and nested expressions\n    var stringInside = powershell.string[0].inside\n    stringInside.boolean = powershell.boolean\n    stringInside.variable = powershell.variable\n    stringInside.function.inside = powershell\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = processing\nprocessing.displayName = 'processing'\nprocessing.aliases = []\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword:\n      /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n      alias: 'variable'\n    }\n  }) // Spaces are allowed between function name and parenthesis\n  Prism.languages.processing['function'] = /\\b\\w+(?=\\s*\\()/ // Class-names is not styled by default\n  Prism.languages.processing['class-name'].alias = 'variable'\n}\n","'use strict'\n\nmodule.exports = prolog\nprolog.displayName = 'prolog'\nprolog.aliases = []\nfunction prolog(Prism) {\n  Prism.languages.prolog = {\n    // Syntax depends on the implementation\n    comment: [/%.+/, /\\/\\*[\\s\\S]*?\\*\\//],\n    // Depending on the implementation, strings may allow escaped newlines and quote-escape\n    string: {\n      pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n    variable: /\\b[A-Z_]\\w*/,\n    // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n    function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n    number: /\\b\\d+(?:\\.\\d*)?/,\n    // Custom operators are allowed\n    operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n    punctuation: /[(){}\\[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = promql\npromql.displayName = 'promql'\npromql.aliases = []\nfunction promql(Prism) {\n  // Thanks to: https://github.com/prometheus-community/monaco-promql/blob/master/src/promql/promql.ts\n  // As well as: https://kausal.co/blog/slate-prism-add-new-syntax-promql/\n  ;(function (Prism) {\n    // PromQL Aggregation Operators\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#aggregation-operators)\n    var aggregations = [\n      'sum',\n      'min',\n      'max',\n      'avg',\n      'group',\n      'stddev',\n      'stdvar',\n      'count',\n      'count_values',\n      'bottomk',\n      'topk',\n      'quantile'\n    ] // PromQL vector matching + the by and without clauses\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#vector-matching)\n    var vectorMatching = [\n      'on',\n      'ignoring',\n      'group_right',\n      'group_left',\n      'by',\n      'without'\n    ] // PromQL offset modifier\n    // (https://prometheus.io/docs/prometheus/latest/querying/basics/#offset-modifier)\n    var offsetModifier = ['offset']\n    var keywords = aggregations.concat(vectorMatching, offsetModifier)\n    Prism.languages.promql = {\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      'vector-match': {\n        // Match the comma-separated label lists inside vector matching:\n        pattern: new RegExp(\n          '((?:' + vectorMatching.join('|') + ')\\\\s*)\\\\([^)]*\\\\)'\n        ),\n        lookbehind: true,\n        inside: {\n          'label-key': {\n            pattern: /\\b[^,]+\\b/,\n            alias: 'attr-name'\n          },\n          punctuation: /[(),]/\n        }\n      },\n      'context-labels': {\n        pattern: /\\{[^{}]*\\}/,\n        inside: {\n          'label-key': {\n            pattern: /\\b[a-z_]\\w*(?=\\s*(?:=|![=~]))/,\n            alias: 'attr-name'\n          },\n          'label-value': {\n            pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n            greedy: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\{|\\}|=~?|![=~]|,/\n        }\n      },\n      'context-range': [\n        {\n          pattern: /\\[[\\w\\s:]+\\]/,\n          // [1m]\n          inside: {\n            punctuation: /\\[|\\]|:/,\n            'range-duration': {\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n              alias: 'number'\n            }\n          }\n        },\n        {\n          pattern: /(\\boffset\\s+)\\w+/,\n          // offset 1m\n          lookbehind: true,\n          inside: {\n            'range-duration': {\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n              alias: 'number'\n            }\n          }\n        }\n      ],\n      keyword: new RegExp('\\\\b(?:' + keywords.join('|') + ')\\\\b', 'i'),\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      number:\n        /[-+]?(?:(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[-+]?\\d+)?\\b|\\b(?:0x[0-9a-f]+|nan|inf)\\b)/i,\n      operator: /[\\^*/%+-]|==|!=|<=|<|>=|>|\\b(?:and|unless|or)\\b/i,\n      punctuation: /[{};()`,.[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = properties\nproperties.displayName = 'properties'\nproperties.aliases = []\nfunction properties(Prism) {\n  Prism.languages.properties = {\n    comment: /^[ \\t]*[#!].*$/m,\n    'attr-value': {\n      pattern:\n        /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?: *[=:] *(?! )| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n      lookbehind: true\n    },\n    'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?= *[=:]| )/m,\n    punctuation: /[=:]/\n  }\n}\n","'use strict'\n\nmodule.exports = protobuf\nprotobuf.displayName = 'protobuf'\nprotobuf.aliases = []\nfunction protobuf(Prism) {\n  ;(function (Prism) {\n    var builtinTypes =\n      /\\b(?:double|float|[su]?int(?:32|64)|s?fixed(?:32|64)|bool|string|bytes)\\b/\n    Prism.languages.protobuf = Prism.languages.extend('clike', {\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:enum|extend|message|service)\\s+)[A-Za-z_]\\w*(?=\\s*\\{)/,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\b(?:rpc\\s+\\w+|returns)\\s*\\(\\s*(?:stream\\s+)?)\\.?[A-Za-z_]\\w*(?:\\.[A-Za-z_]\\w*)*(?=\\s*\\))/,\n          lookbehind: true\n        }\n      ],\n      keyword:\n        /\\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\\s+\\w)|service|stream|syntax|to)\\b(?!\\s*=\\s*\\d)/,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i\n    })\n    Prism.languages.insertBefore('protobuf', 'operator', {\n      map: {\n        pattern: /\\bmap<\\s*[\\w.]+\\s*,\\s*[\\w.]+\\s*>(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /[<>.,]/,\n          builtin: builtinTypes\n        }\n      },\n      builtin: builtinTypes,\n      'positional-class-name': {\n        pattern: /(?:\\b|\\B\\.)[a-z_]\\w*(?:\\.[a-z_]\\w*)*(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      annotation: {\n        pattern: /(\\[\\s*)[a-z_]\\w*(?=\\s*=)/i,\n        lookbehind: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = psl\npsl.displayName = 'psl'\npsl.aliases = []\nfunction psl(Prism) {\n  Prism.languages.psl = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        symbol: /\\\\[ntrbA-Z\"\\\\]/\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<([a-zA-Z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\1\\b/,\n      alias: 'string',\n      greedy: true\n    },\n    keyword:\n      /\\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\\b/,\n    constant:\n      /\\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|FALSE|False|false|NO|No|no|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|TRUE|True|true|VOID|WARN)\\b/,\n    variable: /\\b(?:errno|exit_status|PslDebug)\\b/,\n    builtin: {\n      pattern:\n        /\\b(?:acos|add_diary|annotate|annotate_get|asctime|asin|atan|atexit|ascii_to_ebcdic|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|destroy_lock|dump_hist|date|destroy|difference|dget_text|dcget_text|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|floor|fmod|full_discovery|file|fopen|ftell|fseek|grep|get_vars|getenv|get|get_chan_info|get_ranges|get_text|gethostinfo|getpid|getpname|history_get_retention|history|index|int|is_var|intersection|isnumber|internal|in_transition|join|kill|length|lines|lock|lock_info|log|loge|log10|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|num_consoles|nthargf|nthline|nthlinef|num_bytes|print|proc_exists|process|popen|printf|pconfig|poplines|pow|PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|sopen|sqrt|srandom|subset|set|substr|system|sprintf|sort|snmp_agent_config|_snmp_debug|snmp_agent_stop|snmp_agent_start|snmp_h_set|snmp_h_get_next|snmp_h_get|snmp_set|snmp_walk|snmp_get_next|snmp_get|snmp_config|snmp_close|snmp_open|snmp_trap_receive|snmp_trap_ignore|snmp_trap_listen|snmp_trap_send|snmp_trap_raise_std_trap|snmp_trap_register_im|splitline|strcasecmp|str_repeat|trim|tail|tan|tanh|time|tmpnam|tolower|toupper|trace_psl_process|text_domain|unlock|unique|union|unset|va_arg|va_start|write)\\b/,\n      alias: 'builtin-function'\n    },\n    'foreach-variable': {\n      pattern:\n        /(\\bforeach\\s+(?:(?:\\w+\\b|\"(?:\\\\.|[^\\\\\"])*\")\\s+){0,2})[_a-zA-Z]\\w*(?=\\s*\\()/,\n      lookbehind: true,\n      greedy: true\n    },\n    function: {\n      pattern: /\\b[_a-z]\\w*\\b(?=\\s*\\()/i\n    },\n    number: /\\b(?:0x[0-9a-f]+|[0-9]+(?:\\.[0-9]+)?)\\b/i,\n    operator: /--|\\+\\+|&&=?|\\|\\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\\.|[:?]/,\n    punctuation: /[(){}\\[\\];,]/\n  }\n}\n","'use strict'\n\nmodule.exports = pug\npug.displayName = 'pug'\npug.aliases = []\nfunction pug(Prism) {\n  ;(function (Prism) {\n    // TODO:\n    // - Add CSS highlighting inside <style> tags\n    // - Add support for multi-line code blocks\n    // - Add support for interpolation #{} and !{}\n    // - Add support for tag interpolation #[]\n    // - Add explicit support for plain text using |\n    // - Add support for markup embedded in plain text\n    Prism.languages.pug = {\n      // Multiline stuff should appear before the rest\n      // This handles both single-line and multi-line comments\n      comment: {\n        pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,\n        lookbehind: true\n      },\n      // All the tag-related part is in lookbehind\n      // so that it can be highlighted by the \"tag\" pattern\n      'multiline-script': {\n        pattern:\n          /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          }\n        }\n      },\n      'multiline-plain-text': {\n        pattern:\n          /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true\n      },\n      markup: {\n        pattern: /(^[\\t ]*)<.+/m,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n        lookbehind: true\n      },\n      // This handle all conditional and loop keywords\n      'flow-control': {\n        pattern:\n          /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,\n        lookbehind: true,\n        inside: {\n          each: {\n            pattern: /^each .+? in\\b/,\n            inside: {\n              keyword: /\\b(?:each|in)\\b/,\n              punctuation: /,/\n            }\n          },\n          branch: {\n            pattern: /^(?:if|unless|else|case|when|default|while)\\b/,\n            alias: 'keyword'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      keyword: {\n        pattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,\n        lookbehind: true\n      },\n      mixin: [\n        // Declaration\n        {\n          pattern: /(^[\\t ]*)mixin .+/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^mixin/,\n            function: /\\w+(?=\\s*\\(|\\s*$)/,\n            punctuation: /[(),.]/\n          }\n        }, // Usage\n        {\n          pattern: /(^[\\t ]*)\\+.+/m,\n          lookbehind: true,\n          inside: {\n            name: {\n              pattern: /^\\+\\w+/,\n              alias: 'function'\n            },\n            rest: Prism.languages.javascript\n          }\n        }\n      ],\n      script: {\n        pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      'plain-text': {\n        pattern:\n          /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              pattern: /&[^(]+\\([^)]+\\)/,\n              inside: Prism.languages.javascript\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n                  lookbehind: true,\n                  inside: Prism.languages.javascript\n                },\n                'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[!=(),]+/\n              }\n            }\n          ],\n          punctuation: /:/,\n          'attr-id': /#[\\w\\-]+/,\n          'attr-class': /\\.[\\w\\-]+/\n        }\n      },\n      code: [\n        {\n          pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n          lookbehind: true,\n          inside: Prism.languages.javascript\n        }\n      ],\n      punctuation: /[.\\-!=|]+/\n    }\n    var filter_pattern =\n      /(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/\n        .source // Non exhaustive list of available filters and associated languages\n    var filters = [\n      {\n        filter: 'atpl',\n        language: 'twig'\n      },\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'ejs',\n      'handlebars',\n      'less',\n      'livescript',\n      'markdown',\n      {\n        filter: 'sass',\n        language: 'scss'\n      },\n      'stylus'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('<filter_name>', function () {\n              return filter.filter\n            }),\n            'm'\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            },\n            rest: Prism.languages[filter.language]\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('pug', 'filter', all_filters)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = puppet\npuppet.displayName = 'puppet'\npuppet.aliases = []\nfunction puppet(Prism) {\n  ;(function (Prism) {\n    Prism.languages.puppet = {\n      heredoc: [\n        // Matches the content of a quoted heredoc string (subject to interpolation)\n        {\n          pattern:\n            /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/ // See interpolation below\n          }\n        }, // Matches the content of an unquoted heredoc string (no interpolation)\n        {\n          pattern:\n            /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n          }\n        }, // Matches the start tag of heredoc strings\n        {\n          pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n          alias: 'string',\n          inside: {\n            punctuation: {\n              pattern: /(\\().+?(?=\\))/,\n              lookbehind: true\n            }\n          }\n        }\n      ],\n      'multiline-comment': {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      },\n      regex: {\n        // Must be prefixed with the keyword \"node\" or a non-word char\n        pattern:\n          /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          // Extended regexes must have the x flag. They can contain single-line comments.\n          'extended-regex': {\n            pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n            inside: {\n              comment: /#.*/\n            }\n          }\n        }\n      },\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      string: {\n        // Allow for one nested level of double quotes inside interpolation\n        pattern:\n          /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          'double-quoted': {\n            pattern: /^\"[\\s\\S]*\"$/,\n            inside: {\n              // See interpolation below\n            }\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      'attr-name': /(?:\\b\\w+|\\*)(?=\\s*=>)/,\n      function: [\n        {\n          pattern: /(\\.)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n      ],\n      number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n      boolean: /\\b(?:true|false)\\b/,\n      // Includes words reserved for future use\n      keyword:\n        /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n      datatype: {\n        pattern:\n          /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n        alias: 'symbol'\n      },\n      operator:\n        /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n      punctuation: /[\\[\\]{}().,;]|:+/\n    }\n    var interpolation = [\n      {\n        // Allow for one nested level of braces inside interpolation\n        pattern:\n          /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n        lookbehind: true,\n        inside: {\n          'short-variable': {\n            // Negative look-ahead prevent wrong highlighting of functions\n            pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n            lookbehind: true,\n            alias: 'variable',\n            inside: {\n              punctuation: /::/\n            }\n          },\n          delimiter: {\n            pattern: /^\\$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.puppet\n        }\n      },\n      {\n        pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          punctuation: /::/\n        }\n      }\n    ]\n    Prism.languages.puppet['heredoc'][0].inside.interpolation = interpolation\n    Prism.languages.puppet['string'].inside[\n      'double-quoted'\n    ].inside.interpolation = interpolation\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pure\npure.displayName = 'pure'\npure.aliases = []\nfunction pure(Prism) {\n  ;(function (Prism) {\n    // https://agraef.github.io/pure-docs/pure.html#lexical-matters\n    Prism.languages.pure = {\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true\n        },\n        /#!.+/\n      ],\n      'inline-lang': {\n        pattern: /%<[\\s\\S]+?%>/,\n        greedy: true,\n        inside: {\n          lang: {\n            pattern: /(^%< *)-\\*-.+?-\\*-/,\n            lookbehind: true,\n            alias: 'comment'\n          },\n          delimiter: {\n            pattern: /^%<.*|%>$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        greedy: true\n      },\n      number: {\n        // The look-behind prevents wrong highlighting of the .. operator\n        pattern:\n          /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?L?)/i,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n      function:\n        /\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n      special: {\n        pattern: /\\b__[a-z]+__\\b/i,\n        alias: 'builtin'\n      },\n      // Any combination of operator chars can be an operator\n      // eslint-disable-next-line no-misleading-character-class\n      operator:\n        /(?:[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]|\\b_+\\b)+|\\b(?:and|div|mod|not|or)\\b/,\n      // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n      punctuation: /[(){}\\[\\];,|]/\n    }\n    var inlineLanguages = [\n      'c',\n      {\n        lang: 'c++',\n        alias: 'cpp'\n      },\n      'fortran'\n    ]\n    var inlineLanguageRe = /%< *-\\*- *<lang>\\d* *-\\*-[\\s\\S]+?%>/.source\n    inlineLanguages.forEach(function (lang) {\n      var alias = lang\n      if (typeof lang !== 'string') {\n        alias = lang.alias\n        lang = lang.lang\n      }\n      if (Prism.languages[alias]) {\n        var o = {}\n        o['inline-lang-' + alias] = {\n          pattern: RegExp(\n            inlineLanguageRe.replace(\n              '<lang>',\n              lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')\n            ),\n            'i'\n          ),\n          inside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n        }\n        o['inline-lang-' + alias].inside.rest = Prism.util.clone(\n          Prism.languages[alias]\n        )\n        Prism.languages.insertBefore('pure', 'inline-lang', o)\n      }\n    }) // C is the default inline language\n    if (Prism.languages.c) {\n      Prism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(\n        Prism.languages.c\n      )\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = purebasic\npurebasic.displayName = 'purebasic'\npurebasic.aliases = []\nfunction purebasic(Prism) {\n  /*\nOriginal Code by Bas Groothedde\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\nslightly changed to pass all tests\n*/\n  // PureBasic support, steal stuff from ansi-c\n  Prism.languages.purebasic = Prism.languages.extend('clike', {\n    comment: /;.*/,\n    keyword:\n      /\\b(?:declarecdll|declaredll|compilerselect|compilercase|compilerdefault|compilerendselect|compilererror|enableexplicit|disableexplicit|not|and|or|xor|calldebugger|debuglevel|enabledebugger|disabledebugger|restore|read|includepath|includebinary|threaded|runtime|with|endwith|structureunion|endstructureunion|align|newlist|newmap|interface|endinterface|extends|enumeration|endenumeration|swap|foreach|continue|fakereturn|goto|gosub|return|break|module|endmodule|declaremodule|enddeclaremodule|declare|declarec|prototype|prototypec|enableasm|disableasm|dim|redim|data|datasection|enddatasection|to|procedurereturn|debug|default|case|select|endselect|as|import|endimport|importc|compilerif|compilerelse|compilerendif|compilerelseif|end|structure|endstructure|while|wend|for|next|step|if|else|elseif|endif|repeat|until|procedure|proceduredll|procedurec|procedurecdll|endprocedure|protected|shared|static|global|define|includefile|xincludefile|macro|endmacro)\\b/i,\n    function: /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n    number: /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\n    operator:\n      /(?:@\\*?|\\?|\\*)\\w+|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n  })\n  Prism.languages.insertBefore('purebasic', 'keyword', {\n    tag: /#\\w+/,\n    asm: {\n      pattern: /(^[\\t ]*)!.*/m,\n      lookbehind: true,\n      alias: 'tag',\n      inside: {\n        comment: /;.*/,\n        string: {\n          pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        },\n        // Anonymous label references, i.e.: jmp @b\n        'label-reference-anonymous': {\n          pattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        // Named label reference, i.e.: jne label1\n        'label-reference-addressed': {\n          pattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        function: {\n          pattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\n          lookbehind: true\n        },\n        'function-inline': {\n          pattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\n          lookbehind: true,\n          alias: 'function'\n        },\n        label: {\n          pattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        keyword: [\n          /\\b(?:extern|global)\\b[^;\\r\\n]*/i,\n          /\\b(?:CPU|FLOAT|DEFAULT)\\b.*/\n        ],\n        register:\n          /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|sp|si|di)|[cdefgs]s|mm\\d+)\\b/i,\n        number:\n          /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n        operator: /[\\[\\]*+\\-/%<>=&|$!,.:]/\n      }\n    }\n  })\n  delete Prism.languages.purebasic['class-name']\n  delete Prism.languages.purebasic['boolean']\n  Prism.languages.pbfasm = Prism.languages['purebasic']\n}\n","'use strict'\nvar refractorHaskell = require('./haskell.js')\nmodule.exports = purescript\npurescript.displayName = 'purescript'\npurescript.aliases = ['purs']\nfunction purescript(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.purescript = Prism.languages.extend('haskell', {\n    keyword:\n      /\\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b|∀/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:import|as|hiding)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin functions only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\\b/,\n    operator: [\n      // Infix operators\n      Prism.languages.haskell.operator[0], // ASCII operators\n      Prism.languages.haskell.operator[2], // All UTF16 Unicode operator symbols\n      // This regex is equivalent to /(?=[\\x80-\\uFFFF])[\\p{gc=Math_Symbol}\\p{gc=Currency_Symbol}\\p{Modifier_Symbol}\\p{Other_Symbol}]/u\n      // See https://github.com/PrismJS/prism/issues/3006 for more details.\n      /[\\xa2-\\xa6\\xa8\\xa9\\xac\\xae-\\xb1\\xb4\\xb8\\xd7\\xf7\\u02c2-\\u02c5\\u02d2-\\u02df\\u02e5-\\u02eb\\u02ed\\u02ef-\\u02ff\\u0375\\u0384\\u0385\\u03f6\\u0482\\u058d-\\u058f\\u0606-\\u0608\\u060b\\u060e\\u060f\\u06de\\u06e9\\u06fd\\u06fe\\u07f6\\u07fe\\u07ff\\u09f2\\u09f3\\u09fa\\u09fb\\u0af1\\u0b70\\u0bf3-\\u0bfa\\u0c7f\\u0d4f\\u0d79\\u0e3f\\u0f01-\\u0f03\\u0f13\\u0f15-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcc\\u0fce\\u0fcf\\u0fd5-\\u0fd8\\u109e\\u109f\\u1390-\\u1399\\u166d\\u17db\\u1940\\u19de-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u1fbd\\u1fbf-\\u1fc1\\u1fcd-\\u1fcf\\u1fdd-\\u1fdf\\u1fed-\\u1fef\\u1ffd\\u1ffe\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u20a0-\\u20bf\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a\\u213b\\u2140-\\u2144\\u214a-\\u214d\\u214f\\u218a\\u218b\\u2190-\\u2307\\u230c-\\u2328\\u232b-\\u2426\\u2440-\\u244a\\u249c-\\u24e9\\u2500-\\u2767\\u2794-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2b73\\u2b76-\\u2b95\\u2b97-\\u2bff\\u2ce5-\\u2cea\\u2e50\\u2e51\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u2ffb\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303e\\u303f\\u309b\\u309c\\u3190\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3247\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua700-\\ua716\\ua720\\ua721\\ua789\\ua78a\\ua828-\\ua82b\\ua836-\\ua839\\uaa77-\\uaa79\\uab5b\\uab6a\\uab6b\\ufb29\\ufbb2-\\ufbc1\\ufdfc\\ufdfd\\ufe62\\ufe64-\\ufe66\\ufe69\\uff04\\uff0b\\uff1c-\\uff1e\\uff3e\\uff40\\uff5c\\uff5e\\uffe0-\\uffe6\\uffe8-\\uffee\\ufffc\\ufffd]/\n    ]\n  })\n  Prism.languages.purs = Prism.languages.purescript\n}\n","'use strict'\n\nmodule.exports = python\npython.displayName = 'python'\npython.aliases = ['py']\nfunction python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    'string-interpolation': {\n      pattern:\n        /(?:f|rf|fr)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n          pattern:\n            /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'format-spec': {\n              pattern: /(:)[^:(){}]+(?=\\}$)/,\n              lookbehind: true\n            },\n            'conversion-option': {\n              pattern: /![sra](?=[:}]$)/,\n              alias: 'punctuation'\n            },\n            rest: null\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'triple-quoted-string': {\n      pattern: /(?:[rub]|rb|br)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(?:[rub]|rb|br)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    decorator: {\n      pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/im,\n      lookbehind: true,\n      alias: ['annotation', 'punctuation'],\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:and|as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin:\n      /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:True|False|None)\\b/,\n    number:\n      /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?\\b/i,\n    operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.python['string-interpolation'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.python\n  Prism.languages.py = Prism.languages.python\n}\n","'use strict'\n\nmodule.exports = q\nq.displayName = 'q'\nq.aliases = []\nfunction q(Prism) {\n  Prism.languages.q = {\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    comment: [\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n      {\n        pattern: /([\\t )\\]}])\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }, // From http://code.kx.com/wiki/Reference/Slash:\n      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n      {\n        pattern:\n          /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n        lookbehind: true,\n        greedy: true\n      }, // From http://code.kx.com/wiki/Reference/Slash:\n      // A \\ on a line by itself with no preceding matching / will comment to end of file.\n      {\n        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n        greedy: true\n      },\n      {\n        pattern: /^#!.+/m,\n        greedy: true\n      }\n    ],\n    symbol: /`(?::\\S+|[\\w.]*)/,\n    datetime: {\n      pattern:\n        /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n      alias: 'number'\n    },\n    // The negative look-ahead prevents bad highlighting\n    // of verbs 0: and 1:\n    number:\n      /\\b(?![01]:)(?:0[wn]|0W[hj]?|0N[hje]?|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,\n    keyword:\n      /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n    adverb: {\n      pattern: /['\\/\\\\]:?|\\beach\\b/,\n      alias: 'function'\n    },\n    verb: {\n      pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,\n      alias: 'operator'\n    },\n    punctuation: /[(){}\\[\\];.]/\n  }\n}\n","'use strict'\n\nmodule.exports = qml\nqml.displayName = 'qml'\nqml.aliases = []\nfunction qml(Prism) {\n  ;(function (Prism) {\n    var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source\n    var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source\n    var jsExpr =\n      /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source\n        .replace(/<string>/g, function () {\n          return jsString\n        })\n        .replace(/<comment>/g, function () {\n          return jsComment\n        }) // the pattern will blow up, so only a few iterations\n    for (var i = 0; i < 2; i++) {\n      jsExpr = jsExpr.replace(/<expr>/g, function () {\n        return jsExpr\n      })\n    }\n    jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]')\n    Prism.languages.qml = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      'javascript-function': {\n        pattern: RegExp(\n          /((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      'class-name': {\n        pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n        lookbehind: true\n      },\n      property: [\n        {\n          pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^property/,\n            property: /\\w+(?:\\.\\w+)*/\n          }\n        }\n      ],\n      'javascript-expression': {\n        pattern: RegExp(\n          /(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      string: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      keyword: /\\b(?:as|import|on)\\b/,\n      punctuation: /[{}[\\]:;,]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = qore\nqore.displayName = 'qore'\nqore.aliases = []\nfunction qore(Prism) {\n  Prism.languages.qore = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    // Overridden to allow unescaped multi-line strings\n    string: {\n      pattern: /(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n    boolean: /\\b(?:true|false)\\b/i,\n    function: /\\$?\\b(?!\\d)\\w+(?=\\()/,\n    number:\n      /\\b(?:0b[01]+|0x(?:[\\da-f]*\\.)?[\\da-fp\\-]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e\\d+)?[df]|(?:\\d+(?:\\.\\d+)?|\\.\\d+))\\b/i,\n    operator: {\n      pattern:\n        /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n      lookbehind: true\n    },\n    variable: /\\$(?!\\d)\\w+\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = qsharp\nqsharp.displayName = 'qsharp'\nqsharp.aliases = ['qs']\nfunction qsharp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    } // https://docs.microsoft.com/en-us/azure/quantum/user-guide/language/typesystem/\n    // https://github.com/microsoft/qsharp-language/tree/main/Specifications/Language/5_Grammar\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero',\n      // all other keywords\n      other:\n        'Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within'\n    } // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var keywords = RegExp(\n      keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.other)\n    ) // types\n    var identifier = /\\b[A-Za-z_]\\w*\\b/.source\n    var qualifiedName = replace(/<<0>>(?:\\s*\\.\\s*<<0>>)*/.source, [identifier])\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    } // strings\n    var regularString = /\"(?:\\\\.|[^\\\\\"])*\"/.source\n    Prism.languages.qsharp = Prism.languages.extend('clike', {\n      comment: /\\/\\/.*/,\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // open Microsoft.Quantum.Canon;\n          // open Microsoft.Quantum.Canon as CN;\n          pattern: re(/(\\b(?:as|open)\\s+)<<0>>(?=\\s*(?:;|as\\b))/.source, [\n            qualifiedName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // namespace Quantum.App1;\n          pattern: re(/(\\bnamespace\\s+)<<0>>(?=\\s*\\{)/.source, [qualifiedName]),\n          lookbehind: true,\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      number:\n        /(?:\\b0(?:x[\\da-f]+|b[01]+|o[0-7]+)|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d*)?)(?:e[-+]?\\d+)?)l?\\b/i,\n      operator:\n        /\\band=|\\bor=|\\band\\b|\\bor\\b|\\bnot\\b|<[-=]|[-=]>|>>>=?|<<<=?|\\^\\^\\^=?|\\|\\|\\|=?|&&&=?|w\\/=?|~~~|[*\\/+\\-^=!%]=?/,\n      punctuation: /::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('qsharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    }) // single line\n    var interpolationExpr = nested(\n      replace(/\\{(?:[^\"{}]|<<0>>|<<self>>)*\\}/.source, [regularString]),\n      2\n    )\n    Prism.languages.insertBefore('qsharp', 'string', {\n      'interpolation-string': {\n        pattern: re(/\\$\"(?:\\\\.|<<0>>|[^\\\\\"{])*\"/.source, [interpolationExpr]),\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: re(/((?:^|[^\\\\])(?:\\\\\\\\)*)<<0>>/.source, [\n              interpolationExpr\n            ]),\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\{|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                alias: 'language-qsharp',\n                inside: Prism.languages.qsharp\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n  })(Prism)\n  Prism.languages.qs = Prism.languages.qsharp\n}\n","'use strict'\n\nmodule.exports = r\nr.displayName = 'r'\nr.aliases = []\nfunction r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:TRUE|FALSE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [\n      /\\b(?:NaN|Inf)\\b/,\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n    ],\n    keyword:\n      /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  }\n}\n","'use strict'\nvar refractorScheme = require('./scheme.js')\nmodule.exports = racket\nracket.displayName = 'racket'\nracket.aliases = ['rkt']\nfunction racket(Prism) {\n  Prism.register(refractorScheme)\n  Prism.languages.racket = Prism.languages.extend('scheme', {\n    'lambda-parameter': {\n      // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n      // this will just prevent false positives of the `function` pattern\n      pattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('racket', 'string', {\n    lang: {\n      pattern: /^#lang.+/m,\n      greedy: true,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.rkt = Prism.languages.racket\n}\n","'use strict'\n\nmodule.exports = reason\nreason.displayName = 'reason'\nreason.aliases = []\nfunction reason(Prism) {\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword:\n      /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator:\n      /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n  })\n  Prism.languages.insertBefore('reason', 'class-name', {\n    character: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      alias: 'string'\n    },\n    constructor: {\n      // Negative look-ahead prevents from matching things like String.capitalize\n      pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n      alias: 'variable'\n    },\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  }) // We can't match functions property, so let's not even try.\n  delete Prism.languages.reason.function\n}\n","'use strict'\n\nmodule.exports = regex\nregex.displayName = 'regex'\nregex.aliases = []\nfunction regex(Prism) {\n  ;(function (Prism) {\n    var specialEscape = {\n      pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n      alias: 'escape'\n    }\n    var escape =\n      /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|c[a-zA-Z]|0[0-7]{0,2}|[123][0-7]{2}|.)/\n    var charClass = {\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var charClassWithoutDot = {\n      pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')'\n    var range = RegExp(rangeChar + '-' + rangeChar) // the name of a capturing group\n    var groupName = {\n      pattern: /(<|')[^<>']+(?=[>']$)/,\n      lookbehind: true,\n      alias: 'variable'\n    }\n    Prism.languages.regex = {\n      charset: {\n        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n        lookbehind: true,\n        inside: {\n          'charset-negation': {\n            pattern: /(^\\[)\\^/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          'charset-punctuation': {\n            pattern: /^\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          range: {\n            pattern: range,\n            inside: {\n              escape: escape,\n              'range-punctuation': {\n                pattern: /-/,\n                alias: 'operator'\n              }\n            }\n          },\n          'special-escape': specialEscape,\n          charclass: charClassWithoutDot,\n          escape: escape\n        }\n      },\n      'special-escape': specialEscape,\n      charclass: charClass,\n      backreference: [\n        {\n          // a backreference which is not an octal escape\n          pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n          alias: 'keyword'\n        },\n        {\n          pattern: /\\\\k<[^<>']+>/,\n          alias: 'keyword',\n          inside: {\n            'group-name': groupName\n          }\n        }\n      ],\n      anchor: {\n        pattern: /[$^]|\\\\[ABbGZz]/,\n        alias: 'function'\n      },\n      escape: escape,\n      group: [\n        {\n          // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n          // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n          // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n          pattern:\n            /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n          alias: 'punctuation',\n          inside: {\n            'group-name': groupName\n          }\n        },\n        {\n          pattern: /\\)/,\n          alias: 'punctuation'\n        }\n      ],\n      quantifier: {\n        pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n        alias: 'number'\n      },\n      alternation: {\n        pattern: /\\|/,\n        alias: 'keyword'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = rego\nrego.displayName = 'rego'\nrego.aliases = []\nfunction rego(Prism) {\n  // https://www.openpolicyagent.org/docs/latest/policy-reference/\n  Prism.languages.rego = {\n    comment: /#.*/,\n    property: {\n      pattern:\n        /(^|[^\\\\.])(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`|\\b[a-z_]\\w*\\b)(?=\\s*:(?!=))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|default|else|import|package|not|null|some|with|set(?=\\s*\\())\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*\\b(?:\\s*\\.\\s*\\b[a-z_]\\w*\\b)*(?=\\s*\\()/i,\n      inside: {\n        namespace: /\\b\\w+\\b(?=\\s*\\.)/,\n        punctuation: /\\./\n      }\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    operator: /[-+*/%|&]|[<>:=]=?|!=|\\b_\\b/,\n    punctuation: /[,;.\\[\\]{}()]/\n  }\n}\n","'use strict'\n\nmodule.exports = renpy\nrenpy.displayName = 'renpy'\nrenpy.aliases = ['rpy']\nfunction renpy(Prism) {\n  Prism.languages.renpy = {\n    // TODO Write tests.\n    comment: {\n      pattern: /(^|[^\\\\])#.+/,\n      lookbehind: true\n    },\n    string: {\n      pattern:\n        /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2|(?:^#?(?:[0-9a-fA-F]{6}|(?:[0-9a-fA-F]){3})$)/m,\n      greedy: true\n    },\n    function: /\\b[a-z_]\\w*(?=\\()/i,\n    property:\n      /\\b(?:insensitive|idle|hover|selected_idle|selected_hover|background|position|alt|xpos|ypos|pos|xanchor|yanchor|anchor|xalign|yalign|align|xcenter|ycenter|xofsset|yoffset|ymaximum|maximum|xmaximum|xminimum|yminimum|minimum|xsize|ysizexysize|xfill|yfill|area|antialias|black_color|bold|caret|color|first_indent|font|size|italic|justify|kerning|language|layout|line_leading|line_overlap_split|line_spacing|min_width|newline_indent|outlines|rest_indent|ruby_style|slow_cps|slow_cps_multiplier|strikethrough|text_align|underline|hyperlink_functions|vertical|hinting|foreground|left_margin|xmargin|top_margin|bottom_margin|ymargin|left_padding|right_padding|xpadding|top_padding|bottom_padding|ypadding|size_group|child|hover_sound|activate_sound|mouse|focus_mask|keyboard_focus|bar_vertical|bar_invert|bar_resizing|left_gutter|right_gutter|top_gutter|bottom_gutter|left_bar|right_bar|top_bar|bottom_bar|thumb|thumb_shadow|thumb_offset|unscrollable|spacing|first_spacing|box_reverse|box_wrap|order_reverse|fit_first|ysize|thumbnail_width|thumbnail_height|help|text_ypos|text_xpos|idle_color|hover_color|selected_idle_color|selected_hover_color|insensitive_color|alpha|insensitive_background|hover_background|zorder|value|width|xadjustment|xanchoraround|xaround|xinitial|xoffset|xzoom|yadjustment|yanchoraround|yaround|yinitial|yzoom|zoom|ground|height|text_style|text_y_fudge|selected_insensitive|has_sound|has_music|has_voice|focus|hovered|image_style|length|minwidth|mousewheel|offset|prefix|radius|range|right_margin|rotate|rotate_pad|developer|screen_width|screen_height|window_title|name|version|windows_icon|default_fullscreen|default_text_cps|default_afm_time|main_menu_music|sample_sound|enter_sound|exit_sound|save_directory|enter_transition|exit_transition|intra_transition|main_game_transition|game_main_transition|end_splash_transition|end_game_transition|after_load_transition|window_show_transition|window_hide_transition|adv_nvl_transition|nvl_adv_transition|enter_yesno_transition|exit_yesno_transition|enter_replay_transition|exit_replay_transition|say_attribute_transition|directory_name|executable_name|include_update|window_icon|modal|google_play_key|google_play_salt|drag_name|drag_handle|draggable|dragged|droppable|dropped|narrator_menu|action|default_afm_enable|version_name|version_tuple|inside|fadeout|fadein|layers|layer_clipping|linear|scrollbars|side_xpos|side_ypos|side_spacing|edgescroll|drag_joined|drag_raise|drop_shadow|drop_shadow_color|subpixel|easein|easeout|time|crop|auto|update|get_installed_packages|can_update|UpdateVersion|Update|overlay_functions|translations|window_left_padding|show_side_image|show_two_window)\\b/,\n    tag: /\\b(?:label|image|menu|[hv]box|frame|text|imagemap|imagebutton|bar|vbar|screen|textbutton|buttoscreenn|fixed|grid|input|key|mousearea|side|timer|viewport|window|hotspot|hotbar|self|button|drag|draggroup|tag|mm_menu_frame|nvl|block|parallel)\\b|\\$/,\n    keyword:\n      /\\b(?:as|assert|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|yield|adjustment|alignaround|allow|angle|around|box_layout|cache|changed|child_size|clicked|clipping|corner1|corner2|default|delay|exclude|scope|slow|slow_abortable|slow_done|sound|style_group|substitute|suffix|transform_anchor|transpose|unhovered|config|theme|mm_root|gm_root|rounded_window|build|disabled_text|disabled|widget_selected|widget_text|widget_hover|widget|updater|behind|call|expression|hide|init|jump|onlayer|python|renpy|scene|set|show|transform|play|queue|stop|pause|define|window|repeat|contains|choice|on|function|event|animation|clockwise|counterclockwise|circles|knot|null|None|random|has|add|use|fade|dissolve|style|store|id|voice|center|left|right|less_rounded|music|movie|clear|persistent|ui)\\b/,\n    boolean: /\\b(?:[Tt]rue|[Ff]alse)\\b/,\n    number:\n      /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n    operator:\n      /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not|with|at)\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.rpy = Prism.languages.renpy\n}\n","'use strict'\n\nmodule.exports = rest\nrest.displayName = 'rest'\nrest.aliases = []\nfunction rest(Prism) {\n  Prism.languages.rest = {\n    table: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\n        }\n      },\n      {\n        pattern:\n          /(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /[=-]+/\n        }\n      }\n    ],\n    // Directive-like patterns\n    'substitution-def': {\n      pattern: /(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( )(?! )[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [\n      {\n        pattern: /(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]$/\n        }\n      },\n      {\n        pattern: /(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^_|:$/\n        }\n      }\n    ],\n    directive: {\n      pattern: /(^[\\t ]*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern:\n        /(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [\n      // Overlined and underlined\n      {\n        pattern:\n          /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation:\n            /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }, // Underlined only\n      {\n        pattern:\n          /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }\n    ],\n    hr: {\n      pattern:\n        /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^[\\t ]*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern:\n        /(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern:\n        /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern:\n        /(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [\n      {\n        pattern:\n          /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n        lookbehind: true,\n        inside: {\n          bold: {\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /(^\\*).+(?=\\*$)/,\n            lookbehind: true\n          },\n          'inline-literal': {\n            pattern: /(^``).+(?=``$)/,\n            lookbehind: true,\n            alias: 'symbol'\n          },\n          role: {\n            pattern: /^:[^:]+:|:[^:]+:$/,\n            alias: 'function',\n            inside: {\n              punctuation: /^:|:$/\n            }\n          },\n          'interpreted-text': {\n            pattern: /(^`).+(?=`$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          substitution: {\n            pattern: /(^\\|).+(?=\\|$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\*\\*?|``?|\\|/\n        }\n      }\n    ],\n    link: [\n      {\n        pattern: /\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }\n      },\n      {\n        pattern:\n          /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n        alias: 'string',\n        inside: {\n          punctuation: /^_?`|`$|`?_?_$/\n        }\n      }\n    ],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = rip\nrip.displayName = 'rip'\nrip.aliases = []\nfunction rip(Prism) {\n  Prism.languages.rip = {\n    comment: /#.*/,\n    keyword:\n      /(?:=>|->)|\\b(?:class|if|else|switch|case|return|exit|try|catch|finally|raise)\\b/,\n    builtin: /@|\\bSystem\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n    time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n    datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n    character: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n    regex: {\n      pattern:\n        /(^|[^/])\\/(?!\\/)(?:\\[[^\\n\\r\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/(?=\\s*(?:$|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    number: /[+-]?\\b(?:\\d+\\.\\d+|\\d+)\\b/,\n    punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n    reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n  }\n}\n","'use strict'\n\nmodule.exports = roboconf\nroboconf.displayName = 'roboconf'\nroboconf.aliases = []\nfunction roboconf(Prism) {\n  Prism.languages.roboconf = {\n    comment: /#.*/,\n    keyword: {\n      pattern:\n        /(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,\n      lookbehind: true\n    },\n    component: {\n      pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n      alias: 'variable'\n    },\n    property: /[\\w.-]+(?=[ \\t]*:)/,\n    value: {\n      pattern: /(=[ \\t]*(?![ \\t]))[^,;]+/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    optional: {\n      pattern: /\\(optional\\)/,\n      alias: 'builtin'\n    },\n    wildcard: {\n      pattern: /(\\.)\\*/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    punctuation: /[{},.;:=]/\n  }\n}\n","'use strict'\n\nmodule.exports = robotframework\nrobotframework.displayName = 'robotframework'\nrobotframework.aliases = []\nfunction robotframework(Prism) {\n  ;(function (Prism) {\n    var comment = {\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    var variable = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[$@&%]\\{|\\}$/\n      }\n    }\n    function createSection(name, inside) {\n      var extendecInside = {}\n      extendecInside['section-header'] = {\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\n        alias: 'keyword'\n      } // copy inside tokens\n      for (var token in inside) {\n        extendecInside[token] = inside[token]\n      }\n      extendecInside['tag'] = {\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\[|\\]/\n        }\n      }\n      extendecInside['variable'] = variable\n      extendecInside['comment'] = comment\n      return {\n        pattern: RegExp(\n          /^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(\n            /<name>/g,\n            function () {\n              return name\n            }\n          ),\n          'im'\n        ),\n        alias: 'section',\n        inside: extendecInside\n      }\n    }\n    var docTag = {\n      pattern:\n        /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n      lookbehind: true,\n      alias: 'string'\n    }\n    var testNameLike = {\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        variable: variable\n      }\n    }\n    var testPropertyLike = {\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      inside: {\n        variable: variable\n      }\n    }\n    Prism.languages['robotframework'] = {\n      settings: createSection('Settings', {\n        documentation: {\n          pattern:\n            /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        property: {\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n          lookbehind: true\n        }\n      }),\n      variables: createSection('Variables'),\n      'test-cases': createSection('Test Cases', {\n        'test-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      keywords: createSection('Keywords', {\n        'keyword-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      tasks: createSection('Tasks', {\n        'task-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      comment: comment\n    }\n    Prism.languages.robot = Prism.languages['robotframework']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ruby\nruby.displayName = 'ruby'\nruby.aliases = ['rb']\nfunction ruby(Prism) {\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *     constant, builtin, variable, symbol, regex\n   */\n  ;(function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: [\n        /#.*/,\n        {\n          pattern: /^=begin\\s[\\s\\S]*?^=end/m,\n          greedy: true\n        }\n      ],\n      'class-name': {\n        pattern: /(\\b(?:class)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword:\n        /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/\n    })\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.ruby\n      }\n    }\n    delete Prism.languages.ruby.function\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      regex: [\n        {\n          pattern: RegExp(\n            /%r/.source +\n              '(?:' +\n              [\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n                /\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/.source, // Here we need to specifically allow interpolation\n                /\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/.source,\n                /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/.source,\n                /<(?:[^<>\\\\]|\\\\[\\s\\S])*>/.source\n              ].join('|') +\n              ')' +\n              /[egimnosux]{0,6}/.source\n          ),\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          pattern:\n            /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: {\n        pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n        lookbehind: true\n      },\n      'method-definition': {\n        pattern: /(\\bdef\\s+)[\\w.]+/,\n        lookbehind: true,\n        inside: {\n          function: /\\w+$/,\n          rest: Prism.languages.ruby\n        }\n      }\n    })\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin:\n        /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z]\\w*(?:[?!]|\\b)/\n    })\n    Prism.languages.ruby.string = [\n      {\n        pattern: RegExp(\n          /%[qQiIwWxs]?/.source +\n            '(?:' +\n            [\n              /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n              /\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/.source, // Here we need to specifically allow interpolation\n              /\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/.source,\n              /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/.source,\n              /<(?:[^<>\\\\]|\\\\[\\s\\S])*>/.source\n            ].join('|') +\n            ')'\n        ),\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern:\n          /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n        alias: 'heredoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<[-~]?[a-z_]\\w*|[a-z_]\\w*$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<[-~]?/\n            }\n          },\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n        alias: 'heredoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<[-~]?'[a-z_]\\w*'|[a-z_]\\w*$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<[-~]?'|'$/\n            }\n          }\n        }\n      }\n    ]\n    Prism.languages.rb = Prism.languages.ruby\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = rust\nrust.displayName = 'rust'\nrust.aliases = []\nfunction rust(Prism) {\n  ;(function (Prism) {\n    var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source\n    for (var i = 0; i < 2; i++) {\n      // support 4 levels of nested comments\n      multilineComment = multilineComment.replace(/<self>/g, function () {\n        return multilineComment\n      })\n    }\n    multilineComment = multilineComment.replace(/<self>/g, function () {\n      return /[^\\s\\S]/.source\n    })\n    Prism.languages.rust = {\n      comment: [\n        {\n          pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      string: {\n        pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n        greedy: true,\n        alias: 'string'\n      },\n      attribute: {\n        pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n        greedy: true,\n        alias: 'attr-name',\n        inside: {\n          string: null // see below\n        }\n      },\n      // Closure params should not be confused with bitwise OR |\n      'closure-params': {\n        pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'closure-punctuation': {\n            pattern: /^\\||\\|$/,\n            alias: 'punctuation'\n          },\n          rest: null // see below\n        }\n      },\n      'lifetime-annotation': {\n        pattern: /'\\w+/,\n        alias: 'symbol'\n      },\n      'fragment-specifier': {\n        pattern: /(\\$\\w+:)[a-z]+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      variable: /\\$\\w+/,\n      'function-definition': {\n        pattern: /(\\bfn\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      'type-definition': {\n        pattern: /(\\b(?:enum|struct|union)\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'module-declaration': [\n        {\n          pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n          lookbehind: true,\n          alias: 'namespace'\n        },\n        {\n          pattern:\n            /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /::/\n          }\n        }\n      ],\n      keyword: [\n        // https://github.com/rust-lang/reference/blob/master/src/keywords.md\n        /\\b(?:abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|Self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/, // primitives and str\n        // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n        /\\b(?:[ui](?:8|16|32|64|128|size)|f(?:32|64)|bool|char|str)\\b/\n      ],\n      // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n      // and Rust's naming conventions recommend snake_case anyway.\n      // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n      macro: {\n        pattern: /\\b\\w+!/,\n        alias: 'property'\n      },\n      constant: /\\b[A-Z_][A-Z_\\d]+\\b/,\n      'class-name': /\\b[A-Z]\\w*\\b/,\n      namespace: {\n        pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      // Hex, oct, bin, dec numbers with visual separators and type suffix\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64|size)?|f32|f64))?\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n      operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n    }\n    Prism.languages.rust['closure-params'].inside.rest = Prism.languages.rust\n    Prism.languages.rust['attribute'].inside['string'] =\n      Prism.languages.rust['string']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sas\nsas.displayName = 'sas'\nsas.aliases = []\nfunction sas(Prism) {\n  ;(function (Prism) {\n    var stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source\n    var number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i\n    var numericConstant = {\n      pattern: RegExp(stringPattern + '[bx]'),\n      alias: 'number'\n    }\n    var macroVariable = {\n      pattern: /&[a-z_]\\w*/i\n    }\n    var macroKeyword = {\n      pattern:\n        /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMGLOBL|SYMLOCAL|SYMEXIST|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var step = {\n      pattern: /(^|\\s)(?:proc\\s+\\w+|quit|run|data(?!=))\\b/i,\n      alias: 'keyword',\n      lookbehind: true\n    }\n    var comment = [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^[ \\t]*|;\\s*)\\*[^;]*;/m,\n        lookbehind: true\n      }\n    ]\n    var string = {\n      pattern: RegExp(stringPattern),\n      greedy: true\n    }\n    var punctuation = /[$%@.(){}\\[\\];,\\\\]/\n    var func = {\n      pattern: /%?\\b\\w+(?=\\()/,\n      alias: 'keyword'\n    }\n    var args = {\n      function: func,\n      'arg-value': {\n        pattern: /(=\\s*)[A-Z\\.]+/i,\n        lookbehind: true\n      },\n      operator: /=/,\n      'macro-variable': macroVariable,\n      arg: {\n        pattern: /[A-Z]+/i,\n        alias: 'keyword'\n      },\n      number: number,\n      'numeric-constant': numericConstant,\n      punctuation: punctuation,\n      string: string\n    }\n    var format = {\n      pattern: /\\b(?:format|put)\\b=?[\\w'$.]+/im,\n      inside: {\n        keyword: /^(?:format|put)(?==)/i,\n        equals: /=/,\n        format: {\n          pattern: /(?:\\w|\\$\\d)+\\.\\d?/i,\n          alias: 'number'\n        }\n      }\n    }\n    var altformat = {\n      pattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\n      inside: {\n        keyword: /^(?:format|put)/i,\n        format: {\n          pattern: /[\\w$]+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    }\n    var globalStatements = {\n      pattern:\n        /((?:^|\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var submitStatement = {\n      pattern: /(^|\\s)(?:submit(?:\\s+(?:load|parseonly|norun))?|endsubmit)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var actionSets =\n      /accessControl|cdm|aggregation|aStore|ruleMining|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|sccasl|clustering|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deepLearn|deepNeural|varReduce|simSystem|ds2|deduplication|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gam|gleam|graphSemiSupLearn|gVarCluster|hiddenMarkovModel|hyperGroup|image|iml|ica|kernalPca|langModel|ldaTopic|sparseML|mlTools|mixed|modelPublishing|mbc|network|optNetwork|neuralNet|nonlinear|nmf|nonParametricBayes|optimization|panel|pls|percentile|pca|phreg|qkb|qlim|quantreg|recommend|tsReconcile|deepRnn|regression|reinforcementLearn|robustPca|sampling|sparkEmbeddedProcess|search(?:Analytics)?|sentimentAnalysis|sequence|configuration|session(?:Prop)?|severity|simple|smartData|sandwich|spatialreg|stabilityMonitoring|spc|loadStreams|svDataDescription|svm|table|conditionalRandomFields|text(?:Rule(?:Develop|Score)|Mining|Parse|Topic|Util|Filters|Frequency)|tsInfo|timeData|transpose|uniTimeSeries/\n        .source\n    var casActions = {\n      pattern: RegExp(\n        /(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(\n          /<act>/g,\n          function () {\n            return actionSets\n          }\n        ),\n        'i'\n      ),\n      lookbehind: true,\n      inside: {\n        keyword: RegExp(\n          /(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function () {\n            return actionSets\n          }),\n          'i'\n        ),\n        action: {\n          pattern: /(?:action)/i,\n          alias: 'keyword'\n        },\n        comment: comment,\n        function: func,\n        'arg-value': args['arg-value'],\n        operator: args.operator,\n        argument: args.arg,\n        number: number,\n        'numeric-constant': numericConstant,\n        punctuation: punctuation,\n        string: string\n      }\n    }\n    var keywords = {\n      pattern:\n        /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|end(?:source|comp)?|entryTitle|else|eval(?:uate)?|exec(?:ute)?|exit|fill(?:attrs)?|file(?:name)?|flist|fnc|function(?:list)?|goto|global|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|name|noobs|nowd|_?null_|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|put|print|raise|ranexp|rannor|rbreak|retain|return|select|set|session|sessref|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|yaxisopts|y2axisopts)\\b/i,\n      lookbehind: true\n    }\n    Prism.languages.sas = {\n      datalines: {\n        pattern: /^([ \\t]*)(?:(?:data)?lines|cards);[\\s\\S]+?^[ \\t]*;/im,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          keyword: {\n            pattern: /^(?:(?:data)?lines|cards)/i\n          },\n          punctuation: /;/\n        }\n      },\n      'proc-sql': {\n        pattern:\n          /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          sql: {\n            pattern: RegExp(\n              /^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            alias: 'language-sql',\n            inside: Prism.languages.sql\n          },\n          'global-statements': globalStatements,\n          'sql-statements': {\n            pattern:\n              /(^|\\s)(?:disconnect\\s+from|exec(?:ute)?|begin|commit|rollback|reset|validate)\\b/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-groovy': {\n        pattern:\n          /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          groovy: {\n            pattern: RegExp(\n              /(^[ \\t]*submit(?:\\s+(?:load|parseonly|norun))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            lookbehind: true,\n            alias: 'language-groovy',\n            inside: Prism.languages.groovy\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-lua': {\n        pattern:\n          /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|run|data);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          lua: {\n            pattern: RegExp(\n              /(^[ \\t]*submit(?:\\s+(?:load|parseonly|norun))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            lookbehind: true,\n            alias: 'language-lua',\n            inside: Prism.languages.lua\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-cas': {\n        pattern:\n          /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          'statement-var': {\n            pattern: /((?:^|\\s)=?)saveresult\\s[^;]+/im,\n            lookbehind: true,\n            inside: {\n              statement: {\n                pattern: /^saveresult\\s+\\S+/i,\n                inside: {\n                  keyword: /^(?:saveresult)/i\n                }\n              },\n              rest: args\n            }\n          },\n          'cas-actions': casActions,\n          statement: {\n            pattern:\n              /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\n            lookbehind: true,\n            inside: args\n          },\n          step: step,\n          keyword: keywords,\n          function: func,\n          format: format,\n          altformat: altformat,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-args': {\n        pattern: RegExp(\n          /(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(\n            /<str>/g,\n            function () {\n              return stringPattern\n            }\n          ),\n          'im'\n        ),\n        lookbehind: true,\n        inside: args\n      },\n      /*Special keywords within macros*/\n      'macro-keyword': macroKeyword,\n      'macro-variable': macroVariable,\n      'macro-string-functions': {\n        pattern:\n          /((?:^|\\s|=))%(?:NRBQUOTE|NRQUOTE|NRSTR|BQUOTE|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /%(?:NRBQUOTE|NRQUOTE|NRSTR|BQUOTE|QUOTE|STR)/i,\n            alias: 'keyword'\n          },\n          'macro-keyword': macroKeyword,\n          'macro-variable': macroVariable,\n          'escaped-char': {\n            pattern: /%['\"()<>=¬^~;,#]/i\n          },\n          punctuation: punctuation\n        }\n      },\n      'macro-declaration': {\n        pattern: /^%macro[^;]+(?=;)/im,\n        inside: {\n          keyword: /%macro/i\n        }\n      },\n      'macro-end': {\n        pattern: /^%mend[^;]+(?=;)/im,\n        inside: {\n          keyword: /%mend/i\n        }\n      },\n      /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */\n      macro: {\n        pattern: /%_\\w+(?=\\()/,\n        alias: 'keyword'\n      },\n      input: {\n        pattern: /\\binput\\s[-\\w\\s/*.$&]+;/i,\n        inside: {\n          input: {\n            alias: 'keyword',\n            pattern: /^input/i\n          },\n          comment: comment,\n          number: number,\n          'numeric-constant': numericConstant\n        }\n      },\n      'options-args': {\n        pattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\n        lookbehind: true,\n        inside: args\n      },\n      'cas-actions': casActions,\n      comment: comment,\n      function: func,\n      format: format,\n      altformat: altformat,\n      'numeric-constant': numericConstant,\n      datetime: {\n        // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n        pattern: RegExp(stringPattern + '(?:dt?|t)'),\n        alias: 'number'\n      },\n      string: string,\n      step: step,\n      keyword: keywords,\n      // In SAS Studio syntax highlighting, these operators are styled like keywords\n      'operator-keyword': {\n        pattern: /\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,\n        alias: 'operator'\n      },\n      // Decimal (1.2e23), hexadecimal (0c1x)\n      number: number,\n      operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/i,\n      punctuation: punctuation\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sass\nsass.displayName = 'sass'\nsass.aliases = []\nfunction sass(Prism) {\n  ;(function (Prism) {\n    Prism.languages.sass = Prism.languages.extend('css', {\n      // Sass comments don't need to be closed, only indented\n      comment: {\n        pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('sass', 'atrule', {\n      // We want to consume the whole line\n      'atrule-line': {\n        // Includes support for = and + shortcuts\n        pattern: /^(?:[ \\t]*)[@+=].+/m,\n        greedy: true,\n        inside: {\n          atrule: /(?:@[\\w-]+|[+=])/m\n        }\n      }\n    })\n    delete Prism.languages.sass.atrule\n    var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    var operator = [\n      /[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/,\n      {\n        pattern: /(\\s)-(?=\\s)/,\n        lookbehind: true\n      }\n    ]\n    Prism.languages.insertBefore('sass', 'property', {\n      // We want to consume the whole line\n      'variable-line': {\n        pattern: /^[ \\t]*\\$.+/m,\n        greedy: true,\n        inside: {\n          punctuation: /:/,\n          variable: variable,\n          operator: operator\n        }\n      },\n      // We want to consume the whole line\n      'property-line': {\n        pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n        greedy: true,\n        inside: {\n          property: [\n            /[^:\\s]+(?=\\s*:)/,\n            {\n              pattern: /(:)[^:\\s]+/,\n              lookbehind: true\n            }\n          ],\n          punctuation: /:/,\n          variable: variable,\n          operator: operator,\n          important: Prism.languages.sass.important\n        }\n      }\n    })\n    delete Prism.languages.sass.property\n    delete Prism.languages.sass.important // Now that whole lines for other patterns are consumed,\n    // what's left should be selectors\n    Prism.languages.insertBefore('sass', 'punctuation', {\n      selector: {\n        pattern:\n          /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJava = require('./java.js')\nmodule.exports = scala\nscala.displayName = 'scala'\nscala.aliases = []\nfunction scala(Prism) {\n  Prism.register(refractorJava)\n  Prism.languages.scala = Prism.languages.extend('java', {\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n    number:\n      /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    builtin:\n      /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  })\n  delete Prism.languages.scala['class-name']\n  delete Prism.languages.scala['function']\n}\n","'use strict'\n\nmodule.exports = scheme\nscheme.displayName = 'scheme'\nscheme.aliases = []\nfunction scheme(Prism) {\n  ;(function (Prism) {\n    Prism.languages.scheme = {\n      // this supports \"normal\" single-line comments:\n      //   ; comment\n      // and (potentially nested) multiline comments:\n      //   #| comment #| nested |# still comment |#\n      // (only 1 level of nesting is supported)\n      comment:\n        /;.*|#;\\s*(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\[(?:[^\\[\\]]|\\[[^\\[\\]]*\\])*\\])|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#)|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#))*\\|#)*\\|#/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      symbol: {\n        pattern: /'[^()\\[\\]#'\\s]+/,\n        greedy: true\n      },\n      character: {\n        pattern:\n          /#\\\\(?:[ux][a-fA-F\\d]+\\b|[-a-zA-Z]+\\b|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\\S)/,\n        greedy: true,\n        alias: 'string'\n      },\n      'lambda-parameter': [\n        // https://www.cs.cmu.edu/Groups/AI/html/r4rs/r4rs_6.html#SEC30\n        {\n          pattern:\n            /((?:^|[^'`#])[(\\[]lambda\\s+)(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)/,\n          lookbehind: true\n        },\n        {\n          pattern: /((?:^|[^'`#])[(\\[]lambda\\s+[(\\[])[^()\\[\\]']+/,\n          lookbehind: true\n        }\n      ],\n      keyword: {\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|export|except|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\\*)?|let\\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      builtin: {\n        // all functions of the base library of R7RS plus some of built-ins of R5Rs\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\\?|boolean=?\\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\\?|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)|close-(?:input-port|output-port|port)|complex\\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\\??|eq\\?|equal\\?|eqv\\?|error|error-object(?:-irritants|-message|\\?)|eval|even\\?|exact(?:-integer-sqrt|-integer\\?|\\?)?|expt|features|file-error\\?|floor(?:-quotient|-remainder|\\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\\??|input-port(?:-open\\?|\\?)|integer(?:->char|\\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\\?|newline|not|null\\?|number(?:->string|\\?)|numerator|odd\\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\\?|\\?)|pair\\?|peek-char|peek-u8|port\\?|positive\\?|procedure\\?|quotient|raise|raise-continuable|rational\\?|rationalize|read-(?:bytevector|bytevector!|char|error\\?|line|string|u8)|real\\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)?|substring|symbol(?:->string|\\?|=\\?)|syntax-error|textual-port\\?|truncate(?:-quotient|-remainder|\\/)?|u8-ready\\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\\?)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /((?:^|[^'`#])[(\\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      number: {\n        // The number pattern from [the R7RS spec](https://small.r7rs.org/attachment/r7rs.pdf).\n        //\n        // <number>      := <num 2>|<num 8>|<num 10>|<num 16>\n        // <num R>       := <prefix R><complex R>\n        // <complex R>   := <real R>(?:@<real R>|<imaginary R>)?|<imaginary R>\n        // <imaginary R> := [+-](?:<ureal R>|(?:inf|nan)\\.0)?i\n        // <real R>      := [+-]?<ureal R>|[+-](?:inf|nan)\\.0\n        // <ureal R>     := <uint R>(?:\\/<uint R>)?\n        //                | <decimal R>\n        //\n        // <decimal 10>  := (?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?\n        // <uint R>      := <digit R>+\n        // <prefix R>    := <radix R>(?:#[ei])?|(?:#[ei])?<radix R>\n        // <radix 2>     := #b\n        // <radix 8>     := #o\n        // <radix 10>    := (?:#d)?\n        // <radix 16>    := #x\n        // <digit 2>     := [01]\n        // <digit 8>     := [0-7]\n        // <digit 10>    := \\d\n        // <digit 16>    := [0-9a-f]\n        //\n        // The problem with this grammar is that the resulting regex is way to complex, so we simplify by grouping all\n        // non-decimal bases together. This results in a decimal (dec) and combined binary, octal, and hexadecimal (box)\n        // pattern:\n        pattern: RegExp(\n          SortedBNF({\n            '<ureal dec>': /\\d+(?:\\/\\d+)|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/\n              .source,\n            '<real dec>': /[+-]?<ureal dec>|[+-](?:inf|nan)\\.0/.source,\n            '<imaginary dec>': /[+-](?:<ureal dec>|(?:inf|nan)\\.0)?i/.source,\n            '<complex dec>':\n              /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/\n                .source,\n            '<num dec>': /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,\n            '<ureal box>': /[0-9a-f]+(?:\\/[0-9a-f]+)?/.source,\n            '<real box>': /[+-]?<ureal box>|[+-](?:inf|nan)\\.0/.source,\n            '<imaginary box>': /[+-](?:<ureal box>|(?:inf|nan)\\.0)?i/.source,\n            '<complex box>':\n              /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/\n                .source,\n            '<num box>': /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/\n              .source,\n            '<number>': /(^|[()\\[\\]\\s])(?:<num dec>|<num box>)(?=[()\\[\\]\\s]|$)/\n              .source\n          }),\n          'i'\n        ),\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[()\\[\\]\\s])#(?:[ft]|false|true)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      function: {\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      identifier: {\n        pattern: /(^|[()\\[\\]\\s])\\|(?:[^\\\\|]|\\\\.)*\\|(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      punctuation: /[()\\[\\]']/\n    }\n    /**\n     * Given a topologically sorted BNF grammar, this will return the RegExp source of last rule of the grammar.\n     *\n     * @param {Record<string, string>} grammar\n     * @returns {string}\n     */\n    function SortedBNF(grammar) {\n      for (var key in grammar) {\n        grammar[key] = grammar[key].replace(/<[\\w\\s]+>/g, function (key) {\n          return '(?:' + grammar[key].trim() + ')'\n        })\n      } // return the last item\n      return grammar[key]\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = scss\nscss.displayName = 'scss'\nscss.aliases = []\nfunction scss(Prism) {\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/ // See rest below\n      }\n    },\n    // url, compassified\n    url: /(?:[-a-z]+-)?url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern:\n        /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/m,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    },\n    property: {\n      pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  })\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [\n      /@(?:if|else(?: if)?|forward|for|each|while|import|use|extend|debug|warn|mixin|include|function|return|content)\\b/i,\n      {\n        pattern: /( )(?:from|through)(?= )/,\n        lookbehind: true\n      }\n    ]\n  })\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  })\n  Prism.languages.insertBefore('scss', 'function', {\n    'module-modifier': {\n      pattern: /\\b(?:as|with|show|hide)\\b/i,\n      alias: 'keyword'\n    },\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss\n}\n","'use strict'\nvar refractorBash = require('./bash.js')\nmodule.exports = shellSession\nshellSession.displayName = 'shellSession'\nshellSession.aliases = []\nfunction shellSession(Prism) {\n  Prism.register(refractorBash)\n  ;(function (Prism) {\n    // CAREFUL!\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n    var strings = [\n      // normal string\n      /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,\n      /'[^']*'/.source,\n      /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source, // here doc\n      // 2 capturing groups\n      /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source\n    ].join('|')\n    Prism.languages['shell-session'] = {\n      command: {\n        pattern: RegExp(\n          // user info\n          /^/.source +\n            '(?:' + // <user> \":\" ( <path> )?\n            (/[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/\n              .source +\n              '|' + // <path>\n              // Since the path pattern is quite general, we will require it to start with a special character to\n              // prevent false positives.\n              /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) +\n            ')?' + // shell symbol\n            /[$#%](?=\\s)/.source + // bash command\n            /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(\n              /<<str>>/g,\n              function () {\n                return strings\n              }\n            ),\n          'm'\n        ),\n        greedy: true,\n        inside: {\n          info: {\n            // foo@bar:~/files$ exit\n            // foo@bar$ exit\n            // ~/files$ exit\n            pattern: /^[^#$%]+/,\n            alias: 'punctuation',\n            inside: {\n              user: /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\n              punctuation: /:/,\n              path: /[\\s\\S]+/\n            }\n          },\n          bash: {\n            pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\n            lookbehind: true,\n            alias: 'language-bash',\n            inside: Prism.languages.bash\n          },\n          'shell-symbol': {\n            pattern: /^[$#%]/,\n            alias: 'important'\n          }\n        }\n      },\n      output: /.(?:.*(?:[\\r\\n]|.$))*/\n    }\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] =\n      Prism.languages['shell-session']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = smali\nsmali.displayName = 'smali'\nsmali.aliases = []\nfunction smali(Prism) {\n  // Test files for the parser itself:\n  // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n  Prism.languages.smali = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n      lookbehind: true,\n      inside: {\n        'class-name': {\n          pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n          lookbehind: true\n        },\n        namespace: {\n          pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\//\n          }\n        },\n        builtin: /^L/\n      }\n    },\n    builtin: [\n      {\n        // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n        pattern: /([();\\[])[BCDFIJSVZ]+/,\n        lookbehind: true\n      },\n      {\n        // e.g. .field mWifiOnUid:I\n        pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /(\\.end\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n      lookbehind: true\n    },\n    field: {\n      pattern: /[\\w$]+(?=:)/,\n      alias: 'variable'\n    },\n    register: {\n      pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    boolean: {\n      pattern: /(^|[^\\w.-])(?:true|false)(?![\\w.-])/,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n      lookbehind: true\n    },\n    label: {\n      pattern: /(:)\\w+/,\n      lookbehind: true,\n      alias: 'property'\n    },\n    operator: /->|\\.\\.|[\\[=]/,\n    punctuation: /[{}(),;:]/\n  }\n}\n","'use strict'\n\nmodule.exports = smalltalk\nsmalltalk.displayName = 'smalltalk'\nsmalltalk.aliases = []\nfunction smalltalk(Prism) {\n  Prism.languages.smalltalk = {\n    comment: /\"(?:\"\"|[^\"])*\"/,\n    character: {\n      pattern: /\\$./,\n      alias: 'string'\n    },\n    string: /'(?:''|[^'])*'/,\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n    'block-arguments': {\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\n      lookbehind: true,\n      inside: {\n        variable: /:[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    'temporary-variables': {\n      pattern: /\\|[^|]+\\|/,\n      inside: {\n        variable: /[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    keyword: /\\b(?:nil|true|false|self|super|new)\\b/,\n    number: [\n      /\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\n      /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\n    ],\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n    punctuation: /[.;:?\\[\\](){}]/\n  }\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = smarty\nsmarty.displayName = 'smarty'\nsmarty.aliases = []\nfunction smarty(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  /* TODO\nAdd support for variables inside double quoted strings\nAdd support for {php}\n*/\n  ;(function (Prism) {\n    Prism.languages.smarty = {\n      comment: /\\{\\*[\\s\\S]*?\\*\\}/,\n      delimiter: {\n        pattern: /^\\{|\\}$/i,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      variable: [\n        /\\$(?!\\d)\\w+/,\n        /#(?!\\d)\\w+#/,\n        {\n          pattern: /(\\.|->)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n          lookbehind: true\n        }\n      ],\n      function: [\n        {\n          pattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        /^\\/?(?!\\d)\\w+/,\n        /(?!\\d)\\w+(?=\\()/\n      ],\n      'attr-name': {\n        // Value is made optional because it may have already been tokenized\n        pattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n        inside: {\n          variable: {\n            pattern: /(=\\s*)(?!\\d)\\w+/,\n            lookbehind: true\n          },\n          operator: /=/\n        }\n      },\n      punctuation: [/[\\[\\]().,:`]|->/],\n      operator: [\n        /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n        /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n        /\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/\n      ],\n      keyword: /\\b(?:false|off|on|no|true|yes)\\b/\n    } // Tokenize all inline Smarty expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var smartyPattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g\n      var smartyLitteralStart = '{literal}'\n      var smartyLitteralEnd = '{/literal}'\n      var smartyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'smarty',\n        smartyPattern,\n        function (match) {\n          // Smarty tags inside {literal} block are ignored\n          if (match === smartyLitteralEnd) {\n            smartyLitteralMode = false\n          }\n          if (!smartyLitteralMode) {\n            if (match === smartyLitteralStart) {\n              smartyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sml\nsml.displayName = 'sml'\nsml.aliases = ['smlnj']\nfunction sml(Prism) {\n  // https://smlfamily.github.io/sml97-defn.pdf\n  // https://people.mpi-sws.org/~rossberg/sml.html\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i\n    Prism.languages.sml = {\n      // allow one level of nesting\n      comment:\n        /\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,\n      string: {\n        pattern: /#?\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': [\n        {\n          // This is only an approximation since the real grammar is context-free\n          //\n          // Why the main loop so complex?\n          // The main loop is approximately the same as /(?:\\s*(?:[*,]|->)\\s*<TERMINAL>)*/ which is, obviously, a lot\n          // simpler. The difference is that if a comma is the last iteration of the loop, then the terminal must be\n          // followed by a long identifier.\n          pattern: RegExp(\n            /((?:^|[^:]):\\s*)<TERMINAL>(?:\\s*(?:(?:\\*|->)\\s*<TERMINAL>|,\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\s+<LONG-ID>)))*/.source\n              .replace(/<NOT-LAST>/g, function () {\n                return /\\s*(?:[*,]|->)/.source\n              })\n              .replace(/<TERMINAL>/g, function () {\n                return /(?:'[\\w']*|<LONG-ID>|\\((?:[^()]|\\([^()]*\\))*\\)|\\{(?:[^{}]|\\{[^{}]*\\})*\\})(?:\\s+<LONG-ID>)*/\n                  .source\n              })\n              .replace(/<LONG-ID>/g, function () {\n                return /(?!<KEYWORD>)[a-z\\d_][\\w'.]*/.source\n              })\n              .replace(/<KEYWORD>/g, function () {\n                return keywords.source\n              }),\n            'i'\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        {\n          pattern:\n            /((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,\n          lookbehind: true\n        }\n      ],\n      function: {\n        pattern: /((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,\n        lookbehind: true\n      },\n      keyword: keywords,\n      variable: {\n        pattern: /(^|[^\\w'])'[\\w']*/,\n        lookbehind: true\n      },\n      number: /~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,\n      word: {\n        pattern: /\\b0w(?:\\d+|x[\\da-f]+)\\b/i,\n        alias: 'constant'\n      },\n      boolean: /\\b(?:false|true)\\b/i,\n      operator: /\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,\n      punctuation: /[(){}\\[\\].:,;]/\n    }\n    Prism.languages.sml['class-name'][0].inside = Prism.languages.sml\n    Prism.languages.smlnj = Prism.languages.sml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = solidity\nsolidity.displayName = 'solidity'\nsolidity.aliases = ['sol']\nfunction solidity(Prism) {\n  Prism.languages.solidity = Prism.languages.extend('clike', {\n    'class-name': {\n      pattern:\n        /(\\b(?:contract|enum|interface|library|new|struct|using)\\s+)(?!\\d)[\\w$]+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\\b/,\n    operator: /=>|->|:=|=:|\\*\\*|\\+\\+|--|\\|\\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/\n  })\n  Prism.languages.insertBefore('solidity', 'keyword', {\n    builtin:\n      /\\b(?:address|bool|string|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|byte|bytes(?:[1-9]|[12]\\d|3[0-2])?)\\b/\n  })\n  Prism.languages.insertBefore('solidity', 'number', {\n    version: {\n      pattern: /([<>]=?|\\^)\\d+\\.\\d+\\.\\d+\\b/,\n      lookbehind: true,\n      alias: 'number'\n    }\n  })\n  Prism.languages.sol = Prism.languages.solidity\n}\n","'use strict'\n\nmodule.exports = solutionFile\nsolutionFile.displayName = 'solutionFile'\nsolutionFile.aliases = []\nfunction solutionFile(Prism) {\n  ;(function (Prism) {\n    var guid = {\n      // https://en.wikipedia.org/wiki/Universally_unique_identifier#Format\n      pattern: /\\{[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}\\}/i,\n      alias: 'constant',\n      inside: {\n        punctuation: /[{}]/\n      }\n    }\n    Prism.languages['solution-file'] = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n        greedy: true,\n        inside: {\n          guid: guid\n        }\n      },\n      object: {\n        // Foo\n        //   Bar(\"abs\") = 9\n        //   EndBar\n        //   Prop = TRUE\n        // EndFoo\n        pattern:\n          /^([ \\t]*)(?:([A-Z]\\w*)\\b(?=.*(?:\\r\\n?|\\n)(?:\\1[ \\t].*(?:\\r\\n?|\\n))*\\1End\\2(?=[ \\t]*$))|End[A-Z]\\w*(?=[ \\t]*$))/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'keyword'\n      },\n      property: {\n        pattern: /^([ \\t]*)(?!\\s)[^\\r\\n\"#=()]*[^\\s\"#=()](?=\\s*=)/m,\n        lookbehind: true,\n        inside: {\n          guid: guid\n        }\n      },\n      guid: guid,\n      number: /\\b\\d+(?:\\.\\d+)*\\b/,\n      boolean: /\\b(?:FALSE|TRUE)\\b/,\n      operator: /=/,\n      punctuation: /[(),]/\n    }\n    Prism.languages['sln'] = Prism.languages['solution-file']\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = soy\nsoy.displayName = 'soy'\nsoy.aliases = []\nfunction soy(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/\n    Prism.languages.soy = {\n      comment: [\n        /\\/\\*[\\s\\S]*?\\*\\//,\n        {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'command-arg': {\n        pattern:\n          /(\\{+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      parameter: {\n        pattern: /(\\{+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\{+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        },\n        /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/\n      ],\n      delimiter: {\n        pattern: /^\\{+\\/?|\\/?\\}+$/,\n        alias: 'punctuation'\n      },\n      property: /\\w+(?==)/,\n      variable: {\n        pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+\\]))*/,\n        inside: {\n          string: {\n            pattern: stringPattern,\n            greedy: true\n          },\n          number: numberPattern,\n          punctuation: /[\\[\\].?]/\n        }\n      },\n      string: {\n        pattern: stringPattern,\n        greedy: true\n      },\n      function: [\n        /\\w+(?=\\()/,\n        {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }\n      ],\n      boolean: /\\b(?:true|false)\\b/,\n      number: numberPattern,\n      operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n      punctuation: /[{}()\\[\\]|.,:]/\n    } // Tokenize all inline Soy expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var soyPattern = /\\{\\{.+?\\}\\}|\\{.+?\\}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g\n      var soyLitteralStart = '{literal}'\n      var soyLitteralEnd = '{/literal}'\n      var soyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'soy',\n        soyPattern,\n        function (match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false\n          }\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy')\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorTurtle = require('./turtle.js')\nmodule.exports = sparql\nsparql.displayName = 'sparql'\nsparql.aliases = ['rq']\nfunction sparql(Prism) {\n  Prism.register(refractorTurtle)\n  Prism.languages.sparql = Prism.languages.extend('turtle', {\n    boolean: /\\b(?:true|false)\\b/i,\n    variable: {\n      pattern: /[?$]\\w+/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('sparql', 'punctuation', {\n    keyword: [\n      /\\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\\b/i,\n      /\\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|ROUND|REGEX|REPLACE|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\\b(?=\\s*\\()/i,\n      /\\b(?:GRAPH|BASE|PREFIX)\\b/i\n    ]\n  })\n  Prism.languages.rq = Prism.languages.sparql\n}\n","'use strict'\n\nmodule.exports = splunkSpl\nsplunkSpl.displayName = 'splunkSpl'\nsplunkSpl.aliases = []\nfunction splunkSpl(Prism) {\n  Prism.languages['splunk-spl'] = {\n    comment: /`comment\\(\"(?:\\\\.|[^\\\\\"])*\"\\)`/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n      greedy: true\n    },\n    // https://docs.splunk.com/Documentation/Splunk/7.3.0/SearchReference/ListOfSearchCommands\n    keyword:\n      /\\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\\b/i,\n    'operator-word': {\n      pattern: /\\b(?:and|as|by|not|or|xor)\\b/i,\n      alias: 'operator'\n    },\n    function: /\\b\\w+(?=\\s*\\()/,\n    property: /\\b\\w+(?=\\s*=(?!=))/,\n    date: {\n      // MM/DD/YYYY(:HH:MM:SS)?\n      pattern: /\\b\\d{1,2}\\/\\d{1,2}\\/\\d{1,4}(?:(?::\\d{1,2}){3})?\\b/,\n      alias: 'number'\n    },\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    boolean: /\\b(?:f|false|t|true)\\b/i,\n    operator: /[<>=]=?|[-+*/%|]/,\n    punctuation: /[()[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = sqf\nsqf.displayName = 'sqf'\nsqf.aliases = []\nfunction sqf(Prism) {\n  Prism.languages.sqf = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:(?:\"\")?[^\"])*\"(?!\")|'(?:[^'])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execVM|execFSM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\\b/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    function:\n      /\\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\\b/i,\n    number:\n      /(?:\\$|\\b0x)[\\da-f]+\\b|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+)?)(?:e[+-]?\\d+)?\\b/i,\n    operator: /##|>>|&&|\\|\\||[!=<>]=?|[-+*/%#^]|\\b(?:and|mod|not|or)\\b/i,\n    'magic-variable': {\n      pattern:\n        /\\b(?:_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x|this|thisList|thisTrigger)\\b/i,\n      alias: 'keyword'\n    },\n    constant: /\\bDIK(?:_[a-z\\d]+)+\\b/i\n  })\n  Prism.languages.insertBefore('sqf', 'string', {\n    macro: {\n      pattern: /(^[ \\t]*)#[a-z](?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /#[a-z]+\\b/i,\n          alias: 'keyword'\n        },\n        comment: Prism.languages.sqf.comment\n      }\n    }\n  })\n  delete Prism.languages.sqf['class-name']\n}\n","'use strict'\n\nmodule.exports = sql\nsql.displayName = 'sql'\nsql.aliases = []\nfunction sql(Prism) {\n  Prism.languages.sql = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    variable: [\n      {\n        pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n        greedy: true\n      },\n      /@[\\w.$]+/\n    ],\n    string: {\n      pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n      greedy: true,\n      lookbehind: true\n    },\n    function:\n      /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n    // Should we highlight user defined functions too?\n    keyword:\n      /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:S|ING)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n    boolean: /\\b(?:TRUE|FALSE|NULL)\\b/i,\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|IN|ILIKE|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n    punctuation: /[;[\\]()`,.]/\n  }\n}\n","'use strict'\n\nmodule.exports = squirrel\nsquirrel.displayName = 'squirrel'\nsquirrel.aliases = []\nfunction squirrel(Prism) {\n  Prism.languages.squirrel = Prism.languages.extend('clike', {\n    comment: [\n      Prism.languages.clike['comment'][0],\n      {\n        pattern: /(^|[^\\\\:])(?:\\/\\/|#).*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: /(^|[^\\\\\"'@])(?:@\"(?:[^\"]|\"\")*\"(?!\")|\"(?:[^\\\\\\r\\n\"]|\\\\.)*\")/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\\"'])'(?:[^\\\\']|\\\\(?:[xuU][0-9a-fA-F]{0,8}|[\\s\\S]))'/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'class-name': {\n      pattern: /(\\b(?:class|enum|extends|instanceof)\\s+)\\w+(?:\\.\\w+)*/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield|__LINE__|__FILE__)\\b/,\n    number: /\\b(?:0x[0-9a-fA-F]+|\\d+(?:\\.(?:\\d+|[eE][+-]?\\d+))?)\\b/,\n    operator: /\\+\\+|--|<=>|<[-<]|>>>?|&&?|\\|\\|?|[-+*/%!=<>]=?|[~^]|::?/,\n    punctuation: /[(){}\\[\\],;.]/\n  })\n  Prism.languages.insertBefore('squirrel', 'operator', {\n    'attribute-punctuation': {\n      pattern: /<\\/|\\/>/,\n      alias: 'important'\n    },\n    lambda: {\n      pattern: /@(?=\\()/,\n      alias: 'operator'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = stan\nstan.displayName = 'stan'\nstan.aliases = []\nfunction stan(Prism) {\n  // https://mc-stan.org/docs/2_24/reference-manual/bnf-grammars.html\n  Prism.languages.stan = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\n    string: {\n      // String literals can contain spaces and any printable ASCII characters except for \" and \\\n      // https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals\n      pattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\n      greedy: true\n    },\n    directive: {\n      pattern: /^([ \\t]*)#include\\b.*/m,\n      lookbehind: true,\n      alias: 'property'\n    },\n    'function-arg': {\n      pattern:\n        /(\\b(?:algebra_solver|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect)\\s*\\(\\s*)[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    constraint: {\n      pattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\n      lookbehind: true,\n      inside: {\n        expression: {\n          pattern: /(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        property: /\\b[a-z]\\w*(?=\\s*=)/i,\n        operator: /=/,\n        punctuation: /^<|>$|,/\n      }\n    },\n    keyword: [\n      /\\b(?:break|cholesky_factor_corr|cholesky_factor_cov|continue|corr_matrix|cov_matrix|data|else|for|functions|generated|if|in|increment_log_prob|int|matrix|model|ordered|parameters|positive_ordered|print|quantities|real|reject|return|row_vector|simplex|target|transformed|unit_vector|vector|void|while)\\b/, // these are functions that are known to take another function as their first argument.\n      /\\b(?:algebra_solver|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect)\\b/\n    ],\n    function: /\\b[a-z]\\w*(?=\\s*\\()/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\n    punctuation: /[()\\[\\]{},;]/\n  }\n  Prism.languages.stan.constraint.inside.expression.inside =\n    Prism.languages.stan\n}\n","'use strict'\n\nmodule.exports = stylus\nstylus.displayName = 'stylus'\nstylus.aliases = []\nfunction stylus(Prism) {\n  ;(function (Prism) {\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n      lookbehind: true\n    } // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    var inside = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n        greedy: true\n      },\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null,\n      // See below\n      func: null,\n      // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      color: [\n        /\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n        {\n          pattern:\n            /\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      boolean: /\\b(?:true|false)\\b/,\n      operator: [\n        // We want non-word chars around \"-\" because it is\n        // accepted in property names.\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n      ],\n      number: number,\n      punctuation: /[{}()\\[\\];:,]/\n    }\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    }\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    }\n    Prism.languages.stylus = {\n      'atrule-declaration': {\n        pattern: /(^[ \\t]*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t].+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern:\n          /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern:\n          /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          comment: inside.comment,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = swift\nswift.displayName = 'swift'\nswift.aliases = []\nfunction swift(Prism) {\n  Prism.languages.swift = {\n    comment: {\n      // Nested comments are supported up to 2 levels\n      pattern:\n        /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-literal': [\n      // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html\n      {\n        pattern: RegExp(\n          /(^|[^\"#])/.source +\n            '(?:' + // single-line string\n            /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/\n              .source +\n            '|' + // multi-line string\n            /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/\n              .source +\n            ')' +\n            /(?![\"#])/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\\\($/,\n            alias: 'punctuation'\n          },\n          punctuation: /\\\\(?=[\\r\\n])/,\n          string: /[\\s\\S]+/\n        }\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\"#])(#+)/.source +\n            '(?:' + // single-line string\n            /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/\n              .source +\n            '|' + // multi-line string\n            /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source +\n            ')' +\n            '\\\\2'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\#+\\($/,\n            alias: 'punctuation'\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    ],\n    directive: {\n      // directives with conditions\n      pattern: RegExp(\n        /#/.source +\n          '(?:' +\n          (/(?:elseif|if)\\b/.source +\n            '(?:[ \\t]*' + // This regex is a little complex. It's equivalent to this:\n            //   (?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*<round>)?|<round>)(?:[ \\t]*(?:&&|\\|\\|))?\n            // where <round> is a general parentheses expression.\n            /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/\n              .source +\n            ')+') +\n          '|' +\n          /(?:else|endif)\\b/.source +\n          ')'\n      ),\n      alias: 'property',\n      inside: {\n        'directive-name': /^#\\w+/,\n        boolean: /\\b(?:true|false)\\b/,\n        number: /\\b\\d+(?:\\.\\d+)*\\b/,\n        operator: /!|&&|\\|\\||[<>]=?/,\n        punctuation: /[(),]/\n      }\n    },\n    literal: {\n      pattern:\n        /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\n      alias: 'constant'\n    },\n    'other-directive': {\n      pattern: /#\\w+\\b/,\n      alias: 'property'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'atrule'\n    },\n    'function-definition': {\n      pattern: /(\\bfunc\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    label: {\n      // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141\n      pattern:\n        /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\n      lookbehind: true,\n      alias: 'important'\n    },\n    keyword:\n      /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    nil: {\n      pattern: /\\bnil\\b/,\n      alias: 'constant'\n    },\n    'short-argument': /\\$\\d+\\b/,\n    omit: {\n      pattern: /\\b_\\b/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n    // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.\n    'class-name': /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n    // Operators are generic in Swift. Developers can even create new operators (e.g. +++).\n    // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481\n    // This regex only supports ASCII operators.\n    operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\n    punctuation: /[{}[\\]();,.:\\\\]/\n  }\n  Prism.languages.swift['string-literal'].forEach(function (rule) {\n    rule.inside['interpolation'].inside = Prism.languages.swift\n  })\n}\n","'use strict'\n\nmodule.exports = systemd\nsystemd.displayName = 'systemd'\nsystemd.aliases = []\nfunction systemd(Prism) {\n  // https://www.freedesktop.org/software/systemd/man/systemd.syntax.html\n  ;(function (Prism) {\n    var comment = {\n      pattern: /^[;#].*/m,\n      greedy: true\n    }\n    var quotesSource = /\"(?:[^\\r\\n\"\\\\]|\\\\(?:[^\\r]|\\r\\n?))*\"(?!\\S)/.source\n    Prism.languages.systemd = {\n      comment: comment,\n      section: {\n        pattern: /^\\[[^\\n\\r\\[\\]]*\\](?=[ \\t]*$)/m,\n        greedy: true,\n        inside: {\n          punctuation: /^\\[|\\]$/,\n          'section-name': {\n            pattern: /[\\s\\S]+/,\n            alias: 'selector'\n          }\n        }\n      },\n      key: {\n        pattern: /^[^\\s=]+(?=[ \\t]*=)/m,\n        greedy: true,\n        alias: 'attr-name'\n      },\n      value: {\n        // This pattern is quite complex because of two properties:\n        //  1) Quotes (strings) must be preceded by a space. Since we can't use lookbehinds, we have to \"resolve\"\n        //     the lookbehind. You will see this in the main loop where spaces are handled separately.\n        //  2) Line continuations.\n        //     After line continuations, empty lines and comments are ignored so we have to consume them.\n        pattern: RegExp(\n          /(=[ \\t]*(?!\\s))/.source + // the value either starts with quotes or not\n            '(?:' +\n            quotesSource +\n            '|(?=[^\"\\r\\n]))' + // main loop\n            '(?:' +\n            (/[^\\s\\\\]/.source + // handle spaces separately because of quotes\n              '|' +\n              '[ \\t]+(?:(?![ \\t\"])|' +\n              quotesSource +\n              ')' + // line continuation\n              '|' +\n              /\\\\[\\r\\n]+(?:[#;].*[\\r\\n]+)*(?![#;])/.source) +\n            ')*'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'attr-value',\n        inside: {\n          comment: comment,\n          quoted: {\n            pattern: RegExp(/(^|\\s)/.source + quotesSource),\n            lookbehind: true,\n            greedy: true\n          },\n          punctuation: /\\\\$/m,\n          boolean: {\n            pattern: /^(?:false|no|off|on|true|yes)$/,\n            greedy: true\n          }\n        }\n      },\n      operator: /=/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorT4Templating = require('./t4-templating.js')\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = t4Cs\nt4Cs.displayName = 't4Cs'\nt4Cs.aliases = []\nfunction t4Cs(Prism) {\n  Prism.register(refractorT4Templating)\n  Prism.register(refractorCsharp)\n  Prism.languages.t4 = Prism.languages['t4-cs'] =\n    Prism.languages['t4-templating'].createT4('csharp')\n}\n","'use strict'\n\nmodule.exports = t4Templating\nt4Templating.displayName = 't4Templating'\nt4Templating.aliases = []\nfunction t4Templating(Prism) {\n  ;(function (Prism) {\n    function createBlock(prefix, inside, contentAlias) {\n      return {\n        pattern: RegExp('<#' + prefix + '[\\\\s\\\\S]*?#>'),\n        alias: 'block',\n        inside: {\n          delimiter: {\n            pattern: RegExp('^<#' + prefix + '|#>$'),\n            alias: 'important'\n          },\n          content: {\n            pattern: /[\\s\\S]+/,\n            inside: inside,\n            alias: contentAlias\n          }\n        }\n      }\n    }\n    function createT4(insideLang) {\n      var grammar = Prism.languages[insideLang]\n      var className = 'language-' + insideLang\n      return {\n        block: {\n          pattern: /<#[\\s\\S]+?#>/,\n          inside: {\n            directive: createBlock('@', {\n              'attr-value': {\n                pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n                inside: {\n                  punctuation: /^=|^[\"']|[\"']$/\n                }\n              },\n              keyword: /\\b\\w+(?=\\s)/,\n              'attr-name': /\\b\\w+/\n            }),\n            expression: createBlock('=', grammar, className),\n            'class-feature': createBlock('\\\\+', grammar, className),\n            standard: createBlock('', grammar, className)\n          }\n        }\n      }\n    }\n    Prism.languages['t4-templating'] = Object.defineProperty({}, 'createT4', {\n      value: createT4\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorT4Templating = require('./t4-templating.js')\nvar refractorVbnet = require('./vbnet.js')\nmodule.exports = t4Vb\nt4Vb.displayName = 't4Vb'\nt4Vb.aliases = []\nfunction t4Vb(Prism) {\n  Prism.register(refractorT4Templating)\n  Prism.register(refractorVbnet)\n  Prism.languages['t4-vb'] = Prism.languages['t4-templating'].createT4('vbnet')\n}\n","'use strict'\nvar refractorYaml = require('./yaml.js')\nmodule.exports = tap\ntap.displayName = 'tap'\ntap.aliases = []\nfunction tap(Prism) {\n  Prism.register(refractorYaml)\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = tcl\ntcl.displayName = 'tcl'\ntcl.aliases = []\nfunction tcl(Prism) {\n  Prism.languages.tcl = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\$)\\{[^}]+\\}/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^[\\t ]*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^[\\t ]*proc[ \\t]+)\\S+/m,\n      lookbehind: true\n    },\n    builtin: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:proc|return|class|error|eval|exit|for|foreach|if|switch|while|break|continue)\\b/m,\n        lookbehind: true\n      },\n      /\\b(?:elseif|else)\\b/\n    ],\n    scope: {\n      pattern: /(^[\\t ]*)(?:global|upvar|variable)\\b/m,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*|\\[)(?:after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|Safe_Base|scan|seek|set|socket|source|split|string|subst|Tcl|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)|test|vars)|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n      lookbehind: true\n    },\n    operator:\n      /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|ne|in|ni)\\b/,\n    punctuation: /[{}()\\[\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = textile\ntextile.displayName = 'textile'\ntextile.aliases = []\nfunction textile(Prism) {\n  ;(function (Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source // Opening and closing parentheses which are not a modifier\n    // This pattern is necessary to prevent exponential backtracking\n    var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function withModifier(source, flags) {\n      return RegExp(\n        source\n          .replace(/<MOD>/g, function () {\n            return '(?:' + modifierRegex + ')'\n          })\n          .replace(/<PAR>/g, function () {\n            return '(?:' + parenthesesRegex + ')'\n          }),\n        flags || ''\n      )\n    }\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^{}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^()]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\[\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    }\n    var textile = (Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n            inside: {\n              modifier: {\n                pattern: withModifier(\n                  /(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n            inside: {\n              modifier: {\n                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: withModifier(\n              /^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/\n                .source,\n              'm'\n            ),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: withModifier(\n                  /(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/\n                    .source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/\n                .source\n            ),\n            lookbehind: true,\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n              // *bold*, **bold**\n              bold: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(\n                  /(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(^\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(^\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source\n            ),\n            inside: {\n              text: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(/(^\")<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: withModifier(\n              /!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/\n                .source\n            ),\n            inside: {\n              source: {\n                pattern: withModifier(\n                  /(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/\n                    .source\n                ),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^()]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:TM|R|C)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    }))\n    var phraseInside = textile['phrase'].inside\n    var nestedPatterns = {\n      inline: phraseInside['inline'],\n      link: phraseInside['link'],\n      image: phraseInside['image'],\n      footnote: phraseInside['footnote'],\n      acronym: phraseInside['acronym'],\n      mark: phraseInside['mark']\n    } // Only allow alpha-numeric HTML tags, not XML tags\n    textile.tag.pattern =\n      /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i // Allow some nesting\n    var phraseInlineInside = phraseInside['inline'].inside\n    phraseInlineInside['bold'].inside = nestedPatterns\n    phraseInlineInside['italic'].inside = nestedPatterns\n    phraseInlineInside['inserted'].inside = nestedPatterns\n    phraseInlineInside['deleted'].inside = nestedPatterns\n    phraseInlineInside['span'].inside = nestedPatterns // Allow some styles inside table cells\n    var phraseTableInside = phraseInside['table'].inside\n    phraseTableInside['inline'] = nestedPatterns['inline']\n    phraseTableInside['link'] = nestedPatterns['link']\n    phraseTableInside['image'] = nestedPatterns['image']\n    phraseTableInside['footnote'] = nestedPatterns['footnote']\n    phraseTableInside['acronym'] = nestedPatterns['acronym']\n    phraseTableInside['mark'] = nestedPatterns['mark']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = toml\ntoml.displayName = 'toml'\ntoml.aliases = []\nfunction toml(Prism) {\n  ;(function (Prism) {\n    var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source\n    /**\n     * @param {string} pattern\n     */\n    function insertKey(pattern) {\n      return pattern.replace(/__/g, function () {\n        return key\n      })\n    }\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp(\n          insertKey(\n            /(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp(\n          insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern:\n          /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [\n        {\n          // Offset Date-Time, Local Date-Time, Local Date\n          pattern:\n            /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n          alias: 'number'\n        },\n        {\n          // Local Time\n          pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n          alias: 'number'\n        }\n      ],\n      number:\n        /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorJsx = require('./jsx.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = tsx\ntsx.displayName = 'tsx'\ntsx.aliases = []\nfunction tsx(Prism) {\n  Prism.register(refractorJsx)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var typescript = Prism.util.clone(Prism.languages.typescript)\n    Prism.languages.tsx = Prism.languages.extend('jsx', typescript) // This will prevent collisions between TSX tags and TS generic types.\n    // Idea by https://github.com/karlhorky\n    // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n    var tag = Prism.languages.tsx.tag\n    tag.pattern = RegExp(\n      /(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')',\n      tag.pattern.flags\n    )\n    tag.lookbehind = true\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = tt2\ntt2.displayName = 'tt2'\ntt2.aliases = []\nfunction tt2(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\n      comment: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      keyword:\n        /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,\n      punctuation: /[[\\]{},()]/\n    })\n    Prism.languages.insertBefore('tt2', 'number', {\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,\n      variable: {\n        pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'keyword', {\n      delimiter: {\n        pattern: /^(?:\\[%|%%)-?|-?%\\]$/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'string', {\n      'single-quoted-string': {\n        pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          variable: {\n            pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n          }\n        }\n      }\n    }) // The different types of TT2 strings \"replace\" the C-like standard string\n    delete Prism.languages.tt2.string\n    Prism.hooks.add('before-tokenize', function (env) {\n      var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'tt2',\n        tt2Pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = turtle\nturtle.displayName = 'turtle'\nturtle.aliases = []\nfunction turtle(Prism) {\n  Prism.languages.turtle = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'multiline-string': {\n      pattern:\n        /\"\"\"(?:(?:\"\"?)?(?:[^\"\\\\]|\\\\.))*\"\"\"|'''(?:(?:''?)?(?:[^'\\\\]|\\\\.))*'''/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        comment: /#.*/\n      }\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    url: {\n      pattern:\n        /<(?:[^\\x00-\\x20<>\"{}|^`\\\\]|\\\\(?:u[\\da-fA-F]{4}|U[\\da-fA-F]{8}))*>/,\n      greedy: true,\n      inside: {\n        punctuation: /[<>]/\n      }\n    },\n    function: {\n      pattern:\n        /(?:(?![-.\\d\\xB7])[-.\\w\\xB7\\xC0-\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\w\\xC0-\\uFFFD]|%[\\da-f]{2}|\\\\.)+)?/i,\n      inside: {\n        'local-name': {\n          pattern: /([^:]*:)[\\s\\S]+/,\n          lookbehind: true\n        },\n        prefix: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    },\n    number: /[+-]?\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}.,;()[\\]]|\\^\\^/,\n    boolean: /\\b(?:true|false)\\b/,\n    keyword: [/(?:\\ba|@prefix|@base)\\b|=/, /\\b(?:graph|base|prefix)\\b/i],\n    tag: {\n      pattern: /@[a-z]+(?:-[a-z\\d]+)*/i,\n      inside: {\n        punctuation: /@/\n      }\n    }\n  }\n  Prism.languages.trig = Prism.languages['turtle']\n}\n","'use strict'\n\nmodule.exports = twig\ntwig.displayName = 'twig'\ntwig.aliases = []\nfunction twig(Prism) {\n  Prism.languages.twig = {\n    comment: /\\{#[\\s\\S]*?#\\}/,\n    tag: {\n      pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n      inside: {\n        ld: {\n          pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n          inside: {\n            punctuation: /^(?:\\{\\{|\\{%)-?/,\n            keyword: /\\w+/\n          }\n        },\n        rd: {\n          pattern: /-?(?:%\\}|\\}\\})$/,\n          inside: {\n            punctuation: /.+/\n          }\n        },\n        string: {\n          pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          inside: {\n            punctuation: /^['\"]|['\"]$/\n          }\n        },\n        keyword: /\\b(?:even|if|odd)\\b/,\n        boolean: /\\b(?:true|false|null)\\b/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        operator: [\n          {\n            pattern:\n              /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n            lookbehind: true\n          },\n          /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n        ],\n        property: /\\b[a-zA-Z_]\\w*\\b/,\n        punctuation: /[()\\[\\]{}:.,]/\n      }\n    },\n    // The rest can be parsed as HTML\n    other: {\n      // We want non-blank matches\n      pattern: /\\S(?:[\\s\\S]*\\S)?/,\n      inside: Prism.languages.markup\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = typescript\ntypescript.displayName = 'typescript'\ntypescript.aliases = ['ts']\nfunction typescript(Prism) {\n  ;(function (Prism) {\n    Prism.languages.typescript = Prism.languages.extend('javascript', {\n      'class-name': {\n        pattern:\n          /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n      builtin:\n        /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/\n    }) // The keywords TypeScript adds to JavaScript\n    Prism.languages.typescript.keyword.push(\n      /\\b(?:abstract|as|declare|implements|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n      /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n      /\\btype\\b(?=\\s*(?:[\\{*]|$))/\n    ) // doesn't work with TS because TS is too complex\n    delete Prism.languages.typescript['parameter'] // a version of typescript specifically for highlighting types\n    var typeInside = Prism.languages.extend('typescript', {})\n    delete typeInside['class-name']\n    Prism.languages.typescript['class-name'].inside = typeInside\n    Prism.languages.insertBefore('typescript', 'function', {\n      decorator: {\n        pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n        inside: {\n          at: {\n            pattern: /^@/,\n            alias: 'operator'\n          },\n          function: /^[\\s\\S]+/\n        }\n      },\n      'generic-function': {\n        // e.g. foo<T extends \"bar\" | \"baz\">( ...\n        pattern:\n          /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n        greedy: true,\n        inside: {\n          function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            // everything after the first <\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      }\n    })\n    Prism.languages.ts = Prism.languages.typescript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = typoscript\ntyposcript.displayName = 'typoscript'\ntyposcript.aliases = ['tsconfig']\nfunction typoscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/\n    Prism.languages.typoscript = {\n      comment: [\n        {\n          // multiline comments /* */\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true\n        },\n        {\n          // double-slash comments - ignored when backslashes or colon is found in front\n          // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n          pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // hash comments - ignored when leading quote is found for hex colors in strings\n          pattern: /(^|[^\"'])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      function: [\n        {\n          // old include style\n          pattern:\n            /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n          inside: {\n            string: {\n              pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n              inside: {\n                keyword: keywords\n              }\n            },\n            keyword: {\n              pattern: /INCLUDE_TYPOSCRIPT/\n            }\n          }\n        },\n        {\n          // new include style\n          pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n          inside: {\n            string: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n          }\n        }\n      ],\n      string: {\n        pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n        lookbehind: true,\n        inside: {\n          function: /\\{\\$.*\\}/,\n          // constants include\n          keyword: keywords,\n          number: /^[0-9]+$/,\n          punctuation: /[,|:]/\n        }\n      },\n      keyword: keywords,\n      number: {\n        // special highlighting for indexes of arrays in tags\n        pattern: /\\b[0-9]+\\s*[.{=]/,\n        inside: {\n          operator: /[.{=]/\n        }\n      },\n      tag: {\n        pattern: /\\.?[-\\w\\\\]+\\.?/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      punctuation: /[{}[\\];(),.:|]/,\n      operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n    }\n    Prism.languages.tsconfig = Prism.languages.typoscript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = unrealscript\nunrealscript.displayName = 'unrealscript'\nunrealscript.aliases = ['uc', 'uscript']\nfunction unrealscript(Prism) {\n  Prism.languages.unrealscript = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    category: {\n      pattern:\n        /(\\b(?:(?:autoexpand|hide|show)categories|var)\\s*\\()[^()]+(?=\\))/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /(\\w\\s*)<\\s*\\w+\\s*=[^<>|=\\r\\n]+(?:\\|\\s*\\w+\\s*=[^<>|=\\r\\n]+)*>/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        property: /\\b\\w+(?=\\s*=)/,\n        operator: /=/,\n        punctuation: /[<>|]/\n      }\n    },\n    macro: {\n      pattern: /`\\w+/,\n      alias: 'property'\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|enum|extends|interface|state(?:\\(\\))?|struct|within)\\s+)\\w+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    // https://docs.unrealengine.com/udk/Three/UnrealScriptExpressions.html\n    operator:\n      />>|<<|--|\\+\\+|\\*\\*|[-+*/~!=<>$@]=?|&&?|\\|\\|?|\\^\\^?|[?:%]|\\b(?:Cross|Dot|ClockwiseFrom)\\b/,\n    punctuation: /[()[\\]{};,.]/\n  }\n  Prism.languages.uc = Prism.languages.uscript = Prism.languages.unrealscript\n}\n","'use strict'\n\nmodule.exports = uri\nuri.displayName = 'uri'\nuri.aliases = ['url']\nfunction uri(Prism) {\n  // https://tools.ietf.org/html/rfc3986#appendix-A\n  Prism.languages.uri = {\n    scheme: {\n      pattern: /^[a-z][a-z0-9+.-]*:/im,\n      greedy: true,\n      inside: {\n        'scheme-delimiter': /:$/\n      }\n    },\n    fragment: {\n      pattern: /#[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'fragment-delimiter': /^#/\n      }\n    },\n    query: {\n      pattern: /\\?[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'query-delimiter': {\n          pattern: /^\\?/,\n          greedy: true\n        },\n        'pair-delimiter': /[&;]/,\n        pair: {\n          pattern: /^[^=][\\s\\S]*/,\n          inside: {\n            key: /^[^=]+/,\n            value: {\n              pattern: /(^=)[\\s\\S]+/,\n              lookbehind: true\n            }\n          }\n        }\n      }\n    },\n    authority: {\n      pattern: RegExp(\n        /^\\/\\//.source + // [ userinfo \"@\" ]\n          /(?:[\\w\\-.~!$&'()*+,;=%:]*@)?/.source + // host\n          ('(?:' + // IP-literal\n            /\\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\\.[\\w\\-.~!$&'()*+,;=]+)\\]/\n              .source +\n            '|' + // IPv4address or registered name\n            /[\\w\\-.~!$&'()*+,;=%]*/.source +\n            ')') + // [ \":\" port ]\n          /(?::\\d*)?/.source,\n        'm'\n      ),\n      inside: {\n        'authority-delimiter': /^\\/\\//,\n        'user-info-segment': {\n          pattern: /^[\\w\\-.~!$&'()*+,;=%:]*@/,\n          inside: {\n            'user-info-delimiter': /@$/,\n            'user-info': /^[\\w\\-.~!$&'()*+,;=%:]+/\n          }\n        },\n        'port-segment': {\n          pattern: /:\\d*$/,\n          inside: {\n            'port-delimiter': /^:/,\n            port: /^\\d+/\n          }\n        },\n        host: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            'ip-literal': {\n              pattern: /^\\[[\\s\\S]+\\]$/,\n              inside: {\n                'ip-literal-delimiter': /^\\[|\\]$/,\n                'ipv-future': /^v[\\s\\S]+/,\n                'ipv6-address': /^[\\s\\S]+/\n              }\n            },\n            'ipv4-address':\n              /^(?:(?:[03-9]\\d?|[12]\\d{0,2})\\.){3}(?:[03-9]\\d?|[12]{0,2})$/\n          }\n        }\n      }\n    },\n    path: {\n      pattern: /^[\\w\\-.~!$&'()*+,;=%:@/]+/m,\n      inside: {\n        'path-separator': /\\//\n      }\n    }\n  }\n  Prism.languages.url = Prism.languages.uri\n}\n","'use strict'\n\nmodule.exports = v\nv.displayName = 'v'\nv.aliases = []\nfunction v(Prism) {\n  ;(function (Prism) {\n    var interpolationExpr = {\n      pattern: /[\\s\\S]+/,\n      inside: null\n    }\n    Prism.languages.v = Prism.languages.extend('clike', {\n      string: [\n        {\n          pattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/,\n          // using {1,2} instead of `u` flag for compatibility\n          alias: 'rune'\n        },\n        {\n          pattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          alias: 'quoted-string',\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern:\n                /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n              lookbehind: true,\n              inside: {\n                'interpolation-variable': {\n                  pattern: /^\\$\\w[\\s\\S]*$/,\n                  alias: 'variable'\n                },\n                'interpolation-punctuation': {\n                  pattern: /^\\$\\{|\\}$/,\n                  alias: 'punctuation'\n                },\n                'interpolation-expression': interpolationExpr\n              }\n            }\n          }\n        }\n      ],\n      'class-name': {\n        pattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /(?:\\b(?:as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|__global|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:if|else|for)|#(?:include|flag))\\b/,\n      number:\n        /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n      operator:\n        /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n      builtin:\n        /\\b(?:any(?:_int|_float)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|nt|64|128)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n    })\n    interpolationExpr.inside = Prism.languages.v\n    Prism.languages.insertBefore('v', 'operator', {\n      attribute: {\n        pattern:\n          /(^[\\t ]*)\\[(?:deprecated|unsafe_fn|typedef|live|inline|flag|ref_only|windows_stdcall|direct_array_access)\\]/m,\n        lookbehind: true,\n        alias: 'annotation',\n        inside: {\n          punctuation: /[\\[\\]]/,\n          keyword: /\\w+/\n        }\n      },\n      generic: {\n        pattern: /<\\w+>(?=\\s*[\\)\\{])/,\n        inside: {\n          punctuation: /[<>]/,\n          'class-name': /\\w+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('v', 'function', {\n      'generic-function': {\n        // e.g. foo<T>( ...\n        pattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<\\w+>/,\n            inside: Prism.languages.v.generic.inside\n          }\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = vala\nvala.displayName = 'vala'\nvala.aliases = []\nfunction vala(Prism) {\n  Prism.languages.vala = Prism.languages.extend('clike', {\n    // Classes copied from prism-csharp\n    'class-name': [\n      {\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo : Bar\n        pattern:\n          /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo\n        pattern:\n          /((?:\\b(?:class|interface|new|struct|enum)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    ],\n    keyword:\n      /\\b(?:bool|char|double|float|null|size_t|ssize_t|string|unichar|void|int|int8|int16|int32|int64|long|short|uchar|uint|uint8|uint16|uint32|uint64|ulong|ushort|class|delegate|enum|errordomain|interface|namespace|struct|break|continue|do|for|foreach|return|while|else|if|switch|assert|case|default|abstract|const|dynamic|ensures|extern|inline|internal|override|private|protected|public|requires|signal|static|virtual|volatile|weak|async|owned|unowned|try|catch|finally|throw|as|base|construct|delete|get|in|is|lock|new|out|params|ref|sizeof|set|this|throws|typeof|using|value|var|yield)\\b/i,\n    function: /\\b\\w+(?=\\s*\\()/,\n    number:\n      /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n    operator:\n      /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n    punctuation: /[{}[\\];(),.:]/,\n    constant: /\\b[A-Z0-9_]+\\b/\n  })\n  Prism.languages.insertBefore('vala', 'string', {\n    'raw-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'template-string': {\n      pattern: /@\"[\\s\\S]*?\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\$\\(?|\\)$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.vala\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('vala', 'keyword', {\n    regex: {\n      pattern:\n        /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\//,\n        'regex-flags': /^[a-z]+$/\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorBasic = require('./basic.js')\nmodule.exports = vbnet\nvbnet.displayName = 'vbnet'\nvbnet.aliases = []\nfunction vbnet(Prism) {\n  Prism.register(refractorBasic)\n  Prism.languages.vbnet = Prism.languages.extend('basic', {\n    comment: [\n      {\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])'.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\"])\"(?:\"\"|[^\"])*\"(?!\")/i,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDEC|CDBL|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEFAULT|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LINE INPUT|LET|LIB|LIKE|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPERATOR|OPEN|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHORT|SINGLE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SYNCLOCK|SWAP|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n    punctuation: /[,;:(){}]/\n  })\n}\n","'use strict'\n\nmodule.exports = velocity\nvelocity.displayName = 'velocity'\nvelocity.aliases = []\nfunction velocity(Prism) {\n  ;(function (Prism) {\n    Prism.languages.velocity = Prism.languages.extend('markup', {})\n    var velocity = {\n      variable: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n        lookbehind: true,\n        inside: {} // See below\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      number: /\\b\\d+\\b/,\n      boolean: /\\b(?:true|false)\\b/,\n      operator:\n        /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n      punctuation: /[(){}[\\]:,.]/\n    }\n    velocity.variable.inside = {\n      string: velocity['string'],\n      function: {\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n        lookbehind: true\n      },\n      number: velocity['number'],\n      boolean: velocity['boolean'],\n      punctuation: velocity['punctuation']\n    }\n    Prism.languages.insertBefore('velocity', 'comment', {\n      unparsed: {\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^#\\[\\[|\\]\\]#$/\n        }\n      },\n      'velocity-comment': [\n        {\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }\n      ],\n      directive: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n            inside: {\n              punctuation: /[{}]/\n            }\n          },\n          rest: velocity\n        }\n      },\n      variable: velocity['variable']\n    })\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\n      Prism.languages.velocity\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = verilog\nverilog.displayName = 'verilog'\nverilog.aliases = []\nfunction verilog(Prism) {\n  Prism.languages.verilog = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    // support for any kernel function (ex: $display())\n    property: /\\B\\$\\w+\\b/,\n    // support for user defined constants (ex: `define)\n    constant: /\\B`\\w+\\b/,\n    function: /\\b\\w+(?=\\()/,\n    // support for verilog and system verilog keywords\n    keyword:\n      /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n    // bold highlighting for all verilog and system verilog logic blocks\n    important: /\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,\n    // support for time ticks, vectors, and real numbers\n    number:\n      /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b(?:\\d*[._])?\\d+(?:e[-+]?\\d+)?/i,\n    operator: /[-+{}^~%*\\/?=!<>&|]+/,\n    punctuation: /[[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = vhdl\nvhdl.displayName = 'vhdl'\nvhdl.aliases = []\nfunction vhdl(Prism) {\n  Prism.languages.vhdl = {\n    comment: /--.+/,\n    // support for all logic vectors\n    'vhdl-vectors': {\n      pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n      alias: 'number'\n    },\n    // support for operator overloading included\n    'quoted-function': {\n      pattern: /\"\\S+?\"(?=\\()/,\n      alias: 'function'\n    },\n    string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n    constant: /\\b(?:use|library)\\b/i,\n    // support for predefined attributes included\n    keyword:\n      /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    function: /\\w+(?=\\()/,\n    // decimal, based, physical, and exponential numbers supported\n    number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n    operator:\n      /[<>]=?|:=|[-+*/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = vim\nvim.displayName = 'vim'\nvim.aliases = []\nfunction vim(Prism) {\n  Prism.languages.vim = {\n    string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n    comment: /\".*/,\n    function: /\\b\\w+(?=\\()/,\n    keyword:\n      /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n    builtin:\n      /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator:\n      /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n    punctuation: /[{}[\\](),;:]/\n  }\n}\n","'use strict'\n\nmodule.exports = visualBasic\nvisualBasic.displayName = 'visualBasic'\nvisualBasic.aliases = []\nfunction visualBasic(Prism) {\n  Prism.languages['visual-basic'] = {\n    comment: {\n      pattern: /(?:['‘’]|REM\\b)(?:[^\\r\\n_]|_(?:\\r\\n?|\\n)?)*/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    directive: {\n      pattern:\n        /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:[^\\S\\r\\n]_[^\\S\\r\\n]*(?:\\r\\n?|\\n)|.)+/i,\n      alias: 'comment',\n      greedy: true\n    },\n    string: {\n      pattern: /\\$?[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n      greedy: true\n    },\n    date: {\n      pattern:\n        /#[^\\S\\r\\n]*(?:\\d+([/-])\\d+\\1\\d+(?:[^\\S\\r\\n]+(?:\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?))?|\\d+[^\\S\\r\\n]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[^\\S\\r\\n]*(?:AM|PM))?)[^\\S\\r\\n]*#/i,\n      alias: 'builtin'\n    },\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:U?[ILS]|[FRD])?/i,\n    boolean: /\\b(?:True|False|Nothing)\\b/i,\n    keyword:\n      /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Until|Xor)\\b/i,\n    operator: [\n      /[+\\-*/\\\\^<=>&#@$%!]/,\n      {\n        pattern: /([^\\S\\r\\n])_(?=[^\\S\\r\\n]*[\\r\\n])/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[{}().,:?]/\n  }\n  Prism.languages.vb = Prism.languages['visual-basic']\n  Prism.languages.vba = Prism.languages['visual-basic']\n}\n","'use strict'\n\nmodule.exports = warpscript\nwarpscript.displayName = 'warpscript'\nwarpscript.aliases = []\nfunction warpscript(Prism) {\n  Prism.languages.warpscript = {\n    comment: /#.*|\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern:\n        /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'|<'(?:[^\\\\']|'(?!>)|\\\\.)*'>/,\n      greedy: true\n    },\n    variable: /\\$\\S+/,\n    macro: {\n      pattern: /@\\S+/,\n      alias: 'property'\n    },\n    // WarpScript doesn't have any keywords, these are all functions under the control category\n    // https://www.warp10.io/tags/control\n    keyword:\n      /\\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\\b/,\n    number:\n      /[+-]?\\b(?:NaN|Infinity|\\d+(?:\\.\\d*)?(?:[Ee][+-]?\\d+)?|0x[\\da-fA-F]+|0b[01]+)\\b/,\n    boolean: /\\b(?:false|true|F|T)\\b/,\n    punctuation: /<%|%>|[{}[\\]()]/,\n    // Some operators from the \"operators\" category\n    // https://www.warp10.io/tags/operators\n    operator:\n      /==|&&?|\\|\\|?|\\*\\*?|>>>?|<<|[<>!~]=?|[-/%^]|\\+!?|\\b(?:AND|NOT|OR)\\b/\n  }\n}\n","'use strict'\n\nmodule.exports = wasm\nwasm.displayName = 'wasm'\nwasm.aliases = []\nfunction wasm(Prism) {\n  Prism.languages.wasm = {\n    comment: [\n      /\\(;[\\s\\S]*?;\\)/,\n      {\n        pattern: /;;.*/,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      greedy: true\n    },\n    keyword: [\n      {\n        pattern: /\\b(?:align|offset)=/,\n        inside: {\n          operator: /=/\n        }\n      },\n      {\n        pattern:\n          /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|nearest|neg?|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|store(?:8|16|32)?|sqrt|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\n    ],\n    variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/i,\n    number:\n      /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = wiki\nwiki.displayName = 'wiki'\nwiki.aliases = []\nfunction wiki(Prism) {\n  Prism.languages.wiki = Prism.languages.extend('markup', {\n    'block-comment': {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    heading: {\n      pattern: /^(=+)[^=\\r\\n].*?\\1/m,\n      inside: {\n        punctuation: /^=+|=+$/,\n        important: /.+/\n      }\n    },\n    emphasis: {\n      // TODO Multi-line\n      pattern: /('{2,5}).+?\\1/,\n      inside: {\n        'bold-italic': {\n          pattern: /(''''').+?(?=\\1)/,\n          lookbehind: true,\n          alias: ['bold', 'italic']\n        },\n        bold: {\n          pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        italic: {\n          pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        punctuation: /^''+|''+$/\n      }\n    },\n    hr: {\n      pattern: /^-{4,}/m,\n      alias: 'punctuation'\n    },\n    url: [\n      /ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i,\n      /\\[\\[.+?\\]\\]|\\[.+?\\]/\n    ],\n    variable: [\n      /__[A-Z]+__/, // FIXME Nested structures should be handled\n      // {{formatnum:{{#expr:{{{3}}}}}}}\n      /\\{{3}.+?\\}{3}/,\n      /\\{\\{.+?\\}\\}/\n    ],\n    symbol: [/^#redirect/im, /~{3,5}/],\n    // Handle table attrs:\n    // {|\n    // ! style=\"text-align:left;\"| Item\n    // |}\n    'table-tag': {\n      pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n      lookbehind: true,\n      inside: {\n        'table-bar': {\n          pattern: /\\|$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.markup['tag'].inside\n      }\n    },\n    punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n  })\n  Prism.languages.insertBefore('wiki', 'tag', {\n    // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n    nowiki: {\n      pattern: /<(nowiki|pre|source)\\b[^>]*>[\\s\\S]*?<\\/\\1>/i,\n      inside: {\n        tag: {\n          pattern: /<(?:nowiki|pre|source)\\b[^>]*>|<\\/(?:nowiki|pre|source)>/i,\n          inside: Prism.languages.markup['tag'].inside\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = wolfram\nwolfram.displayName = 'wolfram'\nwolfram.aliases = ['mathematica', 'wl', 'nb']\nfunction wolfram(Prism) {\n  Prism.languages.wolfram = {\n    // Allow one level of nesting - note: regex taken from applescipt\n    comment: /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\\b/,\n    context: {\n      pattern: /\\w+`+\\w*/,\n      alias: 'class-name'\n    },\n    blank: {\n      pattern: /\\b\\w+_\\b/,\n      alias: 'regex'\n    },\n    'global-variable': {\n      pattern: /\\$\\w+/,\n      alias: 'variable'\n    },\n    boolean: /\\b(?:True|False)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n    operator:\n      /\\/\\.|;|=\\.|\\^=|\\^:=|:=|<<|>>|<\\||\\|>|:>|\\|->|->|<-|@@@|@@|@|\\/@|=!=|===|==|=|\\+|-|\\^|\\[\\/-+%=\\]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[\\|{}[\\];(),.:]/\n  }\n  Prism.languages.mathematica = Prism.languages.wolfram\n  Prism.languages.wl = Prism.languages.wolfram\n  Prism.languages.nb = Prism.languages.wolfram\n}\n","'use strict'\n\nmodule.exports = wren\nwren.displayName = 'wren'\nwren.aliases = []\nfunction wren(Prism) {\n  // https://wren.io/\n  Prism.languages.wren = {\n    // Multiline comments in Wren can have nested multiline comments\n    // Comments: // and /* */\n    comment: [\n      {\n        // support 3 levels of nesting\n        // regex: \\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\/\n        pattern:\n          /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*))*\\*\\/)*\\*\\/)*\\*\\//,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    // Triple quoted strings are multiline but cannot have interpolation (raw strings)\n    // Based on prism-python.js\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    // see below\n    'string-literal': null,\n    // #!/usr/bin/env wren on the first line\n    hashbang: {\n      pattern: /^#!\\/.+/,\n      greedy: true,\n      alias: 'comment'\n    },\n    // Attributes are special keywords to add meta data to classes\n    attribute: {\n      // #! attributes are stored in class properties\n      // #!myvar = true\n      // #attributes are not stored and dismissed at compilation\n      pattern: /#!?[ \\t\\u3000]*\\w+/,\n      alias: 'keyword'\n    },\n    'class-name': [\n      {\n        // class definition\n        // class Meta {}\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      }, // A class must always start with an uppercase.\n      // File.read\n      /\\b[A-Z][a-z\\d_]*\\b/\n    ],\n    // A constant can be a variable, class, property or method. Just named in all uppercase letters\n    constant: /\\b[A-Z][A-Z\\d_]*\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    keyword:\n      /\\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\\b/,\n    boolean: /\\b(?:true|false)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    // Functions can be Class.method()\n    function: /\\b[a-z_]\\w*(?=\\s*[({])/i,\n    operator: /<<|>>|[=!<>]=?|&&|\\|\\||[-+*/%~^&|?:]|\\.{2,3}/,\n    punctuation: /[\\[\\](){}.,;]/\n  }\n  Prism.languages.wren['string-literal'] = {\n    // A single quote string is multiline and can have interpolation (similar to JS backticks ``)\n    pattern:\n      /(^|[^\\\\\"])\"(?:[^\\\\\"%]|\\\\[\\s\\S]|%(?!\\()|%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\))*\"/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      interpolation: {\n        // \"%(interpolation)\"\n        pattern:\n          /((?:^|[^\\\\])(?:\\\\{2})*)%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\)/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /^(%\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: Prism.languages.wren\n          },\n          'interpolation-punctuation': {\n            pattern: /^%\\(|\\)$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = xeora\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\nfunction xeora(Prism) {\n  ;(function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern:\n          /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern:\n          /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern:\n          /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /\\}:[-\\w.]+:\\{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /\\}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = xmlDoc\nxmlDoc.displayName = 'xmlDoc'\nxmlDoc.aliases = []\nfunction xmlDoc(Prism) {\n  ;(function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        })\n      }\n    }\n    var tag = Prism.languages.markup.tag\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    insertDocComment('csharp', slashDocComment)\n    insertDocComment('fsharp', slashDocComment)\n    insertDocComment('vbnet', tickDocComment)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = xojo\nxojo.displayName = 'xojo'\nxojo.aliases = []\nfunction xojo(Prism) {\n  Prism.languages.xojo = {\n    comment: {\n      pattern: /(?:'|\\/\\/|Rem\\b).+/i\n    },\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    number: [/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n    symbol: /#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,\n    keyword:\n      /\\b(?:AddHandler|App|Array|As(?:signs)?|Auto|By(?:Ref|Val)|Boolean|Break|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:erface|eger|8|16|32|64)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Single|Shared|Short|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:eger|8|16|32|64)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\\b/i,\n    operator:\n      /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,\n    punctuation: /[.,;:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = xquery\nxquery.displayName = 'xquery'\nxquery.aliases = []\nfunction xquery(Prism) {\n  ;(function (Prism) {\n    Prism.languages.xquery = Prism.languages.extend('markup', {\n      'xquery-comment': {\n        pattern: /\\(:[\\s\\S]*?:\\)/,\n        greedy: true,\n        alias: 'comment'\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n        greedy: true\n      },\n      extension: {\n        pattern: /\\(#.+?#\\)/,\n        alias: 'symbol'\n      },\n      variable: /\\$[-\\w:]+/,\n      axis: {\n        pattern:\n          /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      'keyword-operator': {\n        pattern:\n          /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      keyword: {\n        pattern:\n          /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n      'xquery-element': {\n        pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'tag'\n      },\n      'xquery-attribute': {\n        pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'attr-name'\n      },\n      builtin: {\n        pattern:\n          /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|ENTITIES|ENTITY|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|ID|IDREFS?|int|integer|language|long|Name|NCName|negativeInteger|NMTOKENS?|nonNegativeInteger|nonPositiveInteger|normalizedString|NOTATION|positiveInteger|QName|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n      operator: [\n        /[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/,\n        {\n          pattern: /(\\s)-(?=\\s)/,\n          lookbehind: true\n        }\n      ],\n      punctuation: /[[\\](){},;:/]/\n    })\n    Prism.languages.xquery.tag.pattern =\n      /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i\n    Prism.languages.xquery['tag'].inside['attr-value'].pattern =\n      /=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/i\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['punctuation'] =\n      /^=\"|\"$/\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['expression'] = {\n      // Allow for two levels of nesting\n      pattern: /\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}/,\n      inside: Prism.languages.xquery,\n      alias: 'language-xquery'\n    } // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{' && // Ignore `{{`\n            (!tokens[i + 1] ||\n              tokens[i + 1].type !== 'punctuation' ||\n              tokens[i + 1].content !== '{') &&\n            (!tokens[i - 1] ||\n              tokens[i - 1].type !== 'plain-text' ||\n              tokens[i - 1].content !== '{')\n          ) {\n            // Here we might have entered an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else if (token.type !== 'comment') {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside an XQuery expression.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token) // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            if (/^\\s+$/.test(plainText)) {\n              tokens[i] = plainText\n            } else {\n              tokens[i] = new Prism.Token(\n                'plain-text',\n                plainText,\n                null,\n                plainText\n              )\n            }\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'xquery') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = yaml\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\nfunction yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag =\n      /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)' // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n    var plainKey =\n      /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\n        /<PLAIN>/g,\n        function () {\n          return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\n            .source\n        }\n      )\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern =\n        /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source\n          .replace(/<<prop>>/g, function () {\n            return properties\n          })\n          .replace(/<<value>>/g, function () {\n            return value\n          })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n            .replace(/<<prop>>/g, function () {\n              return properties\n            })\n            .replace(/<<key>>/g, function () {\n              return '(?:' + plainKey + '|' + string + ')'\n            })\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/true|false/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = yang\nyang.displayName = 'yang'\nyang.aliases = []\nfunction yang(Prism) {\n  Prism.languages.yang = {\n    // https://tools.ietf.org/html/rfc6020#page-34\n    // http://www.yang-central.org/twiki/bin/view/Main/YangExamples\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword: {\n      pattern: /(^|[{};\\r\\n][ \\t]*)[a-z_][\\w.-]*/i,\n      lookbehind: true\n    },\n    namespace: {\n      pattern: /(\\s)[a-z_][\\w.-]*(?=:)/i,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /\\+/,\n    punctuation: /[{};:]/\n  }\n}\n","'use strict'\n\nmodule.exports = zig\nzig.displayName = 'zig'\nzig.aliases = []\nfunction zig(Prism) {\n  ;(function (Prism) {\n    function literal(str) {\n      return function () {\n        return str\n      }\n    }\n    var keyword =\n      /\\b(?:align|allowzero|and|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\\b/\n    var IDENTIFIER = '\\\\b(?!' + keyword.source + ')(?!\\\\d)\\\\w+\\\\b'\n    var ALIGN = /align\\s*\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var PREFIX_TYPE_OP =\n      /(?:\\?|\\bpromise->|(?:\\[[^[\\]]*\\]|\\*(?!\\*)|\\*\\*)(?:\\s*<ALIGN>|\\s*const\\b|\\s*volatile\\b|\\s*allowzero\\b)*)/.source.replace(\n        /<ALIGN>/g,\n        literal(ALIGN)\n      )\n    var SUFFIX_EXPR =\n      /(?:\\bpromise\\b|(?:\\berror\\.)?<ID>(?:\\.<ID>)*(?!\\s+<ID>))/.source.replace(\n        /<ID>/g,\n        literal(IDENTIFIER)\n      )\n    var TYPE =\n      '(?!\\\\s)(?:!?\\\\s*(?:' + PREFIX_TYPE_OP + '\\\\s*)*' + SUFFIX_EXPR + ')+'\n    /*\n     * A simplified grammar for Zig compile time type literals:\n     *\n     * TypeExpr = ( \"!\"? PREFIX_TYPE_OP* SUFFIX_EXPR )+\n     *\n     * SUFFIX_EXPR = ( \\b \"promise\" \\b | ( \\b \"error\" \".\" )? IDENTIFIER ( \".\" IDENTIFIER )* (?! \\s+ IDENTIFIER ) )\n     *\n     * PREFIX_TYPE_OP = \"?\"\n     *                | \\b \"promise\" \"->\"\n     *                | ( \"[\" [^\\[\\]]* \"]\" | \"*\" | \"**\" ) ( ALIGN | \"const\" \\b | \"volatile\" \\b | \"allowzero\" \\b )*\n     *\n     * ALIGN = \"align\" \"(\" ( [^()] | \"(\" [^()]* \")\" )* \")\"\n     *\n     * IDENTIFIER = \\b (?! KEYWORD ) [a-zA-Z_] \\w* \\b\n     *\n     */\n    Prism.languages.zig = {\n      comment: [\n        {\n          pattern: /\\/{3}.*/,\n          alias: 'doc-comment'\n        },\n        /\\/{2}.*/\n      ],\n      string: [\n        {\n          // \"string\" and c\"string\"\n          pattern: /(^|[^\\\\@])c?\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // multiline strings and c-strings\n          pattern: /([\\r\\n])([ \\t]+c?\\\\{2}).*(?:(?:\\r\\n?|\\n)\\2.*)*/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // characters 'a', '\\n', '\\xFF', '\\u{10FFFF}'\n          pattern:\n            /(^|[^\\\\])'(?:[^'\\\\\\r\\n]|\\\\(?:.|x[a-fA-F\\d]{2}|u\\{[a-fA-F\\d]{1,6}\\}))'/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      builtin: /\\B@(?!\\d)\\w+(?=\\s*\\()/,\n      label: {\n        pattern:\n          /(\\b(?:break|continue)\\s*:\\s*)\\w+\\b|\\b(?!\\d)\\w+\\b(?=\\s*:\\s*(?:\\{|while\\b))/,\n        lookbehind: true\n      },\n      'class-name': [\n        // const Foo = struct {};\n        /\\b(?!\\d)\\w+(?=\\s*=\\s*(?:(?:extern|packed)\\s+)?(?:enum|struct|union)\\s*[({])/,\n        {\n          // const x: i32 = 9;\n          // var x: Bar;\n          // fn foo(x: bool, y: f32) void {}\n          pattern: RegExp(\n            /(:\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?[=;,)])|<TYPE>(?=\\s*(?:<ALIGN>\\s*)?\\{)/.source\n              .replace(/<TYPE>/g, literal(TYPE))\n              .replace(/<ALIGN>/g, literal(ALIGN))\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          // extern fn foo(x: f64) f64; (optional alignment)\n          pattern: RegExp(\n            /(\\)\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?;)/.source\n              .replace(/<TYPE>/g, literal(TYPE))\n              .replace(/<ALIGN>/g, literal(ALIGN))\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      'builtin-types': {\n        pattern:\n          /\\b(?:anyerror|bool|c_u?(?:short|int|long|longlong)|c_longdouble|c_void|comptime_(?:float|int)|[iu](?:8|16|32|64|128|size)|f(?:16|32|64|128)|noreturn|type|void)\\b/,\n        alias: 'keyword'\n      },\n      keyword: keyword,\n      function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n      number:\n        /\\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\\d]+(?:\\.[a-fA-F\\d]*)?(?:[pP][+-]?[a-fA-F\\d]+)?|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /\\.[*?]|\\.{2,3}|[-=]>|\\*\\*|\\+\\+|\\|\\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,\n      punctuation: /[.:,;(){}[\\]]/\n    }\n    Prism.languages.zig['class-name'].forEach(function (obj) {\n      if (obj.inside === null) {\n        obj.inside = Prism.languages.zig\n      }\n    })\n  })(Prism)\n}\n"],"names":["ctx","globalThis","self","window","global","restore","defined","current","Prism","undefined","capture","manual","disableWorkerMessageHandler","h","require","decode","markup","css","clike","js","own","hasOwnProperty","Refractor","prototype","refract","register","grammar","displayName","Error","languages","module","exports","highlight","value","name","sup","util","type","call","this","alias","key","list","length","index","map","registered","language","listLanguages","push","encode","tokens","Token","stringify","parent","env","values","result","stringifyAll","content","tag","classes","attributes","concat","hooks","run","join","attrs","refractor","abap","comment","string","pattern","lookbehind","keyword","number","operator","punctuation","aliases","abnf","coreRules","greedy","inside","range","terminal","repetition","definition","RegExp","rule","actionscript","extend","insertBefore","xml","ada","boolean","char","variable","agda","function","al","antlr4","escape","action","command","annotation","label","constant","g4","apacheconf","regex","refractorSql","apex","keywords","className","source","replace","insertClassName","classNameInside","sql","trigger","apl","statement","assignment","dfn","applescript","class","aql","property","refractorCpp","arduino","builtin","arff","asciidoc","quoted","interpreted","table","specifiers","title","hr","admonition","callout","macro","inline","url","italic","bold","replacement","entity","copyFromAsciiDoc","keys","o","i","l","split","rest","add","adoc","asm6502","directive","opcode","hexnumber","binarynumber","decimalnumber","refractorCsharp","aspnet","csharp","javascript","autohotkey","selector","symbol","important","autoit","avisynth","re","replacements","flags","m","types","allinternals","argument","avs","avroIdl","identifier","avdl","bash","envVars","commandAfterHeredoc","insideString","environment","shebang","toBeCopied","shell","basic","batch","parameter","bbcode","shortcode","bicep","interpolation","expression","datatype","decorator","birb","metadata","refractorC","bison","c","delimiter","bnf","rbnf","brainfuck","pointer","increment","decrement","branching","brightscript","bro","bsl","oscript","cfscript","scope","cfc","chaiscript","cpp","cil","clojure","cmake","namespace","inserted","cobol","level","coffeescript","script","coffee","concurnas","langext","conc","coq","commentSource","attribute","punct","modName","generic","refractorRuby","crystal","expansion","nested","depthLog2","keywordKinds","keywordsToPattern","words","trim","typeDeclarationKeywords","nonTypeKeywords","nonContextualKeywords","nestedRound","genericName","array","typeExpressionWithoutTuple","tupleElement","tuple","typeExpression","typeInside","character","regularString","verbatimString","preprocessor","regularStringOrCharacter","regularStringCharacterOrComment","roundExpression","attrTarget","attr","target","formatString","mInterpolationRound","mInterpolation","sInterpolationRound","sInterpolation","createInterpolationInside","interpolationRound","dotnet","cs","cshtml","commentLike","stringLike","round","square","curly","angle","tagAttrs","tagContent","tagRegion","html","block","razor","csp","safe","unsafe","cssExtras","selectorInside","id","combinator","unit","hexcode","color","atrule","addInlined","addAttribute","csv","cypher","relationship","d","dart","packagePrefix","generics","dataweave","date","dax","measure","dhall","hash","diff","coord","PREFIXES","unchanged","Object","forEach","prefix","test","exec","line","defineProperty","refractorMarkupTemplating","django","filter","markupTemplating","buildPlaceholders","tokenizePlaceholders","jinja2","dnsZoneFile","docker","spaceAfterBackSlash","space","option","stringRule","commentRule","instruction","options","dockerfile","dot","ID","IDInside","withID","node","gv","ebnf","special","editorconfig","section","eiffel","ejs","eta","elixir","doc","atom","elm","hvariable","erb","erlang","refractorLua","etlua","lua","excelFormula","reference","sheet","file","path","cell","column","row","factor","comment_inside","string_inside","regexp","combinators","str","arrToWordsRegExp","arr","builtins","k","$false","firestoreSecurityRules","method","flow","Array","isArray","unshift","fortran","fsharp","ftl","FTL_EXPR","gap","continuation","gcode","checksum","gdscript","gedcom","gherkin","tableRow","pystring","feature","scenario","outline","td","th","git","deleted","glsl","gml","gamemakerlanguage","gn","gni","go","graphql","description","markdown","scalar","fragment","object","validTokens","token","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","indexOf","offset","open","close","stackHeight","groovy","haml","ruby","doctype","code","filters","all_filters","handlebars","brackets","hbs","haskell","hs","haxe","reification","hcl","heredoc","hlsl","hoon","hpkp","hsts","http","uri","langs","httpLanguages","json","suffixTypes","getSuffixPattern","contentType","suffix","ichigojam","icon","icuMessageFormat","stringPattern","argumentSource","nestedMessage","message","refractorHaskell","idris","idr","iecst","ignore","entry","gitignore","hgignore","npmignore","inform7","substitution","verb","position","text","ini","header","io","j","adverb","conjunction","java","classNamePrefix","refractorJava","refractorJavadoclike","javadoc","codeLinePattern","memberReference","field","javadoclike","addSupport","javaDocLike","docLanguage","lang","callback","tokenName","docCommentSupport","hashbang","javastacktrace","summary","exceptions","version","more","jexl","transform","jolie","aggregates","redirects","jq","stringInterpolation","jsExtras","withId","imports","spread","arrow","dom","console","maybeClassNameTokens","jsTemplates","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","tokenize","tokenizeInterpolationExpression","tempGrammar","args","apply","splice","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","placeholders","walkTokens","s","before","substring","middle","after","afterTokens","Boolean","supportedLanguages","typescript","ts","jsx","tsx","stringContent","findTemplateStrings","embedded","refractorTypescript","jsdoc","parameterPrefix","example","null","webmanifest","refractorJson","json5","jsonp","jsstacktrace","filename","clone","braces","stringifyToken","openedTags","notTagNorBrace","tagName","pop","openedBraces","plainText","julia","keyman","kotlin","kt","kts","kumir","nonId","wrapId","prolog","kum","kusto","datetime","latex","funcPattern","insideEqu","cdata","equation","headline","tex","context","refractorPhp","latte","ld","rd","php","markupLatte","less","refractorScheme","lilypond","schemeExpression","scheme","ly","liquid","empty","insideRaw","match","tagMatch","lisp","simple_form","primitive","par","endpar","heading","declare","interactive","defvar","defun","arguments","lambda","car","arg","varform","forms","arglist","sublist","elisp","emacs","livescript","llvm","log","exception","separator","email","domain","uuid","time","lolcode","magma","output","generator","makefile","inner","createInline","tableCell","tableLine","yaml","blockquote","strike","codeLang","codeBlock","toLowerCase","cls","tagPattern","parseInt","slice","Number","fromCodePoint","known","KNOWN_ENTITY_NAMES","textContent","plugins","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","amp","lt","gt","quot","String","fromCharCode","md","defineProperties","placeholderPattern","replaceFilter","tokenStack","includedCdataInside","def","attrName","mathml","svg","ssml","rss","matlab","maxscript","mel","flag","mermaid","style","mizar","mongodb","operators","operatorsSource","monkey","moonscript","moon","n1ql","n4js","n4jsd","nand2tetrisHdl","naniscript","expressionDef","params","getTextContent","define","nani","input","stack","bracket","bracketsIndex","isBracketsBalanced","nasm","neon","literal","nevod","fields","search","quantifier","colon","nginx","nim","nix","antiquotation","nsis","objectivec","objc","ocaml","variant","opencl","openqasm","qasm","oz","parigp","parser","pascal","objectpascal","pascaligo","reduce","accum","p","pcaxis","tlist","px","peoplecode","pcode","perl","filehandle","vstring","phpExtras","package","string_interpolation","phpdoc","plsql","powerquery","pq","mscript","powershell","stringInside","processing","promql","vectorMatching","properties","protobuf","builtinTypes","psl","pug","each","branch","mixin","filter_pattern","puppet","pure","inlineLanguageRe","purebasic","asm","pbfasm","purescript","purs","python","py","q","qml","jsString","jsComment","jsExpr","qore","qsharp","qualifiedName","interpolationExpr","qs","r","ellipsis","racket","rkt","reason","constructor","specialEscape","rangeChar","groupName","charset","charclass","backreference","anchor","group","alternation","rego","renpy","rpy","role","link","rip","roboconf","component","optional","wildcard","robotframework","createSection","extendecInside","docTag","testNameLike","testPropertyLike","settings","documentation","variables","tasks","robot","rb","rust","multilineComment","sas","numericConstant","macroVariable","macroKeyword","step","func","format","equals","altformat","globalStatements","submitStatement","actionSets","casActions","datalines","sass","scala","SortedBNF","scss","refractorBash","shellSession","strings","info","user","smali","smalltalk","smarty","smartyLitteralMode","sml","word","smlnj","solidity","sol","solutionFile","guid","soy","numberPattern","soyLitteralMode","refractorTurtle","sparql","rq","splunkSpl","sqf","squirrel","stan","constraint","stylus","swift","nil","omit","systemd","quotesSource","refractorT4Templating","t4Cs","t4","createT4","t4Templating","createBlock","contentAlias","insideLang","standard","refractorVbnet","t4Vb","refractorYaml","tap","fail","pass","pragma","bailout","plan","subtest","yamlish","tcl","textile","modifierRegex","parenthesesRegex","withModifier","modifierTokens","phrase","modifier","cite","span","image","footnote","acronym","mark","phraseInside","nestedPatterns","phraseInlineInside","phraseTableInside","toml","insertKey","refractorJsx","tt2","turtle","trig","twig","other","at","typoscript","tsconfig","unrealscript","category","uc","uscript","query","pair","authority","port","host","v","vala","refractorBasic","vbnet","velocity","unparsed","verilog","vhdl","vim","visualBasic","vb","vba","warpscript","wasm","wiki","emphasis","nowiki","wolfram","blank","mathematica","wl","nb","wren","xeora","xeoracube","xmlDoc","insertDocComment","docComment","slashDocComment","tickDocComment","xojo","xquery","extension","axis","anchorOrAlias","plainKey","createValuePattern","yml","yang","zig","IDENTIFIER","ALIGN","TYPE","obj"],"sourceRoot":""}