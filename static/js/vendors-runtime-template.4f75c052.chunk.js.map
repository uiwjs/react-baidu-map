{"version":3,"sources":["../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js","../node_modules/@babel/template/lib/index.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/highlight/node_modules/color-convert/conversions.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/highlight/node_modules/chalk/index.js","../node_modules/@babel/highlight/node_modules/ansi-styles/index.js","../node_modules/@babel/highlight/node_modules/color-convert/index.js","../node_modules/@babel/highlight/node_modules/color-name/index.js","../node_modules/@babel/highlight/node_modules/color-convert/route.js","../node_modules/@babel/highlight/node_modules/supports-color/browser.js","../node_modules/@babel/highlight/node_modules/chalk/templates.js","../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","default","path","file","builtinClasses","isLoose","assumptions","classState","parent","undefined","scope","node","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","body","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","list","map","Map","static","setState","newState","assign","findThisesVisitor","_core","traverse","visitors","merge","_helperReplaceSupers","environmentVisitor","ThisExpression","push","buildBody","paths","get","equals","params","constructor","template","expression","ast","types","blockStatement","unshiftContainer","classMethod","identifier","maybeCreateConstructor","classBodyPaths","isClassProperty","buildCodeFrameError","decorators","isClassMethod","isConstructor","kind","methodPath","objectRef","superRef","constantSuper","refToPreserve","replace","ReturnStatement","getFunctionParent","isArrowFunctionExpression","pushConstructor","pushMethod","pushBody","thisRef","ref","generateDeclaredUidIdentifier","cloneNode","thisPath","parentPath","isMemberExpression","object","replaceWith","callExpression","addHelper","bareSupers","Set","Super","isCallExpression","callee","add","wrapReturn","guaranteedSuperBeforeFinish","size","bareSuper","wrapSuperCall","find","isLoop","isConditional","returnArg","thisExpr","logicalExpression","concat","bodyPaths","length","pop","isReturnStatement","pushContainer","returnStatement","returnPath","argument","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","desc","obj","objectExpression","objectProperty","key","properties","args","arrayExpression","nullLiteral","lastNonNullIndex","i","isNullLiteral","slice","expressionStatement","call","bareSuperNode","superIsCallableConstructor","arguments","unshift","thisExpression","isSpreadElement","isIdentifier","name","memberExpression","_helperOptimiseCallExpression","isExpressionStatement","container","assignmentExpression","setClassMethods","generateUidIdentifier","classProto","protoDeclaration","variableDeclaration","variableDeclarator","insertProtoAliasOnce","methodName","computed","isLiteral","func","functionExpression","generator","async","toComputedKey","isStringLiteral","_helperFunctionName","id","expr","inheritsComments","processMethod","descriptor","descKey","isNumericLiteral","isBigIntLiteral","stringLiteral","String","fn","toExpression","has","set","method","directives","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","superClass","hasBinding","buildConstructor","closureParams","closureArgs","arg","_helperAnnotateAsPure","param","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","noClassCalls","isStrict","isInStrictMode","constructorOnly","directive","directiveLiteral","arrowFunctionExpression","classTransformer","require","functionDeclaration","helperIDs","clone","_unused","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration","WeakMap","statement","program","statements","smart","formatters","_builder","_default","bind","beforeExpr","startsExpr","isAssign","prefix","TokenType","label","conf","this","keyword","rightAssociative","postfix","binop","updateContext","keywords$1","createKeyword","options","token","createBinop","types$1","num","bigint","decimal","regexp","string","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","slashAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","CommentsParser","comment","loc","state","trailingComments","leadingComments","elements","takeAllComments","lastElement","j","commentPreviousNode","splice","newTrailingComments","leadingComment","type","firstChild","lastChild","commentStack","lastInStack","adjustCommentsAfterTrailingComma","innerComments","firstTrailingCommentIndex","findIndex","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","plugin","hasPlugin","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","keys","forEach","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","raiseWithData","getLocationForPosition","message","_","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","preserveSpace","brace","context","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","fromCharCode","isIdentifierChar","reservedWords","keywords","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","bindingType","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","values","next","topLevelScope","FlowScope","declareFunctions","FlowScopeHandler","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inPipeline","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","exprAllowed","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","curPosition","skipArrays","val","Array","isArray","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","PlaceHolderErrors","ClassNameIsRequired","some","getPluginOption","option","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","pattern","regex","e","estreeParseLiteral","bigInt","BigInt","parseLiteral","stmt","startNodeAt","extra","expressionValue","raw","finishNodeAt","isObjectProperty","checkDeclaration","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","d","directiveToStmt","classBody","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","refExpressionErrors","isLHS","toAssignable","optional","_node$arguments$","attributes","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","out","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","lookaheadState","curContext","jsxReadToken","jsxReadWord","jsxReadString","prevType","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","enter","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","canInsertSemicolon","elementType","objectType","indexType","flowParsePrefixType","flowParsePostfixType","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","result","tryParse","failState","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","invalid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","indexOf","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","finishOp","current","isIteratorStart","readIterator","isBinding","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","thrown","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","nextToken","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","isLiteralPropertyName","hasPrecedingLineBreak","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","hasOwnProperty","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","isLineTerminator","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","readToken_lt_gt","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseV8Intrinsic","placeholders","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","ranges","tokens","createParenthesizedExpressions","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","checkKeywordEscapes","pushToken","old","createLookaheadState","curr","cp","trail","clear","skipSpace","readTmplToken","getTokenFromCode","codePointAtPos","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readWord1","readNumber","width","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","content","mods","char","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","octal","n","firstCode","escStart","identifierCheck","esc","_this$state$type$upda","_this$state$type","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","from","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","UtilParser","op","nameStart","nameEnd","nextCh","allowAsi","messageOrType","missingPlugin","names","join","oldState","abortSignal","andThrow","shorthandAssign","doubleProto","optionalParameters","isPrivateName","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","oldExpressionScope","expressionScope","paramFlags","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","ExpressionParser","isRecord","protoRef","isObjectMethod","used","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","parseModuleExpression","update","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","parseFunction","parseAsyncArrowUnaryFunction","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","codePointAt","expectOnePlugin","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","elem","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseDecorator","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","inFunction","recordParameterInitializerError","delegating","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","enterInitialScopes","parseProgram","_node$extra3","recordParenthesizedIdentifierError","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","refNeedsArrowPos","parseBindingAtom","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","processComment","locationNode","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","opts","getOptions","pluginMap","pluginsMap","parseTopLevel","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","matched","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","pushClassMethod","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","getPrivateNameSV","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","getParser","decoratorsBeforeExport","p","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isJSXIdentifier","isNewExpression","isFunction","resolve","resolveAncestors","isDuplicate","cssKeywords","reverseKeywords","convert","module","rgb","channels","hsl","hsv","hwb","cmyk","xyz","lch","ansi16","ansi256","hcg","apple","gray","model","h","r","g","rdif","gdif","bdif","s","v","diff","diffc","c","k","reversed","currentClosestKeyword","y","currentClosestDistance","distance","pow","z","t1","t2","t3","smin","lmin","hi","floor","q","sl","vmin","wh","bl","ratio","m","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","round","ansi","color","mult","rem","colorString","hue","chroma","mg","pure","w","metadata","prototype","placeholderName","reverse","emptyStatement","applyReplacement","_helperPluginUtils","_helperSplitExportDeclaration","_globals","_transformClass","getBuiltinClasses","category","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","assumption","VISITED","Symbol","visitor","ExportDefaultDeclaration","isClassDeclaration","ClassDeclaration","ClassExpression","inferred","arrowFunctionToExpression","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","toLowerCase","colorize","supportsColor","enabled","level","matchToToken","escapeStringRegexp","ansiStyles","stdoutColor","stdout","isSimpleWindowsTerm","platform","TERM","levelMapping","skipModels","styles","applyOptions","scLevel","Chalk","chalkTag","apply","setPrototypeOf","blue","open","closeRe","codes","build","_styles","_empty","visible","bgColor","bgModel","defineProperties","applyStyle","self","enumerable","hasGrey","__proto__","argsLen","originalDim","dim","strings","parts","colorConvert","wrapAnsi16","wrapAnsi256","wrapAnsi16m","italic","underline","inverse","hidden","strikethrough","black","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","groupName","group","styleName","style","ansi2ansi","rgb2rgb","ansi16m","suite","conversions","route","fromModel","routes","toModel","wrappedFn","conversion","wrapRounded","wrapRaw","deriveBFS","graph","models","buildGraph","queue","adjacents","adjacent","link","to","wrapConversion","stderr","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","parseArguments","results","chunks","trim","chunk","escape","chr","parseStyle","buildStyle","layer","escapeChar","errMsg","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"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G,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,KAAM,KAAM,KAAM,IAAK,KAAM,IAAK,EAAG,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,KAAM,EAAG,KAAM,GAAI,EAAG,KAAM,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,KAAM,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,KAAM,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,KAAM,GAAI,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,KAAM,IAAK,GAAI,GAAI,EAAG,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KAAM,MAAO,GAAI,KAAM,GAAI,IAAK,EAAG,KAAM,GAAI,KAAM,KAAM,IAAK,KAAM,MAC3wDC,EAAwB,CAAC,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,IAAK,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG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","file":"static/js/vendors-runtime-template.4f75c052.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr,\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.trailingComments.push(comment);\n    this.state.leadingComments.push(comment);\n  }\n\n  adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n    if (this.state.leadingComments.length === 0) {\n      return;\n    }\n\n    let lastElement = null;\n    let i = elements.length;\n\n    while (lastElement === null && i > 0) {\n      lastElement = elements[--i];\n    }\n\n    if (lastElement === null) {\n      return;\n    }\n\n    for (let j = 0; j < this.state.leadingComments.length; j++) {\n      if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n        this.state.leadingComments.splice(j, 1);\n        j--;\n      }\n    }\n\n    const newTrailingComments = [];\n\n    for (let i = 0; i < this.state.leadingComments.length; i++) {\n      const leadingComment = this.state.leadingComments[i];\n\n      if (leadingComment.end < node.end) {\n        newTrailingComments.push(leadingComment);\n\n        if (!takeAllComments) {\n          this.state.leadingComments.splice(i, 1);\n          i--;\n        }\n      } else {\n        if (node.trailingComments === undefined) {\n          node.trailingComments = [];\n        }\n\n        node.trailingComments.push(leadingComment);\n      }\n    }\n\n    if (takeAllComments) this.state.leadingComments = [];\n\n    if (newTrailingComments.length > 0) {\n      lastElement.trailingComments = newTrailingComments;\n    } else if (lastElement.trailingComments !== undefined) {\n      lastElement.trailingComments = [];\n    }\n  }\n\n  processComment(node) {\n    if (node.type === \"Program\" && node.body.length > 0) return;\n    const stack = this.state.commentStack;\n    let firstChild, lastChild, trailingComments, i, j;\n\n    if (this.state.trailingComments.length > 0) {\n      if (this.state.trailingComments[0].start >= node.end) {\n        trailingComments = this.state.trailingComments;\n        this.state.trailingComments = [];\n      } else {\n        this.state.trailingComments.length = 0;\n      }\n    } else if (stack.length > 0) {\n      const lastInStack = last(stack);\n\n      if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n        trailingComments = lastInStack.trailingComments;\n        delete lastInStack.trailingComments;\n      }\n    }\n\n    if (stack.length > 0 && last(stack).start >= node.start) {\n      firstChild = stack.pop();\n    }\n\n    while (stack.length > 0 && last(stack).start >= node.start) {\n      lastChild = stack.pop();\n    }\n\n    if (!lastChild && firstChild) lastChild = firstChild;\n\n    if (firstChild) {\n      switch (node.type) {\n        case \"ObjectExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties);\n          break;\n\n        case \"ObjectPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n          break;\n\n        case \"CallExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.arguments);\n          break;\n\n        case \"ArrayExpression\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements);\n          break;\n\n        case \"ArrayPattern\":\n          this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n          break;\n      }\n    } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n      this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n    }\n\n    if (lastChild) {\n      if (lastChild.leadingComments) {\n        if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n          node.leadingComments = lastChild.leadingComments;\n          delete lastChild.leadingComments;\n        } else {\n          for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n            if (lastChild.leadingComments[i].end <= node.start) {\n              node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n              break;\n            }\n          }\n        }\n      }\n    } else if (this.state.leadingComments.length > 0) {\n      if (last(this.state.leadingComments).end <= node.start) {\n        if (this.state.commentPreviousNode) {\n          for (j = 0; j < this.state.leadingComments.length; j++) {\n            if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n              this.state.leadingComments.splice(j, 1);\n              j--;\n            }\n          }\n        }\n\n        if (this.state.leadingComments.length > 0) {\n          node.leadingComments = this.state.leadingComments;\n          this.state.leadingComments = [];\n        }\n      } else {\n        for (i = 0; i < this.state.leadingComments.length; i++) {\n          if (this.state.leadingComments[i].end > node.start) {\n            break;\n          }\n        }\n\n        const leadingComments = this.state.leadingComments.slice(0, i);\n\n        if (leadingComments.length) {\n          node.leadingComments = leadingComments;\n        }\n\n        trailingComments = this.state.leadingComments.slice(i);\n\n        if (trailingComments.length === 0) {\n          trailingComments = null;\n        }\n      }\n    }\n\n    this.state.commentPreviousNode = node;\n\n    if (trailingComments) {\n      if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n        node.innerComments = trailingComments;\n      } else {\n        const firstTrailingCommentIndex = trailingComments.findIndex(comment => comment.end >= node.end);\n\n        if (firstTrailingCommentIndex > 0) {\n          node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n          node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n        } else {\n          node.trailingComments = trailingComments;\n        }\n      }\n    }\n\n    stack.push(node);\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const directive = super.stmtToDirective(stmt);\n    const value = stmt.expression.value;\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true)\n};\n\ntypes$1.braceR.updateContext = context => {\n  context.pop();\n};\n\ntypes$1.braceL.updateContext = types$1.braceHashL.updateContext = types$1.dollarBraceL.updateContext = context => {\n  context.push(types.brace);\n};\n\ntypes$1.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    return (this.currentThisScopeFlags() & SCOPE_STATIC_BLOCK) > 0;\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n          node.declaration = this.flowParseDeclare(this.startNode());\n          node.default = false;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n          node = this.parseExport(node);\n\n          if (node.type === \"ExportNamedDeclaration\") {\n            node.type = \"ExportDeclaration\";\n            node.default = false;\n            delete node.exportKind;\n          }\n\n          node.type = \"Declare\" + node.type;\n          return node;\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n      if (!result.node) {\n        if (result.error) {\n          super.setOptionalParametersError(refExpressionErrors, result.error);\n        }\n\n        return expr;\n      }\n\n      if (result.error) this.state = result.failState;\n      return result.node;\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n          this.raise(pos, FlowErrors.DeclareClassElement);\n        } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type === \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n      case \"TypeCastExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = as_ident.__clone();\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n      specifier.imported = this.parseIdentifier(true);\n      specifier.importKind = specifierTypeKind;\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = specifier.imported.__clone();\n      }\n    } else {\n      if (firstIdentIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n      }\n\n      isBinding = true;\n      specifier.imported = firstIdent;\n      specifier.importKind = null;\n      specifier.local = specifier.imported.__clone();\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.length -= 2;\n      } else if (curContext === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n\n        if (arrowExpression.type !== \"ArrowFunctionExpression\" && (_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) {\n          abort();\n        }\n\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = context => {\n  context.push(types.j_expr, types.j_oTag);\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === types$1.slash && prevType === types$1.jsxTagStart) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.exprAllowed = false;\n    } else if (type === types$1.jsxTagEnd) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n        context.pop();\n        this.state.exprAllowed = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.exprAllowed = true;\n      }\n    } else if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.parseIdentifierName(node.start);\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.parseIdentifierName(typeParameter.start);\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    if (this.isRelational(\"<\")) {\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = false;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types$1.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow() {\n    return this.match(types$1.colon) || super.shouldParseArrow();\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    const skip = skipWhiteSpace.exec(this.input);\n    return pos + skip[0].length;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  pushComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n      type: block ? \"CommentBlock\" : \"CommentLine\",\n      value: text,\n      start: start,\n      end: end,\n      loc: new SourceLocation(startLoc, endLoc)\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    this.state.comments.push(comment);\n    this.addComment(comment);\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", this.state.pos + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start;\n    let match;\n\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n      ++this.state.curLine;\n      this.state.lineStart = match.index + match[0].length;\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n  }\n\n  skipSpace() {\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              this.skipBlockComment();\n              break;\n\n            case 47:\n              this.skipLineComment(2);\n              break;\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else {\n            break loop;\n          }\n\n      }\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.slashAssign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.braceBarR);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n        this.skipLineComment(3);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n      this.skipLineComment(4);\n      this.skipSpace();\n      this.nextToken();\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  updateContext(prevType) {\n    var _this$state$type$upda, _this$state$type;\n\n    (_this$state$type$upda = (_this$state$type = this.state.type).updateContext) == null ? void 0 : _this$state$type$upda.call(_this$state$type, this.state.context);\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.end, this.nextTokenStart()));\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n\n    if (!andThrow) {\n      return shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0;\n    }\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n  __clone() {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  }\n\n}\n\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    let paramFlags = PARAM;\n\n    if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.state.inPipeline = true;\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"smart\":\n            return this.withTopicPermittingContext(() => {\n              return this.parseSmartPipelineBody(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n      return this.parseModuleExpression();\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types$1.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(id);\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              return this.parseDo(true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(false);\n        }\n\n      case types$1.slash:\n      case types$1.slashAssign:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          const start = this.state.start;\n          const value = this.state.value;\n          node = this.parsePrivateName();\n\n          if (this.match(types$1._in)) {\n            this.expectPlugin(\"privateIn\");\n            this.classScope.usePrivateName(value, node.start);\n          } else if (this.hasPlugin(\"privateIn\")) {\n            this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, value);\n          } else {\n            throw this.unexpected(start);\n          }\n\n          return node;\n        }\n\n      case types$1.hash:\n        {\n          if (this.state.inPipeline) {\n            node = this.startNode();\n\n            if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n              this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n            }\n\n            this.next();\n\n            if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n              this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n            }\n\n            this.registerTopicReference();\n            return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(id) {\n    const node = this.startNodeAtNode(id);\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    const node = this.startNode();\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow() {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n      } else {\n        prop.value = prop.key.__clone();\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock && !this.scope.inNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(types$1.star);\n\n      switch (this.state.type) {\n        case types$1.semi:\n        case types$1.eof:\n        case types$1.braceR:\n        case types$1.parenR:\n        case types$1.bracketR:\n        case types$1.braceBarR:\n        case types$1.colon:\n        case types$1.comma:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  parseSmartPipelineBody(childExpression, startPos, startLoc) {\n    this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n    return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n  }\n\n  checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (childExpression.type === \"SequenceExpression\") {\n      this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n    const isSimpleReference = this.isSimpleReference(childExpression);\n\n    if (isSimpleReference) {\n      bodyNode.callee = childExpression;\n    } else {\n      if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n        this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n      }\n\n      bodyNode.expression = childExpression;\n    }\n\n    return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  withTopicPermittingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withTopicForbiddingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentTopicContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const expr = stmt.expression;\n    const directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n    const directive = this.startNodeAt(stmt.start, stmt.loc.start);\n    const raw = this.input.slice(expr.start, expr.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n    return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n      const matched = keywordRelationalOperator.exec(this.input);\n\n      if (matched !== null) {\n        const endCh = this.codePointAtPos(next + matched[0].length);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const isSimple = key.type === \"Identifier\";\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types$1.star) && this.isLineTerminator())) {\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = imported.__clone();\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = require(\"@babel/types\");\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = require(\"@babel/types\");\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}