{"version":3,"sources":["../node_modules/@uiw/copy-to-clipboard/dist/copy-to-clipboard.umd.js","../../../src/index.tsx"],"names":["module","exports","copyTextToClipboard","text","cb","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","isCopy","execCommand","err","removeChild","removeAllRanges","addRange","factory","Split","state","dragging","warpper","paneNumber","startX","startY","move","target","boxWidth","boxHeight","preWidth","nextWidth","preHeight","nextHeight","preSize","nextSize","this","window","env","prevTarget","nextTarget","mode","onDragging","x","y","onDragEnd","prefixCls","className","children","visiable","lineBar","disable","other","cls","child","React","ref","node","props","Object","element","visiableBar","idx","barProps","onMouseDown","Component","defaultProps"],"mappings":"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","file":"static/js/vendors-uiwjs.a6928cac.chunk.js","sourcesContent":["/*!\n * @uiw/copy-to-clipboard v1.0.11\n * Copy to clipboard.\n * \n * Copyright (c) 2020 Kenny Wang\n * https://github.com/uiw-react/copy-to-clipboard.git\n * \n * Licensed under the MIT license.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.copyTextToClipboard = factory());\n}(this, (function () { 'use strict';\n\n  function copyTextToClipboard(text, cb) {\n    //\n    // *** This styling is an extra step which is likely not required. ***\n    // \n    // https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard\n    //\n    // Why is it here? To ensure:\n    // 1. the element is able to have focus and selection.\n    // 2. if element was to flash render it has minimal visual impact.\n    // 3. less flakyness with selection and copying which **might** occur if\n    //    the textarea element is not visible.\n    //\n    // The likelihood is the element won't even render, not even a flash,\n    // so some of these are just precautions. However in IE the element\n    // is visible whilst the popup box asking the user for permission for\n    // the web page to copy to the clipboard.\n    //\n    // Place in top-left corner of screen regardless of scroll position.\n    const el = document.createElement('textarea');\n    el.value = text;\n    el.setAttribute('readonly', '');\n    el.style = {\n      position: 'absolute',\n      left: '-9999px',\n    };\n    document.body.appendChild(el);\n    const selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n    el.select();\n    let isCopy = false;\n    try {\n      const successful = document.execCommand('copy');\n      isCopy = !!successful;\n    } catch (err) {\n      isCopy = false;\n    }\n    document.body.removeChild(el);\n    if (selected && document.getSelection) {\n      document.getSelection().removeAllRanges();\n      document.getSelection().addRange(selected);\n    }\n    cb && cb(isCopy);\n  }\n\n  return copyTextToClipboard;\n\n})));\n","import React from 'react';\nimport './style/index.less';\n\nexport interface SplitProps extends  Omit<React.HTMLAttributes<HTMLDivElement>, 'onDragEnd'> {\n  style?: React.CSSProperties;\n  className?: string;\n  prefixCls?: string;\n  /**\n   * 拖拽宽度/高度变化回调函数，宽度或者高度根据 mode 参数来确定\n   */\n  onDragging?: (preSize: number, nextSize: number, paneNumber: number) => void;\n  /**\n   * 拖拽结束的回调函数\n   */\n  onDragEnd?: (preSize: number, nextSize: number, paneNumber: number) => void;\n  /**\n   * 设置拖拽的工具条，为线条样式。\n   */\n  lineBar?: boolean;\n  /**\n   * 设置拖拽的工具条，是否可见\n   */\n  visiable?: boolean | number[];\n  /**\n   * 设置拖拽的工具条，禁用\n   */\n  disable?: boolean | number[];\n  /**\n   * 类型，可选值为 `horizontal` 或 `vertical`\n   */\n  mode?: 'horizontal' | 'vertical';\n}\nexport interface SplitState {\n  dragging: boolean;\n}\n\nexport default class Split extends React.Component<SplitProps, SplitState> {\n  public static defaultProps: SplitProps = {\n    prefixCls: 'w-split',\n    visiable: true,\n    mode: 'horizontal',\n  }\n  public state: SplitState = {\n    dragging: false,\n  }\n  public warpper!: HTMLDivElement | null;\n  public paneNumber!: number;\n  public startX!: number;\n  public startY!: number;\n  public move!: boolean;\n  public target!: HTMLDivElement;\n\n  public boxWidth!: number;\n  public boxHeight!: number;\n  public preWidth!: number;\n  public nextWidth!: number;\n  public preHeight!: number;\n  public nextHeight!: number;\n\n  public preSize!: number;\n  public nextSize!: number;\n  constructor(props: SplitProps) {\n    super(props);\n    this.onDragEnd = this.onDragEnd.bind(this);\n    this.onDragging = this.onDragging.bind(this);\n  }\n  public componentWillUnmount() {\n    this.removeEvent();\n  }\n  private removeEvent() {\n    window.removeEventListener('mousemove', this.onDragging, false);\n    window.removeEventListener('mouseup', this.onDragEnd, false);\n  }\n  onMouseDown(paneNumber: number, env: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!env.target || !this.warpper) {\n      return;\n    }\n    this.paneNumber = paneNumber;\n    this.startX = env.clientX;\n    this.startY = env.clientY;\n    this.move = true;\n    this.target = (env.target as HTMLDivElement).parentNode as HTMLDivElement;\n    const prevTarget = this.target.previousElementSibling;\n    const nextTarget = this.target.nextElementSibling;\n    this.boxWidth = this.warpper.clientWidth;\n    this.boxHeight = this.warpper.clientHeight;\n    if (prevTarget) {\n      this.preWidth = prevTarget.clientWidth;\n      this.preHeight = prevTarget.clientHeight;\n    }\n    if (nextTarget) {\n      this.nextWidth = nextTarget.clientWidth;\n      this.nextHeight = nextTarget.clientHeight;\n    }\n    window.addEventListener('mousemove', this.onDragging);\n    window.addEventListener('mouseup', this.onDragEnd, false);\n    this.setState({ dragging: true });\n  }\n  onDragging(env: Event) {\n    if (!this.move) {\n      return;\n    }\n    if (!this.state.dragging) {\n      this.setState({ dragging: true });\n    }\n    const { mode, onDragging } = this.props;\n    const nextTarget = this.target.nextElementSibling as HTMLDivElement;\n    const prevTarget = this.target.previousElementSibling as HTMLDivElement;\n    const x = (env as MouseEvent).clientX - this.startX;\n    const y = (env as MouseEvent).clientY - this.startY;\n    this.preSize = 0;\n    this.nextSize = 0;\n    if (mode === 'horizontal') {\n      this.preSize = this.preWidth + x > -1 ? this.preWidth + x : 0;\n      this.nextSize = this.nextWidth - x > -1 ? this.nextWidth - x : 0;\n      if (this.preSize === 0 || this.nextSize === 0) {\n        return;\n      }\n      this.preSize = (this.preSize / this.boxWidth >= 1 ? 1 : this.preSize / this.boxWidth) * 100;\n      this.nextSize = (this.nextSize / this.boxWidth >= 1 ? 1 : this.nextSize / this.boxWidth) * 100;\n      if (prevTarget && nextTarget) {\n        prevTarget.style.width = `${this.preSize}%`;\n        nextTarget.style.width = `${this.nextSize}%`;\n      }\n    }\n    if (mode === 'vertical' && this.preHeight + y > -1 && this.nextHeight - y > -1) {\n      this.preSize = this.preHeight + y > -1 ? this.preHeight + y : 0;\n      this.nextSize = this.nextHeight - y > -1 ? this.nextHeight - y : 0;\n      this.preSize = (this.preSize / this.boxHeight >= 1 ? 1 : this.preSize / this.boxHeight) * 100;\n      this.nextSize = (this.nextSize / this.boxHeight >= 1 ? 1 : this.nextSize / this.boxHeight) * 100;\n      if (this.preSize === 0 || this.nextSize === 0) {\n        return;\n      }\n      if (prevTarget && nextTarget) {\n        prevTarget.style.height = `${this.preSize}%`;\n        nextTarget.style.height = `${this.nextSize}%`;\n      }\n    }\n    onDragging && onDragging(this.preSize, this.nextSize, this.paneNumber);\n  }\n  onDragEnd() {\n    const { onDragEnd } = this.props;\n    this.move = false;\n    onDragEnd && onDragEnd(this.preSize, this.nextSize, this.paneNumber);\n    this.removeEvent();\n    this.setState({ dragging: false });\n  }\n  render() {\n    const { prefixCls, className, children, mode, visiable, lineBar, disable, onDragEnd, onDragging, ...other } = this.props;\n    const { dragging } = this.state;\n    const cls = [prefixCls, className, `${prefixCls}-${mode}`, dragging ? 'dragging' : null].filter(Boolean)\n    .join(' ')\n    .trim();\n    const child = React.Children.toArray(children);\n    return (\n      <div className={cls} {...other} ref={node => this.warpper = node}>\n        {React.Children.map(child, (element: any, idx: number) => {\n          const props = Object.assign({}, element.props, {\n            className: [`${prefixCls}-pane`, element.props.className].filter(Boolean)\n            .join(' ')\n            .trim(),\n            style: { ...element.props.style },\n          });\n          const visiableBar = (visiable === true || (visiable && visiable.includes((idx + 1) as never))) || false;\n          const barProps = {\n            className: [`${prefixCls}-bar`, \n            lineBar ? `${prefixCls}-line-bar` : null,\n            !lineBar ? `${prefixCls}-large-bar` : null].filter(Boolean)\n            .join(' ')\n            .trim(),\n          };\n          if (disable === true || (disable && disable.includes((idx + 1) as never))) {\n            barProps.className = [barProps.className, disable ? 'disable' : null].filter(Boolean)\n            .join(' ')\n            .trim();\n          }\n          return (\n            <React.Fragment>\n              {idx !== 0 && visiableBar && React.createElement('div', { ...barProps }, <div onMouseDown={this.onMouseDown.bind(this, idx + 1)} />)}\n              {React.cloneElement(element, { ...props })}\n            </React.Fragment>\n          );\n        })}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}