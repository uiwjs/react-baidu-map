{"version":3,"sources":["../node_modules/@babel/traverse/lib/index.js","../node_modules/@babel/traverse/lib/path/index.js","../node_modules/@babel/traverse/lib/cache.js","../node_modules/@babel/traverse/lib/path/lib/virtual-types.js","../node_modules/@babel/traverse/lib/scope/index.js","../node_modules/@babel/traverse/lib/scope/binding.js","../node_modules/@babel/traverse/lib/context.js","../node_modules/@babel/traverse/node_modules/debug/src/browser.js","../node_modules/@babel/traverse/node_modules/debug/src/common.js","../node_modules/@babel/traverse/node_modules/ms/index.js","../node_modules/@babel/traverse/lib/scope/lib/renamer.js","../node_modules/@babel/traverse/lib/path/ancestry.js","../node_modules/@babel/traverse/lib/path/inference/index.js","../node_modules/@babel/traverse/lib/path/inference/inferers.js","../node_modules/@babel/traverse/lib/path/inference/inferer-reference.js","../node_modules/@babel/traverse/lib/path/replacement.js","../node_modules/@babel/traverse/lib/path/evaluation.js","../node_modules/@babel/traverse/lib/path/conversion.js","../node_modules/@babel/traverse/lib/path/introspection.js","../node_modules/@babel/traverse/lib/path/context.js","../node_modules/@babel/traverse/lib/path/removal.js","../node_modules/@babel/traverse/lib/path/lib/removal-hooks.js","../node_modules/@babel/traverse/lib/path/modification.js","../node_modules/@babel/traverse/lib/path/lib/hoister.js","../node_modules/@babel/traverse/lib/path/family.js","../node_modules/@babel/traverse/lib/path/comments.js","../node_modules/@babel/traverse/lib/visitors.js","../node_modules/@babel/traverse/lib/hub.js"],"names":["Object","defineProperty","exports","value","enumerable","get","_path","default","_scope","_hub","visitors","_context","require","_t","cache","VISITOR_KEYS","removeProperties","traverseFast","traverse","parent","opts","scope","state","parentPath","noScope","type","Error","explode","node","_default","hasDenylistedType","path","has","stop","verify","cheap","enter","skipKeys","keys","context","key","visit","clearNode","delete","tree","hasType","denylistTypes","includes","denylist","SHOULD_SKIP","SHOULD_STOP","REMOVED","virtualTypes","_debug","_index","t","_cache","_generator","NodePath_ancestry","NodePath_inference","NodePath_replacement","NodePath_evaluation","NodePath_conversion","NodePath_introspection","NodePath_context","NodePath_removal","NodePath_modification","NodePath_family","NodePath_comments","validate","debug","NodePath","hub","this","contexts","_traverseFlags","container","listKey","data","isScope","val","create","def","undefined","msg","SyntaxError","buildError","visitor","parts","inList","unshift","join","message","enabled","getPathLocation","code","v","targetNode","paths","Map","set","setup","assign","prototype","TYPES","typeKey","fn","TypeError","indexOf","push","virtualType","checkPath","clear","clearPath","clearScope","WeakMap","ForAwaitStatement","NumericLiteralTypeAnnotation","ExistentialTypeParam","SpreadProperty","RestProperty","Flow","Pure","Generated","User","Var","BlockScoped","Referenced","Scope","Expression","Statement","BindingIdentifier","ReferencedMemberExpression","ReferencedIdentifier","isBinding","isBlockScoped","isExportDeclaration","isExpression","isFlow","isForStatement","isForXStatement","isIdentifier","isImportDeclaration","isImportSpecifier","isJSXIdentifier","isJSXMemberExpression","isMemberExpression","isReferenced","isStatement","isVar","isVariableDeclaration","isCompatTag","react","types","name","grandparent","left","init","isReferencedIdentifier","loc","isUser","isPure","importKind","exportKind","isObjectPattern","isObjectExpression","await","_renamer","_binding","_globals","NOT_LOCAL_BINDING","callExpression","cloneNode","getBindingIdentifiers","identifier","isArrayExpression","isBinary","isClass","isClassBody","isClassDeclaration","isExportAllDeclaration","isExportDefaultDeclaration","isExportNamedDeclaration","isFunctionDeclaration","isLiteral","isMethod","isModuleDeclaration","isModuleSpecifier","isProperty","isPureish","isSuper","isTaggedTemplateExpression","isTemplateLiteral","isThisExpression","isUnaryExpression","matchesPattern","memberExpression","numericLiteral","toIdentifier","unaryExpression","variableDeclaration","variableDeclarator","gatherNodeParts","source","specifiers","length","declaration","local","object","property","callee","properties","argument","id","expression","meta","openingElement","openingFragment","namespace","collectorVisitor","ForStatement","declar","getFunctionParent","getProgramParent","registerBinding","Declaration","registerDeclaration","ImportDeclaration","getBlockParent","references","ForXStatement","isPattern","constantViolations","ExportDeclaration","exit","binding","getBinding","reference","declarations","decl","LabeledStatement","AssignmentExpression","assignments","UpdateExpression","UnaryExpression","operator","bindings","CatchClause","Function","isFunctionExpression","params","param","ClassExpression","uid","block","labels","inited","globals","uids","crawling","cached","_parent","isKey","generateUidIdentifier","generateUid","replace","i","_generateUid","hasLabel","hasBinding","hasGlobal","hasReference","program","defaultName","slice","generateUidBasedOnNode","constant","dontPush","isStatic","generateUidIdentifierBasedOnNode","kind","oldName","newName","rename","map","sep","repeat","console","log","violations","arrayLikeIsIterable","isGenericType","helperName","args","addHelper","getLabel","label","isLabeledStatement","registerLabel","specifier","ids","reassign","bindingPath","ReferenceError","declarators","getOuterBindingIdentifiers","getOwnBinding","checkBlockScopedCollisions","registerConstantViolation","constantsOnly","superClass","body","method","right","elements","elem","prop","computed","tag","quasi","expressions","crawl","programParent","_exploded","typeVisitors","addGlobal","ref","isBlockStatement","isProgram","isSwitchStatement","isLoop","isCatchClause","isFunction","ensureBlock","unique","blockHoist","_blockHoist","dataKey","declarPath","getData","unshiftContainer","setData","declarator","pop","isFunctionParent","isBlockParent","kinds","getBindingIdentifier","previousPath","_previousPath","_this$getBinding","noGlobals","hasOwnBinding","parentHasBinding","hasUid","contextVariables","_this$parent","info","removeOwnBinding","_this$getBinding2","builtin","Binding","referencePaths","referenced","clearValue","hasDeoptedValue","hasValue","TraversalContext","queue","priorityQueue","obj","notPriority","shouldVisit","visitQueue","visited","WeakSet","resync","pushContext","add","popContext","nodes","Array","isArray","visitMultiple","visitSingle","formatArgs","useColors","module","humanize","diff","c","color","splice","index","lastC","match","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","process","DEBUG","window","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","destroy","warned","warn","colors","formatters","j","JSON","stringify","env","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","self","curr","Number","Date","ms","prev","coerce","format","formatter","call","logFn","apply","selectColor","extend","configurable","delimiter","newDebug","toNamespace","regexp","toString","substring","stack","disable","names","skips","enable","split","len","substr","test","forEach","hash","charCodeAt","Math","abs","s","m","h","d","w","y","plural","msAbs","n","isPlural","round","options","str","String","exec","parseFloat","parse","isFinite","long","fmtLong","fmtShort","_helperSplitExportDeclaration","renameVisitor","assignmentExpression","toExpression","bindingIdentifierEquals","skip","skipKey","skipAllButComputedMethodKey","Renamer","parentDeclar","maybeExportDeclar","find","isDeclaration","isClassExpression","maybeConvertFromExportDeclaration","blockToTraverse","cases","maybeConvertFromClassFunctionDeclaration","maybeConvertFromClassFunctionExpression","findParent","callback","p","getStatementParent","isFile","getEarliestCommonAncestorFrom","getDeepestCommonAncestorFrom","deepest","ancestries","earliest","parentKey","filter","lastCommonIndex","lastCommon","minDepth","Infinity","ancestry","first","depthLoop","shouldMatch","getAncestry","isAncestor","maybeDescendant","isDescendant","maybeAncestor","inType","candidateTypes","getTypeAnnotation","typeAnnotation","_getTypeAnnotation","anyTypeAnnotation","isTypeAnnotation","isVariableDeclarator","declarParent","isForInStatement","stringTypeAnnotation","isForOfStatement","voidTypeAnnotation","typeAnnotationInferringNodes","_inferer","inferer","inferers","validParent","isBaseType","baseName","soft","_isBaseType","couldBeBaseType","isAnyTypeAnnotation","isUnionTypeAnnotation","type2","baseTypeStrictlyMatches","rightArg","isFlowBaseAnnotation","genericName","isGenericTypeAnnotation","isBooleanTypeAnnotation","isEmptyTypeAnnotation","isMixedTypeAnnotation","isNumberTypeAnnotation","isStringTypeAnnotation","isVoidTypeAnnotation","VariableDeclarator","_type","isCallExpression","ArrayExpression","TypeCastExpression","NewExpression","genericTypeAnnotation","TemplateLiteral","NUMBER_UNARY_OPERATORS","numberTypeAnnotation","STRING_UNARY_OPERATORS","BOOLEAN_UNARY_OPERATORS","booleanTypeAnnotation","BinaryExpression","NUMBER_BINARY_OPERATORS","BOOLEAN_BINARY_OPERATORS","unionTypeAnnotation","LogicalExpression","argumentTypes","isTSTypeAnnotation","createTSUnionType","createFlowUnionType","createUnionTypeAnnotation","ConditionalExpression","SequenceExpression","ParenthesizedExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral","nullLiteralTypeAnnotation","RegExpLiteral","ObjectExpression","RestElement","ClassDeclaration","FunctionDeclaration","ArrowFunctionExpression","FunctionExpression","CallExpression","isObjectKeys","arrayTypeAnnotation","isArrayFrom","isObjectValues","isObjectEntries","tupleTypeAnnotation","resolveCall","TaggedTemplateExpression","_infererReference","buildMatchMemberExpression","resolve","is","returnType","functionConstantViolations","getConstantViolationsBefore","testType","getConditionalAnnotation","testConstantViolations","ifStatement","violation","getTypeAnnotationBindingConstantViolations","BOOLEAN_NUMBER_BINARY_OPERATORS","createTypeAnnotationBasedOnTypeof","functions","status","_guessExecutionStatusRelativeTo","inferAnnotationFromBinaryExpression","target","typeofPath","typePath","typeValue","isIfStatement","isConditionalExpression","getParentConditionalPath","isLogicalExpression","isBinaryExpression","replaceWithMultiple","_pathCache$get","_verifyNodeList","inheritLeadingComments","inheritTrailingComments","insertAfter","requeue","remove","replaceWithSourceString","replacement","_parser","err","_codeFrame","codeFrameColumns","start","line","column","replaceWith","removed","_index2","nodePath","isNodeType","canHaveVariableDeclarationOrExpression","canSwapBetweenExpressionAndStatement","expressionStatement","replaceExpressionWithStatements","oldNode","inheritsComments","removeComments","_replaceWith","setScope","_pathCache$get2","nodesAsSequenceExpression","toSequenceExpression","functionParent","isParentAsync","isParentGenerator","arrowFunctionExpression","blockStatement","_helperHoistVariables","completionRecords","getCompletionRecords","isExpressionStatement","loop","generateDeclaredUidIdentifier","pushContainer","returnStatement","arrowFunctionToExpression","newCallee","needToAwaitFunction","FUNCTION_TYPES","needToYieldFunction","awaitExpression","yieldExpression","replaceInline","_containerInsertAfter","evaluateTruthy","res","evaluate","confident","deoptPath","seen","evaluateCached","deopt","VALID_CALLEES","INVALID_METHODS","existing","resolved","item","isSequenceExpression","exprs","isStringLiteral","isNumericLiteral","isBooleanLiteral","isNullLiteral","evaluateQuasis","quasis","testResult","isExpressionWrapper","end","NaN","prefix","arg","arr","elems","elemValue","props","isObjectMethod","isSpreadElement","wasConfident","leftConfident","rightConfident","pow","func","global","_evaluate","raw","cooked","expr","toComputedKey","stringLiteral","bodyNode","statements","stringPath","arrowFunctionToShadowed","isArrowFunctionExpression","unwrapFunctionEnvironment","buildCodeFrameError","hoistFunctionEnvironment","allowInsertArrow","specCompliant","noNewArrows","thisBinding","checkBinding","objectExpression","thisExpression","_helperFunctionName","binaryExpression","conditionalExpression","jsxIdentifier","metaProperty","restElement","sequenceExpression","spreadElement","_super","super","fnPath","thisEnvFn","isClassProperty","static","inConstructor","getScopeInformation","thisPaths","argumentsPaths","newTargetPaths","superProps","superCalls","allSuperCalls","child","ClassProperty","superBinding","getSuperBinding","superCall","argumentsBinding","buildUndefinedNode","argumentsChild","argsRef","newTargetBinding","targetChild","targetRef","flatSuperProps","reduce","acc","superProp","concat","standardizeSuperProperty","isAssignment","isAssignmentExpression","isCall","getSuperPropBinding","getThisBinding","hasSuperClass","thisChild","thisRef","isJSX","assignmentPath","op","tmp","isUpdateExpression","updateExpr","computedKey","isClassMethod","supers","argsBinding","propName","fnBody","argsList","valueIdent","cacheKey","ThisExpression","JSXIdentifier","isJSXOpeningElement","MemberExpression","MetaProperty","pattern","allowPartial","_matchesPattern","isnt","equals","isType","isFor","isCompletionRecord","allowInsideFunction","isStatementOrBlock","STATEMENT_OR_BLOCK_KEYS","referencesImport","moduleSource","importName","isOptionalMemberExpression","isImportDefaultSpecifier","isImportNamespaceSpecifier","imported","getSource","getCode","willIMaybeExecuteBefore","funcParent","getOuterFunction","_guessExecutionStatusRelativeToDifferentFunctions","commonPath","commonIndex","isExecutionUncertainInList","divergence","keyPosition","allStatus","executionOrderCheckedNodes","dangerous","_resolve","ret","isTypeCastExpression","targetKey","targetName","isNaN","isConstantExpression","isRegExpLiteral","every","isInStrictMode","sourceType","directives","isExecutionUncertain","maxIndex","_call","fns","then","isBlacklisted","isDenylisted","_this$opts$denylist","blacklist","shouldSkip","shouldStop","getScope","setContext","_resyncParent","_resyncList","_resyncKey","setKey","newContainer","_resyncRemoved","_markRemoved","_this$node","pathToQueue","maybeQueue","_getQueueContexts","_this$opts","_assertUnremoved","_removeFromScope","_callRemovalHooks","shareCommentsWithSiblings","_remove","removeBinding","_removalHooks","hooks","updateSiblingKeys","isWhile","isSwitchCase","insertBefore","nodes_","isJSXElement","_containerInsertBefore","shouldInsertCurrentNode","_containerInsert","from","to","getSibling","assertExpression","temp","fromIndex","incrementBy","verifiedNodes","hoist","hoister","_hoister","run","_t2","jsxExpressionContainer","referenceVisitor","breakOnScopePaths","mutableBinding","PathHoister","scopes","attachAfter","isCompatibleScope","_getAttachmentPath","targetScope","getAttachmentParentForPath","violationPath","hasOwnParamBindings","getNextScopeAttachmentParent","bodies","getCompatibleScopes","attachTo","getAttachmentPath","attached","children","getOpposite","_getCompletionRecords","canHaveBreak","shouldPopulateBreak","inCaseClause","getPrevSibling","getNextSibling","getAllNextSiblings","_key","sibling","siblings","getAllPrevSiblings","_getKey","_getPattern","_","part","duplicates","_getBindingIdentifiers","_getOuterBindingIdentifiers","getBindingIdentifierPaths","outerOnly","search","shift","_ids","getOuterBindingIdentifierPaths","addCompletionRecords","records","normalCompletionToBreak","completions","replaceBreakStatementInBreakCompletion","reachable","isBreakStatement","getStatementListCompletion","lastNormalCompletions","newContext","statementCompletions","some","pathCompletions","isDoExpression","isTryStatement","caseCompletions","normalCompletions","breakCompletions","completionRecordForSwitch","BreakCompletion","NormalCompletion","trailing","trailingComments","leading","leadingComments","next","hasPrev","Boolean","hasNext","addComments","addComment","content","_addComment","comments","_addComments","merge","states","wrapper","rootVisitor","visitorType","wrapWithStateOrWrapper","nodeVisitor","mergePair","DEPRECATED_KEYS","FLIPPED_ALIAS_KEYS","nodeType","shouldIgnoreKey","__esModule","ensureEntranceObjects","ensureCallbackArrays","wrapCheck","aliases","deprecatedKey","trace","alias","_verified","validateVisitorMethods","visitorKey","oldVisitor","newVisitor","newFn","arguments","dest","src","Hub"],"mappings":"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","file":"static/js/vendors-runtime-traverse.751f3c4f.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NodePath\", {\n  enumerable: true,\n  get: function () {\n    return _path.default;\n  }\n});\nObject.defineProperty(exports, \"Scope\", {\n  enumerable: true,\n  get: function () {\n    return _scope.default;\n  }\n});\nObject.defineProperty(exports, \"Hub\", {\n  enumerable: true,\n  get: function () {\n    return _hub.default;\n  }\n});\nexports.visitors = exports.default = void 0;\n\nvar _context = require(\"./context\");\n\nvar visitors = require(\"./visitors\");\n\nexports.visitors = visitors;\n\nvar _t = require(\"@babel/types\");\n\nvar cache = require(\"./cache\");\n\nvar _path = require(\"./path\");\n\nvar _scope = require(\"./scope\");\n\nvar _hub = require(\"./hub\");\n\nconst {\n  VISITOR_KEYS,\n  removeProperties,\n  traverseFast\n} = _t;\n\nfunction traverse(parent, opts = {}, scope, state, parentPath) {\n  if (!parent) return;\n\n  if (!opts.noScope && !scope) {\n    if (parent.type !== \"Program\" && parent.type !== \"File\") {\n      throw new Error(\"You must pass a scope and parentPath unless traversing a Program/File. \" + `Instead of that you tried to traverse a ${parent.type} node without ` + \"passing scope and parentPath.\");\n    }\n  }\n\n  if (!VISITOR_KEYS[parent.type]) {\n    return;\n  }\n\n  visitors.explode(opts);\n  traverse.node(parent, opts, scope, state, parentPath);\n}\n\nvar _default = traverse;\nexports.default = _default;\ntraverse.visitors = visitors;\ntraverse.verify = visitors.verify;\ntraverse.explode = visitors.explode;\n\ntraverse.cheap = function (node, enter) {\n  return traverseFast(node, enter);\n};\n\ntraverse.node = function (node, opts, scope, state, parentPath, skipKeys) {\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return;\n  const context = new _context.default(scope, opts, state, parentPath);\n\n  for (const key of keys) {\n    if (skipKeys && skipKeys[key]) continue;\n    if (context.visit(node, key)) return;\n  }\n};\n\ntraverse.clearNode = function (node, opts) {\n  removeProperties(node, opts);\n  cache.path.delete(node);\n};\n\ntraverse.removeProperties = function (tree, opts) {\n  traverseFast(tree, traverse.clearNode, opts);\n  return tree;\n};\n\nfunction hasDenylistedType(path, state) {\n  if (path.node.type === state.type) {\n    state.has = true;\n    path.stop();\n  }\n}\n\ntraverse.hasType = function (tree, type, denylistTypes) {\n  if (denylistTypes != null && denylistTypes.includes(tree.type)) return false;\n  if (tree.type === type) return true;\n  const state = {\n    has: false,\n    type: type\n  };\n  traverse(tree, {\n    noScope: true,\n    denylist: denylistTypes,\n    enter: hasDenylistedType\n  }, null, state);\n  return state.has;\n};\n\ntraverse.cache = cache;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_SKIP = exports.SHOULD_STOP = exports.REMOVED = void 0;\n\nvar virtualTypes = require(\"./lib/virtual-types\");\n\nvar _debug = require(\"debug\");\n\nvar _index = require(\"../index\");\n\nvar _scope = require(\"../scope\");\n\nvar _t = require(\"@babel/types\");\n\nvar t = _t;\n\nvar _cache = require(\"../cache\");\n\nvar _generator = require(\"@babel/generator\");\n\nvar NodePath_ancestry = require(\"./ancestry\");\n\nvar NodePath_inference = require(\"./inference\");\n\nvar NodePath_replacement = require(\"./replacement\");\n\nvar NodePath_evaluation = require(\"./evaluation\");\n\nvar NodePath_conversion = require(\"./conversion\");\n\nvar NodePath_introspection = require(\"./introspection\");\n\nvar NodePath_context = require(\"./context\");\n\nvar NodePath_removal = require(\"./removal\");\n\nvar NodePath_modification = require(\"./modification\");\n\nvar NodePath_family = require(\"./family\");\n\nvar NodePath_comments = require(\"./comments\");\n\nconst {\n  validate\n} = _t;\n\nconst debug = _debug(\"babel\");\n\nconst REMOVED = 1 << 0;\nexports.REMOVED = REMOVED;\nconst SHOULD_STOP = 1 << 1;\nexports.SHOULD_STOP = SHOULD_STOP;\nconst SHOULD_SKIP = 1 << 2;\nexports.SHOULD_SKIP = SHOULD_SKIP;\n\nclass NodePath {\n  constructor(hub, parent) {\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key\n  }) {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n\n    const targetNode = container[key];\n\n    let paths = _cache.path.get(parent);\n\n    if (!paths) {\n      paths = new Map();\n\n      _cache.path.set(parent, paths);\n    }\n\n    let path = paths.get(targetNode);\n\n    if (!path) {\n      path = new NodePath(hub, parent);\n      if (targetNode) paths.set(targetNode, path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n    return path;\n  }\n\n  getScope(scope) {\n    return this.isScope() ? new _scope.default(this) : scope;\n  }\n\n  setData(key, val) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    return this.data[key] = val;\n  }\n\n  getData(key, def) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n\n  buildCodeFrameError(msg, Error = SyntaxError) {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n\n  traverse(visitor, state) {\n    (0, _index.default)(this.node, visitor, this.scope, state, this);\n  }\n\n  set(key, node) {\n    validate(this.node, key, node);\n    this.node[key] = node;\n  }\n\n  getPathLocation() {\n    const parts = [];\n    let path = this;\n\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while (path = path.parentPath);\n\n    return parts.join(\".\");\n  }\n\n  debug(message) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n\n  toString() {\n    return (0, _generator.default)(this.node).code;\n  }\n\n  get inList() {\n    return !!this.listKey;\n  }\n\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n  }\n\n  get parentKey() {\n    return this.listKey || this.key;\n  }\n\n  get shouldSkip() {\n    return !!(this._traverseFlags & SHOULD_SKIP);\n  }\n\n  set shouldSkip(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_SKIP;\n    } else {\n      this._traverseFlags &= ~SHOULD_SKIP;\n    }\n  }\n\n  get shouldStop() {\n    return !!(this._traverseFlags & SHOULD_STOP);\n  }\n\n  set shouldStop(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_STOP;\n    } else {\n      this._traverseFlags &= ~SHOULD_STOP;\n    }\n  }\n\n  get removed() {\n    return !!(this._traverseFlags & REMOVED);\n  }\n\n  set removed(v) {\n    if (v) {\n      this._traverseFlags |= REMOVED;\n    } else {\n      this._traverseFlags &= ~REMOVED;\n    }\n  }\n\n}\n\nObject.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);\n\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  const fn = t[typeKey];\n\n  NodePath.prototype[typeKey] = function (opts) {\n    return fn(this.node, opts);\n  };\n\n  NodePath.prototype[`assert${type}`] = function (opts) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\n\nfor (const type of Object.keys(virtualTypes)) {\n  if (type[0] === \"_\") continue;\n  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);\n  const virtualType = virtualTypes[type];\n\n  NodePath.prototype[`is${type}`] = function (opts) {\n    return virtualType.checkPath(this, opts);\n  };\n}\n\nvar _default = NodePath;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nexports.clearPath = clearPath;\nexports.clearScope = clearScope;\nexports.scope = exports.path = void 0;\nlet path = new WeakMap();\nexports.path = path;\nlet scope = new WeakMap();\nexports.scope = scope;\n\nfunction clear() {\n  clearPath();\n  clearScope();\n}\n\nfunction clearPath() {\n  exports.path = path = new WeakMap();\n}\n\nfunction clearScope() {\n  exports.scope = scope = new WeakMap();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ForAwaitStatement = exports.NumericLiteralTypeAnnotation = exports.ExistentialTypeParam = exports.SpreadProperty = exports.RestProperty = exports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isBinding,\n  isBlockScoped,\n  isExportDeclaration,\n  isExpression,\n  isFlow,\n  isForStatement,\n  isForXStatement,\n  isIdentifier,\n  isImportDeclaration,\n  isImportSpecifier,\n  isJSXIdentifier,\n  isJSXMemberExpression,\n  isMemberExpression,\n  isReferenced,\n  isScope,\n  isStatement,\n  isVar,\n  isVariableDeclaration,\n  react\n} = _t;\nconst {\n  isCompatTag\n} = react;\nconst ReferencedIdentifier = {\n  types: [\"Identifier\", \"JSXIdentifier\"],\n\n  checkPath(path, opts) {\n    const {\n      node,\n      parent\n    } = path;\n\n    if (!isIdentifier(node, opts) && !isJSXMemberExpression(parent, opts)) {\n      if (isJSXIdentifier(node, opts)) {\n        if (isCompatTag(node.name)) return false;\n      } else {\n        return false;\n      }\n    }\n\n    return isReferenced(node, parent, path.parentPath.parent);\n  }\n\n};\nexports.ReferencedIdentifier = ReferencedIdentifier;\nconst ReferencedMemberExpression = {\n  types: [\"MemberExpression\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    return isMemberExpression(node) && isReferenced(node, parent);\n  }\n\n};\nexports.ReferencedMemberExpression = ReferencedMemberExpression;\nconst BindingIdentifier = {\n  types: [\"Identifier\"],\n\n  checkPath(path) {\n    const {\n      node,\n      parent\n    } = path;\n    const grandparent = path.parentPath.parent;\n    return isIdentifier(node) && isBinding(node, parent, grandparent);\n  }\n\n};\nexports.BindingIdentifier = BindingIdentifier;\nconst Statement = {\n  types: [\"Statement\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    if (isStatement(node)) {\n      if (isVariableDeclaration(node)) {\n        if (isForXStatement(parent, {\n          left: node\n        })) return false;\n        if (isForStatement(parent, {\n          init: node\n        })) return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Statement = Statement;\nconst Expression = {\n  types: [\"Expression\"],\n\n  checkPath(path) {\n    if (path.isIdentifier()) {\n      return path.isReferencedIdentifier();\n    } else {\n      return isExpression(path.node);\n    }\n  }\n\n};\nexports.Expression = Expression;\nconst Scope = {\n  types: [\"Scopable\", \"Pattern\"],\n\n  checkPath(path) {\n    return isScope(path.node, path.parent);\n  }\n\n};\nexports.Scope = Scope;\nconst Referenced = {\n  checkPath(path) {\n    return isReferenced(path.node, path.parent);\n  }\n\n};\nexports.Referenced = Referenced;\nconst BlockScoped = {\n  checkPath(path) {\n    return isBlockScoped(path.node);\n  }\n\n};\nexports.BlockScoped = BlockScoped;\nconst Var = {\n  types: [\"VariableDeclaration\"],\n\n  checkPath(path) {\n    return isVar(path.node);\n  }\n\n};\nexports.Var = Var;\nconst User = {\n  checkPath(path) {\n    return path.node && !!path.node.loc;\n  }\n\n};\nexports.User = User;\nconst Generated = {\n  checkPath(path) {\n    return !path.isUser();\n  }\n\n};\nexports.Generated = Generated;\nconst Pure = {\n  checkPath(path, opts) {\n    return path.scope.isPure(path.node, opts);\n  }\n\n};\nexports.Pure = Pure;\nconst Flow = {\n  types: [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"],\n\n  checkPath({\n    node\n  }) {\n    if (isFlow(node)) {\n      return true;\n    } else if (isImportDeclaration(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else if (isExportDeclaration(node)) {\n      return node.exportKind === \"type\";\n    } else if (isImportSpecifier(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Flow = Flow;\nconst RestProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectPattern();\n  }\n\n};\nexports.RestProperty = RestProperty;\nconst SpreadProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectExpression();\n  }\n\n};\nexports.SpreadProperty = SpreadProperty;\nconst ExistentialTypeParam = {\n  types: [\"ExistsTypeAnnotation\"]\n};\nexports.ExistentialTypeParam = ExistentialTypeParam;\nconst NumericLiteralTypeAnnotation = {\n  types: [\"NumberLiteralTypeAnnotation\"]\n};\nexports.NumericLiteralTypeAnnotation = NumericLiteralTypeAnnotation;\nconst ForAwaitStatement = {\n  types: [\"ForOfStatement\"],\n\n  checkPath({\n    node\n  }) {\n    return node.await === true;\n  }\n\n};\nexports.ForAwaitStatement = ForAwaitStatement;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renamer = require(\"./lib/renamer\");\n\nvar _index = require(\"../index\");\n\nvar _binding = require(\"./binding\");\n\nvar _globals = require(\"globals\");\n\nvar _t = require(\"@babel/types\");\n\nvar _cache = require(\"../cache\");\n\nconst {\n  NOT_LOCAL_BINDING,\n  callExpression,\n  cloneNode,\n  getBindingIdentifiers,\n  identifier,\n  isArrayExpression,\n  isBinary,\n  isClass,\n  isClassBody,\n  isClassDeclaration,\n  isExportAllDeclaration,\n  isExportDefaultDeclaration,\n  isExportNamedDeclaration,\n  isFunctionDeclaration,\n  isIdentifier,\n  isImportDeclaration,\n  isLiteral,\n  isMethod,\n  isModuleDeclaration,\n  isModuleSpecifier,\n  isObjectExpression,\n  isProperty,\n  isPureish,\n  isSuper,\n  isTaggedTemplateExpression,\n  isTemplateLiteral,\n  isThisExpression,\n  isUnaryExpression,\n  isVariableDeclaration,\n  matchesPattern,\n  memberExpression,\n  numericLiteral,\n  toIdentifier,\n  unaryExpression,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nfunction gatherNodeParts(node, parts) {\n  switch (node == null ? void 0 : node.type) {\n    default:\n      if (isModuleDeclaration(node)) {\n        if ((isExportAllDeclaration(node) || isExportNamedDeclaration(node) || isImportDeclaration(node)) && node.source) {\n          gatherNodeParts(node.source, parts);\n        } else if ((isExportNamedDeclaration(node) || isImportDeclaration(node)) && node.specifiers && node.specifiers.length) {\n          for (const e of node.specifiers) gatherNodeParts(e, parts);\n        } else if ((isExportDefaultDeclaration(node) || isExportNamedDeclaration(node)) && node.declaration) {\n          gatherNodeParts(node.declaration, parts);\n        }\n      } else if (isModuleSpecifier(node)) {\n        gatherNodeParts(node.local, parts);\n      } else if (isLiteral(node)) {\n        parts.push(node.value);\n      }\n\n      break;\n\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n    case \"JSXMemberExpression\":\n      gatherNodeParts(node.object, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"Identifier\":\n    case \"JSXIdentifier\":\n      parts.push(node.name);\n      break;\n\n    case \"CallExpression\":\n    case \"OptionalCallExpression\":\n    case \"NewExpression\":\n      gatherNodeParts(node.callee, parts);\n      break;\n\n    case \"ObjectExpression\":\n    case \"ObjectPattern\":\n      for (const e of node.properties) {\n        gatherNodeParts(e, parts);\n      }\n\n      break;\n\n    case \"SpreadElement\":\n    case \"RestElement\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"ObjectProperty\":\n    case \"ObjectMethod\":\n    case \"ClassProperty\":\n    case \"ClassMethod\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n      gatherNodeParts(node.key, parts);\n      break;\n\n    case \"ThisExpression\":\n      parts.push(\"this\");\n      break;\n\n    case \"Super\":\n      parts.push(\"super\");\n      break;\n\n    case \"Import\":\n      parts.push(\"import\");\n      break;\n\n    case \"DoExpression\":\n      parts.push(\"do\");\n      break;\n\n    case \"YieldExpression\":\n      parts.push(\"yield\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AwaitExpression\":\n      parts.push(\"await\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AssignmentExpression\":\n      gatherNodeParts(node.left, parts);\n      break;\n\n    case \"VariableDeclarator\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"FunctionExpression\":\n    case \"FunctionDeclaration\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"PrivateName\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"ParenthesizedExpression\":\n      gatherNodeParts(node.expression, parts);\n      break;\n\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"MetaProperty\":\n      gatherNodeParts(node.meta, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"JSXElement\":\n      gatherNodeParts(node.openingElement, parts);\n      break;\n\n    case \"JSXOpeningElement\":\n      parts.push(node.name);\n      break;\n\n    case \"JSXFragment\":\n      gatherNodeParts(node.openingFragment, parts);\n      break;\n\n    case \"JSXOpeningFragment\":\n      parts.push(\"Fragment\");\n      break;\n\n    case \"JSXNamespacedName\":\n      gatherNodeParts(node.namespace, parts);\n      gatherNodeParts(node.name, parts);\n      break;\n  }\n}\n\nconst collectorVisitor = {\n  ForStatement(path) {\n    const declar = path.get(\"init\");\n\n    if (declar.isVar()) {\n      const {\n        scope\n      } = path;\n      const parentScope = scope.getFunctionParent() || scope.getProgramParent();\n      parentScope.registerBinding(\"var\", declar);\n    }\n  },\n\n  Declaration(path) {\n    if (path.isBlockScoped()) return;\n    if (path.isImportDeclaration()) return;\n    if (path.isExportDeclaration()) return;\n    const parent = path.scope.getFunctionParent() || path.scope.getProgramParent();\n    parent.registerDeclaration(path);\n  },\n\n  ImportDeclaration(path) {\n    const parent = path.scope.getBlockParent();\n    parent.registerDeclaration(path);\n  },\n\n  ReferencedIdentifier(path, state) {\n    state.references.push(path);\n  },\n\n  ForXStatement(path, state) {\n    const left = path.get(\"left\");\n\n    if (left.isPattern() || left.isIdentifier()) {\n      state.constantViolations.push(path);\n    } else if (left.isVar()) {\n      const {\n        scope\n      } = path;\n      const parentScope = scope.getFunctionParent() || scope.getProgramParent();\n      parentScope.registerBinding(\"var\", left);\n    }\n  },\n\n  ExportDeclaration: {\n    exit(path) {\n      const {\n        node,\n        scope\n      } = path;\n      if (isExportAllDeclaration(node)) return;\n      const declar = node.declaration;\n\n      if (isClassDeclaration(declar) || isFunctionDeclaration(declar)) {\n        const id = declar.id;\n        if (!id) return;\n        const binding = scope.getBinding(id.name);\n        binding == null ? void 0 : binding.reference(path);\n      } else if (isVariableDeclaration(declar)) {\n        for (const decl of declar.declarations) {\n          for (const name of Object.keys(getBindingIdentifiers(decl))) {\n            const binding = scope.getBinding(name);\n            binding == null ? void 0 : binding.reference(path);\n          }\n        }\n      }\n    }\n\n  },\n\n  LabeledStatement(path) {\n    path.scope.getBlockParent().registerDeclaration(path);\n  },\n\n  AssignmentExpression(path, state) {\n    state.assignments.push(path);\n  },\n\n  UpdateExpression(path, state) {\n    state.constantViolations.push(path);\n  },\n\n  UnaryExpression(path, state) {\n    if (path.node.operator === \"delete\") {\n      state.constantViolations.push(path);\n    }\n  },\n\n  BlockScoped(path) {\n    let scope = path.scope;\n    if (scope.path === path) scope = scope.parent;\n    const parent = scope.getBlockParent();\n    parent.registerDeclaration(path);\n\n    if (path.isClassDeclaration() && path.node.id) {\n      const id = path.node.id;\n      const name = id.name;\n      path.scope.bindings[name] = path.scope.parent.getBinding(name);\n    }\n  },\n\n  CatchClause(path) {\n    path.scope.registerBinding(\"let\", path);\n  },\n\n  Function(path) {\n    if (path.isFunctionExpression() && path.has(\"id\") && !path.get(\"id\").node[NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path.get(\"id\"), path);\n    }\n\n    const params = path.get(\"params\");\n\n    for (const param of params) {\n      path.scope.registerBinding(\"param\", param);\n    }\n  },\n\n  ClassExpression(path) {\n    if (path.has(\"id\") && !path.get(\"id\").node[NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path);\n    }\n  }\n\n};\nlet uid = 0;\n\nclass Scope {\n  constructor(path) {\n    this.uid = void 0;\n    this.path = void 0;\n    this.block = void 0;\n    this.labels = void 0;\n    this.inited = void 0;\n    this.bindings = void 0;\n    this.references = void 0;\n    this.globals = void 0;\n    this.uids = void 0;\n    this.data = void 0;\n    this.crawling = void 0;\n    const {\n      node\n    } = path;\n\n    const cached = _cache.scope.get(node);\n\n    if ((cached == null ? void 0 : cached.path) === path) {\n      return cached;\n    }\n\n    _cache.scope.set(node, this);\n\n    this.uid = uid++;\n    this.block = node;\n    this.path = path;\n    this.labels = new Map();\n    this.inited = false;\n  }\n\n  get parent() {\n    var _parent;\n\n    let parent,\n        path = this.path;\n\n    do {\n      const isKey = path.key === \"key\";\n      path = path.parentPath;\n      if (isKey && path.isMethod()) path = path.parentPath;\n      if (path && path.isScope()) parent = path;\n    } while (path && !parent);\n\n    return (_parent = parent) == null ? void 0 : _parent.scope;\n  }\n\n  get parentBlock() {\n    return this.path.parent;\n  }\n\n  get hub() {\n    return this.path.hub;\n  }\n\n  traverse(node, opts, state) {\n    (0, _index.default)(node, opts, this, state, this.path);\n  }\n\n  generateDeclaredUidIdentifier(name) {\n    const id = this.generateUidIdentifier(name);\n    this.push({\n      id\n    });\n    return cloneNode(id);\n  }\n\n  generateUidIdentifier(name) {\n    return identifier(this.generateUid(name));\n  }\n\n  generateUid(name = \"temp\") {\n    name = toIdentifier(name).replace(/^_+/, \"\").replace(/[0-9]+$/g, \"\");\n    let uid;\n    let i = 1;\n\n    do {\n      uid = this._generateUid(name, i);\n      i++;\n    } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));\n\n    const program = this.getProgramParent();\n    program.references[uid] = true;\n    program.uids[uid] = true;\n    return uid;\n  }\n\n  _generateUid(name, i) {\n    let id = name;\n    if (i > 1) id += i;\n    return `_${id}`;\n  }\n\n  generateUidBasedOnNode(node, defaultName) {\n    const parts = [];\n    gatherNodeParts(node, parts);\n    let id = parts.join(\"$\");\n    id = id.replace(/^_/, \"\") || defaultName || \"ref\";\n    return this.generateUid(id.slice(0, 20));\n  }\n\n  generateUidIdentifierBasedOnNode(node, defaultName) {\n    return identifier(this.generateUidBasedOnNode(node, defaultName));\n  }\n\n  isStatic(node) {\n    if (isThisExpression(node) || isSuper(node)) {\n      return true;\n    }\n\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding) {\n        return binding.constant;\n      } else {\n        return this.hasBinding(node.name);\n      }\n    }\n\n    return false;\n  }\n\n  maybeGenerateMemoised(node, dontPush) {\n    if (this.isStatic(node)) {\n      return null;\n    } else {\n      const id = this.generateUidIdentifierBasedOnNode(node);\n\n      if (!dontPush) {\n        this.push({\n          id\n        });\n        return cloneNode(id);\n      }\n\n      return id;\n    }\n  }\n\n  checkBlockScopedCollisions(local, kind, name, id) {\n    if (kind === \"param\") return;\n    if (local.kind === \"local\") return;\n    const duplicate = kind === \"let\" || local.kind === \"let\" || local.kind === \"const\" || local.kind === \"module\" || local.kind === \"param\" && (kind === \"let\" || kind === \"const\");\n\n    if (duplicate) {\n      throw this.hub.buildError(id, `Duplicate declaration \"${name}\"`, TypeError);\n    }\n  }\n\n  rename(oldName, newName, block) {\n    const binding = this.getBinding(oldName);\n\n    if (binding) {\n      newName = newName || this.generateUidIdentifier(oldName).name;\n      return new _renamer.default(binding, oldName, newName).rename(block);\n    }\n  }\n\n  _renameFromMap(map, oldName, newName, value) {\n    if (map[oldName]) {\n      map[newName] = value;\n      map[oldName] = null;\n    }\n  }\n\n  dump() {\n    const sep = \"-\".repeat(60);\n    console.log(sep);\n    let scope = this;\n\n    do {\n      console.log(\"#\", scope.block.type);\n\n      for (const name of Object.keys(scope.bindings)) {\n        const binding = scope.bindings[name];\n        console.log(\" -\", name, {\n          constant: binding.constant,\n          references: binding.references,\n          violations: binding.constantViolations.length,\n          kind: binding.kind\n        });\n      }\n    } while (scope = scope.parent);\n\n    console.log(sep);\n  }\n\n  toArray(node, i, arrayLikeIsIterable) {\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding != null && binding.constant && binding.path.isGenericType(\"Array\")) {\n        return node;\n      }\n    }\n\n    if (isArrayExpression(node)) {\n      return node;\n    }\n\n    if (isIdentifier(node, {\n      name: \"arguments\"\n    })) {\n      return callExpression(memberExpression(memberExpression(memberExpression(identifier(\"Array\"), identifier(\"prototype\")), identifier(\"slice\")), identifier(\"call\")), [node]);\n    }\n\n    let helperName;\n    const args = [node];\n\n    if (i === true) {\n      helperName = \"toConsumableArray\";\n    } else if (i) {\n      args.push(numericLiteral(i));\n      helperName = \"slicedToArray\";\n    } else {\n      helperName = \"toArray\";\n    }\n\n    if (arrayLikeIsIterable) {\n      args.unshift(this.hub.addHelper(helperName));\n      helperName = \"maybeArrayLike\";\n    }\n\n    return callExpression(this.hub.addHelper(helperName), args);\n  }\n\n  hasLabel(name) {\n    return !!this.getLabel(name);\n  }\n\n  getLabel(name) {\n    return this.labels.get(name);\n  }\n\n  registerLabel(path) {\n    this.labels.set(path.node.label.name, path);\n  }\n\n  registerDeclaration(path) {\n    if (path.isLabeledStatement()) {\n      this.registerLabel(path);\n    } else if (path.isFunctionDeclaration()) {\n      this.registerBinding(\"hoisted\", path.get(\"id\"), path);\n    } else if (path.isVariableDeclaration()) {\n      const declarations = path.get(\"declarations\");\n\n      for (const declar of declarations) {\n        this.registerBinding(path.node.kind, declar);\n      }\n    } else if (path.isClassDeclaration()) {\n      this.registerBinding(\"let\", path);\n    } else if (path.isImportDeclaration()) {\n      const specifiers = path.get(\"specifiers\");\n\n      for (const specifier of specifiers) {\n        this.registerBinding(\"module\", specifier);\n      }\n    } else if (path.isExportDeclaration()) {\n      const declar = path.get(\"declaration\");\n\n      if (declar.isClassDeclaration() || declar.isFunctionDeclaration() || declar.isVariableDeclaration()) {\n        this.registerDeclaration(declar);\n      }\n    } else {\n      this.registerBinding(\"unknown\", path);\n    }\n  }\n\n  buildUndefinedNode() {\n    return unaryExpression(\"void\", numericLiteral(0), true);\n  }\n\n  registerConstantViolation(path) {\n    const ids = path.getBindingIdentifiers();\n\n    for (const name of Object.keys(ids)) {\n      const binding = this.getBinding(name);\n      if (binding) binding.reassign(path);\n    }\n  }\n\n  registerBinding(kind, path, bindingPath = path) {\n    if (!kind) throw new ReferenceError(\"no `kind`\");\n\n    if (path.isVariableDeclaration()) {\n      const declarators = path.get(\"declarations\");\n\n      for (const declar of declarators) {\n        this.registerBinding(kind, declar);\n      }\n\n      return;\n    }\n\n    const parent = this.getProgramParent();\n    const ids = path.getOuterBindingIdentifiers(true);\n\n    for (const name of Object.keys(ids)) {\n      parent.references[name] = true;\n\n      for (const id of ids[name]) {\n        const local = this.getOwnBinding(name);\n\n        if (local) {\n          if (local.identifier === id) continue;\n          this.checkBlockScopedCollisions(local, kind, name, id);\n        }\n\n        if (local) {\n          this.registerConstantViolation(bindingPath);\n        } else {\n          this.bindings[name] = new _binding.default({\n            identifier: id,\n            scope: this,\n            path: bindingPath,\n            kind: kind\n          });\n        }\n      }\n    }\n  }\n\n  addGlobal(node) {\n    this.globals[node.name] = node;\n  }\n\n  hasUid(name) {\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasGlobal(name) {\n    let scope = this;\n\n    do {\n      if (scope.globals[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasReference(name) {\n    return !!this.getProgramParent().references[name];\n  }\n\n  isPure(node, constantsOnly) {\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n      if (!binding) return false;\n      if (constantsOnly) return binding.constant;\n      return true;\n    } else if (isClass(node)) {\n      if (node.superClass && !this.isPure(node.superClass, constantsOnly)) {\n        return false;\n      }\n\n      return this.isPure(node.body, constantsOnly);\n    } else if (isClassBody(node)) {\n      for (const method of node.body) {\n        if (!this.isPure(method, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isBinary(node)) {\n      return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);\n    } else if (isArrayExpression(node)) {\n      for (const elem of node.elements) {\n        if (!this.isPure(elem, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isObjectExpression(node)) {\n      for (const prop of node.properties) {\n        if (!this.isPure(prop, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isMethod(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      if (node.kind === \"get\" || node.kind === \"set\") return false;\n      return true;\n    } else if (isProperty(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      return this.isPure(node.value, constantsOnly);\n    } else if (isUnaryExpression(node)) {\n      return this.isPure(node.argument, constantsOnly);\n    } else if (isTaggedTemplateExpression(node)) {\n      return matchesPattern(node.tag, \"String.raw\") && !this.hasBinding(\"String\", true) && this.isPure(node.quasi, constantsOnly);\n    } else if (isTemplateLiteral(node)) {\n      for (const expression of node.expressions) {\n        if (!this.isPure(expression, constantsOnly)) return false;\n      }\n\n      return true;\n    } else {\n      return isPureish(node);\n    }\n  }\n\n  setData(key, val) {\n    return this.data[key] = val;\n  }\n\n  getData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) return data;\n    } while (scope = scope.parent);\n  }\n\n  removeData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) scope.data[key] = null;\n    } while (scope = scope.parent);\n  }\n\n  init() {\n    if (!this.inited) {\n      this.inited = true;\n      this.crawl();\n    }\n  }\n\n  crawl() {\n    const path = this.path;\n    this.references = Object.create(null);\n    this.bindings = Object.create(null);\n    this.globals = Object.create(null);\n    this.uids = Object.create(null);\n    this.data = Object.create(null);\n    const programParent = this.getProgramParent();\n    if (programParent.crawling) return;\n    const state = {\n      references: [],\n      constantViolations: [],\n      assignments: []\n    };\n    this.crawling = true;\n\n    if (path.type !== \"Program\" && collectorVisitor._exploded) {\n      for (const visit of collectorVisitor.enter) {\n        visit(path, state);\n      }\n\n      const typeVisitors = collectorVisitor[path.type];\n\n      if (typeVisitors) {\n        for (const visit of typeVisitors.enter) {\n          visit(path, state);\n        }\n      }\n    }\n\n    path.traverse(collectorVisitor, state);\n    this.crawling = false;\n\n    for (const path of state.assignments) {\n      const ids = path.getBindingIdentifiers();\n\n      for (const name of Object.keys(ids)) {\n        if (path.scope.getBinding(name)) continue;\n        programParent.addGlobal(ids[name]);\n      }\n\n      path.scope.registerConstantViolation(path);\n    }\n\n    for (const ref of state.references) {\n      const binding = ref.scope.getBinding(ref.node.name);\n\n      if (binding) {\n        binding.reference(ref);\n      } else {\n        programParent.addGlobal(ref.node);\n      }\n    }\n\n    for (const path of state.constantViolations) {\n      path.scope.registerConstantViolation(path);\n    }\n  }\n\n  push(opts) {\n    let path = this.path;\n\n    if (!path.isBlockStatement() && !path.isProgram()) {\n      path = this.getBlockParent().path;\n    }\n\n    if (path.isSwitchStatement()) {\n      path = (this.getFunctionParent() || this.getProgramParent()).path;\n    }\n\n    if (path.isLoop() || path.isCatchClause() || path.isFunction()) {\n      path.ensureBlock();\n      path = path.get(\"body\");\n    }\n\n    const unique = opts.unique;\n    const kind = opts.kind || \"var\";\n    const blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;\n    const dataKey = `declaration:${kind}:${blockHoist}`;\n    let declarPath = !unique && path.getData(dataKey);\n\n    if (!declarPath) {\n      const declar = variableDeclaration(kind, []);\n      declar._blockHoist = blockHoist;\n      [declarPath] = path.unshiftContainer(\"body\", [declar]);\n      if (!unique) path.setData(dataKey, declarPath);\n    }\n\n    const declarator = variableDeclarator(opts.id, opts.init);\n    declarPath.node.declarations.push(declarator);\n    this.registerBinding(kind, declarPath.get(\"declarations\").pop());\n  }\n\n  getProgramParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isProgram()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"Couldn't find a Program\");\n  }\n\n  getFunctionParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isFunctionParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    return null;\n  }\n\n  getBlockParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isBlockParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\");\n  }\n\n  getAllBindings() {\n    const ids = Object.create(null);\n    let scope = this;\n\n    do {\n      for (const key of Object.keys(scope.bindings)) {\n        if (key in ids === false) {\n          ids[key] = scope.bindings[key];\n        }\n      }\n\n      scope = scope.parent;\n    } while (scope);\n\n    return ids;\n  }\n\n  getAllBindingsOfKind(...kinds) {\n    const ids = Object.create(null);\n\n    for (const kind of kinds) {\n      let scope = this;\n\n      do {\n        for (const name of Object.keys(scope.bindings)) {\n          const binding = scope.bindings[name];\n          if (binding.kind === kind) ids[name] = binding;\n        }\n\n        scope = scope.parent;\n      } while (scope);\n    }\n\n    return ids;\n  }\n\n  bindingIdentifierEquals(name, node) {\n    return this.getBindingIdentifier(name) === node;\n  }\n\n  getBinding(name) {\n    let scope = this;\n    let previousPath;\n\n    do {\n      const binding = scope.getOwnBinding(name);\n\n      if (binding) {\n        var _previousPath;\n\n        if ((_previousPath = previousPath) != null && _previousPath.isPattern() && binding.kind !== \"param\") {} else {\n          return binding;\n        }\n      }\n\n      previousPath = scope.path;\n    } while (scope = scope.parent);\n  }\n\n  getOwnBinding(name) {\n    return this.bindings[name];\n  }\n\n  getBindingIdentifier(name) {\n    var _this$getBinding;\n\n    return (_this$getBinding = this.getBinding(name)) == null ? void 0 : _this$getBinding.identifier;\n  }\n\n  getOwnBindingIdentifier(name) {\n    const binding = this.bindings[name];\n    return binding == null ? void 0 : binding.identifier;\n  }\n\n  hasOwnBinding(name) {\n    return !!this.getOwnBinding(name);\n  }\n\n  hasBinding(name, noGlobals) {\n    if (!name) return false;\n    if (this.hasOwnBinding(name)) return true;\n    if (this.parentHasBinding(name, noGlobals)) return true;\n    if (this.hasUid(name)) return true;\n    if (!noGlobals && Scope.globals.includes(name)) return true;\n    if (!noGlobals && Scope.contextVariables.includes(name)) return true;\n    return false;\n  }\n\n  parentHasBinding(name, noGlobals) {\n    var _this$parent;\n\n    return (_this$parent = this.parent) == null ? void 0 : _this$parent.hasBinding(name, noGlobals);\n  }\n\n  moveBindingTo(name, scope) {\n    const info = this.getBinding(name);\n\n    if (info) {\n      info.scope.removeOwnBinding(name);\n      info.scope = scope;\n      scope.bindings[name] = info;\n    }\n  }\n\n  removeOwnBinding(name) {\n    delete this.bindings[name];\n  }\n\n  removeBinding(name) {\n    var _this$getBinding2;\n\n    (_this$getBinding2 = this.getBinding(name)) == null ? void 0 : _this$getBinding2.scope.removeOwnBinding(name);\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) {\n        scope.uids[name] = false;\n      }\n    } while (scope = scope.parent);\n  }\n\n}\n\nexports.default = Scope;\nScope.globals = Object.keys(_globals.builtin);\nScope.contextVariables = [\"arguments\", \"undefined\", \"Infinity\", \"NaN\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Binding {\n  constructor({\n    identifier,\n    scope,\n    path,\n    kind\n  }) {\n    this.identifier = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.kind = void 0;\n    this.constantViolations = [];\n    this.constant = true;\n    this.referencePaths = [];\n    this.referenced = false;\n    this.references = 0;\n    this.identifier = identifier;\n    this.scope = scope;\n    this.path = path;\n    this.kind = kind;\n    this.clearValue();\n  }\n\n  deoptValue() {\n    this.clearValue();\n    this.hasDeoptedValue = true;\n  }\n\n  setValue(value) {\n    if (this.hasDeoptedValue) return;\n    this.hasValue = true;\n    this.value = value;\n  }\n\n  clearValue() {\n    this.hasDeoptedValue = false;\n    this.hasValue = false;\n    this.value = null;\n  }\n\n  reassign(path) {\n    this.constant = false;\n\n    if (this.constantViolations.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.constantViolations.push(path);\n  }\n\n  reference(path) {\n    if (this.referencePaths.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.referenced = true;\n    this.references++;\n    this.referencePaths.push(path);\n  }\n\n  dereference() {\n    this.references--;\n    this.referenced = !!this.references;\n  }\n\n}\n\nexports.default = Binding;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = require(\"./path\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nclass TraversalContext {\n  constructor(scope, opts, state, parentPath) {\n    this.queue = null;\n    this.priorityQueue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  shouldVisit(node) {\n    const opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n    if (opts[node.type]) return true;\n    const keys = VISITOR_KEYS[node.type];\n    if (!(keys != null && keys.length)) return false;\n\n    for (const key of keys) {\n      if (node[key]) return true;\n    }\n\n    return false;\n  }\n\n  create(node, obj, key, listKey) {\n    return _path.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container: obj,\n      key: key,\n      listKey\n    });\n  }\n\n  maybeQueue(path, notPriority) {\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  }\n\n  visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n    const queue = [];\n\n    for (let key = 0; key < container.length; key++) {\n      const node = container[key];\n\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  }\n\n  visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  }\n\n  visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n    const visited = new WeakSet();\n    let stop = false;\n\n    for (const path of queue) {\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n      const {\n        node\n      } = path;\n      if (visited.has(node)) continue;\n      if (node) visited.add(node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (const path of queue) {\n      path.popContext();\n    }\n\n    this.queue = null;\n    return stop;\n  }\n\n  visit(node, key) {\n    const nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  }\n\n}\n\nexports.default = TraversalContext;","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = require(\"../binding\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  VISITOR_KEYS,\n  assignmentExpression,\n  identifier,\n  toExpression,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      skipAllButComputedMethodKey(path);\n    }\n  },\n\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration() && !maybeExportDeclar.get(\"declaration\").node.id) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return;\n    if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;\n    if (this.binding.kind !== \"hoisted\") return;\n    path.node.id = identifier(this.oldName);\n    path.node._blockHoist = 3;\n    path.replaceWith(variableDeclaration(\"let\", [variableDeclarator(identifier(this.newName), toExpression(path.node))]));\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return;\n    if (!path.isFunctionExpression() && !path.isClassExpression()) return;\n    if (this.binding.kind !== \"local\") return;\n    path.node.id = identifier(this.oldName);\n    this.binding.scope.parent.push({\n      id: identifier(this.newName)\n    });\n    path.replaceWith(assignmentExpression(\"=\", identifier(this.newName), path.node));\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    const blockToTraverse = block || scope.block;\n\n    if ((blockToTraverse == null ? void 0 : blockToTraverse.type) === \"SwitchStatement\") {\n      blockToTraverse.cases.forEach(c => {\n        scope.traverse(c, renameVisitor, this);\n      });\n    } else {\n      scope.traverse(blockToTraverse, renameVisitor, this);\n    }\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(parentDeclar);\n      this.maybeConvertFromClassFunctionExpression(parentDeclar);\n    }\n  }\n\n}\n\nexports.default = Renamer;\n\nfunction skipAllButComputedMethodKey(path) {\n  if (!path.isMethod() || !path.node.computed) {\n    path.skip();\n    return;\n  }\n\n  const keys = VISITOR_KEYS[path.type];\n\n  for (const key of keys) {\n    if (key !== \"key\") path.skipKey(key);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findParent = findParent;\nexports.find = find;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getAncestry = getAncestry;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\nexports.inType = inType;\n\nvar _t = require(\"@babel/types\");\n\nvar _index = require(\"./index\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType(...candidateTypes) {\n  let path = this;\n\n  while (path) {\n    for (const type of candidateTypes) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTypeAnnotation = getTypeAnnotation;\nexports._getTypeAnnotation = _getTypeAnnotation;\nexports.isBaseType = isBaseType;\nexports.couldBeBaseType = couldBeBaseType;\nexports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;\nexports.isGenericType = isGenericType;\n\nvar inferers = require(\"./inferers\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  anyTypeAnnotation,\n  isAnyTypeAnnotation,\n  isBooleanTypeAnnotation,\n  isEmptyTypeAnnotation,\n  isFlowBaseAnnotation,\n  isGenericTypeAnnotation,\n  isIdentifier,\n  isMixedTypeAnnotation,\n  isNumberTypeAnnotation,\n  isStringTypeAnnotation,\n  isTypeAnnotation,\n  isUnionTypeAnnotation,\n  isVoidTypeAnnotation,\n  stringTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction getTypeAnnotation() {\n  if (this.typeAnnotation) return this.typeAnnotation;\n  let type = this._getTypeAnnotation() || anyTypeAnnotation();\n  if (isTypeAnnotation(type)) type = type.typeAnnotation;\n  return this.typeAnnotation = type;\n}\n\nconst typeAnnotationInferringNodes = new WeakSet();\n\nfunction _getTypeAnnotation() {\n  const node = this.node;\n\n  if (!node) {\n    if (this.key === \"init\" && this.parentPath.isVariableDeclarator()) {\n      const declar = this.parentPath.parentPath;\n      const declarParent = declar.parentPath;\n\n      if (declar.key === \"left\" && declarParent.isForInStatement()) {\n        return stringTypeAnnotation();\n      }\n\n      if (declar.key === \"left\" && declarParent.isForOfStatement()) {\n        return anyTypeAnnotation();\n      }\n\n      return voidTypeAnnotation();\n    } else {\n      return;\n    }\n  }\n\n  if (node.typeAnnotation) {\n    return node.typeAnnotation;\n  }\n\n  if (typeAnnotationInferringNodes.has(node)) {\n    return;\n  }\n\n  typeAnnotationInferringNodes.add(node);\n\n  try {\n    var _inferer;\n\n    let inferer = inferers[node.type];\n\n    if (inferer) {\n      return inferer.call(this, node);\n    }\n\n    inferer = inferers[this.parentPath.type];\n\n    if ((_inferer = inferer) != null && _inferer.validParent) {\n      return this.parentPath.getTypeAnnotation();\n    }\n  } finally {\n    typeAnnotationInferringNodes.delete(node);\n  }\n}\n\nfunction isBaseType(baseName, soft) {\n  return _isBaseType(baseName, this.getTypeAnnotation(), soft);\n}\n\nfunction _isBaseType(baseName, type, soft) {\n  if (baseName === \"string\") {\n    return isStringTypeAnnotation(type);\n  } else if (baseName === \"number\") {\n    return isNumberTypeAnnotation(type);\n  } else if (baseName === \"boolean\") {\n    return isBooleanTypeAnnotation(type);\n  } else if (baseName === \"any\") {\n    return isAnyTypeAnnotation(type);\n  } else if (baseName === \"mixed\") {\n    return isMixedTypeAnnotation(type);\n  } else if (baseName === \"empty\") {\n    return isEmptyTypeAnnotation(type);\n  } else if (baseName === \"void\") {\n    return isVoidTypeAnnotation(type);\n  } else {\n    if (soft) {\n      return false;\n    } else {\n      throw new Error(`Unknown base type ${baseName}`);\n    }\n  }\n}\n\nfunction couldBeBaseType(name) {\n  const type = this.getTypeAnnotation();\n  if (isAnyTypeAnnotation(type)) return true;\n\n  if (isUnionTypeAnnotation(type)) {\n    for (const type2 of type.types) {\n      if (isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {\n        return true;\n      }\n    }\n\n    return false;\n  } else {\n    return _isBaseType(name, type, true);\n  }\n}\n\nfunction baseTypeStrictlyMatches(rightArg) {\n  const left = this.getTypeAnnotation();\n  const right = rightArg.getTypeAnnotation();\n\n  if (!isAnyTypeAnnotation(left) && isFlowBaseAnnotation(left)) {\n    return right.type === left.type;\n  }\n\n  return false;\n}\n\nfunction isGenericType(genericName) {\n  const type = this.getTypeAnnotation();\n  return isGenericTypeAnnotation(type) && isIdentifier(type.id, {\n    name: genericName\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VariableDeclarator = VariableDeclarator;\nexports.TypeCastExpression = TypeCastExpression;\nexports.NewExpression = NewExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.UnaryExpression = UnaryExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.LogicalExpression = LogicalExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.StringLiteral = StringLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.RegExpLiteral = RegExpLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ArrayExpression = ArrayExpression;\nexports.RestElement = RestElement;\nexports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = Func;\nexports.CallExpression = CallExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _infererReference.default;\n  }\n});\n\nvar _t = require(\"@babel/types\");\n\nvar _infererReference = require(\"./inferer-reference\");\n\nconst {\n  BOOLEAN_BINARY_OPERATORS,\n  BOOLEAN_UNARY_OPERATORS,\n  NUMBER_BINARY_OPERATORS,\n  NUMBER_UNARY_OPERATORS,\n  STRING_UNARY_OPERATORS,\n  anyTypeAnnotation,\n  arrayTypeAnnotation,\n  booleanTypeAnnotation,\n  buildMatchMemberExpression,\n  createFlowUnionType,\n  createTSUnionType,\n  createUnionTypeAnnotation,\n  genericTypeAnnotation,\n  identifier,\n  isTSTypeAnnotation,\n  nullLiteralTypeAnnotation,\n  numberTypeAnnotation,\n  stringTypeAnnotation,\n  tupleTypeAnnotation,\n  unionTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction VariableDeclarator() {\n  var _type;\n\n  const id = this.get(\"id\");\n  if (!id.isIdentifier()) return;\n  const init = this.get(\"init\");\n  let type = init.getTypeAnnotation();\n\n  if (((_type = type) == null ? void 0 : _type.type) === \"AnyTypeAnnotation\") {\n    if (init.isCallExpression() && init.get(\"callee\").isIdentifier({\n      name: \"Array\"\n    }) && !init.scope.hasBinding(\"Array\", true)) {\n      type = ArrayExpression();\n    }\n  }\n\n  return type;\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction NewExpression(node) {\n  if (this.get(\"callee\").isIdentifier()) {\n    return genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"void\") {\n    return voidTypeAnnotation();\n  } else if (NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return numberTypeAnnotation();\n  } else if (STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return stringTypeAnnotation();\n  } else if (BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  const operator = node.operator;\n\n  if (NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return numberTypeAnnotation();\n  } else if (BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    const right = this.get(\"right\");\n    const left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      return numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      return stringTypeAnnotation();\n    }\n\n    return unionTypeAnnotation([stringTypeAnnotation(), numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  const argumentTypes = [this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()];\n\n  if (isTSTypeAnnotation(argumentTypes[0]) && createTSUnionType) {\n    return createTSUnionType(argumentTypes);\n  }\n\n  if (createFlowUnionType) {\n    return createFlowUnionType(argumentTypes);\n  }\n\n  return createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction ConditionalExpression() {\n  const argumentTypes = [this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()];\n\n  if (isTSTypeAnnotation(argumentTypes[0]) && createTSUnionType) {\n    return createTSUnionType(argumentTypes);\n  }\n\n  if (createFlowUnionType) {\n    return createFlowUnionType(argumentTypes);\n  }\n\n  return createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\nfunction ParenthesizedExpression() {\n  return this.get(\"expression\").getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"++\" || operator === \"--\") {\n    return numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return genericTypeAnnotation(identifier(\"RegExp\"));\n}\n\nfunction ObjectExpression() {\n  return genericTypeAnnotation(identifier(\"Object\"));\n}\n\nfunction ArrayExpression() {\n  return genericTypeAnnotation(identifier(\"Array\"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return genericTypeAnnotation(identifier(\"Function\"));\n}\n\nconst isArrayFrom = buildMatchMemberExpression(\"Array.from\");\nconst isObjectKeys = buildMatchMemberExpression(\"Object.keys\");\nconst isObjectValues = buildMatchMemberExpression(\"Object.values\");\nconst isObjectEntries = buildMatchMemberExpression(\"Object.entries\");\n\nfunction CallExpression() {\n  const {\n    callee\n  } = this.node;\n\n  if (isObjectKeys(callee)) {\n    return arrayTypeAnnotation(stringTypeAnnotation());\n  } else if (isArrayFrom(callee) || isObjectValues(callee)) {\n    return arrayTypeAnnotation(anyTypeAnnotation());\n  } else if (isObjectEntries(callee)) {\n    return arrayTypeAnnotation(tupleTypeAnnotation([stringTypeAnnotation(), anyTypeAnnotation()]));\n  }\n\n  return resolveCall(this.get(\"callee\"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is(\"async\")) {\n      if (callee.is(\"generator\")) {\n        return genericTypeAnnotation(identifier(\"AsyncIterator\"));\n      } else {\n        return genericTypeAnnotation(identifier(\"Promise\"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {}\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  BOOLEAN_NUMBER_BINARY_OPERATORS,\n  createFlowUnionType,\n  createTSUnionType,\n  createTypeAnnotationBasedOnTypeof,\n  createUnionTypeAnnotation,\n  isTSTypeAnnotation,\n  numberTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction _default(node) {\n  if (!this.isReferenced()) return;\n  const binding = this.scope.getBinding(node.name);\n\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(binding, this, node.name);\n    }\n  }\n\n  if (node.name === \"undefined\") {\n    return voidTypeAnnotation();\n  } else if (node.name === \"NaN\" || node.name === \"Infinity\") {\n    return numberTypeAnnotation();\n  } else if (node.name === \"arguments\") {}\n}\n\nfunction getTypeAnnotationBindingConstantViolations(binding, path, name) {\n  const types = [];\n  const functionConstantViolations = [];\n  let constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n  const testType = getConditionalAnnotation(binding, path, name);\n\n  if (testType) {\n    const testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n    constantViolations = constantViolations.filter(path => testConstantViolations.indexOf(path) < 0);\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations.push(...functionConstantViolations);\n\n    for (const violation of constantViolations) {\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (!types.length) {\n    return;\n  }\n\n  if (isTSTypeAnnotation(types[0]) && createTSUnionType) {\n    return createTSUnionType(types);\n  }\n\n  if (createFlowUnionType) {\n    return createFlowUnionType(types);\n  }\n\n  return createUnionTypeAnnotation(types);\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  const violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(violation => {\n    violation = violation.resolve();\n\n    const status = violation._guessExecutionStatusRelativeTo(path);\n\n    if (functions && status === \"unknown\") functions.push(violation);\n    return status === \"before\";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  const operator = path.node.operator;\n  const right = path.get(\"right\").resolve();\n  const left = path.get(\"left\").resolve();\n  let target;\n\n  if (left.isIdentifier({\n    name\n  })) {\n    target = right;\n  } else if (right.isIdentifier({\n    name\n  })) {\n    target = left;\n  }\n\n  if (target) {\n    if (operator === \"===\") {\n      return target.getTypeAnnotation();\n    }\n\n    if (BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return numberTypeAnnotation();\n    }\n\n    return;\n  }\n\n  if (operator !== \"===\" && operator !== \"==\") return;\n  let typeofPath;\n  let typePath;\n\n  if (left.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = right;\n    typePath = left;\n  }\n\n  if (!typeofPath) return;\n  if (!typeofPath.get(\"argument\").isIdentifier({\n    name\n  })) return;\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n  const typeValue = typePath.node.value;\n  if (typeof typeValue !== \"string\") return;\n  return createTypeAnnotationBasedOnTypeof(typeValue);\n}\n\nfunction getParentConditionalPath(binding, path, name) {\n  let parentPath;\n\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === \"test\") {\n        return;\n      }\n\n      return parentPath;\n    }\n\n    if (parentPath.isFunction()) {\n      if (parentPath.parentPath.scope.getBinding(name) !== binding) return;\n    }\n\n    path = parentPath;\n  }\n}\n\nfunction getConditionalAnnotation(binding, path, name) {\n  const ifStatement = getParentConditionalPath(binding, path, name);\n  if (!ifStatement) return;\n  const test = ifStatement.get(\"test\");\n  const paths = [test];\n  const types = [];\n\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i];\n\n    if (path.isLogicalExpression()) {\n      if (path.node.operator === \"&&\") {\n        paths.push(path.get(\"left\"));\n        paths.push(path.get(\"right\"));\n      }\n    } else if (path.isBinaryExpression()) {\n      const type = inferAnnotationFromBinaryExpression(name, path);\n      if (type) types.push(type);\n    }\n  }\n\n  if (types.length) {\n    if (isTSTypeAnnotation(types[0]) && createTSUnionType) {\n      return {\n        typeAnnotation: createTSUnionType(types),\n        ifStatement\n      };\n    }\n\n    if (createFlowUnionType) {\n      return {\n        typeAnnotation: createFlowUnionType(types),\n        ifStatement\n      };\n    }\n\n    return {\n      typeAnnotation: createUnionTypeAnnotation(types),\n      ifStatement\n    };\n  }\n\n  return getConditionalAnnotation(ifStatement, name);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceWithMultiple = replaceWithMultiple;\nexports.replaceWithSourceString = replaceWithSourceString;\nexports.replaceWith = replaceWith;\nexports._replaceWith = _replaceWith;\nexports.replaceExpressionWithStatements = replaceExpressionWithStatements;\nexports.replaceInline = replaceInline;\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nvar _cache = require(\"../cache\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _t = require(\"@babel/types\");\n\nvar _helperHoistVariables = require(\"@babel/helper-hoist-variables\");\n\nconst {\n  FUNCTION_TYPES,\n  arrowFunctionExpression,\n  assignmentExpression,\n  awaitExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  inheritLeadingComments,\n  inheritTrailingComments,\n  inheritsComments,\n  isExpression,\n  isProgram,\n  isStatement,\n  removeComments,\n  returnStatement,\n  toSequenceExpression,\n  validate,\n  yieldExpression\n} = _t;\n\nfunction replaceWithMultiple(nodes) {\n  var _pathCache$get;\n\n  this.resync();\n  nodes = this._verifyNodeList(nodes);\n  inheritLeadingComments(nodes[0], this.node);\n  inheritTrailingComments(nodes[nodes.length - 1], this.node);\n  (_pathCache$get = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get.delete(this.node);\n  this.node = this.container[this.key] = null;\n  const paths = this.insertAfter(nodes);\n\n  if (this.node) {\n    this.requeue();\n  } else {\n    this.remove();\n  }\n\n  return paths;\n}\n\nfunction replaceWithSourceString(replacement) {\n  this.resync();\n\n  try {\n    replacement = `(${replacement})`;\n    replacement = (0, _parser.parse)(replacement);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \" - make sure this is an expression.\\n\" + (0, _codeFrame.codeFrameColumns)(replacement, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      });\n      err.code = \"BABEL_REPLACE_SOURCE_ERROR\";\n    }\n\n    throw err;\n  }\n\n  replacement = replacement.program.body[0].expression;\n\n  _index.default.removeProperties(replacement);\n\n  return this.replaceWith(replacement);\n}\n\nfunction replaceWith(replacement) {\n  this.resync();\n\n  if (this.removed) {\n    throw new Error(\"You can't replace this node, we've already removed it\");\n  }\n\n  if (replacement instanceof _index2.default) {\n    replacement = replacement.node;\n  }\n\n  if (!replacement) {\n    throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");\n  }\n\n  if (this.node === replacement) {\n    return [this];\n  }\n\n  if (this.isProgram() && !isProgram(replacement)) {\n    throw new Error(\"You can only replace a Program root node with another Program node\");\n  }\n\n  if (Array.isArray(replacement)) {\n    throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");\n  }\n\n  if (typeof replacement === \"string\") {\n    throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");\n  }\n\n  let nodePath = \"\";\n\n  if (this.isNodeType(\"Statement\") && isExpression(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n      replacement = expressionStatement(replacement);\n      nodePath = \"expression\";\n    }\n  }\n\n  if (this.isNodeType(\"Expression\") && isStatement(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n      return this.replaceExpressionWithStatements([replacement]);\n    }\n  }\n\n  const oldNode = this.node;\n\n  if (oldNode) {\n    inheritsComments(replacement, oldNode);\n    removeComments(oldNode);\n  }\n\n  this._replaceWith(replacement);\n\n  this.type = replacement.type;\n  this.setScope();\n  this.requeue();\n  return [nodePath ? this.get(nodePath) : this];\n}\n\nfunction _replaceWith(node) {\n  var _pathCache$get2;\n\n  if (!this.container) {\n    throw new ReferenceError(\"Container is falsy\");\n  }\n\n  if (this.inList) {\n    validate(this.parent, this.key, [node]);\n  } else {\n    validate(this.parent, this.key, node);\n  }\n\n  this.debug(`Replace with ${node == null ? void 0 : node.type}`);\n  (_pathCache$get2 = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get2.set(node, this).delete(this.node);\n  this.node = this.container[this.key] = node;\n}\n\nfunction replaceExpressionWithStatements(nodes) {\n  this.resync();\n  const nodesAsSequenceExpression = toSequenceExpression(nodes, this.scope);\n\n  if (nodesAsSequenceExpression) {\n    return this.replaceWith(nodesAsSequenceExpression)[0].get(\"expressions\");\n  }\n\n  const functionParent = this.getFunctionParent();\n  const isParentAsync = functionParent == null ? void 0 : functionParent.is(\"async\");\n  const isParentGenerator = functionParent == null ? void 0 : functionParent.is(\"generator\");\n  const container = arrowFunctionExpression([], blockStatement(nodes));\n  this.replaceWith(callExpression(container, []));\n  const callee = this.get(\"callee\");\n  (0, _helperHoistVariables.default)(callee.get(\"body\"), id => {\n    this.scope.push({\n      id\n    });\n  }, \"var\");\n  const completionRecords = this.get(\"callee\").getCompletionRecords();\n\n  for (const path of completionRecords) {\n    if (!path.isExpressionStatement()) continue;\n    const loop = path.findParent(path => path.isLoop());\n\n    if (loop) {\n      let uid = loop.getData(\"expressionReplacementReturnUid\");\n\n      if (!uid) {\n        uid = callee.scope.generateDeclaredUidIdentifier(\"ret\");\n        callee.get(\"body\").pushContainer(\"body\", returnStatement(cloneNode(uid)));\n        loop.setData(\"expressionReplacementReturnUid\", uid);\n      } else {\n        uid = identifier(uid.name);\n      }\n\n      path.get(\"expression\").replaceWith(assignmentExpression(\"=\", cloneNode(uid), path.node.expression));\n    } else {\n      path.replaceWith(returnStatement(path.node.expression));\n    }\n  }\n\n  callee.arrowFunctionToExpression();\n  const newCallee = callee;\n\n  const needToAwaitFunction = isParentAsync && _index.default.hasType(this.get(\"callee.body\").node, \"AwaitExpression\", FUNCTION_TYPES);\n\n  const needToYieldFunction = isParentGenerator && _index.default.hasType(this.get(\"callee.body\").node, \"YieldExpression\", FUNCTION_TYPES);\n\n  if (needToAwaitFunction) {\n    newCallee.set(\"async\", true);\n\n    if (!needToYieldFunction) {\n      this.replaceWith(awaitExpression(this.node));\n    }\n  }\n\n  if (needToYieldFunction) {\n    newCallee.set(\"generator\", true);\n    this.replaceWith(yieldExpression(this.node, true));\n  }\n\n  return newCallee.get(\"body.body\");\n}\n\nfunction replaceInline(nodes) {\n  this.resync();\n\n  if (Array.isArray(nodes)) {\n    if (Array.isArray(this.container)) {\n      nodes = this._verifyNodeList(nodes);\n\n      const paths = this._containerInsertAfter(nodes);\n\n      this.remove();\n      return paths;\n    } else {\n      return this.replaceWithMultiple(nodes);\n    }\n  } else {\n    return this.replaceWith(nodes);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluateTruthy = evaluateTruthy;\nexports.evaluate = evaluate;\nconst VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nconst INVALID_METHODS = [\"random\"];\n\nfunction evaluateTruthy() {\n  const res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction deopt(path, state) {\n  if (!state.confident) return;\n  state.deoptPath = path;\n  state.confident = false;\n}\n\nfunction evaluateCached(path, state) {\n  const {\n    node\n  } = path;\n  const {\n    seen\n  } = state;\n\n  if (seen.has(node)) {\n    const existing = seen.get(node);\n\n    if (existing.resolved) {\n      return existing.value;\n    } else {\n      deopt(path, state);\n      return;\n    }\n  } else {\n    const item = {\n      resolved: false\n    };\n    seen.set(node, item);\n\n    const val = _evaluate(path, state);\n\n    if (state.confident) {\n      item.resolved = true;\n      item.value = val;\n    }\n\n    return val;\n  }\n}\n\nfunction _evaluate(path, state) {\n  if (!state.confident) return;\n\n  if (path.isSequenceExpression()) {\n    const exprs = path.get(\"expressions\");\n    return evaluateCached(exprs[exprs.length - 1], state);\n  }\n\n  if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n    return path.node.value;\n  }\n\n  if (path.isNullLiteral()) {\n    return null;\n  }\n\n  if (path.isTemplateLiteral()) {\n    return evaluateQuasis(path, path.node.quasis, state);\n  }\n\n  if (path.isTaggedTemplateExpression() && path.get(\"tag\").isMemberExpression()) {\n    const object = path.get(\"tag.object\");\n    const {\n      node: {\n        name\n      }\n    } = object;\n    const property = path.get(\"tag.property\");\n\n    if (object.isIdentifier() && name === \"String\" && !path.scope.getBinding(name) && property.isIdentifier() && property.node.name === \"raw\") {\n      return evaluateQuasis(path, path.node.quasi.quasis, state, true);\n    }\n  }\n\n  if (path.isConditionalExpression()) {\n    const testResult = evaluateCached(path.get(\"test\"), state);\n    if (!state.confident) return;\n\n    if (testResult) {\n      return evaluateCached(path.get(\"consequent\"), state);\n    } else {\n      return evaluateCached(path.get(\"alternate\"), state);\n    }\n  }\n\n  if (path.isExpressionWrapper()) {\n    return evaluateCached(path.get(\"expression\"), state);\n  }\n\n  if (path.isMemberExpression() && !path.parentPath.isCallExpression({\n    callee: path.node\n  })) {\n    const property = path.get(\"property\");\n    const object = path.get(\"object\");\n\n    if (object.isLiteral() && property.isIdentifier()) {\n      const value = object.node.value;\n      const type = typeof value;\n\n      if (type === \"number\" || type === \"string\") {\n        return value[property.node.name];\n      }\n    }\n  }\n\n  if (path.isReferencedIdentifier()) {\n    const binding = path.scope.getBinding(path.node.name);\n\n    if (binding && binding.constantViolations.length > 0) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding && path.node.start < binding.path.node.end) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding != null && binding.hasValue) {\n      return binding.value;\n    } else {\n      if (path.node.name === \"undefined\") {\n        return binding ? deopt(binding.path, state) : undefined;\n      } else if (path.node.name === \"Infinity\") {\n        return binding ? deopt(binding.path, state) : Infinity;\n      } else if (path.node.name === \"NaN\") {\n        return binding ? deopt(binding.path, state) : NaN;\n      }\n\n      const resolved = path.resolve();\n\n      if (resolved === path) {\n        return deopt(path, state);\n      } else {\n        return evaluateCached(resolved, state);\n      }\n    }\n  }\n\n  if (path.isUnaryExpression({\n    prefix: true\n  })) {\n    if (path.node.operator === \"void\") {\n      return undefined;\n    }\n\n    const argument = path.get(\"argument\");\n\n    if (path.node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n      return \"function\";\n    }\n\n    const arg = evaluateCached(argument, state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"!\":\n        return !arg;\n\n      case \"+\":\n        return +arg;\n\n      case \"-\":\n        return -arg;\n\n      case \"~\":\n        return ~arg;\n\n      case \"typeof\":\n        return typeof arg;\n    }\n  }\n\n  if (path.isArrayExpression()) {\n    const arr = [];\n    const elems = path.get(\"elements\");\n\n    for (const elem of elems) {\n      const elemValue = elem.evaluate();\n\n      if (elemValue.confident) {\n        arr.push(elemValue.value);\n      } else {\n        return deopt(elemValue.deopt, state);\n      }\n    }\n\n    return arr;\n  }\n\n  if (path.isObjectExpression()) {\n    const obj = {};\n    const props = path.get(\"properties\");\n\n    for (const prop of props) {\n      if (prop.isObjectMethod() || prop.isSpreadElement()) {\n        return deopt(prop, state);\n      }\n\n      const keyPath = prop.get(\"key\");\n      let key = keyPath;\n\n      if (prop.node.computed) {\n        key = key.evaluate();\n\n        if (!key.confident) {\n          return deopt(key.deopt, state);\n        }\n\n        key = key.value;\n      } else if (key.isIdentifier()) {\n        key = key.node.name;\n      } else {\n        key = key.node.value;\n      }\n\n      const valuePath = prop.get(\"value\");\n      let value = valuePath.evaluate();\n\n      if (!value.confident) {\n        return deopt(value.deopt, state);\n      }\n\n      value = value.value;\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  if (path.isLogicalExpression()) {\n    const wasConfident = state.confident;\n    const left = evaluateCached(path.get(\"left\"), state);\n    const leftConfident = state.confident;\n    state.confident = wasConfident;\n    const right = evaluateCached(path.get(\"right\"), state);\n    const rightConfident = state.confident;\n\n    switch (path.node.operator) {\n      case \"||\":\n        state.confident = leftConfident && (!!left || rightConfident);\n        if (!state.confident) return;\n        return left || right;\n\n      case \"&&\":\n        state.confident = leftConfident && (!left || rightConfident);\n        if (!state.confident) return;\n        return left && right;\n    }\n  }\n\n  if (path.isBinaryExpression()) {\n    const left = evaluateCached(path.get(\"left\"), state);\n    if (!state.confident) return;\n    const right = evaluateCached(path.get(\"right\"), state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"-\":\n        return left - right;\n\n      case \"+\":\n        return left + right;\n\n      case \"/\":\n        return left / right;\n\n      case \"*\":\n        return left * right;\n\n      case \"%\":\n        return left % right;\n\n      case \"**\":\n        return Math.pow(left, right);\n\n      case \"<\":\n        return left < right;\n\n      case \">\":\n        return left > right;\n\n      case \"<=\":\n        return left <= right;\n\n      case \">=\":\n        return left >= right;\n\n      case \"==\":\n        return left == right;\n\n      case \"!=\":\n        return left != right;\n\n      case \"===\":\n        return left === right;\n\n      case \"!==\":\n        return left !== right;\n\n      case \"|\":\n        return left | right;\n\n      case \"&\":\n        return left & right;\n\n      case \"^\":\n        return left ^ right;\n\n      case \"<<\":\n        return left << right;\n\n      case \">>\":\n        return left >> right;\n\n      case \">>>\":\n        return left >>> right;\n    }\n  }\n\n  if (path.isCallExpression()) {\n    const callee = path.get(\"callee\");\n    let context;\n    let func;\n\n    if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {\n      func = global[callee.node.name];\n    }\n\n    if (callee.isMemberExpression()) {\n      const object = callee.get(\"object\");\n      const property = callee.get(\"property\");\n\n      if (object.isIdentifier() && property.isIdentifier() && VALID_CALLEES.indexOf(object.node.name) >= 0 && INVALID_METHODS.indexOf(property.node.name) < 0) {\n        context = global[object.node.name];\n        func = context[property.node.name];\n      }\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        const type = typeof object.node.value;\n\n        if (type === \"string\" || type === \"number\") {\n          context = object.node.value;\n          func = context[property.node.name];\n        }\n      }\n    }\n\n    if (func) {\n      const args = path.get(\"arguments\").map(arg => evaluateCached(arg, state));\n      if (!state.confident) return;\n      return func.apply(context, args);\n    }\n  }\n\n  deopt(path, state);\n}\n\nfunction evaluateQuasis(path, quasis, state, raw = false) {\n  let str = \"\";\n  let i = 0;\n  const exprs = path.get(\"expressions\");\n\n  for (const elem of quasis) {\n    if (!state.confident) break;\n    str += raw ? elem.value.raw : elem.value.cooked;\n    const expr = exprs[i++];\n    if (expr) str += String(evaluateCached(expr, state));\n  }\n\n  if (!state.confident) return;\n  return str;\n}\n\nfunction evaluate() {\n  const state = {\n    confident: true,\n    deoptPath: null,\n    seen: new Map()\n  };\n  let value = evaluateCached(this, state);\n  if (!state.confident) value = undefined;\n  return {\n    confident: state.confident,\n    deopt: state.deoptPath,\n    value: value\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toComputedKey = toComputedKey;\nexports.ensureBlock = ensureBlock;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\nexports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\nexports.arrowFunctionToExpression = arrowFunctionToExpression;\n\nvar _t = require(\"@babel/types\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nconst {\n  arrowFunctionExpression,\n  assignmentExpression,\n  binaryExpression,\n  blockStatement,\n  callExpression,\n  conditionalExpression,\n  expressionStatement,\n  identifier,\n  isIdentifier,\n  jsxIdentifier,\n  memberExpression,\n  metaProperty,\n  numericLiteral,\n  objectExpression,\n  restElement,\n  returnStatement,\n  sequenceExpression,\n  spreadElement,\n  stringLiteral,\n  super: _super,\n  thisExpression,\n  unaryExpression\n} = _t;\n\nfunction toComputedKey() {\n  let key;\n\n  if (this.isMemberExpression()) {\n    key = this.node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = this.node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!this.node.computed) {\n    if (isIdentifier(key)) key = stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  const body = this.get(\"body\");\n  const bodyNode = body.node;\n\n  if (Array.isArray(body)) {\n    throw new Error(\"Can't convert array path to a block statement\");\n  }\n\n  if (!bodyNode) {\n    throw new Error(\"Can't convert node without a body\");\n  }\n\n  if (body.isBlockStatement()) {\n    return bodyNode;\n  }\n\n  const statements = [];\n  let stringPath = \"body\";\n  let key;\n  let listKey;\n\n  if (body.isStatement()) {\n    listKey = \"body\";\n    key = 0;\n    statements.push(body.node);\n  } else {\n    stringPath += \".body.0\";\n\n    if (this.isFunction()) {\n      key = \"argument\";\n      statements.push(returnStatement(body.node));\n    } else {\n      key = \"expression\";\n      statements.push(expressionStatement(body.node));\n    }\n  }\n\n  this.node.body = blockStatement(statements);\n  const parentPath = this.get(stringPath);\n  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n  return this.node;\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n  this.arrowFunctionToExpression();\n}\n\nfunction unwrapFunctionEnvironment() {\n  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n    throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n  }\n\n  hoistFunctionEnvironment(this);\n}\n\nfunction arrowFunctionToExpression({\n  allowInsertArrow = true,\n  specCompliant = false,\n  noNewArrows = !specCompliant\n} = {}) {\n  if (!this.isArrowFunctionExpression()) {\n    throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n  }\n\n  const thisBinding = hoistFunctionEnvironment(this, noNewArrows, allowInsertArrow);\n  this.ensureBlock();\n  this.node.type = \"FunctionExpression\";\n\n  if (!noNewArrows) {\n    const checkBinding = thisBinding ? null : this.parentPath.scope.generateUidIdentifier(\"arrowCheckId\");\n\n    if (checkBinding) {\n      this.parentPath.scope.push({\n        id: checkBinding,\n        init: objectExpression([])\n      });\n    }\n\n    this.get(\"body\").unshiftContainer(\"body\", expressionStatement(callExpression(this.hub.addHelper(\"newArrowCheck\"), [thisExpression(), checkBinding ? identifier(checkBinding.name) : identifier(thisBinding)])));\n    this.replaceWith(callExpression(memberExpression((0, _helperFunctionName.default)(this, true) || this.node, identifier(\"bind\")), [checkBinding ? identifier(checkBinding.name) : thisExpression()]));\n  }\n}\n\nfunction hoistFunctionEnvironment(fnPath, noNewArrows = true, allowInsertArrow = true) {\n  const thisEnvFn = fnPath.findParent(p => {\n    return p.isFunction() && !p.isArrowFunctionExpression() || p.isProgram() || p.isClassProperty({\n      static: false\n    });\n  });\n  const inConstructor = (thisEnvFn == null ? void 0 : thisEnvFn.node.kind) === \"constructor\";\n\n  if (thisEnvFn.isClassProperty()) {\n    throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n  }\n\n  const {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  } = getScopeInformation(fnPath);\n\n  if (inConstructor && superCalls.length > 0) {\n    if (!allowInsertArrow) {\n      throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n    }\n\n    const allSuperCalls = [];\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        allSuperCalls.push(child);\n      }\n\n    });\n    const superBinding = getSuperBinding(thisEnvFn);\n    allSuperCalls.forEach(superCall => {\n      const callee = identifier(superBinding);\n      callee.loc = superCall.node.callee.loc;\n      superCall.get(\"callee\").replaceWith(callee);\n    });\n  }\n\n  if (argumentsPaths.length > 0) {\n    const argumentsBinding = getBinding(thisEnvFn, \"arguments\", () => {\n      const args = () => identifier(\"arguments\");\n\n      if (thisEnvFn.scope.path.isProgram()) {\n        return conditionalExpression(binaryExpression(\"===\", unaryExpression(\"typeof\", args()), stringLiteral(\"undefined\")), thisEnvFn.scope.buildUndefinedNode(), args());\n      } else {\n        return args();\n      }\n    });\n    argumentsPaths.forEach(argumentsChild => {\n      const argsRef = identifier(argumentsBinding);\n      argsRef.loc = argumentsChild.node.loc;\n      argumentsChild.replaceWith(argsRef);\n    });\n  }\n\n  if (newTargetPaths.length > 0) {\n    const newTargetBinding = getBinding(thisEnvFn, \"newtarget\", () => metaProperty(identifier(\"new\"), identifier(\"target\")));\n    newTargetPaths.forEach(targetChild => {\n      const targetRef = identifier(newTargetBinding);\n      targetRef.loc = targetChild.node.loc;\n      targetChild.replaceWith(targetRef);\n    });\n  }\n\n  if (superProps.length > 0) {\n    if (!allowInsertArrow) {\n      throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n    }\n\n    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);\n    flatSuperProps.forEach(superProp => {\n      const key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n      const isAssignment = superProp.parentPath.isAssignmentExpression({\n        left: superProp.node\n      });\n      const isCall = superProp.parentPath.isCallExpression({\n        callee: superProp.node\n      });\n      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n      const args = [];\n\n      if (superProp.node.computed) {\n        args.push(superProp.get(\"property\").node);\n      }\n\n      if (isAssignment) {\n        const value = superProp.parentPath.node.right;\n        args.push(value);\n      }\n\n      const call = callExpression(identifier(superBinding), args);\n\n      if (isCall) {\n        superProp.parentPath.unshiftContainer(\"arguments\", thisExpression());\n        superProp.replaceWith(memberExpression(call, identifier(\"call\")));\n        thisPaths.push(superProp.parentPath.get(\"arguments.0\"));\n      } else if (isAssignment) {\n        superProp.parentPath.replaceWith(call);\n      } else {\n        superProp.replaceWith(call);\n      }\n    });\n  }\n\n  let thisBinding;\n\n  if (thisPaths.length > 0 || !noNewArrows) {\n    thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n    if (noNewArrows || inConstructor && hasSuperClass(thisEnvFn)) {\n      thisPaths.forEach(thisChild => {\n        const thisRef = thisChild.isJSX() ? jsxIdentifier(thisBinding) : identifier(thisBinding);\n        thisRef.loc = thisChild.node.loc;\n        thisChild.replaceWith(thisRef);\n      });\n      if (!noNewArrows) thisBinding = null;\n    }\n  }\n\n  return thisBinding;\n}\n\nfunction standardizeSuperProperty(superProp) {\n  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n    const assignmentPath = superProp.parentPath;\n    const op = assignmentPath.node.operator.slice(0, -1);\n    const value = assignmentPath.node.right;\n    assignmentPath.node.operator = \"=\";\n\n    if (superProp.node.computed) {\n      const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n      assignmentPath.get(\"left\").replaceWith(memberExpression(superProp.node.object, assignmentExpression(\"=\", tmp, superProp.node.property), true));\n      assignmentPath.get(\"right\").replaceWith(binaryExpression(op, memberExpression(superProp.node.object, identifier(tmp.name), true), value));\n    } else {\n      assignmentPath.get(\"left\").replaceWith(memberExpression(superProp.node.object, superProp.node.property));\n      assignmentPath.get(\"right\").replaceWith(binaryExpression(op, memberExpression(superProp.node.object, identifier(superProp.node.property.name)), value));\n    }\n\n    return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n  } else if (superProp.parentPath.isUpdateExpression()) {\n    const updateExpr = superProp.parentPath;\n    const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n    const parts = [assignmentExpression(\"=\", tmp, memberExpression(superProp.node.object, computedKey ? assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), assignmentExpression(\"=\", memberExpression(superProp.node.object, computedKey ? identifier(computedKey.name) : superProp.node.property, superProp.node.computed), binaryExpression(\"+\", identifier(tmp.name), numericLiteral(1)))];\n\n    if (!superProp.parentPath.node.prefix) {\n      parts.push(identifier(tmp.name));\n    }\n\n    updateExpr.replaceWith(sequenceExpression(parts));\n    const left = updateExpr.get(\"expressions.0.right\");\n    const right = updateExpr.get(\"expressions.1.left\");\n    return [left, right];\n  }\n\n  return [superProp];\n}\n\nfunction hasSuperClass(thisEnvFn) {\n  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n}\n\nfunction getThisBinding(thisEnvFn, inConstructor) {\n  return getBinding(thisEnvFn, \"this\", thisBinding => {\n    if (!inConstructor || !hasSuperClass(thisEnvFn)) return thisExpression();\n    const supers = new WeakSet();\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        if (supers.has(child.node)) return;\n        supers.add(child.node);\n        child.replaceWithMultiple([child.node, assignmentExpression(\"=\", identifier(thisBinding), identifier(\"this\"))]);\n      }\n\n    });\n  });\n}\n\nfunction getSuperBinding(thisEnvFn) {\n  return getBinding(thisEnvFn, \"supercall\", () => {\n    const argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n    return arrowFunctionExpression([restElement(argsBinding)], callExpression(_super(), [spreadElement(identifier(argsBinding.name))]));\n  });\n}\n\nfunction getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n  const op = isAssignment ? \"set\" : \"get\";\n  return getBinding(thisEnvFn, `superprop_${op}:${propName || \"\"}`, () => {\n    const argsList = [];\n    let fnBody;\n\n    if (propName) {\n      fnBody = memberExpression(_super(), identifier(propName));\n    } else {\n      const method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n      argsList.unshift(method);\n      fnBody = memberExpression(_super(), identifier(method.name), true);\n    }\n\n    if (isAssignment) {\n      const valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n      argsList.push(valueIdent);\n      fnBody = assignmentExpression(\"=\", fnBody, identifier(valueIdent.name));\n    }\n\n    return arrowFunctionExpression(argsList, fnBody);\n  });\n}\n\nfunction getBinding(thisEnvFn, key, init) {\n  const cacheKey = \"binding:\" + key;\n  let data = thisEnvFn.getData(cacheKey);\n\n  if (!data) {\n    const id = thisEnvFn.scope.generateUidIdentifier(key);\n    data = id.name;\n    thisEnvFn.setData(cacheKey, data);\n    thisEnvFn.scope.push({\n      id: id,\n      init: init(data)\n    });\n  }\n\n  return data;\n}\n\nfunction getScopeInformation(fnPath) {\n  const thisPaths = [];\n  const argumentsPaths = [];\n  const newTargetPaths = [];\n  const superProps = [];\n  const superCalls = [];\n  fnPath.traverse({\n    ClassProperty(child) {\n      child.skip();\n    },\n\n    Function(child) {\n      if (child.isArrowFunctionExpression()) return;\n      child.skip();\n    },\n\n    ThisExpression(child) {\n      thisPaths.push(child);\n    },\n\n    JSXIdentifier(child) {\n      if (child.node.name !== \"this\") return;\n\n      if (!child.parentPath.isJSXMemberExpression({\n        object: child.node\n      }) && !child.parentPath.isJSXOpeningElement({\n        name: child.node\n      })) {\n        return;\n      }\n\n      thisPaths.push(child);\n    },\n\n    CallExpression(child) {\n      if (child.get(\"callee\").isSuper()) superCalls.push(child);\n    },\n\n    MemberExpression(child) {\n      if (child.get(\"object\").isSuper()) superProps.push(child);\n    },\n\n    ReferencedIdentifier(child) {\n      if (child.node.name !== \"arguments\") return;\n      let curr = child.scope;\n\n      do {\n        if (curr.hasOwnBinding(\"arguments\")) {\n          curr.rename(\"arguments\");\n          return;\n        }\n\n        if (curr.path.isFunction() && !curr.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (curr = curr.parent);\n\n      argumentsPaths.push(child);\n    },\n\n    MetaProperty(child) {\n      if (!child.get(\"meta\").isIdentifier({\n        name: \"new\"\n      })) return;\n      if (!child.get(\"property\").isIdentifier({\n        name: \"target\"\n      })) return;\n      newTargetPaths.push(child);\n    }\n\n  });\n  return {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchesPattern = matchesPattern;\nexports.has = has;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.equals = equals;\nexports.isNodeType = isNodeType;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.referencesImport = referencesImport;\nexports.getSource = getSource;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;\nexports.resolve = resolve;\nexports._resolve = _resolve;\nexports.isConstantExpression = isConstantExpression;\nexports.isInStrictMode = isInStrictMode;\nexports.is = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  STATEMENT_OR_BLOCK_KEYS,\n  VISITOR_KEYS,\n  isBlockStatement,\n  isExpression,\n  isIdentifier,\n  isLiteral,\n  isStringLiteral,\n  isType,\n  matchesPattern: _matchesPattern\n} = _t;\n\nfunction matchesPattern(pattern, allowPartial) {\n  return _matchesPattern(this.node, pattern, allowPartial);\n}\n\nfunction has(key) {\n  const val = this.node && this.node[key];\n\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nconst is = has;\nexports.is = is;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === \"init\" || this.key === \"left\") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== \"body\" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  let path = this;\n  let first = true;\n\n  do {\n    const container = path.container;\n\n    if (path.isFunction() && !first) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return STATEMENT_OR_BLOCK_KEYS.includes(this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) {\n    if ((this.isMemberExpression() || this.isOptionalMemberExpression()) && (this.node.computed ? isStringLiteral(this.node.property, {\n      value: importName\n    }) : this.node.property.name === importName)) {\n      const object = this.get(\"object\");\n      return object.isReferencedIdentifier() && object.referencesImport(moduleSource, \"*\");\n    }\n\n    return false;\n  }\n\n  const binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== \"module\") return false;\n  const path = binding.path;\n  const parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === \"default\") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === \"*\") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && isIdentifier(path.node.imported, {\n    name: importName\n  })) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  const node = this.node;\n\n  if (node.end) {\n    const code = this.hub.getCode();\n    if (code) return code.slice(node.start, node.end);\n  }\n\n  return \"\";\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== \"after\";\n}\n\nfunction getOuterFunction(path) {\n  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;\n}\n\nfunction isExecutionUncertain(type, key) {\n  switch (type) {\n    case \"LogicalExpression\":\n      return key === \"right\";\n\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      return key === \"consequent\" || key === \"alternate\";\n\n    case \"WhileStatement\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      return key === \"body\";\n\n    case \"ForStatement\":\n      return key === \"body\" || key === \"update\";\n\n    case \"SwitchStatement\":\n      return key === \"cases\";\n\n    case \"TryStatement\":\n      return key === \"handler\";\n\n    case \"AssignmentPattern\":\n      return key === \"right\";\n\n    case \"OptionalMemberExpression\":\n      return key === \"property\";\n\n    case \"OptionalCallExpression\":\n      return key === \"arguments\";\n\n    default:\n      return false;\n  }\n}\n\nfunction isExecutionUncertainInList(paths, maxIndex) {\n  for (let i = 0; i < maxIndex; i++) {\n    const path = paths[i];\n\n    if (isExecutionUncertain(path.parent.type, path.parentKey)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  const funcParent = {\n    this: getOuterFunction(this),\n    target: getOuterFunction(target)\n  };\n\n  if (funcParent.target.node !== funcParent.this.node) {\n    return this._guessExecutionStatusRelativeToDifferentFunctions(funcParent.target);\n  }\n\n  const paths = {\n    target: target.getAncestry(),\n    this: this.getAncestry()\n  };\n  if (paths.target.indexOf(this) >= 0) return \"after\";\n  if (paths.this.indexOf(target) >= 0) return \"before\";\n  let commonPath;\n  const commonIndex = {\n    target: 0,\n    this: 0\n  };\n\n  while (!commonPath && commonIndex.this < paths.this.length) {\n    const path = paths.this[commonIndex.this];\n    commonIndex.target = paths.target.indexOf(path);\n\n    if (commonIndex.target >= 0) {\n      commonPath = path;\n    } else {\n      commonIndex.this++;\n    }\n  }\n\n  if (!commonPath) {\n    throw new Error(\"Internal Babel error - The two compared nodes\" + \" don't appear to belong to the same program.\");\n  }\n\n  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {\n    return \"unknown\";\n  }\n\n  const divergence = {\n    this: paths.this[commonIndex.this - 1],\n    target: paths.target[commonIndex.target - 1]\n  };\n\n  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {\n    return divergence.target.key > divergence.this.key ? \"before\" : \"after\";\n  }\n\n  const keys = VISITOR_KEYS[commonPath.type];\n  const keyPosition = {\n    this: keys.indexOf(divergence.this.parentKey),\n    target: keys.indexOf(divergence.target.parentKey)\n  };\n  return keyPosition.target > keyPosition.this ? \"before\" : \"after\";\n}\n\nconst executionOrderCheckedNodes = new WeakSet();\n\nfunction _guessExecutionStatusRelativeToDifferentFunctions(target) {\n  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {\n    return \"unknown\";\n  }\n\n  const binding = target.scope.getBinding(target.node.id.name);\n  if (!binding.references) return \"before\";\n  const referencePaths = binding.referencePaths;\n  let allStatus;\n\n  for (const path of referencePaths) {\n    const childOfFunction = !!path.find(path => path.node === target.node);\n    if (childOfFunction) continue;\n\n    if (path.key !== \"callee\" || !path.parentPath.isCallExpression()) {\n      return \"unknown\";\n    }\n\n    if (executionOrderCheckedNodes.has(path.node)) continue;\n    executionOrderCheckedNodes.add(path.node);\n\n    const status = this._guessExecutionStatusRelativeTo(path);\n\n    executionOrderCheckedNodes.delete(path.node);\n\n    if (allStatus && allStatus !== status) {\n      return \"unknown\";\n    } else {\n      allStatus = status;\n    }\n  }\n\n  return allStatus;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get(\"id\").isIdentifier()) {\n      return this.get(\"init\").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n    if (!binding.constant) return;\n    if (binding.kind === \"module\") return;\n\n    if (binding.path !== this) {\n      const ret = binding.path.resolve(dangerous, resolved);\n      if (this.find(parent => parent.node === ret.node)) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get(\"expression\").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n    const targetKey = this.toComputedKey();\n    if (!isLiteral(targetKey)) return;\n    const targetName = targetKey.value;\n    const target = this.get(\"object\").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      const props = target.get(\"properties\");\n\n      for (const prop of props) {\n        if (!prop.isProperty()) continue;\n        const key = prop.get(\"key\");\n        let match = prop.isnt(\"computed\") && key.isIdentifier({\n          name: targetName\n        });\n        match = match || key.isLiteral({\n          value: targetName\n        });\n        if (match) return prop.get(\"value\").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      const elems = target.get(\"elements\");\n      const elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\nfunction isConstantExpression() {\n  if (this.isIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return false;\n    return binding.constant;\n  }\n\n  if (this.isLiteral()) {\n    if (this.isRegExpLiteral()) {\n      return false;\n    }\n\n    if (this.isTemplateLiteral()) {\n      return this.get(\"expressions\").every(expression => expression.isConstantExpression());\n    }\n\n    return true;\n  }\n\n  if (this.isUnaryExpression()) {\n    if (this.node.operator !== \"void\") {\n      return false;\n    }\n\n    return this.get(\"argument\").isConstantExpression();\n  }\n\n  if (this.isBinaryExpression()) {\n    return this.get(\"left\").isConstantExpression() && this.get(\"right\").isConstantExpression();\n  }\n\n  return false;\n}\n\nfunction isInStrictMode() {\n  const start = this.isProgram() ? this : this.parentPath;\n  const strictParent = start.find(path => {\n    if (path.isProgram({\n      sourceType: \"module\"\n    })) return true;\n    if (path.isClass()) return true;\n    if (!path.isProgram() && !path.isFunction()) return false;\n\n    if (path.isArrowFunctionExpression() && !path.get(\"body\").isBlockStatement()) {\n      return false;\n    }\n\n    const body = path.isFunction() ? path.node.body : path.node;\n\n    for (const directive of body.directives) {\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  });\n  return !!strictParent;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.call = call;\nexports._call = _call;\nexports.isBlacklisted = exports.isDenylisted = isDenylisted;\nexports.visit = visit;\nexports.skip = skip;\nexports.skipKey = skipKey;\nexports.stop = stop;\nexports.setScope = setScope;\nexports.setContext = setContext;\nexports.resync = resync;\nexports._resyncParent = _resyncParent;\nexports._resyncKey = _resyncKey;\nexports._resyncList = _resyncList;\nexports._resyncRemoved = _resyncRemoved;\nexports.popContext = popContext;\nexports.pushContext = pushContext;\nexports.setup = setup;\nexports.setKey = setKey;\nexports.requeue = requeue;\nexports._getQueueContexts = _getQueueContexts;\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nfunction call(key) {\n  const opts = this.opts;\n  this.debug(key);\n\n  if (this.node) {\n    if (this._call(opts[key])) return true;\n  }\n\n  if (this.node) {\n    return this._call(opts[this.node.type] && opts[this.node.type][key]);\n  }\n\n  return false;\n}\n\nfunction _call(fns) {\n  if (!fns) return false;\n\n  for (const fn of fns) {\n    if (!fn) continue;\n    const node = this.node;\n    if (!node) return true;\n    const ret = fn.call(this.state, this, this.state);\n\n    if (ret && typeof ret === \"object\" && typeof ret.then === \"function\") {\n      throw new Error(`You appear to be using a plugin with an async traversal visitor, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n    }\n\n    if (ret) {\n      throw new Error(`Unexpected return value from visitor method ${fn}`);\n    }\n\n    if (this.node !== node) return true;\n    if (this._traverseFlags > 0) return true;\n  }\n\n  return false;\n}\n\nfunction isDenylisted() {\n  var _this$opts$denylist;\n\n  const denylist = (_this$opts$denylist = this.opts.denylist) != null ? _this$opts$denylist : this.opts.blacklist;\n  return denylist && denylist.indexOf(this.node.type) > -1;\n}\n\nfunction visit() {\n  if (!this.node) {\n    return false;\n  }\n\n  if (this.isDenylisted()) {\n    return false;\n  }\n\n  if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {\n    return false;\n  }\n\n  if (this.shouldSkip || this.call(\"enter\") || this.shouldSkip) {\n    this.debug(\"Skip...\");\n    return this.shouldStop;\n  }\n\n  this.debug(\"Recursing into...\");\n\n  _index.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys);\n\n  this.call(\"exit\");\n  return this.shouldStop;\n}\n\nfunction skip() {\n  this.shouldSkip = true;\n}\n\nfunction skipKey(key) {\n  if (this.skipKeys == null) {\n    this.skipKeys = {};\n  }\n\n  this.skipKeys[key] = true;\n}\n\nfunction stop() {\n  this._traverseFlags |= _index2.SHOULD_SKIP | _index2.SHOULD_STOP;\n}\n\nfunction setScope() {\n  if (this.opts && this.opts.noScope) return;\n  let path = this.parentPath;\n  if (this.key === \"key\" && path.isMethod()) path = path.parentPath;\n  let target;\n\n  while (path && !target) {\n    if (path.opts && path.opts.noScope) return;\n    target = path.scope;\n    path = path.parentPath;\n  }\n\n  this.scope = this.getScope(target);\n  if (this.scope) this.scope.init();\n}\n\nfunction setContext(context) {\n  if (this.skipKeys != null) {\n    this.skipKeys = {};\n  }\n\n  this._traverseFlags = 0;\n\n  if (context) {\n    this.context = context;\n    this.state = context.state;\n    this.opts = context.opts;\n  }\n\n  this.setScope();\n  return this;\n}\n\nfunction resync() {\n  if (this.removed) return;\n\n  this._resyncParent();\n\n  this._resyncList();\n\n  this._resyncKey();\n}\n\nfunction _resyncParent() {\n  if (this.parentPath) {\n    this.parent = this.parentPath.node;\n  }\n}\n\nfunction _resyncKey() {\n  if (!this.container) return;\n  if (this.node === this.container[this.key]) return;\n\n  if (Array.isArray(this.container)) {\n    for (let i = 0; i < this.container.length; i++) {\n      if (this.container[i] === this.node) {\n        return this.setKey(i);\n      }\n    }\n  } else {\n    for (const key of Object.keys(this.container)) {\n      if (this.container[key] === this.node) {\n        return this.setKey(key);\n      }\n    }\n  }\n\n  this.key = null;\n}\n\nfunction _resyncList() {\n  if (!this.parent || !this.inList) return;\n  const newContainer = this.parent[this.listKey];\n  if (this.container === newContainer) return;\n  this.container = newContainer || null;\n}\n\nfunction _resyncRemoved() {\n  if (this.key == null || !this.container || this.container[this.key] !== this.node) {\n    this._markRemoved();\n  }\n}\n\nfunction popContext() {\n  this.contexts.pop();\n\n  if (this.contexts.length > 0) {\n    this.setContext(this.contexts[this.contexts.length - 1]);\n  } else {\n    this.setContext(undefined);\n  }\n}\n\nfunction pushContext(context) {\n  this.contexts.push(context);\n  this.setContext(context);\n}\n\nfunction setup(parentPath, container, listKey, key) {\n  this.listKey = listKey;\n  this.container = container;\n  this.parentPath = parentPath || this.parentPath;\n  this.setKey(key);\n}\n\nfunction setKey(key) {\n  var _this$node;\n\n  this.key = key;\n  this.node = this.container[this.key];\n  this.type = (_this$node = this.node) == null ? void 0 : _this$node.type;\n}\n\nfunction requeue(pathToQueue = this) {\n  if (pathToQueue.removed) return;\n  ;\n  const contexts = this.contexts;\n\n  for (const context of contexts) {\n    context.maybeQueue(pathToQueue);\n  }\n}\n\nfunction _getQueueContexts() {\n  let path = this;\n  let contexts = this.contexts;\n\n  while (!contexts.length) {\n    path = path.parentPath;\n    if (!path) break;\n    contexts = path.contexts;\n  }\n\n  return contexts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.remove = remove;\nexports._removeFromScope = _removeFromScope;\nexports._callRemovalHooks = _callRemovalHooks;\nexports._remove = _remove;\nexports._markRemoved = _markRemoved;\nexports._assertUnremoved = _assertUnremoved;\n\nvar _removalHooks = require(\"./lib/removal-hooks\");\n\nvar _cache = require(\"../cache\");\n\nvar _index = require(\"./index\");\n\nfunction remove() {\n  var _this$opts;\n\n  this._assertUnremoved();\n\n  this.resync();\n\n  if (!((_this$opts = this.opts) != null && _this$opts.noScope)) {\n    this._removeFromScope();\n  }\n\n  if (this._callRemovalHooks()) {\n    this._markRemoved();\n\n    return;\n  }\n\n  this.shareCommentsWithSiblings();\n\n  this._remove();\n\n  this._markRemoved();\n}\n\nfunction _removeFromScope() {\n  const bindings = this.getBindingIdentifiers();\n  Object.keys(bindings).forEach(name => this.scope.removeBinding(name));\n}\n\nfunction _callRemovalHooks() {\n  for (const fn of _removalHooks.hooks) {\n    if (fn(this, this.parentPath)) return true;\n  }\n}\n\nfunction _remove() {\n  if (Array.isArray(this.container)) {\n    this.container.splice(this.key, 1);\n    this.updateSiblingKeys(this.key, -1);\n  } else {\n    this._replaceWith(null);\n  }\n}\n\nfunction _markRemoved() {\n  this._traverseFlags |= _index.SHOULD_SKIP | _index.REMOVED;\n  if (this.parent) _cache.path.get(this.parent).delete(this.node);\n  this.node = null;\n}\n\nfunction _assertUnremoved() {\n  if (this.removed) {\n    throw this.buildCodeFrameError(\"NodePath has been removed so is read-only.\");\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hooks = void 0;\nconst hooks = [function (self, parent) {\n  const removeParent = self.key === \"test\" && (parent.isWhile() || parent.isSwitchCase()) || self.key === \"declaration\" && parent.isExportDeclaration() || self.key === \"body\" && parent.isLabeledStatement() || self.listKey === \"declarations\" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === \"expression\" && parent.isExpressionStatement();\n\n  if (removeParent) {\n    parent.remove();\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n    parent.replaceWith(parent.node.expressions[0]);\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isBinary()) {\n    if (self.key === \"left\") {\n      parent.replaceWith(parent.node.right);\n    } else {\n      parent.replaceWith(parent.node.left);\n    }\n\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isIfStatement() && (self.key === \"consequent\" || self.key === \"alternate\") || self.key === \"body\" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n    self.replaceWith({\n      type: \"BlockStatement\",\n      body: []\n    });\n    return true;\n  }\n}];\nexports.hooks = hooks;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.insertBefore = insertBefore;\nexports._containerInsert = _containerInsert;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._containerInsertAfter = _containerInsertAfter;\nexports.insertAfter = insertAfter;\nexports.updateSiblingKeys = updateSiblingKeys;\nexports._verifyNodeList = _verifyNodeList;\nexports.unshiftContainer = unshiftContainer;\nexports.pushContainer = pushContainer;\nexports.hoist = hoist;\n\nvar _cache = require(\"../cache\");\n\nvar _hoister = require(\"./lib/hoister\");\n\nvar _index = require(\"./index\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  arrowFunctionExpression,\n  assertExpression,\n  assignmentExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  isExpression\n} = _t;\n\nfunction insertBefore(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertBefore(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.unshiftContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n  const paths = [];\n  this.container.splice(from, 0, ...nodes);\n\n  for (let i = 0; i < nodes.length; i++) {\n    const to = from + i;\n    const path = this.getSibling(to);\n    paths.push(path);\n\n    if (this.context && this.context.queue) {\n      path.pushContext(this.context);\n    }\n  }\n\n  const contexts = this._getQueueContexts();\n\n  for (const path of paths) {\n    path.setScope();\n    path.debug(\"Inserted.\");\n\n    for (const context of contexts) {\n      context.maybeQueue(path, true);\n    }\n  }\n\n  return paths;\n}\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\nfunction insertAfter(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertAfter(nodes.map(node => {\n      return isExpression(node) ? expressionStatement(node) : node;\n    }));\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() && !parentPath.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      const node = this.node;\n      let {\n        scope\n      } = this;\n\n      if (scope.path.isPattern()) {\n        assertExpression(node);\n        this.replaceWith(callExpression(arrowFunctionExpression([], node), []));\n        this.get(\"callee.body\").insertAfter(nodes);\n        return [this];\n      }\n\n      if (parentPath.isMethod({\n        computed: true,\n        key: node\n      })) {\n        scope = scope.parent;\n      }\n\n      const temp = scope.generateDeclaredUidIdentifier();\n      nodes.unshift(expressionStatement(assignmentExpression(\"=\", cloneNode(temp), node)));\n      nodes.push(expressionStatement(cloneNode(temp)));\n    }\n\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertAfter(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.pushContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  if (!this.parent) return;\n\n  const paths = _cache.path.get(this.parent);\n\n  for (const [, path] of paths) {\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\nfunction _verifyNodeList(nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  if (!Array.isArray(nodes)) {\n    nodes = [nodes];\n  }\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    let msg;\n\n    if (!node) {\n      msg = \"has falsy node\";\n    } else if (typeof node !== \"object\") {\n      msg = \"contains a non-object node\";\n    } else if (!node.type) {\n      msg = \"without a type\";\n    } else if (node instanceof _index.default) {\n      msg = \"has a NodePath when it expected a raw object\";\n    }\n\n    if (msg) {\n      const type = Array.isArray(node) ? \"array\" : typeof node;\n      throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`);\n    }\n  }\n\n  return nodes;\n}\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: this.node[listKey],\n    listKey,\n    key: 0\n  }).setContext(this.context);\n\n  return path._containerInsertBefore(nodes);\n}\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  const verifiedNodes = this._verifyNodeList(nodes);\n\n  const container = this.node[listKey];\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey,\n    key: container.length\n  }).setContext(this.context);\n\n  return path.replaceWithMultiple(verifiedNodes);\n}\n\nfunction hoist(scope = this.scope) {\n  const hoister = new _hoister.default(this, scope);\n  return hoister.run();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _t = require(\"@babel/types\");\n\nvar _t2 = _t;\nconst {\n  react\n} = _t;\nconst {\n  cloneNode,\n  jsxExpressionContainer,\n  variableDeclaration,\n  variableDeclarator\n} = _t2;\nconst referenceVisitor = {\n  ReferencedIdentifier(path, state) {\n    if (path.isJSXIdentifier() && react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {\n      return;\n    }\n\n    if (path.node.name === \"this\") {\n      let scope = path.scope;\n\n      do {\n        if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (scope = scope.parent);\n\n      if (scope) state.breakOnScopePaths.push(scope.path);\n    }\n\n    const binding = path.scope.getBinding(path.node.name);\n    if (!binding) return;\n\n    for (const violation of binding.constantViolations) {\n      if (violation.scope !== binding.path.scope) {\n        state.mutableBinding = true;\n        path.stop();\n        return;\n      }\n    }\n\n    if (binding !== state.scope.getBinding(path.node.name)) return;\n    state.bindings[path.node.name] = binding;\n  }\n\n};\n\nclass PathHoister {\n  constructor(path, scope) {\n    this.breakOnScopePaths = void 0;\n    this.bindings = void 0;\n    this.mutableBinding = void 0;\n    this.scopes = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.attachAfter = void 0;\n    this.breakOnScopePaths = [];\n    this.bindings = {};\n    this.mutableBinding = false;\n    this.scopes = [];\n    this.scope = scope;\n    this.path = path;\n    this.attachAfter = false;\n  }\n\n  isCompatibleScope(scope) {\n    for (const key of Object.keys(this.bindings)) {\n      const binding = this.bindings[key];\n\n      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getCompatibleScopes() {\n    let scope = this.path.scope;\n\n    do {\n      if (this.isCompatibleScope(scope)) {\n        this.scopes.push(scope);\n      } else {\n        break;\n      }\n\n      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n        break;\n      }\n    } while (scope = scope.parent);\n  }\n\n  getAttachmentPath() {\n    let path = this._getAttachmentPath();\n\n    if (!path) return;\n    let targetScope = path.scope;\n\n    if (targetScope.path === path) {\n      targetScope = path.scope.parent;\n    }\n\n    if (targetScope.path.isProgram() || targetScope.path.isFunction()) {\n      for (const name of Object.keys(this.bindings)) {\n        if (!targetScope.hasOwnBinding(name)) continue;\n        const binding = this.bindings[name];\n\n        if (binding.kind === \"param\" || binding.path.parentKey === \"params\") {\n          continue;\n        }\n\n        const bindingParentPath = this.getAttachmentParentForPath(binding.path);\n\n        if (bindingParentPath.key >= path.key) {\n          this.attachAfter = true;\n          path = binding.path;\n\n          for (const violationPath of binding.constantViolations) {\n            if (this.getAttachmentParentForPath(violationPath).key > path.key) {\n              path = violationPath;\n            }\n          }\n        }\n      }\n    }\n\n    return path;\n  }\n\n  _getAttachmentPath() {\n    const scopes = this.scopes;\n    const scope = scopes.pop();\n    if (!scope) return;\n\n    if (scope.path.isFunction()) {\n      if (this.hasOwnParamBindings(scope)) {\n        if (this.scope === scope) return;\n        const bodies = scope.path.get(\"body\").get(\"body\");\n\n        for (let i = 0; i < bodies.length; i++) {\n          if (bodies[i].node._blockHoist) continue;\n          return bodies[i];\n        }\n      } else {\n        return this.getNextScopeAttachmentParent();\n      }\n    } else if (scope.path.isProgram()) {\n      return this.getNextScopeAttachmentParent();\n    }\n  }\n\n  getNextScopeAttachmentParent() {\n    const scope = this.scopes.pop();\n    if (scope) return this.getAttachmentParentForPath(scope.path);\n  }\n\n  getAttachmentParentForPath(path) {\n    do {\n      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n        return path;\n      }\n    } while (path = path.parentPath);\n  }\n\n  hasOwnParamBindings(scope) {\n    for (const name of Object.keys(this.bindings)) {\n      if (!scope.hasOwnBinding(name)) continue;\n      const binding = this.bindings[name];\n      if (binding.kind === \"param\" && binding.constant) return true;\n    }\n\n    return false;\n  }\n\n  run() {\n    this.path.traverse(referenceVisitor, this);\n    if (this.mutableBinding) return;\n    this.getCompatibleScopes();\n    const attachTo = this.getAttachmentPath();\n    if (!attachTo) return;\n    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n    let uid = attachTo.scope.generateUidIdentifier(\"ref\");\n    const declarator = variableDeclarator(uid, this.path.node);\n    const insertFn = this.attachAfter ? \"insertAfter\" : \"insertBefore\";\n    const [attached] = attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : variableDeclaration(\"var\", [declarator])]);\n    const parent = this.path.parentPath;\n\n    if (parent.isJSXElement() && this.path.container === parent.node.children) {\n      uid = jsxExpressionContainer(uid);\n    }\n\n    this.path.replaceWith(cloneNode(uid));\n    return attachTo.isVariableDeclarator() ? attached.get(\"init\") : attached.get(\"declarations.0.init\");\n  }\n\n}\n\nexports.default = PathHoister;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOpposite = getOpposite;\nexports.getCompletionRecords = getCompletionRecords;\nexports.getSibling = getSibling;\nexports.getPrevSibling = getPrevSibling;\nexports.getNextSibling = getNextSibling;\nexports.getAllNextSiblings = getAllNextSiblings;\nexports.getAllPrevSiblings = getAllPrevSiblings;\nexports.get = get;\nexports._getKey = _getKey;\nexports._getPattern = _getPattern;\nexports.getBindingIdentifiers = getBindingIdentifiers;\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\nexports.getBindingIdentifierPaths = getBindingIdentifierPaths;\nexports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;\n\nvar _index = require(\"./index\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  getBindingIdentifiers: _getBindingIdentifiers,\n  getOuterBindingIdentifiers: _getOuterBindingIdentifiers,\n  isDeclaration,\n  numericLiteral,\n  unaryExpression\n} = _t;\nconst NORMAL_COMPLETION = 0;\nconst BREAK_COMPLETION = 1;\n\nfunction NormalCompletion(path) {\n  return {\n    type: NORMAL_COMPLETION,\n    path\n  };\n}\n\nfunction BreakCompletion(path) {\n  return {\n    type: BREAK_COMPLETION,\n    path\n  };\n}\n\nfunction getOpposite() {\n  if (this.key === \"left\") {\n    return this.getSibling(\"right\");\n  } else if (this.key === \"right\") {\n    return this.getSibling(\"left\");\n  }\n\n  return null;\n}\n\nfunction addCompletionRecords(path, records, context) {\n  if (path) {\n    records.push(..._getCompletionRecords(path, context));\n  }\n\n  return records;\n}\n\nfunction completionRecordForSwitch(cases, records, context) {\n  let lastNormalCompletions = [];\n\n  for (let i = 0; i < cases.length; i++) {\n    const casePath = cases[i];\n\n    const caseCompletions = _getCompletionRecords(casePath, context);\n\n    const normalCompletions = [];\n    const breakCompletions = [];\n\n    for (const c of caseCompletions) {\n      if (c.type === NORMAL_COMPLETION) {\n        normalCompletions.push(c);\n      }\n\n      if (c.type === BREAK_COMPLETION) {\n        breakCompletions.push(c);\n      }\n    }\n\n    if (normalCompletions.length) {\n      lastNormalCompletions = normalCompletions;\n    }\n\n    records.push(...breakCompletions);\n  }\n\n  records.push(...lastNormalCompletions);\n  return records;\n}\n\nfunction normalCompletionToBreak(completions) {\n  completions.forEach(c => {\n    c.type = BREAK_COMPLETION;\n  });\n}\n\nfunction replaceBreakStatementInBreakCompletion(completions, reachable) {\n  completions.forEach(c => {\n    if (c.path.isBreakStatement({\n      label: null\n    })) {\n      if (reachable) {\n        c.path.replaceWith(unaryExpression(\"void\", numericLiteral(0)));\n      } else {\n        c.path.remove();\n      }\n    }\n  });\n}\n\nfunction getStatementListCompletion(paths, context) {\n  const completions = [];\n\n  if (context.canHaveBreak) {\n    let lastNormalCompletions = [];\n\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      const newContext = Object.assign({}, context, {\n        inCaseClause: false\n      });\n\n      if (path.isBlockStatement() && (context.inCaseClause || context.shouldPopulateBreak)) {\n        newContext.shouldPopulateBreak = true;\n      } else {\n        newContext.shouldPopulateBreak = false;\n      }\n\n      const statementCompletions = _getCompletionRecords(path, newContext);\n\n      if (statementCompletions.length > 0 && statementCompletions.every(c => c.type === BREAK_COMPLETION)) {\n        if (lastNormalCompletions.length > 0 && statementCompletions.every(c => c.path.isBreakStatement({\n          label: null\n        }))) {\n          normalCompletionToBreak(lastNormalCompletions);\n          completions.push(...lastNormalCompletions);\n\n          if (lastNormalCompletions.some(c => c.path.isDeclaration())) {\n            completions.push(...statementCompletions);\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n\n          replaceBreakStatementInBreakCompletion(statementCompletions, false);\n        } else {\n          completions.push(...statementCompletions);\n\n          if (!context.shouldPopulateBreak) {\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n        }\n\n        break;\n      }\n\n      if (i === paths.length - 1) {\n        completions.push(...statementCompletions);\n      } else {\n        lastNormalCompletions = [];\n\n        for (let i = 0; i < statementCompletions.length; i++) {\n          const c = statementCompletions[i];\n\n          if (c.type === BREAK_COMPLETION) {\n            completions.push(c);\n          }\n\n          if (c.type === NORMAL_COMPLETION) {\n            lastNormalCompletions.push(c);\n          }\n        }\n      }\n    }\n  } else if (paths.length) {\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const pathCompletions = _getCompletionRecords(paths[i], context);\n\n      if (pathCompletions.length > 1 || pathCompletions.length === 1 && !pathCompletions[0].path.isVariableDeclaration()) {\n        completions.push(...pathCompletions);\n        break;\n      }\n    }\n  }\n\n  return completions;\n}\n\nfunction _getCompletionRecords(path, context) {\n  let records = [];\n\n  if (path.isIfStatement()) {\n    records = addCompletionRecords(path.get(\"consequent\"), records, context);\n    records = addCompletionRecords(path.get(\"alternate\"), records, context);\n  } else if (path.isDoExpression() || path.isFor() || path.isWhile() || path.isLabeledStatement()) {\n    return addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isProgram() || path.isBlockStatement()) {\n    return getStatementListCompletion(path.get(\"body\"), context);\n  } else if (path.isFunction()) {\n    return _getCompletionRecords(path.get(\"body\"), context);\n  } else if (path.isTryStatement()) {\n    records = addCompletionRecords(path.get(\"block\"), records, context);\n    records = addCompletionRecords(path.get(\"handler\"), records, context);\n  } else if (path.isCatchClause()) {\n    return addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isSwitchStatement()) {\n    return completionRecordForSwitch(path.get(\"cases\"), records, context);\n  } else if (path.isSwitchCase()) {\n    return getStatementListCompletion(path.get(\"consequent\"), {\n      canHaveBreak: true,\n      shouldPopulateBreak: false,\n      inCaseClause: true\n    });\n  } else if (path.isBreakStatement()) {\n    records.push(BreakCompletion(path));\n  } else {\n    records.push(NormalCompletion(path));\n  }\n\n  return records;\n}\n\nfunction getCompletionRecords() {\n  const records = _getCompletionRecords(this, {\n    canHaveBreak: false,\n    shouldPopulateBreak: false,\n    inCaseClause: false\n  });\n\n  return records.map(r => r.path);\n}\n\nfunction getSibling(key) {\n  return _index.default.get({\n    parentPath: this.parentPath,\n    parent: this.parent,\n    container: this.container,\n    listKey: this.listKey,\n    key: key\n  }).setContext(this.context);\n}\n\nfunction getPrevSibling() {\n  return this.getSibling(this.key - 1);\n}\n\nfunction getNextSibling() {\n  return this.getSibling(this.key + 1);\n}\n\nfunction getAllNextSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(++_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(++_key);\n  }\n\n  return siblings;\n}\n\nfunction getAllPrevSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(--_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(--_key);\n  }\n\n  return siblings;\n}\n\nfunction get(key, context = true) {\n  if (context === true) context = this.context;\n  const parts = key.split(\".\");\n\n  if (parts.length === 1) {\n    return this._getKey(key, context);\n  } else {\n    return this._getPattern(parts, context);\n  }\n}\n\nfunction _getKey(key, context) {\n  const node = this.node;\n  const container = node[key];\n\n  if (Array.isArray(container)) {\n    return container.map((_, i) => {\n      return _index.default.get({\n        listKey: key,\n        parentPath: this,\n        parent: node,\n        container: container,\n        key: i\n      }).setContext(context);\n    });\n  } else {\n    return _index.default.get({\n      parentPath: this,\n      parent: node,\n      container: node,\n      key: key\n    }).setContext(context);\n  }\n}\n\nfunction _getPattern(parts, context) {\n  let path = this;\n\n  for (const part of parts) {\n    if (part === \".\") {\n      path = path.parentPath;\n    } else {\n      if (Array.isArray(path)) {\n        path = path[part];\n      } else {\n        path = path.get(part, context);\n      }\n    }\n  }\n\n  return path;\n}\n\nfunction getBindingIdentifiers(duplicates) {\n  return _getBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getOuterBindingIdentifiers(duplicates) {\n  return _getOuterBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getBindingIdentifierPaths(duplicates = false, outerOnly = false) {\n  const path = this;\n  const search = [path];\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    if (!id.node) continue;\n    const keys = _getBindingIdentifiers.keys[id.node.type];\n\n    if (id.isIdentifier()) {\n      if (duplicates) {\n        const _ids = ids[id.node.name] = ids[id.node.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.node.name] = id;\n      }\n\n      continue;\n    }\n\n    if (id.isExportDeclaration()) {\n      const declaration = id.get(\"declaration\");\n\n      if (isDeclaration(declaration)) {\n        search.push(declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if (id.isFunctionDeclaration()) {\n        search.push(id.get(\"id\"));\n        continue;\n      }\n\n      if (id.isFunctionExpression()) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const child = id.get(key);\n\n        if (Array.isArray(child)) {\n          search.push(...child);\n        } else if (child.node) {\n          search.push(child);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\nfunction getOuterBindingIdentifierPaths(duplicates) {\n  return this.getBindingIdentifierPaths(duplicates, true);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  addComment: _addComment,\n  addComments: _addComments\n} = _t;\n\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n  const node = this.node;\n  if (!node) return;\n  const trailing = node.trailingComments;\n  const leading = node.leadingComments;\n  if (!trailing && !leading) return;\n  const prev = this.getSibling(this.key - 1);\n  const next = this.getSibling(this.key + 1);\n  const hasPrev = Boolean(prev.node);\n  const hasNext = Boolean(next.node);\n\n  if (hasPrev && !hasNext) {\n    prev.addComments(\"trailing\", trailing);\n  } else if (hasNext && !hasPrev) {\n    next.addComments(\"leading\", leading);\n  }\n}\n\nfunction addComment(type, content, line) {\n  _addComment(this.node, type, content, line);\n}\n\nfunction addComments(type, comments) {\n  _addComments(this.node, type, comments);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.verify = verify;\nexports.merge = merge;\n\nvar virtualTypes = require(\"./path/lib/virtual-types\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  DEPRECATED_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  TYPES\n} = _t;\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const wrapper = virtualTypes[nodeType];\n    if (!wrapper) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(wrapper, fns[type]);\n    }\n\n    delete visitor[nodeType];\n\n    if (wrapper.types) {\n      for (const type of wrapper.types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecatedKey = DEPRECATED_KEYS[nodeType];\n\n    if (deprecatedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecatedKey}`);\n      aliases = [deprecatedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = Object.assign({}, fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(wrapper, fn) {\n  const newFn = function (path) {\n    if (wrapper.checkPath(path)) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"denylist\" || key === \"noScope\" || key === \"skipKeys\" || key === \"blacklist\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Hub {\n  getCode() {}\n\n  getScope() {}\n\n  addHelper() {\n    throw new Error(\"Helpers are not supported by the default hub.\");\n  }\n\n  buildError(node, msg, Error = TypeError) {\n    return new Error(msg);\n  }\n\n}\n\nexports.default = Hub;"],"sourceRoot":""}