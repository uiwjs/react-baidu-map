{"version":3,"sources":["../node_modules/@babel/traverse/lib/path/index.js","../node_modules/@babel/traverse/lib/cache.js","../node_modules/@babel/traverse/lib/path/lib/virtual-types.js","../node_modules/@babel/traverse/lib/scope/index.js","../node_modules/@babel/traverse/lib/scope/binding.js","../node_modules/@babel/traverse/lib/context.js","../node_modules/@babel/traverse/node_modules/debug/src/browser.js","../node_modules/@babel/traverse/node_modules/debug/src/common.js","../node_modules/@babel/traverse/node_modules/ms/index.js","../node_modules/@babel/traverse/lib/scope/lib/renamer.js","../node_modules/@babel/traverse/lib/path/ancestry.js","../node_modules/@babel/traverse/lib/path/inference/index.js","../node_modules/@babel/traverse/lib/path/inference/inferers.js","../node_modules/@babel/traverse/lib/path/inference/inferer-reference.js","../node_modules/@babel/traverse/lib/path/replacement.js","../node_modules/@babel/traverse/lib/path/evaluation.js","../node_modules/@babel/traverse/lib/path/conversion.js","../node_modules/@babel/traverse/lib/path/introspection.js","../node_modules/@babel/traverse/lib/path/context.js","../node_modules/@babel/traverse/lib/path/removal.js","../node_modules/@babel/traverse/lib/path/lib/removal-hooks.js","../node_modules/@babel/traverse/lib/path/modification.js","../node_modules/@babel/traverse/lib/path/lib/hoister.js","../node_modules/@babel/traverse/lib/path/family.js","../node_modules/@babel/traverse/lib/path/comments.js","../node_modules/@babel/traverse/lib/visitors.js","../node_modules/@babel/traverse/lib/hub.js","../node_modules/@babel/traverse/lib/index.js"],"names":["Object","defineProperty","exports","value","default","SHOULD_SKIP","SHOULD_STOP","REMOVED","virtualTypes","require","_debug","_index","_scope","_t","t","_cache","_generator","NodePath_ancestry","NodePath_inference","NodePath_replacement","NodePath_evaluation","NodePath_conversion","NodePath_introspection","NodePath_context","NodePath_removal","NodePath_modification","NodePath_family","NodePath_comments","validate","debug","NodePath","hub","parent","this","contexts","state","opts","_traverseFlags","skipKeys","parentPath","container","listKey","key","node","type","data","context","scope","isScope","val","create","def","undefined","msg","Error","SyntaxError","buildError","visitor","parts","path","inList","unshift","join","message","enabled","getPathLocation","code","v","targetNode","paths","get","Map","set","setup","assign","prototype","TYPES","typeKey","fn","TypeError","indexOf","push","virtualType","checkPath","keys","_default","clear","clearPath","clearScope","WeakMap","ForAwaitStatement","NumericLiteralTypeAnnotation","ExistentialTypeParam","SpreadProperty","RestProperty","Flow","Pure","Generated","User","Var","BlockScoped","Referenced","Scope","Expression","Statement","BindingIdentifier","ReferencedMemberExpression","ReferencedIdentifier","isBinding","isBlockScoped","isExportDeclaration","isExpression","isFlow","isForStatement","isForXStatement","isIdentifier","isImportDeclaration","isImportSpecifier","isJSXIdentifier","isJSXMemberExpression","isMemberExpression","isReferenced","isStatement","isVar","isVariableDeclaration","isCompatTag","react","types","name","grandparent","left","init","isReferencedIdentifier","loc","isUser","isPure","importKind","exportKind","isObjectPattern","isObjectExpression","await","_renamer","_binding","_globals","NOT_LOCAL_BINDING","callExpression","cloneNode","getBindingIdentifiers","identifier","isArrayExpression","isBinary","isClass","isClassBody","isClassDeclaration","isExportAllDeclaration","isExportDefaultDeclaration","isExportNamedDeclaration","isFunctionDeclaration","isLiteral","isMethod","isModuleDeclaration","isModuleSpecifier","isProperty","isPureish","isSuper","isTaggedTemplateExpression","isTemplateLiteral","isThisExpression","isUnaryExpression","matchesPattern","memberExpression","numericLiteral","toIdentifier","unaryExpression","variableDeclaration","variableDeclarator","gatherNodeParts","source","specifiers","length","declaration","local","object","property","callee","properties","argument","id","expression","meta","openingElement","openingFragment","namespace","collectorVisitor","ForStatement","declar","getFunctionParent","getProgramParent","registerBinding","Declaration","registerDeclaration","ImportDeclaration","getBlockParent","references","ForXStatement","isPattern","constantViolations","ExportDeclaration","exit","binding","getBinding","reference","declarations","decl","LabeledStatement","AssignmentExpression","assignments","UpdateExpression","UnaryExpression","operator","bindings","CatchClause","Function","isFunctionExpression","has","params","param","ClassExpression","uid","block","labels","inited","globals","uids","crawling","cached","_parent","isKey","generateUidIdentifier","generateUid","replace","i","_generateUid","hasLabel","hasBinding","hasGlobal","hasReference","program","defaultName","slice","generateUidBasedOnNode","constant","dontPush","isStatic","generateUidIdentifierBasedOnNode","kind","oldName","newName","rename","map","sep","repeat","console","log","violations","arrayLikeIsIterable","isGenericType","helperName","args","addHelper","getLabel","label","isLabeledStatement","registerLabel","specifier","ids","reassign","bindingPath","ReferenceError","declarators","getOuterBindingIdentifiers","getOwnBinding","checkBlockScopedCollisions","registerConstantViolation","constantsOnly","superClass","body","method","right","elements","elem","prop","computed","tag","quasi","expressions","crawl","programParent","_exploded","enter","visit","typeVisitors","traverse","addGlobal","ref","isBlockStatement","isProgram","isSwitchStatement","isLoop","isCatchClause","isFunction","ensureBlock","unique","blockHoist","_blockHoist","dataKey","declarPath","getData","unshiftContainer","setData","declarator","pop","isFunctionParent","isBlockParent","kinds","getBindingIdentifier","previousPath","_previousPath","_this$getBinding","noGlobals","hasOwnBinding","parentHasBinding","hasUid","includes","contextVariables","_this$parent","info","removeOwnBinding","_this$getBinding2","builtin","Binding","referencePaths","referenced","clearValue","hasDeoptedValue","hasValue","_path","VISITOR_KEYS","TraversalContext","queue","priorityQueue","obj","notPriority","shouldVisit","visitQueue","visited","WeakSet","stop","resync","pushContext","add","popContext","nodes","Array","isArray","visitMultiple","visitSingle","formatArgs","useColors","module","humanize","diff","c","color","splice","index","lastC","match","save","namespaces","storage","setItem","removeItem","error","load","r","getItem","process","DEBUG","window","__nwjs","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","RegExp","$1","localStorage","localstorage","destroy","warned","warn","colors","formatters","j","JSON","stringify","env","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","self","curr","Number","Date","ms","prev","coerce","format","formatter","call","logFn","apply","selectColor","extend","enumerable","configurable","delimiter","newDebug","toNamespace","regexp","toString","substring","stack","disable","names","skips","enable","split","len","substr","test","forEach","hash","charCodeAt","Math","abs","s","m","h","d","w","y","plural","msAbs","n","isPlural","round","options","str","String","exec","parseFloat","parse","isFinite","long","fmtLong","fmtShort","_helperSplitExportDeclaration","renameVisitor","assignmentExpression","toExpression","bindingIdentifierEquals","skip","skipKey","skipAllButComputedMethodKey","Renamer","parentDeclar","maybeExportDeclar","find","isDeclaration","isClassExpression","maybeConvertFromExportDeclaration","blockToTraverse","cases","maybeConvertFromClassFunctionDeclaration","maybeConvertFromClassFunctionExpression","findParent","callback","p","getStatementParent","isFile","getEarliestCommonAncestorFrom","getDeepestCommonAncestorFrom","deepest","ancestries","earliest","parentKey","filter","lastCommonIndex","lastCommon","minDepth","Infinity","ancestry","first","depthLoop","shouldMatch","getAncestry","isAncestor","maybeDescendant","isDescendant","maybeAncestor","inType","candidateTypes","getTypeAnnotation","typeAnnotation","_getTypeAnnotation","anyTypeAnnotation","isTypeAnnotation","isVariableDeclarator","declarParent","isForInStatement","stringTypeAnnotation","isForOfStatement","voidTypeAnnotation","typeAnnotationInferringNodes","_inferer","inferer","inferers","validParent","delete","isBaseType","baseName","soft","_isBaseType","couldBeBaseType","isAnyTypeAnnotation","isUnionTypeAnnotation","type2","baseTypeStrictlyMatches","rightArg","isFlowBaseAnnotation","genericName","isGenericTypeAnnotation","isBooleanTypeAnnotation","isEmptyTypeAnnotation","isMixedTypeAnnotation","isNumberTypeAnnotation","isStringTypeAnnotation","isVoidTypeAnnotation","VariableDeclarator","_type","isCallExpression","ArrayExpression","TypeCastExpression","NewExpression","genericTypeAnnotation","TemplateLiteral","NUMBER_UNARY_OPERATORS","numberTypeAnnotation","STRING_UNARY_OPERATORS","BOOLEAN_UNARY_OPERATORS","booleanTypeAnnotation","BinaryExpression","NUMBER_BINARY_OPERATORS","BOOLEAN_BINARY_OPERATORS","unionTypeAnnotation","LogicalExpression","argumentTypes","isTSTypeAnnotation","createTSUnionType","createFlowUnionType","createUnionTypeAnnotation","ConditionalExpression","SequenceExpression","ParenthesizedExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral","nullLiteralTypeAnnotation","RegExpLiteral","ObjectExpression","RestElement","ClassDeclaration","FunctionDeclaration","ArrowFunctionExpression","FunctionExpression","CallExpression","isObjectKeys","arrayTypeAnnotation","isArrayFrom","isObjectValues","isObjectEntries","tupleTypeAnnotation","resolveCall","TaggedTemplateExpression","_infererReference","buildMatchMemberExpression","resolve","is","returnType","functionConstantViolations","getConstantViolationsBefore","testType","getConditionalAnnotation","testConstantViolations","ifStatement","violation","getTypeAnnotationBindingConstantViolations","BOOLEAN_NUMBER_BINARY_OPERATORS","createTypeAnnotationBasedOnTypeof","functions","status","_guessExecutionStatusRelativeTo","inferAnnotationFromBinaryExpression","target","typeofPath","typePath","typeValue","isIfStatement","isConditionalExpression","getParentConditionalPath","isLogicalExpression","isBinaryExpression","replaceWithMultiple","_pathCache$get","_verifyNodeList","inheritLeadingComments","inheritTrailingComments","insertAfter","requeue","remove","replaceWithSourceString","replacement","_parser","err","_codeFrame","codeFrameColumns","start","line","column","removeProperties","replaceWith","removed","_index2","nodePath","isNodeType","canHaveVariableDeclarationOrExpression","canSwapBetweenExpressionAndStatement","expressionStatement","replaceExpressionWithStatements","oldNode","inheritsComments","removeComments","_replaceWith","setScope","_pathCache$get2","nodesAsSequenceExpression","toSequenceExpression","functionParent","isParentAsync","isParentGenerator","arrowFunctionExpression","blockStatement","_helperHoistVariables","completionRecords","getCompletionRecords","isExpressionStatement","loop","generateDeclaredUidIdentifier","pushContainer","returnStatement","arrowFunctionToExpression","newCallee","needToAwaitFunction","hasType","FUNCTION_TYPES","needToYieldFunction","awaitExpression","yieldExpression","replaceInline","_containerInsertAfter","evaluateTruthy","res","evaluate","confident","deoptPath","seen","evaluateCached","deopt","VALID_CALLEES","INVALID_METHODS","existing","resolved","item","isSequenceExpression","exprs","isStringLiteral","isNumericLiteral","isBooleanLiteral","isNullLiteral","evaluateQuasis","quasis","testResult","isExpressionWrapper","end","NaN","prefix","arg","arr","elems","elemValue","props","isObjectMethod","isSpreadElement","wasConfident","leftConfident","rightConfident","pow","func","global","_evaluate","raw","cooked","expr","toComputedKey","stringLiteral","bodyNode","statements","stringPath","arrowFunctionToShadowed","isArrowFunctionExpression","unwrapFunctionEnvironment","buildCodeFrameError","hoistFunctionEnvironment","allowInsertArrow","specCompliant","noNewArrows","thisBinding","checkBinding","objectExpression","thisExpression","_helperFunctionName","binaryExpression","conditionalExpression","jsxIdentifier","metaProperty","restElement","sequenceExpression","spreadElement","_super","super","fnPath","thisEnvFn","isClassProperty","static","inConstructor","getScopeInformation","thisPaths","argumentsPaths","newTargetPaths","superProps","superCalls","allSuperCalls","child","ClassProperty","superBinding","getSuperBinding","superCall","argumentsBinding","buildUndefinedNode","argumentsChild","argsRef","newTargetBinding","targetChild","targetRef","flatSuperProps","reduce","acc","superProp","concat","standardizeSuperProperty","isAssignment","isAssignmentExpression","isCall","getSuperPropBinding","getThisBinding","hasSuperClass","thisChild","thisRef","isJSX","assignmentPath","op","tmp","isUpdateExpression","updateExpr","computedKey","isClassMethod","supers","argsBinding","propName","fnBody","argsList","valueIdent","cacheKey","ThisExpression","JSXIdentifier","isJSXOpeningElement","MemberExpression","MetaProperty","pattern","allowPartial","_matchesPattern","isnt","equals","isType","isFor","isCompletionRecord","allowInsideFunction","isStatementOrBlock","STATEMENT_OR_BLOCK_KEYS","referencesImport","moduleSource","importName","isOptionalMemberExpression","isImportDefaultSpecifier","isImportNamespaceSpecifier","imported","getSource","getCode","willIMaybeExecuteBefore","funcParent","getOuterFunction","_guessExecutionStatusRelativeToDifferentFunctions","commonPath","commonIndex","isExecutionUncertainInList","divergence","keyPosition","allStatus","executionOrderCheckedNodes","dangerous","_resolve","ret","isTypeCastExpression","targetKey","targetName","isNaN","isConstantExpression","isRegExpLiteral","every","isInStrictMode","sourceType","directives","isExecutionUncertain","maxIndex","_call","fns","then","isBlacklisted","isDenylisted","_this$opts$denylist","denylist","blacklist","shouldSkip","shouldStop","noScope","getScope","setContext","_resyncParent","_resyncList","_resyncKey","setKey","newContainer","_resyncRemoved","_markRemoved","_this$node","pathToQueue","maybeQueue","_getQueueContexts","_this$opts","_assertUnremoved","_removeFromScope","_callRemovalHooks","shareCommentsWithSiblings","_remove","removeBinding","_removalHooks","hooks","updateSiblingKeys","isWhile","isSwitchCase","insertBefore","nodes_","isJSXElement","_containerInsertBefore","shouldInsertCurrentNode","_containerInsert","from","to","getSibling","assertExpression","temp","fromIndex","incrementBy","verifiedNodes","hoist","hoister","_hoister","run","_t2","jsxExpressionContainer","referenceVisitor","breakOnScopePaths","mutableBinding","PathHoister","scopes","attachAfter","isCompatibleScope","_getAttachmentPath","targetScope","getAttachmentParentForPath","violationPath","hasOwnParamBindings","getNextScopeAttachmentParent","bodies","getCompatibleScopes","attachTo","getAttachmentPath","attached","children","getOpposite","_getCompletionRecords","canHaveBreak","shouldPopulateBreak","inCaseClause","getPrevSibling","getNextSibling","getAllNextSiblings","_key","sibling","siblings","getAllPrevSiblings","_getKey","_getPattern","_","part","duplicates","_getBindingIdentifiers","_getOuterBindingIdentifiers","getBindingIdentifierPaths","outerOnly","search","shift","_ids","getOuterBindingIdentifierPaths","addCompletionRecords","records","normalCompletionToBreak","completions","replaceBreakStatementInBreakCompletion","reachable","isBreakStatement","getStatementListCompletion","lastNormalCompletions","newContext","statementCompletions","some","pathCompletions","isDoExpression","isTryStatement","caseCompletions","normalCompletions","breakCompletions","completionRecordForSwitch","BreakCompletion","NormalCompletion","trailing","trailingComments","leading","leadingComments","next","hasPrev","Boolean","hasNext","addComments","addComment","content","_addComment","comments","_addComments","explode","verify","merge","visitors","states","wrapper","rootVisitor","visitorType","wrapWithStateOrWrapper","nodeVisitor","mergePair","DEPRECATED_KEYS","FLIPPED_ALIAS_KEYS","nodeType","shouldIgnoreKey","__esModule","ensureEntranceObjects","ensureCallbackArrays","wrapCheck","aliases","deprecatedKey","trace","alias","_verified","validateVisitorMethods","visitorKey","oldVisitor","newVisitor","newFn","arguments","dest","src","Hub","_hub","_context","cache","traverseFast","hasDenylistedType","cheap","clearNode","tree","denylistTypes"],"mappings":"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","file":"static/js/vendors-runtime-traverse.61bc8702.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_SKIP = exports.SHOULD_STOP = exports.REMOVED = void 0;\n\nvar virtualTypes = require(\"./lib/virtual-types\");\n\nvar _debug = require(\"debug\");\n\nvar _index = require(\"../index\");\n\nvar _scope = require(\"../scope\");\n\nvar _t = require(\"@babel/types\");\n\nvar t = _t;\n\nvar _cache = require(\"../cache\");\n\nvar _generator = require(\"@babel/generator\");\n\nvar NodePath_ancestry = require(\"./ancestry\");\n\nvar NodePath_inference = require(\"./inference\");\n\nvar NodePath_replacement = require(\"./replacement\");\n\nvar NodePath_evaluation = require(\"./evaluation\");\n\nvar NodePath_conversion = require(\"./conversion\");\n\nvar NodePath_introspection = require(\"./introspection\");\n\nvar NodePath_context = require(\"./context\");\n\nvar NodePath_removal = require(\"./removal\");\n\nvar NodePath_modification = require(\"./modification\");\n\nvar NodePath_family = require(\"./family\");\n\nvar NodePath_comments = require(\"./comments\");\n\nconst {\n  validate\n} = _t;\n\nconst debug = _debug(\"babel\");\n\nconst REMOVED = 1 << 0;\nexports.REMOVED = REMOVED;\nconst SHOULD_STOP = 1 << 1;\nexports.SHOULD_STOP = SHOULD_STOP;\nconst SHOULD_SKIP = 1 << 2;\nexports.SHOULD_SKIP = SHOULD_SKIP;\n\nclass NodePath {\n  constructor(hub, parent) {\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key\n  }) {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n\n    const targetNode = container[key];\n\n    let paths = _cache.path.get(parent);\n\n    if (!paths) {\n      paths = new Map();\n\n      _cache.path.set(parent, paths);\n    }\n\n    let path = paths.get(targetNode);\n\n    if (!path) {\n      path = new NodePath(hub, parent);\n      if (targetNode) paths.set(targetNode, path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n    return path;\n  }\n\n  getScope(scope) {\n    return this.isScope() ? new _scope.default(this) : scope;\n  }\n\n  setData(key, val) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    return this.data[key] = val;\n  }\n\n  getData(key, def) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n\n  buildCodeFrameError(msg, Error = SyntaxError) {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n\n  traverse(visitor, state) {\n    (0, _index.default)(this.node, visitor, this.scope, state, this);\n  }\n\n  set(key, node) {\n    validate(this.node, key, node);\n    this.node[key] = node;\n  }\n\n  getPathLocation() {\n    const parts = [];\n    let path = this;\n\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while (path = path.parentPath);\n\n    return parts.join(\".\");\n  }\n\n  debug(message) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n\n  toString() {\n    return (0, _generator.default)(this.node).code;\n  }\n\n  get inList() {\n    return !!this.listKey;\n  }\n\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n  }\n\n  get parentKey() {\n    return this.listKey || this.key;\n  }\n\n  get shouldSkip() {\n    return !!(this._traverseFlags & SHOULD_SKIP);\n  }\n\n  set shouldSkip(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_SKIP;\n    } else {\n      this._traverseFlags &= ~SHOULD_SKIP;\n    }\n  }\n\n  get shouldStop() {\n    return !!(this._traverseFlags & SHOULD_STOP);\n  }\n\n  set shouldStop(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_STOP;\n    } else {\n      this._traverseFlags &= ~SHOULD_STOP;\n    }\n  }\n\n  get removed() {\n    return !!(this._traverseFlags & REMOVED);\n  }\n\n  set removed(v) {\n    if (v) {\n      this._traverseFlags |= REMOVED;\n    } else {\n      this._traverseFlags &= ~REMOVED;\n    }\n  }\n\n}\n\nObject.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);\n\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  const fn = t[typeKey];\n\n  NodePath.prototype[typeKey] = function (opts) {\n    return fn(this.node, opts);\n  };\n\n  NodePath.prototype[`assert${type}`] = function (opts) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\n\nfor (const type of Object.keys(virtualTypes)) {\n  if (type[0] === \"_\") continue;\n  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);\n  const virtualType = virtualTypes[type];\n\n  NodePath.prototype[`is${type}`] = function (opts) {\n    return virtualType.checkPath(this, opts);\n  };\n}\n\nvar _default = NodePath;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nexports.clearPath = clearPath;\nexports.clearScope = clearScope;\nexports.scope = exports.path = void 0;\nlet path = new WeakMap();\nexports.path = path;\nlet scope = new WeakMap();\nexports.scope = scope;\n\nfunction clear() {\n  clearPath();\n  clearScope();\n}\n\nfunction clearPath() {\n  exports.path = path = new WeakMap();\n}\n\nfunction clearScope() {\n  exports.scope = scope = new WeakMap();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ForAwaitStatement = exports.NumericLiteralTypeAnnotation = exports.ExistentialTypeParam = exports.SpreadProperty = exports.RestProperty = exports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isBinding,\n  isBlockScoped,\n  isExportDeclaration,\n  isExpression,\n  isFlow,\n  isForStatement,\n  isForXStatement,\n  isIdentifier,\n  isImportDeclaration,\n  isImportSpecifier,\n  isJSXIdentifier,\n  isJSXMemberExpression,\n  isMemberExpression,\n  isReferenced,\n  isScope,\n  isStatement,\n  isVar,\n  isVariableDeclaration,\n  react\n} = _t;\nconst {\n  isCompatTag\n} = react;\nconst ReferencedIdentifier = {\n  types: [\"Identifier\", \"JSXIdentifier\"],\n\n  checkPath(path, opts) {\n    const {\n      node,\n      parent\n    } = path;\n\n    if (!isIdentifier(node, opts) && !isJSXMemberExpression(parent, opts)) {\n      if (isJSXIdentifier(node, opts)) {\n        if (isCompatTag(node.name)) return false;\n      } else {\n        return false;\n      }\n    }\n\n    return isReferenced(node, parent, path.parentPath.parent);\n  }\n\n};\nexports.ReferencedIdentifier = ReferencedIdentifier;\nconst ReferencedMemberExpression = {\n  types: [\"MemberExpression\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    return isMemberExpression(node) && isReferenced(node, parent);\n  }\n\n};\nexports.ReferencedMemberExpression = ReferencedMemberExpression;\nconst BindingIdentifier = {\n  types: [\"Identifier\"],\n\n  checkPath(path) {\n    const {\n      node,\n      parent\n    } = path;\n    const grandparent = path.parentPath.parent;\n    return isIdentifier(node) && isBinding(node, parent, grandparent);\n  }\n\n};\nexports.BindingIdentifier = BindingIdentifier;\nconst Statement = {\n  types: [\"Statement\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    if (isStatement(node)) {\n      if (isVariableDeclaration(node)) {\n        if (isForXStatement(parent, {\n          left: node\n        })) return false;\n        if (isForStatement(parent, {\n          init: node\n        })) return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Statement = Statement;\nconst Expression = {\n  types: [\"Expression\"],\n\n  checkPath(path) {\n    if (path.isIdentifier()) {\n      return path.isReferencedIdentifier();\n    } else {\n      return isExpression(path.node);\n    }\n  }\n\n};\nexports.Expression = Expression;\nconst Scope = {\n  types: [\"Scopable\", \"Pattern\"],\n\n  checkPath(path) {\n    return isScope(path.node, path.parent);\n  }\n\n};\nexports.Scope = Scope;\nconst Referenced = {\n  checkPath(path) {\n    return isReferenced(path.node, path.parent);\n  }\n\n};\nexports.Referenced = Referenced;\nconst BlockScoped = {\n  checkPath(path) {\n    return isBlockScoped(path.node);\n  }\n\n};\nexports.BlockScoped = BlockScoped;\nconst Var = {\n  types: [\"VariableDeclaration\"],\n\n  checkPath(path) {\n    return isVar(path.node);\n  }\n\n};\nexports.Var = Var;\nconst User = {\n  checkPath(path) {\n    return path.node && !!path.node.loc;\n  }\n\n};\nexports.User = User;\nconst Generated = {\n  checkPath(path) {\n    return !path.isUser();\n  }\n\n};\nexports.Generated = Generated;\nconst Pure = {\n  checkPath(path, opts) {\n    return path.scope.isPure(path.node, opts);\n  }\n\n};\nexports.Pure = Pure;\nconst Flow = {\n  types: [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"],\n\n  checkPath({\n    node\n  }) {\n    if (isFlow(node)) {\n      return true;\n    } else if (isImportDeclaration(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else if (isExportDeclaration(node)) {\n      return node.exportKind === \"type\";\n    } else if (isImportSpecifier(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Flow = Flow;\nconst RestProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectPattern();\n  }\n\n};\nexports.RestProperty = RestProperty;\nconst SpreadProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectExpression();\n  }\n\n};\nexports.SpreadProperty = SpreadProperty;\nconst ExistentialTypeParam = {\n  types: [\"ExistsTypeAnnotation\"]\n};\nexports.ExistentialTypeParam = ExistentialTypeParam;\nconst NumericLiteralTypeAnnotation = {\n  types: [\"NumberLiteralTypeAnnotation\"]\n};\nexports.NumericLiteralTypeAnnotation = NumericLiteralTypeAnnotation;\nconst ForAwaitStatement = {\n  types: [\"ForOfStatement\"],\n\n  checkPath({\n    node\n  }) {\n    return node.await === true;\n  }\n\n};\nexports.ForAwaitStatement = ForAwaitStatement;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renamer = require(\"./lib/renamer\");\n\nvar _index = require(\"../index\");\n\nvar _binding = require(\"./binding\");\n\nvar _globals = require(\"globals\");\n\nvar _t = require(\"@babel/types\");\n\nvar _cache = require(\"../cache\");\n\nconst {\n  NOT_LOCAL_BINDING,\n  callExpression,\n  cloneNode,\n  getBindingIdentifiers,\n  identifier,\n  isArrayExpression,\n  isBinary,\n  isClass,\n  isClassBody,\n  isClassDeclaration,\n  isExportAllDeclaration,\n  isExportDefaultDeclaration,\n  isExportNamedDeclaration,\n  isFunctionDeclaration,\n  isIdentifier,\n  isImportDeclaration,\n  isLiteral,\n  isMethod,\n  isModuleDeclaration,\n  isModuleSpecifier,\n  isObjectExpression,\n  isProperty,\n  isPureish,\n  isSuper,\n  isTaggedTemplateExpression,\n  isTemplateLiteral,\n  isThisExpression,\n  isUnaryExpression,\n  isVariableDeclaration,\n  matchesPattern,\n  memberExpression,\n  numericLiteral,\n  toIdentifier,\n  unaryExpression,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nfunction gatherNodeParts(node, parts) {\n  switch (node == null ? void 0 : node.type) {\n    default:\n      if (isModuleDeclaration(node)) {\n        if ((isExportAllDeclaration(node) || isExportNamedDeclaration(node) || isImportDeclaration(node)) && node.source) {\n          gatherNodeParts(node.source, parts);\n        } else if ((isExportNamedDeclaration(node) || isImportDeclaration(node)) && node.specifiers && node.specifiers.length) {\n          for (const e of node.specifiers) gatherNodeParts(e, parts);\n        } else if ((isExportDefaultDeclaration(node) || isExportNamedDeclaration(node)) && node.declaration) {\n          gatherNodeParts(node.declaration, parts);\n        }\n      } else if (isModuleSpecifier(node)) {\n        gatherNodeParts(node.local, parts);\n      } else if (isLiteral(node)) {\n        parts.push(node.value);\n      }\n\n      break;\n\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n    case \"JSXMemberExpression\":\n      gatherNodeParts(node.object, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"Identifier\":\n    case \"JSXIdentifier\":\n      parts.push(node.name);\n      break;\n\n    case \"CallExpression\":\n    case \"OptionalCallExpression\":\n    case \"NewExpression\":\n      gatherNodeParts(node.callee, parts);\n      break;\n\n    case \"ObjectExpression\":\n    case \"ObjectPattern\":\n      for (const e of node.properties) {\n        gatherNodeParts(e, parts);\n      }\n\n      break;\n\n    case \"SpreadElement\":\n    case \"RestElement\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"ObjectProperty\":\n    case \"ObjectMethod\":\n    case \"ClassProperty\":\n    case \"ClassMethod\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n      gatherNodeParts(node.key, parts);\n      break;\n\n    case \"ThisExpression\":\n      parts.push(\"this\");\n      break;\n\n    case \"Super\":\n      parts.push(\"super\");\n      break;\n\n    case \"Import\":\n      parts.push(\"import\");\n      break;\n\n    case \"DoExpression\":\n      parts.push(\"do\");\n      break;\n\n    case \"YieldExpression\":\n      parts.push(\"yield\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AwaitExpression\":\n      parts.push(\"await\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AssignmentExpression\":\n      gatherNodeParts(node.left, parts);\n      break;\n\n    case \"VariableDeclarator\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"FunctionExpression\":\n    case \"FunctionDeclaration\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"PrivateName\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"ParenthesizedExpression\":\n      gatherNodeParts(node.expression, parts);\n      break;\n\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"MetaProperty\":\n      gatherNodeParts(node.meta, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"JSXElement\":\n      gatherNodeParts(node.openingElement, parts);\n      break;\n\n    case \"JSXOpeningElement\":\n      parts.push(node.name);\n      break;\n\n    case \"JSXFragment\":\n      gatherNodeParts(node.openingFragment, parts);\n      break;\n\n    case \"JSXOpeningFragment\":\n      parts.push(\"Fragment\");\n      break;\n\n    case \"JSXNamespacedName\":\n      gatherNodeParts(node.namespace, parts);\n      gatherNodeParts(node.name, parts);\n      break;\n  }\n}\n\nconst collectorVisitor = {\n  ForStatement(path) {\n    const declar = path.get(\"init\");\n\n    if (declar.isVar()) {\n      const {\n        scope\n      } = path;\n      const parentScope = scope.getFunctionParent() || scope.getProgramParent();\n      parentScope.registerBinding(\"var\", declar);\n    }\n  },\n\n  Declaration(path) {\n    if (path.isBlockScoped()) return;\n    if (path.isImportDeclaration()) return;\n    if (path.isExportDeclaration()) return;\n    const parent = path.scope.getFunctionParent() || path.scope.getProgramParent();\n    parent.registerDeclaration(path);\n  },\n\n  ImportDeclaration(path) {\n    const parent = path.scope.getBlockParent();\n    parent.registerDeclaration(path);\n  },\n\n  ReferencedIdentifier(path, state) {\n    state.references.push(path);\n  },\n\n  ForXStatement(path, state) {\n    const left = path.get(\"left\");\n\n    if (left.isPattern() || left.isIdentifier()) {\n      state.constantViolations.push(path);\n    } else if (left.isVar()) {\n      const {\n        scope\n      } = path;\n      const parentScope = scope.getFunctionParent() || scope.getProgramParent();\n      parentScope.registerBinding(\"var\", left);\n    }\n  },\n\n  ExportDeclaration: {\n    exit(path) {\n      const {\n        node,\n        scope\n      } = path;\n      if (isExportAllDeclaration(node)) return;\n      const declar = node.declaration;\n\n      if (isClassDeclaration(declar) || isFunctionDeclaration(declar)) {\n        const id = declar.id;\n        if (!id) return;\n        const binding = scope.getBinding(id.name);\n        binding == null ? void 0 : binding.reference(path);\n      } else if (isVariableDeclaration(declar)) {\n        for (const decl of declar.declarations) {\n          for (const name of Object.keys(getBindingIdentifiers(decl))) {\n            const binding = scope.getBinding(name);\n            binding == null ? void 0 : binding.reference(path);\n          }\n        }\n      }\n    }\n\n  },\n\n  LabeledStatement(path) {\n    path.scope.getBlockParent().registerDeclaration(path);\n  },\n\n  AssignmentExpression(path, state) {\n    state.assignments.push(path);\n  },\n\n  UpdateExpression(path, state) {\n    state.constantViolations.push(path);\n  },\n\n  UnaryExpression(path, state) {\n    if (path.node.operator === \"delete\") {\n      state.constantViolations.push(path);\n    }\n  },\n\n  BlockScoped(path) {\n    let scope = path.scope;\n    if (scope.path === path) scope = scope.parent;\n    const parent = scope.getBlockParent();\n    parent.registerDeclaration(path);\n\n    if (path.isClassDeclaration() && path.node.id) {\n      const id = path.node.id;\n      const name = id.name;\n      path.scope.bindings[name] = path.scope.parent.getBinding(name);\n    }\n  },\n\n  CatchClause(path) {\n    path.scope.registerBinding(\"let\", path);\n  },\n\n  Function(path) {\n    if (path.isFunctionExpression() && path.has(\"id\") && !path.get(\"id\").node[NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path.get(\"id\"), path);\n    }\n\n    const params = path.get(\"params\");\n\n    for (const param of params) {\n      path.scope.registerBinding(\"param\", param);\n    }\n  },\n\n  ClassExpression(path) {\n    if (path.has(\"id\") && !path.get(\"id\").node[NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path);\n    }\n  }\n\n};\nlet uid = 0;\n\nclass Scope {\n  constructor(path) {\n    this.uid = void 0;\n    this.path = void 0;\n    this.block = void 0;\n    this.labels = void 0;\n    this.inited = void 0;\n    this.bindings = void 0;\n    this.references = void 0;\n    this.globals = void 0;\n    this.uids = void 0;\n    this.data = void 0;\n    this.crawling = void 0;\n    const {\n      node\n    } = path;\n\n    const cached = _cache.scope.get(node);\n\n    if ((cached == null ? void 0 : cached.path) === path) {\n      return cached;\n    }\n\n    _cache.scope.set(node, this);\n\n    this.uid = uid++;\n    this.block = node;\n    this.path = path;\n    this.labels = new Map();\n    this.inited = false;\n  }\n\n  get parent() {\n    var _parent;\n\n    let parent,\n        path = this.path;\n\n    do {\n      const isKey = path.key === \"key\";\n      path = path.parentPath;\n      if (isKey && path.isMethod()) path = path.parentPath;\n      if (path && path.isScope()) parent = path;\n    } while (path && !parent);\n\n    return (_parent = parent) == null ? void 0 : _parent.scope;\n  }\n\n  get parentBlock() {\n    return this.path.parent;\n  }\n\n  get hub() {\n    return this.path.hub;\n  }\n\n  traverse(node, opts, state) {\n    (0, _index.default)(node, opts, this, state, this.path);\n  }\n\n  generateDeclaredUidIdentifier(name) {\n    const id = this.generateUidIdentifier(name);\n    this.push({\n      id\n    });\n    return cloneNode(id);\n  }\n\n  generateUidIdentifier(name) {\n    return identifier(this.generateUid(name));\n  }\n\n  generateUid(name = \"temp\") {\n    name = toIdentifier(name).replace(/^_+/, \"\").replace(/[0-9]+$/g, \"\");\n    let uid;\n    let i = 1;\n\n    do {\n      uid = this._generateUid(name, i);\n      i++;\n    } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));\n\n    const program = this.getProgramParent();\n    program.references[uid] = true;\n    program.uids[uid] = true;\n    return uid;\n  }\n\n  _generateUid(name, i) {\n    let id = name;\n    if (i > 1) id += i;\n    return `_${id}`;\n  }\n\n  generateUidBasedOnNode(node, defaultName) {\n    const parts = [];\n    gatherNodeParts(node, parts);\n    let id = parts.join(\"$\");\n    id = id.replace(/^_/, \"\") || defaultName || \"ref\";\n    return this.generateUid(id.slice(0, 20));\n  }\n\n  generateUidIdentifierBasedOnNode(node, defaultName) {\n    return identifier(this.generateUidBasedOnNode(node, defaultName));\n  }\n\n  isStatic(node) {\n    if (isThisExpression(node) || isSuper(node)) {\n      return true;\n    }\n\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding) {\n        return binding.constant;\n      } else {\n        return this.hasBinding(node.name);\n      }\n    }\n\n    return false;\n  }\n\n  maybeGenerateMemoised(node, dontPush) {\n    if (this.isStatic(node)) {\n      return null;\n    } else {\n      const id = this.generateUidIdentifierBasedOnNode(node);\n\n      if (!dontPush) {\n        this.push({\n          id\n        });\n        return cloneNode(id);\n      }\n\n      return id;\n    }\n  }\n\n  checkBlockScopedCollisions(local, kind, name, id) {\n    if (kind === \"param\") return;\n    if (local.kind === \"local\") return;\n    const duplicate = kind === \"let\" || local.kind === \"let\" || local.kind === \"const\" || local.kind === \"module\" || local.kind === \"param\" && (kind === \"let\" || kind === \"const\");\n\n    if (duplicate) {\n      throw this.hub.buildError(id, `Duplicate declaration \"${name}\"`, TypeError);\n    }\n  }\n\n  rename(oldName, newName, block) {\n    const binding = this.getBinding(oldName);\n\n    if (binding) {\n      newName = newName || this.generateUidIdentifier(oldName).name;\n      return new _renamer.default(binding, oldName, newName).rename(block);\n    }\n  }\n\n  _renameFromMap(map, oldName, newName, value) {\n    if (map[oldName]) {\n      map[newName] = value;\n      map[oldName] = null;\n    }\n  }\n\n  dump() {\n    const sep = \"-\".repeat(60);\n    console.log(sep);\n    let scope = this;\n\n    do {\n      console.log(\"#\", scope.block.type);\n\n      for (const name of Object.keys(scope.bindings)) {\n        const binding = scope.bindings[name];\n        console.log(\" -\", name, {\n          constant: binding.constant,\n          references: binding.references,\n          violations: binding.constantViolations.length,\n          kind: binding.kind\n        });\n      }\n    } while (scope = scope.parent);\n\n    console.log(sep);\n  }\n\n  toArray(node, i, arrayLikeIsIterable) {\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding != null && binding.constant && binding.path.isGenericType(\"Array\")) {\n        return node;\n      }\n    }\n\n    if (isArrayExpression(node)) {\n      return node;\n    }\n\n    if (isIdentifier(node, {\n      name: \"arguments\"\n    })) {\n      return callExpression(memberExpression(memberExpression(memberExpression(identifier(\"Array\"), identifier(\"prototype\")), identifier(\"slice\")), identifier(\"call\")), [node]);\n    }\n\n    let helperName;\n    const args = [node];\n\n    if (i === true) {\n      helperName = \"toConsumableArray\";\n    } else if (i) {\n      args.push(numericLiteral(i));\n      helperName = \"slicedToArray\";\n    } else {\n      helperName = \"toArray\";\n    }\n\n    if (arrayLikeIsIterable) {\n      args.unshift(this.hub.addHelper(helperName));\n      helperName = \"maybeArrayLike\";\n    }\n\n    return callExpression(this.hub.addHelper(helperName), args);\n  }\n\n  hasLabel(name) {\n    return !!this.getLabel(name);\n  }\n\n  getLabel(name) {\n    return this.labels.get(name);\n  }\n\n  registerLabel(path) {\n    this.labels.set(path.node.label.name, path);\n  }\n\n  registerDeclaration(path) {\n    if (path.isLabeledStatement()) {\n      this.registerLabel(path);\n    } else if (path.isFunctionDeclaration()) {\n      this.registerBinding(\"hoisted\", path.get(\"id\"), path);\n    } else if (path.isVariableDeclaration()) {\n      const declarations = path.get(\"declarations\");\n\n      for (const declar of declarations) {\n        this.registerBinding(path.node.kind, declar);\n      }\n    } else if (path.isClassDeclaration()) {\n      this.registerBinding(\"let\", path);\n    } else if (path.isImportDeclaration()) {\n      const specifiers = path.get(\"specifiers\");\n\n      for (const specifier of specifiers) {\n        this.registerBinding(\"module\", specifier);\n      }\n    } else if (path.isExportDeclaration()) {\n      const declar = path.get(\"declaration\");\n\n      if (declar.isClassDeclaration() || declar.isFunctionDeclaration() || declar.isVariableDeclaration()) {\n        this.registerDeclaration(declar);\n      }\n    } else {\n      this.registerBinding(\"unknown\", path);\n    }\n  }\n\n  buildUndefinedNode() {\n    return unaryExpression(\"void\", numericLiteral(0), true);\n  }\n\n  registerConstantViolation(path) {\n    const ids = path.getBindingIdentifiers();\n\n    for (const name of Object.keys(ids)) {\n      const binding = this.getBinding(name);\n      if (binding) binding.reassign(path);\n    }\n  }\n\n  registerBinding(kind, path, bindingPath = path) {\n    if (!kind) throw new ReferenceError(\"no `kind`\");\n\n    if (path.isVariableDeclaration()) {\n      const declarators = path.get(\"declarations\");\n\n      for (const declar of declarators) {\n        this.registerBinding(kind, declar);\n      }\n\n      return;\n    }\n\n    const parent = this.getProgramParent();\n    const ids = path.getOuterBindingIdentifiers(true);\n\n    for (const name of Object.keys(ids)) {\n      parent.references[name] = true;\n\n      for (const id of ids[name]) {\n        const local = this.getOwnBinding(name);\n\n        if (local) {\n          if (local.identifier === id) continue;\n          this.checkBlockScopedCollisions(local, kind, name, id);\n        }\n\n        if (local) {\n          this.registerConstantViolation(bindingPath);\n        } else {\n          this.bindings[name] = new _binding.default({\n            identifier: id,\n            scope: this,\n            path: bindingPath,\n            kind: kind\n          });\n        }\n      }\n    }\n  }\n\n  addGlobal(node) {\n    this.globals[node.name] = node;\n  }\n\n  hasUid(name) {\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasGlobal(name) {\n    let scope = this;\n\n    do {\n      if (scope.globals[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasReference(name) {\n    return !!this.getProgramParent().references[name];\n  }\n\n  isPure(node, constantsOnly) {\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n      if (!binding) return false;\n      if (constantsOnly) return binding.constant;\n      return true;\n    } else if (isClass(node)) {\n      if (node.superClass && !this.isPure(node.superClass, constantsOnly)) {\n        return false;\n      }\n\n      return this.isPure(node.body, constantsOnly);\n    } else if (isClassBody(node)) {\n      for (const method of node.body) {\n        if (!this.isPure(method, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isBinary(node)) {\n      return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);\n    } else if (isArrayExpression(node)) {\n      for (const elem of node.elements) {\n        if (!this.isPure(elem, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isObjectExpression(node)) {\n      for (const prop of node.properties) {\n        if (!this.isPure(prop, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isMethod(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      if (node.kind === \"get\" || node.kind === \"set\") return false;\n      return true;\n    } else if (isProperty(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      return this.isPure(node.value, constantsOnly);\n    } else if (isUnaryExpression(node)) {\n      return this.isPure(node.argument, constantsOnly);\n    } else if (isTaggedTemplateExpression(node)) {\n      return matchesPattern(node.tag, \"String.raw\") && !this.hasBinding(\"String\", true) && this.isPure(node.quasi, constantsOnly);\n    } else if (isTemplateLiteral(node)) {\n      for (const expression of node.expressions) {\n        if (!this.isPure(expression, constantsOnly)) return false;\n      }\n\n      return true;\n    } else {\n      return isPureish(node);\n    }\n  }\n\n  setData(key, val) {\n    return this.data[key] = val;\n  }\n\n  getData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) return data;\n    } while (scope = scope.parent);\n  }\n\n  removeData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) scope.data[key] = null;\n    } while (scope = scope.parent);\n  }\n\n  init() {\n    if (!this.inited) {\n      this.inited = true;\n      this.crawl();\n    }\n  }\n\n  crawl() {\n    const path = this.path;\n    this.references = Object.create(null);\n    this.bindings = Object.create(null);\n    this.globals = Object.create(null);\n    this.uids = Object.create(null);\n    this.data = Object.create(null);\n    const programParent = this.getProgramParent();\n    if (programParent.crawling) return;\n    const state = {\n      references: [],\n      constantViolations: [],\n      assignments: []\n    };\n    this.crawling = true;\n\n    if (path.type !== \"Program\" && collectorVisitor._exploded) {\n      for (const visit of collectorVisitor.enter) {\n        visit(path, state);\n      }\n\n      const typeVisitors = collectorVisitor[path.type];\n\n      if (typeVisitors) {\n        for (const visit of typeVisitors.enter) {\n          visit(path, state);\n        }\n      }\n    }\n\n    path.traverse(collectorVisitor, state);\n    this.crawling = false;\n\n    for (const path of state.assignments) {\n      const ids = path.getBindingIdentifiers();\n\n      for (const name of Object.keys(ids)) {\n        if (path.scope.getBinding(name)) continue;\n        programParent.addGlobal(ids[name]);\n      }\n\n      path.scope.registerConstantViolation(path);\n    }\n\n    for (const ref of state.references) {\n      const binding = ref.scope.getBinding(ref.node.name);\n\n      if (binding) {\n        binding.reference(ref);\n      } else {\n        programParent.addGlobal(ref.node);\n      }\n    }\n\n    for (const path of state.constantViolations) {\n      path.scope.registerConstantViolation(path);\n    }\n  }\n\n  push(opts) {\n    let path = this.path;\n\n    if (!path.isBlockStatement() && !path.isProgram()) {\n      path = this.getBlockParent().path;\n    }\n\n    if (path.isSwitchStatement()) {\n      path = (this.getFunctionParent() || this.getProgramParent()).path;\n    }\n\n    if (path.isLoop() || path.isCatchClause() || path.isFunction()) {\n      path.ensureBlock();\n      path = path.get(\"body\");\n    }\n\n    const unique = opts.unique;\n    const kind = opts.kind || \"var\";\n    const blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;\n    const dataKey = `declaration:${kind}:${blockHoist}`;\n    let declarPath = !unique && path.getData(dataKey);\n\n    if (!declarPath) {\n      const declar = variableDeclaration(kind, []);\n      declar._blockHoist = blockHoist;\n      [declarPath] = path.unshiftContainer(\"body\", [declar]);\n      if (!unique) path.setData(dataKey, declarPath);\n    }\n\n    const declarator = variableDeclarator(opts.id, opts.init);\n    declarPath.node.declarations.push(declarator);\n    this.registerBinding(kind, declarPath.get(\"declarations\").pop());\n  }\n\n  getProgramParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isProgram()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"Couldn't find a Program\");\n  }\n\n  getFunctionParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isFunctionParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    return null;\n  }\n\n  getBlockParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isBlockParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\");\n  }\n\n  getAllBindings() {\n    const ids = Object.create(null);\n    let scope = this;\n\n    do {\n      for (const key of Object.keys(scope.bindings)) {\n        if (key in ids === false) {\n          ids[key] = scope.bindings[key];\n        }\n      }\n\n      scope = scope.parent;\n    } while (scope);\n\n    return ids;\n  }\n\n  getAllBindingsOfKind(...kinds) {\n    const ids = Object.create(null);\n\n    for (const kind of kinds) {\n      let scope = this;\n\n      do {\n        for (const name of Object.keys(scope.bindings)) {\n          const binding = scope.bindings[name];\n          if (binding.kind === kind) ids[name] = binding;\n        }\n\n        scope = scope.parent;\n      } while (scope);\n    }\n\n    return ids;\n  }\n\n  bindingIdentifierEquals(name, node) {\n    return this.getBindingIdentifier(name) === node;\n  }\n\n  getBinding(name) {\n    let scope = this;\n    let previousPath;\n\n    do {\n      const binding = scope.getOwnBinding(name);\n\n      if (binding) {\n        var _previousPath;\n\n        if ((_previousPath = previousPath) != null && _previousPath.isPattern() && binding.kind !== \"param\") {} else {\n          return binding;\n        }\n      }\n\n      previousPath = scope.path;\n    } while (scope = scope.parent);\n  }\n\n  getOwnBinding(name) {\n    return this.bindings[name];\n  }\n\n  getBindingIdentifier(name) {\n    var _this$getBinding;\n\n    return (_this$getBinding = this.getBinding(name)) == null ? void 0 : _this$getBinding.identifier;\n  }\n\n  getOwnBindingIdentifier(name) {\n    const binding = this.bindings[name];\n    return binding == null ? void 0 : binding.identifier;\n  }\n\n  hasOwnBinding(name) {\n    return !!this.getOwnBinding(name);\n  }\n\n  hasBinding(name, noGlobals) {\n    if (!name) return false;\n    if (this.hasOwnBinding(name)) return true;\n    if (this.parentHasBinding(name, noGlobals)) return true;\n    if (this.hasUid(name)) return true;\n    if (!noGlobals && Scope.globals.includes(name)) return true;\n    if (!noGlobals && Scope.contextVariables.includes(name)) return true;\n    return false;\n  }\n\n  parentHasBinding(name, noGlobals) {\n    var _this$parent;\n\n    return (_this$parent = this.parent) == null ? void 0 : _this$parent.hasBinding(name, noGlobals);\n  }\n\n  moveBindingTo(name, scope) {\n    const info = this.getBinding(name);\n\n    if (info) {\n      info.scope.removeOwnBinding(name);\n      info.scope = scope;\n      scope.bindings[name] = info;\n    }\n  }\n\n  removeOwnBinding(name) {\n    delete this.bindings[name];\n  }\n\n  removeBinding(name) {\n    var _this$getBinding2;\n\n    (_this$getBinding2 = this.getBinding(name)) == null ? void 0 : _this$getBinding2.scope.removeOwnBinding(name);\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) {\n        scope.uids[name] = false;\n      }\n    } while (scope = scope.parent);\n  }\n\n}\n\nexports.default = Scope;\nScope.globals = Object.keys(_globals.builtin);\nScope.contextVariables = [\"arguments\", \"undefined\", \"Infinity\", \"NaN\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Binding {\n  constructor({\n    identifier,\n    scope,\n    path,\n    kind\n  }) {\n    this.identifier = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.kind = void 0;\n    this.constantViolations = [];\n    this.constant = true;\n    this.referencePaths = [];\n    this.referenced = false;\n    this.references = 0;\n    this.identifier = identifier;\n    this.scope = scope;\n    this.path = path;\n    this.kind = kind;\n    this.clearValue();\n  }\n\n  deoptValue() {\n    this.clearValue();\n    this.hasDeoptedValue = true;\n  }\n\n  setValue(value) {\n    if (this.hasDeoptedValue) return;\n    this.hasValue = true;\n    this.value = value;\n  }\n\n  clearValue() {\n    this.hasDeoptedValue = false;\n    this.hasValue = false;\n    this.value = null;\n  }\n\n  reassign(path) {\n    this.constant = false;\n\n    if (this.constantViolations.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.constantViolations.push(path);\n  }\n\n  reference(path) {\n    if (this.referencePaths.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.referenced = true;\n    this.references++;\n    this.referencePaths.push(path);\n  }\n\n  dereference() {\n    this.references--;\n    this.referenced = !!this.references;\n  }\n\n}\n\nexports.default = Binding;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = require(\"./path\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nclass TraversalContext {\n  constructor(scope, opts, state, parentPath) {\n    this.queue = null;\n    this.priorityQueue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  shouldVisit(node) {\n    const opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n    if (opts[node.type]) return true;\n    const keys = VISITOR_KEYS[node.type];\n    if (!(keys != null && keys.length)) return false;\n\n    for (const key of keys) {\n      if (node[key]) return true;\n    }\n\n    return false;\n  }\n\n  create(node, obj, key, listKey) {\n    return _path.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container: obj,\n      key: key,\n      listKey\n    });\n  }\n\n  maybeQueue(path, notPriority) {\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  }\n\n  visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n    const queue = [];\n\n    for (let key = 0; key < container.length; key++) {\n      const node = container[key];\n\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  }\n\n  visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  }\n\n  visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n    const visited = new WeakSet();\n    let stop = false;\n\n    for (const path of queue) {\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n      const {\n        node\n      } = path;\n      if (visited.has(node)) continue;\n      if (node) visited.add(node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (const path of queue) {\n      path.popContext();\n    }\n\n    this.queue = null;\n    return stop;\n  }\n\n  visit(node, key) {\n    const nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  }\n\n}\n\nexports.default = TraversalContext;","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = require(\"../binding\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  VISITOR_KEYS,\n  assignmentExpression,\n  identifier,\n  toExpression,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      skipAllButComputedMethodKey(path);\n    }\n  },\n\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration() && !maybeExportDeclar.get(\"declaration\").node.id) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return;\n    if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;\n    if (this.binding.kind !== \"hoisted\") return;\n    path.node.id = identifier(this.oldName);\n    path.node._blockHoist = 3;\n    path.replaceWith(variableDeclaration(\"let\", [variableDeclarator(identifier(this.newName), toExpression(path.node))]));\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return;\n    if (!path.isFunctionExpression() && !path.isClassExpression()) return;\n    if (this.binding.kind !== \"local\") return;\n    path.node.id = identifier(this.oldName);\n    this.binding.scope.parent.push({\n      id: identifier(this.newName)\n    });\n    path.replaceWith(assignmentExpression(\"=\", identifier(this.newName), path.node));\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    const blockToTraverse = block || scope.block;\n\n    if ((blockToTraverse == null ? void 0 : blockToTraverse.type) === \"SwitchStatement\") {\n      blockToTraverse.cases.forEach(c => {\n        scope.traverse(c, renameVisitor, this);\n      });\n    } else {\n      scope.traverse(blockToTraverse, renameVisitor, this);\n    }\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(parentDeclar);\n      this.maybeConvertFromClassFunctionExpression(parentDeclar);\n    }\n  }\n\n}\n\nexports.default = Renamer;\n\nfunction skipAllButComputedMethodKey(path) {\n  if (!path.isMethod() || !path.node.computed) {\n    path.skip();\n    return;\n  }\n\n  const keys = VISITOR_KEYS[path.type];\n\n  for (const key of keys) {\n    if (key !== \"key\") path.skipKey(key);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findParent = findParent;\nexports.find = find;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getAncestry = getAncestry;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\nexports.inType = inType;\n\nvar _t = require(\"@babel/types\");\n\nvar _index = require(\"./index\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType(...candidateTypes) {\n  let path = this;\n\n  while (path) {\n    for (const type of candidateTypes) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTypeAnnotation = getTypeAnnotation;\nexports._getTypeAnnotation = _getTypeAnnotation;\nexports.isBaseType = isBaseType;\nexports.couldBeBaseType = couldBeBaseType;\nexports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;\nexports.isGenericType = isGenericType;\n\nvar inferers = require(\"./inferers\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  anyTypeAnnotation,\n  isAnyTypeAnnotation,\n  isBooleanTypeAnnotation,\n  isEmptyTypeAnnotation,\n  isFlowBaseAnnotation,\n  isGenericTypeAnnotation,\n  isIdentifier,\n  isMixedTypeAnnotation,\n  isNumberTypeAnnotation,\n  isStringTypeAnnotation,\n  isTypeAnnotation,\n  isUnionTypeAnnotation,\n  isVoidTypeAnnotation,\n  stringTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction getTypeAnnotation() {\n  if (this.typeAnnotation) return this.typeAnnotation;\n  let type = this._getTypeAnnotation() || anyTypeAnnotation();\n  if (isTypeAnnotation(type)) type = type.typeAnnotation;\n  return this.typeAnnotation = type;\n}\n\nconst typeAnnotationInferringNodes = new WeakSet();\n\nfunction _getTypeAnnotation() {\n  const node = this.node;\n\n  if (!node) {\n    if (this.key === \"init\" && this.parentPath.isVariableDeclarator()) {\n      const declar = this.parentPath.parentPath;\n      const declarParent = declar.parentPath;\n\n      if (declar.key === \"left\" && declarParent.isForInStatement()) {\n        return stringTypeAnnotation();\n      }\n\n      if (declar.key === \"left\" && declarParent.isForOfStatement()) {\n        return anyTypeAnnotation();\n      }\n\n      return voidTypeAnnotation();\n    } else {\n      return;\n    }\n  }\n\n  if (node.typeAnnotation) {\n    return node.typeAnnotation;\n  }\n\n  if (typeAnnotationInferringNodes.has(node)) {\n    return;\n  }\n\n  typeAnnotationInferringNodes.add(node);\n\n  try {\n    var _inferer;\n\n    let inferer = inferers[node.type];\n\n    if (inferer) {\n      return inferer.call(this, node);\n    }\n\n    inferer = inferers[this.parentPath.type];\n\n    if ((_inferer = inferer) != null && _inferer.validParent) {\n      return this.parentPath.getTypeAnnotation();\n    }\n  } finally {\n    typeAnnotationInferringNodes.delete(node);\n  }\n}\n\nfunction isBaseType(baseName, soft) {\n  return _isBaseType(baseName, this.getTypeAnnotation(), soft);\n}\n\nfunction _isBaseType(baseName, type, soft) {\n  if (baseName === \"string\") {\n    return isStringTypeAnnotation(type);\n  } else if (baseName === \"number\") {\n    return isNumberTypeAnnotation(type);\n  } else if (baseName === \"boolean\") {\n    return isBooleanTypeAnnotation(type);\n  } else if (baseName === \"any\") {\n    return isAnyTypeAnnotation(type);\n  } else if (baseName === \"mixed\") {\n    return isMixedTypeAnnotation(type);\n  } else if (baseName === \"empty\") {\n    return isEmptyTypeAnnotation(type);\n  } else if (baseName === \"void\") {\n    return isVoidTypeAnnotation(type);\n  } else {\n    if (soft) {\n      return false;\n    } else {\n      throw new Error(`Unknown base type ${baseName}`);\n    }\n  }\n}\n\nfunction couldBeBaseType(name) {\n  const type = this.getTypeAnnotation();\n  if (isAnyTypeAnnotation(type)) return true;\n\n  if (isUnionTypeAnnotation(type)) {\n    for (const type2 of type.types) {\n      if (isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {\n        return true;\n      }\n    }\n\n    return false;\n  } else {\n    return _isBaseType(name, type, true);\n  }\n}\n\nfunction baseTypeStrictlyMatches(rightArg) {\n  const left = this.getTypeAnnotation();\n  const right = rightArg.getTypeAnnotation();\n\n  if (!isAnyTypeAnnotation(left) && isFlowBaseAnnotation(left)) {\n    return right.type === left.type;\n  }\n\n  return false;\n}\n\nfunction isGenericType(genericName) {\n  const type = this.getTypeAnnotation();\n  return isGenericTypeAnnotation(type) && isIdentifier(type.id, {\n    name: genericName\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VariableDeclarator = VariableDeclarator;\nexports.TypeCastExpression = TypeCastExpression;\nexports.NewExpression = NewExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.UnaryExpression = UnaryExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.LogicalExpression = LogicalExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.StringLiteral = StringLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.RegExpLiteral = RegExpLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ArrayExpression = ArrayExpression;\nexports.RestElement = RestElement;\nexports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = Func;\nexports.CallExpression = CallExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _infererReference.default;\n  }\n});\n\nvar _t = require(\"@babel/types\");\n\nvar _infererReference = require(\"./inferer-reference\");\n\nconst {\n  BOOLEAN_BINARY_OPERATORS,\n  BOOLEAN_UNARY_OPERATORS,\n  NUMBER_BINARY_OPERATORS,\n  NUMBER_UNARY_OPERATORS,\n  STRING_UNARY_OPERATORS,\n  anyTypeAnnotation,\n  arrayTypeAnnotation,\n  booleanTypeAnnotation,\n  buildMatchMemberExpression,\n  createFlowUnionType,\n  createTSUnionType,\n  createUnionTypeAnnotation,\n  genericTypeAnnotation,\n  identifier,\n  isTSTypeAnnotation,\n  nullLiteralTypeAnnotation,\n  numberTypeAnnotation,\n  stringTypeAnnotation,\n  tupleTypeAnnotation,\n  unionTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction VariableDeclarator() {\n  var _type;\n\n  const id = this.get(\"id\");\n  if (!id.isIdentifier()) return;\n  const init = this.get(\"init\");\n  let type = init.getTypeAnnotation();\n\n  if (((_type = type) == null ? void 0 : _type.type) === \"AnyTypeAnnotation\") {\n    if (init.isCallExpression() && init.get(\"callee\").isIdentifier({\n      name: \"Array\"\n    }) && !init.scope.hasBinding(\"Array\", true)) {\n      type = ArrayExpression();\n    }\n  }\n\n  return type;\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction NewExpression(node) {\n  if (this.get(\"callee\").isIdentifier()) {\n    return genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"void\") {\n    return voidTypeAnnotation();\n  } else if (NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return numberTypeAnnotation();\n  } else if (STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return stringTypeAnnotation();\n  } else if (BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  const operator = node.operator;\n\n  if (NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return numberTypeAnnotation();\n  } else if (BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    const right = this.get(\"right\");\n    const left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      return numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      return stringTypeAnnotation();\n    }\n\n    return unionTypeAnnotation([stringTypeAnnotation(), numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  const argumentTypes = [this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()];\n\n  if (isTSTypeAnnotation(argumentTypes[0]) && createTSUnionType) {\n    return createTSUnionType(argumentTypes);\n  }\n\n  if (createFlowUnionType) {\n    return createFlowUnionType(argumentTypes);\n  }\n\n  return createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction ConditionalExpression() {\n  const argumentTypes = [this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()];\n\n  if (isTSTypeAnnotation(argumentTypes[0]) && createTSUnionType) {\n    return createTSUnionType(argumentTypes);\n  }\n\n  if (createFlowUnionType) {\n    return createFlowUnionType(argumentTypes);\n  }\n\n  return createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\nfunction ParenthesizedExpression() {\n  return this.get(\"expression\").getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"++\" || operator === \"--\") {\n    return numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return genericTypeAnnotation(identifier(\"RegExp\"));\n}\n\nfunction ObjectExpression() {\n  return genericTypeAnnotation(identifier(\"Object\"));\n}\n\nfunction ArrayExpression() {\n  return genericTypeAnnotation(identifier(\"Array\"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return genericTypeAnnotation(identifier(\"Function\"));\n}\n\nconst isArrayFrom = buildMatchMemberExpression(\"Array.from\");\nconst isObjectKeys = buildMatchMemberExpression(\"Object.keys\");\nconst isObjectValues = buildMatchMemberExpression(\"Object.values\");\nconst isObjectEntries = buildMatchMemberExpression(\"Object.entries\");\n\nfunction CallExpression() {\n  const {\n    callee\n  } = this.node;\n\n  if (isObjectKeys(callee)) {\n    return arrayTypeAnnotation(stringTypeAnnotation());\n  } else if (isArrayFrom(callee) || isObjectValues(callee)) {\n    return arrayTypeAnnotation(anyTypeAnnotation());\n  } else if (isObjectEntries(callee)) {\n    return arrayTypeAnnotation(tupleTypeAnnotation([stringTypeAnnotation(), anyTypeAnnotation()]));\n  }\n\n  return resolveCall(this.get(\"callee\"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is(\"async\")) {\n      if (callee.is(\"generator\")) {\n        return genericTypeAnnotation(identifier(\"AsyncIterator\"));\n      } else {\n        return genericTypeAnnotation(identifier(\"Promise\"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {}\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  BOOLEAN_NUMBER_BINARY_OPERATORS,\n  createFlowUnionType,\n  createTSUnionType,\n  createTypeAnnotationBasedOnTypeof,\n  createUnionTypeAnnotation,\n  isTSTypeAnnotation,\n  numberTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction _default(node) {\n  if (!this.isReferenced()) return;\n  const binding = this.scope.getBinding(node.name);\n\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(binding, this, node.name);\n    }\n  }\n\n  if (node.name === \"undefined\") {\n    return voidTypeAnnotation();\n  } else if (node.name === \"NaN\" || node.name === \"Infinity\") {\n    return numberTypeAnnotation();\n  } else if (node.name === \"arguments\") {}\n}\n\nfunction getTypeAnnotationBindingConstantViolations(binding, path, name) {\n  const types = [];\n  const functionConstantViolations = [];\n  let constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n  const testType = getConditionalAnnotation(binding, path, name);\n\n  if (testType) {\n    const testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n    constantViolations = constantViolations.filter(path => testConstantViolations.indexOf(path) < 0);\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations.push(...functionConstantViolations);\n\n    for (const violation of constantViolations) {\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (!types.length) {\n    return;\n  }\n\n  if (isTSTypeAnnotation(types[0]) && createTSUnionType) {\n    return createTSUnionType(types);\n  }\n\n  if (createFlowUnionType) {\n    return createFlowUnionType(types);\n  }\n\n  return createUnionTypeAnnotation(types);\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  const violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(violation => {\n    violation = violation.resolve();\n\n    const status = violation._guessExecutionStatusRelativeTo(path);\n\n    if (functions && status === \"unknown\") functions.push(violation);\n    return status === \"before\";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  const operator = path.node.operator;\n  const right = path.get(\"right\").resolve();\n  const left = path.get(\"left\").resolve();\n  let target;\n\n  if (left.isIdentifier({\n    name\n  })) {\n    target = right;\n  } else if (right.isIdentifier({\n    name\n  })) {\n    target = left;\n  }\n\n  if (target) {\n    if (operator === \"===\") {\n      return target.getTypeAnnotation();\n    }\n\n    if (BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return numberTypeAnnotation();\n    }\n\n    return;\n  }\n\n  if (operator !== \"===\" && operator !== \"==\") return;\n  let typeofPath;\n  let typePath;\n\n  if (left.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = right;\n    typePath = left;\n  }\n\n  if (!typeofPath) return;\n  if (!typeofPath.get(\"argument\").isIdentifier({\n    name\n  })) return;\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n  const typeValue = typePath.node.value;\n  if (typeof typeValue !== \"string\") return;\n  return createTypeAnnotationBasedOnTypeof(typeValue);\n}\n\nfunction getParentConditionalPath(binding, path, name) {\n  let parentPath;\n\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === \"test\") {\n        return;\n      }\n\n      return parentPath;\n    }\n\n    if (parentPath.isFunction()) {\n      if (parentPath.parentPath.scope.getBinding(name) !== binding) return;\n    }\n\n    path = parentPath;\n  }\n}\n\nfunction getConditionalAnnotation(binding, path, name) {\n  const ifStatement = getParentConditionalPath(binding, path, name);\n  if (!ifStatement) return;\n  const test = ifStatement.get(\"test\");\n  const paths = [test];\n  const types = [];\n\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i];\n\n    if (path.isLogicalExpression()) {\n      if (path.node.operator === \"&&\") {\n        paths.push(path.get(\"left\"));\n        paths.push(path.get(\"right\"));\n      }\n    } else if (path.isBinaryExpression()) {\n      const type = inferAnnotationFromBinaryExpression(name, path);\n      if (type) types.push(type);\n    }\n  }\n\n  if (types.length) {\n    if (isTSTypeAnnotation(types[0]) && createTSUnionType) {\n      return {\n        typeAnnotation: createTSUnionType(types),\n        ifStatement\n      };\n    }\n\n    if (createFlowUnionType) {\n      return {\n        typeAnnotation: createFlowUnionType(types),\n        ifStatement\n      };\n    }\n\n    return {\n      typeAnnotation: createUnionTypeAnnotation(types),\n      ifStatement\n    };\n  }\n\n  return getConditionalAnnotation(ifStatement, name);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceWithMultiple = replaceWithMultiple;\nexports.replaceWithSourceString = replaceWithSourceString;\nexports.replaceWith = replaceWith;\nexports._replaceWith = _replaceWith;\nexports.replaceExpressionWithStatements = replaceExpressionWithStatements;\nexports.replaceInline = replaceInline;\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nvar _cache = require(\"../cache\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _t = require(\"@babel/types\");\n\nvar _helperHoistVariables = require(\"@babel/helper-hoist-variables\");\n\nconst {\n  FUNCTION_TYPES,\n  arrowFunctionExpression,\n  assignmentExpression,\n  awaitExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  inheritLeadingComments,\n  inheritTrailingComments,\n  inheritsComments,\n  isExpression,\n  isProgram,\n  isStatement,\n  removeComments,\n  returnStatement,\n  toSequenceExpression,\n  validate,\n  yieldExpression\n} = _t;\n\nfunction replaceWithMultiple(nodes) {\n  var _pathCache$get;\n\n  this.resync();\n  nodes = this._verifyNodeList(nodes);\n  inheritLeadingComments(nodes[0], this.node);\n  inheritTrailingComments(nodes[nodes.length - 1], this.node);\n  (_pathCache$get = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get.delete(this.node);\n  this.node = this.container[this.key] = null;\n  const paths = this.insertAfter(nodes);\n\n  if (this.node) {\n    this.requeue();\n  } else {\n    this.remove();\n  }\n\n  return paths;\n}\n\nfunction replaceWithSourceString(replacement) {\n  this.resync();\n\n  try {\n    replacement = `(${replacement})`;\n    replacement = (0, _parser.parse)(replacement);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \" - make sure this is an expression.\\n\" + (0, _codeFrame.codeFrameColumns)(replacement, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      });\n      err.code = \"BABEL_REPLACE_SOURCE_ERROR\";\n    }\n\n    throw err;\n  }\n\n  replacement = replacement.program.body[0].expression;\n\n  _index.default.removeProperties(replacement);\n\n  return this.replaceWith(replacement);\n}\n\nfunction replaceWith(replacement) {\n  this.resync();\n\n  if (this.removed) {\n    throw new Error(\"You can't replace this node, we've already removed it\");\n  }\n\n  if (replacement instanceof _index2.default) {\n    replacement = replacement.node;\n  }\n\n  if (!replacement) {\n    throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");\n  }\n\n  if (this.node === replacement) {\n    return [this];\n  }\n\n  if (this.isProgram() && !isProgram(replacement)) {\n    throw new Error(\"You can only replace a Program root node with another Program node\");\n  }\n\n  if (Array.isArray(replacement)) {\n    throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");\n  }\n\n  if (typeof replacement === \"string\") {\n    throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");\n  }\n\n  let nodePath = \"\";\n\n  if (this.isNodeType(\"Statement\") && isExpression(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n      replacement = expressionStatement(replacement);\n      nodePath = \"expression\";\n    }\n  }\n\n  if (this.isNodeType(\"Expression\") && isStatement(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n      return this.replaceExpressionWithStatements([replacement]);\n    }\n  }\n\n  const oldNode = this.node;\n\n  if (oldNode) {\n    inheritsComments(replacement, oldNode);\n    removeComments(oldNode);\n  }\n\n  this._replaceWith(replacement);\n\n  this.type = replacement.type;\n  this.setScope();\n  this.requeue();\n  return [nodePath ? this.get(nodePath) : this];\n}\n\nfunction _replaceWith(node) {\n  var _pathCache$get2;\n\n  if (!this.container) {\n    throw new ReferenceError(\"Container is falsy\");\n  }\n\n  if (this.inList) {\n    validate(this.parent, this.key, [node]);\n  } else {\n    validate(this.parent, this.key, node);\n  }\n\n  this.debug(`Replace with ${node == null ? void 0 : node.type}`);\n  (_pathCache$get2 = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get2.set(node, this).delete(this.node);\n  this.node = this.container[this.key] = node;\n}\n\nfunction replaceExpressionWithStatements(nodes) {\n  this.resync();\n  const nodesAsSequenceExpression = toSequenceExpression(nodes, this.scope);\n\n  if (nodesAsSequenceExpression) {\n    return this.replaceWith(nodesAsSequenceExpression)[0].get(\"expressions\");\n  }\n\n  const functionParent = this.getFunctionParent();\n  const isParentAsync = functionParent == null ? void 0 : functionParent.is(\"async\");\n  const isParentGenerator = functionParent == null ? void 0 : functionParent.is(\"generator\");\n  const container = arrowFunctionExpression([], blockStatement(nodes));\n  this.replaceWith(callExpression(container, []));\n  const callee = this.get(\"callee\");\n  (0, _helperHoistVariables.default)(callee.get(\"body\"), id => {\n    this.scope.push({\n      id\n    });\n  }, \"var\");\n  const completionRecords = this.get(\"callee\").getCompletionRecords();\n\n  for (const path of completionRecords) {\n    if (!path.isExpressionStatement()) continue;\n    const loop = path.findParent(path => path.isLoop());\n\n    if (loop) {\n      let uid = loop.getData(\"expressionReplacementReturnUid\");\n\n      if (!uid) {\n        uid = callee.scope.generateDeclaredUidIdentifier(\"ret\");\n        callee.get(\"body\").pushContainer(\"body\", returnStatement(cloneNode(uid)));\n        loop.setData(\"expressionReplacementReturnUid\", uid);\n      } else {\n        uid = identifier(uid.name);\n      }\n\n      path.get(\"expression\").replaceWith(assignmentExpression(\"=\", cloneNode(uid), path.node.expression));\n    } else {\n      path.replaceWith(returnStatement(path.node.expression));\n    }\n  }\n\n  callee.arrowFunctionToExpression();\n  const newCallee = callee;\n\n  const needToAwaitFunction = isParentAsync && _index.default.hasType(this.get(\"callee.body\").node, \"AwaitExpression\", FUNCTION_TYPES);\n\n  const needToYieldFunction = isParentGenerator && _index.default.hasType(this.get(\"callee.body\").node, \"YieldExpression\", FUNCTION_TYPES);\n\n  if (needToAwaitFunction) {\n    newCallee.set(\"async\", true);\n\n    if (!needToYieldFunction) {\n      this.replaceWith(awaitExpression(this.node));\n    }\n  }\n\n  if (needToYieldFunction) {\n    newCallee.set(\"generator\", true);\n    this.replaceWith(yieldExpression(this.node, true));\n  }\n\n  return newCallee.get(\"body.body\");\n}\n\nfunction replaceInline(nodes) {\n  this.resync();\n\n  if (Array.isArray(nodes)) {\n    if (Array.isArray(this.container)) {\n      nodes = this._verifyNodeList(nodes);\n\n      const paths = this._containerInsertAfter(nodes);\n\n      this.remove();\n      return paths;\n    } else {\n      return this.replaceWithMultiple(nodes);\n    }\n  } else {\n    return this.replaceWith(nodes);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluateTruthy = evaluateTruthy;\nexports.evaluate = evaluate;\nconst VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nconst INVALID_METHODS = [\"random\"];\n\nfunction evaluateTruthy() {\n  const res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction deopt(path, state) {\n  if (!state.confident) return;\n  state.deoptPath = path;\n  state.confident = false;\n}\n\nfunction evaluateCached(path, state) {\n  const {\n    node\n  } = path;\n  const {\n    seen\n  } = state;\n\n  if (seen.has(node)) {\n    const existing = seen.get(node);\n\n    if (existing.resolved) {\n      return existing.value;\n    } else {\n      deopt(path, state);\n      return;\n    }\n  } else {\n    const item = {\n      resolved: false\n    };\n    seen.set(node, item);\n\n    const val = _evaluate(path, state);\n\n    if (state.confident) {\n      item.resolved = true;\n      item.value = val;\n    }\n\n    return val;\n  }\n}\n\nfunction _evaluate(path, state) {\n  if (!state.confident) return;\n\n  if (path.isSequenceExpression()) {\n    const exprs = path.get(\"expressions\");\n    return evaluateCached(exprs[exprs.length - 1], state);\n  }\n\n  if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n    return path.node.value;\n  }\n\n  if (path.isNullLiteral()) {\n    return null;\n  }\n\n  if (path.isTemplateLiteral()) {\n    return evaluateQuasis(path, path.node.quasis, state);\n  }\n\n  if (path.isTaggedTemplateExpression() && path.get(\"tag\").isMemberExpression()) {\n    const object = path.get(\"tag.object\");\n    const {\n      node: {\n        name\n      }\n    } = object;\n    const property = path.get(\"tag.property\");\n\n    if (object.isIdentifier() && name === \"String\" && !path.scope.getBinding(name) && property.isIdentifier() && property.node.name === \"raw\") {\n      return evaluateQuasis(path, path.node.quasi.quasis, state, true);\n    }\n  }\n\n  if (path.isConditionalExpression()) {\n    const testResult = evaluateCached(path.get(\"test\"), state);\n    if (!state.confident) return;\n\n    if (testResult) {\n      return evaluateCached(path.get(\"consequent\"), state);\n    } else {\n      return evaluateCached(path.get(\"alternate\"), state);\n    }\n  }\n\n  if (path.isExpressionWrapper()) {\n    return evaluateCached(path.get(\"expression\"), state);\n  }\n\n  if (path.isMemberExpression() && !path.parentPath.isCallExpression({\n    callee: path.node\n  })) {\n    const property = path.get(\"property\");\n    const object = path.get(\"object\");\n\n    if (object.isLiteral() && property.isIdentifier()) {\n      const value = object.node.value;\n      const type = typeof value;\n\n      if (type === \"number\" || type === \"string\") {\n        return value[property.node.name];\n      }\n    }\n  }\n\n  if (path.isReferencedIdentifier()) {\n    const binding = path.scope.getBinding(path.node.name);\n\n    if (binding && binding.constantViolations.length > 0) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding && path.node.start < binding.path.node.end) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding != null && binding.hasValue) {\n      return binding.value;\n    } else {\n      if (path.node.name === \"undefined\") {\n        return binding ? deopt(binding.path, state) : undefined;\n      } else if (path.node.name === \"Infinity\") {\n        return binding ? deopt(binding.path, state) : Infinity;\n      } else if (path.node.name === \"NaN\") {\n        return binding ? deopt(binding.path, state) : NaN;\n      }\n\n      const resolved = path.resolve();\n\n      if (resolved === path) {\n        return deopt(path, state);\n      } else {\n        return evaluateCached(resolved, state);\n      }\n    }\n  }\n\n  if (path.isUnaryExpression({\n    prefix: true\n  })) {\n    if (path.node.operator === \"void\") {\n      return undefined;\n    }\n\n    const argument = path.get(\"argument\");\n\n    if (path.node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n      return \"function\";\n    }\n\n    const arg = evaluateCached(argument, state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"!\":\n        return !arg;\n\n      case \"+\":\n        return +arg;\n\n      case \"-\":\n        return -arg;\n\n      case \"~\":\n        return ~arg;\n\n      case \"typeof\":\n        return typeof arg;\n    }\n  }\n\n  if (path.isArrayExpression()) {\n    const arr = [];\n    const elems = path.get(\"elements\");\n\n    for (const elem of elems) {\n      const elemValue = elem.evaluate();\n\n      if (elemValue.confident) {\n        arr.push(elemValue.value);\n      } else {\n        return deopt(elemValue.deopt, state);\n      }\n    }\n\n    return arr;\n  }\n\n  if (path.isObjectExpression()) {\n    const obj = {};\n    const props = path.get(\"properties\");\n\n    for (const prop of props) {\n      if (prop.isObjectMethod() || prop.isSpreadElement()) {\n        return deopt(prop, state);\n      }\n\n      const keyPath = prop.get(\"key\");\n      let key = keyPath;\n\n      if (prop.node.computed) {\n        key = key.evaluate();\n\n        if (!key.confident) {\n          return deopt(key.deopt, state);\n        }\n\n        key = key.value;\n      } else if (key.isIdentifier()) {\n        key = key.node.name;\n      } else {\n        key = key.node.value;\n      }\n\n      const valuePath = prop.get(\"value\");\n      let value = valuePath.evaluate();\n\n      if (!value.confident) {\n        return deopt(value.deopt, state);\n      }\n\n      value = value.value;\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  if (path.isLogicalExpression()) {\n    const wasConfident = state.confident;\n    const left = evaluateCached(path.get(\"left\"), state);\n    const leftConfident = state.confident;\n    state.confident = wasConfident;\n    const right = evaluateCached(path.get(\"right\"), state);\n    const rightConfident = state.confident;\n\n    switch (path.node.operator) {\n      case \"||\":\n        state.confident = leftConfident && (!!left || rightConfident);\n        if (!state.confident) return;\n        return left || right;\n\n      case \"&&\":\n        state.confident = leftConfident && (!left || rightConfident);\n        if (!state.confident) return;\n        return left && right;\n    }\n  }\n\n  if (path.isBinaryExpression()) {\n    const left = evaluateCached(path.get(\"left\"), state);\n    if (!state.confident) return;\n    const right = evaluateCached(path.get(\"right\"), state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"-\":\n        return left - right;\n\n      case \"+\":\n        return left + right;\n\n      case \"/\":\n        return left / right;\n\n      case \"*\":\n        return left * right;\n\n      case \"%\":\n        return left % right;\n\n      case \"**\":\n        return Math.pow(left, right);\n\n      case \"<\":\n        return left < right;\n\n      case \">\":\n        return left > right;\n\n      case \"<=\":\n        return left <= right;\n\n      case \">=\":\n        return left >= right;\n\n      case \"==\":\n        return left == right;\n\n      case \"!=\":\n        return left != right;\n\n      case \"===\":\n        return left === right;\n\n      case \"!==\":\n        return left !== right;\n\n      case \"|\":\n        return left | right;\n\n      case \"&\":\n        return left & right;\n\n      case \"^\":\n        return left ^ right;\n\n      case \"<<\":\n        return left << right;\n\n      case \">>\":\n        return left >> right;\n\n      case \">>>\":\n        return left >>> right;\n    }\n  }\n\n  if (path.isCallExpression()) {\n    const callee = path.get(\"callee\");\n    let context;\n    let func;\n\n    if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {\n      func = global[callee.node.name];\n    }\n\n    if (callee.isMemberExpression()) {\n      const object = callee.get(\"object\");\n      const property = callee.get(\"property\");\n\n      if (object.isIdentifier() && property.isIdentifier() && VALID_CALLEES.indexOf(object.node.name) >= 0 && INVALID_METHODS.indexOf(property.node.name) < 0) {\n        context = global[object.node.name];\n        func = context[property.node.name];\n      }\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        const type = typeof object.node.value;\n\n        if (type === \"string\" || type === \"number\") {\n          context = object.node.value;\n          func = context[property.node.name];\n        }\n      }\n    }\n\n    if (func) {\n      const args = path.get(\"arguments\").map(arg => evaluateCached(arg, state));\n      if (!state.confident) return;\n      return func.apply(context, args);\n    }\n  }\n\n  deopt(path, state);\n}\n\nfunction evaluateQuasis(path, quasis, state, raw = false) {\n  let str = \"\";\n  let i = 0;\n  const exprs = path.get(\"expressions\");\n\n  for (const elem of quasis) {\n    if (!state.confident) break;\n    str += raw ? elem.value.raw : elem.value.cooked;\n    const expr = exprs[i++];\n    if (expr) str += String(evaluateCached(expr, state));\n  }\n\n  if (!state.confident) return;\n  return str;\n}\n\nfunction evaluate() {\n  const state = {\n    confident: true,\n    deoptPath: null,\n    seen: new Map()\n  };\n  let value = evaluateCached(this, state);\n  if (!state.confident) value = undefined;\n  return {\n    confident: state.confident,\n    deopt: state.deoptPath,\n    value: value\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toComputedKey = toComputedKey;\nexports.ensureBlock = ensureBlock;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\nexports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\nexports.arrowFunctionToExpression = arrowFunctionToExpression;\n\nvar _t = require(\"@babel/types\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nconst {\n  arrowFunctionExpression,\n  assignmentExpression,\n  binaryExpression,\n  blockStatement,\n  callExpression,\n  conditionalExpression,\n  expressionStatement,\n  identifier,\n  isIdentifier,\n  jsxIdentifier,\n  memberExpression,\n  metaProperty,\n  numericLiteral,\n  objectExpression,\n  restElement,\n  returnStatement,\n  sequenceExpression,\n  spreadElement,\n  stringLiteral,\n  super: _super,\n  thisExpression,\n  unaryExpression\n} = _t;\n\nfunction toComputedKey() {\n  let key;\n\n  if (this.isMemberExpression()) {\n    key = this.node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = this.node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!this.node.computed) {\n    if (isIdentifier(key)) key = stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  const body = this.get(\"body\");\n  const bodyNode = body.node;\n\n  if (Array.isArray(body)) {\n    throw new Error(\"Can't convert array path to a block statement\");\n  }\n\n  if (!bodyNode) {\n    throw new Error(\"Can't convert node without a body\");\n  }\n\n  if (body.isBlockStatement()) {\n    return bodyNode;\n  }\n\n  const statements = [];\n  let stringPath = \"body\";\n  let key;\n  let listKey;\n\n  if (body.isStatement()) {\n    listKey = \"body\";\n    key = 0;\n    statements.push(body.node);\n  } else {\n    stringPath += \".body.0\";\n\n    if (this.isFunction()) {\n      key = \"argument\";\n      statements.push(returnStatement(body.node));\n    } else {\n      key = \"expression\";\n      statements.push(expressionStatement(body.node));\n    }\n  }\n\n  this.node.body = blockStatement(statements);\n  const parentPath = this.get(stringPath);\n  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n  return this.node;\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n  this.arrowFunctionToExpression();\n}\n\nfunction unwrapFunctionEnvironment() {\n  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n    throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n  }\n\n  hoistFunctionEnvironment(this);\n}\n\nfunction arrowFunctionToExpression({\n  allowInsertArrow = true,\n  specCompliant = false,\n  noNewArrows = !specCompliant\n} = {}) {\n  if (!this.isArrowFunctionExpression()) {\n    throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n  }\n\n  const thisBinding = hoistFunctionEnvironment(this, noNewArrows, allowInsertArrow);\n  this.ensureBlock();\n  this.node.type = \"FunctionExpression\";\n\n  if (!noNewArrows) {\n    const checkBinding = thisBinding ? null : this.parentPath.scope.generateUidIdentifier(\"arrowCheckId\");\n\n    if (checkBinding) {\n      this.parentPath.scope.push({\n        id: checkBinding,\n        init: objectExpression([])\n      });\n    }\n\n    this.get(\"body\").unshiftContainer(\"body\", expressionStatement(callExpression(this.hub.addHelper(\"newArrowCheck\"), [thisExpression(), checkBinding ? identifier(checkBinding.name) : identifier(thisBinding)])));\n    this.replaceWith(callExpression(memberExpression((0, _helperFunctionName.default)(this, true) || this.node, identifier(\"bind\")), [checkBinding ? identifier(checkBinding.name) : thisExpression()]));\n  }\n}\n\nfunction hoistFunctionEnvironment(fnPath, noNewArrows = true, allowInsertArrow = true) {\n  const thisEnvFn = fnPath.findParent(p => {\n    return p.isFunction() && !p.isArrowFunctionExpression() || p.isProgram() || p.isClassProperty({\n      static: false\n    });\n  });\n  const inConstructor = (thisEnvFn == null ? void 0 : thisEnvFn.node.kind) === \"constructor\";\n\n  if (thisEnvFn.isClassProperty()) {\n    throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n  }\n\n  const {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  } = getScopeInformation(fnPath);\n\n  if (inConstructor && superCalls.length > 0) {\n    if (!allowInsertArrow) {\n      throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n    }\n\n    const allSuperCalls = [];\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        allSuperCalls.push(child);\n      }\n\n    });\n    const superBinding = getSuperBinding(thisEnvFn);\n    allSuperCalls.forEach(superCall => {\n      const callee = identifier(superBinding);\n      callee.loc = superCall.node.callee.loc;\n      superCall.get(\"callee\").replaceWith(callee);\n    });\n  }\n\n  if (argumentsPaths.length > 0) {\n    const argumentsBinding = getBinding(thisEnvFn, \"arguments\", () => {\n      const args = () => identifier(\"arguments\");\n\n      if (thisEnvFn.scope.path.isProgram()) {\n        return conditionalExpression(binaryExpression(\"===\", unaryExpression(\"typeof\", args()), stringLiteral(\"undefined\")), thisEnvFn.scope.buildUndefinedNode(), args());\n      } else {\n        return args();\n      }\n    });\n    argumentsPaths.forEach(argumentsChild => {\n      const argsRef = identifier(argumentsBinding);\n      argsRef.loc = argumentsChild.node.loc;\n      argumentsChild.replaceWith(argsRef);\n    });\n  }\n\n  if (newTargetPaths.length > 0) {\n    const newTargetBinding = getBinding(thisEnvFn, \"newtarget\", () => metaProperty(identifier(\"new\"), identifier(\"target\")));\n    newTargetPaths.forEach(targetChild => {\n      const targetRef = identifier(newTargetBinding);\n      targetRef.loc = targetChild.node.loc;\n      targetChild.replaceWith(targetRef);\n    });\n  }\n\n  if (superProps.length > 0) {\n    if (!allowInsertArrow) {\n      throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n    }\n\n    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);\n    flatSuperProps.forEach(superProp => {\n      const key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n      const isAssignment = superProp.parentPath.isAssignmentExpression({\n        left: superProp.node\n      });\n      const isCall = superProp.parentPath.isCallExpression({\n        callee: superProp.node\n      });\n      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n      const args = [];\n\n      if (superProp.node.computed) {\n        args.push(superProp.get(\"property\").node);\n      }\n\n      if (isAssignment) {\n        const value = superProp.parentPath.node.right;\n        args.push(value);\n      }\n\n      const call = callExpression(identifier(superBinding), args);\n\n      if (isCall) {\n        superProp.parentPath.unshiftContainer(\"arguments\", thisExpression());\n        superProp.replaceWith(memberExpression(call, identifier(\"call\")));\n        thisPaths.push(superProp.parentPath.get(\"arguments.0\"));\n      } else if (isAssignment) {\n        superProp.parentPath.replaceWith(call);\n      } else {\n        superProp.replaceWith(call);\n      }\n    });\n  }\n\n  let thisBinding;\n\n  if (thisPaths.length > 0 || !noNewArrows) {\n    thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n    if (noNewArrows || inConstructor && hasSuperClass(thisEnvFn)) {\n      thisPaths.forEach(thisChild => {\n        const thisRef = thisChild.isJSX() ? jsxIdentifier(thisBinding) : identifier(thisBinding);\n        thisRef.loc = thisChild.node.loc;\n        thisChild.replaceWith(thisRef);\n      });\n      if (!noNewArrows) thisBinding = null;\n    }\n  }\n\n  return thisBinding;\n}\n\nfunction standardizeSuperProperty(superProp) {\n  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n    const assignmentPath = superProp.parentPath;\n    const op = assignmentPath.node.operator.slice(0, -1);\n    const value = assignmentPath.node.right;\n    assignmentPath.node.operator = \"=\";\n\n    if (superProp.node.computed) {\n      const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n      assignmentPath.get(\"left\").replaceWith(memberExpression(superProp.node.object, assignmentExpression(\"=\", tmp, superProp.node.property), true));\n      assignmentPath.get(\"right\").replaceWith(binaryExpression(op, memberExpression(superProp.node.object, identifier(tmp.name), true), value));\n    } else {\n      assignmentPath.get(\"left\").replaceWith(memberExpression(superProp.node.object, superProp.node.property));\n      assignmentPath.get(\"right\").replaceWith(binaryExpression(op, memberExpression(superProp.node.object, identifier(superProp.node.property.name)), value));\n    }\n\n    return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n  } else if (superProp.parentPath.isUpdateExpression()) {\n    const updateExpr = superProp.parentPath;\n    const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n    const parts = [assignmentExpression(\"=\", tmp, memberExpression(superProp.node.object, computedKey ? assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), assignmentExpression(\"=\", memberExpression(superProp.node.object, computedKey ? identifier(computedKey.name) : superProp.node.property, superProp.node.computed), binaryExpression(\"+\", identifier(tmp.name), numericLiteral(1)))];\n\n    if (!superProp.parentPath.node.prefix) {\n      parts.push(identifier(tmp.name));\n    }\n\n    updateExpr.replaceWith(sequenceExpression(parts));\n    const left = updateExpr.get(\"expressions.0.right\");\n    const right = updateExpr.get(\"expressions.1.left\");\n    return [left, right];\n  }\n\n  return [superProp];\n}\n\nfunction hasSuperClass(thisEnvFn) {\n  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n}\n\nfunction getThisBinding(thisEnvFn, inConstructor) {\n  return getBinding(thisEnvFn, \"this\", thisBinding => {\n    if (!inConstructor || !hasSuperClass(thisEnvFn)) return thisExpression();\n    const supers = new WeakSet();\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        if (supers.has(child.node)) return;\n        supers.add(child.node);\n        child.replaceWithMultiple([child.node, assignmentExpression(\"=\", identifier(thisBinding), identifier(\"this\"))]);\n      }\n\n    });\n  });\n}\n\nfunction getSuperBinding(thisEnvFn) {\n  return getBinding(thisEnvFn, \"supercall\", () => {\n    const argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n    return arrowFunctionExpression([restElement(argsBinding)], callExpression(_super(), [spreadElement(identifier(argsBinding.name))]));\n  });\n}\n\nfunction getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n  const op = isAssignment ? \"set\" : \"get\";\n  return getBinding(thisEnvFn, `superprop_${op}:${propName || \"\"}`, () => {\n    const argsList = [];\n    let fnBody;\n\n    if (propName) {\n      fnBody = memberExpression(_super(), identifier(propName));\n    } else {\n      const method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n      argsList.unshift(method);\n      fnBody = memberExpression(_super(), identifier(method.name), true);\n    }\n\n    if (isAssignment) {\n      const valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n      argsList.push(valueIdent);\n      fnBody = assignmentExpression(\"=\", fnBody, identifier(valueIdent.name));\n    }\n\n    return arrowFunctionExpression(argsList, fnBody);\n  });\n}\n\nfunction getBinding(thisEnvFn, key, init) {\n  const cacheKey = \"binding:\" + key;\n  let data = thisEnvFn.getData(cacheKey);\n\n  if (!data) {\n    const id = thisEnvFn.scope.generateUidIdentifier(key);\n    data = id.name;\n    thisEnvFn.setData(cacheKey, data);\n    thisEnvFn.scope.push({\n      id: id,\n      init: init(data)\n    });\n  }\n\n  return data;\n}\n\nfunction getScopeInformation(fnPath) {\n  const thisPaths = [];\n  const argumentsPaths = [];\n  const newTargetPaths = [];\n  const superProps = [];\n  const superCalls = [];\n  fnPath.traverse({\n    ClassProperty(child) {\n      child.skip();\n    },\n\n    Function(child) {\n      if (child.isArrowFunctionExpression()) return;\n      child.skip();\n    },\n\n    ThisExpression(child) {\n      thisPaths.push(child);\n    },\n\n    JSXIdentifier(child) {\n      if (child.node.name !== \"this\") return;\n\n      if (!child.parentPath.isJSXMemberExpression({\n        object: child.node\n      }) && !child.parentPath.isJSXOpeningElement({\n        name: child.node\n      })) {\n        return;\n      }\n\n      thisPaths.push(child);\n    },\n\n    CallExpression(child) {\n      if (child.get(\"callee\").isSuper()) superCalls.push(child);\n    },\n\n    MemberExpression(child) {\n      if (child.get(\"object\").isSuper()) superProps.push(child);\n    },\n\n    ReferencedIdentifier(child) {\n      if (child.node.name !== \"arguments\") return;\n      let curr = child.scope;\n\n      do {\n        if (curr.hasOwnBinding(\"arguments\")) {\n          curr.rename(\"arguments\");\n          return;\n        }\n\n        if (curr.path.isFunction() && !curr.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (curr = curr.parent);\n\n      argumentsPaths.push(child);\n    },\n\n    MetaProperty(child) {\n      if (!child.get(\"meta\").isIdentifier({\n        name: \"new\"\n      })) return;\n      if (!child.get(\"property\").isIdentifier({\n        name: \"target\"\n      })) return;\n      newTargetPaths.push(child);\n    }\n\n  });\n  return {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchesPattern = matchesPattern;\nexports.has = has;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.equals = equals;\nexports.isNodeType = isNodeType;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.referencesImport = referencesImport;\nexports.getSource = getSource;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;\nexports.resolve = resolve;\nexports._resolve = _resolve;\nexports.isConstantExpression = isConstantExpression;\nexports.isInStrictMode = isInStrictMode;\nexports.is = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  STATEMENT_OR_BLOCK_KEYS,\n  VISITOR_KEYS,\n  isBlockStatement,\n  isExpression,\n  isIdentifier,\n  isLiteral,\n  isStringLiteral,\n  isType,\n  matchesPattern: _matchesPattern\n} = _t;\n\nfunction matchesPattern(pattern, allowPartial) {\n  return _matchesPattern(this.node, pattern, allowPartial);\n}\n\nfunction has(key) {\n  const val = this.node && this.node[key];\n\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nconst is = has;\nexports.is = is;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === \"init\" || this.key === \"left\") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== \"body\" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  let path = this;\n  let first = true;\n\n  do {\n    const container = path.container;\n\n    if (path.isFunction() && !first) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return STATEMENT_OR_BLOCK_KEYS.includes(this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) {\n    if ((this.isMemberExpression() || this.isOptionalMemberExpression()) && (this.node.computed ? isStringLiteral(this.node.property, {\n      value: importName\n    }) : this.node.property.name === importName)) {\n      const object = this.get(\"object\");\n      return object.isReferencedIdentifier() && object.referencesImport(moduleSource, \"*\");\n    }\n\n    return false;\n  }\n\n  const binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== \"module\") return false;\n  const path = binding.path;\n  const parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === \"default\") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === \"*\") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && isIdentifier(path.node.imported, {\n    name: importName\n  })) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  const node = this.node;\n\n  if (node.end) {\n    const code = this.hub.getCode();\n    if (code) return code.slice(node.start, node.end);\n  }\n\n  return \"\";\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== \"after\";\n}\n\nfunction getOuterFunction(path) {\n  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;\n}\n\nfunction isExecutionUncertain(type, key) {\n  switch (type) {\n    case \"LogicalExpression\":\n      return key === \"right\";\n\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      return key === \"consequent\" || key === \"alternate\";\n\n    case \"WhileStatement\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      return key === \"body\";\n\n    case \"ForStatement\":\n      return key === \"body\" || key === \"update\";\n\n    case \"SwitchStatement\":\n      return key === \"cases\";\n\n    case \"TryStatement\":\n      return key === \"handler\";\n\n    case \"AssignmentPattern\":\n      return key === \"right\";\n\n    case \"OptionalMemberExpression\":\n      return key === \"property\";\n\n    case \"OptionalCallExpression\":\n      return key === \"arguments\";\n\n    default:\n      return false;\n  }\n}\n\nfunction isExecutionUncertainInList(paths, maxIndex) {\n  for (let i = 0; i < maxIndex; i++) {\n    const path = paths[i];\n\n    if (isExecutionUncertain(path.parent.type, path.parentKey)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  const funcParent = {\n    this: getOuterFunction(this),\n    target: getOuterFunction(target)\n  };\n\n  if (funcParent.target.node !== funcParent.this.node) {\n    return this._guessExecutionStatusRelativeToDifferentFunctions(funcParent.target);\n  }\n\n  const paths = {\n    target: target.getAncestry(),\n    this: this.getAncestry()\n  };\n  if (paths.target.indexOf(this) >= 0) return \"after\";\n  if (paths.this.indexOf(target) >= 0) return \"before\";\n  let commonPath;\n  const commonIndex = {\n    target: 0,\n    this: 0\n  };\n\n  while (!commonPath && commonIndex.this < paths.this.length) {\n    const path = paths.this[commonIndex.this];\n    commonIndex.target = paths.target.indexOf(path);\n\n    if (commonIndex.target >= 0) {\n      commonPath = path;\n    } else {\n      commonIndex.this++;\n    }\n  }\n\n  if (!commonPath) {\n    throw new Error(\"Internal Babel error - The two compared nodes\" + \" don't appear to belong to the same program.\");\n  }\n\n  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {\n    return \"unknown\";\n  }\n\n  const divergence = {\n    this: paths.this[commonIndex.this - 1],\n    target: paths.target[commonIndex.target - 1]\n  };\n\n  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {\n    return divergence.target.key > divergence.this.key ? \"before\" : \"after\";\n  }\n\n  const keys = VISITOR_KEYS[commonPath.type];\n  const keyPosition = {\n    this: keys.indexOf(divergence.this.parentKey),\n    target: keys.indexOf(divergence.target.parentKey)\n  };\n  return keyPosition.target > keyPosition.this ? \"before\" : \"after\";\n}\n\nconst executionOrderCheckedNodes = new WeakSet();\n\nfunction _guessExecutionStatusRelativeToDifferentFunctions(target) {\n  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {\n    return \"unknown\";\n  }\n\n  const binding = target.scope.getBinding(target.node.id.name);\n  if (!binding.references) return \"before\";\n  const referencePaths = binding.referencePaths;\n  let allStatus;\n\n  for (const path of referencePaths) {\n    const childOfFunction = !!path.find(path => path.node === target.node);\n    if (childOfFunction) continue;\n\n    if (path.key !== \"callee\" || !path.parentPath.isCallExpression()) {\n      return \"unknown\";\n    }\n\n    if (executionOrderCheckedNodes.has(path.node)) continue;\n    executionOrderCheckedNodes.add(path.node);\n\n    const status = this._guessExecutionStatusRelativeTo(path);\n\n    executionOrderCheckedNodes.delete(path.node);\n\n    if (allStatus && allStatus !== status) {\n      return \"unknown\";\n    } else {\n      allStatus = status;\n    }\n  }\n\n  return allStatus;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get(\"id\").isIdentifier()) {\n      return this.get(\"init\").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n    if (!binding.constant) return;\n    if (binding.kind === \"module\") return;\n\n    if (binding.path !== this) {\n      const ret = binding.path.resolve(dangerous, resolved);\n      if (this.find(parent => parent.node === ret.node)) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get(\"expression\").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n    const targetKey = this.toComputedKey();\n    if (!isLiteral(targetKey)) return;\n    const targetName = targetKey.value;\n    const target = this.get(\"object\").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      const props = target.get(\"properties\");\n\n      for (const prop of props) {\n        if (!prop.isProperty()) continue;\n        const key = prop.get(\"key\");\n        let match = prop.isnt(\"computed\") && key.isIdentifier({\n          name: targetName\n        });\n        match = match || key.isLiteral({\n          value: targetName\n        });\n        if (match) return prop.get(\"value\").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      const elems = target.get(\"elements\");\n      const elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\nfunction isConstantExpression() {\n  if (this.isIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return false;\n    return binding.constant;\n  }\n\n  if (this.isLiteral()) {\n    if (this.isRegExpLiteral()) {\n      return false;\n    }\n\n    if (this.isTemplateLiteral()) {\n      return this.get(\"expressions\").every(expression => expression.isConstantExpression());\n    }\n\n    return true;\n  }\n\n  if (this.isUnaryExpression()) {\n    if (this.node.operator !== \"void\") {\n      return false;\n    }\n\n    return this.get(\"argument\").isConstantExpression();\n  }\n\n  if (this.isBinaryExpression()) {\n    return this.get(\"left\").isConstantExpression() && this.get(\"right\").isConstantExpression();\n  }\n\n  return false;\n}\n\nfunction isInStrictMode() {\n  const start = this.isProgram() ? this : this.parentPath;\n  const strictParent = start.find(path => {\n    if (path.isProgram({\n      sourceType: \"module\"\n    })) return true;\n    if (path.isClass()) return true;\n    if (!path.isProgram() && !path.isFunction()) return false;\n\n    if (path.isArrowFunctionExpression() && !path.get(\"body\").isBlockStatement()) {\n      return false;\n    }\n\n    const body = path.isFunction() ? path.node.body : path.node;\n\n    for (const directive of body.directives) {\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  });\n  return !!strictParent;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.call = call;\nexports._call = _call;\nexports.isBlacklisted = exports.isDenylisted = isDenylisted;\nexports.visit = visit;\nexports.skip = skip;\nexports.skipKey = skipKey;\nexports.stop = stop;\nexports.setScope = setScope;\nexports.setContext = setContext;\nexports.resync = resync;\nexports._resyncParent = _resyncParent;\nexports._resyncKey = _resyncKey;\nexports._resyncList = _resyncList;\nexports._resyncRemoved = _resyncRemoved;\nexports.popContext = popContext;\nexports.pushContext = pushContext;\nexports.setup = setup;\nexports.setKey = setKey;\nexports.requeue = requeue;\nexports._getQueueContexts = _getQueueContexts;\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nfunction call(key) {\n  const opts = this.opts;\n  this.debug(key);\n\n  if (this.node) {\n    if (this._call(opts[key])) return true;\n  }\n\n  if (this.node) {\n    return this._call(opts[this.node.type] && opts[this.node.type][key]);\n  }\n\n  return false;\n}\n\nfunction _call(fns) {\n  if (!fns) return false;\n\n  for (const fn of fns) {\n    if (!fn) continue;\n    const node = this.node;\n    if (!node) return true;\n    const ret = fn.call(this.state, this, this.state);\n\n    if (ret && typeof ret === \"object\" && typeof ret.then === \"function\") {\n      throw new Error(`You appear to be using a plugin with an async traversal visitor, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n    }\n\n    if (ret) {\n      throw new Error(`Unexpected return value from visitor method ${fn}`);\n    }\n\n    if (this.node !== node) return true;\n    if (this._traverseFlags > 0) return true;\n  }\n\n  return false;\n}\n\nfunction isDenylisted() {\n  var _this$opts$denylist;\n\n  const denylist = (_this$opts$denylist = this.opts.denylist) != null ? _this$opts$denylist : this.opts.blacklist;\n  return denylist && denylist.indexOf(this.node.type) > -1;\n}\n\nfunction visit() {\n  if (!this.node) {\n    return false;\n  }\n\n  if (this.isDenylisted()) {\n    return false;\n  }\n\n  if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {\n    return false;\n  }\n\n  if (this.shouldSkip || this.call(\"enter\") || this.shouldSkip) {\n    this.debug(\"Skip...\");\n    return this.shouldStop;\n  }\n\n  this.debug(\"Recursing into...\");\n\n  _index.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys);\n\n  this.call(\"exit\");\n  return this.shouldStop;\n}\n\nfunction skip() {\n  this.shouldSkip = true;\n}\n\nfunction skipKey(key) {\n  if (this.skipKeys == null) {\n    this.skipKeys = {};\n  }\n\n  this.skipKeys[key] = true;\n}\n\nfunction stop() {\n  this._traverseFlags |= _index2.SHOULD_SKIP | _index2.SHOULD_STOP;\n}\n\nfunction setScope() {\n  if (this.opts && this.opts.noScope) return;\n  let path = this.parentPath;\n  if (this.key === \"key\" && path.isMethod()) path = path.parentPath;\n  let target;\n\n  while (path && !target) {\n    if (path.opts && path.opts.noScope) return;\n    target = path.scope;\n    path = path.parentPath;\n  }\n\n  this.scope = this.getScope(target);\n  if (this.scope) this.scope.init();\n}\n\nfunction setContext(context) {\n  if (this.skipKeys != null) {\n    this.skipKeys = {};\n  }\n\n  this._traverseFlags = 0;\n\n  if (context) {\n    this.context = context;\n    this.state = context.state;\n    this.opts = context.opts;\n  }\n\n  this.setScope();\n  return this;\n}\n\nfunction resync() {\n  if (this.removed) return;\n\n  this._resyncParent();\n\n  this._resyncList();\n\n  this._resyncKey();\n}\n\nfunction _resyncParent() {\n  if (this.parentPath) {\n    this.parent = this.parentPath.node;\n  }\n}\n\nfunction _resyncKey() {\n  if (!this.container) return;\n  if (this.node === this.container[this.key]) return;\n\n  if (Array.isArray(this.container)) {\n    for (let i = 0; i < this.container.length; i++) {\n      if (this.container[i] === this.node) {\n        return this.setKey(i);\n      }\n    }\n  } else {\n    for (const key of Object.keys(this.container)) {\n      if (this.container[key] === this.node) {\n        return this.setKey(key);\n      }\n    }\n  }\n\n  this.key = null;\n}\n\nfunction _resyncList() {\n  if (!this.parent || !this.inList) return;\n  const newContainer = this.parent[this.listKey];\n  if (this.container === newContainer) return;\n  this.container = newContainer || null;\n}\n\nfunction _resyncRemoved() {\n  if (this.key == null || !this.container || this.container[this.key] !== this.node) {\n    this._markRemoved();\n  }\n}\n\nfunction popContext() {\n  this.contexts.pop();\n\n  if (this.contexts.length > 0) {\n    this.setContext(this.contexts[this.contexts.length - 1]);\n  } else {\n    this.setContext(undefined);\n  }\n}\n\nfunction pushContext(context) {\n  this.contexts.push(context);\n  this.setContext(context);\n}\n\nfunction setup(parentPath, container, listKey, key) {\n  this.listKey = listKey;\n  this.container = container;\n  this.parentPath = parentPath || this.parentPath;\n  this.setKey(key);\n}\n\nfunction setKey(key) {\n  var _this$node;\n\n  this.key = key;\n  this.node = this.container[this.key];\n  this.type = (_this$node = this.node) == null ? void 0 : _this$node.type;\n}\n\nfunction requeue(pathToQueue = this) {\n  if (pathToQueue.removed) return;\n  ;\n  const contexts = this.contexts;\n\n  for (const context of contexts) {\n    context.maybeQueue(pathToQueue);\n  }\n}\n\nfunction _getQueueContexts() {\n  let path = this;\n  let contexts = this.contexts;\n\n  while (!contexts.length) {\n    path = path.parentPath;\n    if (!path) break;\n    contexts = path.contexts;\n  }\n\n  return contexts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.remove = remove;\nexports._removeFromScope = _removeFromScope;\nexports._callRemovalHooks = _callRemovalHooks;\nexports._remove = _remove;\nexports._markRemoved = _markRemoved;\nexports._assertUnremoved = _assertUnremoved;\n\nvar _removalHooks = require(\"./lib/removal-hooks\");\n\nvar _cache = require(\"../cache\");\n\nvar _index = require(\"./index\");\n\nfunction remove() {\n  var _this$opts;\n\n  this._assertUnremoved();\n\n  this.resync();\n\n  if (!((_this$opts = this.opts) != null && _this$opts.noScope)) {\n    this._removeFromScope();\n  }\n\n  if (this._callRemovalHooks()) {\n    this._markRemoved();\n\n    return;\n  }\n\n  this.shareCommentsWithSiblings();\n\n  this._remove();\n\n  this._markRemoved();\n}\n\nfunction _removeFromScope() {\n  const bindings = this.getBindingIdentifiers();\n  Object.keys(bindings).forEach(name => this.scope.removeBinding(name));\n}\n\nfunction _callRemovalHooks() {\n  for (const fn of _removalHooks.hooks) {\n    if (fn(this, this.parentPath)) return true;\n  }\n}\n\nfunction _remove() {\n  if (Array.isArray(this.container)) {\n    this.container.splice(this.key, 1);\n    this.updateSiblingKeys(this.key, -1);\n  } else {\n    this._replaceWith(null);\n  }\n}\n\nfunction _markRemoved() {\n  this._traverseFlags |= _index.SHOULD_SKIP | _index.REMOVED;\n  if (this.parent) _cache.path.get(this.parent).delete(this.node);\n  this.node = null;\n}\n\nfunction _assertUnremoved() {\n  if (this.removed) {\n    throw this.buildCodeFrameError(\"NodePath has been removed so is read-only.\");\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hooks = void 0;\nconst hooks = [function (self, parent) {\n  const removeParent = self.key === \"test\" && (parent.isWhile() || parent.isSwitchCase()) || self.key === \"declaration\" && parent.isExportDeclaration() || self.key === \"body\" && parent.isLabeledStatement() || self.listKey === \"declarations\" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === \"expression\" && parent.isExpressionStatement();\n\n  if (removeParent) {\n    parent.remove();\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n    parent.replaceWith(parent.node.expressions[0]);\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isBinary()) {\n    if (self.key === \"left\") {\n      parent.replaceWith(parent.node.right);\n    } else {\n      parent.replaceWith(parent.node.left);\n    }\n\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isIfStatement() && (self.key === \"consequent\" || self.key === \"alternate\") || self.key === \"body\" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n    self.replaceWith({\n      type: \"BlockStatement\",\n      body: []\n    });\n    return true;\n  }\n}];\nexports.hooks = hooks;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.insertBefore = insertBefore;\nexports._containerInsert = _containerInsert;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._containerInsertAfter = _containerInsertAfter;\nexports.insertAfter = insertAfter;\nexports.updateSiblingKeys = updateSiblingKeys;\nexports._verifyNodeList = _verifyNodeList;\nexports.unshiftContainer = unshiftContainer;\nexports.pushContainer = pushContainer;\nexports.hoist = hoist;\n\nvar _cache = require(\"../cache\");\n\nvar _hoister = require(\"./lib/hoister\");\n\nvar _index = require(\"./index\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  arrowFunctionExpression,\n  assertExpression,\n  assignmentExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  isExpression\n} = _t;\n\nfunction insertBefore(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertBefore(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.unshiftContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n  const paths = [];\n  this.container.splice(from, 0, ...nodes);\n\n  for (let i = 0; i < nodes.length; i++) {\n    const to = from + i;\n    const path = this.getSibling(to);\n    paths.push(path);\n\n    if (this.context && this.context.queue) {\n      path.pushContext(this.context);\n    }\n  }\n\n  const contexts = this._getQueueContexts();\n\n  for (const path of paths) {\n    path.setScope();\n    path.debug(\"Inserted.\");\n\n    for (const context of contexts) {\n      context.maybeQueue(path, true);\n    }\n  }\n\n  return paths;\n}\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\nfunction insertAfter(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertAfter(nodes.map(node => {\n      return isExpression(node) ? expressionStatement(node) : node;\n    }));\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() && !parentPath.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      const node = this.node;\n      let {\n        scope\n      } = this;\n\n      if (scope.path.isPattern()) {\n        assertExpression(node);\n        this.replaceWith(callExpression(arrowFunctionExpression([], node), []));\n        this.get(\"callee.body\").insertAfter(nodes);\n        return [this];\n      }\n\n      if (parentPath.isMethod({\n        computed: true,\n        key: node\n      })) {\n        scope = scope.parent;\n      }\n\n      const temp = scope.generateDeclaredUidIdentifier();\n      nodes.unshift(expressionStatement(assignmentExpression(\"=\", cloneNode(temp), node)));\n      nodes.push(expressionStatement(cloneNode(temp)));\n    }\n\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertAfter(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.pushContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  if (!this.parent) return;\n\n  const paths = _cache.path.get(this.parent);\n\n  for (const [, path] of paths) {\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\nfunction _verifyNodeList(nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  if (!Array.isArray(nodes)) {\n    nodes = [nodes];\n  }\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    let msg;\n\n    if (!node) {\n      msg = \"has falsy node\";\n    } else if (typeof node !== \"object\") {\n      msg = \"contains a non-object node\";\n    } else if (!node.type) {\n      msg = \"without a type\";\n    } else if (node instanceof _index.default) {\n      msg = \"has a NodePath when it expected a raw object\";\n    }\n\n    if (msg) {\n      const type = Array.isArray(node) ? \"array\" : typeof node;\n      throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`);\n    }\n  }\n\n  return nodes;\n}\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: this.node[listKey],\n    listKey,\n    key: 0\n  }).setContext(this.context);\n\n  return path._containerInsertBefore(nodes);\n}\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  const verifiedNodes = this._verifyNodeList(nodes);\n\n  const container = this.node[listKey];\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey,\n    key: container.length\n  }).setContext(this.context);\n\n  return path.replaceWithMultiple(verifiedNodes);\n}\n\nfunction hoist(scope = this.scope) {\n  const hoister = new _hoister.default(this, scope);\n  return hoister.run();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _t = require(\"@babel/types\");\n\nvar _t2 = _t;\nconst {\n  react\n} = _t;\nconst {\n  cloneNode,\n  jsxExpressionContainer,\n  variableDeclaration,\n  variableDeclarator\n} = _t2;\nconst referenceVisitor = {\n  ReferencedIdentifier(path, state) {\n    if (path.isJSXIdentifier() && react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {\n      return;\n    }\n\n    if (path.node.name === \"this\") {\n      let scope = path.scope;\n\n      do {\n        if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (scope = scope.parent);\n\n      if (scope) state.breakOnScopePaths.push(scope.path);\n    }\n\n    const binding = path.scope.getBinding(path.node.name);\n    if (!binding) return;\n\n    for (const violation of binding.constantViolations) {\n      if (violation.scope !== binding.path.scope) {\n        state.mutableBinding = true;\n        path.stop();\n        return;\n      }\n    }\n\n    if (binding !== state.scope.getBinding(path.node.name)) return;\n    state.bindings[path.node.name] = binding;\n  }\n\n};\n\nclass PathHoister {\n  constructor(path, scope) {\n    this.breakOnScopePaths = void 0;\n    this.bindings = void 0;\n    this.mutableBinding = void 0;\n    this.scopes = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.attachAfter = void 0;\n    this.breakOnScopePaths = [];\n    this.bindings = {};\n    this.mutableBinding = false;\n    this.scopes = [];\n    this.scope = scope;\n    this.path = path;\n    this.attachAfter = false;\n  }\n\n  isCompatibleScope(scope) {\n    for (const key of Object.keys(this.bindings)) {\n      const binding = this.bindings[key];\n\n      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getCompatibleScopes() {\n    let scope = this.path.scope;\n\n    do {\n      if (this.isCompatibleScope(scope)) {\n        this.scopes.push(scope);\n      } else {\n        break;\n      }\n\n      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n        break;\n      }\n    } while (scope = scope.parent);\n  }\n\n  getAttachmentPath() {\n    let path = this._getAttachmentPath();\n\n    if (!path) return;\n    let targetScope = path.scope;\n\n    if (targetScope.path === path) {\n      targetScope = path.scope.parent;\n    }\n\n    if (targetScope.path.isProgram() || targetScope.path.isFunction()) {\n      for (const name of Object.keys(this.bindings)) {\n        if (!targetScope.hasOwnBinding(name)) continue;\n        const binding = this.bindings[name];\n\n        if (binding.kind === \"param\" || binding.path.parentKey === \"params\") {\n          continue;\n        }\n\n        const bindingParentPath = this.getAttachmentParentForPath(binding.path);\n\n        if (bindingParentPath.key >= path.key) {\n          this.attachAfter = true;\n          path = binding.path;\n\n          for (const violationPath of binding.constantViolations) {\n            if (this.getAttachmentParentForPath(violationPath).key > path.key) {\n              path = violationPath;\n            }\n          }\n        }\n      }\n    }\n\n    return path;\n  }\n\n  _getAttachmentPath() {\n    const scopes = this.scopes;\n    const scope = scopes.pop();\n    if (!scope) return;\n\n    if (scope.path.isFunction()) {\n      if (this.hasOwnParamBindings(scope)) {\n        if (this.scope === scope) return;\n        const bodies = scope.path.get(\"body\").get(\"body\");\n\n        for (let i = 0; i < bodies.length; i++) {\n          if (bodies[i].node._blockHoist) continue;\n          return bodies[i];\n        }\n      } else {\n        return this.getNextScopeAttachmentParent();\n      }\n    } else if (scope.path.isProgram()) {\n      return this.getNextScopeAttachmentParent();\n    }\n  }\n\n  getNextScopeAttachmentParent() {\n    const scope = this.scopes.pop();\n    if (scope) return this.getAttachmentParentForPath(scope.path);\n  }\n\n  getAttachmentParentForPath(path) {\n    do {\n      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n        return path;\n      }\n    } while (path = path.parentPath);\n  }\n\n  hasOwnParamBindings(scope) {\n    for (const name of Object.keys(this.bindings)) {\n      if (!scope.hasOwnBinding(name)) continue;\n      const binding = this.bindings[name];\n      if (binding.kind === \"param\" && binding.constant) return true;\n    }\n\n    return false;\n  }\n\n  run() {\n    this.path.traverse(referenceVisitor, this);\n    if (this.mutableBinding) return;\n    this.getCompatibleScopes();\n    const attachTo = this.getAttachmentPath();\n    if (!attachTo) return;\n    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n    let uid = attachTo.scope.generateUidIdentifier(\"ref\");\n    const declarator = variableDeclarator(uid, this.path.node);\n    const insertFn = this.attachAfter ? \"insertAfter\" : \"insertBefore\";\n    const [attached] = attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : variableDeclaration(\"var\", [declarator])]);\n    const parent = this.path.parentPath;\n\n    if (parent.isJSXElement() && this.path.container === parent.node.children) {\n      uid = jsxExpressionContainer(uid);\n    }\n\n    this.path.replaceWith(cloneNode(uid));\n    return attachTo.isVariableDeclarator() ? attached.get(\"init\") : attached.get(\"declarations.0.init\");\n  }\n\n}\n\nexports.default = PathHoister;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOpposite = getOpposite;\nexports.getCompletionRecords = getCompletionRecords;\nexports.getSibling = getSibling;\nexports.getPrevSibling = getPrevSibling;\nexports.getNextSibling = getNextSibling;\nexports.getAllNextSiblings = getAllNextSiblings;\nexports.getAllPrevSiblings = getAllPrevSiblings;\nexports.get = get;\nexports._getKey = _getKey;\nexports._getPattern = _getPattern;\nexports.getBindingIdentifiers = getBindingIdentifiers;\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\nexports.getBindingIdentifierPaths = getBindingIdentifierPaths;\nexports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;\n\nvar _index = require(\"./index\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  getBindingIdentifiers: _getBindingIdentifiers,\n  getOuterBindingIdentifiers: _getOuterBindingIdentifiers,\n  isDeclaration,\n  numericLiteral,\n  unaryExpression\n} = _t;\nconst NORMAL_COMPLETION = 0;\nconst BREAK_COMPLETION = 1;\n\nfunction NormalCompletion(path) {\n  return {\n    type: NORMAL_COMPLETION,\n    path\n  };\n}\n\nfunction BreakCompletion(path) {\n  return {\n    type: BREAK_COMPLETION,\n    path\n  };\n}\n\nfunction getOpposite() {\n  if (this.key === \"left\") {\n    return this.getSibling(\"right\");\n  } else if (this.key === \"right\") {\n    return this.getSibling(\"left\");\n  }\n\n  return null;\n}\n\nfunction addCompletionRecords(path, records, context) {\n  if (path) {\n    records.push(..._getCompletionRecords(path, context));\n  }\n\n  return records;\n}\n\nfunction completionRecordForSwitch(cases, records, context) {\n  let lastNormalCompletions = [];\n\n  for (let i = 0; i < cases.length; i++) {\n    const casePath = cases[i];\n\n    const caseCompletions = _getCompletionRecords(casePath, context);\n\n    const normalCompletions = [];\n    const breakCompletions = [];\n\n    for (const c of caseCompletions) {\n      if (c.type === NORMAL_COMPLETION) {\n        normalCompletions.push(c);\n      }\n\n      if (c.type === BREAK_COMPLETION) {\n        breakCompletions.push(c);\n      }\n    }\n\n    if (normalCompletions.length) {\n      lastNormalCompletions = normalCompletions;\n    }\n\n    records.push(...breakCompletions);\n  }\n\n  records.push(...lastNormalCompletions);\n  return records;\n}\n\nfunction normalCompletionToBreak(completions) {\n  completions.forEach(c => {\n    c.type = BREAK_COMPLETION;\n  });\n}\n\nfunction replaceBreakStatementInBreakCompletion(completions, reachable) {\n  completions.forEach(c => {\n    if (c.path.isBreakStatement({\n      label: null\n    })) {\n      if (reachable) {\n        c.path.replaceWith(unaryExpression(\"void\", numericLiteral(0)));\n      } else {\n        c.path.remove();\n      }\n    }\n  });\n}\n\nfunction getStatementListCompletion(paths, context) {\n  const completions = [];\n\n  if (context.canHaveBreak) {\n    let lastNormalCompletions = [];\n\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      const newContext = Object.assign({}, context, {\n        inCaseClause: false\n      });\n\n      if (path.isBlockStatement() && (context.inCaseClause || context.shouldPopulateBreak)) {\n        newContext.shouldPopulateBreak = true;\n      } else {\n        newContext.shouldPopulateBreak = false;\n      }\n\n      const statementCompletions = _getCompletionRecords(path, newContext);\n\n      if (statementCompletions.length > 0 && statementCompletions.every(c => c.type === BREAK_COMPLETION)) {\n        if (lastNormalCompletions.length > 0 && statementCompletions.every(c => c.path.isBreakStatement({\n          label: null\n        }))) {\n          normalCompletionToBreak(lastNormalCompletions);\n          completions.push(...lastNormalCompletions);\n\n          if (lastNormalCompletions.some(c => c.path.isDeclaration())) {\n            completions.push(...statementCompletions);\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n\n          replaceBreakStatementInBreakCompletion(statementCompletions, false);\n        } else {\n          completions.push(...statementCompletions);\n\n          if (!context.shouldPopulateBreak) {\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n        }\n\n        break;\n      }\n\n      if (i === paths.length - 1) {\n        completions.push(...statementCompletions);\n      } else {\n        lastNormalCompletions = [];\n\n        for (let i = 0; i < statementCompletions.length; i++) {\n          const c = statementCompletions[i];\n\n          if (c.type === BREAK_COMPLETION) {\n            completions.push(c);\n          }\n\n          if (c.type === NORMAL_COMPLETION) {\n            lastNormalCompletions.push(c);\n          }\n        }\n      }\n    }\n  } else if (paths.length) {\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const pathCompletions = _getCompletionRecords(paths[i], context);\n\n      if (pathCompletions.length > 1 || pathCompletions.length === 1 && !pathCompletions[0].path.isVariableDeclaration()) {\n        completions.push(...pathCompletions);\n        break;\n      }\n    }\n  }\n\n  return completions;\n}\n\nfunction _getCompletionRecords(path, context) {\n  let records = [];\n\n  if (path.isIfStatement()) {\n    records = addCompletionRecords(path.get(\"consequent\"), records, context);\n    records = addCompletionRecords(path.get(\"alternate\"), records, context);\n  } else if (path.isDoExpression() || path.isFor() || path.isWhile() || path.isLabeledStatement()) {\n    return addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isProgram() || path.isBlockStatement()) {\n    return getStatementListCompletion(path.get(\"body\"), context);\n  } else if (path.isFunction()) {\n    return _getCompletionRecords(path.get(\"body\"), context);\n  } else if (path.isTryStatement()) {\n    records = addCompletionRecords(path.get(\"block\"), records, context);\n    records = addCompletionRecords(path.get(\"handler\"), records, context);\n  } else if (path.isCatchClause()) {\n    return addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isSwitchStatement()) {\n    return completionRecordForSwitch(path.get(\"cases\"), records, context);\n  } else if (path.isSwitchCase()) {\n    return getStatementListCompletion(path.get(\"consequent\"), {\n      canHaveBreak: true,\n      shouldPopulateBreak: false,\n      inCaseClause: true\n    });\n  } else if (path.isBreakStatement()) {\n    records.push(BreakCompletion(path));\n  } else {\n    records.push(NormalCompletion(path));\n  }\n\n  return records;\n}\n\nfunction getCompletionRecords() {\n  const records = _getCompletionRecords(this, {\n    canHaveBreak: false,\n    shouldPopulateBreak: false,\n    inCaseClause: false\n  });\n\n  return records.map(r => r.path);\n}\n\nfunction getSibling(key) {\n  return _index.default.get({\n    parentPath: this.parentPath,\n    parent: this.parent,\n    container: this.container,\n    listKey: this.listKey,\n    key: key\n  }).setContext(this.context);\n}\n\nfunction getPrevSibling() {\n  return this.getSibling(this.key - 1);\n}\n\nfunction getNextSibling() {\n  return this.getSibling(this.key + 1);\n}\n\nfunction getAllNextSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(++_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(++_key);\n  }\n\n  return siblings;\n}\n\nfunction getAllPrevSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(--_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(--_key);\n  }\n\n  return siblings;\n}\n\nfunction get(key, context = true) {\n  if (context === true) context = this.context;\n  const parts = key.split(\".\");\n\n  if (parts.length === 1) {\n    return this._getKey(key, context);\n  } else {\n    return this._getPattern(parts, context);\n  }\n}\n\nfunction _getKey(key, context) {\n  const node = this.node;\n  const container = node[key];\n\n  if (Array.isArray(container)) {\n    return container.map((_, i) => {\n      return _index.default.get({\n        listKey: key,\n        parentPath: this,\n        parent: node,\n        container: container,\n        key: i\n      }).setContext(context);\n    });\n  } else {\n    return _index.default.get({\n      parentPath: this,\n      parent: node,\n      container: node,\n      key: key\n    }).setContext(context);\n  }\n}\n\nfunction _getPattern(parts, context) {\n  let path = this;\n\n  for (const part of parts) {\n    if (part === \".\") {\n      path = path.parentPath;\n    } else {\n      if (Array.isArray(path)) {\n        path = path[part];\n      } else {\n        path = path.get(part, context);\n      }\n    }\n  }\n\n  return path;\n}\n\nfunction getBindingIdentifiers(duplicates) {\n  return _getBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getOuterBindingIdentifiers(duplicates) {\n  return _getOuterBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getBindingIdentifierPaths(duplicates = false, outerOnly = false) {\n  const path = this;\n  const search = [path];\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    if (!id.node) continue;\n    const keys = _getBindingIdentifiers.keys[id.node.type];\n\n    if (id.isIdentifier()) {\n      if (duplicates) {\n        const _ids = ids[id.node.name] = ids[id.node.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.node.name] = id;\n      }\n\n      continue;\n    }\n\n    if (id.isExportDeclaration()) {\n      const declaration = id.get(\"declaration\");\n\n      if (isDeclaration(declaration)) {\n        search.push(declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if (id.isFunctionDeclaration()) {\n        search.push(id.get(\"id\"));\n        continue;\n      }\n\n      if (id.isFunctionExpression()) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const child = id.get(key);\n\n        if (Array.isArray(child)) {\n          search.push(...child);\n        } else if (child.node) {\n          search.push(child);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\nfunction getOuterBindingIdentifierPaths(duplicates) {\n  return this.getBindingIdentifierPaths(duplicates, true);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  addComment: _addComment,\n  addComments: _addComments\n} = _t;\n\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n  const node = this.node;\n  if (!node) return;\n  const trailing = node.trailingComments;\n  const leading = node.leadingComments;\n  if (!trailing && !leading) return;\n  const prev = this.getSibling(this.key - 1);\n  const next = this.getSibling(this.key + 1);\n  const hasPrev = Boolean(prev.node);\n  const hasNext = Boolean(next.node);\n\n  if (hasPrev && !hasNext) {\n    prev.addComments(\"trailing\", trailing);\n  } else if (hasNext && !hasPrev) {\n    next.addComments(\"leading\", leading);\n  }\n}\n\nfunction addComment(type, content, line) {\n  _addComment(this.node, type, content, line);\n}\n\nfunction addComments(type, comments) {\n  _addComments(this.node, type, comments);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.verify = verify;\nexports.merge = merge;\n\nvar virtualTypes = require(\"./path/lib/virtual-types\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  DEPRECATED_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  TYPES\n} = _t;\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const wrapper = virtualTypes[nodeType];\n    if (!wrapper) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(wrapper, fns[type]);\n    }\n\n    delete visitor[nodeType];\n\n    if (wrapper.types) {\n      for (const type of wrapper.types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecatedKey = DEPRECATED_KEYS[nodeType];\n\n    if (deprecatedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecatedKey}`);\n      aliases = [deprecatedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = Object.assign({}, fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(wrapper, fn) {\n  const newFn = function (path) {\n    if (wrapper.checkPath(path)) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"denylist\" || key === \"noScope\" || key === \"skipKeys\" || key === \"blacklist\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Hub {\n  getCode() {}\n\n  getScope() {}\n\n  addHelper() {\n    throw new Error(\"Helpers are not supported by the default hub.\");\n  }\n\n  buildError(node, msg, Error = TypeError) {\n    return new Error(msg);\n  }\n\n}\n\nexports.default = Hub;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NodePath\", {\n  enumerable: true,\n  get: function () {\n    return _path.default;\n  }\n});\nObject.defineProperty(exports, \"Scope\", {\n  enumerable: true,\n  get: function () {\n    return _scope.default;\n  }\n});\nObject.defineProperty(exports, \"Hub\", {\n  enumerable: true,\n  get: function () {\n    return _hub.default;\n  }\n});\nexports.visitors = exports.default = void 0;\n\nvar _context = require(\"./context\");\n\nvar visitors = require(\"./visitors\");\n\nexports.visitors = visitors;\n\nvar _t = require(\"@babel/types\");\n\nvar cache = require(\"./cache\");\n\nvar _path = require(\"./path\");\n\nvar _scope = require(\"./scope\");\n\nvar _hub = require(\"./hub\");\n\nconst {\n  VISITOR_KEYS,\n  removeProperties,\n  traverseFast\n} = _t;\n\nfunction traverse(parent, opts = {}, scope, state, parentPath) {\n  if (!parent) return;\n\n  if (!opts.noScope && !scope) {\n    if (parent.type !== \"Program\" && parent.type !== \"File\") {\n      throw new Error(\"You must pass a scope and parentPath unless traversing a Program/File. \" + `Instead of that you tried to traverse a ${parent.type} node without ` + \"passing scope and parentPath.\");\n    }\n  }\n\n  if (!VISITOR_KEYS[parent.type]) {\n    return;\n  }\n\n  visitors.explode(opts);\n  traverse.node(parent, opts, scope, state, parentPath);\n}\n\nvar _default = traverse;\nexports.default = _default;\ntraverse.visitors = visitors;\ntraverse.verify = visitors.verify;\ntraverse.explode = visitors.explode;\n\ntraverse.cheap = function (node, enter) {\n  return traverseFast(node, enter);\n};\n\ntraverse.node = function (node, opts, scope, state, parentPath, skipKeys) {\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return;\n  const context = new _context.default(scope, opts, state, parentPath);\n\n  for (const key of keys) {\n    if (skipKeys && skipKeys[key]) continue;\n    if (context.visit(node, key)) return;\n  }\n};\n\ntraverse.clearNode = function (node, opts) {\n  removeProperties(node, opts);\n  cache.path.delete(node);\n};\n\ntraverse.removeProperties = function (tree, opts) {\n  traverseFast(tree, traverse.clearNode, opts);\n  return tree;\n};\n\nfunction hasDenylistedType(path, state) {\n  if (path.node.type === state.type) {\n    state.has = true;\n    path.stop();\n  }\n}\n\ntraverse.hasType = function (tree, type, denylistTypes) {\n  if (denylistTypes != null && denylistTypes.includes(tree.type)) return false;\n  if (tree.type === type) return true;\n  const state = {\n    has: false,\n    type: type\n  };\n  traverse(tree, {\n    noScope: true,\n    denylist: denylistTypes,\n    enter: hasDenylistedType\n  }, null, state);\n  return state.has;\n};\n\ntraverse.cache = cache;"],"sourceRoot":""}