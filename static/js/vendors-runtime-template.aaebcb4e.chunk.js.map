{"version":3,"sources":["../../node_modules/@babel/template/lib/index.js","../../node_modules/@babel/parser/lib/index.js","../../node_modules/@babel/code-frame/lib/index.js","../../node_modules/@babel/template/lib/options.js","../../node_modules/@babel/template/lib/parse.js","../../node_modules/@babel/highlight/node_modules/color-convert/conversions.js","../../node_modules/@babel/template/lib/populate.js","../../node_modules/@babel/plugin-transform-classes/lib/index.js","../../node_modules/@babel/template/lib/formatters.js","../../node_modules/@babel/template/lib/builder.js","../../node_modules/@babel/template/lib/string.js","../../node_modules/@babel/highlight/lib/index.js","../../node_modules/@babel/highlight/node_modules/chalk/index.js","../../node_modules/@babel/highlight/node_modules/ansi-styles/index.js","../../node_modules/@babel/highlight/node_modules/color-convert/index.js","../../node_modules/@babel/highlight/node_modules/color-name/index.js","../../node_modules/@babel/highlight/node_modules/color-convert/route.js","../../node_modules/@babel/highlight/node_modules/supports-color/browser.js","../../node_modules/@babel/highlight/node_modules/chalk/templates.js","../../node_modules/@babel/template/lib/literal.js","../../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js"],"names":["Object","defineProperty","exports","value","statements","statement","smart","program","expression","default","formatters","require","_builder","_default","assign","bind","undefined","ast","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","Position","line","col","this","column","SourceLocation","start","end","filename","identifierName","setTrailingComments","node","comments","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","i","length","CommentsParser","comment","loc","state","push","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","splice","leadingComments","setLeadingComments","commentStart","input","charCodeAt","type","properties","arguments","params","specifiers","sawUnambiguousESM","ambiguousScriptDifferentAst","name","plugins","has","plugin","hasPlugin","get","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","keepReasonCodeCompat","reasonCode","syntaxPlugin","messages","templates","keys","forEach","template","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","offset","match","lineStart","lastIndex","exec","index","getLineInfo","raiseWithData","getLocationForPosition","message","replace","_","options","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","token","preserveSpace","types","brace","beforeExpr","startsExpr","isLoop","isAssign","prefix","ExportedTokenType","label","conf","keyword","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","createToken","set","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","_options$binop","_options$beforeExpr","_options$startsExpr","_options$prefix","createKeywordLike","_options$binop2","_options$beforeExpr2","_options$startsExpr2","_options$prefix2","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_from","_get","_let","_meta","_of","_sent","_set","_static","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","string","num","bigint","decimal","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","placeholder","tokenIsIdentifier","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenCanStartExpression","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsKeyword","tokenLabelName","tokenOperatorPrecedence","getExportedToken","isTokenType","obj","context","pop","j_expr","j_oTag","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","SCOPE_PROGRAM","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","add","maybeExportDefined","delete","isRedeclaredInScope","values","next","id","topLevelScope","FlowScope","args","declareFunctions","FlowScopeHandler","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","canStartJSXElement","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","startColumn","skipArrays","key","val","Array","isArray","slice","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","tokens","init","checkKeywordEscapes","pushToken","nextToken","curContext","old","createLookaheadState","curr","nextTokenStartSince","nextTokenStart","cp","trail","clear","skipSpace","curPosition","finishToken","readTmplToken","getTokenFromCode","codePointAtPos","indexOf","startSkip","ch","spaceStart","loop","skipBlockComment","addComment","attachComment","skipLineComment","CommentWhitespace","prevType","readToken_interpreter","nextPos","expectPlugin","getPluginOption","readWord1","finishOp","readNumber","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt","readToken_gt","readToken_eq_excl","readToken_numberSign","readWord","fromCodePoint","str","escaped","inClass","content","mods","char","includes","pattern","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","invalid","total","e","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseInt","parseFloat","throwOnInvalid","codePos","readHexChar","quote","out","chunkStart","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","substr","octal","n","firstCode","escStart","identifierCheck","esc","ClassScope","privateNames","loneAccessors","ClassScopeHandler","stack","oldClassScope","current","from","elementType","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","UtilParser","extra","nameStart","nameEnd","nextCh","isUnparsedContextual","isContextual","eatContextual","unexpected","hasPrecedingLineBreak","eat","canInsertSemicolon","allowAsi","isLineTerminator","messageOrType","missingPlugin","names","some","join","fn","oldState","clone","abortSignal","failState","thrown","aborted","refExpressionErrors","andThrow","shorthandAssign","doubleProto","optionalParameters","isPrivateName","property","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","paramFlags","enter","ExpressionErrors","Node","parser","ranges","range","NodePrototype","prototype","cloneIdentifier","cloned","create","expectedNode","cloneStringLiteral","clonePlaceholder","__clone","newNode","NodeUtils","startNodeAt","finishNodeAt","processComment","locationNode","resetStartLocation","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","Error","j_cTag","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","assert","x","TSErrors","AbstractMethodHasImplementation","AbstractPropertyHasInitializer","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","PlaceHolderErrors","ClassNameIsRequired","option","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","regex","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","stmt","expressionValue","raw","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","map","d","directiveToStmt","body","concat","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","isBinding","isAssignable","isLHS","toAssignable","optional","callee","_node$arguments$","attributes","exported","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","jsxReadEntity","jsxReadNewLine","normalizeCRLF","entity","count","jsxParseIdentifier","jsxParseNamespacedName","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","jsxParseElement","replaceToken","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","flowParseInterfaceType","flowIdentToTypeAnnotation","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","lookaheadCharCode","setOptionalParametersError","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","result","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","isIteratorStart","readIterator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","imported","specifierTypeKind","isLookaheadContextual","as_ident","specifierIsTypeImport","checkReservedWord","allowModifiers","call","afterLeftParse","_jsx","tryParse","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","async","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","file","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","hasOwnProperty","parseElement","tsIsListTerminator","refTrailingCommaPos","nonNull","tsParseDelimitedListWorker","expectSuccess","element","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","tsParseTypeParameterName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","nodeType","keywordTypeFromName","tsParseNonArrayType","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","isOptionalCall","missingParenErrorPos","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","interfaceNode","modifiers","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","reportReservedArrowTypeParam","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","isString","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","rightOfAs","leftOfAsKey","rightOfAsKey","leftOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","parseModuleExportName","v8intrinsic","v8IntrinsicStart","parseIdentifierName","identifier","parseV8Intrinsic","placeholders","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","startsWith","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","unwrapParenthesizedExpression","LValParser","_node$extra3","recordParenthesizedIdentifierError","last","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","arg","raiseTrailingCommaAfterRest","toReferencedListDeep","refNeedsArrowPos","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","_startLoc","_startPos","_left","checkClashes","disallowLetBinding","strictModeChanged","isObjectMethod","elem","invalidHackPipeBodies","ExpressionParser","isRecord","protoRef","used","enterInitialScopes","finalizeRemainingComments","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","parsePrivateName","parseMaybeUnaryOrPrivate","getPrivateNameSV","hasIn","usePrivateName","op","prec","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","_body$extra","topicReferenceWasUsedInCurrentContext","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","update","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","resetPreviousNodeTrailingComments","parseSuper","parseImportMetaProperty","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","pipeProposal","parseTopicReference","lookaheadCh","codePointAt","expectOnePlugin","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","tokenType","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","pluginTopicToken","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","takeSurroundingComments","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","parseMaybePrivateName","generator","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","isKeyword","inFunction","recordParameterInitializerError","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","parseProgram","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","StatementParser","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withSmartMixTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithAsync","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","block","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","declareClassPrivateMethodInScope","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","isTypeExport","parseExportDeclaration","FUNC_STATEMENT","nextType","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","parseExportSpecifier","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","importSpecifier","parseImportSpecifier","Parser","opts","getOptions","pluginMap","pluginsMap","parseTopLevel","tokTypes","internalTokenTypes","generateExportedTokenTypes","getParser","decoratorsBeforeExport","proposal","proposalList","p","tupleSyntaxIsHash","topicToken","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","merge","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","normalizeReplacements","replacements","reduce","acc","replacement","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","_excluded","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","traverse","placeholderVisitorHandler","_t","isCallExpression","isExpressionStatement","isFunction","isIdentifier","isJSXIdentifier","isNewExpression","isPlaceholder","isStringLiteral","PATTERN","ancestors","_state$placeholderWhi","parent","resolve","resolveAncestors","isDuplicate","cssKeywords","reverseKeywords","convert","module","rgb","channels","hsl","hsv","hwb","cmyk","xyz","lch","ansi16","ansi256","hcg","apple","gray","model","h","l","r","g","rdif","gdif","bdif","s","v","diff","diffc","c","k","reversed","currentClosestKeyword","y","currentClosestDistance","distance","pow","z","t1","t2","t3","smin","lmin","hi","floor","q","sl","vmin","wh","bl","ratio","m","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","round","ansi","color","mult","rem","colorString","hue","chroma","mg","pure","w","metadata","cloneNode","placeholderName","reverse","stringLiteral","blockStatement","expressionStatement","emptyStatement","applyReplacement","_helperPluginUtils","_helperAnnotateAsPure","_helperFunctionName","_helperSplitExportDeclaration","_core","_globals","_transformClass","getBuiltinClasses","category","builtinClasses","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","setClassMethods","assumption","constantSuper","superIsCallableConstructor","noClassCalls","VISITED","Symbol","visitor","ExportDefaultDeclaration","path","isClassDeclaration","ClassDeclaration","ref","generateUidIdentifier","replaceWith","variableDeclaration","variableDeclarator","toExpression","ClassExpression","inferred","isArrowFunctionExpression","arrowFunctionToExpression","assertExpressionStatement","makeStatementFormatter","unwrap","createTemplateBuilder","defaultOpts","templateFnCache","WeakMap","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","text","toLowerCase","colorize","supportsColor","constructor","enabled","level","matchToToken","escapeStringRegexp","ansiStyles","stdoutColor","stdout","isSimpleWindowsTerm","platform","TERM","levelMapping","skipModels","styles","applyOptions","scLevel","Chalk","chalkTag","apply","setPrototypeOf","blue","open","closeRe","codes","build","_styles","_empty","visible","bgColor","bgModel","defineProperties","applyStyle","self","enumerable","hasGrey","__proto__","argsLen","originalDim","dim","strings","parts","colorConvert","wrapAnsi16","wrapAnsi256","wrapAnsi16m","italic","underline","inverse","hidden","strikethrough","black","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","groupName","group","styleName","style","ansi2ansi","rgb2rgb","ansi16m","suite","conversions","route","fromModel","routes","toModel","wrappedFn","conversion","wrapRounded","wrapRaw","deriveBFS","graph","models","buildGraph","queue","adjacents","adjacent","link","to","wrapConversion","stderr","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","parseArguments","results","chunks","trim","chunk","escape","chr","parseStyle","buildStyle","layer","escapeChar","errMsg","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements","isLoose","assumptions","classState","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","dynamicKeys","methods","instance","hasComputed","setState","newState","findThisesVisitor","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","unshiftContainer","classMethod","maybeCreateConstructor","classBodyPaths","buildCodeFrameError","methodPath","objectRef","superRef","refToPreserve","ReturnStatement","getFunctionParent","pushConstructor","pushMethod","pushBody","thisRef","generateDeclaredUidIdentifier","thisPath","parentPath","isMemberExpression","callExpression","addHelper","bareSupers","Super","wrapReturn","guaranteedSuperBeforeFinish","bareSuper","wrapSuperCall","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","isReturnStatement","pushContainer","returnStatement","returnPath","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","desc","objectExpression","objectProperty","arrayExpression","nullLiteral","lastNonNullIndex","isNullLiteral","bareSuperNode","thisExpression","isSpreadElement","memberExpression","_helperOptimiseCallExpression","container","assignmentExpression","classProto","protoDeclaration","insertProtoAliasOnce","methodName","isLiteral","func","functionExpression","toComputedKey","inheritsComments","processMethod","descKey","isNumericLiteral","isBigIntLiteral","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","hasBinding","buildConstructor","isPure","generateUidIdentifierBasedOnNode","extractDynamicKeys","closureParams","closureArgs","setupClosureParamsArgs","isStrict","isInStrictMode","constructorOnly","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration"],"mappings":"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","file":"static/js/vendors-runtime-template.aaebcb4e.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.statements = exports.statement = exports.smart = exports.program = exports.expression = exports.default = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setLeadingComments(node, comments) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  takeSurroundingComments(node, start, end) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipeBodyIsTighter: \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: 'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: \"Hack-style pipe body cannot be an unparenthesized %0 expression; please wrap it in parentheses.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction keepReasonCodeCompat(reasonCode, syntaxPlugin) {\n  {\n    if (syntaxPlugin === \"flow\" && reasonCode === \"PatternIsOptional\") {\n      return \"OptionalBindingPattern\";\n    }\n  }\n  return reasonCode;\n}\n\nfunction makeErrorTemplates(messages, code, syntaxPlugin) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode: keepReasonCodeCompat(reasonCode, syntaxPlugin),\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const value = stmt.expression.value;\n    const directive = super.stmtToDirective(stmt);\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parsePrivateName() {\n    const node = super.parsePrivateName();\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return node;\n      }\n    }\n    return this.convertPrivateNameToPrivateIdentifier(node);\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n    }\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n    }\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    propertyNode.computed = false;\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n\n    return super.isAssignable(node, isBinding);\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true)\n};\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass ExportedTokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    {\n      this.updateContext = null;\n    }\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return createToken(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nlet tokenTypeCounter = -1;\nconst tokenTypes = [];\nconst tokenLabels = [];\nconst tokenBinops = [];\nconst tokenBeforeExprs = [];\nconst tokenStartsExprs = [];\nconst tokenPrefixes = [];\n\nfunction createToken(name, options = {}) {\n  var _options$binop, _options$beforeExpr, _options$startsExpr, _options$prefix;\n\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop = options.binop) != null ? _options$binop : -1);\n  tokenBeforeExprs.push((_options$beforeExpr = options.beforeExpr) != null ? _options$beforeExpr : false);\n  tokenStartsExprs.push((_options$startsExpr = options.startsExpr) != null ? _options$startsExpr : false);\n  tokenPrefixes.push((_options$prefix = options.prefix) != null ? _options$prefix : false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(name, options = {}) {\n  var _options$binop2, _options$beforeExpr2, _options$startsExpr2, _options$prefix2;\n\n  ++tokenTypeCounter;\n  keywords$1.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop2 = options.binop) != null ? _options$binop2 : -1);\n  tokenBeforeExprs.push((_options$beforeExpr2 = options.beforeExpr) != null ? _options$beforeExpr2 : false);\n  tokenStartsExprs.push((_options$startsExpr2 = options.startsExpr) != null ? _options$startsExpr2 : false);\n  tokenPrefixes.push((_options$prefix2 = options.prefix) != null ? _options$prefix2 : false);\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n  return tokenTypeCounter;\n}\n\nconst tt = {\n  bracketL: createToken(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: createToken(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: createToken(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: createToken(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: createToken(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: createToken(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", {\n    beforeExpr\n  }),\n  semi: createToken(\";\", {\n    beforeExpr\n  }),\n  colon: createToken(\":\", {\n    beforeExpr\n  }),\n  doubleColon: createToken(\"::\", {\n    beforeExpr\n  }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", {\n    beforeExpr\n  }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", {\n    beforeExpr\n  }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", {\n    beforeExpr\n  }),\n  backQuote: createToken(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: createToken(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: createToken(\"#!...\"),\n  eq: createToken(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  xorAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: createToken(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: createToken(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: createToken(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: createToken(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: createToken(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _as: createKeywordLike(\"as\", {\n    startsExpr\n  }),\n  _assert: createKeywordLike(\"assert\", {\n    startsExpr\n  }),\n  _async: createKeywordLike(\"async\", {\n    startsExpr\n  }),\n  _await: createKeywordLike(\"await\", {\n    startsExpr\n  }),\n  _from: createKeywordLike(\"from\", {\n    startsExpr\n  }),\n  _get: createKeywordLike(\"get\", {\n    startsExpr\n  }),\n  _let: createKeywordLike(\"let\", {\n    startsExpr\n  }),\n  _meta: createKeywordLike(\"meta\", {\n    startsExpr\n  }),\n  _of: createKeywordLike(\"of\", {\n    startsExpr\n  }),\n  _sent: createKeywordLike(\"sent\", {\n    startsExpr\n  }),\n  _set: createKeywordLike(\"set\", {\n    startsExpr\n  }),\n  _static: createKeywordLike(\"static\", {\n    startsExpr\n  }),\n  _yield: createKeywordLike(\"yield\", {\n    startsExpr\n  }),\n  _asserts: createKeywordLike(\"asserts\", {\n    startsExpr\n  }),\n  _checks: createKeywordLike(\"checks\", {\n    startsExpr\n  }),\n  _exports: createKeywordLike(\"exports\", {\n    startsExpr\n  }),\n  _global: createKeywordLike(\"global\", {\n    startsExpr\n  }),\n  _implements: createKeywordLike(\"implements\", {\n    startsExpr\n  }),\n  _intrinsic: createKeywordLike(\"intrinsic\", {\n    startsExpr\n  }),\n  _infer: createKeywordLike(\"infer\", {\n    startsExpr\n  }),\n  _is: createKeywordLike(\"is\", {\n    startsExpr\n  }),\n  _mixins: createKeywordLike(\"mixins\", {\n    startsExpr\n  }),\n  _proto: createKeywordLike(\"proto\", {\n    startsExpr\n  }),\n  _require: createKeywordLike(\"require\", {\n    startsExpr\n  }),\n  _keyof: createKeywordLike(\"keyof\", {\n    startsExpr\n  }),\n  _readonly: createKeywordLike(\"readonly\", {\n    startsExpr\n  }),\n  _unique: createKeywordLike(\"unique\", {\n    startsExpr\n  }),\n  _abstract: createKeywordLike(\"abstract\", {\n    startsExpr\n  }),\n  _declare: createKeywordLike(\"declare\", {\n    startsExpr\n  }),\n  _enum: createKeywordLike(\"enum\", {\n    startsExpr\n  }),\n  _module: createKeywordLike(\"module\", {\n    startsExpr\n  }),\n  _namespace: createKeywordLike(\"namespace\", {\n    startsExpr\n  }),\n  _interface: createKeywordLike(\"interface\", {\n    startsExpr\n  }),\n  _type: createKeywordLike(\"type\", {\n    startsExpr\n  }),\n  _opaque: createKeywordLike(\"opaque\", {\n    startsExpr\n  }),\n  name: createToken(\"name\", {\n    startsExpr\n  }),\n  string: createToken(\"string\", {\n    startsExpr\n  }),\n  num: createToken(\"num\", {\n    startsExpr\n  }),\n  bigint: createToken(\"bigint\", {\n    startsExpr\n  }),\n  decimal: createToken(\"decimal\", {\n    startsExpr\n  }),\n  regexp: createToken(\"regexp\", {\n    startsExpr\n  }),\n  privateName: createToken(\"#name\", {\n    startsExpr\n  }),\n  eof: createToken(\"eof\"),\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", {\n    beforeExpr: true\n  }),\n  jsxTagStart: createToken(\"jsxTagStart\", {\n    startsExpr: true\n  }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n  placeholder: createToken(\"%%\", {\n    startsExpr: true\n  })\n};\nfunction tokenIsIdentifier(token) {\n  return token >= 87 && token <= 122;\n}\nfunction tokenKeywordOrIdentifierIsKeyword(token) {\n  return token <= 86;\n}\nfunction tokenIsKeywordOrIdentifier(token) {\n  return token >= 52 && token <= 122;\n}\nfunction tokenIsLiteralPropertyName(token) {\n  return token >= 52 && token <= 126;\n}\nfunction tokenComesBeforeExpression(token) {\n  return tokenBeforeExprs[token];\n}\nfunction tokenCanStartExpression(token) {\n  return tokenStartsExprs[token];\n}\nfunction tokenIsAssignment(token) {\n  return token >= 27 && token <= 31;\n}\nfunction tokenIsFlowInterfaceOrTypeOrOpaque(token) {\n  return token >= 119 && token <= 121;\n}\nfunction tokenIsLoop(token) {\n  return token >= 84 && token <= 86;\n}\nfunction tokenIsKeyword(token) {\n  return token >= 52 && token <= 86;\n}\nfunction tokenIsOperator(token) {\n  return token >= 35 && token <= 53;\n}\nfunction tokenIsPostfix(token) {\n  return token === 32;\n}\nfunction tokenIsPrefix(token) {\n  return tokenPrefixes[token];\n}\nfunction tokenIsTSTypeOperator(token) {\n  return token >= 111 && token <= 113;\n}\nfunction tokenIsTSDeclarationStart(token) {\n  return token >= 114 && token <= 120;\n}\nfunction tokenLabelName(token) {\n  return tokenLabels[token];\n}\nfunction tokenOperatorPrecedence(token) {\n  return tokenBinops[token];\n}\nfunction tokenIsRightAssociative(token) {\n  return token === 51;\n}\nfunction getExportedToken(token) {\n  return tokenTypes[token];\n}\nfunction isTokenType(obj) {\n  return typeof obj === \"number\";\n}\n{\n  tokenTypes[8].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[5].updateContext = tokenTypes[7].updateContext = tokenTypes[23].updateContext = context => {\n    context.push(types.brace);\n  };\n\n  tokenTypes[22].updateContext = context => {\n    if (context[context.length - 1] === types.template) {\n      context.pop();\n    } else {\n      context.push(types.template);\n    }\n  };\n\n  tokenTypes[132].updateContext = context => {\n    context.push(types.j_expr, types.j_oTag);\n  };\n}\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.lineStart = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.type = 129;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.canStartJSXElement = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init({\n    strictMode,\n    sourceType,\n    startLine,\n    startColumn\n  }) {\n    this.strict = strictMode === false ? false : strictMode === true ? true : sourceType === \"module\";\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn);\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(129);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type) {\n    this.state.type = type;\n    this.updateContext();\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(7);\n      } else {\n        this.finishToken(1);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(128, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(128, this.readWord1());\n    } else {\n      this.finishOp(25, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(21);\n    } else {\n      ++this.state.pos;\n      this.finishToken(16);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(29, 2);\n    } else {\n      this.finishOp(50, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(26, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? 49 : 48;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = 51;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? 31 : 28;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(28, 3);\n      } else {\n        this.finishOp(code === 124 ? 37 : 38, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(35, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(9);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(4);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(28, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? 39 : 41, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61 && !this.state.inType) {\n      this.finishOp(30, 2);\n    } else {\n      this.finishOp(40, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(32, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(28, 2);\n    } else {\n      this.finishOp(47, 1);\n    }\n  }\n\n  readToken_lt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === 60) {\n      if (this.input.charCodeAt(pos + 2) === 61) {\n        this.finishOp(28, 3);\n        return;\n      }\n\n      this.finishOp(46, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(45, 2);\n      return;\n    }\n\n    this.finishOp(43, 1);\n  }\n\n  readToken_gt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === 62) {\n      const size = this.input.charCodeAt(pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(pos + size) === 61) {\n        this.finishOp(28, size + 1);\n        return;\n      }\n\n      this.finishOp(46, size);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(45, 2);\n      return;\n    }\n\n    this.finishOp(44, 1);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(42, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(19);\n      return;\n    }\n\n    this.finishOp(code === 61 ? 27 : 33, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(28, 3);\n      } else {\n        this.finishOp(36, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(18);\n    } else {\n      ++this.state.pos;\n      this.finishToken(17);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(10);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(11);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(13);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(12);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(0);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(3);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(6);\n        } else {\n          ++this.state.pos;\n          this.finishToken(5);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(8);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(15, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(14);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(22);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n        this.readToken_lt();\n        return;\n\n      case 62:\n        this.readToken_gt();\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(34, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(24);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(127, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(125, str);\n      return;\n    }\n\n    this.finishToken(124, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(125, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(126, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(124, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(123, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(20)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(23);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(22);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(20, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word);\n\n    if (type !== undefined) {\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(122, word);\n    }\n  }\n\n  checkKeywordEscapes() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, tokenLabelName(type));\n    }\n  }\n\n  updateContext(prevType) {\n    const {\n      context,\n      type\n    } = this.state;\n\n    switch (type) {\n      case 8:\n        context.pop();\n        break;\n\n      case 5:\n      case 7:\n      case 23:\n        context.push(types.brace);\n        break;\n\n      case 22:\n        if (context[context.length - 1] === types.template) {\n          context.pop();\n        } else {\n          context.push(types.template);\n        }\n\n        break;\n    }\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isContextual(token) {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(token) {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  expectContextual(token, template) {\n    if (!this.eatContextual(token)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(129) || this.match(8) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator() {\n    return this.eat(13) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(13)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (isTokenType(messageOrType)) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${tokenLabelName(messageOrType)}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n\n    if (!andThrow) {\n      return shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0;\n    }\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n}\n\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\n\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n\n  const cloned = Object.create(NodePrototype);\n  cloned.type = \"StringLiteral\";\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError, \"flow\");\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type) {\n  return tokenIsKeywordOrIdentifier(type) && type !== 91;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== 123 && type !== 13 && type !== 26) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || 14);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(101);\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(10)) {\n      node.value = this.parseExpression();\n      this.expect(11);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(14);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(48)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(48)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.match(43)) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(10);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(11);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(74)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(62)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(68)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(117)) {\n      if (this.match(16)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(120)) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(121)) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(119)) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(76)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(123)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(5);\n\n    while (!this.match(8)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(77)) {\n        this.next();\n\n        if (!this.isContextual(120) && !this.match(81)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(115, FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(8);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(76);\n\n    if (this.eat(59)) {\n      if (this.match(62) || this.match(74)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(69) || this.isLet() || (this.isContextual(120) || this.isContextual(119)) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(68) || this.match(62) || this.match(74) || this.isContextual(121)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(49) || this.match(5) || this.isContextual(119) || this.isContextual(120) || this.isContextual(121)) {\n        node = this.parseExport(node);\n\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(102);\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(75)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(12));\n    }\n\n    if (this.isContextual(108)) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    if (this.isContextual(104)) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(27);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(120);\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(14)) {\n      node.supertype = this.flowParseTypeInitialiser(14);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(27);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(27)) {\n      this.eat(27);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.match(43) || this.match(132)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.match(44)) {\n        this.expect(12);\n      }\n    } while (!this.match(44));\n\n    this.expect(44);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(43);\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.match(44)) {\n      node.params.push(this.flowParseType());\n\n      if (!this.match(44)) {\n        this.expect(12);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expect(44);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(43);\n\n    while (!this.match(44)) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.match(44)) {\n        this.expect(12);\n      }\n    }\n\n    this.expect(44);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(119);\n    node.extends = [];\n\n    if (this.eat(75)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(124) || this.match(123) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === 14) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(3);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(3);\n    this.expect(3);\n\n    if (this.match(43) || this.match(10)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(17)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(10);\n\n    if (this.match(72)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    while (!this.match(11) && !this.match(21)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    if (this.eat(21)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(11);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(6)) {\n      this.expect(6);\n      endDelim = 9;\n      exact = true;\n    } else {\n      this.expect(5);\n      endDelim = 8;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(109)) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(98)) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(0)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(0)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(10) || this.match(43)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(92) || this.isContextual(97)) {\n          const lookahead = this.lookahead();\n\n          if (tokenIsLiteralPropertyName(lookahead.type)) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(8) && !this.match(9)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(21)) {\n      const isInexactToken = this.match(12) || this.match(13) || this.match(8) || this.match(9);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.match(43) || this.match(10)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(17)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(16)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(81);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(0);\n\n    while (this.state.pos < this.length && !this.match(3)) {\n      node.types.push(this.flowParseType());\n      if (this.match(3)) break;\n      this.expect(12);\n    }\n\n    this.expect(3);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === 72;\n\n    if (lh.type === 14 || lh.type === 17) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(17)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(72)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    while (!this.match(11) && !this.match(21)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    if (this.eat(21)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case 5:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case 6:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case 0:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case 43:\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n        this.expect(10);\n        tmp = this.flowParseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case 10:\n        this.next();\n\n        if (!this.match(11) && !this.match(21)) {\n          if (tokenIsIdentifier(this.state.type) || this.match(72)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== 17 && token !== 14;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) {\n            this.expect(11);\n            return type;\n          } else {\n            this.eat(12);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case 123:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case 79:\n      case 80:\n        node.value = this.match(79);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case 47:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(124)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(125)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case 124:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case 125:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case 82:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case 78:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case 72:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case 49:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      case 81:\n        return this.flowParseTypeofType();\n\n      default:\n        if (tokenIsKeyword(this.state.type)) {\n          const label = tokenLabelName(this.state.type);\n          this.next();\n          return super.createIdentifier(node, label);\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (this.isContextual(119)) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(0) || this.match(18)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(18);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(0);\n\n      if (!optional && this.match(3)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(3);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(17)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(19)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(41);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(41)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(39);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(39)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === 122 && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(14)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(47)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.isContextual(119)) {\n      const lookahead = this.lookahead();\n\n      if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(116)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(74) || tokenIsIdentifier(this.state.type) || this.match(62) || this.match(68) || this.match(76)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (tokenIsIdentifier(this.state.type)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 116) {\n      return !this.state.containsEsc;\n    }\n\n    return super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 116) {\n      return this.state.containsEsc;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(116)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(17)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n\n    this.expect(17);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(14);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(14);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(120)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(5)) {\n        node.specifiers = this.parseExportSpecifiers(true);\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(121)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(119)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(116)) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(120) && this.lookahead().type === 49) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(115)) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(pos, FlowErrors.DeclareClassElement);\n      } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(122, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(6, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(code === 62 ? 44 : 43, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(18, 2);\n      }\n\n      return this.finishOp(17, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.match(43) || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(14) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(14) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.match(43)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.match(43)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.match(43)) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(104)) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.match(43)) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(12));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.match(43) && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(10)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.PatternIsOptional);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(14)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(27) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state.type);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(81)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(120)) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n      const {\n        type\n      } = lh;\n\n      if (kind === \"type\" && type === 49) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(type) || type === 5 || type === 49) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n    const firstIdent = specifier.imported;\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(87) && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (importedIsString) {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n\n      if (this.eatContextual(87)) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (isInTypeOnlyImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (isInTypeOnlyImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    return this.finishNode(specifier, \"ImportSpecifier\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 72:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.match(43)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(14)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(132) || this.match(43))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.length -= 2;\n      } else if (curContext === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.match(43)) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(19)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow(params) {\n    return this.match(14) || super.shouldParseArrow(params);\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.match(43)) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(18) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(10);\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.match(43)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(10);\n        node.arguments = this.parseCallExpressionArguments(11, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.match(43)) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(9, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(12) || this.match(8);\n\n    switch (this.state.type) {\n      case 124:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case 123:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case 79:\n      case 80:\n        {\n          const literal = this.parseBooleanLiteral(this.match(79));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(27) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(8)) {\n      if (this.eat(21)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(8)) {\n        this.expect(12);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(95)) {\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(5);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(8);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError, \"jsx\");\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.canStartJSXElement) {\n              ++this.state.pos;\n              return this.finishToken(132);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(131, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(123, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(130, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(130)) {\n      node.name = this.state.value;\n    } else if (tokenIsKeyword(this.state.type)) {\n      node.name = tokenLabelName(this.state.type);\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(14)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(16)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case 5:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case 132:\n      case 123:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(8);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(8)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(8);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(5)) {\n      this.expect(21);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(8);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(27) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(133)) {\n      this.expect(133);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(50) && !this.match(133)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(50);\n    this.expect(133);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(133)) {\n      this.expect(133);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(133);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case 132:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(50)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case 131:\n            children.push(this.parseExprAtom());\n            break;\n\n          case 5:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(21)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.match(43)) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(131)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(132)) {\n      return this.jsxParseElement();\n    } else if (this.match(43) && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.replaceToken(132);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  getTokenFromCode(code) {\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(133);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(132);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === 50 && prevType === 132) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.canStartJSXElement = false;\n    } else if (type === 132) {\n      context.push(types.j_expr, types.j_oTag);\n    } else if (type === 133) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === 50 || out === types.j_cTag) {\n        context.pop();\n        this.state.canStartJSXElement = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.canStartJSXElement = true;\n      }\n    } else {\n      this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AbstractPropertyHasInitializer: \"Property '%0' cannot have an initializer because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam: \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion: \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports: \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports: \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError, \"typescript\");\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(0) || this.match(5) || this.match(49) || this.match(21) || this.match(128) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!tokenIsIdentifier(this.state.type)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate, stopOnStartOfClassStaticBlock) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(8);\n\n      case \"HeritageClauseElement\":\n        return this.match(5);\n\n      case \"TupleElementTypes\":\n        return this.match(3);\n\n      case \"TypeParametersOrArguments\":\n        return this.match(44);\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement, refTrailingCommaPos) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true, refTrailingCommaPos));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess, refTrailingCommaPos) {\n    const result = [];\n    let trailingCommaPos = -1;\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      trailingCommaPos = -1;\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(12)) {\n        trailingCommaPos = this.state.lastTokStart;\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(12);\n      }\n\n      return undefined;\n    }\n\n    if (refTrailingCommaPos) {\n      refTrailingCommaPos.value = trailingCommaPos;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken, refTrailingCommaPos) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(0);\n      } else {\n        this.expect(43);\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement, refTrailingCommaPos);\n\n    if (bracket) {\n      this.expect(3);\n    } else {\n      this.expect(44);\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(77);\n    this.expect(10);\n\n    if (!this.match(123)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(11);\n\n    if (this.eat(16)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.match(43)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(16)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.match(43)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(81);\n\n    if (this.match(77)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(75);\n    node.default = this.tsEatThenParseType(27);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.match(43)) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.match(43) || this.match(132)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    const refTrailingCommaPos = {\n      value: -1\n    };\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true, refTrailingCommaPos);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    if (refTrailingCommaPos.value !== -1) {\n      this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === 69) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === 19;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(10);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(11, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(12) && !this.isLineTerminator()) {\n      this.expect(13);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(14, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n\n    if (tokenIsIdentifier(this.state.type)) {\n      this.next();\n      return this.match(14);\n    }\n\n    return false;\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(0);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(3);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(17)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(10) || this.match(43)) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.match(43)) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(14, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(10) || this.match(43)) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(71)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(10) || this.match(43)) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(5);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(8);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(47)) {\n      return this.isContextual(112);\n    }\n\n    if (this.isContextual(112)) {\n      this.next();\n    }\n\n    if (!this.match(0)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(52);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(52);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(5);\n\n    if (this.match(47)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(112);\n    } else if (this.eatContextual(112)) {\n      node.readonly = true;\n    }\n\n    this.expect(0);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(87) ? this.tsParseType() : null;\n    this.expect(3);\n\n    if (this.match(47)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(17);\n    } else if (this.eat(17)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(8);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(21);\n    let type = this.tsParseType();\n    const optional = this.eat(17);\n    const labeled = this.eat(14);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(10);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(11);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(19, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case 124:\n        case 125:\n        case 123:\n        case 79:\n        case 80:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(107) && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case 123:\n      case 124:\n      case 125:\n      case 79:\n      case 80:\n        return this.tsParseLiteralTypeNode();\n\n      case 47:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== 124 && nextToken.type !== 125) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case 72:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case 81:\n        return this.tsParseTypeQuery();\n\n      case 77:\n        return this.tsParseImportType();\n\n      case 5:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case 0:\n        return this.tsParseTupleType();\n\n      case 10:\n        return this.tsParseParenthesizedType();\n\n      case 22:\n        return this.tsParseTemplateLiteralType();\n\n      default:\n        {\n          const {\n            type\n          } = this.state;\n\n          if (tokenIsIdentifier(type) || type === 82 || type === 78) {\n            const nodeType = type === 82 ? \"TSVoidKeyword\" : type === 78 ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n            if (nodeType !== undefined && this.lookaheadCharCode() !== 46) {\n              const node = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n\n            return this.tsParseTypeReference();\n          }\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(0)) {\n      if (this.match(3)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(3);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(3);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator() {\n    const node = this.startNode();\n    const operator = this.state.value;\n    this.next();\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(106);\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const isTypeOperator = tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n    return isTypeOperator ? this.tsParseTypeOperator() : this.isContextual(106) ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), 41);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), 39);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.match(43)) {\n      return true;\n    }\n\n    return this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (tokenIsIdentifier(this.state.type) || this.match(72)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(5)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(5)) {\n          ++braceStackCounter;\n        } else if (this.match(8)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(0)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(0)) {\n          ++braceStackCounter;\n        } else if (this.match(3)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(11) || this.match(21)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(14) || this.match(12) || this.match(17) || this.match(27)) {\n        return true;\n      }\n\n      if (this.match(11)) {\n        this.next();\n\n        if (this.match(19)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(72)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(14) ? this.tsParseTypeOrTypePredicateAnnotation(14) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(14) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(14);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(107) && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (this.state.type !== 100) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!tokenIsIdentifier(this.state.type) && !this.match(72)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(14);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(75)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(17);\n    node.trueType = this.tsParseType();\n    this.expect(14);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(114) && this.lookahead().type === 71;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(71)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(this.state.start, TSErrors.ReservedTypeAssertion);\n    }\n\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expect(44);\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.match(43)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(this.state.start, TSErrors.MissingInterfaceName);\n    }\n\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(75)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(27);\n\n      if (this.isContextual(105) && this.lookahead().type !== 16) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(123) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(27)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(5);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(8);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(5);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, 8);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(16)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(103)) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(123)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(5)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(27);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(110) && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(110);\n    this.expect(10);\n\n    if (!this.match(123)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(11);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(93)) {\n      starttype = 68;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case 62:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case 74:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case 69:\n          if (this.match(69) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(69);\n            this.expectContextual(116);\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case 68:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case 103:\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n\n        default:\n          {\n            if (tokenIsIdentifier(starttype)) {\n              return this.tsParseDeclaration(nany, this.state.value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(5)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(74) || tokenIsIdentifier(this.state.type))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || tokenIsIdentifier(this.state.type)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(123)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.match(43)) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(19);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expect(43);\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expect(44);\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    return tokenIsTSDeclarationStart(this.state.type);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" || type === \"ClassPrivateMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(5) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(33)) {\n      this.state.canStartJSXElement = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    let isOptionalCall = false;\n\n    if (this.match(18) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n\n    if (this.match(43)) {\n      let missingParenErrorPos;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (isOptionalCall && !this.match(10)) {\n            missingParenErrorPos = this.state.pos;\n            this.unexpected();\n          }\n\n          if (!noCalls && this.eat(10)) {\n            node.arguments = this.parseCallExpressionArguments(11, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(22)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n\n      if (missingParenErrorPos) {\n        this.unexpected(missingParenErrorPos, 10);\n      }\n\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.match(43)) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(10)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (tokenOperatorPrecedence(52) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(87)) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (tokenIsIdentifier(this.state.type) || this.match(49) || this.match(5)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(120) && ahead.type !== 12 && ahead.type !== 91 && ahead.type !== 27) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (tokenIsIdentifier(this.state.type) && ahead.type === 27) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(77)) {\n      this.next();\n\n      if (this.isContextual(120) && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(27)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(87)) {\n      const decl = node;\n      this.expectContextual(118);\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(120) && this.lookahead().type === 5) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(114) && this.lookahead().type === 74;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.match(119)) {\n      const interfaceNode = this.startNode();\n      this.next();\n      const result = this.tsParseInterfaceDeclaration(interfaceNode);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === 69) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === 116) {\n        const node = this.startNode();\n        this.next();\n        this.expectContextual(116);\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(98) && this.lookaheadCharCode() === 123;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers(member, modifiers, undefined, undefined, true);\n\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(17);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(10)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(10)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(17)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(115);\n\n    if (isDeclare && (this.isContextual(115) || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (tokenIsIdentifier(this.state.type)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(104)) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(33)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(27)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    if (node.abstract && this.match(27)) {\n      const {\n        key\n      } = node;\n      this.raise(this.state.start, TSErrors.AbstractPropertyHasInitializer, key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  declareClassPrivateMethodInScope(node, kind) {\n    if (node.type === \"TSDeclareMethod\") return;\n    if (node.type === \"MethodDefinition\" && !node.value.body) return;\n    super.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.match(43)) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(104)) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(33)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(132) || this.match(43))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.match(43)) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n\n    if (!arrow.error && !arrow.aborted) {\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  reportReservedArrowTypeParam(node) {\n    var _node$extra;\n\n    if (node.params.length === 1 && !((_node$extra = node.extra) != null && _node$extra.trailingComma) && this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(node.start, TSErrors.ReservedArrowTypeParam);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.match(43)) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n        if (this.canInsertSemicolon() || !this.match(19)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n\n      case \"TSParameterProperty\":\n        return true;\n\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 72:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.match(43)) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(10)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, 10);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.match(43) || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(33) || this.match(14) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType) {\n      if (code === 62) {\n        return this.finishOp(44, 1);\n      }\n\n      if (code === 60) {\n        return this.finishOp(43, 1);\n      }\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  reScan_lt_gt() {\n    const {\n      type\n    } = this.state;\n\n    if (type === 43) {\n      this.state.pos -= 1;\n      this.readToken_lt();\n    } else if (type === 44) {\n      this.state.pos -= 1;\n      this.readToken_gt();\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow(params) {\n    if (this.match(14)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n\n    return super.shouldParseArrow(params);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.match(43)) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(74)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(119)) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, 74);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (!isString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(node, false, isInTypeExport);\n      return this.finishNode(node, \"ExportSpecifier\");\n    }\n\n    node.exportKind = \"value\";\n    return super.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly);\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n    if (!importedIsString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(specifier, true, isInTypeOnlyImport);\n      return this.finishNode(specifier, \"ImportSpecifier\");\n    }\n\n    specifier.importKind = \"value\";\n    return super.parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly);\n  }\n\n  parseTypeOnlyImportExportSpecifier(node, isImport, isInTypeOnlyImportExport) {\n    const leftOfAsKey = isImport ? \"imported\" : \"local\";\n    const rightOfAsKey = isImport ? \"local\" : \"exported\";\n    let leftOfAs = node[leftOfAsKey];\n    let rightOfAs;\n    let hasTypeSpecifier = false;\n    let canParseAsKeyword = true;\n    const pos = leftOfAs.start;\n\n    if (this.isContextual(87)) {\n      const firstAs = this.parseIdentifier();\n\n      if (this.isContextual(87)) {\n        const secondAs = this.parseIdentifier();\n\n        if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n          rightOfAs = this.parseIdentifier();\n          canParseAsKeyword = false;\n        } else {\n          rightOfAs = secondAs;\n          canParseAsKeyword = false;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        canParseAsKeyword = false;\n        rightOfAs = this.parseIdentifier();\n      } else {\n        hasTypeSpecifier = true;\n        leftOfAs = firstAs;\n      }\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n      hasTypeSpecifier = true;\n      leftOfAs = this.parseIdentifier();\n    }\n\n    if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n      this.raise(pos, isImport ? TSErrors.TypeModifierIsUsedInTypeImports : TSErrors.TypeModifierIsUsedInTypeExports);\n    }\n\n    node[leftOfAsKey] = leftOfAs;\n    node[rightOfAsKey] = rightOfAs;\n    const kindKey = isImport ? \"importKind\" : \"exportKind\";\n    node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n    if (canParseAsKeyword && this.eatContextual(87)) {\n      node[rightOfAsKey] = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n    }\n\n    if (!node[rightOfAsKey]) {\n      node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n    }\n\n    if (isImport) {\n      this.checkLVal(node[rightOfAsKey], \"import specifier\", BIND_LEXICAL);\n    }\n  }\n\n});\n\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(134)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(134);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(134, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(93)) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === 134) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(14)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(75) || this.match(134) || this.match(5)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(91) && !this.match(12)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(59)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(tokenLabelName(134), this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(91) && !this.match(12)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(12)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(91);\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(48)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.next();\n\n      if (tokenIsIdentifier(this.state.type)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(10)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") === \"hash\";\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startColumn: 0,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 0:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(3, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case 5:\n        return this.parseObjectLike(8, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n      }\n\n      if (allowEmpty && this.match(12)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(21)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(24) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(24)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(27)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(12)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nconst invalidHackPipeBodies = new Map([[\"ArrowFunctionExpression\", \"arrow function\"], [\"AssignmentExpression\", \"assignment\"], [\"ConditionalExpression\", \"conditional\"], [\"YieldExpression\", \"yield\"]]);\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(129)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(12)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(12)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(99)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    const {\n      type\n    } = this.state;\n\n    if (type === 10 || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(27)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(17)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(14);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(128) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      const {\n        start\n      } = left;\n\n      if (minPrec >= tokenOperatorPrecedence(52) || !this.prodParam.hasIn || !this.match(52)) {\n        this.raise(start, ErrorMessages.PrivateInExpectedIn, value);\n      }\n\n      this.classScope.usePrivateName(value, start);\n    }\n\n    const op = this.state.type;\n\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(52))) {\n      let prec = tokenOperatorPrecedence(op);\n\n      if (prec > minPrec) {\n        if (op === 35) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === 37 || op === 38;\n        const coalesce = op === 36;\n\n        if (coalesce) {\n          prec = tokenOperatorPrecedence(38);\n        }\n\n        this.next();\n\n        if (op === 35 && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.state.type === 90 && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === 37 || nextOp === 38) || logical && nextOp === 36) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case 35:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(99)) {\n                throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, this.state.value);\n              }\n\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, tokenIsRightAssociative(op) ? prec - 1 : prec);\n  }\n\n  parseHackPipeBody() {\n    var _body$extra;\n\n    const {\n      start\n    } = this.state;\n    const body = this.parseMaybeAssign();\n\n    if (invalidHackPipeBodies.has(body.type) && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\n      this.raise(start, ErrorMessages.PipeUnparenthesizedBody, invalidHackPipeBodies.get(body.type));\n    }\n\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(start, ErrorMessages.PipeTopicUnused);\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(51)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(90);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(32);\n    const node = this.startNode();\n\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(66)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(83);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const {\n        type\n      } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? tokenCanStartExpression(type) : tokenCanStartExpression(type) && !this.match(48);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, ErrorMessages.AwaitNotInAsyncContext);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(15)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(22)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(18)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(10)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else {\n      const computed = this.eat(0);\n\n      if (computed || optional || this.eat(16)) {\n        return this.parseMember(base, startPos, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(128) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(3);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(11);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(11, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(19) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(19);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n    const {\n      type\n    } = this.state;\n\n    switch (type) {\n      case 73:\n        return this.parseSuper();\n\n      case 77:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(16)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(10)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case 72:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case 84:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case 50:\n      case 29:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case 124:\n        return this.parseNumericLiteral(this.state.value);\n\n      case 125:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case 126:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case 123:\n        return this.parseStringLiteral(this.state.value);\n\n      case 78:\n        return this.parseNullLiteral();\n\n      case 79:\n        return this.parseBooleanLiteral(true);\n\n      case 80:\n        return this.parseBooleanLiteral(false);\n\n      case 10:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case 2:\n      case 1:\n        {\n          return this.parseArrayLike(this.state.type === 2 ? 4 : 3, false, true, refExpressionErrors);\n        }\n\n      case 0:\n        {\n          return this.parseArrayLike(3, true, false, refExpressionErrors);\n        }\n\n      case 6:\n      case 7:\n        {\n          return this.parseObjectLike(this.state.type === 6 ? 9 : 8, false, true, refExpressionErrors);\n        }\n\n      case 5:\n        {\n          return this.parseObjectLike(8, false, false, refExpressionErrors);\n        }\n\n      case 62:\n        return this.parseFunctionOrFunctionSent();\n\n      case 24:\n        this.parseDecorators();\n\n      case 74:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case 71:\n        return this.parseNewOrNewTarget();\n\n      case 22:\n        return this.parseTemplate(false);\n\n      case 15:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case 128:\n        {\n          this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.state.value);\n          return this.parsePrivateName();\n        }\n\n      case 31:\n        {\n          return this.parseTopicReferenceThenEqualsSign(48, \"%\");\n        }\n\n      case 30:\n        {\n          return this.parseTopicReferenceThenEqualsSign(40, \"^\");\n        }\n\n      case 40:\n      case 48:\n      case 25:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n          if (pipeProposal) {\n            return this.parseTopicReference(pipeProposal);\n          } else {\n            throw this.unexpected();\n          }\n        }\n\n      case 43:\n        {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n          if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            break;\n          } else {\n            throw this.unexpected();\n          }\n        }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (this.isContextual(117) && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            const {\n              type\n            } = this.state;\n\n            if (type === 62) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (tokenIsIdentifier(type)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (type === 84) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(19) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n\n    }\n  }\n\n  parseTopicReferenceThenEqualsSign(topicTokenType, topicTokenValue) {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      this.state.pos--;\n      this.state.end--;\n      this.state.endLoc.column--;\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  parseTopicReference(pipeProposal) {\n    const node = this.startNode();\n    const start = this.state.start;\n    const tokenType = this.state.type;\n    this.next();\n    return this.finishTopicReference(node, start, pipeProposal, tokenType);\n  }\n\n  finishTopicReference(node, start, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n      let nodeType;\n\n      if (pipeProposal === \"smart\") {\n        nodeType = \"PipelinePrimaryTopicReference\";\n      } else {\n        nodeType = \"TopicReference\";\n      }\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        if (pipeProposal === \"smart\") {\n          this.raise(start, ErrorMessages.PrimaryTopicNotAllowed);\n        } else {\n          this.raise(start, ErrorMessages.PipeTopicUnbound);\n        }\n      }\n\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(start, ErrorMessages.PipeTopicUnconfiguredToken, tokenLabelName(tokenType));\n    }\n  }\n\n  testTopicReferenceConfiguration(pipeProposal, start, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          const pluginTopicToken = this.getPluginOption(\"pipelineOperator\", \"topicToken\");\n          return tokenLabelName(tokenType) === pluginTopicToken;\n        }\n\n      case \"smart\":\n        return tokenType === 25;\n\n      default:\n        throw this.raise(start, ErrorMessages.PipeTopicRequiresHackPipes);\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(19);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(10) && !this.match(0) && !this.match(16)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(128);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n\n      if (this.match(96)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(94)) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(11)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(11)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(21)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(11);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      this.takeSurroundingComments(val, startPos, this.state.lastTokEnd);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(19)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(18)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(10)) {\n      const args = this.parseExprList(11);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(22);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(23);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(8);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(0) || this.match(49));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(24)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(24)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(21)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(49);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(49);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(49)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(10)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(14)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(27) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(0)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(3);\n    } else {\n      const type = this.state.type;\n      prop.key = type === 124 || type === 123 || type === 125 || type === 126 ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== 128) {\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(0) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(5);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n\n    this.expressionScope.exit();\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(12)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(21)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(17)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      if (tokenIsKeyword) {\n        this.replaceToken(122);\n      }\n    } else {\n      this.checkReservedWord(name, start, tokenIsKeyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(49)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(47) || this.match(10) || this.match(0) || this.match(22) || this.match(127) || this.match(50) || this.hasPlugin(\"v8intrinsic\") && this.match(48);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(49);\n\n      switch (this.state.type) {\n        case 13:\n        case 129:\n        case 8:\n        case 11:\n        case 3:\n        case 9:\n        case 14:\n        case 12:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  checkHackPipeBodyEarlyErrors(startPos) {\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipeTopicUnused);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  checkSmartPipeTopicBodyEarlyErrors(startPos) {\n    if (this.match(19)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n    }\n  }\n\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSmartMixTopicForbiddingContext(callback) {\n    const proposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (proposal === \"smart\") {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(5);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, 8, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(8);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const {\n      type\n    } = token;\n\n    if (type === 128) {\n      {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: getExportedToken(25),\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: getExportedToken(122),\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n        i++;\n        continue;\n      }\n    }\n\n    if (typeof type === \"number\") {\n      token.type = getExportedToken(type);\n    }\n  }\n\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = 129, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(26)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(93)) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(24)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = 68;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case 54:\n        return this.parseBreakContinueStatement(node, true);\n\n      case 57:\n        return this.parseBreakContinueStatement(node, false);\n\n      case 58:\n        return this.parseDebuggerStatement(node);\n\n      case 84:\n        return this.parseDoStatement(node);\n\n      case 85:\n        return this.parseForStatement(node);\n\n      case 62:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case 74:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case 63:\n        return this.parseIfStatement(node);\n\n      case 64:\n        return this.parseReturnStatement(node);\n\n      case 65:\n        return this.parseSwitchStatement(node);\n\n      case 66:\n        return this.parseThrowStatement(node);\n\n      case 67:\n        return this.parseTryStatement(node);\n\n      case 69:\n      case 68:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case 86:\n        return this.parseWhileStatement(node);\n\n      case 70:\n        return this.parseWithStatement(node);\n\n      case 5:\n        return this.parseBlock();\n\n      case 13:\n        return this.parseEmptyStatement(node);\n\n      case 77:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n\n      case 76:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === 77) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (tokenIsIdentifier(starttype) && expr.type === \"Identifier\" && this.eat(14)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(74);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(24)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(76)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(10)) {\n        expr = this.parseExpression();\n        this.expect(11);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(16)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(10)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, isBreak) {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, isBreak) {\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, isBreak ? \"break\" : \"continue\");\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(10);\n    const val = this.parseExpression();\n    this.expect(11);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(86);\n    node.test = this.parseHeaderExpression();\n    this.eat(13);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(90)) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(10);\n\n    if (this.match(13)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(93);\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(68) || this.match(69) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(52) || this.isContextual(95)) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithAsync = this.isContextual(89);\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(95);\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithAsync && init.type === \"Identifier\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(52)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(60) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(5);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(8);) {\n      if (this.match(55) || this.match(59)) {\n        const isCase = this.match(55);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(14);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(56)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(10)) {\n        this.expect(10);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(11);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(61) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type) ? \"loop\" : this.match(65) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(5);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, 8, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(13) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(11) ? null : this.parseExpression();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(52);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(27)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(52) || this.isContextual(95))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(52) || this.isContextual(95)))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(12)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(49) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(49);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || tokenIsIdentifier(this.state.type) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(10);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(11, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(27) || this.match(13) || this.match(8);\n  }\n\n  isClassMethod() {\n    return this.match(10);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(5);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(8)) {\n        if (this.eat(13)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(24)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(98);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(5)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(49)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(128);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(128);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(49);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(128);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(49) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(128);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === 122 || type === 123) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === 128 && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, 8);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(node, kind) {\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(27) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(75) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(12);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(12));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, 5);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(59)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, 5);\n  }\n\n  eatExportStar(node) {\n    return this.eat(49);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(87)) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(5)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(89)) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(62) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(74)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(24)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(69) || this.match(68) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsIdentifier(type)) {\n      if (type === 89 && !this.state.containsEsc || type === 93) {\n        return false;\n      }\n\n      if ((type === 120 || type === 119) && !this.state.containsEsc) {\n        const {\n          type: nextType\n        } = this.lookahead();\n\n        if (tokenIsIdentifier(nextType) && nextType !== 91 || nextType === 5) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(59)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || tokenIsIdentifier(this.state.type) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(59) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(91)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n\n    if (type === 24) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return type === 68 || type === 69 || type === 62 || type === 74 || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers(isInTypeExport) {\n    const nodes = [];\n    let first = true;\n    this.expect(5);\n\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n\n      const isMaybeTypeOnly = this.isContextual(120);\n      const isString = this.match(123);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(this.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly));\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (this.eatContextual(87)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n\n    return this.finishNode(node, \"ExportSpecifier\");\n  }\n\n  parseModuleExportName() {\n    if (this.match(123)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(123)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(12);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(91);\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(123)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(8)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(123)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(14);\n\n      if (!this.match(123)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(12));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(70) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(14);\n\n      if (!this.match(123)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(12));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(88) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(5);\n    const attrs = this.parseAssertEntries();\n    this.eat(8);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(49)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(87);\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(5);\n\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(14)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n\n      const specifier = this.startNode();\n      const importedIsString = this.match(123);\n      const isMaybeTypeOnly = this.isContextual(120);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(specifier, importedIsString, node.importKind === \"type\" || node.importKind === \"typeof\", isMaybeTypeOnly);\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n    if (this.eatContextual(87)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    return this.finishNode(specifier, \"ImportSpecifier\");\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n\n  return tokenTypes;\n}\n\nconst tokTypes = generateExportedTokenTypes(tt);\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = tokTypes;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE, end).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.normalizeReplacements = normalizeReplacements;\nexports.validate = validate;\nconst _excluded = [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar _t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst {\n  isCallExpression,\n  isExpressionStatement,\n  isFunction,\n  isIdentifier,\n  isJSXIdentifier,\n  isNewExpression,\n  isPlaceholder,\n  isStatement,\n  isStringLiteral,\n  removePropertiesDeep,\n  traverse\n} = _t;\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (isIdentifier(node) || isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (isStringLiteral(node) || isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (isNewExpression(parent) && key === \"arguments\" || isCallExpression(parent) && key === \"arguments\" || isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (isExpressionStatement(parent) && !isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (isStatement(node) && isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  blockStatement,\n  cloneNode,\n  emptyStatement,\n  expressionStatement,\n  identifier,\n  isStatement,\n  isStringLiteral,\n  stringLiteral,\n  validate\n} = _t;\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = stringLiteral(replacement);\n    }\n\n    if (!replacement || !isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = expressionStatement(identifier(replacement));\n      } else if (!isStatement(replacement)) {\n        replacement = expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = identifier(replacement);\n        }\n\n        if (!isStatement(replacement)) {\n          replacement = expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n          const callee = path.get(\"callee\");\n\n          if (callee.isArrowFunctionExpression()) {\n            callee.arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.statements = exports.statement = exports.smart = exports.program = exports.expression = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  assertExpressionStatement\n} = _t;\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = highlight;\nexports.getChalk = getChalk;\nexports.shouldHighlight = shouldHighlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    dynamicKeys: new Map(),\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body.push(...userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments, false);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function extractDynamicKeys() {\n    const {\n      dynamicKeys,\n      node,\n      scope\n    } = classState;\n\n    for (const elem of node.body.body) {\n      if (!_core.types.isClassMethod(elem) || !elem.computed) continue;\n      if (scope.isPure(elem.key, true)) continue;\n      const id = scope.generateUidIdentifierBasedOnNode(elem.key);\n      dynamicKeys.set(id.name, elem.key);\n      elem.key = id;\n    }\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName,\n      dynamicKeys\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    for (const [name, value] of dynamicKeys) {\n      closureParams.push(_core.types.identifier(name));\n      closureArgs.push(value);\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    extractDynamicKeys();\n    const {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body.push(...classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;"],"sourceRoot":""}