{"version":3,"file":"static/js/7206.7cbec77b.chunk.js","mappings":"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B,KAAKirB,GAEf,CAED,OAAOrL,CACR,oGCxBM,IAAMiiB,EAA0B,CACrC,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QC1GWC,EAA4B,CACvC,EAAG,SACH,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,UC1BA,SAASC,EAAU3wB,GACxB,IAAMrI,EACiB,kBAAdqI,EAAyBA,EAAUrP,WAAW,GAAKqP,EAE5D,OAAOrI,GAAQ,IAAMA,GAAQ,EAC9B,CCLM,SAASi5B,EAAc5wB,GAC5B,IAAMrI,EACiB,kBAAdqI,EAAyBA,EAAUrP,WAAW,GAAKqP,EAE5D,OACGrI,GAAQ,IAAcA,GAAQ,KAC9BA,GAAQ,IAAcA,GAAQ,IAC9BA,GAAQ,IAAcA,GAAQ,EAElC,CCNM,SAASk5B,EAAiB7wB,GAC/B,OCJK,SAAwBA,GAC7B,IAAMrI,EACiB,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","sources":["../../node_modules/babel-plugin-transform-remove-imports/lib/index.js","../../node_modules/boolbase/index.js","../../node_modules/css-selector-parser/lib/index.js","../../node_modules/css-selector-parser/lib/parser-context.js","../../node_modules/css-selector-parser/lib/render.js","../../node_modules/css-selector-parser/lib/utils.js","../../node_modules/extend/index.js","../../node_modules/github-slugger/index.js","../../node_modules/github-slugger/regex.js","../../node_modules/inline-style-parser/index.js","../../node_modules/is-buffer/index.js","../../node_modules/markdown-react-code-preview-loader/src/utils/index.ts","../../node_modules/mdurl/encode.js","../../node_modules/parse-numeric-range/index.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/react-code-preview-layout/src/icons.tsx","../../node_modules/react-code-preview-layout/src/Copied.tsx","../../node_modules/react-code-preview-layout/src/index.tsx","../../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/react-markdown/node_modules/react-is/index.js","../../node_modules/remark-stringify/index.js","../../node_modules/remark-stringify/node_modules/longest-streak/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/configure.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/break.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/code.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/definition.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/heading.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/html.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/image.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/link.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/list.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/root.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/strong.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/text.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/join.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/unsafe.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-rule-repeat.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-string/index.js","../../node_modules/remark-stringify/node_modules/parse-entities/decode-entity.browser.js","../../node_modules/remark-stringify/node_modules/zwitch/index.js","../../node_modules/remark/index.js","../../node_modules/remark/node_modules/bail/index.js","../../node_modules/remark/node_modules/is-plain-obj/index.js","../../node_modules/remark/node_modules/mdast-util-from-markdown/dist/index.js","../../node_modules/remark/node_modules/mdast-util-from-markdown/index.js","../../node_modules/remark/node_modules/mdast-util-to-string/index.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-alpha.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-alphanumeric.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-atext.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-control.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-digit.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-hex-digit.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-punctuation.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-line-ending-or-space.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-line-ending.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-space.js","../../node_modules/remark/node_modules/micromark/dist/character/unicode-punctuation.js","../../node_modules/remark/node_modules/micromark/dist/character/unicode-whitespace.js","../../node_modules/remark/node_modules/micromark/dist/constant/assign.js","../../node_modules/remark/node_modules/micromark/dist/constant/from-char-code.js","../../node_modules/remark/node_modules/micromark/dist/constant/has-own-property.js","../../node_modules/remark/node_modules/micromark/dist/constant/html-block-names.js","../../node_modules/remark/node_modules/micromark/dist/constant/html-raw-names.js","../../node_modules/remark/node_modules/micromark/dist/constant/splice.js","../../node_modules/remark/node_modules/micromark/dist/constant/unicode-punctuation-regex.js","../../node_modules/remark/node_modules/micromark/dist/constructs.js","../../node_modules/remark/node_modules/micromark/dist/initialize/content.js","../../node_modules/remark/node_modules/micromark/dist/initialize/document.js","../../node_modules/remark/node_modules/micromark/dist/initialize/flow.js","../../node_modules/remark/node_modules/micromark/dist/initialize/text.js","../../node_modules/remark/node_modules/micromark/dist/parse.js","../../node_modules/remark/node_modules/micromark/dist/postprocess.js","../../node_modules/remark/node_modules/micromark/dist/preprocess.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/attention.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/autolink.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/block-quote.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/character-escape.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/character-reference.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-fenced.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-indented.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-text.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/content.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/definition.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-destination.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-label.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-space.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-title.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-whitespace.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/hard-break-escape.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/heading-atx.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/html-flow.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/html-text.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-end.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-start-image.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-start-link.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/line-ending.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/list.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/partial-blank-line.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/setext-underline.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/thematic-break.js","../../node_modules/remark/node_modules/micromark/dist/util/chunked-push.js","../../node_modules/remark/node_modules/micromark/dist/util/chunked-splice.js","../../node_modules/remark/node_modules/micromark/dist/util/classify-character.js","../../node_modules/remark/node_modules/micromark/dist/util/combine-extensions.js","../../node_modules/remark/node_modules/micromark/dist/util/create-tokenizer.js","../../node_modules/remark/node_modules/micromark/dist/util/miniflat.js","../../node_modules/remark/node_modules/micromark/dist/util/move-point.js","../../node_modules/remark/node_modules/micromark/dist/util/normalize-identifier.js","../../node_modules/remark/node_modules/micromark/dist/util/prefix-size.js","../../node_modules/remark/node_modules/micromark/dist/util/regex-check.js","../../node_modules/remark/node_modules/micromark/dist/util/resolve-all.js","../../node_modules/remark/node_modules/micromark/dist/util/safe-from-int.js","../../node_modules/remark/node_modules/micromark/dist/util/serialize-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/shallow.js","../../node_modules/remark/node_modules/micromark/dist/util/size-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/slice-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/subtokenize.js","../../node_modules/remark/node_modules/parse-entities/decode-entity.browser.js","../../node_modules/remark/node_modules/remark-parse/index.js","../../node_modules/remark/node_modules/trough/index.js","../../node_modules/remark/node_modules/trough/wrap.js","../../node_modules/remark/node_modules/unified/index.js","../../node_modules/remark/node_modules/unist-util-stringify-position/index.js","../../node_modules/remark/node_modules/vfile-message/index.js","../../node_modules/remark/node_modules/vfile/index.js","../../node_modules/remark/node_modules/vfile/lib/core.js","../../node_modules/remark/node_modules/vfile/lib/index.js","../../node_modules/remark/node_modules/vfile/lib/minpath.browser.js","../../node_modules/remark/node_modules/vfile/lib/minproc.browser.js","../../node_modules/repeat-string/index.js","../../node_modules/style-to-object/index.js","../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../../node_modules/@babel/runtime/helpers/classCallCheck.js","../../node_modules/@babel/runtime/helpers/createClass.js","../../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../../node_modules/@babel/runtime/helpers/createSuper.js","../../node_modules/@babel/runtime/helpers/defineProperty.js","../../node_modules/@babel/runtime/helpers/get.js","../../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../../node_modules/@babel/runtime/helpers/inherits.js","../../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../../node_modules/@babel/runtime/helpers/nonIterableRest.js","../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../../node_modules/@babel/runtime/helpers/slicedToArray.js","../../node_modules/@babel/runtime/helpers/superPropBase.js","../../node_modules/@babel/runtime/helpers/typeof.js","../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../../node_modules/comma-separated-tokens/index.js","../../node_modules/decode-named-character-reference/index.dom.js","../../node_modules/hast-util-has-property/index.js","../../node_modules/hast-util-heading-rank/index.js","../../node_modules/hast-util-is-element/index.js","../../node_modules/hast-util-to-string/index.js","../../node_modules/hast-util-whitespace/index.js","../../node_modules/hast-util-parse-selector/index.js","../../node_modules/hastscript/lib/core.js","../../node_modules/hastscript/lib/html.js","../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../node_modules/micromark-factory-space/index.js","../../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../../node_modules/micromark-util-character/index.js","../../node_modules/micromark-util-chunked/index.js","../../node_modules/micromark-util-classify-character/index.js","../../node_modules/micromark-util-combine-extensions/index.js","../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../node_modules/micromark-util-decode-string/index.js","../../node_modules/micromark-util-normalize-identifier/index.js","../../node_modules/micromark-util-resolve-all/index.js","../../node_modules/character-entities-legacy/index.js","../../node_modules/character-reference-invalid/index.js","../../node_modules/is-decimal/index.js","../../node_modules/is-hexadecimal/index.js","../../node_modules/is-alphanumerical/index.js","../../node_modules/is-alphabetical/index.js","../../node_modules/parse-entities/lib/index.js","../../node_modules/property-information/lib/util/schema.js","../../node_modules/property-information/lib/util/merge.js","../../node_modules/property-information/lib/util/create.js","../../node_modules/property-information/lib/xlink.js","../../node_modules/property-information/lib/xml.js","../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/property-information/lib/xmlns.js","../../node_modules/property-information/lib/aria.js","../../node_modules/property-information/lib/html.js","../../node_modules/property-information/lib/svg.js","../../node_modules/property-information/index.js","../../node_modules/property-information/lib/find.js","../../node_modules/property-information/lib/hast-to-react.js","../../node_modules/property-information/lib/normalize.js","../../node_modules/property-information/lib/util/defined-info.js","../../node_modules/property-information/lib/util/info.js","../../node_modules/property-information/lib/util/types.js","../../node_modules/unist-util-stringify-position/index.js","../../node_modules/vfile-message/index.js","../../node_modules/vfile/lib/minpath.browser.js","../../node_modules/vfile/lib/minproc.browser.js","../../node_modules/vfile/lib/minurl.shared.js","../../node_modules/vfile/lib/minurl.browser.js","../../node_modules/vfile/lib/index.js","../../node_modules/@babel/runtime/helpers/esm/toArray.js","../../node_modules/bail/index.js","../../node_modules/unified/node_modules/is-plain-obj/index.js","../../node_modules/trough/index.js","../../node_modules/unified/lib/index.js","../../node_modules/mdast-util-to-string/index.js","../../node_modules/micromark/lib/initialize/content.js","../../node_modules/micromark/lib/initialize/document.js","../../node_modules/micromark-util-subtokenize/index.js","../../node_modules/micromark-core-commonmark/lib/content.js","../../node_modules/micromark/lib/initialize/flow.js","../../node_modules/micromark/lib/initialize/text.js","../../node_modules/micromark/lib/create-tokenizer.js","../../node_modules/micromark-core-commonmark/lib/thematic-break.js","../../node_modules/micromark-core-commonmark/lib/list.js","../../node_modules/micromark-core-commonmark/lib/block-quote.js","../../node_modules/micromark-factory-destination/index.js","../../node_modules/micromark-factory-label/index.js","../../node_modules/micromark-factory-title/index.js","../../node_modules/micromark-factory-whitespace/index.js","../../node_modules/micromark-core-commonmark/lib/definition.js","../../node_modules/micromark-core-commonmark/lib/code-indented.js","../../node_modules/micromark-core-commonmark/lib/heading-atx.js","../../node_modules/micromark-core-commonmark/lib/setext-underline.js","../../node_modules/micromark-util-html-tag-name/index.js","../../node_modules/micromark-core-commonmark/lib/html-flow.js","../../node_modules/micromark-core-commonmark/lib/code-fenced.js","../../node_modules/micromark-core-commonmark/lib/character-reference.js","../../node_modules/micromark-core-commonmark/lib/character-escape.js","../../node_modules/micromark-core-commonmark/lib/line-ending.js","../../node_modules/micromark-core-commonmark/lib/label-end.js","../../node_modules/micromark-core-commonmark/lib/label-start-image.js","../../node_modules/micromark-core-commonmark/lib/attention.js","../../node_modules/micromark-core-commonmark/lib/autolink.js","../../node_modules/micromark-core-commonmark/lib/html-text.js","../../node_modules/micromark-core-commonmark/lib/label-start-link.js","../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../node_modules/micromark-core-commonmark/lib/code-text.js","../../node_modules/micromark/lib/constructs.js","../../node_modules/micromark/lib/preprocess.js","../../node_modules/mdast-util-from-markdown/lib/index.js","../../node_modules/micromark/lib/postprocess.js","../../node_modules/micromark/lib/parse.js","../../node_modules/remark-parse/index.js","../../node_modules/remark-parse/lib/index.js","../../node_modules/unist-builder/index.js","../../node_modules/mdast-util-definitions/index.js","../../node_modules/mdast-util-to-hast/lib/traverse.js","../../node_modules/micromark-util-encode/index.js","../../node_modules/micromark-util-sanitize-uri/index.js","../../node_modules/mdast-util-to-hast/lib/wrap.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../node_modules/mdast-util-to-hast/lib/revert.js","../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../node_modules/trim-lines/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../node_modules/mdast-util-to-hast/lib/handlers/break.js","../../node_modules/mdast-util-to-hast/lib/handlers/code.js","../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../node_modules/mdast-util-to-hast/lib/handlers/html.js","../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/image.js","../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/link.js","../../node_modules/mdast-util-to-hast/lib/handlers/list.js","../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../node_modules/mdast-util-to-hast/lib/handlers/root.js","../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../node_modules/mdast-util-to-hast/lib/handlers/table.js","../../node_modules/mdast-util-to-hast/lib/handlers/text.js","../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../node_modules/mdast-util-to-hast/lib/index.js","../../node_modules/unist-util-generated/index.js","../../node_modules/mdast-util-to-hast/lib/footer.js","../../node_modules/remark-rehype/lib/index.js","../../node_modules/react-markdown/lib/rehype-filter.js","../../node_modules/react-markdown/lib/uri-transformer.js","../../node_modules/react-markdown/lib/ast-to-react.js","../../node_modules/react-markdown/lib/react-markdown.js","../../node_modules/rehype-attr/src/utils.ts","../../node_modules/rehype-attr/src/index.ts","../../node_modules/rehype-autolink-headings/lib/index.js","../../node_modules/rehype-ignore/src/index.ts","../../node_modules/unist-util-filter/index.js","../../src/generator.js","../../src/all.js","../../src/common.js","../../node_modules/hastscript/lib/svg.js","../../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../../node_modules/web-namespaces/index.js","../../node_modules/hast-util-from-parse5/lib/index.js","../../node_modules/vfile-location/index.js","../../node_modules/hast-to-hyperscript/index.js","../../node_modules/hast-util-to-parse5/lib/index.js","../../node_modules/html-void-elements/index.js","../../node_modules/hast-util-raw/lib/index.js","../../node_modules/rehype-raw/index.js","../../node_modules/direction/index.js","../../node_modules/hast-util-select/lib/util.js","../../node_modules/hast-util-select/lib/enter-state.js","../../node_modules/hast-util-select/lib/nest.js","../../node_modules/bcp-47-match/index.js","../../node_modules/hast-util-select/lib/pseudo.js","../../node_modules/hast-util-select/lib/attribute.js","../../node_modules/hast-util-select/lib/test.js","../../node_modules/hast-util-select/lib/name.js","../../node_modules/hast-util-select/lib/class-name.js","../../node_modules/hast-util-select/lib/id.js","../../node_modules/hast-util-select/lib/any.js","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/parse.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/compile.ts","../../node_modules/hast-util-select/lib/parse.js","../../node_modules/hast-util-select/index.js","../../node_modules/rehype-rewrite/src/index.ts","../../node_modules/rehype-slug/index.js","../../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../../node_modules/micromark-extension-gfm-table/lib/syntax.js","../../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../../node_modules/micromark-extension-gfm/index.js","../../node_modules/ccount/index.js","../../node_modules/mdast-util-find-and-replace/lib/index.js","../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../../node_modules/mdast-util-gfm-autolink-literal/index.js","../../node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/mdast-util-to-markdown/lib/util/track.js","../../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/mdast-util-gfm-footnote/index.js","../../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/mdast-util-gfm-strikethrough/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/markdown-table/index.js","../../node_modules/mdast-util-gfm-table/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/mdast-util-gfm-task-list-item/index.js","../../node_modules/mdast-util-gfm/lib/index.js","../../node_modules/remark-gfm/index.js","../../node_modules/space-separated-tokens/index.js","../../node_modules/unist-util-is/index.js","../../node_modules/unist-util-position/index.js","../../node_modules/unist-util-visit-parents/index.js","../../node_modules/unist-util-visit/index.js","../../node_modules/zwitch/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nfunction _default() {\n  return {\n    name: 'transform-remove-imports',\n    visitor: {\n      // https://babeljs.io/docs/en/babel-types#callexpression\n      CallExpression: function CallExpression(path, state) {\n        var node = path.node;\n\n        if (node.callee.name !== 'require') {\n          return;\n        }\n\n        var argument = node.arguments[0];\n        var moduleId = argument.value;\n        var options = state.opts;\n\n        if (options.test && !testMatches(moduleId, options.test)) {\n          return;\n        }\n\n        var parentType = path.parentPath.node.type; // In remove effects mode we should delete only requires that are\n        // simple expression statements\n\n        if (options.remove === 'effects' && parentType !== 'ExpressionStatement') {\n          return;\n        }\n\n        path.remove();\n      },\n      // https://babeljs.io/docs/en/babel-types#importdeclaration\n      ImportDeclaration: function ImportDeclaration(path, state) {\n        var node = path.node;\n        var source = node.source;\n        var opts = state.opts;\n\n        if (opts.removeAll) {\n          path.remove();\n          return;\n        }\n\n        if (!opts.test) {\n          console.warn('transform-remove-imports: \"test\" option should be specified');\n          return;\n        }\n        /** @var {string} importName */\n\n\n        var importName = source && source.value ? source.value : undefined;\n        var isMatch = testMatches(importName, opts.test); // https://github.com/uiwjs/babel-plugin-transform-remove-imports/issues/3\n\n        if (opts.remove === 'effects') {\n          if (node.specifiers && node.specifiers.length === 0 && importName && isMatch) {\n            path.remove();\n          }\n\n          return;\n        }\n\n        if (importName && isMatch) {\n          path.remove();\n        }\n      }\n    }\n  };\n}\n/**\n * Determines if the import matches the specified tests.\n *\n * @param {string} importName\n * @param {RegExp|RegExp[]|string|string[]} test\n * @returns {Boolean}\n */\n\n\nfunction testMatches(importName, test) {\n  // Normalizing tests\n  var tests = Array.isArray(test) ? test : [test]; // Finding out if at least one test matches\n\n  return tests.some(function (regex) {\n    if (typeof regex === 'string') {\n      regex = new RegExp(regex);\n    }\n\n    return regex.test(importName || '');\n  });\n}","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_context_1 = require(\"./parser-context\");\nvar render_1 = require(\"./render\");\nvar CssSelectorParser = /** @class */ (function () {\n    function CssSelectorParser() {\n        this.pseudos = {};\n        this.attrEqualityMods = {};\n        this.ruleNestingOperators = {};\n        this.substitutesEnabled = false;\n    }\n    CssSelectorParser.prototype.registerSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_1 = pseudos; _a < pseudos_1.length; _a++) {\n            var pseudo = pseudos_1[_a];\n            this.pseudos[pseudo] = 'selector';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_2 = pseudos; _a < pseudos_2.length; _a++) {\n            var pseudo = pseudos_2[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_3 = pseudos; _a < pseudos_3.length; _a++) {\n            var pseudo = pseudos_3[_a];\n            this.pseudos[pseudo] = 'numeric';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_4 = pseudos; _a < pseudos_4.length; _a++) {\n            var pseudo = pseudos_4[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_1 = operators; _a < operators_1.length; _a++) {\n            var operator = operators_1[_a];\n            this.ruleNestingOperators[operator] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_2 = operators; _a < operators_2.length; _a++) {\n            var operator = operators_2[_a];\n            delete this.ruleNestingOperators[operator];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_1 = mods; _a < mods_1.length; _a++) {\n            var mod = mods_1[_a];\n            this.attrEqualityMods[mod] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_2 = mods; _a < mods_2.length; _a++) {\n            var mod = mods_2[_a];\n            delete this.attrEqualityMods[mod];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.enableSubstitutes = function () {\n        this.substitutesEnabled = true;\n        return this;\n    };\n    CssSelectorParser.prototype.disableSubstitutes = function () {\n        this.substitutesEnabled = false;\n        return this;\n    };\n    CssSelectorParser.prototype.parse = function (str) {\n        return parser_context_1.parseCssSelector(str, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);\n    };\n    CssSelectorParser.prototype.render = function (path) {\n        return render_1.renderEntity(path).trim();\n    };\n    return CssSelectorParser;\n}());\nexports.CssSelectorParser = CssSelectorParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction parseCssSelector(str, pos, pseudos, attrEqualityMods, ruleNestingOperators, substitutesEnabled) {\n    var l = str.length;\n    var chr = '';\n    function getStr(quote, escapeTable) {\n        var result = '';\n        pos++;\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (chr === quote) {\n                pos++;\n                return result;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                chr = str.charAt(pos);\n                var esc = void 0;\n                if (chr === quote) {\n                    result += quote;\n                }\n                else if ((esc = escapeTable[chr]) !== undefined) {\n                    result += esc;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                result += chr;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function getIdent() {\n        var result = '';\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (utils_1.isIdent(chr)) {\n                result += chr;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                if (pos >= l) {\n                    throw Error('Expected symbol but end of file reached.');\n                }\n                chr = str.charAt(pos);\n                if (utils_1.identSpecialChars[chr]) {\n                    result += chr;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                return result;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function skipWhitespace() {\n        chr = str.charAt(pos);\n        var result = false;\n        while (chr === ' ' || chr === \"\\t\" || chr === \"\\n\" || chr === \"\\r\" || chr === \"\\f\") {\n            result = true;\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function parse() {\n        var res = parseSelector();\n        if (pos < l) {\n            throw Error('Rule expected but \"' + str.charAt(pos) + '\" found.');\n        }\n        return res;\n    }\n    function parseSelector() {\n        var selector = parseSingleSelector();\n        if (!selector) {\n            return null;\n        }\n        var res = selector;\n        chr = str.charAt(pos);\n        while (chr === ',') {\n            pos++;\n            skipWhitespace();\n            if (res.type !== 'selectors') {\n                res = {\n                    type: 'selectors',\n                    selectors: [selector]\n                };\n            }\n            selector = parseSingleSelector();\n            if (!selector) {\n                throw Error('Rule expected after \",\".');\n            }\n            res.selectors.push(selector);\n        }\n        return res;\n    }\n    function parseSingleSelector() {\n        skipWhitespace();\n        var selector = {\n            type: 'ruleSet'\n        };\n        var rule = parseRule();\n        if (!rule) {\n            return null;\n        }\n        var currentRule = selector;\n        while (rule) {\n            rule.type = 'rule';\n            currentRule.rule = rule;\n            currentRule = rule;\n            skipWhitespace();\n            chr = str.charAt(pos);\n            if (pos >= l || chr === ',' || chr === ')') {\n                break;\n            }\n            if (ruleNestingOperators[chr]) {\n                var op = chr;\n                pos++;\n                skipWhitespace();\n                rule = parseRule();\n                if (!rule) {\n                    throw Error('Rule expected after \"' + op + '\".');\n                }\n                rule.nestingOperator = op;\n            }\n            else {\n                rule = parseRule();\n                if (rule) {\n                    rule.nestingOperator = null;\n                }\n            }\n        }\n        return selector;\n    }\n    // @ts-ignore no-overlap\n    function parseRule() {\n        var rule = null;\n        while (pos < l) {\n            chr = str.charAt(pos);\n            if (chr === '*') {\n                pos++;\n                (rule = rule || {}).tagName = '*';\n            }\n            else if (utils_1.isIdentStart(chr) || chr === '\\\\') {\n                (rule = rule || {}).tagName = getIdent();\n            }\n            else if (chr === '.') {\n                pos++;\n                rule = rule || {};\n                (rule.classNames = rule.classNames || []).push(getIdent());\n            }\n            else if (chr === '#') {\n                pos++;\n                (rule = rule || {}).id = getIdent();\n            }\n            else if (chr === '[') {\n                pos++;\n                skipWhitespace();\n                var attr = {\n                    name: getIdent()\n                };\n                skipWhitespace();\n                // @ts-ignore\n                if (chr === ']') {\n                    pos++;\n                }\n                else {\n                    var operator = '';\n                    if (attrEqualityMods[chr]) {\n                        operator = chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \"=\" but end of file reached.');\n                    }\n                    if (chr !== '=') {\n                        throw Error('Expected \"=\" but \"' + chr + '\" found.');\n                    }\n                    attr.operator = operator + '=';\n                    pos++;\n                    skipWhitespace();\n                    var attrValue = '';\n                    attr.valueType = 'string';\n                    // @ts-ignore\n                    if (chr === '\"') {\n                        attrValue = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (chr === '\\'') {\n                        attrValue = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (substitutesEnabled && chr === '$') {\n                        pos++;\n                        attrValue = getIdent();\n                        attr.valueType = 'substitute';\n                    }\n                    else {\n                        while (pos < l) {\n                            if (chr === ']') {\n                                break;\n                            }\n                            attrValue += chr;\n                            pos++;\n                            chr = str.charAt(pos);\n                        }\n                        attrValue = attrValue.trim();\n                    }\n                    skipWhitespace();\n                    if (pos >= l) {\n                        throw Error('Expected \"]\" but end of file reached.');\n                    }\n                    if (chr !== ']') {\n                        throw Error('Expected \"]\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    attr.value = attrValue;\n                }\n                rule = rule || {};\n                (rule.attrs = rule.attrs || []).push(attr);\n            }\n            else if (chr === ':') {\n                pos++;\n                var pseudoName = getIdent();\n                var pseudo = {\n                    name: pseudoName\n                };\n                // @ts-ignore\n                if (chr === '(') {\n                    pos++;\n                    var value = '';\n                    skipWhitespace();\n                    if (pseudos[pseudoName] === 'selector') {\n                        pseudo.valueType = 'selector';\n                        value = parseSelector();\n                    }\n                    else {\n                        pseudo.valueType = pseudos[pseudoName] || 'string';\n                        // @ts-ignore\n                        if (chr === '\"') {\n                            value = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (chr === '\\'') {\n                            value = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (substitutesEnabled && chr === '$') {\n                            pos++;\n                            value = getIdent();\n                            pseudo.valueType = 'substitute';\n                        }\n                        else {\n                            while (pos < l) {\n                                if (chr === ')') {\n                                    break;\n                                }\n                                value += chr;\n                                pos++;\n                                chr = str.charAt(pos);\n                            }\n                            value = value.trim();\n                        }\n                        skipWhitespace();\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \")\" but end of file reached.');\n                    }\n                    if (chr !== ')') {\n                        throw Error('Expected \")\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    pseudo.value = value;\n                }\n                rule = rule || {};\n                (rule.pseudos = rule.pseudos || []).push(pseudo);\n            }\n            else {\n                break;\n            }\n        }\n        return rule;\n    }\n    return parse();\n}\nexports.parseCssSelector = parseCssSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction renderEntity(entity) {\n    var res = '';\n    switch (entity.type) {\n        case 'ruleSet':\n            var currentEntity = entity.rule;\n            var parts = [];\n            while (currentEntity) {\n                if (currentEntity.nestingOperator) {\n                    parts.push(currentEntity.nestingOperator);\n                }\n                parts.push(renderEntity(currentEntity));\n                currentEntity = currentEntity.rule;\n            }\n            res = parts.join(' ');\n            break;\n        case 'selectors':\n            res = entity.selectors.map(renderEntity).join(', ');\n            break;\n        case 'rule':\n            if (entity.tagName) {\n                if (entity.tagName === '*') {\n                    res = '*';\n                }\n                else {\n                    res = utils_1.escapeIdentifier(entity.tagName);\n                }\n            }\n            if (entity.id) {\n                res += \"#\" + utils_1.escapeIdentifier(entity.id);\n            }\n            if (entity.classNames) {\n                res += entity.classNames.map(function (cn) {\n                    return \".\" + (utils_1.escapeIdentifier(cn));\n                }).join('');\n            }\n            if (entity.attrs) {\n                res += entity.attrs.map(function (attr) {\n                    if ('operator' in attr) {\n                        if (attr.valueType === 'substitute') {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + \"$\" + attr.value + \"]\";\n                        }\n                        else {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + utils_1.escapeStr(attr.value) + \"]\";\n                        }\n                    }\n                    else {\n                        return \"[\" + utils_1.escapeIdentifier(attr.name) + \"]\";\n                    }\n                }).join('');\n            }\n            if (entity.pseudos) {\n                res += entity.pseudos.map(function (pseudo) {\n                    if (pseudo.valueType) {\n                        if (pseudo.valueType === 'selector') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + renderEntity(pseudo.value) + \")\";\n                        }\n                        else if (pseudo.valueType === 'substitute') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"($\" + pseudo.value + \")\";\n                        }\n                        else if (pseudo.valueType === 'numeric') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + pseudo.value + \")\";\n                        }\n                        else {\n                            return (\":\" + utils_1.escapeIdentifier(pseudo.name) +\n                                \"(\" + utils_1.escapeIdentifier(pseudo.value) + \")\");\n                        }\n                    }\n                    else {\n                        return \":\" + utils_1.escapeIdentifier(pseudo.name);\n                    }\n                }).join('');\n            }\n            break;\n        default:\n            throw Error('Unknown entity type: \"' + entity.type + '\".');\n    }\n    return res;\n}\nexports.renderEntity = renderEntity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c === '-') || (c === '_');\n}\nexports.isIdentStart = isIdentStart;\nfunction isIdent(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '-' || c === '_';\n}\nexports.isIdent = isIdent;\nfunction isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexports.isHex = isHex;\nfunction escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (exports.identSpecialChars[chr]) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (!(chr === '_' || chr === '-' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (i !== 0 && chr >= '0' && chr <= '9'))) {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xF800) === 0xD800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xFC00) !== 0xD800 || (extraCharCode & 0xFC00) !== 0xDC00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3FF) << 10) + (extraCharCode & 0x3FF) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n            else {\n                result += chr;\n            }\n        }\n        i++;\n    }\n    return result;\n}\nexports.escapeIdentifier = escapeIdentifier;\nfunction escapeStr(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    var replacement;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if ((replacement = exports.strReplacementsRev[chr]) !== undefined) {\n            chr = replacement;\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\" + result + \"\\\"\";\n}\nexports.escapeStr = escapeStr;\nexports.identSpecialChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    '$': true,\n    '%': true,\n    '&': true,\n    '\\'': true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexports.strReplacementsRev = {\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t',\n    '\\f': '\\\\f',\n    '\\v': '\\\\v'\n};\nexports.singleQuoteEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\\'': '\\''\n};\nexports.doubleQuotesEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\"': '\"'\n};\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","const regex = require('./regex.js')\n\nmodule.exports = BananaSlug\n\nconst own = Object.hasOwnProperty\n\nfunction BananaSlug () {\n  const self = this\n\n  if (!(self instanceof BananaSlug)) return new BananaSlug()\n\n  self.reset()\n}\n\n/**\n * Generate a unique slug.\n * @param  {string} value String of text to slugify\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\n * @return {string}       A unique slug string\n */\nBananaSlug.prototype.slug = function (value, maintainCase) {\n  const self = this\n  let slug = slugger(value, maintainCase === true)\n  const originalSlug = slug\n\n  while (own.call(self.occurrences, slug)) {\n    self.occurrences[originalSlug]++\n    slug = originalSlug + '-' + self.occurrences[originalSlug]\n  }\n\n  self.occurrences[slug] = 0\n\n  return slug\n}\n\n/**\n * Reset - Forget all previous slugs\n * @return void\n */\nBananaSlug.prototype.reset = function () {\n  this.occurrences = Object.create(null)\n}\n\nfunction slugger (string, maintainCase) {\n  if (typeof string !== 'string') return ''\n  if (!maintainCase) string = string.toLowerCase()\n  return string.replace(regex, '').replace(/ /g, '-')\n}\n\nBananaSlug.slug = slugger\n","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nmodule.exports = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08BE-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D04\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31BB-\\u31EF\\u3200-\\u33FF\\u4DB6-\\u4DFF\\u9FF0-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7C7-\\uA7F6\\uA828-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB68-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD47-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD-\\uDDCF\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC60-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD00-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD823-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D-\\uD83F\\uD87B-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE4-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD822[\\uDEF3-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","import { Parent, Node } from 'unist';\nimport webpack from 'webpack';\nimport remark from 'remark';\nimport { getTransformValue } from './transform';\nimport { Options, FUNNAME_PREFIX, CodeBlockItem, CodeBlockData } from '../';\n\n/**\n * Creates an object containing the parameters of the current URL.\n *\n * ```js\n * getURLParameters('name=Adam&surname=Smith');\n * // 👉 {name: 'Adam', surname: 'Smith'}\n * ```\n * @param url `name=Adam&surname=Smith`\n * @returns\n */\nexport const getURLParameters = (url: string): Record<string, string> =>\n  (url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce(\n    (a: Record<string, string>, v: string) => ((a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a),\n    {},\n  );\n\nexport interface MarkdownDataChild extends Node {\n  lang: string;\n  meta: string;\n  value: string;\n}\n\nexport interface MarkdownParseData extends Parent<MarkdownDataChild> {}\n\n/** 转换 代码*/\nexport const getProcessor = (source: string) => {\n  try {\n    const child = remark.parse(source) as MarkdownParseData;\n    return child.children;\n  } catch (err) {\n    console.warn(err);\n  }\n};\n\n/**\n * ```js\n * 'mdx:preview' => ''  // Empty\n * 'mdx:preview:demo12' => 'demo12' // return meta id => 'demo12'\n * ```\n * @param meta string\n * @returns string?\n */\nexport const getMetaId = (meta: string = '') => {\n  const [metaRaw = ''] = /mdx:(.[\\w|:]+)/i.exec(meta) || [];\n  return metaRaw.replace(/^mdx:preview:?/, '');\n};\n\n/**\n * ```js\n * isMeta('mdx:preview') => true\n * isMeta('mdx:preview:demo12') => true\n * isMeta('mdx:preview--demo12') => false\n * ```\n * @param meta\n * @returns boolean\n */\nexport const isMeta = (meta: string = '') => meta && meta.includes('mdx:preview');\n\n/** 获取需要渲染的代码块 **/\nexport function getCodeBlock(\n  child: MarkdownParseData['children'],\n  opts: Options = {},\n  resourcePath?: string,\n): CodeBlockData['data'] {\n  const { lang = ['jsx', 'tsx'] } = opts;\n  // 获取渲染部分\n  const codeBlock: Record<string | number, CodeBlockItem> = {};\n  child.forEach((item) => {\n    if (item && item.type === 'code' && lang.includes(item.lang)) {\n      const line = item.position.start.line;\n      const metaId = getMetaId(item.meta);\n      if (isMeta(item.meta)) {\n        let name = metaId || line;\n        const funName = `${resourcePath}.${FUNNAME_PREFIX}${name}`;\n        const returnCode = getTransformValue(item.value, `${funName}.${item.lang}`, opts);\n        codeBlock[name] = {\n          name,\n          meta: getURLParameters(item.meta),\n          code: returnCode,\n          language: item.lang,\n          value: item.value,\n        };\n      }\n    }\n  });\n  return codeBlock;\n}\n\n/**\n * `mdCodeModulesLoader` method for adding `markdown-react-code-preview-loader` to webpack config.\n * @param {webpack.Configuration} config webpack config\n * @param {string[]} lang Parsing language\n * @param {Options} option Loader Options\n * @returns {webpack.Configuration}\n */\nexport const mdCodeModulesLoader = (\n  config: webpack.Configuration,\n  lang?: string[],\n  option: Options = {},\n): webpack.Configuration => {\n  config.module.rules.forEach((ruleItem) => {\n    if (typeof ruleItem === 'object') {\n      if (ruleItem.oneOf) {\n        ruleItem.oneOf.unshift({\n          test: /.md$/,\n          use: [\n            {\n              loader: 'markdown-react-code-preview-loader',\n              options: { lang, ...option },\n            },\n          ],\n        });\n      }\n    }\n  });\n  return config;\n};\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React from 'react';\n\nexport const ExpandIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path\n        d=\"M8.64 5.23a1 1 0 0 0-1.41.13l-5 6a1 1 0 0 0 0 1.27l4.83 6a1 1 0 0 0 .78.37 1 1 0 0 0 .78-1.63L4.29 12l4.48-5.36a1 1 0 0 0-.13-1.41zm13.14 6.14-4.78-6a1 1 0 0 0-1.41-.15 1 1 0 0 0-.15 1.41L19.71 12l-4.48 5.37a1 1 0 0 0 .13 1.41A1 1 0 0 0 16 19a1 1 0 0 0 .77-.36l5-6a1 1 0 0 0 .01-1.27z\"\n        data-name=\"code\"\n      />\n    </svg>\n  );\n};\nexport const CopyIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M18 21h-6a3 3 0 0 1-3-3v-6a3 3 0 0 1 3-3h6a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3zm-6-10a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1z\" />\n      <path d=\"M9.73 15H5.67A2.68 2.68 0 0 1 3 12.33V5.67A2.68 2.68 0 0 1 5.67 3h6.66A2.68 2.68 0 0 1 15 5.67V9.4h-2V5.67a.67.67 0 0 0-.67-.67H5.67a.67.67 0 0 0-.67.67v6.66a.67.67 0 0 0 .67.67h4.06z\" />\n    </svg>\n  );\n};\nexport const CopySuccessIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"green\">\n      <path d=\"M9.71 11.29a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 16a1 1 0 0 0 .72-.34l7-8a1 1 0 0 0-1.5-1.32L12 13.54z\" />\n      <path d=\"M21 11a1 1 0 0 0-1 1 8 8 0 0 1-8 8A8 8 0 0 1 6.33 6.36 7.93 7.93 0 0 1 12 4a8.79 8.79 0 0 1 1.9.22 1 1 0 1 0 .47-1.94A10.54 10.54 0 0 0 12 2a10 10 0 0 0-7 17.09A9.93 9.93 0 0 0 12 22a10 10 0 0 0 10-10 1 1 0 0 0-1-1z\" />\n    </svg>\n  );\n};\n","import { useState } from 'react';\nimport copyTextToClipboard from '@uiw/copy-to-clipboard';\nimport { CopyIcon, CopySuccessIcon } from './icons';\n\nexport const Copied = (props: { text?: string }) => {\n  const [copied, setCopied] = useState(false);\n  const handle = () => {\n    setCopied(true);\n    copyTextToClipboard(props.text || '', () => {\n      const timer = setTimeout(() => {\n        setCopied(false);\n        clearTimeout(timer);\n      }, 2000);\n    });\n  };\n  return <button onClick={handle}>{copied ? <CopySuccessIcon /> : <CopyIcon />}</button>;\n};\n","import { forwardRef, useState } from 'react';\nimport { Copied } from './Copied';\nimport { ExpandIcon } from './icons';\nimport './styles.css';\n\nexport interface CodeLayoutProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  prefixCls?: string;\n  /** 原始 代码块 渲染 **/\n  code?: React.ReactNode;\n  text?: string;\n  /** Title section, you can also place buttons **/\n  toolbar?: React.ReactNode;\n  /** 额外内容，展示 toolbar 右侧内容 */\n  toolbarExtra?: React.ReactNode;\n  disableToolbar?: boolean;\n  disableCode?: boolean;\n  disablePreview?: boolean;\n  /** 禁用方格背景 */\n  disableCheckered?: boolean;\n  /** Configure the preview background color. */\n  background?: string;\n  /**\n   * 是否需要边框\n   * @default true\n   */\n  bordered?: boolean;\n  /**\n   * 是否显示复制按钮\n   * @default true\n   */\n  copied?: boolean;\n}\n\n/** react-code-preview-layout 缩写 */\nconst PRE_FIX = 'w-rcpl';\n\nconst CodeLayout = forwardRef<HTMLDivElement, CodeLayoutProps>((props, ref) => {\n  const [showCode, setShowCode] = useState(false);\n  const {\n    children,\n    toolbar,\n    bordered = true,\n    disableCheckered = false,\n    disablePreview = false,\n    disableCode = false,\n    disableToolbar = false,\n    text = '',\n    background = '',\n    copied = true,\n    toolbarExtra,\n    code,\n    prefixCls = PRE_FIX,\n    className,\n    ...other\n  } = props;\n  const cls = [prefixCls, className, bordered ? `w-bordered` : null, disableCheckered ? `w-disable-checkered` : null]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n\n  const style: React.CSSProperties = !background\n    ? {}\n    : {\n        backgroundColor: background,\n        backgroundImage: 'none',\n      };\n  return (\n    <div ref={ref} {...other} className={cls}>\n      {!disablePreview && (\n        <div className={`${prefixCls}-preview`} style={style}>\n          {children}\n        </div>\n      )}\n      {!disableToolbar && (\n        <div className={`${prefixCls}-toolbar`}>\n          <div className={`${prefixCls}-title`}>{toolbar}</div>\n          <div className={`${prefixCls}-extra`}>\n            {toolbarExtra}\n            {copied && <Copied text={text} />}\n            {!disableCode && (\n              <button onClick={() => setShowCode(!showCode)}>\n                <ExpandIcon />\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n      {!disableCode && <div className={`${prefixCls}-code ${showCode ? 'w-display' : 'w-hidden'}`}>{code}</div>}\n    </div>\n  );\n});\n\nexport default CodeLayout;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use strict'\n\nmodule.exports = stringify\n\nvar toMarkdown = require('mdast-util-to-markdown')\n\nfunction stringify(options) {\n  var self = this\n\n  this.Compiler = compile\n\n  function compile(tree) {\n    return toMarkdown(\n      tree,\n      Object.assign({}, self.data('settings'), options, {\n        // Note: this option is not in the readme.\n        // The goal is for it to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: self.data('toMarkdownExtensions') || []\n      })\n    )\n  }\n}\n","'use strict'\n\nmodule.exports = longestStreak\n\n// Get the count of the longest repeating streak of `character` in `value`.\nfunction longestStreak(value, character) {\n  var count = 0\n  var maximum = 0\n  var expected\n  var index\n\n  if (typeof character !== 'string' || character.length !== 1) {\n    throw new Error('Expected character')\n  }\n\n  value = String(value)\n  index = value.indexOf(character)\n  expected = index\n\n  while (index !== -1) {\n    count++\n\n    if (index === expected) {\n      if (count > maximum) {\n        maximum = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + 1\n    index = value.indexOf(character, expected)\n  }\n\n  return maximum\n}\n","module.exports = require('./lib')\n","module.exports = configure\n\nfunction configure(base, extension) {\n  var index = -1\n  var key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      base[key] = base[key].concat(extension[key] || [])\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","module.exports = blockquote\n\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction blockquote(node, _, context) {\n  var exit = context.enter('blockquote')\n  var value = indentLines(flow(node, context), map)\n  exit()\n  return value\n}\n\nfunction map(line, index, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","module.exports = hardBreak\n\nvar patternInScope = require('../util/pattern-in-scope')\n\nfunction hardBreak(node, _, context, safe) {\n  var index = -1\n\n  while (++index < context.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      context.unsafe[index].character === '\\n' &&\n      patternInScope(context.stack, context.unsafe[index])\n    ) {\n      return /[ \\t]/.test(safe.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","module.exports = code\n\nvar repeat = require('repeat-string')\nvar streak = require('longest-streak')\nvar formatCodeAsIndented = require('../util/format-code-as-indented')\nvar checkFence = require('../util/check-fence')\nvar indentLines = require('../util/indent-lines')\nvar safe = require('../util/safe')\n\nfunction code(node, _, context) {\n  var marker = checkFence(context)\n  var raw = node.value || ''\n  var suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n  var value\n  var sequence\n  var exit\n  var subexit\n\n  if (formatCodeAsIndented(node, context)) {\n    exit = context.enter('codeIndented')\n    value = indentLines(raw, map)\n  } else {\n    sequence = repeat(marker, Math.max(streak(raw, marker) + 1, 3))\n    exit = context.enter('codeFenced')\n    value = sequence\n\n    if (node.lang) {\n      subexit = context.enter('codeFencedLang' + suffix)\n      value += safe(context, node.lang, {\n        before: '`',\n        after: ' ',\n        encode: ['`']\n      })\n      subexit()\n    }\n\n    if (node.lang && node.meta) {\n      subexit = context.enter('codeFencedMeta' + suffix)\n      value +=\n        ' ' +\n        safe(context, node.meta, {\n          before: ' ',\n          after: '\\n',\n          encode: ['`']\n        })\n      subexit()\n    }\n\n    value += '\\n'\n\n    if (raw) {\n      value += raw + '\\n'\n    }\n\n    value += sequence\n  }\n\n  exit()\n  return value\n}\n\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","module.exports = definition\n\nvar association = require('../util/association')\nvar checkQuote = require('../util/check-quote')\nvar safe = require('../util/safe')\n\nfunction definition(node, _, context) {\n  var marker = checkQuote(context)\n  var suffix = marker === '\"' ? 'Quote' : 'Apostrophe'\n  var exit = context.enter('definition')\n  var subexit = context.enter('label')\n  var value =\n    '[' + safe(context, association(node), {before: '[', after: ']'}) + ']: '\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there’s whitespace, enclosed is prettier.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {before: ' ', after: ' '})\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      marker +\n      safe(context, node.title, {before: marker, after: marker}) +\n      marker\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","module.exports = emphasis\nemphasis.peek = emphasisPeek\n\nvar checkEmphasis = require('../util/check-emphasis')\nvar phrasing = require('../util/container-phrasing')\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\nfunction emphasis(node, _, context) {\n  var marker = checkEmphasis(context)\n  var exit = context.enter('emphasis')\n  var value = phrasing(node, context, {before: marker, after: marker})\n  exit()\n  return marker + value + marker\n}\n\nfunction emphasisPeek(node, _, context) {\n  return context.options.emphasis || '*'\n}\n","module.exports = heading\n\nvar repeat = require('repeat-string')\nvar formatHeadingAsSetext = require('../util/format-heading-as-setext')\nvar phrasing = require('../util/container-phrasing')\n\nfunction heading(node, _, context) {\n  var rank = Math.max(Math.min(6, node.depth || 1), 1)\n  var exit\n  var subexit\n  var value\n  var sequence\n\n  if (formatHeadingAsSetext(node, context)) {\n    exit = context.enter('headingSetext')\n    subexit = context.enter('phrasing')\n    value = phrasing(node, context, {before: '\\n', after: '\\n'})\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      repeat(\n        rank === 1 ? '=' : '-',\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  sequence = repeat('#', rank)\n  exit = context.enter('headingAtx')\n  subexit = context.enter('phrasing')\n  value = phrasing(node, context, {before: '# ', after: '\\n'})\n  value = value ? sequence + ' ' + value : sequence\n  if (context.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","module.exports = html\nhtml.peek = htmlPeek\n\nfunction html(node) {\n  return node.value || ''\n}\n\nfunction htmlPeek() {\n  return '<'\n}\n","module.exports = imageReference\nimageReference.peek = imageReferencePeek\n\nvar association = require('../util/association')\nvar safe = require('../util/safe')\n\nfunction imageReference(node, _, context) {\n  var type = node.referenceType\n  var exit = context.enter('imageReference')\n  var subexit = context.enter('label')\n  var alt = safe(context, node.alt, {before: '[', after: ']'})\n  var value = '![' + alt + ']'\n  var reference\n  var stack\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  reference = safe(context, association(node), {before: '[', after: ']'})\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += '[' + reference + ']'\n  } else if (type !== 'shortcut') {\n    value += '[]'\n  }\n\n  return value\n}\n\nfunction imageReferencePeek() {\n  return '!'\n}\n","module.exports = image\nimage.peek = imagePeek\n\nvar checkQuote = require('../util/check-quote')\nvar safe = require('../util/safe')\n\nfunction image(node, _, context) {\n  var quote = checkQuote(context)\n  var suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  var exit = context.enter('image')\n  var subexit = context.enter('label')\n  var value = '![' + safe(context, node.alt, {before: '[', after: ']'}) + ']('\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // Or if there’s markdown whitespace or an eol, enclose.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {\n      before: '(',\n      after: node.title ? ' ' : ')'\n    })\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      quote +\n      safe(context, node.title, {before: quote, after: quote}) +\n      quote\n    subexit()\n  }\n\n  value += ')'\n  exit()\n\n  return value\n}\n\nfunction imagePeek() {\n  return '!'\n}\n","exports.blockquote = require('./blockquote')\nexports.break = require('./break')\nexports.code = require('./code')\nexports.definition = require('./definition')\nexports.emphasis = require('./emphasis')\nexports.hardBreak = require('./break')\nexports.heading = require('./heading')\nexports.html = require('./html')\nexports.image = require('./image')\nexports.imageReference = require('./image-reference')\nexports.inlineCode = require('./inline-code')\nexports.link = require('./link')\nexports.linkReference = require('./link-reference')\nexports.list = require('./list')\nexports.listItem = require('./list-item')\nexports.paragraph = require('./paragraph')\nexports.root = require('./root')\nexports.strong = require('./strong')\nexports.text = require('./text')\nexports.thematicBreak = require('./thematic-break')\n","module.exports = inlineCode\ninlineCode.peek = inlineCodePeek\n\nvar patternCompile = require('../util/pattern-compile')\n\nfunction inlineCode(node, parent, context) {\n  var value = node.value || ''\n  var sequence = '`'\n  var index = -1\n  var pattern\n  var expression\n  var match\n  var position\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    (/[ \\r\\n`]/.test(value.charAt(0)) ||\n      /[ \\r\\n`]/.test(value.charAt(value.length - 1)))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\nfunction inlineCodePeek() {\n  return '`'\n}\n","module.exports = linkReference\nlinkReference.peek = linkReferencePeek\n\nvar association = require('../util/association')\nvar phrasing = require('../util/container-phrasing')\nvar safe = require('../util/safe')\n\nfunction linkReference(node, _, context) {\n  var type = node.referenceType\n  var exit = context.enter('linkReference')\n  var subexit = context.enter('label')\n  var text = phrasing(node, context, {before: '[', after: ']'})\n  var value = '[' + text + ']'\n  var reference\n  var stack\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  reference = safe(context, association(node), {before: '[', after: ']'})\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += '[' + reference + ']'\n  } else if (type !== 'shortcut') {\n    value += '[]'\n  }\n\n  return value\n}\n\nfunction linkReferencePeek() {\n  return '['\n}\n","module.exports = link\nlink.peek = linkPeek\n\nvar checkQuote = require('../util/check-quote')\nvar formatLinkAsAutolink = require('../util/format-link-as-autolink')\nvar phrasing = require('../util/container-phrasing')\nvar safe = require('../util/safe')\n\nfunction link(node, _, context) {\n  var quote = checkQuote(context)\n  var suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  var exit\n  var subexit\n  var value\n  var stack\n\n  if (formatLinkAsAutolink(node, context)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    stack = context.stack\n    context.stack = []\n    exit = context.enter('autolink')\n    value = '<' + phrasing(node, context, {before: '<', after: '>'}) + '>'\n    exit()\n    context.stack = stack\n    return value\n  }\n\n  exit = context.enter('link')\n  subexit = context.enter('label')\n  value = '[' + phrasing(node, context, {before: '[', after: ']'}) + ']('\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // Or if there’s markdown whitespace or an eol, enclose.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {\n      before: '(',\n      after: node.title ? ' ' : ')'\n    })\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      quote +\n      safe(context, node.title, {before: quote, after: quote}) +\n      quote\n    subexit()\n  }\n\n  value += ')'\n\n  exit()\n  return value\n}\n\nfunction linkPeek(node, _, context) {\n  return formatLinkAsAutolink(node, context) ? '<' : '['\n}\n","module.exports = listItem\n\nvar repeat = require('repeat-string')\nvar checkBullet = require('../util/check-bullet')\nvar checkListItemIndent = require('../util/check-list-item-indent')\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction listItem(node, parent, context) {\n  var bullet = checkBullet(context)\n  var listItemIndent = checkListItemIndent(context)\n  var size\n  var value\n  var exit\n\n  if (parent && parent.ordered) {\n    bullet =\n      (parent.start > -1 ? parent.start : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      '.'\n  }\n\n  size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' && ((parent && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  exit = context.enter('listItem')\n  value = indentLines(flow(node, context), map)\n  exit()\n\n  return value\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : repeat(' ', size)) + line\n    }\n\n    return (blank ? bullet : bullet + repeat(' ', size - bullet.length)) + line\n  }\n}\n","module.exports = list\n\nvar flow = require('../util/container-flow')\n\nfunction list(node, _, context) {\n  var exit = context.enter('list')\n  var value = flow(node, context)\n  exit()\n  return value\n}\n","module.exports = paragraph\n\nvar phrasing = require('../util/container-phrasing')\n\nfunction paragraph(node, _, context) {\n  var exit = context.enter('paragraph')\n  var subexit = context.enter('phrasing')\n  var value = phrasing(node, context, {before: '\\n', after: '\\n'})\n  subexit()\n  exit()\n  return value\n}\n","module.exports = root\n\nvar flow = require('../util/container-flow')\n\nfunction root(node, _, context) {\n  return flow(node, context)\n}\n","module.exports = strong\nstrong.peek = strongPeek\n\nvar checkStrong = require('../util/check-strong')\nvar phrasing = require('../util/container-phrasing')\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\nfunction strong(node, _, context) {\n  var marker = checkStrong(context)\n  var exit = context.enter('strong')\n  var value = phrasing(node, context, {before: marker, after: marker})\n  exit()\n  return marker + marker + value + marker + marker\n}\n\nfunction strongPeek(node, _, context) {\n  return context.options.strong || '*'\n}\n","module.exports = text\n\nvar safe = require('../util/safe')\n\nfunction text(node, parent, context, safeOptions) {\n  return safe(context, node.value, safeOptions)\n}\n","module.exports = thematicBreak\n\nvar repeat = require('repeat-string')\nvar checkRepeat = require('../util/check-rule-repeat')\nvar checkRule = require('../util/check-rule')\n\nfunction thematicBreak(node, parent, context) {\n  var value = repeat(\n    checkRule(context) + (context.options.ruleSpaces ? ' ' : ''),\n    checkRepeat(context)\n  )\n\n  return context.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","module.exports = toMarkdown\n\nvar zwitch = require('zwitch')\nvar configure = require('./configure')\nvar defaultHandlers = require('./handle')\nvar defaultJoin = require('./join')\nvar defaultUnsafe = require('./unsafe')\n\nfunction toMarkdown(tree, options) {\n  var settings = options || {}\n  var context = {\n    enter: enter,\n    stack: [],\n    unsafe: [],\n    join: [],\n    handlers: {},\n    options: {}\n  }\n  var result\n\n  configure(context, {\n    unsafe: defaultUnsafe,\n    join: defaultJoin,\n    handlers: defaultHandlers\n  })\n  configure(context, settings)\n\n  if (context.options.tightDefinitions) {\n    context.join = [joinDefinition].concat(context.join)\n  }\n\n  context.handle = zwitch('type', {\n    invalid: invalid,\n    unknown: unknown,\n    handlers: context.handlers\n  })\n\n  result = context.handle(tree, null, context, {before: '\\n', after: '\\n'})\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  function enter(name) {\n    context.stack.push(name)\n    return exit\n\n    function exit() {\n      context.stack.pop()\n    }\n  }\n}\n\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\nfunction unknown(node) {\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n","module.exports = [joinDefaults]\n\nvar formatCodeAsIndented = require('./util/format-code-as-indented')\nvar formatHeadingAsSetext = require('./util/format-heading-as-setext')\n\nfunction joinDefaults(left, right, parent, context) {\n  if (\n    // Two lists with the same marker.\n    (right.type === 'list' &&\n      right.type === left.type &&\n      Boolean(left.ordered) === Boolean(right.ordered)) ||\n    // Indented code after list or another indented code.\n    (right.type === 'code' &&\n      formatCodeAsIndented(right, context) &&\n      (left.type === 'list' ||\n        (left.type === right.type && formatCodeAsIndented(left, context))))\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if (typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, context)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","module.exports = [\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {character: '!', after: '\\\\[', inConstruct: 'phrasing'},\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  {before: '\\\\]', character: '(', inConstruct: 'phrasing'},\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*'},\n  {character: '*', inConstruct: 'phrasing'},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {character: '<', after: '[!/?A-Za-z]', inConstruct: 'phrasing'},\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: ['phrasing', 'label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {\n    character: ']',\n    inConstruct: ['label', 'reference']\n  },\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {before: '[^A-Za-z]', character: '_', inConstruct: 'phrasing'},\n  {character: '_', after: '[^A-Za-z]', inConstruct: 'phrasing'},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedMetaGraveAccent',\n      'phrasing'\n    ]\n  },\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","module.exports = association\n\nvar decode = require('parse-entities/decode-entity')\n\nvar characterEscape = /\\\\([!-/:-@[-`{-~])/g\nvar characterReference = /&(#(\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n// The `label` of an association is the string value: character escapes and\n// references work, and casing is intact.\n// The `identifier` is used to match one association to another: controversially,\n// character escapes and references don’t work in this matching: `&copy;` does\n// not match `©`, and `\\+` does not match `+`.\n// But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n// matches `a b`.\n// So, we do prefer the label when figuring out how we’re going to serialize:\n// it has whitespace, casing, and we can ignore most useless character escapes\n// and all character references.\nfunction association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return node.identifier\n    .replace(characterEscape, '$1')\n    .replace(characterReference, decodeIfPossible)\n}\n\nfunction decodeIfPossible($0, $1) {\n  return decode($1) || $0\n}\n","module.exports = checkBullet\n\nfunction checkBullet(context) {\n  var marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkEmphasis\n\nfunction checkEmphasis(context) {\n  var marker = context.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkFence\n\nfunction checkFence(context) {\n  var marker = context.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkListItemIndent\n\nfunction checkListItemIndent(context) {\n  var style = context.options.listItemIndent || 'tab'\n\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","module.exports = checkQuote\n\nfunction checkQuote(context) {\n  var marker = context.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkRule\n\nfunction checkRule(context) {\n  var repetition = context.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","module.exports = checkRule\n\nfunction checkRule(context) {\n  var marker = context.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkStrong\n\nfunction checkStrong(context) {\n  var marker = context.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = flow\n\nvar repeat = require('repeat-string')\n\nfunction flow(parent, context) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  function between(left, right) {\n    var index = -1\n    var result\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result))\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","module.exports = phrasing\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var before = safeOptions.before\n  var after\n  var handle\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: ''\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n    }\n\n    results.push(\n      context.handle(child, parent, context, {\n        before: before,\n        after: after\n      })\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  return results.join('')\n}\n","module.exports = formatCodeAsIndented\n\nfunction formatCodeAsIndented(node, context) {\n  return (\n    !context.options.fences &&\n    node.value &&\n    // If there’s no info…\n    !node.lang &&\n    // And there’s a non-whitespace character…\n    /[^ \\r\\n]/.test(node.value) &&\n    // And the value doesn’t start or end in a blank…\n    !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","module.exports = formatHeadingAsSetext\n\nvar toString = require('mdast-util-to-string')\n\nfunction formatHeadingAsSetext(node, context) {\n  return (\n    context.options.setext && (!node.depth || node.depth < 3) && toString(node)\n  )\n}\n","module.exports = formatLinkAsAutolink\n\nvar toString = require('mdast-util-to-string')\n\nfunction formatLinkAsAutolink(node, context) {\n  var raw = toString(node)\n\n  return (\n    !context.options.resourceLink &&\n    // If there’s a url…\n    node.url &&\n    // And there’s a no title…\n    !node.title &&\n    // And the content of `node` is a single text node…\n    node.children &&\n    node.children.length === 1 &&\n    node.children[0].type === 'text' &&\n    // And if the url is the same as the content…\n    (raw === node.url || 'mailto:' + raw === node.url) &&\n    // And that starts w/ a protocol…\n    /^[a-z][a-z+.-]+:/i.test(node.url) &&\n    // And that doesn’t contain ASCII control codes (character escapes and\n    // references don’t work) or angle brackets…\n    !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","module.exports = indentLines\n\nvar eol = /\\r?\\n|\\r/g\n\nfunction indentLines(value, map) {\n  var result = []\n  var start = 0\n  var line = 0\n  var match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","module.exports = patternCompile\n\nfunction patternCompile(pattern) {\n  var before\n  var after\n\n  if (!pattern._compiled) {\n    before = pattern.before ? '(?:' + pattern.before + ')' : ''\n    after = pattern.after ? '(?:' + pattern.after + ')' : ''\n\n    if (pattern.atBreak) {\n      before = '[\\\\r\\\\n][\\\\t ]*' + before\n    }\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (after || ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","module.exports = patternInScope\n\nfunction patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct)\n  )\n}\n\nfunction listInScope(stack, list, none) {\n  var index\n\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  index = -1\n\n  while (++index < list.length) {\n    if (stack.indexOf(list[index]) !== -1) {\n      return true\n    }\n  }\n\n  return false\n}\n","module.exports = safe\n\nvar patternCompile = require('./pattern-compile')\nvar patternInScope = require('./pattern-in-scope')\n\nfunction safe(context, input, config) {\n  var value = (config.before || '') + (input || '') + (config.after || '')\n  var positions = []\n  var result = []\n  var infos = {}\n  var index = -1\n  var before\n  var after\n  var position\n  var pattern\n  var expression\n  var match\n  var start\n  var end\n\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      before = 'before' in pattern || pattern.atBreak\n      after = 'after' in pattern\n\n      position = match.index + (before ? match[1].length : 0)\n\n      if (positions.indexOf(position) === -1) {\n        positions.push(position)\n        infos[position] = {before: before, after: after}\n      } else {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  start = config.before ? config.before.length : 0\n  end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    position = positions[index]\n\n    if (\n      // Character before or after matched:\n      position < start ||\n      position >= end\n    ) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      position + 1 < end &&\n      positions[index + 1] === position + 1 &&\n      infos[position].after &&\n      !infos[position + 1].before &&\n      !infos[position + 1].after\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || config.encode.indexOf(value.charAt(position)) === -1)\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\nfunction numerical(a, b) {\n  return a - b\n}\n\nfunction escapeBackslashes(value, after) {\n  var expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  var positions = []\n  var results = []\n  var index = -1\n  var start = 0\n  var whole = value + after\n  var match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.\n// Prefer the node’s plain-text fields, otherwise serialize its children,\n// and if the given value is an array, serialize the nodes in it.\nfunction toString(node) {\n  return (\n    (node &&\n      (node.value ||\n        node.alt ||\n        node.title ||\n        ('children' in node && all(node.children)) ||\n        ('length' in node && all(node)))) ||\n    ''\n  )\n}\n\nfunction all(values) {\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = toString(values[index])\n  }\n\n  return result.join('')\n}\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nmodule.exports = factory\n\nvar noop = Function.prototype\nvar own = {}.hasOwnProperty\n\n// Handle values based on a property.\nfunction factory(key, options) {\n  var settings = options || {}\n\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    return (fn || noop).apply(this, arguments)\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n","'use strict'\n\nvar unified = require('unified')\nvar parse = require('remark-parse')\nvar stringify = require('remark-stringify')\n\nmodule.exports = unified().use(parse).use(stringify).freeze()\n","'use strict'\n\nmodule.exports = bail\n\nfunction bail(err) {\n  if (err) {\n    throw err\n  }\n}\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict'\n\nmodule.exports = fromMarkdown\n\n// These three are compiled away in the `dist/`\n\nvar toString = require('mdast-util-to-string')\nvar assign = require('micromark/dist/constant/assign')\nvar own = require('micromark/dist/constant/has-own-property')\nvar normalizeIdentifier = require('micromark/dist/util/normalize-identifier')\nvar safeFromInt = require('micromark/dist/util/safe-from-int')\nvar parser = require('micromark/dist/parse')\nvar preprocessor = require('micromark/dist/preprocess')\nvar postprocess = require('micromark/dist/postprocess')\nvar decode = require('parse-entities/decode-entity')\nvar stringifyPosition = require('unist-util-stringify-position')\n\nfunction fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n\n  return compiler(options)(\n    postprocess(\n      parser(options).document().write(preprocessor()(value, encoding, true))\n    )\n  )\n}\n\n// Note this compiler only understand complete buffering, not streaming.\nfunction compiler(options) {\n  var settings = options || {}\n  var config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n\n    settings.mdastExtensions || []\n  )\n\n  var data = {}\n\n  return compile\n\n  function compile(events) {\n    var tree = {type: 'root', children: []}\n    var stack = [tree]\n    var tokenStack = []\n    var listStack = []\n    var index = -1\n    var handler\n    var listStart\n\n    var context = {\n      stack: stack,\n      tokenStack: tokenStack,\n      config: config,\n      enter: enter,\n      exit: exit,\n      buffer: buffer,\n      resume: resume,\n      setData: setData,\n      getData: getData\n    }\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          listStart = listStack.pop(index)\n          index = prepareList(events, listStart, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          assign({sliceSerialize: events[index][2].sliceSerialize}, context),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length) {\n      throw new Error(\n        'Cannot close document, a token (`' +\n          tokenStack[tokenStack.length - 1].type +\n          '`, ' +\n          stringifyPosition({\n            start: tokenStack[tokenStack.length - 1].start,\n            end: tokenStack[tokenStack.length - 1].end\n          }) +\n          ') is still open'\n      )\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length ? events[0][1].start : {line: 1, column: 1, offset: 0}\n      ),\n\n      end: point(\n        events.length\n          ? events[events.length - 2][1].end\n          : {line: 1, column: 1, offset: 0}\n      )\n    }\n\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n\n  function prepareList(events, start, length) {\n    var index = start - 1\n    var containerBalance = -1\n    var listSpread = false\n    var listItem\n    var tailIndex\n    var lineIndex\n    var tailEvent\n    var event\n    var firstBlankLineIndex\n    var atMarker\n\n    while (++index <= length) {\n      event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = point(\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: point(event[1].start)\n          }\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  function getData(key) {\n    return data[key]\n  }\n\n  function point(d) {\n    return {line: d.line, column: d.column, offset: d.offset}\n  }\n\n  function opener(create, and) {\n    return open\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  function buffer() {\n    this.stack.push({type: 'fragment', children: []})\n  }\n\n  function enter(node, token) {\n    this.stack[this.stack.length - 1].children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push(token)\n    node.position = {start: point(token.start)}\n    return node\n  }\n\n  function closer(and) {\n    return close\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  function exit(token) {\n    var node = this.stack.pop()\n    var open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): it’s not open'\n      )\n    } else if (open.type !== token.type) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): a different token (`' +\n          open.type +\n          '`, ' +\n          stringifyPosition({start: open.start, end: open.end}) +\n          ') is open'\n      )\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      this.stack[this.stack.length - 2].start = parseInt(\n        this.sliceSerialize(token),\n        10\n      )\n\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  function onexitcodefencedfenceinfo() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].lang = data\n  }\n\n  function onexitcodefencedfencemeta() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].meta = data\n  }\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  function onexitcodefenced() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data.replace(\n      /^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g,\n      ''\n    )\n\n    setData('flowCodeInside')\n  }\n\n  function onexitcodeindented() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitdefinitiontitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitdefinitiondestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitatxheadingsequence(token) {\n    if (!this.stack[this.stack.length - 1].depth) {\n      this.stack[this.stack.length - 1].depth = this.sliceSerialize(\n        token\n      ).length\n    }\n  }\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  function onexitsetextheadinglinesequence(token) {\n    this.stack[this.stack.length - 1].depth =\n      this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  function onenterdata(token) {\n    var siblings = this.stack[this.stack.length - 1].children\n    var tail = siblings[siblings.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {start: point(token.start)}\n      this.stack[this.stack.length - 1].children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n\n  function onexitdata(token) {\n    var tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  function onexitlineending(token) {\n    var context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      context.children[context.children.length - 1].position.end = point(\n        token.end\n      )\n\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.indexOf(context.type) > -1\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  function onexithtmlflow() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexithtmltext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitcodetext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitlink() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitimage() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitlabeltext(token) {\n    this.stack[this.stack.length - 2].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitlabel() {\n    var fragment = this.stack[this.stack.length - 1]\n    var value = this.resume()\n\n    this.stack[this.stack.length - 1].label = value\n\n    // Assume a reference.\n    setData('inReference', true)\n\n    if (this.stack[this.stack.length - 1].type === 'link') {\n      this.stack[this.stack.length - 1].children = fragment.children\n    } else {\n      this.stack[this.stack.length - 1].alt = value\n    }\n  }\n\n  function onexitresourcedestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitresourcetitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  function onexitreferencestring(token) {\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  function onexitcharacterreferencevalue(token) {\n    var data = this.sliceSerialize(token)\n    var type = getData('characterReferenceType')\n    var value\n    var tail\n\n    if (type) {\n      value = safeFromInt(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n\n      setData('characterReferenceType')\n    } else {\n      value = decode(data)\n    }\n\n    tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url = this.sliceSerialize(token)\n  }\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url =\n      'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  function blockQuote() {\n    return {type: 'blockquote', children: []}\n  }\n\n  function codeFlow() {\n    return {type: 'code', lang: null, meta: null, value: ''}\n  }\n\n  function codeText() {\n    return {type: 'inlineCode', value: ''}\n  }\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  function emphasis() {\n    return {type: 'emphasis', children: []}\n  }\n\n  function heading() {\n    return {type: 'heading', depth: undefined, children: []}\n  }\n\n  function hardBreak() {\n    return {type: 'break'}\n  }\n\n  function html() {\n    return {type: 'html', value: ''}\n  }\n\n  function image() {\n    return {type: 'image', title: null, url: '', alt: null}\n  }\n\n  function link() {\n    return {type: 'link', title: null, url: '', children: []}\n  }\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  function paragraph() {\n    return {type: 'paragraph', children: []}\n  }\n\n  function strong() {\n    return {type: 'strong', children: []}\n  }\n\n  function text() {\n    return {type: 'text', value: ''}\n  }\n\n  function thematicBreak() {\n    return {type: 'thematicBreak'}\n  }\n}\n\nfunction configure(config, extensions) {\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(config, extensions[index])\n  }\n\n  return config\n}\n\nfunction extension(config, extension) {\n  var key\n  var left\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : (config[key] = {})\n\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, extension[key])\n    } else {\n      Object.assign(left, extension[key])\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = require('./dist')\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.\n// Prefer the node’s plain-text fields, otherwise serialize its children,\n// and if the given value is an array, serialize the nodes in it.\nfunction toString(node) {\n  return (\n    (node &&\n      (node.value ||\n        node.alt ||\n        node.title ||\n        ('children' in node && all(node.children)) ||\n        ('length' in node && all(node)))) ||\n    ''\n  )\n}\n\nfunction all(values) {\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = toString(values[index])\n  }\n\n  return result.join('')\n}\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlpha = regexCheck(/[A-Za-z]/)\n\nmodule.exports = asciiAlpha\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\nmodule.exports = asciiAlphanumeric\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\nmodule.exports = asciiAtext\n","'use strict'\n\n// Note: EOF is seen as ASCII control here, because `null < 32 == true`.\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code < 32 || code === 127\n  )\n}\n\nmodule.exports = asciiControl\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiDigit = regexCheck(/\\d/)\n\nmodule.exports = asciiDigit\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\nmodule.exports = asciiHexDigit\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\nmodule.exports = asciiPunctuation\n","'use strict'\n\nfunction markdownLineEndingOrSpace(code) {\n  return code < 0 || code === 32\n}\n\nmodule.exports = markdownLineEndingOrSpace\n","'use strict'\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n\nmodule.exports = markdownLineEnding\n","'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n","'use strict'\n\nvar unicodePunctuationRegex = require('../constant/unicode-punctuation-regex.js')\nvar regexCheck = require('../util/regex-check.js')\n\n// In fact adds to the bundle size.\n\nvar unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar unicodeWhitespace = regexCheck(/\\s/)\n\nmodule.exports = unicodeWhitespace\n","'use strict'\n\nvar assign = Object.assign\n\nmodule.exports = assign\n","'use strict'\n\nvar fromCharCode = String.fromCharCode\n\nmodule.exports = fromCharCode\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = own\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar basics = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\nmodule.exports = basics\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar raws = ['pre', 'script', 'style', 'textarea']\n\nmodule.exports = raws\n","'use strict'\n\nvar splice = [].splice\n\nmodule.exports = splice\n","'use strict'\n\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nvar unicodePunctuation = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar text$1 = require('./initialize/text.js')\nvar attention = require('./tokenize/attention.js')\nvar autolink = require('./tokenize/autolink.js')\nvar blockQuote = require('./tokenize/block-quote.js')\nvar characterEscape = require('./tokenize/character-escape.js')\nvar characterReference = require('./tokenize/character-reference.js')\nvar codeFenced = require('./tokenize/code-fenced.js')\nvar codeIndented = require('./tokenize/code-indented.js')\nvar codeText = require('./tokenize/code-text.js')\nvar definition = require('./tokenize/definition.js')\nvar hardBreakEscape = require('./tokenize/hard-break-escape.js')\nvar headingAtx = require('./tokenize/heading-atx.js')\nvar htmlFlow = require('./tokenize/html-flow.js')\nvar htmlText = require('./tokenize/html-text.js')\nvar labelEnd = require('./tokenize/label-end.js')\nvar labelStartImage = require('./tokenize/label-start-image.js')\nvar labelStartLink = require('./tokenize/label-start-link.js')\nvar lineEnding = require('./tokenize/line-ending.js')\nvar list = require('./tokenize/list.js')\nvar setextUnderline = require('./tokenize/setext-underline.js')\nvar thematicBreak = require('./tokenize/thematic-break.js')\n\nvar document = {\n  42: list,\n  // Asterisk\n  43: list,\n  // Plus sign\n  45: list,\n  // Dash\n  48: list,\n  // 0\n  49: list,\n  // 1\n  50: list,\n  // 2\n  51: list,\n  // 3\n  52: list,\n  // 4\n  53: list,\n  // 5\n  54: list,\n  // 6\n  55: list,\n  // 7\n  56: list,\n  // 8\n  57: list,\n  // 9\n  62: blockQuote // Greater than\n}\nvar contentInitial = {\n  91: definition // Left square bracket\n}\nvar flowInitial = {\n  '-2': codeIndented,\n  // Horizontal tab\n  '-1': codeIndented,\n  // Virtual space\n  32: codeIndented // Space\n}\nvar flow = {\n  35: headingAtx,\n  // Number sign\n  42: thematicBreak,\n  // Asterisk\n  45: [setextUnderline, thematicBreak],\n  // Dash\n  60: htmlFlow,\n  // Less than\n  61: setextUnderline,\n  // Equals to\n  95: thematicBreak,\n  // Underscore\n  96: codeFenced,\n  // Grave accent\n  126: codeFenced // Tilde\n}\nvar string = {\n  38: characterReference,\n  // Ampersand\n  92: characterEscape // Backslash\n}\nvar text = {\n  '-5': lineEnding,\n  // Carriage return\n  '-4': lineEnding,\n  // Line feed\n  '-3': lineEnding,\n  // Carriage return + line feed\n  33: labelStartImage,\n  // Exclamation mark\n  38: characterReference,\n  // Ampersand\n  42: attention,\n  // Asterisk\n  60: [autolink, htmlText],\n  // Less than\n  91: labelStartLink,\n  // Left square bracket\n  92: [hardBreakEscape, characterEscape],\n  // Backslash\n  93: labelEnd,\n  // Right square bracket\n  95: attention,\n  // Underscore\n  96: codeText // Grave accent\n}\nvar insideSpan = {\n  null: [attention, text$1.resolver]\n}\nvar disable = {\n  null: []\n}\n\nexports.contentInitial = contentInitial\nexports.disable = disable\nexports.document = document\nexports.flow = flow\nexports.flowInitial = flowInitial\nexports.insideSpan = insideSpan\nexports.string = string\nexports.text = text\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\n\nvar tokenize = initializeContent\n\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  var previous\n  return contentStart\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeDocument\nvar containerConstruct = {\n  tokenize: tokenizeContainer\n}\nvar lazyFlowConstruct = {\n  tokenize: tokenizeLazyFlow\n}\n\nfunction initializeDocument(effects) {\n  var self = this\n  var stack = []\n  var continued = 0\n  var inspectConstruct = {\n    tokenize: tokenizeInspect,\n    partial: true\n  }\n  var inspectResult\n  var childFlow\n  var childToken\n  return start\n\n  function start(code) {\n    if (continued < stack.length) {\n      self.containerState = stack[continued][1]\n      return effects.attempt(\n        stack[continued][0].continuation,\n        documentContinue,\n        documentContinued\n      )(code)\n    }\n\n    return documentContinued(code)\n  }\n\n  function documentContinue(code) {\n    continued++\n    return start(code)\n  }\n\n  function documentContinued(code) {\n    // If we’re in a concrete construct (such as when expecting another line of\n    // HTML, or we resulted in lazy content), we can immediately start flow.\n    if (inspectResult && inspectResult.flowContinue) {\n      return flowStart(code)\n    }\n\n    self.interrupt =\n      childFlow &&\n      childFlow.currentConstruct &&\n      childFlow.currentConstruct.interruptible\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  function containerContinue(code) {\n    stack.push([self.currentConstruct, self.containerState])\n    self.containerState = undefined\n    return documentContinued(code)\n  }\n\n  function flowStart(code) {\n    if (code === null) {\n      exitContainers(0, true)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  function flowContinue(code) {\n    if (code === null) {\n      continueFlow(effects.exit('chunkFlow'))\n      return flowStart(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      continueFlow(effects.exit('chunkFlow'))\n      return effects.check(inspectConstruct, documentAfterPeek)\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  function documentAfterPeek(code) {\n    exitContainers(\n      inspectResult.continued,\n      inspectResult && inspectResult.flowEnd\n    )\n    continued = 0\n    return start(code)\n  }\n\n  function continueFlow(token) {\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.lazy = inspectResult && inspectResult.lazy\n    childFlow.defineSkip(token.start)\n    childFlow.write(self.sliceStream(token))\n  }\n\n  function exitContainers(size, end) {\n    var index = stack.length // Close the flow.\n\n    if (childFlow && end) {\n      childFlow.write([null])\n      childToken = childFlow = undefined\n    } // Exit open containers.\n\n    while (index-- > size) {\n      self.containerState = stack[index][1]\n      stack[index][0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function tokenizeInspect(effects, ok) {\n    var subcontinued = 0\n    inspectResult = {}\n    return inspectStart\n\n    function inspectStart(code) {\n      if (subcontinued < stack.length) {\n        self.containerState = stack[subcontinued][1]\n        return effects.attempt(\n          stack[subcontinued][0].continuation,\n          inspectContinue,\n          inspectLess\n        )(code)\n      } // If we’re continued but in a concrete flow, we can’t have more\n      // containers.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        inspectResult.flowContinue = true\n        return inspectDone(code)\n      }\n\n      self.interrupt =\n        childFlow.currentConstruct && childFlow.currentConstruct.interruptible\n      self.containerState = {}\n      return effects.attempt(\n        containerConstruct,\n        inspectFlowEnd,\n        inspectDone\n      )(code)\n    }\n\n    function inspectContinue(code) {\n      subcontinued++\n      return self.containerState._closeFlow\n        ? inspectFlowEnd(code)\n        : inspectStart(code)\n    }\n\n    function inspectLess(code) {\n      if (childFlow.currentConstruct && childFlow.currentConstruct.lazy) {\n        // Maybe another container?\n        self.containerState = {}\n        return effects.attempt(\n          containerConstruct,\n          inspectFlowEnd, // Maybe flow, or a blank line?\n          effects.attempt(\n            lazyFlowConstruct,\n            inspectFlowEnd,\n            effects.check(partialBlankLine, inspectFlowEnd, inspectLazy)\n          )\n        )(code)\n      } // Otherwise we’re interrupting.\n\n      return inspectFlowEnd(code)\n    }\n\n    function inspectLazy(code) {\n      // Act as if all containers are continued.\n      subcontinued = stack.length\n      inspectResult.lazy = true\n      inspectResult.flowContinue = true\n      return inspectDone(code)\n    } // We’re done with flow if we have more containers, or an interruption.\n\n    function inspectFlowEnd(code) {\n      inspectResult.flowEnd = true\n      return inspectDone(code)\n    }\n\n    function inspectDone(code) {\n      inspectResult.continued = subcontinued\n      self.interrupt = self.containerState = undefined\n      return ok(code)\n    }\n  }\n}\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction tokenizeLazyFlow(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.lazy(this.parser.constructs.flow, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar content = require('../tokenize/content.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar assign = require('../constant/assign.js')\nvar shallow = require('../util/shallow.js')\n\nvar text = initializeFactory('text')\nvar string = initializeFactory('string')\nvar resolver = {\n  resolveAll: createResolver()\n}\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  function initializeText(effects) {\n    var self = this\n    var constructs = this.parser.constructs[field]\n    var text = effects.attempt(constructs, start, notText)\n    return start\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n\n    function atBreak(code) {\n      var list = constructs[code]\n      var index = -1\n\n      if (code === null) {\n        return true\n      }\n\n      if (list) {\n        while (++index < list.length) {\n          if (\n            !list[index].previous ||\n            list[index].previous.call(self, self.previous)\n          ) {\n            return true\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  function resolveAllText(events, context) {\n    var index = -1\n    var enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n} // A rather ugly set of instructions which again looks at chunks in the input\n// stream.\n// The reason to do this here is that it is *much* faster to parse in reverse.\n// And that we can’t hook into `null` to split the line suffix before an EOF.\n// To do: figure out if we can make this into a clean utility, or even in core.\n// As it will be useful for GFMs literal autolink extension (and maybe even\n// tables?)\n\nfunction resolveAllLineSuffixes(events, context) {\n  var eventIndex = -1\n  var chunks\n  var data\n  var chunk\n  var index\n  var bufferIndex\n  var size\n  var tabs\n  var token\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      data = events[eventIndex - 1][1]\n      chunks = context.sliceStream(data)\n      index = chunks.length\n      bufferIndex = -1\n      size = 0\n      tabs = undefined\n\n      while (index--) {\n        chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1);\n        else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: shallow(data.end)\n        }\n        data.end = shallow(token.start)\n\n        if (data.start.offset === data.end.offset) {\n          assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n\nexports.resolver = resolver\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar content = require('./initialize/content.js')\nvar document = require('./initialize/document.js')\nvar flow = require('./initialize/flow.js')\nvar text = require('./initialize/text.js')\nvar combineExtensions = require('./util/combine-extensions.js')\nvar createTokenizer = require('./util/create-tokenizer.js')\nvar miniflat = require('./util/miniflat.js')\nvar constructs = require('./constructs.js')\n\nfunction parse(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  }\n  return parser\n\n  function create(initializer) {\n    return creator\n\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nvar subtokenize = require('./util/subtokenize.js')\n\nfunction postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n\nmodule.exports = postprocess\n","'use strict'\n\nvar search = /[\\0\\t\\n\\r]/g\n\nfunction preprocess() {\n  var start = true\n  var column = 1\n  var buffer = ''\n  var atCarriageReturn\n  return preprocessor\n\n  function preprocessor(value, encoding, end) {\n    var chunks = []\n    var match\n    var next\n    var startPosition\n    var endPosition\n    var code\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition = match ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        if (code === 0) {\n          chunks.push(65533)\n          column++\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4\n          chunks.push(-2)\n\n          while (column++ < next) chunks.push(-1)\n        } else if (code === 10) {\n          chunks.push(-4)\n          column = 1\n        } // Must be carriage return.\n        else {\n          atCarriageReturn = true\n          column = 1\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n\nmodule.exports = preprocess\n","'use strict'\n\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar classifyCharacter = require('../util/classify-character.js')\nvar movePoint = require('../util/move-point.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\n\nvar attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\nfunction resolveAllAttention(events, context) {\n  var index = -1\n  var open\n  var group\n  var text\n  var openingSequence\n  var closingSequence\n  var use\n  var nextEvents\n  var offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: movePoint(shallow(events[open][1].end), -use),\n            end: shallow(events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: shallow(events[index][1].start),\n            end: movePoint(shallow(events[index][1].start), use)\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: shallow(events[open][1].end),\n            end: shallow(events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: shallow(openingSequence.start),\n            end: shallow(closingSequence.end)\n          }\n          events[open][1].end = shallow(openingSequence.start)\n          events[index][1].start = shallow(closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = chunkedPush(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeAttention(effects, ok) {\n  var before = classifyCharacter(this.previous)\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    var token\n    var after\n    var open\n    var close\n\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    token = effects.exit('attentionSequence')\n    after = classifyCharacter(code)\n    open = !after || (after === 2 && before)\n    close = !before || (before === 2 && after)\n    token._open = marker === 42 ? open : open && (before || !close)\n    token._close = marker === 42 ? close : close && (after || !open)\n    return ok(code)\n  }\n}\n\nmodule.exports = attention\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiAtext = require('../character/ascii-atext.js')\nvar asciiControl = require('../character/ascii-control.js')\n\nvar autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 1\n  return start\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n\nmodule.exports = autolink\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit: exit\n}\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    if (code === 62) {\n      if (!self.containerState.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        self.containerState.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n\nmodule.exports = blockQuote\n","'use strict'\n\nvar asciiPunctuation = require('../character/ascii-punctuation.js')\n\nvar characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterEscape\n","'use strict'\n\nvar decodeEntity = require('parse-entities/decode-entity.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar asciiHexDigit = require('../character/ascii-hex-digit.js')\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {default: e}\n}\n\nvar decodeEntity__default = /*#__PURE__*/ _interopDefaultLegacy(decodeEntity)\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity__default['default'](self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterReference\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  var self = this\n  var closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  var initialPrefix = prefixSize(this.events, 'linePrefix')\n  var sizeOpen = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : content(code)\n  }\n\n  function content(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(\n        closingFenceConstruct,\n        after,\n        initialPrefix\n          ? factorySpace(effects, content, 'linePrefix', initialPrefix + 1)\n          : content\n      )\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return content(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    var size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\nmodule.exports = codeFenced\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n}\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok)\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n\nmodule.exports = codeIndented\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous: previous\n}\n\nfunction resolveCodeText(events) {\n  var tailExitIndex = events.length - 4\n  var headEnterIndex = 3\n  var index\n  var enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[tailExitIndex][1].type = events[headEnterIndex][1].type =\n          'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  var sizeOpen = 0\n  var size\n  var token\n  return start\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n\nmodule.exports = codeText\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar subtokenize = require('../util/subtokenize.js')\nvar factorySpace = require('./factory-space.js')\n\n// No name because it must not be turned off.\nvar content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent,\n  interruptible: true,\n  lazy: true\n}\nvar continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n} // Content is transparent: it’s parsed right now. That way, definitions are also\n// parsed right now: before text in paragraphs (specifically, media) are parsed.\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\nfunction tokenizeContent(effects, ok) {\n  var previous\n  return start\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous = previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous: previous\n    })\n    return data\n  }\n}\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  var self = this\n  return startLookahead\n\n  function startLookahead(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1 ||\n      prefixSize(self.events, 'linePrefix') < 4\n    ) {\n      return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = content\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factorySpace = require('./factory-space.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\nvar factoryTitle = require('./factory-title.js')\n\nvar definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\nvar titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this\n  var identifier\n  return start\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = definition\n","'use strict'\n\nvar asciiControl = require('../character/ascii-control.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\n// eslint-disable-next-line max-params\nfunction destinationFactory(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  var limit = max || Infinity\n  var balance = 0\n  return start\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (asciiControl(code) || code === 41) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n\nmodule.exports = destinationFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\n\n// eslint-disable-next-line max-params\nfunction labelFactory(effects, ok, nok, type, markerType, stringType) {\n  var self = this\n  var size = 0\n  var data\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* c8 ignore next */\n      (code === 94 &&\n        /* c8 ignore next */\n        !size &&\n        /* c8 ignore next */\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n\nmodule.exports = labelFactory\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction titleFactory(effects, ok, nok, type, markerType, stringType) {\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n\nmodule.exports = titleFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction whitespaceFactory(effects, ok) {\n  var seen\n  return start\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = whitespaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = hardBreakEscape\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar factorySpace = require('./factory-space.js')\n\nvar headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2\n  var contentStart = 3\n  var content\n  var text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var self = this\n  var size = 0\n  return start\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n\nmodule.exports = headingAtx\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar fromCharCode = require('../constant/from-char-code.js')\nvar htmlBlockNames = require('../constant/html-block-names.js')\nvar htmlRawNames = require('../constant/html-raw-names.js')\nvar partialBlankLine = require('./partial-blank-line.js')\n\nvar htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\nvar nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n\nfunction resolveToHtmlFlow(events) {\n  var index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  var self = this\n  var kind\n  var startTag\n  var buffer\n  var index\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.indexOf(buffer.toLowerCase()) > -1\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.indexOf(buffer.toLowerCase()) > -1) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting.\n\n      return self.interrupt\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = undefined\n    return completeAttributeValueUnquoted(code)\n  }\n\n  function completeAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return htmlContinueStart\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.indexOf(buffer.toLowerCase()) > -1) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(partialBlankLine, ok, nok)\n  }\n}\n\nmodule.exports = htmlFlow\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this\n  var marker\n  var buffer\n  var index\n  var returnState\n  return start\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = htmlText\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factoryTitle = require('./factory-title.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\n\nvar labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\nvar resourceConstruct = {\n  tokenize: tokenizeResource\n}\nvar fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\nvar collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n\nfunction resolveAllLabelEnd(events) {\n  var index = -1\n  var token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      !token._used &&\n      (token.type === 'labelImage' ||\n        token.type === 'labelLink' ||\n        token.type === 'labelEnd')\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length\n  var offset = 0\n  var group\n  var label\n  var text\n  var token\n  var open\n  var close\n  var media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: shallow(events[open][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n  label = {\n    type: 'label',\n    start: shallow(events[open][1].start),\n    end: shallow(events[close][1].end)\n  }\n  text = {\n    type: 'labelText',\n    start: shallow(events[open + offset + 2][1].end),\n    end: shallow(events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = chunkedPush(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = chunkedPush(media, [['enter', text, context]]) // Between.\n\n  media = chunkedPush(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = chunkedPush(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = chunkedPush(media, events.slice(close + 1)) // Media close.\n\n  media = chunkedPush(media, [['exit', group, context]])\n  chunkedSplice(events, open, events.length, media)\n  return events\n}\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var labelStart\n  var defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined =\n      self.parser.defined.indexOf(\n        normalizeIdentifier(\n          self.sliceSerialize({\n            start: labelStart.end,\n            end: self.now()\n          })\n        )\n      ) > -1\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  function afterLabel(code) {\n    return self.parser.defined.indexOf(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    ) < 0\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = labelEnd\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartImage\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartLink\n","'use strict'\n\nvar factorySpace = require('./factory-space.js')\n\nvar lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n\nmodule.exports = lineEnding\n","'use strict'\n\nvar asciiDigit = require('../character/ascii-digit.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar sizeChunks = require('../util/size-chunks.js')\nvar factorySpace = require('./factory-space.js')\nvar partialBlankLine = require('./partial-blank-line.js')\nvar thematicBreak = require('./thematic-break.js')\n\nvar list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\nvar listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\nvar indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\nfunction tokenizeListStart(effects, ok, nok) {\n  var self = this\n  var initialSize = prefixSize(self.events, 'linePrefix')\n  var size = 0\n  return start\n\n  function start(code) {\n    var kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      partialBlankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize + sizeChunks(self.sliceStream(effects.exit('listItemPrefix')))\n    return ok(code)\n  }\n}\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  var self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(partialBlankLine, onBlank, notBlank)\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'listItemIndent') ===\n      self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4 + 1\n  )\n\n  function afterPrefix(code) {\n    return markdownSpace(code) ||\n      !prefixSize(self.events, 'listItemPrefixWhitespace')\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = list\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar shallow = require('../util/shallow.js')\nvar factorySpace = require('./factory-space.js')\n\nvar setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\nfunction resolveToSetextUnderline(events, context) {\n  var index = events.length\n  var content\n  var text\n  var definition\n  var heading // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  heading = {\n    type: 'setextHeading',\n    start: shallow(events[text][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = shallow(events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var marker\n  var paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!self.lazy && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = setextUnderline\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n\nmodule.exports = thematicBreak\n","'use strict'\n\nvar chunkedSplice = require('./chunked-splice.js')\n\nfunction chunkedPush(list, items) {\n  if (list.length) {\n    chunkedSplice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n\nmodule.exports = chunkedPush\n","'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar unicodePunctuation = require('../character/unicode-punctuation.js')\nvar unicodeWhitespace = require('../character/unicode-whitespace.js')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\nmodule.exports = classifyCharacter\n","'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedPush = require('./chunked-push.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\nvar resolveAll = require('./resolve-all.js')\nvar serializeChunks = require('./serialize-chunks.js')\nvar shallow = require('./shallow.js')\nvar sliceChunks = require('./slice-chunks.js')\n\n// Create a tokenizer.\n// Tokenizers deal with one type of data (e.g., containers, flow, text).\n// The parser is the object dealing with it all.\n// `initialize` works like other constructs, except that only its `tokenize`\n// function is used, in which case it doesn’t receive an `ok` or `nok`.\n// `from` can be given to set the point before the first character, although\n// when further lines are indented, they must be set with `defineSkip`.\nfunction createTokenizer(parser, initialize, from) {\n  var point = from\n    ? shallow(from)\n    : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }\n  var columnStart = {}\n  var resolveAllConstructs = []\n  var chunks = []\n  var stack = []\n\n  var effects = {\n    consume: consume,\n    enter: enter,\n    exit: exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    }),\n    lazy: constructFactory(onsuccessfulcheck, {\n      lazy: true\n    })\n  } // State and tools for resolving and serializing.\n\n  var context = {\n    previous: null,\n    events: [],\n    parser: parser,\n    sliceStream: sliceStream,\n    sliceSerialize: sliceSerialize,\n    now: now,\n    defineSkip: skip,\n    write: write\n  } // The state function.\n\n  var state = initialize.tokenize.call(context, effects) // Track which character we expect to be consumed, to catch bugs.\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  } // Store where we are in the input stream.\n\n  point._index = 0\n  point._bufferIndex = -1\n  return context\n\n  function write(slice) {\n    chunks = chunkedPush(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  function sliceSerialize(token) {\n    return serializeChunks(sliceStream(token))\n  }\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  function now() {\n    return shallow(point)\n  }\n\n  function skip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n  // Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n  // `consume`).\n  // Here is where we walk through the chunks, which either include strings of\n  // several characters, or numerical character codes.\n  // The reason to do this in a loop instead of a call is so the stack can\n  // drain.\n\n  function main() {\n    var chunkIndex\n    var chunk\n\n    while (point._index < chunks.length) {\n      chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  } // Deal with one code.\n\n  function go(code) {\n    state = state(code)\n  } // Move a character forward.\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n  } // Start a token.\n\n  function enter(type, fields) {\n    var token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  } // Stop a token.\n\n  function exit(type) {\n    var token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  } // Use results.\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  } // Discard results.\n\n  function onsuccessfulcheck(construct, info) {\n    info.restore()\n  } // Factory to attempt/check/interrupt.\n\n  function constructFactory(onreturn, fields) {\n    return hook // Handle either an object mapping codes to constructs, a list of\n    // constructs, or a single construct.\n\n    function hook(constructs, returnState, bogusState) {\n      var listOfConstructs\n      var constructIndex\n      var currentConstruct\n      var info\n      return constructs.tokenize || 'length' in constructs\n        ? handleListOfConstructs(miniflat(constructs))\n        : handleMapOfConstructs\n\n      function handleMapOfConstructs(code) {\n        if (code in constructs || null in constructs) {\n          return handleListOfConstructs(\n            constructs.null\n              ? /* c8 ignore next */\n                miniflat(constructs[code]).concat(miniflat(constructs.null))\n              : constructs[code]\n          )(code)\n        }\n\n        return bogusState(code)\n      }\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        return handleConstruct(list[constructIndex])\n      }\n\n      function handleConstruct(construct) {\n        return start\n\n        function start(code) {\n          // To do: not nede to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.indexOf(construct.name) > -1\n          ) {\n            return nok()\n          }\n\n          return construct.tokenize.call(\n            fields ? assign({}, context, fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      function ok(code) {\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      function nok(code) {\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && resolveAllConstructs.indexOf(construct) < 0) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      chunkedSplice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  function store() {\n    var startPoint = now()\n    var startPrevious = context.previous\n    var startCurrentConstruct = context.currentConstruct\n    var startEventsIndex = context.events.length\n    var startStack = Array.from(stack)\n    return {\n      restore: restore,\n      from: startEventsIndex\n    }\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\nmodule.exports = createTokenizer\n","'use strict'\n\nfunction miniflat(value) {\n  return value === null || value === undefined\n    ? []\n    : 'length' in value\n    ? value\n    : [value]\n}\n\nmodule.exports = miniflat\n","'use strict'\n\n// chunks (replacement characters, tabs, or line endings).\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n  return point\n}\n\nmodule.exports = movePoint\n","'use strict'\n\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\nmodule.exports = normalizeIdentifier\n","'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction regexCheck(regex) {\n  return check\n\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n\nmodule.exports = regexCheck\n","'use strict'\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\nmodule.exports = resolveAll\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n\nmodule.exports = safeFromInt\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n\nmodule.exports = shallow\n","'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n","'use strict'\n\nfunction sliceChunks(chunks, token) {\n  var startIndex = token.start._index\n  var startBufferIndex = token.start._bufferIndex\n  var endIndex = token.end._index\n  var endBufferIndex = token.end._bufferIndex\n  var view\n\n  if (startIndex === endIndex) {\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\nmodule.exports = sliceChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar shallow = require('./shallow.js')\n\nfunction subtokenize(events) {\n  var jumps = {}\n  var index = -1\n  var event\n  var lineIndex\n  var otherIndex\n  var otherEvent\n  var parameters\n  var subevents\n  var more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1].isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container || event[1]._movePreviousLineEndings) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = shallow(events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        chunkedSplice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\nfunction subcontent(events, eventIndex) {\n  var token = events[eventIndex][1]\n  var context = events[eventIndex][2]\n  var startPosition = eventIndex - 1\n  var startPositions = []\n  var tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  var childEvents = tokenizer.events\n  var jumps = []\n  var gaps = {}\n  var stream\n  var previous\n  var index\n  var entered\n  var end\n  var adjust // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (token) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== token) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!token._tokenizer) {\n      stream = context.sliceStream(token)\n\n      if (!token.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(token.start)\n      }\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = token\n    token = token.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  token = previous\n  index = childEvents.length\n\n  while (index--) {\n    // Make sure we’ve at least seen something (final eol is part of the last\n    // token).\n    if (childEvents[index][0] === 'enter') {\n      entered = true\n    } else if (\n      // Find a void token that includes a break.\n      entered &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      add(childEvents.slice(index + 1, end))\n      // Help GC.\n      token._tokenizer = token.next = undefined\n      token = token.previous\n      end = index + 1\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = token._tokenizer = token.next = undefined // Do head:\n\n  add(childEvents.slice(0, end))\n  index = -1\n  adjust = 0\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n\n  function add(slice) {\n    var start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    chunkedSplice(events, start, 2, slice)\n  }\n}\n\nmodule.exports = subtokenize\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nmodule.exports = parse\n\nvar fromMarkdown = require('mdast-util-from-markdown')\n\nfunction parse(options) {\n  var self = this\n\n  this.Parser = parse\n\n  function parse(doc) {\n    return fromMarkdown(\n      doc,\n      Object.assign({}, self.data('settings'), options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: self.data('micromarkExtensions') || [],\n        mdastExtensions: self.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n}\n","'use strict'\n\nvar wrap = require('./wrap.js')\n\nmodule.exports = trough\n\ntrough.wrap = wrap\n\nvar slice = [].slice\n\n// Create new middleware.\nfunction trough() {\n  var fns = []\n  var middleware = {}\n\n  middleware.run = run\n  middleware.use = use\n\n  return middleware\n\n  // Run `fns`.  Last argument must be a completion handler.\n  function run() {\n    var index = -1\n    var input = slice.call(arguments, 0, -1)\n    var done = arguments[arguments.length - 1]\n\n    if (typeof done !== 'function') {\n      throw new Error('Expected function as last argument, not ' + done)\n    }\n\n    next.apply(null, [null].concat(input))\n\n    // Run the next `fn`, if any.\n    function next(err) {\n      var fn = fns[++index]\n      var params = slice.call(arguments, 0)\n      var values = params.slice(1)\n      var length = input.length\n      var pos = -1\n\n      if (err) {\n        done(err)\n        return\n      }\n\n      // Copy non-nully input into values.\n      while (++pos < length) {\n        if (values[pos] === null || values[pos] === undefined) {\n          values[pos] = input[pos]\n        }\n      }\n\n      input = values\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next).apply(null, input)\n      } else {\n        done.apply(null, [null].concat(input))\n      }\n    }\n  }\n\n  // Add `fn` to the list.\n  function use(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error('Expected `fn` to be a function, not ' + fn)\n    }\n\n    fns.push(fn)\n\n    return middleware\n  }\n}\n","'use strict'\n\nvar slice = [].slice\n\nmodule.exports = wrap\n\n// Wrap `fn`.\n// Can be sync or async; return a promise, receive a completion handler, return\n// new values and errors.\nfunction wrap(fn, callback) {\n  var invoked\n\n  return wrapped\n\n  function wrapped() {\n    var params = slice.call(arguments, 0)\n    var callback = fn.length > params.length\n    var result\n\n    if (callback) {\n      params.push(done)\n    }\n\n    try {\n      result = fn.apply(null, params)\n    } catch (error) {\n      // Well, this is quite the pickle.\n      // `fn` received a callback and invoked it (thus continuing the pipeline),\n      // but later also threw an error.\n      // We’re not about to restart the pipeline again, so the only thing left\n      // to do is to throw the thing instead.\n      if (callback && invoked) {\n        throw error\n      }\n\n      return done(error)\n    }\n\n    if (!callback) {\n      if (result && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  // Invoke `next`, only once.\n  function done() {\n    if (!invoked) {\n      invoked = true\n\n      callback.apply(null, arguments)\n    }\n  }\n\n  // Invoke `done` with one value.\n  // Tracks if an error is passed, too.\n  function then(value) {\n    done(null, value)\n  }\n}\n","'use strict'\n\nvar bail = require('bail')\nvar buffer = require('is-buffer')\nvar extend = require('extend')\nvar plain = require('is-plain-obj')\nvar trough = require('trough')\nvar vfile = require('vfile')\n\n// Expose a frozen processor.\nmodule.exports = unified().freeze()\n\nvar slice = [].slice\nvar own = {}.hasOwnProperty\n\n// Process pipeline.\nvar pipeline = trough()\n  .use(pipelineParse)\n  .use(pipelineRun)\n  .use(pipelineStringify)\n\nfunction pipelineParse(p, ctx) {\n  ctx.tree = p.parse(ctx.file)\n}\n\nfunction pipelineRun(p, ctx, next) {\n  p.run(ctx.tree, ctx.file, done)\n\n  function done(error, tree, file) {\n    if (error) {\n      next(error)\n    } else {\n      ctx.tree = tree\n      ctx.file = file\n      next()\n    }\n  }\n}\n\nfunction pipelineStringify(p, ctx) {\n  var result = p.stringify(ctx.tree, ctx.file)\n\n  if (result === undefined || result === null) {\n    // Empty.\n  } else if (typeof result === 'string' || buffer(result)) {\n    if ('value' in ctx.file) {\n      ctx.file.value = result\n    }\n\n    ctx.file.contents = result\n  } else {\n    ctx.file.result = result\n  }\n}\n\n// Function to create the first processor.\nfunction unified() {\n  var attachers = []\n  var transformers = trough()\n  var namespace = {}\n  var freezeIndex = -1\n  var frozen\n\n  // Data management.\n  processor.data = data\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  processor.run = run\n  processor.runSync = runSync\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  function processor() {\n    var destination = unified()\n    var index = -1\n\n    while (++index < attachers.length) {\n      destination.use.apply(null, attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  // Freeze: used to signal a processor that has finished configuration.\n  //\n  // For example, take unified itself: it’s frozen.\n  // Plugins should not be added to it.\n  // Rather, it should be extended, by invoking it, before modifying it.\n  //\n  // In essence, always invoke this when exporting a processor.\n  function freeze() {\n    var values\n    var transformer\n\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      values = attachers[freezeIndex]\n\n      if (values[1] === false) {\n        continue\n      }\n\n      if (values[1] === true) {\n        values[1] = undefined\n      }\n\n      transformer = values[0].apply(processor, values.slice(1))\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Infinity\n\n    return processor\n  }\n\n  // Data management.\n  // Getter / setter for processor-specific informtion.\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  // Plugin management.\n  //\n  // Pass it:\n  // *   an attacher and options,\n  // *   a preset,\n  // *   a list of presets, attachers, and arguments (list of attachers and\n  //     options).\n  function use(value) {\n    var settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin.apply(null, arguments)\n    } else if (typeof value === 'object') {\n      if ('length' in value) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new Error('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = extend(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = extend(settings || {}, result.settings)\n      }\n    }\n\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if ('length' in value) {\n          addPlugin.apply(null, value)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new Error('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    function addList(plugins) {\n      var index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (typeof plugins === 'object' && 'length' in plugins) {\n        while (++index < plugins.length) {\n          add(plugins[index])\n        }\n      } else {\n        throw new Error('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    function addPlugin(plugin, value) {\n      var entry = find(plugin)\n\n      if (entry) {\n        if (plain(entry[1]) && plain(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        attachers.push(slice.call(arguments))\n      }\n    }\n  }\n\n  function find(plugin) {\n    var index = -1\n\n    while (++index < attachers.length) {\n      if (attachers[index][0] === plugin) {\n        return attachers[index]\n      }\n    }\n  }\n\n  // Parse a file (in string or vfile representation) into a unist node using\n  // the `Parser` on the processor.\n  function parse(doc) {\n    var file = vfile(doc)\n    var Parser\n\n    freeze()\n    Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      return new Parser(String(file), file).parse()\n    }\n\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  // Run transforms on a unist node representation of a file (in string or\n  // vfile representation), async.\n  function run(node, file, cb) {\n    assertNode(node)\n    freeze()\n\n    if (!cb && typeof file === 'function') {\n      cb = file\n      file = null\n    }\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      transformers.run(node, vfile(file), done)\n\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          cb(null, tree, file)\n        }\n      }\n    }\n  }\n\n  // Run transforms on a unist node representation of a file (in string or\n  // vfile representation), sync.\n  function runSync(node, file) {\n    var result\n    var complete\n\n    run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    return result\n\n    function done(error, tree) {\n      complete = true\n      result = tree\n      bail(error)\n    }\n  }\n\n  // Stringify a unist node representation of a file (in string or vfile\n  // representation) into a string using the `Compiler` on the processor.\n  function stringify(node, doc) {\n    var file = vfile(doc)\n    var Compiler\n\n    freeze()\n    Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      return new Compiler(node, file).compile()\n    }\n\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  // Parse a file (in string or vfile representation) into a unist node using\n  // the `Parser` on the processor, then run transforms on that node, and\n  // compile the resulting node using the `Compiler` on the processor, and\n  // store that result on the vfile.\n  function process(doc, cb) {\n    freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      var file = vfile(doc)\n\n      pipeline.run(processor, {file: file}, done)\n\n      function done(error) {\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          cb(null, file)\n        }\n      }\n    }\n  }\n\n  // Process the given document (in string or vfile representation), sync.\n  function processSync(doc) {\n    var file\n    var complete\n\n    freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n    file = vfile(doc)\n\n    process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n// Check if `value` is a constructor.\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n// Check if `value` is an object with keys.\nfunction keys(value) {\n  var key\n  for (key in value) {\n    return true\n  }\n\n  return false\n}\n\n// Assert a parser is available.\nfunction assertParser(name, Parser) {\n  if (typeof Parser !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n// Assert a compiler is available.\nfunction assertCompiler(name, Compiler) {\n  if (typeof Compiler !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n// Assert the processor is not frozen.\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot invoke `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n// Assert `node` is a unist node.\nfunction assertNode(node) {\n  if (!node || typeof node.type !== 'string') {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n}\n\n// Assert that `complete` is `true`.\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = stringify\n\nfunction stringify(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if (own.call(value, 'position') || own.call(value, 'type')) {\n    return position(value.position)\n  }\n\n  // Position.\n  if (own.call(value, 'start') || own.call(value, 'end')) {\n    return position(value)\n  }\n\n  // Point.\n  if (own.call(value, 'line') || own.call(value, 'column')) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\nfunction point(point) {\n  if (!point || typeof point !== 'object') {\n    point = {}\n  }\n\n  return index(point.line) + ':' + index(point.column)\n}\n\nfunction position(pos) {\n  if (!pos || typeof pos !== 'object') {\n    pos = {}\n  }\n\n  return point(pos.start) + '-' + point(pos.end)\n}\n\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","'use strict'\n\nvar stringify = require('unist-util-stringify-position')\n\nmodule.exports = VMessage\n\n// Inherit from `Error#`.\nfunction VMessagePrototype() {}\nVMessagePrototype.prototype = Error.prototype\nVMessage.prototype = new VMessagePrototype()\n\n// Message properties.\nvar proto = VMessage.prototype\n\nproto.file = ''\nproto.name = ''\nproto.reason = ''\nproto.message = ''\nproto.stack = ''\nproto.fatal = null\nproto.column = null\nproto.line = null\n\n// Construct a new VMessage.\n//\n// Note: We cannot invoke `Error` on the created context, as that adds readonly\n// `line` and `column` attributes on Safari 9, thus throwing and failing the\n// data.\nfunction VMessage(reason, position, origin) {\n  var parts\n  var range\n  var location\n\n  if (typeof position === 'string') {\n    origin = position\n    position = null\n  }\n\n  parts = parseOrigin(origin)\n  range = stringify(position) || '1:1'\n\n  location = {\n    start: {line: null, column: null},\n    end: {line: null, column: null}\n  }\n\n  // Node.\n  if (position && position.position) {\n    position = position.position\n  }\n\n  if (position) {\n    // Position.\n    if (position.start) {\n      location = position\n      position = position.start\n    } else {\n      // Point.\n      location.start = position\n    }\n  }\n\n  if (reason.stack) {\n    this.stack = reason.stack\n    reason = reason.message\n  }\n\n  this.message = reason\n  this.name = range\n  this.reason = reason\n  this.line = position ? position.line : null\n  this.column = position ? position.column : null\n  this.location = location\n  this.source = parts[0]\n  this.ruleId = parts[1]\n}\n\nfunction parseOrigin(origin) {\n  var result = [null, null]\n  var index\n\n  if (typeof origin === 'string') {\n    index = origin.indexOf(':')\n\n    if (index === -1) {\n      result[1] = origin\n    } else {\n      result[0] = origin.slice(0, index)\n      result[1] = origin.slice(index + 1)\n    }\n  }\n\n  return result\n}\n","'use strict'\n\nmodule.exports = require('./lib')\n","'use strict'\n\nvar p = require('./minpath')\nvar proc = require('./minproc')\nvar buffer = require('is-buffer')\n\nmodule.exports = VFile\n\nvar own = {}.hasOwnProperty\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nvar order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nVFile.prototype.toString = toString\n\n// Access full path (`~/index.min.js`).\nObject.defineProperty(VFile.prototype, 'path', {get: getPath, set: setPath})\n\n// Access parent path (`~`).\nObject.defineProperty(VFile.prototype, 'dirname', {\n  get: getDirname,\n  set: setDirname\n})\n\n// Access basename (`index.min.js`).\nObject.defineProperty(VFile.prototype, 'basename', {\n  get: getBasename,\n  set: setBasename\n})\n\n// Access extname (`.js`).\nObject.defineProperty(VFile.prototype, 'extname', {\n  get: getExtname,\n  set: setExtname\n})\n\n// Access stem (`index.min`).\nObject.defineProperty(VFile.prototype, 'stem', {get: getStem, set: setStem})\n\n// Construct a new file.\nfunction VFile(options) {\n  var prop\n  var index\n\n  if (!options) {\n    options = {}\n  } else if (typeof options === 'string' || buffer(options)) {\n    options = {contents: options}\n  } else if ('message' in options && 'messages' in options) {\n    return options\n  }\n\n  if (!(this instanceof VFile)) {\n    return new VFile(options)\n  }\n\n  this.data = {}\n  this.messages = []\n  this.history = []\n  this.cwd = proc.cwd()\n\n  // Set path related properties in the correct order.\n  index = -1\n\n  while (++index < order.length) {\n    prop = order[index]\n\n    if (own.call(options, prop)) {\n      this[prop] = options[prop]\n    }\n  }\n\n  // Set non-path related properties.\n  for (prop in options) {\n    if (order.indexOf(prop) < 0) {\n      this[prop] = options[prop]\n    }\n  }\n}\n\nfunction getPath() {\n  return this.history[this.history.length - 1]\n}\n\nfunction setPath(path) {\n  assertNonEmpty(path, 'path')\n\n  if (this.path !== path) {\n    this.history.push(path)\n  }\n}\n\nfunction getDirname() {\n  return typeof this.path === 'string' ? p.dirname(this.path) : undefined\n}\n\nfunction setDirname(dirname) {\n  assertPath(this.path, 'dirname')\n  this.path = p.join(dirname || '', this.basename)\n}\n\nfunction getBasename() {\n  return typeof this.path === 'string' ? p.basename(this.path) : undefined\n}\n\nfunction setBasename(basename) {\n  assertNonEmpty(basename, 'basename')\n  assertPart(basename, 'basename')\n  this.path = p.join(this.dirname || '', basename)\n}\n\nfunction getExtname() {\n  return typeof this.path === 'string' ? p.extname(this.path) : undefined\n}\n\nfunction setExtname(extname) {\n  assertPart(extname, 'extname')\n  assertPath(this.path, 'extname')\n\n  if (extname) {\n    if (extname.charCodeAt(0) !== 46 /* `.` */) {\n      throw new Error('`extname` must start with `.`')\n    }\n\n    if (extname.indexOf('.', 1) > -1) {\n      throw new Error('`extname` cannot contain multiple dots')\n    }\n  }\n\n  this.path = p.join(this.dirname, this.stem + (extname || ''))\n}\n\nfunction getStem() {\n  return typeof this.path === 'string'\n    ? p.basename(this.path, this.extname)\n    : undefined\n}\n\nfunction setStem(stem) {\n  assertNonEmpty(stem, 'stem')\n  assertPart(stem, 'stem')\n  this.path = p.join(this.dirname || '', stem + (this.extname || ''))\n}\n\n// Get the value of the file.\nfunction toString(encoding) {\n  return (this.contents || '').toString(encoding)\n}\n\n// Assert that `part` is not a path (i.e., does not contain `p.sep`).\nfunction assertPart(part, name) {\n  if (part && part.indexOf(p.sep) > -1) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + p.sep + '`'\n    )\n  }\n}\n\n// Assert that `part` is not empty.\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n// Assert `path` exists.\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","'use strict'\n\nvar VMessage = require('vfile-message')\nvar VFile = require('./core.js')\n\nmodule.exports = VFile\n\nVFile.prototype.message = message\nVFile.prototype.info = info\nVFile.prototype.fail = fail\n\n// Create a message with `reason` at `position`.\n// When an error is passed in as `reason`, copies the stack.\nfunction message(reason, position, origin) {\n  var message = new VMessage(reason, position, origin)\n\n  if (this.path) {\n    message.name = this.path + ':' + message.name\n    message.file = this.path\n  }\n\n  message.fatal = false\n\n  this.messages.push(message)\n\n  return message\n}\n\n// Fail: creates a vmessage, associates it with the file, and throws it.\nfunction fail() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = true\n\n  throw message\n}\n\n// Info: creates a vmessage, associates it with the file, and marks the fatality\n// as null.\nfunction info() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = null\n\n  return message\n}\n","'use strict'\n\n// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexports.basename = basename\nexports.dirname = dirname\nexports.extname = extname\nexports.join = join\nexports.sep = '/'\n\nfunction basename(path, ext) {\n  var start = 0\n  var end = -1\n  var index\n  var firstNonSlashEnd\n  var seenNonSlash\n  var extIndex\n\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  index = path.length\n\n  if (ext === undefined || !ext.length || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  firstNonSlashEnd = -1\n  extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\nfunction dirname(path) {\n  var end\n  var unmatchedSlash\n  var index\n\n  assertPath(path)\n\n  if (!path.length) {\n    return '.'\n  }\n\n  end = -1\n  index = path.length\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\nfunction extname(path) {\n  var startDot = -1\n  var startPart = 0\n  var end = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  var preDotState = 0\n  var unmatchedSlash\n  var code\n  var index\n\n  assertPath(path)\n\n  index = path.length\n\n  while (index--) {\n    code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\nfunction join() {\n  var index = -1\n  var joined\n\n  while (++index < arguments.length) {\n    assertPath(arguments[index])\n\n    if (arguments[index]) {\n      joined =\n        joined === undefined\n          ? arguments[index]\n          : joined + '/' + arguments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  var absolute\n  var value\n\n  assertPath(path)\n\n  absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  value = normalizeString(path, !absolute)\n\n  if (!value.length && !absolute) {\n    value = '.'\n  }\n\n  if (value.length && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n// Resolve `.` and `..` elements in a path with directory names.\nfunction normalizeString(path, allowAboveRoot) {\n  var result = ''\n  var lastSegmentLength = 0\n  var lastSlash = -1\n  var dots = 0\n  var index = -1\n  var code\n  var lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            /* istanbul ignore else - No clue how to cover it. */\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n","'use strict'\n\n// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexports.cwd = cwd\n\nfunction cwd() {\n  return '/'\n}\n","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}\n\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _get.apply(this, arguments);\n}\n\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","var own = {}.hasOwnProperty\n\n/**\n * Check if `node` has a set `name` property.\n *\n * @param {unknown} node\n * @param {string} name\n * @returns {boolean}\n */\nexport function hasProperty(node, name) {\n  /** @type {unknown} */\n  var value =\n    name &&\n    node &&\n    typeof node === 'object' &&\n    // @ts-ignore Looks like a node.\n    node.type === 'element' &&\n    // @ts-ignore Looks like an element.\n    node.properties &&\n    // @ts-ignore Looks like an element.\n    own.call(node.properties, name) &&\n    // @ts-ignore Looks like an element.\n    node.properties[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n","/**\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Parent['children'][number]} Node\n */\n\n/**\n * Rank of a heading: H1 -> 1, H2 -> 2, etc.\n *\n * @param {Node} node\n * @returns {number|null}\n */\nexport function headingRank(node) {\n  var name =\n    (node && node.type === 'element' && node.tagName.toLowerCase()) || ''\n  var code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */ ? code - 48 /* `0` */ : null\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n *\n * @typedef {string} TagName\n * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test\n */\n\n/**\n * @template {Element} T\n * @typedef {null|undefined|T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>} PredicateTest\n */\n\n/**\n * Check if an element passes a test\n *\n * @callback TestFunctionAnything\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if an element passes a certain node test\n *\n * @template {Element} X\n * @callback TestFunctionPredicate\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {element is X}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\n// Check if `node` is an `element` and whether it passes the given test.\nexport const isElement =\n  /**\n   * Check if a node is an element and passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test] When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number} [index] Position of `node` in `parent`\n     * @param {Parent} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * @param {Array.<TagName|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s tag\n * name for said string.\n *\n * @param {TagName} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Utility to return true if this is an element.\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nvar search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @param selector A simple CSS selector.\n *   Can contain a tag-name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param [defaultTagName='div'] Tag name to use if `selector` does not specify one.\n */\nexport const parseSelector =\n  /**\n   * @type {(\n   *  <Selector extends string, DefaultTagName extends string = 'div'>(selector?: Selector, defaultTagName?: DefaultTagName) => Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}\n   * )}\n   */\n  (\n    /**\n     * @param {string} [selector]\n     * @param {string} [defaultTagName='div']\n     * @returns {Element}\n     */\n    function (selector, defaultTagName = 'div') {\n      var value = selector || ''\n      /** @type {Properties} */\n      var props = {}\n      var start = 0\n      /** @type {string} */\n      var subvalue\n      /** @type {string} */\n      var previous\n      /** @type {RegExpMatchArray} */\n      var match\n\n      while (start < value.length) {\n        search.lastIndex = start\n        match = search.exec(value)\n        subvalue = value.slice(start, match ? match.index : value.length)\n\n        if (subvalue) {\n          if (!previous) {\n            defaultTagName = subvalue\n          } else if (previous === '#') {\n            props.id = subvalue\n          } else if (Array.isArray(props.className)) {\n            props.className.push(subvalue)\n          } else {\n            props.className = [subvalue]\n          }\n\n          start += subvalue.length\n        }\n\n        if (match) {\n          previous = match[0]\n          start++\n        }\n      }\n\n      return {\n        type: 'element',\n        tagName: defaultTagName,\n        properties: props,\n        children: []\n      }\n    }\n  )\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {Root['children'][number]} Child\n * @typedef {Child|Root} Node\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {Root|Element} HResult\n * @typedef {string|number} HStyleValue\n * @typedef {Object.<string, HStyleValue>} HStyle\n * @typedef {string|number|boolean|null|undefined} HPrimitiveValue\n * @typedef {Array.<string|number>} HArrayValue\n * @typedef {HPrimitiveValue|HArrayValue} HPropertyValue\n * @typedef {{[property: string]: HPropertyValue|HStyle}} HProperties\n *\n * @typedef {string|number|null|undefined} HPrimitiveChild\n * @typedef {Array.<Node|HPrimitiveChild>} HArrayChild\n * @typedef {Node|HPrimitiveChild|HArrayChild} HChild\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array.<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null|undefined, ...children: HChild[]): Root\n     *   (selector: string, properties?: HProperties, ...children: HChild[]): Element\n     *   (selector: string, ...children: HChild[]): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string|null} [selector]\n       * @param {HProperties|HChild} [properties]\n       * @param {HChild[]} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties|HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle|HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array.<string|number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array.<Child>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * @param {HStyle} value\n * @returns {string}\n */\nfunction style(value) {\n  /** @type {Array.<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * @param {Array.<string>} values\n * @returns {Object.<string, string>}\n */\nfunction createAdjustMap(values) {\n  /** @type {Object.<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child Acceptable child value\n * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.\n *\n * @typedef {import('./jsx-classic').Element} h.JSX.Element\n * @typedef {import('./jsx-classic').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {string[]} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {number[]|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      indent = options.position.indent\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","import { Element, Comment, Literal, ElementContent, RootContent, Properties } from 'hast';\nimport { RehypeAttrsOptions } from './';\n\nexport const getURLParameters = (url: string): Record<string, string | number | boolean> =>\n(url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce(\n  (a: Record<string, string | number>, v: string) => (\n    (a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a\n  ),\n  {},\n);\n\nexport const prevChild = (data: Literal[] = [], index: number): Comment | undefined => {\n  let i = index;\n  while (i > -1) {\n    i--;\n    if (!data[i]) return\n    if ((data[i] && data[i].value && (data[i].value as string).replace(/(\\n|\\s)/g, '') !== '') || data[i].type !== 'text') {\n      if (!/^rehype:/.test(data[i].value as string) || (data[i].type as string) !== 'comment') return;\n      return data[i] as unknown as Comment;\n    }\n  }\n  return;\n}\n\nexport const nextChild = (data: RootContent[] | ElementContent[] = [], index: number, tagName?: string): ElementContent | undefined => {\n  let i = index;\n  while (i < data.length) {\n    i++;\n    if (tagName) {\n      const element = data[i] as Literal & Element;\n      if (element && element.value && (element.value as string).replace(/(\\n|\\s)/g, '') !== '' || data[i] && (data[i].type as string) === 'element') {\n        return element.tagName === tagName ? element : undefined\n      }\n    } else {\n      const element = data[i] as ElementContent & Literal;\n      if (!element || (element.type !== 'text' && (element.type as string) !== 'comment') || (element.type === 'text' && (element.value as string).replace(/(\\n|\\s)/g, '') !== '')) return;\n      if ((element.type as string) === 'comment') {\n        if (!/^rehype:/.test(element.value as string)) return;\n        const nextNode = nextChild(data, i, 'pre')\n        if (nextNode) return;\n        return element;\n      }\n    }\n  }\n  return\n}\n\n/**\n * 获取代码注视的位置\n * @param data 数据\n * @param index 当前数据所在的位置\n * @returns 返回 当前参数数据 Object，`{}`\n */\nexport const getCommentObject = ({ value = '' }: Comment): Properties => {\n  const param = getURLParameters(value.replace(/^rehype:/, ''));\n  Object.keys(param).forEach((keyName: string) => {\n    if (param[keyName] === 'true') {\n      param[keyName] = true;\n    }\n    if (param[keyName] === 'false') {\n      param[keyName] = false;\n    }\n    if (typeof param[keyName] === 'string' && !/^0/.test(param[keyName] as string) && !isNaN(+param[keyName])) {\n      param[keyName] = +param[keyName];\n    }\n  })\n  return param;\n}\n\nexport type DataConfig = {\n  'data-config': Properties\n}\n\nexport const propertiesHandle = (defaultAttrs?: Properties | null, attrs?: Properties, type?: RehypeAttrsOptions['properties']): Properties | DataConfig => {\n  if (type === 'string') {\n    return { ...defaultAttrs, 'data-config': JSON.stringify({ ...attrs, rehyp: true })}\n  } else if (type === 'attr') {\n    return { ...defaultAttrs, ...attrs}\n  }\n  return { ...defaultAttrs, 'data-config': { ...attrs, rehyp: true }}\n}","import { Plugin } from 'unified';\nimport { Root, Element, Comment, Properties, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils';\n\nexport type RehypeAttrsOptions = {\n  /**\n   * ## `data`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs&abc=2-->\n   * ```\n   * \n   * ⇣⇣⇣⇣⇣⇣\n   * \n   * ```html\n   * <p data-config=\"data-config='[object Object]'\">text</p>\n   * ```\n   * \n   * ## `string`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * \n   * ⇣⇣⇣⇣⇣⇣\n   * \n   * ```html\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\n   * ```\n   * \n   * ## attr\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * ⇣⇣⇣⇣⇣⇣\n   * ```html\n   * <p title=\"Rehype Attrs\">text</p>\n   * ```\n   */\n  properties: 'data' | 'string' | 'attr';\n}\n\nconst defaultOptions: RehypeAttrsOptions = {\n  properties: 'data',\n}\n\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options) => {\n  const opts = { ...defaultOptions, ...options }\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0] as Element;\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children as Literal[], index);\n          if (child) {\n            const attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, opts.properties) as Properties\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index)\n        if (child) {\n          const attr = getCommentObject(child as Comment)\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, opts.properties) as Properties\n          }\n        }\n      }\n    });\n  }\n}\n\n\nexport default rehypeAttrs\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast-util-is-element').Test} Test\n *\n * @typedef {'prepend'|'append'|'wrap'|'before'|'after'} Behavior\n *\n * @callback Build\n * @param {Element} node\n * @returns {ElementChild|ElementChild[]}\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior} [behavior='prepend']\n *   How to create links.\n * @property {Behavior} [behaviour]\n *   Please use `behavior` instead\n * @property {Properties} [properties]\n *   Extra properties to set on the link when injecting.\n *   Defaults to `{ariaHidden: true, tabIndex: -1}` when `'prepend'` or\n *   `'append'`.\n * @property {ElementChild|ElementChild[]|Build} [content={type: 'element', tagName: 'span', properties: {className: ['icon', 'icon-link']}, children: []}]\n *   hast nodes to insert in the link.\n * @property {ElementChild|ElementChild[]|Build} [group]\n *   hast node to wrap the heading and link with, if `behavior` is `'before'` or\n *   `'after'`.\n *   There is no default.\n * @property {Test} [test]\n *   Test to define which heading elements are linked.\n *   Any test that can be given to `hast-util-is-element` is supported.\n *   The default (no test) is to link all headings.\n *   Can be used to link only h1-h3, or for example all except h1.\n */\n\nimport extend from 'extend'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {visit, SKIP} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/**\n * Plugin to automatically add links to headings (h1-h6).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function rehypeAutolinkHeadings(options = {}) {\n  let props = options.properties\n  const behavior = options.behaviour || options.behavior || 'prepend'\n  const content = options.content || contentDefaults\n  const group = options.group\n  const is = convertElement(options.test)\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  let method\n\n  if (behavior === 'wrap') {\n    method = wrap\n  } else if (behavior === 'before' || behavior === 'after') {\n    method = around\n  } else {\n    if (!props) {\n      props = {ariaHidden: 'true', tabIndex: -1}\n    }\n\n    method = inject\n  }\n\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (\n        headingRank(node) &&\n        hasProperty(node, 'id') &&\n        is(node, index, parent)\n      ) {\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function inject(node) {\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, extend(true, {}, props), toChildren(content, node))\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function around(node, index, parent) {\n    // Uncommon.\n    /* c8 ignore next */\n    if (typeof index !== 'number' || !parent) return\n\n    const link = create(\n      node,\n      extend(true, {}, props),\n      toChildren(content, node)\n    )\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function wrap(node) {\n    node.children = [create(node, extend(true, {}, props), node.children)]\n    return [SKIP]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild[]}\n   */\n  function toChildren(value, node) {\n    const result = toNode(value, node)\n    return Array.isArray(result) ? result : [result]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild|ElementChild[]}\n   */\n  function toNode(value, node) {\n    if (typeof value === 'function') return value(node)\n    return extend(true, Array.isArray(value) ? [] : {}, value)\n  }\n\n  /**\n   * @param {Element} node\n   * @param {Properties} props\n   * @param {ElementChild[]} children\n   * @returns {Element}\n   */\n  function create(node, props, children) {\n    return {\n      type: 'element',\n      tagName: 'a',\n      properties: Object.assign({}, props, {\n        // Fix hast types and make them required.\n        /* c8 ignore next */\n        href: '#' + (node.properties || {}).id\n      }),\n      children\n    }\n  }\n}\n","import { Plugin } from 'unified';\nimport { Root, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\n\nexport type RehypeIgnoreOptions = {\n  /**\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\n   */\n  openDelimiter?: string;\n  /**\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\n   */\n  closeDelimiter?: string;\n}\n\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\n  return (tree) => {\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      if (node.type === 'element' || node.type === 'root') {\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\n        // if (start > -1 && end > -1) {\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\n        // }\n        let start = false;\n        node.children = node.children.filter((item) => {\n          if (item.type === 'comment' && item.value.trim() === openDelimiter) {\n            start = true;\n            return false\n          }\n          if (item.type === 'comment' && item.value.trim() === closeDelimiter) {\n            start = false;\n            return false\n          }\n          \n          return !start;\n        })\n      }\n    });\n  }\n}\n\nexport default rehypeIgnore;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * Options for unist util filter\n *\n * @typedef {Object} FilterOptions\n * @property {boolean} [cascade=true] Whether to drop parent nodes if they had children, but all their children were filtered out.\n */\n\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create a new tree consisting of copies of all nodes that pass test.\n * The tree is walked in preorder (NLR), visiting the node itself, then its head, etc.\n *\n * @param tree Tree to filter.\n * @param options Configuration (optional).\n * @param test is-compatible test (such as a type).\n * @returns Given `tree` or `null` if it didn’t pass `test`.\n */\nexport const filter =\n  /**\n   * @type {(\n   *  (<Tree extends Node, Check extends Test>(node: Tree, options: FilterOptions, test: Check) => import('./complex-types').Matches<Tree, Check>) &\n   *  (<Tree extends Node, Check extends Test>(node: Tree, test: Check) => import('./complex-types').Matches<Tree, Check>) &\n   *  (<Tree extends Node>(node: Tree, options?: FilterOptions) => Tree)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {FilterOptions} options\n     * @param {Test} test\n     * @returns {Node|null}\n     */\n    function (tree, options, test) {\n      const is = convert(test || options)\n      const cascade =\n        options.cascade === undefined || options.cascade === null\n          ? true\n          : options.cascade\n\n      return preorder(tree)\n\n      /**\n       * @param {Node} node\n       * @param {number|undefined} [index]\n       * @param {Parent|undefined} [parent]\n       * @returns {Node|null}\n       */\n      function preorder(node, index, parent) {\n        /** @type {Array.<Node>} */\n        const children = []\n        /** @type {number} */\n        let childIndex\n        /** @type {Node} */\n        let result\n        /** @type {string} */\n        let key\n\n        if (!is(node, index, parent)) return null\n\n        // @ts-expect-error: Looks like a parent.\n        if (node.children) {\n          childIndex = -1\n\n          // @ts-expect-error Looks like a parent.\n          while (++childIndex < node.children.length) {\n            // @ts-expect-error Looks like a parent.\n            result = preorder(node.children[childIndex], childIndex, node)\n\n            if (result) {\n              children.push(result)\n            }\n          }\n\n          // @ts-expect-error Looks like a parent.\n          if (cascade && node.children.length > 0 && children.length === 0)\n            return null\n        }\n\n        // Create a shallow clone, using the new children.\n        /** @type {typeof node} */\n        // @ts-expect-error all the fields will be copied over.\n        const next = {}\n\n        for (key in node) {\n          if (own.call(node, key)) {\n            // @ts-expect-error: Looks like a record.\n            next[key] = key === 'children' ? children : node[key]\n          }\n        }\n\n        return next\n      }\n    }\n  )\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef Options options\n *   Configuration.\n * @property {boolean} [showLineNumbers]\n *   Set `showLineNumbers` to `true` to always display line number\n * @property {boolean} [ignoreMissing]\n *   Set `ignoreMissing` to `true` to ignore unsupported languages and line highlighting when no language is specified\n */\n\nimport { visit } from 'unist-util-visit'\nimport { toString } from 'hast-util-to-string'\nimport { filter } from 'unist-util-filter'\nimport rangeParser from 'parse-numeric-range'\n\n/**\n * @param {Element} node\n * @return {string|null}\n */\nconst getLanguage = (node) => {\n  const className = node.properties.className\n  //@ts-ignore\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase()\n    }\n  }\n  return null\n}\n\n/**\n * Create a closure that determines if we have to highlight the given index\n *\n * @param {string} meta\n * @return { (index:number) => boolean }\n */\nconst calculateLinesToHighlight = (meta) => {\n  const RE = /{([\\d,-]+)}/\n  // Remove space between {} e.g. {1, 3}\n  const parsedMeta = meta\n    .split(',')\n    .map((str) => str.trim())\n    .join()\n  if (RE.test(parsedMeta)) {\n    const strlineNumbers = RE.exec(parsedMeta)[1]\n    const lineNumbers = rangeParser(strlineNumbers)\n    return (index) => lineNumbers.includes(index + 1)\n  } else {\n    return () => false\n  }\n}\n\n/**\n * Check if we want to start the line numbering from a given number or 1\n * showLineNumbers=5, will start the numbering from 5\n * @param {string} meta\n * @returns {number}\n */\nconst calculateStartingLine = (meta) => {\n  const RE = /showLineNumbers=(?<lines>\\d+)/i\n  // pick the line number after = using a named capturing group\n  if (RE.test(meta)) {\n    const {\n      groups: { lines },\n    } = RE.exec(meta)\n    return Number(lines)\n  }\n  return 1\n}\n\n/**\n * Create container AST for node lines\n *\n * @param {number} number\n * @return {Element[]}\n */\nconst createLineNodes = (number) => {\n  const a = new Array(number)\n  for (let i = 0; i < number; i++) {\n    a[i] = {\n      type: 'element',\n      tagName: 'span',\n      properties: { className: [] },\n      children: [],\n    }\n  }\n  return a\n}\n\n/**\n * Split multiline text nodes into individual nodes with positioning\n * Add a node start and end line position information for each text node\n *\n * @return { (ast:Element['children']) => Element['children'] }\n *\n */\nconst addNodePositionClosure = () => {\n  let startLineNum = 1\n  /**\n   * @param {Element['children']} ast\n   * @return {Element['children']}\n   */\n  const addNodePosition = (ast) => {\n    return ast.reduce((result, node) => {\n      if (node.type === 'text') {\n        const value = /** @type {string} */ (node.value)\n        const numLines = (value.match(/\\n/g) || '').length\n        if (numLines === 0) {\n          node.position = {\n            // column: 1 is needed to avoid error with @next/mdx\n            // https://github.com/timlrx/rehype-prism-plus/issues/44\n            start: { line: startLineNum, column: 1 },\n            end: { line: startLineNum, column: 1 },\n          }\n          result.push(node)\n        } else {\n          const lines = value.split('\\n')\n          for (const [i, line] of lines.entries()) {\n            result.push({\n              type: 'text',\n              value: i === lines.length - 1 ? line : line + '\\n',\n              position: {\n                start: { line: startLineNum + i, column: 1 },\n                end: { line: startLineNum + i, column: 1 },\n              },\n            })\n          }\n        }\n        startLineNum = startLineNum + numLines\n\n        return result\n      }\n\n      if (Object.prototype.hasOwnProperty.call(node, 'children')) {\n        const initialLineNum = startLineNum\n        // @ts-ignore\n        node.children = addNodePosition(node.children, startLineNum)\n        result.push(node)\n        node.position = {\n          start: { line: initialLineNum, column: 1 },\n          end: { line: startLineNum, column: 1 },\n        }\n        return result\n      }\n\n      result.push(node)\n      return result\n    }, [])\n  }\n  return addNodePosition\n}\n\n/**\n * Rehype prism plugin generator that highlights code blocks with refractor (prismjs)\n *\n * Pass in your own refractor object with the required languages registered:\n * https://github.com/wooorm/refractor#refractorregistersyntax\n *\n * @param {import('refractor/lib/core').Refractor} refractor\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypePrismGenerator = (refractor) => {\n  return (options = {}) => {\n    return (tree) => {\n      visit(tree, 'element', visitor)\n    }\n\n    /**\n     * @param {Element} node\n     * @param {number} index\n     * @param {Element} parent\n     */\n    function visitor(node, index, parent) {\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      let meta = node.data && node.data.meta ? /** @type {string} */ (node.data.meta) : ''\n      // Coerce className to array\n      if (node.properties.className) {\n        if (typeof node.properties.className === 'boolean') {\n          node.properties.className = []\n        } else if (!Array.isArray(node.properties.className)) {\n          node.properties.className = [node.properties.className]\n        }\n      } else {\n        node.properties.className = []\n      }\n      node.properties.className.push('code-highlight')\n      const lang = getLanguage(node)\n\n      /** @type {Element} */\n      let refractorRoot\n\n      // Syntax highlight\n      if (lang) {\n        try {\n          let rootLang\n          if (lang?.includes('diff-')){\n            rootLang=lang.split('-')[1]\n          } else{\n            rootLang=lang\n          }\n          // @ts-ignore\n          refractorRoot = refractor.highlight(toString(node), rootLang)\n          // @ts-ignore className is already an array\n          parent.properties.className = (parent.properties.className || []).concat(\n            'language-' + rootLang\n          )\n        } catch (err) {\n          if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n            refractorRoot = node\n          } else {\n            throw err\n          }\n        }\n      } else {\n        refractorRoot = node\n      }\n\n      refractorRoot.children = addNodePositionClosure()(refractorRoot.children)\n\n      // Add position info to root\n      if (refractorRoot.children.length > 0) {\n        refractorRoot.position = {\n          start: { line: refractorRoot.children[0].position.start.line, column: 0 },\n          end: {\n            line: refractorRoot.children[refractorRoot.children.length - 1].position.end.line,\n            column: 0,\n          },\n        }\n      } else {\n        refractorRoot.position = {\n          start: { line: 0, column: 0 },\n          end: { line: 0, column: 0 },\n        }\n      }\n\n      const shouldHighlightLine = calculateLinesToHighlight(meta)\n      const startingLineNumber = calculateStartingLine(meta)\n      const codeLineArray = createLineNodes(refractorRoot.position.end.line)\n\n      const falseShowLineNumbersStr = [\n        'showlinenumbers=false',\n        'showlinenumbers=\"false\"',\n        'showlinenumbers={false}',\n      ]\n      for (const [i, line] of codeLineArray.entries()) {\n        // Default class name for each line\n        line.properties.className = ['code-line']\n\n        // Syntax highlight\n        const treeExtract = filter(\n          refractorRoot,\n          (node) => node.position.start.line <= i + 1 && node.position.end.line >= i + 1\n        )\n        line.children = treeExtract.children\n\n        // Line number\n        if (\n          (meta.toLowerCase().includes('showLineNumbers'.toLowerCase()) ||\n            options.showLineNumbers) &&\n          !falseShowLineNumbersStr.some((str) => meta.toLowerCase().includes(str))\n        ) {\n          line.properties.line = [(i + startingLineNumber).toString()]\n          line.properties.className.push('line-number')\n        }\n\n        // Line highlight\n        if (shouldHighlightLine(i)) {\n          line.properties.className.push('highlight-line')\n        }\n\n        // Diff classes\n        if ((lang === 'diff' || lang?.includes('diff-')) && toString(line).substring(0, 1) === '-') {\n          line.properties.className.push('deleted')\n        } else if ((lang === 'diff' || lang?.includes('diff-')) && toString(line).substring(0, 1) === '+') {\n          line.properties.className.push('inserted')\n        }\n      }\n\n      // Remove possible trailing line when splitting by \\n which results in empty array\n      if (\n        codeLineArray.length > 0 &&\n        toString(codeLineArray[codeLineArray.length - 1]).trim() === ''\n      ) {\n        codeLineArray.pop()\n      }\n\n      node.children = codeLineArray\n    }\n  }\n}\n\nexport default rehypePrismGenerator\n","import { refractor as refractorAll } from 'refractor/lib/all.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * This supports all the languages and should be used on the server side.\n *\n * Consider using rehypePrismCommon or rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismAll = rehypePrismGenerator(refractorAll)\n\nexport default rehypePrismAll\n","import { refractor as refractorCommon } from 'refractor/lib/common.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * Supported languages: https://github.com/wooorm/refractor#data\n *\n * Consider using rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismCommon = rehypePrismGenerator(refractorCommon)\n\nexport default rehypePrismCommon\n","/**\n * @typedef {import('./core.js').HChild} Child Acceptable child value\n * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.\n *\n * @typedef {import('./jsx-classic').Element} s.JSX.Element\n * @typedef {import('./jsx-classic').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {Parent['children'][number]} Child\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {Child|Root} Node\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentType} P5Doctype\n * @typedef {import('parse5').CommentNode} P5Comment\n * @typedef {import('parse5').TextNode} P5Text\n * @typedef {import('parse5').Element} P5Element\n * @typedef {import('parse5').ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Location} P5Location\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {import('parse5').Node} P5Node\n *\n * @typedef {'html'|'svg'} Space\n *\n * @callback Handler\n * @param {Context} ctx\n * @param {P5Node} node\n * @param {Array.<Child>} [children]\n * @returns {Node}\n *\n * @typedef Options\n * @property {Space} [space='html'] Whether the root of the tree is in the `'html'` or `'svg'` space. If an element in with the SVG namespace is found in `ast`, `fromParse5` automatically switches to the SVG space when entering the element, and switches back when leaving\n * @property {VFile} [file] `VFile`, used to add positional information to nodes. If given, the file should have the original HTML source as its contents\n * @property {boolean} [verbose=false] Whether to add extra positional information about starting tags, closing tags, and attributes to elements. Note: not used without `file`\n *\n * @typedef Context\n * @property {Schema} schema\n * @property {VFile|undefined} file\n * @property {boolean|undefined} verbose\n * @property {boolean} location\n */\n\nimport {h, s} from 'hastscript'\nimport {html, svg, find} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n\n// Handlers.\nconst map = {\n  '#document': root,\n  '#document-fragment': root,\n  '#text': text,\n  '#comment': comment,\n  '#documentType': doctype\n}\n\n/**\n * Transform Parse5’s AST to a hast tree.\n *\n * @param {P5Node} ast\n * @param {Options|VFile} [options]\n */\nexport function fromParse5(ast, options = {}) {\n  /** @type {Options} */\n  let settings\n  /** @type {VFile|undefined} */\n  let file\n\n  if (isFile(options)) {\n    file = options\n    settings = {}\n  } else {\n    file = options.file\n    settings = options\n  }\n\n  return transform(\n    {\n      schema: settings.space === 'svg' ? svg : html,\n      file,\n      verbose: settings.verbose,\n      location: false\n    },\n    ast\n  )\n}\n\n/**\n * Transform children.\n *\n * @param {Context} ctx\n * @param {P5Node} ast\n * @returns {Node}\n */\nfunction transform(ctx, ast) {\n  const schema = ctx.schema\n  /** @type {Handler} */\n  // @ts-expect-error: index is fine.\n  const fn = own.call(map, ast.nodeName) ? map[ast.nodeName] : element\n  /** @type {Array.<Child>|undefined} */\n  let children\n\n  // Element.\n  if ('tagName' in ast) {\n    ctx.schema = ast.namespaceURI === webNamespaces.svg ? svg : html\n  }\n\n  if ('childNodes' in ast) {\n    children = nodes(ctx, ast.childNodes)\n  }\n\n  const result = fn(ctx, ast, children)\n\n  if ('sourceCodeLocation' in ast && ast.sourceCodeLocation && ctx.file) {\n    // @ts-expect-error It’s fine.\n    const position = createLocation(ctx, result, ast.sourceCodeLocation)\n\n    if (position) {\n      ctx.location = true\n      result.position = position\n    }\n  }\n\n  ctx.schema = schema\n\n  return result\n}\n\n/**\n * Transform children.\n *\n * @param {Context} ctx\n * @param {Array.<P5Node>} children\n * @returns {Array.<Child>}\n */\nfunction nodes(ctx, children) {\n  let index = -1\n  /** @type {Array.<Child>} */\n  const result = []\n\n  while (++index < children.length) {\n    // @ts-expect-error Assume no roots in children.\n    result[index] = transform(ctx, children[index])\n  }\n\n  return result\n}\n\n/**\n * Transform a document.\n * Stores `ast.quirksMode` in `node.data.quirksMode`.\n *\n * @type {Handler}\n * @param {P5Document} ast\n * @param {Array.<Child>} children\n * @returns {Root}\n */\nfunction root(ctx, ast, children) {\n  /** @type {Root} */\n  const result = {\n    type: 'root',\n    children,\n    data: {quirksMode: ast.mode === 'quirks' || ast.mode === 'limited-quirks'}\n  }\n\n  if (ctx.file && ctx.location) {\n    const doc = String(ctx.file)\n    const loc = location(doc)\n    result.position = {\n      start: loc.toPoint(0),\n      end: loc.toPoint(doc.length)\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform a doctype.\n *\n * @type {Handler}\n * @returns {Doctype}\n */\nfunction doctype() {\n  // @ts-expect-error Types are out of date.\n  return {type: 'doctype'}\n}\n\n/**\n * Transform a text.\n *\n * @type {Handler}\n * @param {P5Text} ast\n * @returns {Text}\n */\nfunction text(_, ast) {\n  return {type: 'text', value: ast.value}\n}\n\n/**\n * Transform a comment.\n *\n * @type {Handler}\n * @param {P5Comment} ast\n * @returns {Comment}\n */\nfunction comment(_, ast) {\n  return {type: 'comment', value: ast.data}\n}\n\n/**\n * Transform an element.\n *\n * @type {Handler}\n * @param {P5Element} ast\n * @param {Array.<ElementChild>} children\n * @returns {Element}\n */\nfunction element(ctx, ast, children) {\n  const fn = ctx.schema.space === 'svg' ? s : h\n  let index = -1\n  /** @type {Object.<string, string>} */\n  const props = {}\n\n  while (++index < ast.attrs.length) {\n    const attribute = ast.attrs[index]\n    props[(attribute.prefix ? attribute.prefix + ':' : '') + attribute.name] =\n      attribute.value\n  }\n\n  const result = fn(ast.tagName, props, children)\n\n  if (result.tagName === 'template' && 'content' in ast) {\n    const pos = ast.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    /** @type {Root} */\n    // @ts-expect-error Types are wrong.\n    const content = transform(ctx, ast.content)\n\n    if (startTag && endTag && ctx.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  return result\n}\n\n/**\n * Create clean positional information.\n *\n * @param {Context} ctx\n * @param {Node} node\n * @param {P5ElementLocation} location\n * @returns {Position|null}\n */\nfunction createLocation(ctx, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (ctx.verbose) {\n      /** @type {Object.<string, Position|null>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      for (key in location.attrs) {\n        if (own.call(location.attrs, key)) {\n          props[find(ctx.schema, key).property] = position(location.attrs[key])\n        }\n      }\n\n      node.data = {\n        position: {\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {P5Location} loc\n * @returns {Position|null}\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n  // @ts-expect-error `null` is fine.\n  return start || end ? {start, end} : null\n}\n\n/**\n * @param {Point} point\n * @returns {Point|null}\n */\nfunction point(point) {\n  return point.line && point.column ? point : null\n}\n\n/**\n * @param {VFile|Options} value\n * @returns {value is VFile}\n */\nfunction isFile(value) {\n  return 'messages' in value\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {Pick<Point, 'line'|'column'>} PositionalPoint\n * @typedef {Required<Point>} FullPoint\n * @typedef {NonNullable<Point['offset']>} Offset\n */\n\n/**\n * Get transform functions for the given `document`.\n *\n * @param {string|Uint8Array|VFile} file\n */\nexport function location(file) {\n  var value = String(file)\n  /** @type {Array.<number>} */\n  var indices = []\n  var search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /**\n   * Get the line and column-based `point` for `offset` in the bound indices.\n   * Returns a point with `undefined` values when given invalid or out of bounds\n   * input.\n   *\n   * @param {Offset} offset\n   * @returns {FullPoint}\n   */\n  function toPoint(offset) {\n    var index = -1\n\n    if (offset > -1 && offset < indices[indices.length - 1]) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (indices[index - 1] || 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /**\n   * Get the `offset` for a line and column-based `point` in the bound indices.\n   * Returns `-1` when given invalid or out of bounds input.\n   *\n   * @param {PositionalPoint} point\n   * @returns {Offset}\n   */\n  function toOffset(point) {\n    var line = point && point.line\n    var column = point && point.column\n    /** @type {number} */\n    var offset\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      offset = (indices[line - 2] || 0) + column - 1 || 0\n    }\n\n    return offset > -1 && offset < indices[indices.length - 1] ? offset : -1\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('unist-util-is').AssertPredicate<Element>} AssertElement\n * @typedef {import('unist-util-is').AssertPredicate<Text>} AssertText\n * @typedef {import('unist-util-is').AssertPredicate<Root>} AssertRoot\n *\n * @callback CreateElementLike\n * @param {string} name\n * @param {any} attributes\n * @param {Array.<string|any>} [children]\n * @returns {any}\n *\n * @typedef Context\n * @property {html|svg} schema\n * @property {string|null} prefix\n * @property {number} key\n * @property {boolean} react\n * @property {boolean} vue\n * @property {boolean} vdom\n * @property {boolean} hyperscript\n *\n * @typedef Options\n * @property {string|null} [prefix]\n * @property {'html'|'svg'} [space]\n */\n\nimport {html, svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {webNamespaces} from 'web-namespaces'\nimport {convert} from 'unist-util-is'\n\nconst ns = /** @type {Record<string, string>} */ (webNamespaces)\nconst toReact = /** @type {Record<string, string>} */ (hastToReact)\n\nconst own = {}.hasOwnProperty\n\n/** @type {AssertRoot} */\n// @ts-expect-error it’s correct.\nconst root = convert('root')\n/** @type {AssertElement} */\n// @ts-expect-error it’s correct.\nconst element = convert('element')\n/** @type {AssertText} */\n// @ts-expect-error it’s correct.\nconst text = convert('text')\n\n/**\n * @template {CreateElementLike} H\n * @param {H} h\n * @param {Element|Root} tree\n * @param {string|boolean|Options} [options]\n * @returns {ReturnType<H>}\n */\nexport function toH(h, tree, options) {\n  if (typeof h !== 'function') {\n    throw new TypeError('h is not a function')\n  }\n\n  const r = react(h)\n  const v = vue(h)\n  const vd = vdom(h)\n  /** @type {string|boolean|null|undefined} */\n  let prefix\n  /** @type {Element} */\n  let node\n\n  if (typeof options === 'string' || typeof options === 'boolean') {\n    prefix = options\n    options = {}\n  } else {\n    if (!options) options = {}\n    prefix = options.prefix\n  }\n\n  if (root(tree)) {\n    // @ts-expect-error Allow `doctypes` in there, we’ll filter them out later.\n    node =\n      tree.children.length === 1 && element(tree.children[0])\n        ? tree.children[0]\n        : {\n            type: 'element',\n            tagName: 'div',\n            properties: {},\n            children: tree.children\n          }\n  } else if (element(tree)) {\n    node = tree\n  } else {\n    throw new Error(\n      // @ts-expect-error runtime.\n      'Expected root or element, not `' + ((tree && tree.type) || tree) + '`'\n    )\n  }\n\n  return transform(h, node, {\n    schema: options.space === 'svg' ? svg : html,\n    prefix:\n      prefix === undefined || prefix === null\n        ? r || v || vd\n          ? 'h-'\n          : null\n        : typeof prefix === 'string'\n        ? prefix\n        : prefix\n        ? 'h-'\n        : null,\n    key: 0,\n    react: r,\n    vue: v,\n    vdom: vd,\n    hyperscript: hyperscript(h)\n  })\n}\n\n/**\n * Transform a hast node through a hyperscript interface to *anything*!\n *\n * @template {CreateElementLike} H\n * @param {H} h\n * @param {Element} node\n * @param {Context} ctx\n */\nfunction transform(h, node, ctx) {\n  const parentSchema = ctx.schema\n  let schema = parentSchema\n  let name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const attributes = {}\n  /** @type {Array.<ReturnType<H>|string>} */\n  const nodes = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (parentSchema.space === 'html' && name.toLowerCase() === 'svg') {\n    schema = svg\n    ctx.schema = schema\n  }\n\n  for (key in node.properties) {\n    if (node.properties && own.call(node.properties, key)) {\n      addAttribute(attributes, key, node.properties[key], ctx, name)\n    }\n  }\n\n  if (ctx.vdom) {\n    if (schema.space === 'html') {\n      name = name.toUpperCase()\n    } else if (schema.space) {\n      attributes.namespace = ns[schema.space]\n    }\n  }\n\n  if (ctx.prefix) {\n    ctx.key++\n    attributes.key = ctx.prefix + ctx.key\n  }\n\n  if (node.children) {\n    while (++index < node.children.length) {\n      const value = node.children[index]\n\n      if (element(value)) {\n        nodes.push(transform(h, value, ctx))\n      } else if (text(value)) {\n        nodes.push(value.value)\n      }\n    }\n  }\n\n  // Restore parent schema.\n  ctx.schema = parentSchema\n\n  // Ensure no React warnings are triggered for void elements having children\n  // passed in.\n  return nodes.length > 0\n    ? h.call(node, name, attributes, nodes)\n    : h.call(node, name, attributes)\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n * @param {string} name\n */\n// eslint-disable-next-line complexity, max-params\nfunction addAttribute(props, prop, value, ctx, name) {\n  const info = find(ctx.schema, prop)\n  /** @type {string|undefined} */\n  let subprop\n\n  // Ignore nullish and `NaN` values.\n  // Ignore `false` and falsey known booleans for hyperlike DSLs.\n  if (\n    value === undefined ||\n    value === null ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (value === false && (ctx.vue || ctx.vdom || ctx.hyperscript)) ||\n    (!value && info.boolean && (ctx.vue || ctx.vdom || ctx.hyperscript))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // Treat `true` and truthy known booleans.\n  if (info.boolean && ctx.hyperscript) {\n    value = ''\n  }\n\n  // VDOM, Vue, and React accept `style` as object.\n  if (\n    info.property === 'style' &&\n    typeof value === 'string' &&\n    (ctx.react || ctx.vue || ctx.vdom)\n  ) {\n    value = parseStyle(value, name)\n  }\n\n  if (ctx.vue) {\n    if (info.property !== 'style') subprop = 'attrs'\n  } else if (!info.mustUseProperty) {\n    if (ctx.vdom) {\n      if (info.property !== 'style') subprop = 'attributes'\n    } else if (ctx.hyperscript) {\n      subprop = 'attrs'\n    }\n  }\n\n  if (subprop) {\n    props[subprop] = Object.assign(props[subprop] || {}, {\n      [info.attribute]: value\n    })\n  } else if (info.space && ctx.react) {\n    props[toReact[info.property] || info.property] = value\n  } else {\n    props[info.attribute] = value\n  }\n}\n\n/**\n * Check if `h` is `react.createElement`.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction react(h) {\n  /** @type {unknown} */\n  const node = h('div', {})\n  return Boolean(\n    node &&\n      // @ts-expect-error Looks like a React node.\n      ('_owner' in node || '_store' in node) &&\n      // @ts-expect-error Looks like a React node.\n      (node.key === undefined || node.key === null)\n  )\n}\n\n/**\n * Check if `h` is `hyperscript`.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction hyperscript(h) {\n  return 'context' in h && 'cleanup' in h\n}\n\n/**\n * Check if `h` is `virtual-dom/h`.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction vdom(h) {\n  /** @type {unknown} */\n  const node = h('div', {})\n  // @ts-expect-error Looks like a vnode.\n  return node.type === 'VirtualNode'\n}\n\n/**\n * Check if `h` is Vue.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction vue(h) {\n  /** @type {unknown} */\n  const node = h('div', {})\n  // @ts-expect-error Looks like a Vue node.\n  return Boolean(node && node.context && node.context._isVue)\n}\n\n/**\n * @param {string} value\n * @param {string} tagName\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value, tagName) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, (name, value) => {\n      if (name.slice(0, 4) === '-ms-') name = 'ms-' + name.slice(4)\n\n      result[\n        name.replace(\n          /-([a-z])/g,\n          /**\n           * @param {string} _\n           * @param {string} $1\n           * @returns {string}\n           */ (_, $1) => $1.toUpperCase()\n        )\n      ] = value\n    })\n  } catch (error) {\n    error.message =\n      tagName + '[style]' + error.message.slice('undefined'.length)\n    throw error\n  }\n\n  return result\n}\n","/**\n * @typedef {import('parse5').Node} P5Node\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentFragment} P5Fragment\n * @typedef {import('parse5').DocumentType} P5Doctype\n * @typedef {import('parse5').CommentNode} P5Comment\n * @typedef {import('parse5').TextNode} P5Text\n * @typedef {import('parse5').Element} P5Element\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {import('parse5').ParentNode} P5Parent\n * @typedef {Exclude<P5Node, P5Document|P5Fragment>} P5Child\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('property-information').Info} Info\n * @typedef {'html'|'svg'} Space\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {Parent['children'][number]} Child\n * @typedef {Child|Root} Node\n *\n * @callback Handle\n * @param {Node} node\n * @param {Schema} schema\n * @returns {P5Node}\n */\n\nimport {html, svg, find} from 'property-information'\nimport {toH} from 'hast-to-hyperscript'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nvar own = {}.hasOwnProperty\n\nvar one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a tree from hast to Parse5’s AST.\n *\n * @param {Node} tree\n * @param {Space} [space='html']\n * @returns {P5Node}\n */\nexport function toParse5(tree, space) {\n  // @ts-ignore Types are wrong.\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @type {Handle}\n * @param {Root} node\n * @returns {P5Document}\n */\nfunction root(node, schema) {\n  /** @type {P5Document} */\n  var p5 = {\n    nodeName: '#document',\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  // @ts-ignore Assume correct children.\n  p5.childNodes = all(node.children, p5, schema)\n  return patch(node, p5)\n}\n\n/**\n * @type {Handle}\n * @param {Root} node\n * @returns {P5Fragment}\n */\nfunction fragment(node, schema) {\n  /** @type {P5Fragment} */\n  var p5 = {nodeName: '#document-fragment', childNodes: []}\n  // @ts-ignore Assume correct children.\n  p5.childNodes = all(node.children, p5, schema)\n  return patch(node, p5)\n}\n\n/**\n * @type {Handle}\n * @param {Doctype} node\n * @returns {P5Doctype}\n */\nfunction doctype(node) {\n  return patch(node, {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: undefined\n  })\n}\n\n/**\n * @type {Handle}\n * @param {Text} node\n * @returns {P5Text}\n */\nfunction text(node) {\n  return patch(node, {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: undefined\n  })\n}\n\n/**\n * @type {Handle}\n * @param {Comment} node\n * @returns {P5Comment}\n */\nfunction comment(node) {\n  return patch(node, {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: undefined\n  })\n}\n\n/**\n * @type {Handle}\n * @param {Element} node\n * @returns {P5Element}\n */\nfunction element(node, schema) {\n  /** @type {Space} */\n  // @ts-ignore Assume space.\n  var space = schema.space\n  return toH(h, Object.assign({}, node, {children: []}), {space})\n\n  /**\n   * @param {string} name\n   * @param {Object.<string, string|boolean|number>} attrs\n   */\n  function h(name, attrs) {\n    /** @type {Array.<P5Attribute>} */\n    var values = []\n    /** @type {Info} */\n    var info\n    /** @type {P5Attribute} */\n    var value\n    /** @type {string} */\n    var key\n    /** @type {number} */\n    var index\n    /** @type {P5Element} */\n    var p5\n\n    for (key in attrs) {\n      if (!own.call(attrs, key) || attrs[key] === false) {\n        continue\n      }\n\n      info = find(schema, key)\n\n      if (info.boolean && !attrs[key]) {\n        continue\n      }\n\n      value = {name: key, value: attrs[key] === true ? '' : String(attrs[key])}\n\n      if (info.space && info.space !== 'html' && info.space !== 'svg') {\n        index = key.indexOf(':')\n\n        if (index < 0) {\n          value.prefix = ''\n        } else {\n          value.name = key.slice(index + 1)\n          value.prefix = key.slice(0, index)\n        }\n\n        value.namespace = webNamespaces[info.space]\n      }\n\n      values.push(value)\n    }\n\n    if (schema.space === 'html' && node.tagName === 'svg') schema = svg\n\n    p5 = patch(node, {\n      nodeName: name,\n      tagName: name,\n      attrs: values,\n      namespaceURI: webNamespaces[schema.space],\n      childNodes: [],\n      parentNode: undefined\n    })\n\n    // @ts-ignore Assume correct children.\n    p5.childNodes = all(node.children, p5, schema)\n\n    // @ts-ignore Types are wrong.\n    if (name === 'template') p5.content = fragment(node.content, schema)\n\n    return p5\n  }\n}\n\n/**\n * @param {Array.<Child>} children\n * @param {P5Parent} p5\n * @param {Schema} schema\n * @returns {Array.<P5Child>}\n */\nfunction all(children, p5, schema) {\n  var index = -1\n  /** @type {Array.<P5Child>} */\n  var result = []\n  /** @type {P5Child} */\n  var child\n\n  if (children) {\n    while (++index < children.length) {\n      // @ts-ignore Assume child.\n      child = one(children[index], schema)\n\n      // @ts-ignore types are wrong.\n      child.parentNode = p5\n\n      result.push(child)\n    }\n  }\n\n  return result\n}\n\n/**\n * Patch specific properties.\n *\n * @template {P5Node} T\n * @param {Node} node\n * @param {T} p5\n * @returns {T}\n */\nfunction patch(node, p5) {\n  var position = node.position\n\n  if (position && position.start && position.end) {\n    // @ts-ignore Types are wrong.\n    p5.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n\n  return p5\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentFragment} P5Fragment\n * @typedef {Omit<import('parse5').Element, 'parentNode'>} P5Element\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {Omit<import('parse5').Location, 'startOffset' | 'endOffset'> & {startOffset: number|undefined, endOffset: number|undefined}} P5Location\n * @typedef {import('parse5').ParserOptions} P5ParserOptions\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {import('../complex-types').Raw} Raw\n *\n * @typedef {Omit<Comment, 'value'> & {value: {stitch: Node}}} Stitch\n *\n * @typedef Options\n * @property {Array<string>} [passThrough]\n *   List of custom hast node types to pass through (keep) in hast.\n *   If the passed through nodes have children, those children are expected to\n *   be hast and will be handled.\n *\n * @typedef HiddenTokenizer\n * @property {Array<HiddenLocationTracker>} __mixins\n *   Way too simple, but works for us.\n * @property {HiddenPreprocessor} preprocessor\n * @property {(value: string) => void} write\n * @property {() => number} _consume\n * @property {Array<HiddenToken>} tokenQueue\n * @property {string} state\n * @property {string} returnState\n * @property {number} charRefCode\n * @property {Array<number>} tempBuff\n * @property {Function} _flushCodePointsConsumedAsCharacterReference\n * @property {string} lastStartTagName\n * @property {number} consumedAfterSnapshot\n * @property {boolean} active\n * @property {HiddenToken|undefined} currentCharacterToken\n * @property {HiddenToken|undefined} currentToken\n * @property {unknown} currentAttr\n * @property {Function} NAMED_CHARACTER_REFERENCE_STATE\n * @property {Function} NUMERIC_CHARACTER_REFERENCE_END_STATE\n *\n * @typedef {Record<string, unknown> & {location: P5Location}} HiddenToken\n *\n * @typedef HiddenPreprocessor\n * @property {string|undefined} html\n * @property {number} pos\n * @property {number} lastGapPos\n * @property {number} lastCharPos\n * @property {Array<number>} gapStack\n * @property {boolean} skipNextNewLine\n * @property {boolean} lastChunkWritten\n * @property {boolean} endOfChunkHit\n *\n * @typedef HiddenLocationTracker\n * @property {P5Location|undefined} currentAttrLocation\n * @property {P5Location} ctLoc\n * @property {HiddenPosTracker} posTracker\n *\n * @typedef HiddenPosTracker\n * @property {boolean} isEol\n * @property {number} lineStartPos\n * @property {number} droppedBufferSize\n * @property {number} offset\n * @property {number} col\n * @property {number} line\n */\n\n// @ts-expect-error: untyped.\nimport Parser from 'parse5/lib/parser/index.js'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst inTemplateMode = 'IN_TEMPLATE_MODE'\nconst dataState = 'DATA_STATE'\nconst characterToken = 'CHARACTER_TOKEN'\nconst startTagToken = 'START_TAG_TOKEN'\nconst endTagToken = 'END_TAG_TOKEN'\nconst commentToken = 'COMMENT_TOKEN'\nconst doctypeToken = 'DOCTYPE_TOKEN'\n\n/** @type {P5ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Given a hast tree and an optional vfile (for positional info), return a new\n * parsed-again hast tree.\n *\n * @param tree\n *   Original hast tree.\n * @param file\n *   Virtual file for positional info, optional.\n * @param options\n *   Configuration.\n */\nexport const raw =\n  /**\n   * @type {(\n   *   ((tree: Node, file: VFile|undefined, options?: Options) => Node) &\n   *   ((tree: Node, options?: Options) => Node)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {VFile} [file]\n     * @param {Options} [options]\n     */\n    function (tree, file, options) {\n      let index = -1\n      const parser = new Parser(parseOptions)\n      const one = zwitch('type', {\n        // @ts-expect-error: hush.\n        handlers: {root, element, text, comment, doctype, raw: handleRaw},\n        // @ts-expect-error: hush.\n        unknown\n      })\n      /** @type {boolean|undefined} */\n      let stitches\n      /** @type {HiddenTokenizer|undefined} */\n      let tokenizer\n      /** @type {HiddenPreprocessor|undefined} */\n      let preprocessor\n      /** @type {HiddenPosTracker|undefined} */\n      let posTracker\n      /** @type {HiddenLocationTracker|undefined} */\n      let locationTracker\n\n      if (isOptions(file)) {\n        options = file\n        file = undefined\n      }\n\n      if (options && options.passThrough) {\n        while (++index < options.passThrough.length) {\n          // @ts-expect-error: hush.\n          one.handlers[options.passThrough[index]] = stitch\n        }\n      }\n\n      const result = fromParse5(\n        documentMode(tree) ? document() : fragment(),\n        file\n      )\n\n      if (stitches) {\n        visit(result, 'comment', (node, index, parent) => {\n          const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n          if (stitch.value.stitch && parent !== null && index !== null) {\n            // @ts-expect-error: assume the stitch is allowed.\n            parent.children[index] = stitch.value.stitch\n            return index\n          }\n        })\n      }\n\n      // Unpack if possible and when not given a `root`.\n      if (\n        tree.type !== 'root' &&\n        result.type === 'root' &&\n        result.children.length === 1\n      ) {\n        return result.children[0]\n      }\n\n      return result\n\n      /**\n       * @returns {P5Fragment}\n       */\n      function fragment() {\n        /** @type {P5Element} */\n        const context = {\n          nodeName: 'template',\n          tagName: 'template',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Element} */\n        const mock = {\n          nodeName: 'documentmock',\n          tagName: 'documentmock',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Fragment} */\n        const doc = {nodeName: '#document-fragment', childNodes: []}\n\n        parser._bootstrap(mock, context)\n        parser._pushTmplInsertionMode(inTemplateMode)\n        parser._initTokenizerForFragmentParsing()\n        parser._insertFakeRootElement()\n        parser._resetInsertionMode()\n        parser._findFormInFragmentContext()\n\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        parser._adoptNodes(mock.childNodes[0], doc)\n\n        return doc\n      }\n\n      /**\n       * @returns {P5Document}\n       */\n      function document() {\n        /** @type {P5Document} */\n        const doc = parser.treeAdapter.createDocument()\n\n        parser._bootstrap(doc, undefined)\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        return doc\n      }\n\n      /**\n       * @param {Array<Content>} nodes\n       * @returns {void}\n       */\n      function all(nodes) {\n        let index = -1\n\n        /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n        if (nodes) {\n          while (++index < nodes.length) {\n            one(nodes[index])\n          }\n        }\n      }\n\n      /**\n       * @param {Root} node\n       * @returns {void}\n       */\n      function root(node) {\n        all(node.children)\n      }\n\n      /**\n       * @param {Element} node\n       * @returns {void}\n       */\n      function element(node) {\n        resetTokenizer()\n        parser._processToken(startTag(node), webNamespaces.html)\n\n        all(node.children)\n\n        if (!htmlVoidElements.includes(node.tagName)) {\n          resetTokenizer()\n          parser._processToken(endTag(node))\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @returns {void}\n       */\n      function text(node) {\n        resetTokenizer()\n        parser._processToken({\n          type: characterToken,\n          chars: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Doctype} node\n       * @returns {void}\n       */\n      function doctype(node) {\n        resetTokenizer()\n        parser._processToken({\n          type: doctypeToken,\n          name: 'html',\n          forceQuirks: false,\n          publicId: '',\n          systemId: '',\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Comment|Stitch} node\n       * @returns {void}\n       */\n      function comment(node) {\n        resetTokenizer()\n        parser._processToken({\n          type: commentToken,\n          data: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Raw} node\n       * @returns {void}\n       */\n      function handleRaw(node) {\n        const start = pointStart(node)\n        const line = start.line || 1\n        const column = start.column || 1\n        const offset = start.offset || 0\n\n        /* c8 ignore next 4 */\n        if (!preprocessor) throw new Error('Expected `preprocessor`')\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n        if (!locationTracker) throw new Error('Expected `locationTracker`')\n\n        // Reset preprocessor:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/preprocessor.js#L17>.\n        preprocessor.html = undefined\n        preprocessor.pos = -1\n        preprocessor.lastGapPos = -1\n        preprocessor.lastCharPos = -1\n        preprocessor.gapStack = []\n        preprocessor.skipNextNewLine = false\n        preprocessor.lastChunkWritten = false\n        preprocessor.endOfChunkHit = false\n\n        // Reset preprocessor mixin:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/position-tracking/preprocessor-mixin.js>.\n        posTracker.isEol = false\n        posTracker.lineStartPos = -column + 1 // Looks weird, but ensures we get correct positional info.\n        posTracker.droppedBufferSize = offset\n        posTracker.offset = 0\n        posTracker.col = 1\n        posTracker.line = line\n\n        // Reset location tracker:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js>.\n        locationTracker.currentAttrLocation = undefined\n        locationTracker.ctLoc = createParse5Location(node)\n\n        // See the code for `parse` and `parseFragment`:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/parser/index.js#L371>.\n        tokenizer.write(node.value)\n        parser._runParsingLoop(null)\n\n        // Character references hang, so if we ended there, we need to flush\n        // those too.\n        // We reset the preprocessor as if the document ends here.\n        // Then one single call to the relevant state does the trick, parse5\n        // consumes the whole token.\n        if (\n          tokenizer.state === 'NAMED_CHARACTER_REFERENCE_STATE' ||\n          tokenizer.state === 'NUMERIC_CHARACTER_REFERENCE_END_STATE'\n        ) {\n          preprocessor.lastChunkWritten = true\n          tokenizer[tokenizer.state](tokenizer._consume())\n        }\n      }\n\n      /**\n       * @param {Node} node\n       */\n      function stitch(node) {\n        stitches = true\n\n        /** @type {Node} */\n        let clone\n\n        // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n        // passed through node).\n        if ('children' in node) {\n          clone = {\n            ...node,\n            children: raw(\n              {type: 'root', children: node.children},\n              file,\n              options\n              // @ts-expect-error Assume a given parent yields a parent.\n            ).children\n          }\n        } else {\n          clone = {...node}\n        }\n\n        // Hack: `value` is supposed to be a string, but as none of the tools\n        // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n        // through.\n        comment({type: 'comment', value: {stitch: clone}})\n      }\n\n      function resetTokenizer() {\n        /* c8 ignore next 2 */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n\n        // Process final characters if they’re still there after hibernating.\n        // Similar to:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js#L95>.\n        const token = tokenizer.currentCharacterToken\n\n        if (token) {\n          token.location.endLine = posTracker.line\n          token.location.endCol = posTracker.col + 1\n          token.location.endOffset = posTracker.offset + 1\n          parser._processToken(token)\n        }\n\n        // Reset tokenizer:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/index.js#L218-L234>.\n        // Especially putting it back in the `data` state is useful: some elements,\n        // like textareas and iframes, change the state.\n        // See GH-7.\n        // But also if broken HTML is in `raw`, and then a correct element is given.\n        // See GH-11.\n        tokenizer.tokenQueue = []\n        tokenizer.state = dataState\n        tokenizer.returnState = ''\n        tokenizer.charRefCode = -1\n        tokenizer.tempBuff = []\n        tokenizer.lastStartTagName = ''\n        tokenizer.consumedAfterSnapshot = -1\n        tokenizer.active = false\n        tokenizer.currentCharacterToken = undefined\n        tokenizer.currentToken = undefined\n        tokenizer.currentAttr = undefined\n      }\n    }\n  )\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction startTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: startTagToken,\n    tagName: node.tagName,\n    selfClosing: false,\n    attrs: attributes(node),\n    location\n  }\n}\n\n/**\n * @param {Element} node\n * @returns {Array<P5Attribute>}\n */\nfunction attributes(node) {\n  return toParse5({\n    tagName: node.tagName,\n    type: 'element',\n    properties: node.properties,\n    children: []\n    // @ts-expect-error Assume element.\n  }).attrs\n}\n\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction endTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: endTagToken,\n    tagName: node.tagName,\n    attrs: [],\n    location\n  }\n}\n\n/**\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot compile `' + node.type + '` node')\n}\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * @param {Node|Stitch} node\n * @returns {P5Location}\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  return {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n}\n\n/**\n * @param {VFile|Options|undefined} value\n * @return {value is Options}\n */\nfunction isOptions(value) {\n  return Boolean(value && !('message' in value && 'messages' in value))\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} Options\n * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Plugin to parse the tree again (and raw nodes).\n * Keeping positional info OK.  🙌\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeRaw(options = {}) {\n  return (tree, file) => {\n    // Assume that when a root was given, it’s also returned.\n    const result = /** @type {Root} */ (raw(tree, file, options))\n    return result\n  }\n}\n","const rtlRange = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nconst ltrRange =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\n/* eslint-disable no-misleading-character-class */\nconst rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']')\nconst ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']')\n/* eslint-enable no-misleading-character-class */\n\n/**\n * Detect the direction of text: left-to-right, right-to-left, or neutral\n *\n * @param {string} value\n * @returns {'rtl'|'ltr'|'neutral'}\n */\nexport function direction(value) {\n  const source = String(value || '')\n  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral'\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement\n */\n\nimport {convertElement} from 'hast-util-is-element'\n\n/**\n * @param {Node} node\n * @returns {node is Parent}\n */\nexport function parent(node) {\n  // @ts-expect-error: hush.\n  return Array.isArray(node.children)\n}\n\n/** @type {IsElement} */\n// @ts-expect-error it works.\nexport const element = convertElement()\n","/**\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').ElementChild} ElementChild\n * @typedef {import('./types.js').Direction} Direction\n * @typedef {import('unist-util-visit/complex-types').Visitor<ElementChild>} Visitor\n */\n\nimport {direction} from 'direction'\nimport {isElement} from 'hast-util-is-element'\nimport {toString} from 'hast-util-to-string'\nimport {svg} from 'property-information'\nimport {visit, EXIT, SKIP} from 'unist-util-visit'\nimport {element} from './util.js'\n\n/**\n * @param {SelectState} state\n * @param {HastNode} node\n * @returns {() => void}\n */\n// eslint-disable-next-line complexity\nexport function enterState(state, node) {\n  const schema = state.schema\n  const language = state.language\n  const currentDirection = state.direction\n  const editableOrEditingHost = state.editableOrEditingHost\n  /** @type {Direction|undefined} */\n  let dirInferred\n  /** @type {boolean|undefined} */\n  let found\n\n  if (element(node) && node.properties) {\n    const lang = node.properties.xmlLang || node.properties.lang\n    const type = node.properties.type || 'text'\n    const dir = dirProperty(node)\n\n    if (lang !== undefined && lang !== null) {\n      state.language = String(lang)\n      found = true\n    }\n\n    if (schema && schema.space === 'html') {\n      if (node.properties.contentEditable === 'true') {\n        state.editableOrEditingHost = true\n        found = true\n      }\n\n      if (isElement(node, 'svg')) {\n        state.schema = svg\n        found = true\n      }\n\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\n      // Explicit `[dir=rtl]`.\n      if (dir === 'rtl') {\n        dirInferred = dir\n      } else if (\n        // Explicit `[dir=ltr]`.\n        dir === 'ltr' ||\n        // HTML with an invalid or no `[dir]`.\n        (dir !== 'auto' && isElement(node, 'html')) ||\n        // `input[type=tel]` with an invalid or no `[dir]`.\n        (dir !== 'auto' && isElement(node, 'input') && type === 'tel')\n      ) {\n        dirInferred = 'ltr'\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n      } else if (dir === 'auto' || isElement(node, 'bdi')) {\n        if (isElement(node, 'textarea')) {\n          // Check contents of `<textarea>`.\n          dirInferred = dirBidi(toString(node))\n        } else if (\n          isElement(node, 'input') &&\n          (type === 'email' ||\n            type === 'search' ||\n            type === 'tel' ||\n            type === 'text')\n        ) {\n          // Check value of `<input>`.\n          // @ts-expect-error something is `never` in types but this is needed.\n          dirInferred = node.properties.value\n            ? // @ts-expect-error Assume string\n              dirBidi(node.properties.value)\n            : 'ltr'\n        } else {\n          // Check text nodes in `node`.\n          visit(node, inferDirectionality)\n        }\n      }\n\n      if (dirInferred) {\n        state.direction = dirInferred\n        found = true\n      }\n    }\n    // Turn off editing mode in non-HTML spaces.\n    else if (state.editableOrEditingHost) {\n      state.editableOrEditingHost = false\n      found = true\n    }\n  }\n\n  return found ? reset : noop\n\n  function reset() {\n    state.schema = schema\n    state.language = language\n    state.direction = currentDirection\n    state.editableOrEditingHost = editableOrEditingHost\n  }\n\n  /** @type {Visitor} */\n  function inferDirectionality(child) {\n    if (child.type === 'text') {\n      dirInferred = dirBidi(child.value)\n      return dirInferred ? EXIT : null\n    }\n\n    if (\n      child !== node &&\n      (isElement(child, ['bdi', 'script', 'style', 'textare']) ||\n        dirProperty(child))\n    ) {\n      return SKIP\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Direction|undefined}\n */\nfunction dirBidi(value) {\n  const result = direction(value)\n  return result === 'neutral' ? undefined : result\n}\n\n/**\n * @param {ElementChild} node\n * @returns {Direction|undefined}\n */\nfunction dirProperty(node) {\n  const value =\n    element(node) && node.properties && typeof node.properties.dir === 'string'\n      ? node.properties.dir.toLowerCase()\n      : undefined\n\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\n    ? value\n    : undefined\n}\n\nfunction noop() {}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').SelectIterator} SelectIterator\n * @typedef {import('./types.js').Handler} Handler\n */\n\nimport {zwitch} from 'zwitch'\nimport {enterState} from './enter-state.js'\nimport {parent, element} from './util.js'\n\nconst own = {}.hasOwnProperty\n\nconst handle = zwitch('nestingOperator', {\n  // @ts-expect-error: hush.\n  unknown: unknownNesting,\n  // @ts-expect-error: hush.\n  invalid: topScan, // `undefined` is the top query selector.\n  handlers: {\n    // @ts-expect-error: hush.\n    null: descendant, // `null` is the descendant combinator.\n    // @ts-expect-error: hush.\n    '>': child,\n    // @ts-expect-error: hush.\n    '+': adjacentSibling,\n    // @ts-expect-error: hush.\n    '~': generalSibling\n  }\n})\n\n/** @type {Handler} */\nexport function nest(query, node, index, parent, state) {\n  handle(query, node, index, parent, state)\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 6 */\n/**\n * @param {{[x: string]: unknown, type: string}} query\n */\nfunction unknownNesting(query) {\n  throw new Error('Unexpected nesting `' + query.nestingOperator + '`')\n}\n\n/** @type {Handler} */\nfunction topScan(query, node, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (parent || index === null) {\n    throw new Error('topScan is supposed to be called from the root node')\n  }\n\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (!state.iterator) {\n    throw new Error('Expected `iterator`')\n  }\n\n  state.iterator(query, node, index, parent, state)\n  if (!state.shallow) descendant(query, node, index, parent, state)\n}\n\n/** @type {Handler} */\nfunction descendant(query, node, index, parent, state) {\n  const previous = state.iterator\n\n  state.iterator = iterator\n  child(query, node, index, parent, state)\n\n  /** @type {SelectIterator} */\n  function iterator(query, node, index, parent, state) {\n    // Shouldn’t happen.\n    /* c8 ignore next 3 */\n    if (!previous) {\n      throw new Error('Expected `iterator`')\n    }\n\n    state.iterator = previous\n    previous(query, node, index, parent, state)\n    state.iterator = iterator\n\n    if (state.one && state.found) return\n\n    child(query, node, index, parent, state)\n  }\n}\n\n/** @type {Handler} */\nfunction child(query, node, _1, _2, state) {\n  if (!parent(node)) return\n  if (node.children.length === 0) return\n  indexedSearch(query, node, state)\n}\n\n/** @type {Handler} */\nfunction adjacentSibling(query, _, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next */\n  if (!parent || index === null) return\n  indexedSearch(query, parent, state, index + 1, true)\n}\n\n/** @type {Handler} */\nfunction generalSibling(query, _, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next */\n  if (!parent || index === null) return\n  indexedSearch(query, parent, state, index + 1)\n}\n\n/**\n * Handles `typeIndex` and `typeCount` properties for every walker.\n *\n * @param {Rule} query\n * @param {Parent} parent\n * @param {SelectState} state\n * @param {number} [from=0]\n * @param {boolean} [firstElementOnly=false]\n */\nfunction indexedSearch(query, parent, state, from, firstElementOnly) {\n  const handle = state.index ? delay : add\n  const children = parent.children\n  let elements = 0\n  let index = -1\n  /** @type {Record<string, number>} */\n  const types = {}\n  /** @type {Array<Function>} */\n  const delayed = []\n\n  // Start looking at `from`\n  if (from === undefined || from === null) from = 0\n\n  // Exit if there are no further nodes.\n  if (from >= children.length) return\n\n  // If we need to index for types, do so for all elements before `from`.\n  if (state.index) {\n    while (++index < from) {\n      const child = children[index]\n      if (element(child)) count(child.tagName)\n    }\n  }\n\n  index = from - 1\n\n  while (++index < children.length) {\n    const child = children[index]\n    // Only check elements.\n    // Check either all elements, or only check the first sibling\n    if (element(child)) {\n      handle(child, index)\n\n      // Stop if we’re looking for one node and it’s already found.\n      if (state.one && state.found) return\n      if (firstElementOnly) break\n    }\n  }\n\n  if (state.index) {\n    index = -1\n\n    while (++index < delayed.length) {\n      delayed[index]()\n      if (state.one && state.found) return\n    }\n  }\n\n  /**\n   * @param {Element} node\n   * @param {number} childIndex\n   */\n  function delay(node, childIndex) {\n    const elementsBefore = elements\n    const elementsByTypeBefore = own.call(types, node.tagName)\n      ? types[node.tagName]\n      : 0\n\n    count(node.tagName)\n\n    delayed.push(fn)\n\n    function fn() {\n      // Before counting further elements:\n      state.elementIndex = elementsBefore\n      state.typeIndex = elementsByTypeBefore\n\n      // After counting all elements.\n      state.elementCount = elements\n      state.typeCount = types[node.tagName]\n\n      add(node, childIndex)\n    }\n  }\n\n  /**\n   * @param {Element} node\n   * @param {number} childIndex\n   */\n  function add(node, childIndex) {\n    const exit = enterState(state, node)\n\n    // Shouldn’t happen.\n    /* c8 ignore next 3 */\n    if (!state.iterator) {\n      throw new Error('Expected `iterator`')\n    }\n\n    state.iterator(query, node, childIndex, parent, state)\n    exit()\n  }\n\n  /**\n   * @param {string} name\n   */\n  function count(name) {\n    if (!own.call(types, name)) types[name] = 0\n    elements++\n    types[name]++\n  }\n}\n","/**\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\n * for more information on the algorithms.\n */\n\n/**\n * @typedef {string} Tag\n * @typedef {Array<Tag>} Tags\n * @typedef {string} Range\n * @typedef {Array<Range>} Ranges\n *\n * @callback Check\n * @param {Tag} tag\n * @param {Range} range\n * @returns {boolean}\n *\n * @typedef {FilterOrLookup<true>} Filter\n * @typedef {FilterOrLookup<false>} Lookup\n */\n\n/**\n * @template {boolean} IsFilter\n * @callback FilterOrLookup\n * @param {Tag|Tags} tags\n * @param {Range|Ranges} [ranges='*']\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\n */\n\n/**\n * Factory to perform a filter or a lookup.\n * This factory creates a function that accepts a list of tags and a list of\n * ranges, and contains logic to exit early for lookups.\n * `check` just has to deal with one tag and one range.\n * This match function iterates over ranges, and for each range,\n * iterates over tags.  That way, earlier ranges matching any tag have\n * precedence over later ranges.\n *\n * @template {boolean} IsFilter\n * @param {Check} check\n * @param {IsFilter} filter\n * @returns {FilterOrLookup<IsFilter>}\n */\nfunction factory(check, filter) {\n  return function (tags, ranges) {\n    let left = cast(tags, 'tag')\n    const right = cast(\n      ranges === null || ranges === undefined ? '*' : ranges,\n      'range'\n    )\n    /** @type {Tags} */\n    const matches = []\n    let rightIndex = -1\n\n    while (++rightIndex < right.length) {\n      const range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      let leftIndex = -1\n      /** @type {Tags} */\n      const next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) {\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n              left[leftIndex]\n            )\n          }\n\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n      filter ? matches : undefined\n    )\n  }\n}\n\n/**\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\n * of basic language ranges (Section 2.1) to sets of language tags.\n */\nexport const basicFilter = factory(function (tag, range) {\n  return range === '*' || tag === range || tag.includes(range + '-')\n}, true)\n\n/**\n * Extended Filtering (Section 3.3.2) matches a language priority list\n * consisting of extended language ranges (Section 2.2) to sets of language\n * tags.\n */\nexport const extendedFilter = factory(function (tag, range) {\n  // 3.3.2.1\n  const left = tag.split('-')\n  const right = range.split('-')\n  let leftIndex = 0\n  let rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}, true)\n\n/**\n * Lookup (Section 3.4) matches a language priority list consisting of basic\n * language ranges to sets of language tags to find the one exact language tag\n * that best matches the range.\n */\nexport const lookup = factory(function (tag, range) {\n  let right = range\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    let index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}, false)\n\n/**\n * Validate tags or ranges, and cast them to arrays.\n *\n * @param {string|Array<string>} values\n * @param {string} name\n * @returns {Array<string>}\n */\nfunction cast(values, name) {\n  const value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n * @typedef {import('./types.js').RulePseudoSelector} RulePseudoSelector\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').ElementChild} ElementChild\n */\n\nimport {extendedFilter} from 'bcp-47-match'\nimport {parse as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {isElement} from 'hast-util-is-element'\nimport {whitespace} from 'hast-util-whitespace'\nimport {zwitch} from 'zwitch'\nimport {any} from './any.js'\n\nconst handle = zwitch('name', {\n  // @ts-expect-error: hush.\n  unknown: unknownPseudo,\n  invalid: invalidPseudo,\n  handlers: {\n    // @ts-expect-error: hush.\n    any: matches,\n    // @ts-expect-error: hush.\n    'any-link': anyLink,\n    // @ts-expect-error: hush.\n    blank,\n    // @ts-expect-error: hush.\n    checked,\n    // @ts-expect-error: hush.\n    dir,\n    // @ts-expect-error: hush.\n    disabled,\n    // @ts-expect-error: hush.\n    empty,\n    // @ts-expect-error: hush.\n    enabled,\n    // @ts-expect-error: hush.\n    'first-child': firstChild,\n    // @ts-expect-error: hush.\n    'first-of-type': firstOfType,\n    // @ts-expect-error: hush.\n    has,\n    // @ts-expect-error: hush.\n    lang,\n    // @ts-expect-error: hush.\n    'last-child': lastChild,\n    // @ts-expect-error: hush.\n    'last-of-type': lastOfType,\n    // @ts-expect-error: hush.\n    matches,\n    // @ts-expect-error: hush.\n    not,\n    // @ts-expect-error: hush.\n    'nth-child': nthChild,\n    // @ts-expect-error: hush.\n    'nth-last-child': nthLastChild,\n    // @ts-expect-error: hush.\n    'nth-of-type': nthOfType,\n    // @ts-expect-error: hush.\n    'nth-last-of-type': nthLastOfType,\n    // @ts-expect-error: hush.\n    'only-child': onlyChild,\n    // @ts-expect-error: hush.\n    'only-of-type': onlyOfType,\n    // @ts-expect-error: hush.\n    optional,\n    // @ts-expect-error: hush.\n    'read-only': readOnly,\n    // @ts-expect-error: hush.\n    'read-write': readWrite,\n    // @ts-expect-error: hush.\n    required,\n    // @ts-expect-error: hush.\n    root,\n    // @ts-expect-error: hush.\n    scope\n  }\n})\n\npseudo.needsIndex = [\n  'first-child',\n  'first-of-type',\n  'last-child',\n  'last-of-type',\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type',\n  'only-child',\n  'only-of-type'\n]\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function pseudo(query, element, index, parent, state) {\n  const pseudos = query.pseudos\n  let offset = -1\n\n  while (++offset < pseudos.length) {\n    if (!handle(pseudos[offset], element, index, parent, state)) return false\n  }\n\n  return true\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction matches(query, element, _1, _2, state) {\n  const shallow = state.shallow\n  const one = state.one\n\n  state.shallow = true\n  state.one = true\n\n  const result = any(query.value, element, state)[0] === element\n\n  state.shallow = shallow\n  state.one = one\n\n  return result\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction not(query, element, index, parent, state) {\n  return !matches(query, element, index, parent, state)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction anyLink(_, element) {\n  return (\n    isElement(element, ['a', 'area', 'link']) && hasProperty(element, 'href')\n  )\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction checked(_, element) {\n  if (isElement(element, ['input', 'menuitem'])) {\n    return Boolean(\n      element.properties &&\n        (element.properties.type === 'checkbox' ||\n          element.properties.type === 'radio') &&\n        hasProperty(element, 'checked')\n    )\n  }\n\n  if (isElement(element, 'option')) {\n    return hasProperty(element, 'selected')\n  }\n\n  return false\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction dir(query, _1, _2, _3, state) {\n  return state.direction === query.value\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction disabled(_, element) {\n  return (\n    isElement(element, [\n      'button',\n      'input',\n      'select',\n      'textarea',\n      'optgroup',\n      'option',\n      'menuitem',\n      'fieldset'\n    ]) && hasProperty(element, 'disabled')\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction enabled(query, element) {\n  return !disabled(query, element)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction required(_, element) {\n  return (\n    isElement(element, ['input', 'textarea', 'select']) &&\n    hasProperty(element, 'required')\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction optional(query, element) {\n  return !required(query, element)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readWrite(_, element, _1, _2, state) {\n  return isElement(element, ['input', 'textarea'])\n    ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled')\n    : Boolean(state.editableOrEditingHost)\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} element\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readOnly(query, element, index, parent, state) {\n  return !readWrite(query, element, index, parent, state)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction root(_, element, _1, parent, state) {\n  return Boolean(\n    (!parent || parent.type === 'root') &&\n      state.schema &&\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\n      isElement(element, ['html', 'svg'])\n  )\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction scope(_, element, _1, _2, state) {\n  return Boolean(\n    isElement(element) &&\n      state.scopeElements &&\n      state.scopeElements.includes(element)\n  )\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction empty(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return child.type === 'element' || child.type === 'text'\n  }\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction blank(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return (\n      child.type === 'element' || (child.type === 'text' && !whitespace(child))\n    )\n  }\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementIndex === 0\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lang(query, _1, _2, _3, state) {\n  return (\n    state.language !== '' &&\n    state.language !== undefined &&\n    state.language !== null &&\n    // @ts-expect-error never `selectors`.\n    extendedFilter(state.language, commas(query.value)).length > 0\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    state.elementCount && state.elementIndex === state.elementCount - 1\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementCount === 1\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.elementIndex === 'number' && query.value(state.elementIndex)\n  )\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    typeof state.elementCount === 'number' &&\n      typeof state.elementIndex === 'number' &&\n      query.value(state.elementCount - state.elementIndex - 1)\n  )\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && query.value(state.typeIndex)\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    typeof state.typeIndex === 'number' &&\n    query.value(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n/**\n * @param {Element} element\n * @param {(child: ElementChild) => boolean} check\n * @returns {boolean}\n */\nfunction someChildren(element, check) {\n  const children = element.children\n  let index = -1\n\n  while (++index < children.length) {\n    if (check(children[index])) return true\n  }\n\n  return false\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  throw new Error('Invalid pseudo-selector')\n}\n\n/**\n * @param {RulePseudo} query\n */\nfunction unknownPseudo(query) {\n  if (query.name) {\n    throw new Error('Unknown pseudo-selector `' + query.name + '`')\n  }\n\n  throw new Error('Unexpected pseudo-element or empty pseudo-class')\n}\n\n/**\n * @param {SelectState} state\n * @param {RulePseudo|RulePseudoNth} query\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction has(query, element, _2, _3, state) {\n  const shallow = state.shallow\n  const one = state.one\n  const scopeElements = state.scopeElements\n  const value = appendScope(query.value)\n\n  state.shallow = false\n  state.one = true\n  state.scopeElements = [element]\n\n  const result = any(value, element, state).length > 0\n\n  state.shallow = shallow\n  state.one = one\n  state.scopeElements = scopeElements\n\n  return result\n}\n\n/**\n * @param {Selector} value\n * @returns {Selectors}\n */\nfunction appendScope(value) {\n  /** @type {Selectors} */\n  const selector =\n    value.type === 'ruleSet' ? {type: 'selectors', selectors: [value]} : value\n  let index = -1\n\n  while (++index < selector.selectors.length) {\n    const rule = selector.selectors[index].rule\n    rule.nestingOperator = null\n\n    if (\n      !rule.pseudos ||\n      rule.pseudos.length !== 1 ||\n      rule.pseudos[0].name !== 'scope'\n    ) {\n      selector.selectors[index] = {\n        type: 'ruleSet',\n        // @ts-expect-error pseudos are fine w/ just a name!\n        rule: {type: 'rule', rule, pseudos: [{name: 'scope'}]}\n      }\n    }\n  }\n\n  return selector\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleAttr} RuleAttr\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Schema} Schema\n * @typedef {import('./types.js').Info} Info\n * @typedef {import('./types.js').PropertyValue} PropertyValue\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {zwitch} from 'zwitch'\n\nconst handle = zwitch('operator', {\n  // @ts-expect-error: hush.\n  unknown: unknownOperator,\n  // @ts-expect-error: hush.\n  invalid: exists,\n  handlers: {\n    // @ts-expect-error: hush.\n    '=': exact,\n    // @ts-expect-error: hush.\n    '~=': spaceSeparatedList,\n    // @ts-expect-error: hush.\n    '|=': exactOrPrefix,\n    // @ts-expect-error: hush.\n    '^=': begins,\n    // @ts-expect-error: hush.\n    '$=': ends,\n    // @ts-expect-error: hush.\n    '*=': contains\n  }\n})\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @param {Schema} schema\n * @returns {boolean}\n */\nexport function attribute(query, element, schema) {\n  const attrs = query.attrs\n  let index = -1\n\n  while (++index < attrs.length) {\n    if (!handle(attrs[index], element, find(schema, attrs[index].name))) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * `[attr]`\n *\n * @param {RuleAttr} _\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exists(_, element, info) {\n  return hasProperty(element, info.property)\n}\n\n/**\n * `[attr=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exact(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      normalizeValue(element.properties[info.property], info) === query.value\n  )\n}\n\n/**\n * `[attr~=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction spaceSeparatedList(query, element, info) {\n  const value = element.properties && element.properties[info.property]\n\n  return (\n    // If this is a comma-separated list, and the query is contained in it, return\n    // true.\n    (!info.commaSeparated &&\n      value &&\n      typeof value === 'object' &&\n      query.value &&\n      value.includes(query.value)) ||\n    // For all other values (including comma-separated lists), return whether this\n    // is an exact match.\n    (hasProperty(element, info.property) &&\n      normalizeValue(value, info) === query.value)\n  )\n}\n\n/**\n * `[attr|=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exactOrPrefix(query, element, info) {\n  const value = normalizeValue(\n    element.properties && element.properties[info.property],\n    info\n  )\n\n  return Boolean(\n    hasProperty(element, info.property) &&\n      query.value &&\n      (value === query.value ||\n        (value.slice(0, query.value.length) === query.value &&\n          value.charAt(query.value.length) === '-'))\n  )\n}\n\n/**\n * `[attr^=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction begins(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        0,\n        query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * `[attr$=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction ends(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        -query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * `[attr*=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction contains(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).includes(\n        query.value\n      )\n  )\n}\n\n// Shouldn’t be called, Parser throws an error instead.\n/**\n * @param {RuleAttr} query\n * @returns {boolean}\n */\n/* c8 ignore next 3 */\nfunction unknownOperator(query) {\n  throw new Error('Unknown operator `' + query.operator + '`')\n}\n\n/**\n * Stringify a hast value back to its HTML form.\n *\n * @param {PropertyValue} value\n * @param {Info} info\n * @returns {string}\n */\nfunction normalizeValue(value, info) {\n  if (typeof value === 'boolean') {\n    return info.attribute\n  }\n\n  if (Array.isArray(value)) {\n    return (info.commaSeparated ? commas : spaces)(value)\n  }\n\n  return String(value)\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\nimport {element} from './util.js'\n\n/**\n * @param {Rule} query\n * @param {HastNode} node\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function test(query, node, index, parent, state) {\n  return Boolean(\n    element(node) &&\n      state.schema &&\n      (!query.tagName || name(query, node)) &&\n      (!query.classNames || className(query, node)) &&\n      (!query.id || id(query, node)) &&\n      (!query.attrs || attribute(query, node, state.schema)) &&\n      (!query.pseudos || pseudo(query, node, index, parent, state))\n  )\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function name(query, element) {\n  return query.tagName === '*' || query.tagName === element.tagName\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function className(query, element) {\n  /** @type {Array<string>} */\n  // @ts-expect-error Assume array.\n  const value = element.properties.className || []\n  let index = -1\n\n  if (query.classNames) {\n    while (++index < query.classNames.length) {\n      if (!value.includes(query.classNames[index])) return false\n    }\n  }\n\n  return true\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function id(query, element) {\n  return Boolean(element.properties && element.properties.id === query.id)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').SelectIterator} SelectIterator\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {html, svg} from 'property-information'\nimport {zwitch} from 'zwitch'\nimport {enterState} from './enter-state.js'\nimport {nest} from './nest.js'\nimport {pseudo} from './pseudo.js'\nimport {test} from './test.js'\n\nconst type = zwitch('type', {\n  // @ts-expect-error: hush.\n  unknown: unknownType,\n  invalid: invalidType,\n  // @ts-expect-error: hush.\n  handlers: {selectors, ruleSet, rule}\n})\n\n/**\n * @param {Selectors|RuleSet|Rule} query\n * @param {HastNode|undefined} node\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nexport function any(query, node, state) {\n  // @ts-expect-error zwitch types are off.\n  return query && node ? type(query, node, state) : []\n}\n\n/**\n * @param {Selectors} query\n * @param {HastNode} node\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nfunction selectors(query, node, state) {\n  const collector = new Collector(state.one)\n  let index = -1\n\n  while (++index < query.selectors.length) {\n    collector.collectAll(ruleSet(query.selectors[index], node, state))\n  }\n\n  return collector.result\n}\n\n/**\n * @param {RuleSet} query\n * @param {HastNode} node\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nfunction ruleSet(query, node, state) {\n  return rule(query.rule, node, state)\n}\n\n/**\n * @param {Rule} query\n * @param {HastNode} tree\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nfunction rule(query, tree, state) {\n  const collector = new Collector(state.one)\n\n  if (state.shallow && query.rule) {\n    throw new Error('Expected selector without nesting')\n  }\n\n  nest(\n    query,\n    tree,\n    0,\n    null,\n    configure(query, {\n      schema: state.space === 'svg' ? svg : html,\n      language: undefined,\n      direction: 'ltr',\n      editableOrEditingHost: false,\n      // @ts-expect-error assume elements.\n      scopeElements: tree.type === 'root' ? tree.children : [tree],\n      iterator,\n      one: state.one,\n      shallow: state.shallow\n    })\n  )\n\n  return collector.result\n\n  /** @type {SelectIterator} */\n  function iterator(query, node, index, parent, state) {\n    const exit = enterState(state, node)\n\n    if (test(query, node, index, parent, state)) {\n      if (query.rule) {\n        nest(query.rule, node, index, parent, configure(query.rule, state))\n      } else {\n        // @ts-expect-error `test` also asserts `node is Element`\n        collector.collect(node)\n        state.found = true\n      }\n    }\n\n    exit()\n  }\n\n  /**\n   * @template {SelectState} S\n   * @param {Rule} query\n   * @param {S} state\n   * @returns {S}\n   */\n  function configure(query, state) {\n    const pseudos = query.pseudos || []\n    let index = -1\n\n    while (++index < pseudos.length) {\n      if (pseudo.needsIndex.includes(pseudos[index].name)) {\n        state.index = true\n        break\n      }\n    }\n\n    return state\n  }\n}\n\n// Shouldn’t be called, all data is handled.\n/* c8 ignore next 6 */\n/**\n * @param {{[x: string]: unknown, type: string}} query\n */\nfunction unknownType(query) {\n  throw new Error('Unknown type `' + query.type + '`')\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidType() {\n  throw new Error('Invalid type')\n}\n\nclass Collector {\n  /**\n   * @param {boolean|undefined} [one]\n   */\n  constructor(one) {\n    /** @type {Array<Element>} */\n    this.result = []\n    /** @type {boolean|undefined} */\n    this.one = one\n    /** @type {boolean} */\n    this.found = false\n  }\n\n  /**\n   * Append nodes to array, filtering out duplicates.\n   *\n   * @param {Array<Element>} elements\n   */\n  collectAll(elements) {\n    let index = -1\n\n    while (++index < elements.length) {\n      this.collect(elements[index])\n    }\n  }\n\n  /**\n   * Append one node.\n   *\n   * @param {Element} element\n   */\n  collect(element) {\n    if (this.one) {\n      // Shouldn’t happen, safeguards performance problems.\n      /* c8 ignore next */\n      if (this.found) return\n      this.found = true\n    }\n\n    if (!this.result.includes(element)) this.result.push(element)\n  }\n}\n",null,null,null,"/**\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n */\n\nimport {CssSelectorParser} from 'css-selector-parser'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\nconst nth = new Set([\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type'\n])\n\nconst parser = new CssSelectorParser()\n\n// @ts-expect-error: hush.\nconst compile = zwitch('type', {handlers: {selectors, ruleSet, rule}})\n\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*')\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has')\nparser.registerNestingOperators('>', '+', '~')\n\n/**\n * @param {string} selector\n * @returns {Selector}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  // @ts-expect-error types are wrong.\n  return compile(parser.parse(selector))\n}\n\n/**\n * @param {Selectors} query\n * @returns {Selectors}\n */\nfunction selectors(query) {\n  let index = -1\n\n  while (++index < query.selectors.length) {\n    compile(query.selectors[index])\n  }\n\n  return query\n}\n\n/**\n * @param {RuleSet} query\n * @returns {Rule}\n */\nfunction ruleSet(query) {\n  return rule(query.rule)\n}\n\n/**\n * @param {Rule} query\n * @returns {Rule}\n */\nfunction rule(query) {\n  const pseudos = query.pseudos || []\n  let index = -1\n\n  while (++index < pseudos.length) {\n    const pseudo = pseudos[index]\n\n    if (nth.has(pseudo.name)) {\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.value = nthCheck(pseudo.value)\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.valueType = 'function'\n    }\n  }\n\n  compile(query.rule)\n\n  return query\n}\n","/**\n * @typedef {import('./lib/types.js').Element} Element\n * @typedef {import('./lib/types.js').HastNode} HastNode\n * @typedef {import('./lib/types.js').Space} Space\n */\n\nimport {any} from './lib/any.js'\nimport {parse} from './lib/parse.js'\n\n/**\n * @param {string} selector\n * @param {HastNode} [node]\n * @param {Space} [space]\n * @returns {boolean}\n */\nexport function matches(selector, node, space) {\n  return Boolean(\n    any(parse(selector), node, {space, one: true, shallow: true})[0]\n  )\n}\n\n/**\n * @param {string} selector\n * @param {HastNode} [node]\n * @param {Space} [space]\n * @returns {Element|null}\n */\nexport function select(selector, node, space) {\n  return any(parse(selector), node, {space, one: true})[0] || null\n}\n\n/**\n * @param {string} selector\n * @param {HastNode} [node]\n * @param {Space} [space]\n * @returns {Array<Element>}\n */\nexport function selectAll(selector, node, space) {\n  return any(parse(selector), node, {space})\n}\n","import { Plugin } from 'unified';\nimport { Root, Element, ElementContent, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { selectAll } from 'hast-util-select';\nimport { Test } from 'unist-util-is';\n\n/** Get the node tree source code string */\nexport const getCodeString = (data: ElementContent[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\n      code += getCodeString(node.children);\n    }\n  });\n  return code;\n};\n\nexport type RehypeRewriteOptions = {\n  /**\n   * Select an element to be wrapped. Expects a string selector that can be passed to hast-util-select ([supported selectors](https://github.com/syntax-tree/hast-util-select/blob/master/readme.md#support)).\n   * If `selector` is not set then wrap will check for a body all elements.\n   */\n  selector?: string;\n  /** Rewrite Element. */\n  rewrite(node: Root | RootContent, index: number | null, parent: Root | Element | null): void;\n}\n\nconst remarkRewrite: Plugin<[RehypeRewriteOptions?], Root> = (options) => {\n  const { selector, rewrite } = options || {};\n  return (tree) => {\n    if (!rewrite || typeof rewrite !== 'function') return;\n    if (selector && typeof selector === 'string') {\n      const selected = selectAll(selector, tree);\n      if (selected && selected.length > 0) {\n        visit(tree, selected as unknown as Test, (node: Element, index, parent) => {\n          rewrite(node, index, parent);\n        });\n      }\n      return;\n    }\n\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      rewrite(node, index, parent);\n    });\n  }\n}\n\nexport default remarkRewrite;\n","/**\n * @typedef {import('hast').Root} Root\n */\n\nimport Slugger from 'github-slugger'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\nconst slugs = new Slugger()\n\n/**\n * Plugin to add `id`s to headings.\n *\n * @type {import('unified').Plugin<Array<void>, Root>}\n */\nexport default function rehypeSlug() {\n  return (tree) => {\n    slugs.reset()\n\n    visit(tree, 'element', (node) => {\n      if (headingRank(node) && node.properties && !hasProperty(node, 'id')) {\n        node.properties.id = slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [{character: '~', inConstruct: 'phrasing'}],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|Array<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {Array<Array<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","var own = {}.hasOwnProperty\n\n/**\n * @callback Handler\n * @param {...unknown} value\n * @return {unknown}\n *\n * @typedef {Record<string, Handler>} Handlers\n *\n * @typedef {Object} Options\n * @property {Handler} [unknown]\n * @property {Handler} [invalid]\n * @property {Handlers} [handlers]\n */\n\n/**\n * Handle values based on a property.\n *\n * @param {string} key\n * @param {Options} [options]\n */\nexport function zwitch(key, options) {\n  var settings = options || {}\n\n  /**\n   * Handle one value.\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @param {...unknown} [value]\n   * @this {unknown}\n   * @returns {unknown}\n   * @property {Handler} invalid\n   * @property {Handler} unknown\n   * @property {Handlers} handlers\n   */\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    if (fn) {\n      return fn.apply(this, arguments)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n"],"names":["testMatches","importName","test","Array","isArray","some","regex","RegExp","module","exports","trueFunc","falseFunc","parser_context_1","require","render_1","CssSelectorParser","this","pseudos","attrEqualityMods","ruleNestingOperators","substitutesEnabled","prototype","registerSelectorPseudos","_i","arguments","length","_a","pseudos_1","pseudo","unregisterSelectorPseudos","pseudos_2","registerNumericPseudos","pseudos_3","unregisterNumericPseudos","pseudos_4","registerNestingOperators","operators","operators_1","operator","unregisterNestingOperators","operators_2","registerAttrEqualityMods","mods","mods_1","mod","unregisterAttrEqualityMods","mods_2","enableSubstitutes","disableSubstitutes","parse","str","parseCssSelector","render","path","renderEntity","trim","Object","defineProperty","value","utils_1","pos","l","chr","getStr","quote","escapeTable","result","charAt","esc","undefined","isHex","hex","String","fromCharCode","parseInt","getIdent","isIdent","Error","identSpecialChars","skipWhitespace","parseSelector","selector","parseSingleSelector","res","type","selectors","push","rule","parseRule","currentRule","op","nestingOperator","tagName","isIdentStart","classNames","id","attr","name","attrValue","valueType","doubleQuotesEscapeChars","singleQuoteEscapeChars","attrs","pseudoName","entity","currentEntity","parts","join","map","escapeIdentifier","cn","escapeStr","c","s","len","i","charCode","charCodeAt","extraCharCode","toString","replacement","strReplacementsRev","n","r","t","f","hasOwn","hasOwnProperty","toStr","gOPD","getOwnPropertyDescriptor","arr","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","enumerable","configurable","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","deep","BananaSlug","own","reset","slugger","string","maintainCase","toLowerCase","replace","slug","self","originalSlug","occurrences","create","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","end","source","content","errorsList","error","msg","err","reason","filename","silent","re","m","exec","slice","comments","rules","comment","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","getURLParameters","url","reduce","a","v","indexOf","getMetaId","meta","isMeta","includes","encodeCache","encode","exclude","keepEscaped","code","nextCode","cache","defaultChars","ch","toUpperCase","getEncodeCache","encodeURIComponent","componentChars","parsePart","split","lhs","sep","rhs","incr","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","ExpandIcon","_jsx","viewBox","fill","children","d","CopyIcon","_jsxs","CopySuccessIcon","Copied","useState","copied","setCopied","onClick","copyTextToClipboard","text","timer","setTimeout","clearTimeout","forwardRef","ref","showCode","setShowCode","toolbar","bordered","disableCheckered","disablePreview","disableCode","disableToolbar","background","toolbarExtra","prefixCls","className","other","cls","filter","Boolean","backgroundColor","backgroundImage","u","b","Symbol","for","e","g","h","k","p","q","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","Compiler","tree","toMarkdown","assign","data","extensions","character","expected","index","count","maximum","configure","base","extension","concat","_","context","exit","enter","indentLines","flow","blank","safe","unsafe","patternInScope","stack","before","sequence","subexit","marker","checkFence","raw","suffix","formatCodeAsIndented","repeat","Math","max","streak","lang","after","checkQuote","association","title","emphasis","peek","checkEmphasis","phrasing","rank","min","depth","formatHeadingAsSetext","closeAtx","html","imageReference","reference","referenceType","alt","image","blockquote","definition","hardBreak","heading","inlineCode","link","linkReference","list","listItem","paragraph","root","strong","thematicBreak","patternCompile","parent","pattern","expression","atBreak","formatLinkAsAutolink","size","bullet","checkBullet","listItemIndent","checkListItemIndent","ordered","incrementListMarker","spread","ceil","checkStrong","safeOptions","checkRule","ruleSpaces","checkRepeat","settings","pop","handlers","defaultUnsafe","defaultJoin","defaultHandlers","tightDefinitions","joinDefinition","handle","zwitch","invalid","unknown","left","right","inConstruct","label","identifier","characterEscape","characterReference","decodeIfPossible","decode","$0","$1","fence","repetition","ruleRepetition","child","results","between","Number","fences","setext","resourceLink","eol","one","_compiled","listInScope","none","notInConstruct","input","config","positions","infos","sort","numerical","escapeBackslashes","whole","all","values","el","characters","char","document","createElement","innerHTML","textContent","fn","noop","apply","Function","unified","stringify","use","freeze","getPrototypeOf","encoding","transforms","canContainEols","autolink","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","blockQuote","codeFenced","codeFlow","codeFencedFenceInfo","buffer","codeFencedFenceMeta","codeIndented","codeText","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","hardBreakEscape","hardBreakTrailing","htmlFlow","htmlFlowData","htmlText","htmlTextData","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","lineEnding","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","compile","events","handler","tokenStack","listStack","resume","setData","getData","prepareList","sliceSerialize","stringifyPosition","point","offset","tailIndex","lineIndex","tailEvent","event","firstBlankLineIndex","atMarker","containerBalance","listSpread","_spread","splice","and","open","token","close","normalizeIdentifier","siblings","tail","fragment","safeFromInt","checked","compiler","postprocess","parser","write","preprocessor","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiDigit","asciiHexDigit","asciiPunctuation","unicodePunctuationRegex","unicodePunctuation","unicodeWhitespace","text$1","attention","headingAtx","labelEnd","labelStartImage","labelStartLink","setextUnderline","contentInitial","flowInitial","insideSpan","null","resolver","disable","markdownLineEnding","factorySpace","tokenize","effects","previous","contentStart","attempt","constructs","consume","lineStart","contentType","next","partialBlankLine","inspectResult","childFlow","childToken","continued","inspectConstruct","ok","subcontinued","inspectStart","containerState","continuation","inspectContinue","inspectLess","currentConstruct","concrete","flowContinue","inspectDone","interrupt","interruptible","containerConstruct","inspectFlowEnd","_closeFlow","lazy","lazyFlowConstruct","check","inspectLazy","flowEnd","partial","documentContinue","documentContinued","flowStart","containerContinue","exitContainers","now","_tokenizer","continueFlow","documentAfterPeek","defineSkip","sliceStream","nok","initial","afterConstruct","shallow","initializeFactory","resolveAll","createResolver","field","notText","resolveAllLineSuffixes","extraResolver","chunks","chunk","bufferIndex","tabs","eventIndex","_index","_bufferIndex","combineExtensions","createTokenizer","miniflat","defined","initializer","from","subtokenize","search","atCarriageReturn","startPosition","endPosition","lastIndex","chunkedPush","chunkedSplice","classifyCharacter","movePoint","_open","_close","group","openingSequence","closingSequence","nextEvents","asciiControl","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","markdownSpace","_container","decodeEntity","_interopDefaultLegacy","default","decodeEntity__default","numeric","markdownLineEndingOrSpace","prefixSize","closingFenceConstruct","closingSequenceStart","sizeOpen","closingSequenceEnd","initialPrefix","sequenceOpen","infoOpen","openAfter","info","infoAfter","contentContinue","indentedContentConstruct","afterPrefix","resolve","gap","tailExitIndex","headEnterIndex","contentEnd","continuationConstruct","prefixed","factoryDestination","factoryLabel","factoryWhitespace","factoryTitle","labelAfter","titleConstruct","literalType","literalMarkerType","rawType","stringType","limit","Infinity","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","markerType","labelEscape","prefix","atFirstTitleBreak","atTitleBreak","titleEscape","seen","fenceOpenInside","headingBreak","htmlBlockNames","htmlRawNames","kind","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","done","continuationRawEndTag","resolveTo","returnState","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","media","_used","destinationAfter","afterLabel","sizeChunks","initialSize","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","items","remove","parameters","chunkStart","unshift","hook","existing","add","serializeChunks","sliceChunks","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","main","state","chunkIndex","go","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","called","atTab","view","startIndex","startBufferIndex","endIndex","endBufferIndex","subcontent","stream","entered","adjust","startPositions","tokenizer","childEvents","jumps","gaps","isInFirstContentOfListItem","_gfmTasklistFirstContentOfListItem","otherIndex","otherEvent","subevents","more","_movePreviousLineEndings","Parser","doc","fromMarkdown","wrap","trough","fns","middleware","params","callback","invoked","then","bail","plain","vfile","frozen","attachers","transformers","namespace","freezeIndex","processor","assertUnfrozen","addPlugin","addList","addPreset","plugins","plugin","entry","find","file","assertParser","newable","assertCompiler","assertNode","run","runSync","complete","assertDone","process","processSync","destination","transformer","cb","Promise","executor","reject","pipeline","ctx","contents","keys","asyncName","VMessagePrototype","VMessage","proto","origin","range","parseOrigin","message","ruleId","fatal","proc","VFile","order","messages","history","cwd","assertPart","part","assertNonEmpty","assertPath","get","set","dirname","basename","extname","stem","fail","normalize","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","ext","firstNonSlashEnd","seenNonSlash","extIndex","unmatchedSlash","startDot","startPart","preDotState","joined","num","substr","iterator","output","hasIterator","arr2","__esModule","ReferenceError","instance","Constructor","_defineProperties","descriptor","protoProps","staticProps","unsupportedIterableToArray","o","allowArrayLike","it","F","_e","normalCompletion","didErr","step","_e2","isNativeReflectConstruct","possibleConstructorReturn","Derived","hasNativeReflectConstruct","Super","NewTarget","Reflect","superPropBase","_get","bind","receiver","desc","_getPrototypeOf","setPrototypeOf","__proto__","subClass","superClass","sham","Proxy","valueOf","_s","_arr","_n","_d","_typeof","assertThisInitialized","_setPrototypeOf","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arrayLikeToArray","minLen","tokens","padRight","padLeft","decodeNamedCharacterReference","hasProperty","properties","headingRank","convertElement","POSITIVE_INFINITY","tagNameFactory","anyFactory","castFactory","tests","checks","thing","subvalue","defaultTagName","buttonTypes","Set","core","schema","caseSensitive","createAdjustMap","isProperties","addProperty","addChild","has","isNaN","spaceSeparated","spaces","commaSeparated","commas","commaOrSpaceSeparated","parsePrimitive","finalResult","nodes","boolean","overloadedBoolean","blankLine","syntaxExtension","decodeNumericCharacterReference","characterEscapeOrReference","decodeString","$2","head","characterEntitiesLegacy","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","parseEntities","indent","additional","queue","following","begin","characterReferenceCharacters","terminated","namedReference","diff","nonTerminated","warning","attribute","referenceCode","prohibited","disallowed","flush","referenceContext","warningContext","textContext","Schema","normal","space","merge","definitions","DefinedInfo","transform","attributes","mustUseProperty","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","align","aLink","archive","axis","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","Type","Info","rest","camelcase","dashes","kebab","hastToReact","types","mark","powers","increment","VFileMessage","place","actual","note","segments","isUrl","fileURLOrPath","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","stored","_toArray","iterableToArray","toStringTag","fnExpectsCallback","exception","middlewareIndex","middelware","attacher","isPlainObj","looksLikeAVFile","includeImageAlt","lineStartOffset","item","checkNewContainers","closeFlow","indexBeforeExits","indexBeforeFlow","_gfmTableDynamicInterruptHack","thereIsANewContainer","thereIsNoNewContainer","writeToChild","eof","_isInFirstContentOfListItem","current","breaks","expandTabs","def","handleMapOfConstructs","afterStartPrefix","indentedContent","htmlLineEnd","nonLazyLine","attentionMarkers","resolveText","defaultOnError","errorHandler","onExitError","ancestor","defaultConstructs","preprocess","combined","clean","augment","passThrough","returnNode","unknownHandler","characterReferences","sanitizeUri","skip","normalizeUri","colon","questionMark","numberSign","slash","loose","footnoteReference","counter","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","revert","subtype","listItemLoose","trimLine","codePointAt","break","delete","footnote","footnoteById","no","dangerous","listLoose","wrapped","table","row","out","cellIndex","cell","pointStart","pointEnd","last","trimLines","toml","ignore","yaml","footnoteDefinition","factory","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","visit","hName","hProperties","hChildren","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","tailTail","dataFootnotes","footer","bridge","mutate","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","tableElements","childrenToReact","childIndex","toReact","skipHtml","parentSchema","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","uri","first","propTypes","nextChild","nextNode","getCommentObject","param","forEach","keyName","propertiesHandle","defaultAttrs","rehyp","defaultOptions","opts","firstChild","prevChild","contentDefaults","rehypeAutolinkHeadings","behavior","behaviour","around","inject","toChildren","SKIP","grouping","toNode","openDelimiter","closeDelimiter","rehypePrismGenerator","refractor","visitor","refractorRoot","startLineNum","classListItem","getLanguage","rootLang","highlight","ignoreMissing","addNodePosition","ast","numLines","entries","initialLineNum","shouldHighlightLine","RE","parsedMeta","strlineNumbers","lineNumbers","rangeParser","calculateLinesToHighlight","startingLineNumber","groups","calculateStartingLine","codeLineArray","createLineNodes","falseShowLineNumbersStr","w","treeExtract","convert","cascade","preorder","showLineNumbers","substring","N","rehypePrismAll","refractorCommon","refractorAll","webNamespaces","mathml","nodeName","namespaceURI","childNodes","sourceCodeLocation","endTag","verbose","opening","closing","createLocation","quirksMode","loc","indices","toPoint","toOffset","startLine","startCol","endLine","endCol","endOffset","isFile","ns","toH","react","_isVue","vue","vd","vdom","hyperscript","addAttribute","subprop","p5","patch","parentNode","doctype","publicId","systemId","htmlVoidElements","endTagToken","parseOptions","sourceCodeLocationInfo","scriptingEnabled","stitches","posTracker","locationTracker","resetTokenizer","_processToken","createParse5Location","chars","forceQuirks","lastGapPos","lastCharPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","isEol","lineStartPos","droppedBufferSize","col","currentAttrLocation","ctLoc","_runParsingLoop","_consume","stitch","fromParse5","documentMode","treeAdapter","createDocument","_bootstrap","__mixins","mock","_pushTmplInsertionMode","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","_adoptNodes","currentCharacterToken","tokenQueue","charRefCode","tempBuff","lastStartTagName","consumedAfterSnapshot","active","currentToken","currentAttr","selfClosing","rehypeRaw","ltrRange","rtl","ltr","enterState","dirInferred","found","currentDirection","editableOrEditingHost","dirProperty","dirBidi","EXIT","query","descendant","indexedSearch","nest","_1","_2","firstElementOnly","elementsBefore","elements","elementsByTypeBefore","delayed","elementIndex","typeIndex","elementCount","typeCount","tags","ranges","cast","matches","rightIndex","leftIndex","tag","extendedFilter","someChildren","_3","empty","enabled","assertDeep","scopeElements","appendScope","not","optional","readWrite","needsIndex","normalizeValue","collector","Collector","collectAll","ruleSet","collect","ZERO","NINE","nthCheck","formula","parsed","boolbase","absA","abs","bMod","idx","sign","readSign","readNumber","fauxEsmNthCheck","nth","selectAll","getCodeString","rewrite","slugs","Slugger","rehypeSlug","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","tokenizeStrikethrough","resolveAllStrikethrough","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","gfm","ccount","findAndReplace","ignored","pairs","toExpression","toFunction","toPairs","pairIndex","visitParents","parents","grandparent","change","matchObject","global","escape","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","isCorrectDomain","closingParenIndex","openingParens","closingParens","trail","trailExec","splitUrl","email","track","options_","lineShift","move","shift","containerFlow","indexStack","tracker","bulletLastUsed","gfmFootnoteToMarkdown","containerPhrasing","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","handleDelete","serialize","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","tableRow","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","serializeData","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","bulletCurrent","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","gfmFromMarkdown","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","remarkGfm","typeFactory","propsFactory","reverse","subresult","grandparents","toResult"],"sourceRoot":""}