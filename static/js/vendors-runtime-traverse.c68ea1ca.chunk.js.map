{"version":3,"sources":["../../node_modules/@babel/traverse/lib/cache.js","../../node_modules/@babel/traverse/lib/path/lib/virtual-types.js","../../node_modules/@babel/traverse/lib/scope/index.js","../../node_modules/@babel/traverse/lib/scope/binding.js","../../node_modules/@babel/traverse/lib/context.js","../../node_modules/@babel/traverse/lib/scope/lib/renamer.js","../../node_modules/@babel/traverse/lib/path/ancestry.js","../../node_modules/@babel/traverse/lib/path/inference/index.js","../../node_modules/@babel/traverse/lib/path/inference/inferers.js","../../node_modules/@babel/traverse/lib/path/inference/inferer-reference.js","../../node_modules/@babel/traverse/lib/path/replacement.js","../../node_modules/@babel/traverse/lib/path/evaluation.js","../../node_modules/@babel/traverse/lib/path/conversion.js","../../node_modules/@babel/traverse/lib/path/introspection.js","../../node_modules/@babel/traverse/lib/path/context.js","../../node_modules/@babel/traverse/lib/path/removal.js","../../node_modules/@babel/traverse/lib/path/lib/removal-hooks.js","../../node_modules/@babel/traverse/lib/path/modification.js","../../node_modules/@babel/traverse/lib/path/lib/hoister.js","../../node_modules/@babel/traverse/lib/path/family.js","../../node_modules/@babel/traverse/lib/path/comments.js","../../node_modules/@babel/traverse/lib/visitors.js","../../node_modules/@babel/traverse/lib/hub.js","../../node_modules/@babel/traverse/lib/index.js","../../node_modules/@babel/traverse/lib/path/index.js"],"names":["Object","defineProperty","exports","value","clear","clearPath","clearScope","scope","path","WeakMap","Var","User","Statement","SpreadProperty","Scope","RestProperty","ReferencedMemberExpression","ReferencedIdentifier","Referenced","Pure","NumericLiteralTypeAnnotation","Generated","ForAwaitStatement","Flow","Expression","ExistentialTypeParam","BlockScoped","BindingIdentifier","_t","require","isBinding","isBlockScoped","isExportDeclaration","isExpression","isFlow","isForStatement","isForXStatement","isIdentifier","isImportDeclaration","isImportSpecifier","isJSXIdentifier","isJSXMemberExpression","isMemberExpression","isReferenced","isScope","isStatement","isVar","isVariableDeclaration","isCompatTag","react","types","checkPath","opts","node","parent","name","parentPath","grandparent","left","init","isReferencedIdentifier","loc","isUser","isPure","importKind","exportKind","isObjectPattern","isObjectExpression","await","default","_renamer","_index","_binding","_globals","_cache","NOT_LOCAL_BINDING","callExpression","cloneNode","getBindingIdentifiers","identifier","isArrayExpression","isBinary","isClass","isClassBody","isClassDeclaration","isExportAllDeclaration","isExportDefaultDeclaration","isExportNamedDeclaration","isFunctionDeclaration","isLiteral","isMethod","isModuleDeclaration","isModuleSpecifier","isProperty","isPureish","isSuper","isTaggedTemplateExpression","isTemplateLiteral","isThisExpression","isUnaryExpression","matchesPattern","memberExpression","numericLiteral","toIdentifier","unaryExpression","variableDeclaration","variableDeclarator","gatherNodeParts","parts","type","source","specifiers","length","declaration","local","push","object","property","callee","properties","argument","key","id","expression","meta","openingElement","openingFragment","namespace","collectorVisitor","ForStatement","declar","get","getFunctionParent","getProgramParent","registerBinding","Declaration","registerDeclaration","ImportDeclaration","getBlockParent","state","references","ForXStatement","isPattern","constantViolations","ExportDeclaration","exit","binding","getBinding","reference","declarations","decl","keys","LabeledStatement","AssignmentExpression","assignments","UpdateExpression","UnaryExpression","operator","bindings","CatchClause","Function","params","param","isFunctionExpression","has","ClassExpression","uid","this","block","labels","inited","globals","uids","data","crawling","cached","set","Map","_parent","isKey","hub","generateUidIdentifier","generateUid","replace","i","_generateUid","hasLabel","hasBinding","hasGlobal","hasReference","program","defaultName","join","slice","generateUidBasedOnNode","constant","dontPush","isStatic","generateUidIdentifierBasedOnNode","kind","buildError","TypeError","oldName","newName","rename","map","sep","repeat","console","log","violations","arrayLikeIsIterable","isGenericType","helperName","args","unshift","addHelper","getLabel","label","isLabeledStatement","registerLabel","specifier","ids","reassign","bindingPath","ReferenceError","declarators","getOuterBindingIdentifiers","getOwnBinding","checkBlockScopedCollisions","registerConstantViolation","constantsOnly","superClass","body","method","right","elements","elem","prop","computed","tag","quasi","expressions","val","crawl","create","programParent","_exploded","enter","visit","typeVisitors","traverse","addGlobal","ref","isBlockStatement","isProgram","isSwitchStatement","isLoop","isCatchClause","isFunction","ensureBlock","unique","blockHoist","_blockHoist","dataKey","declarPath","getData","unshiftContainer","setData","declarator","pop","Error","isFunctionParent","isBlockParent","kinds","getBindingIdentifier","previousPath","_previousPath","_this$getBinding","noGlobals","hasOwnBinding","parentHasBinding","hasUid","includes","contextVariables","_this$parent","info","removeOwnBinding","_this$getBinding2","builtin","Binding","referencePaths","referenced","clearValue","hasDeoptedValue","hasValue","indexOf","_path","VISITOR_KEYS","TraversalContext","queue","priorityQueue","obj","listKey","container","notPriority","shouldVisit","visitQueue","visited","WeakSet","stop","resync","contexts","pushContext","add","popContext","nodes","Array","isArray","visitMultiple","visitSingle","_helperSplitExportDeclaration","renameVisitor","assignmentExpression","toExpression","bindingIdentifierEquals","skip","skipKey","skipAllButComputedMethodKey","Renamer","parentDeclar","maybeExportDeclar","find","isDeclaration","isClassExpression","maybeConvertFromExportDeclaration","blockToTraverse","cases","forEach","c","maybeConvertFromClassFunctionDeclaration","maybeConvertFromClassFunctionExpression","callback","findParent","getAncestry","paths","getDeepestCommonAncestorFrom","filter","lastCommonIndex","lastCommon","minDepth","Infinity","ancestries","ancestry","first","depthLoop","shouldMatch","getEarliestCommonAncestorFrom","deepest","earliest","parentKey","p","getStatementParent","isFile","inType","candidateTypes","isAncestor","maybeDescendant","isDescendant","maybeAncestor","_getTypeAnnotation","isVariableDeclarator","declarParent","isForInStatement","stringTypeAnnotation","isForOfStatement","anyTypeAnnotation","voidTypeAnnotation","typeAnnotation","typeAnnotationInferringNodes","_inferer","inferer","inferers","call","validParent","getTypeAnnotation","delete","baseTypeStrictlyMatches","rightArg","isAnyTypeAnnotation","isFlowBaseAnnotation","couldBeBaseType","isUnionTypeAnnotation","type2","_isBaseType","isTypeAnnotation","isBaseType","baseName","soft","genericName","isGenericTypeAnnotation","isBooleanTypeAnnotation","isEmptyTypeAnnotation","isMixedTypeAnnotation","isNumberTypeAnnotation","isStringTypeAnnotation","isVoidTypeAnnotation","ArrayExpression","BinaryExpression","NUMBER_BINARY_OPERATORS","numberTypeAnnotation","BOOLEAN_BINARY_OPERATORS","booleanTypeAnnotation","unionTypeAnnotation","BooleanLiteral","CallExpression","isObjectKeys","arrayTypeAnnotation","isArrayFrom","isObjectValues","isObjectEntries","tupleTypeAnnotation","resolveCall","ConditionalExpression","argumentTypes","isTSTypeAnnotation","createTSUnionType","createFlowUnionType","createUnionTypeAnnotation","ClassDeclaration","FunctionDeclaration","ArrowFunctionExpression","FunctionExpression","genericTypeAnnotation","enumerable","_infererReference","LogicalExpression","NewExpression","NullLiteral","nullLiteralTypeAnnotation","NumericLiteral","ObjectExpression","ParenthesizedExpression","RegExpLiteral","RestElement","SequenceExpression","StringLiteral","TaggedTemplateExpression","TemplateLiteral","TypeCastExpression","NUMBER_UNARY_OPERATORS","STRING_UNARY_OPERATORS","BOOLEAN_UNARY_OPERATORS","VariableDeclarator","_type","isCallExpression","buildMatchMemberExpression","resolve","is","returnType","functionConstantViolations","getConstantViolationsBefore","testType","getConditionalAnnotation","testConstantViolations","ifStatement","violation","getTypeAnnotationBindingConstantViolations","BOOLEAN_NUMBER_BINARY_OPERATORS","createTypeAnnotationBasedOnTypeof","functions","status","_guessExecutionStatusRelativeTo","inferAnnotationFromBinaryExpression","target","typeofPath","typePath","typeValue","isIfStatement","isConditionalExpression","getParentConditionalPath","isLogicalExpression","isBinaryExpression","_replaceWith","_pathCache$get2","inList","validate","debug","replaceExpressionWithStatements","nodesAsSequenceExpression","toSequenceExpression","replaceWith","functionParent","isParentAsync","isParentGenerator","arrowFunctionExpression","blockStatement","_helperHoistVariables","completionRecords","getCompletionRecords","isExpressionStatement","loop","generateDeclaredUidIdentifier","pushContainer","returnStatement","arrowFunctionToExpression","newCallee","needToAwaitFunction","hasType","FUNCTION_TYPES","needToYieldFunction","awaitExpression","yieldExpression","replaceInline","_verifyNodeList","_containerInsertAfter","remove","replaceWithMultiple","replacement","removed","_index2","nodePath","isNodeType","canHaveVariableDeclarationOrExpression","canSwapBetweenExpressionAndStatement","expressionStatement","oldNode","inheritsComments","removeComments","setScope","requeue","_pathCache$get","inheritLeadingComments","inheritTrailingComments","insertAfter","replaceWithSourceString","_parser","parse","err","message","_codeFrame","codeFrameColumns","start","line","column","code","removeProperties","evaluate","confident","deoptPath","seen","evaluateCached","undefined","deopt","evaluateTruthy","res","VALID_CALLEES","INVALID_METHODS","existing","resolved","item","isSequenceExpression","exprs","isStringLiteral","isNumericLiteral","isBooleanLiteral","isNullLiteral","evaluateQuasis","quasis","testResult","isExpressionWrapper","end","NaN","prefix","arg","arr","elems","elemValue","props","isObjectMethod","isSpreadElement","wasConfident","leftConfident","rightConfident","Math","pow","context","func","global","apply","_evaluate","raw","str","cooked","expr","String","allowInsertArrow","specCompliant","noNewArrows","isArrowFunctionExpression","buildCodeFrameError","hoistFunctionEnvironment","thisBinding","fn","fnPath","checkBinding","objectExpression","thisExpression","_helperFunctionName","arrowFunctionToShadowed","bodyNode","statements","stringPath","setup","toComputedKey","stringLiteral","unwrapFunctionEnvironment","binaryExpression","conditionalExpression","jsxIdentifier","metaProperty","restElement","sequenceExpression","spreadElement","_super","super","arrowParent","thisEnvFn","isClassProperty","static","isClassPrivateProperty","inConstructor","isClassMethod","getScopeInformation","thisPaths","argumentsPaths","newTargetPaths","superProps","superCalls","allSuperCalls","child","ClassProperty","superBinding","getSuperBinding","superCall","argumentsBinding","buildUndefinedNode","argumentsChild","argsRef","newTargetBinding","targetChild","targetRef","flatSuperProps","reduce","acc","superProp","concat","standardizeSuperProperty","isAssignment","isAssignmentExpression","isCall","getSuperPropBinding","getThisBinding","hasSuperClass","thisChild","thisRef","isJSX","assignmentPath","op","tmp","isUpdateExpression","updateExpr","computedKey","supers","argsBinding","propName","fnBody","argsList","valueIdent","cacheKey","ThisExpression","JSXIdentifier","isJSXOpeningElement","MemberExpression","curr","MetaProperty","funcParent","getOuterFunction","_guessExecutionStatusRelativeToDifferentFunctions","commonPath","commonIndex","isExecutionUncertainInList","divergence","keyPosition","allStatus","executionOrderCheckedNodes","_resolve","dangerous","ret","isTypeCastExpression","targetKey","targetName","match","isnt","isNaN","isFor","equals","getSource","getCode","isCompletionRecord","allowInsideFunction","isConstantExpression","isRegExpLiteral","every","isInStrictMode","sourceType","directives","isType","isStatementOrBlock","STATEMENT_OR_BLOCK_KEYS","pattern","allowPartial","_matchesPattern","referencesImport","moduleSource","importName","isOptionalMemberExpression","isImportDefaultSpecifier","isImportNamespaceSpecifier","imported","willIMaybeExecuteBefore","isExecutionUncertain","maxIndex","_call","fns","then","_traverseFlags","_getQueueContexts","_resyncKey","setKey","_resyncList","newContainer","_resyncParent","_resyncRemoved","_markRemoved","isBlacklisted","isDenylisted","_this$opts$denylist","denylist","blacklist","setContext","pathToQueue","maybeQueue","skipKeys","_this$node","noScope","getScope","shouldSkip","SHOULD_SKIP","SHOULD_STOP","currentContext","shouldStop","restoreContext","_assertUnremoved","_callRemovalHooks","_removalHooks","hooks","REMOVED","_remove","splice","updateSiblingKeys","_removeFromScope","removeBinding","_this$opts","shareCommentsWithSiblings","self","isWhile","isSwitchCase","_containerInsert","from","to","getSibling","_containerInsertBefore","msg","hoist","hoister","_hoister","run","nodes_","isJSXElement","assertExpression","temp","shouldInsertCurrentNode","insertBefore","verifiedNodes","fromIndex","incrementBy","_t2","jsxExpressionContainer","referenceVisitor","breakOnScopePaths","mutableBinding","PathHoister","scopes","attachAfter","isCompatibleScope","_getAttachmentPath","targetScope","getAttachmentParentForPath","violationPath","hasOwnParamBindings","getNextScopeAttachmentParent","bodies","getCompatibleScopes","attachTo","getAttachmentPath","attached","children","_getKey","_","_getPattern","part","split","getAllNextSiblings","_key","sibling","siblings","getAllPrevSiblings","getBindingIdentifierPaths","duplicates","outerOnly","search","shift","_getBindingIdentifiers","_ids","_getCompletionRecords","canHaveBreak","shouldPopulateBreak","inCaseClause","r","getNextSibling","getOpposite","getOuterBindingIdentifierPaths","_getOuterBindingIdentifiers","getPrevSibling","addCompletionRecords","records","normalCompletionToBreak","completions","replaceBreakStatementInBreakCompletion","reachable","isBreakStatement","getStatementListCompletion","lastNormalCompletions","newContext","assign","statementCompletions","some","pathCompletions","isDoExpression","isTryStatement","caseCompletions","normalCompletions","breakCompletions","completionRecordForSwitch","BreakCompletion","NormalCompletion","addComment","content","_addComment","addComments","comments","_addComments","trailing","trailingComments","leading","leadingComments","prev","next","hasPrev","Boolean","hasNext","explode","merge","visitors","states","wrapper","rootVisitor","visitor","visitorType","wrapWithStateOrWrapper","nodeVisitor","mergePair","verify","virtualTypes","DEPRECATED_KEYS","FLIPPED_ALIAS_KEYS","TYPES","nodeType","shouldIgnoreKey","__esModule","ensureEntranceObjects","ensureCallbackArrays","wrapCheck","aliases","deprecatedKey","trace","alias","_verified","validateVisitorMethods","visitorKey","oldVisitor","newVisitor","newFn","toString","arguments","dest","src","Hub","_hub","_scope","_context","cache","traverseFast","_default","hasDenylistedType","cheap","clearNode","tree","denylistTypes","_debug","t","_generator","NodePath_ancestry","NodePath_inference","NodePath_replacement","NodePath_evaluation","NodePath_conversion","NodePath_introspection","NodePath_context","NodePath_removal","NodePath_modification","NodePath_family","NodePath_comments","NodePath","def","SyntaxError","enabled","getPathLocation","v","targetNode","prototype","typeKey","virtualType"],"mappings":"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","file":"static/js/vendors-runtime-traverse.c68ea1ca.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nexports.clearPath = clearPath;\nexports.clearScope = clearScope;\nexports.scope = exports.path = void 0;\nlet path = new WeakMap();\nexports.path = path;\nlet scope = new WeakMap();\nexports.scope = scope;\n\nfunction clear() {\n  clearPath();\n  clearScope();\n}\n\nfunction clearPath() {\n  exports.path = path = new WeakMap();\n}\n\nfunction clearScope() {\n  exports.scope = scope = new WeakMap();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Var = exports.User = exports.Statement = exports.SpreadProperty = exports.Scope = exports.RestProperty = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = exports.Referenced = exports.Pure = exports.NumericLiteralTypeAnnotation = exports.Generated = exports.ForAwaitStatement = exports.Flow = exports.Expression = exports.ExistentialTypeParam = exports.BlockScoped = exports.BindingIdentifier = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isBinding,\n  isBlockScoped,\n  isExportDeclaration,\n  isExpression,\n  isFlow,\n  isForStatement,\n  isForXStatement,\n  isIdentifier,\n  isImportDeclaration,\n  isImportSpecifier,\n  isJSXIdentifier,\n  isJSXMemberExpression,\n  isMemberExpression,\n  isReferenced,\n  isScope,\n  isStatement,\n  isVar,\n  isVariableDeclaration,\n  react\n} = _t;\nconst {\n  isCompatTag\n} = react;\nconst ReferencedIdentifier = {\n  types: [\"Identifier\", \"JSXIdentifier\"],\n\n  checkPath(path, opts) {\n    const {\n      node,\n      parent\n    } = path;\n\n    if (!isIdentifier(node, opts) && !isJSXMemberExpression(parent, opts)) {\n      if (isJSXIdentifier(node, opts)) {\n        if (isCompatTag(node.name)) return false;\n      } else {\n        return false;\n      }\n    }\n\n    return isReferenced(node, parent, path.parentPath.parent);\n  }\n\n};\nexports.ReferencedIdentifier = ReferencedIdentifier;\nconst ReferencedMemberExpression = {\n  types: [\"MemberExpression\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    return isMemberExpression(node) && isReferenced(node, parent);\n  }\n\n};\nexports.ReferencedMemberExpression = ReferencedMemberExpression;\nconst BindingIdentifier = {\n  types: [\"Identifier\"],\n\n  checkPath(path) {\n    const {\n      node,\n      parent\n    } = path;\n    const grandparent = path.parentPath.parent;\n    return isIdentifier(node) && isBinding(node, parent, grandparent);\n  }\n\n};\nexports.BindingIdentifier = BindingIdentifier;\nconst Statement = {\n  types: [\"Statement\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    if (isStatement(node)) {\n      if (isVariableDeclaration(node)) {\n        if (isForXStatement(parent, {\n          left: node\n        })) return false;\n        if (isForStatement(parent, {\n          init: node\n        })) return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Statement = Statement;\nconst Expression = {\n  types: [\"Expression\"],\n\n  checkPath(path) {\n    if (path.isIdentifier()) {\n      return path.isReferencedIdentifier();\n    } else {\n      return isExpression(path.node);\n    }\n  }\n\n};\nexports.Expression = Expression;\nconst Scope = {\n  types: [\"Scopable\", \"Pattern\"],\n\n  checkPath(path) {\n    return isScope(path.node, path.parent);\n  }\n\n};\nexports.Scope = Scope;\nconst Referenced = {\n  checkPath(path) {\n    return isReferenced(path.node, path.parent);\n  }\n\n};\nexports.Referenced = Referenced;\nconst BlockScoped = {\n  checkPath(path) {\n    return isBlockScoped(path.node);\n  }\n\n};\nexports.BlockScoped = BlockScoped;\nconst Var = {\n  types: [\"VariableDeclaration\"],\n\n  checkPath(path) {\n    return isVar(path.node);\n  }\n\n};\nexports.Var = Var;\nconst User = {\n  checkPath(path) {\n    return path.node && !!path.node.loc;\n  }\n\n};\nexports.User = User;\nconst Generated = {\n  checkPath(path) {\n    return !path.isUser();\n  }\n\n};\nexports.Generated = Generated;\nconst Pure = {\n  checkPath(path, opts) {\n    return path.scope.isPure(path.node, opts);\n  }\n\n};\nexports.Pure = Pure;\nconst Flow = {\n  types: [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"],\n\n  checkPath({\n    node\n  }) {\n    if (isFlow(node)) {\n      return true;\n    } else if (isImportDeclaration(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else if (isExportDeclaration(node)) {\n      return node.exportKind === \"type\";\n    } else if (isImportSpecifier(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Flow = Flow;\nconst RestProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectPattern();\n  }\n\n};\nexports.RestProperty = RestProperty;\nconst SpreadProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectExpression();\n  }\n\n};\nexports.SpreadProperty = SpreadProperty;\nconst ExistentialTypeParam = {\n  types: [\"ExistsTypeAnnotation\"]\n};\nexports.ExistentialTypeParam = ExistentialTypeParam;\nconst NumericLiteralTypeAnnotation = {\n  types: [\"NumberLiteralTypeAnnotation\"]\n};\nexports.NumericLiteralTypeAnnotation = NumericLiteralTypeAnnotation;\nconst ForAwaitStatement = {\n  types: [\"ForOfStatement\"],\n\n  checkPath({\n    node\n  }) {\n    return node.await === true;\n  }\n\n};\nexports.ForAwaitStatement = ForAwaitStatement;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renamer = require(\"./lib/renamer\");\n\nvar _index = require(\"../index\");\n\nvar _binding = require(\"./binding\");\n\nvar _globals = require(\"globals\");\n\nvar _t = require(\"@babel/types\");\n\nvar _cache = require(\"../cache\");\n\nconst {\n  NOT_LOCAL_BINDING,\n  callExpression,\n  cloneNode,\n  getBindingIdentifiers,\n  identifier,\n  isArrayExpression,\n  isBinary,\n  isClass,\n  isClassBody,\n  isClassDeclaration,\n  isExportAllDeclaration,\n  isExportDefaultDeclaration,\n  isExportNamedDeclaration,\n  isFunctionDeclaration,\n  isIdentifier,\n  isImportDeclaration,\n  isLiteral,\n  isMethod,\n  isModuleDeclaration,\n  isModuleSpecifier,\n  isObjectExpression,\n  isProperty,\n  isPureish,\n  isSuper,\n  isTaggedTemplateExpression,\n  isTemplateLiteral,\n  isThisExpression,\n  isUnaryExpression,\n  isVariableDeclaration,\n  matchesPattern,\n  memberExpression,\n  numericLiteral,\n  toIdentifier,\n  unaryExpression,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nfunction gatherNodeParts(node, parts) {\n  switch (node == null ? void 0 : node.type) {\n    default:\n      if (isModuleDeclaration(node)) {\n        if ((isExportAllDeclaration(node) || isExportNamedDeclaration(node) || isImportDeclaration(node)) && node.source) {\n          gatherNodeParts(node.source, parts);\n        } else if ((isExportNamedDeclaration(node) || isImportDeclaration(node)) && node.specifiers && node.specifiers.length) {\n          for (const e of node.specifiers) gatherNodeParts(e, parts);\n        } else if ((isExportDefaultDeclaration(node) || isExportNamedDeclaration(node)) && node.declaration) {\n          gatherNodeParts(node.declaration, parts);\n        }\n      } else if (isModuleSpecifier(node)) {\n        gatherNodeParts(node.local, parts);\n      } else if (isLiteral(node)) {\n        parts.push(node.value);\n      }\n\n      break;\n\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n    case \"JSXMemberExpression\":\n      gatherNodeParts(node.object, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"Identifier\":\n    case \"JSXIdentifier\":\n      parts.push(node.name);\n      break;\n\n    case \"CallExpression\":\n    case \"OptionalCallExpression\":\n    case \"NewExpression\":\n      gatherNodeParts(node.callee, parts);\n      break;\n\n    case \"ObjectExpression\":\n    case \"ObjectPattern\":\n      for (const e of node.properties) {\n        gatherNodeParts(e, parts);\n      }\n\n      break;\n\n    case \"SpreadElement\":\n    case \"RestElement\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"ObjectProperty\":\n    case \"ObjectMethod\":\n    case \"ClassProperty\":\n    case \"ClassMethod\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n      gatherNodeParts(node.key, parts);\n      break;\n\n    case \"ThisExpression\":\n      parts.push(\"this\");\n      break;\n\n    case \"Super\":\n      parts.push(\"super\");\n      break;\n\n    case \"Import\":\n      parts.push(\"import\");\n      break;\n\n    case \"DoExpression\":\n      parts.push(\"do\");\n      break;\n\n    case \"YieldExpression\":\n      parts.push(\"yield\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AwaitExpression\":\n      parts.push(\"await\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AssignmentExpression\":\n      gatherNodeParts(node.left, parts);\n      break;\n\n    case \"VariableDeclarator\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"FunctionExpression\":\n    case \"FunctionDeclaration\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"PrivateName\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"ParenthesizedExpression\":\n      gatherNodeParts(node.expression, parts);\n      break;\n\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"MetaProperty\":\n      gatherNodeParts(node.meta, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"JSXElement\":\n      gatherNodeParts(node.openingElement, parts);\n      break;\n\n    case \"JSXOpeningElement\":\n      parts.push(node.name);\n      break;\n\n    case \"JSXFragment\":\n      gatherNodeParts(node.openingFragment, parts);\n      break;\n\n    case \"JSXOpeningFragment\":\n      parts.push(\"Fragment\");\n      break;\n\n    case \"JSXNamespacedName\":\n      gatherNodeParts(node.namespace, parts);\n      gatherNodeParts(node.name, parts);\n      break;\n  }\n}\n\nconst collectorVisitor = {\n  ForStatement(path) {\n    const declar = path.get(\"init\");\n\n    if (declar.isVar()) {\n      const {\n        scope\n      } = path;\n      const parentScope = scope.getFunctionParent() || scope.getProgramParent();\n      parentScope.registerBinding(\"var\", declar);\n    }\n  },\n\n  Declaration(path) {\n    if (path.isBlockScoped()) return;\n    if (path.isImportDeclaration()) return;\n    if (path.isExportDeclaration()) return;\n    const parent = path.scope.getFunctionParent() || path.scope.getProgramParent();\n    parent.registerDeclaration(path);\n  },\n\n  ImportDeclaration(path) {\n    const parent = path.scope.getBlockParent();\n    parent.registerDeclaration(path);\n  },\n\n  ReferencedIdentifier(path, state) {\n    state.references.push(path);\n  },\n\n  ForXStatement(path, state) {\n    const left = path.get(\"left\");\n\n    if (left.isPattern() || left.isIdentifier()) {\n      state.constantViolations.push(path);\n    } else if (left.isVar()) {\n      const {\n        scope\n      } = path;\n      const parentScope = scope.getFunctionParent() || scope.getProgramParent();\n      parentScope.registerBinding(\"var\", left);\n    }\n  },\n\n  ExportDeclaration: {\n    exit(path) {\n      const {\n        node,\n        scope\n      } = path;\n      if (isExportAllDeclaration(node)) return;\n      const declar = node.declaration;\n\n      if (isClassDeclaration(declar) || isFunctionDeclaration(declar)) {\n        const id = declar.id;\n        if (!id) return;\n        const binding = scope.getBinding(id.name);\n        binding == null ? void 0 : binding.reference(path);\n      } else if (isVariableDeclaration(declar)) {\n        for (const decl of declar.declarations) {\n          for (const name of Object.keys(getBindingIdentifiers(decl))) {\n            const binding = scope.getBinding(name);\n            binding == null ? void 0 : binding.reference(path);\n          }\n        }\n      }\n    }\n\n  },\n\n  LabeledStatement(path) {\n    path.scope.getBlockParent().registerDeclaration(path);\n  },\n\n  AssignmentExpression(path, state) {\n    state.assignments.push(path);\n  },\n\n  UpdateExpression(path, state) {\n    state.constantViolations.push(path);\n  },\n\n  UnaryExpression(path, state) {\n    if (path.node.operator === \"delete\") {\n      state.constantViolations.push(path);\n    }\n  },\n\n  BlockScoped(path) {\n    let scope = path.scope;\n    if (scope.path === path) scope = scope.parent;\n    const parent = scope.getBlockParent();\n    parent.registerDeclaration(path);\n\n    if (path.isClassDeclaration() && path.node.id) {\n      const id = path.node.id;\n      const name = id.name;\n      path.scope.bindings[name] = path.scope.parent.getBinding(name);\n    }\n  },\n\n  CatchClause(path) {\n    path.scope.registerBinding(\"let\", path);\n  },\n\n  Function(path) {\n    const params = path.get(\"params\");\n\n    for (const param of params) {\n      path.scope.registerBinding(\"param\", param);\n    }\n\n    if (path.isFunctionExpression() && path.has(\"id\") && !path.get(\"id\").node[NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path.get(\"id\"), path);\n    }\n  },\n\n  ClassExpression(path) {\n    if (path.has(\"id\") && !path.get(\"id\").node[NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path);\n    }\n  }\n\n};\nlet uid = 0;\n\nclass Scope {\n  constructor(path) {\n    this.uid = void 0;\n    this.path = void 0;\n    this.block = void 0;\n    this.labels = void 0;\n    this.inited = void 0;\n    this.bindings = void 0;\n    this.references = void 0;\n    this.globals = void 0;\n    this.uids = void 0;\n    this.data = void 0;\n    this.crawling = void 0;\n    const {\n      node\n    } = path;\n\n    const cached = _cache.scope.get(node);\n\n    if ((cached == null ? void 0 : cached.path) === path) {\n      return cached;\n    }\n\n    _cache.scope.set(node, this);\n\n    this.uid = uid++;\n    this.block = node;\n    this.path = path;\n    this.labels = new Map();\n    this.inited = false;\n  }\n\n  get parent() {\n    var _parent;\n\n    let parent,\n        path = this.path;\n\n    do {\n      const isKey = path.key === \"key\";\n      path = path.parentPath;\n      if (isKey && path.isMethod()) path = path.parentPath;\n      if (path && path.isScope()) parent = path;\n    } while (path && !parent);\n\n    return (_parent = parent) == null ? void 0 : _parent.scope;\n  }\n\n  get parentBlock() {\n    return this.path.parent;\n  }\n\n  get hub() {\n    return this.path.hub;\n  }\n\n  traverse(node, opts, state) {\n    (0, _index.default)(node, opts, this, state, this.path);\n  }\n\n  generateDeclaredUidIdentifier(name) {\n    const id = this.generateUidIdentifier(name);\n    this.push({\n      id\n    });\n    return cloneNode(id);\n  }\n\n  generateUidIdentifier(name) {\n    return identifier(this.generateUid(name));\n  }\n\n  generateUid(name = \"temp\") {\n    name = toIdentifier(name).replace(/^_+/, \"\").replace(/[0-9]+$/g, \"\");\n    let uid;\n    let i = 1;\n\n    do {\n      uid = this._generateUid(name, i);\n      i++;\n    } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));\n\n    const program = this.getProgramParent();\n    program.references[uid] = true;\n    program.uids[uid] = true;\n    return uid;\n  }\n\n  _generateUid(name, i) {\n    let id = name;\n    if (i > 1) id += i;\n    return `_${id}`;\n  }\n\n  generateUidBasedOnNode(node, defaultName) {\n    const parts = [];\n    gatherNodeParts(node, parts);\n    let id = parts.join(\"$\");\n    id = id.replace(/^_/, \"\") || defaultName || \"ref\";\n    return this.generateUid(id.slice(0, 20));\n  }\n\n  generateUidIdentifierBasedOnNode(node, defaultName) {\n    return identifier(this.generateUidBasedOnNode(node, defaultName));\n  }\n\n  isStatic(node) {\n    if (isThisExpression(node) || isSuper(node)) {\n      return true;\n    }\n\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding) {\n        return binding.constant;\n      } else {\n        return this.hasBinding(node.name);\n      }\n    }\n\n    return false;\n  }\n\n  maybeGenerateMemoised(node, dontPush) {\n    if (this.isStatic(node)) {\n      return null;\n    } else {\n      const id = this.generateUidIdentifierBasedOnNode(node);\n\n      if (!dontPush) {\n        this.push({\n          id\n        });\n        return cloneNode(id);\n      }\n\n      return id;\n    }\n  }\n\n  checkBlockScopedCollisions(local, kind, name, id) {\n    if (kind === \"param\") return;\n    if (local.kind === \"local\") return;\n    const duplicate = kind === \"let\" || local.kind === \"let\" || local.kind === \"const\" || local.kind === \"module\" || local.kind === \"param\" && (kind === \"let\" || kind === \"const\");\n\n    if (duplicate) {\n      throw this.hub.buildError(id, `Duplicate declaration \"${name}\"`, TypeError);\n    }\n  }\n\n  rename(oldName, newName, block) {\n    const binding = this.getBinding(oldName);\n\n    if (binding) {\n      newName = newName || this.generateUidIdentifier(oldName).name;\n      return new _renamer.default(binding, oldName, newName).rename(block);\n    }\n  }\n\n  _renameFromMap(map, oldName, newName, value) {\n    if (map[oldName]) {\n      map[newName] = value;\n      map[oldName] = null;\n    }\n  }\n\n  dump() {\n    const sep = \"-\".repeat(60);\n    console.log(sep);\n    let scope = this;\n\n    do {\n      console.log(\"#\", scope.block.type);\n\n      for (const name of Object.keys(scope.bindings)) {\n        const binding = scope.bindings[name];\n        console.log(\" -\", name, {\n          constant: binding.constant,\n          references: binding.references,\n          violations: binding.constantViolations.length,\n          kind: binding.kind\n        });\n      }\n    } while (scope = scope.parent);\n\n    console.log(sep);\n  }\n\n  toArray(node, i, arrayLikeIsIterable) {\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding != null && binding.constant && binding.path.isGenericType(\"Array\")) {\n        return node;\n      }\n    }\n\n    if (isArrayExpression(node)) {\n      return node;\n    }\n\n    if (isIdentifier(node, {\n      name: \"arguments\"\n    })) {\n      return callExpression(memberExpression(memberExpression(memberExpression(identifier(\"Array\"), identifier(\"prototype\")), identifier(\"slice\")), identifier(\"call\")), [node]);\n    }\n\n    let helperName;\n    const args = [node];\n\n    if (i === true) {\n      helperName = \"toConsumableArray\";\n    } else if (i) {\n      args.push(numericLiteral(i));\n      helperName = \"slicedToArray\";\n    } else {\n      helperName = \"toArray\";\n    }\n\n    if (arrayLikeIsIterable) {\n      args.unshift(this.hub.addHelper(helperName));\n      helperName = \"maybeArrayLike\";\n    }\n\n    return callExpression(this.hub.addHelper(helperName), args);\n  }\n\n  hasLabel(name) {\n    return !!this.getLabel(name);\n  }\n\n  getLabel(name) {\n    return this.labels.get(name);\n  }\n\n  registerLabel(path) {\n    this.labels.set(path.node.label.name, path);\n  }\n\n  registerDeclaration(path) {\n    if (path.isLabeledStatement()) {\n      this.registerLabel(path);\n    } else if (path.isFunctionDeclaration()) {\n      this.registerBinding(\"hoisted\", path.get(\"id\"), path);\n    } else if (path.isVariableDeclaration()) {\n      const declarations = path.get(\"declarations\");\n\n      for (const declar of declarations) {\n        this.registerBinding(path.node.kind, declar);\n      }\n    } else if (path.isClassDeclaration()) {\n      this.registerBinding(\"let\", path);\n    } else if (path.isImportDeclaration()) {\n      const specifiers = path.get(\"specifiers\");\n\n      for (const specifier of specifiers) {\n        this.registerBinding(\"module\", specifier);\n      }\n    } else if (path.isExportDeclaration()) {\n      const declar = path.get(\"declaration\");\n\n      if (declar.isClassDeclaration() || declar.isFunctionDeclaration() || declar.isVariableDeclaration()) {\n        this.registerDeclaration(declar);\n      }\n    } else {\n      this.registerBinding(\"unknown\", path);\n    }\n  }\n\n  buildUndefinedNode() {\n    return unaryExpression(\"void\", numericLiteral(0), true);\n  }\n\n  registerConstantViolation(path) {\n    const ids = path.getBindingIdentifiers();\n\n    for (const name of Object.keys(ids)) {\n      const binding = this.getBinding(name);\n      if (binding) binding.reassign(path);\n    }\n  }\n\n  registerBinding(kind, path, bindingPath = path) {\n    if (!kind) throw new ReferenceError(\"no `kind`\");\n\n    if (path.isVariableDeclaration()) {\n      const declarators = path.get(\"declarations\");\n\n      for (const declar of declarators) {\n        this.registerBinding(kind, declar);\n      }\n\n      return;\n    }\n\n    const parent = this.getProgramParent();\n    const ids = path.getOuterBindingIdentifiers(true);\n\n    for (const name of Object.keys(ids)) {\n      parent.references[name] = true;\n\n      for (const id of ids[name]) {\n        const local = this.getOwnBinding(name);\n\n        if (local) {\n          if (local.identifier === id) continue;\n          this.checkBlockScopedCollisions(local, kind, name, id);\n        }\n\n        if (local) {\n          this.registerConstantViolation(bindingPath);\n        } else {\n          this.bindings[name] = new _binding.default({\n            identifier: id,\n            scope: this,\n            path: bindingPath,\n            kind: kind\n          });\n        }\n      }\n    }\n  }\n\n  addGlobal(node) {\n    this.globals[node.name] = node;\n  }\n\n  hasUid(name) {\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasGlobal(name) {\n    let scope = this;\n\n    do {\n      if (scope.globals[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasReference(name) {\n    return !!this.getProgramParent().references[name];\n  }\n\n  isPure(node, constantsOnly) {\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n      if (!binding) return false;\n      if (constantsOnly) return binding.constant;\n      return true;\n    } else if (isClass(node)) {\n      if (node.superClass && !this.isPure(node.superClass, constantsOnly)) {\n        return false;\n      }\n\n      return this.isPure(node.body, constantsOnly);\n    } else if (isClassBody(node)) {\n      for (const method of node.body) {\n        if (!this.isPure(method, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isBinary(node)) {\n      return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);\n    } else if (isArrayExpression(node)) {\n      for (const elem of node.elements) {\n        if (!this.isPure(elem, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isObjectExpression(node)) {\n      for (const prop of node.properties) {\n        if (!this.isPure(prop, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isMethod(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      if (node.kind === \"get\" || node.kind === \"set\") return false;\n      return true;\n    } else if (isProperty(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      return this.isPure(node.value, constantsOnly);\n    } else if (isUnaryExpression(node)) {\n      return this.isPure(node.argument, constantsOnly);\n    } else if (isTaggedTemplateExpression(node)) {\n      return matchesPattern(node.tag, \"String.raw\") && !this.hasBinding(\"String\", true) && this.isPure(node.quasi, constantsOnly);\n    } else if (isTemplateLiteral(node)) {\n      for (const expression of node.expressions) {\n        if (!this.isPure(expression, constantsOnly)) return false;\n      }\n\n      return true;\n    } else {\n      return isPureish(node);\n    }\n  }\n\n  setData(key, val) {\n    return this.data[key] = val;\n  }\n\n  getData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) return data;\n    } while (scope = scope.parent);\n  }\n\n  removeData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) scope.data[key] = null;\n    } while (scope = scope.parent);\n  }\n\n  init() {\n    if (!this.inited) {\n      this.inited = true;\n      this.crawl();\n    }\n  }\n\n  crawl() {\n    const path = this.path;\n    this.references = Object.create(null);\n    this.bindings = Object.create(null);\n    this.globals = Object.create(null);\n    this.uids = Object.create(null);\n    this.data = Object.create(null);\n    const programParent = this.getProgramParent();\n    if (programParent.crawling) return;\n    const state = {\n      references: [],\n      constantViolations: [],\n      assignments: []\n    };\n    this.crawling = true;\n\n    if (path.type !== \"Program\" && collectorVisitor._exploded) {\n      for (const visit of collectorVisitor.enter) {\n        visit(path, state);\n      }\n\n      const typeVisitors = collectorVisitor[path.type];\n\n      if (typeVisitors) {\n        for (const visit of typeVisitors.enter) {\n          visit(path, state);\n        }\n      }\n    }\n\n    path.traverse(collectorVisitor, state);\n    this.crawling = false;\n\n    for (const path of state.assignments) {\n      const ids = path.getBindingIdentifiers();\n\n      for (const name of Object.keys(ids)) {\n        if (path.scope.getBinding(name)) continue;\n        programParent.addGlobal(ids[name]);\n      }\n\n      path.scope.registerConstantViolation(path);\n    }\n\n    for (const ref of state.references) {\n      const binding = ref.scope.getBinding(ref.node.name);\n\n      if (binding) {\n        binding.reference(ref);\n      } else {\n        programParent.addGlobal(ref.node);\n      }\n    }\n\n    for (const path of state.constantViolations) {\n      path.scope.registerConstantViolation(path);\n    }\n  }\n\n  push(opts) {\n    let path = this.path;\n\n    if (!path.isBlockStatement() && !path.isProgram()) {\n      path = this.getBlockParent().path;\n    }\n\n    if (path.isSwitchStatement()) {\n      path = (this.getFunctionParent() || this.getProgramParent()).path;\n    }\n\n    if (path.isLoop() || path.isCatchClause() || path.isFunction()) {\n      path.ensureBlock();\n      path = path.get(\"body\");\n    }\n\n    const unique = opts.unique;\n    const kind = opts.kind || \"var\";\n    const blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;\n    const dataKey = `declaration:${kind}:${blockHoist}`;\n    let declarPath = !unique && path.getData(dataKey);\n\n    if (!declarPath) {\n      const declar = variableDeclaration(kind, []);\n      declar._blockHoist = blockHoist;\n      [declarPath] = path.unshiftContainer(\"body\", [declar]);\n      if (!unique) path.setData(dataKey, declarPath);\n    }\n\n    const declarator = variableDeclarator(opts.id, opts.init);\n    declarPath.node.declarations.push(declarator);\n    this.registerBinding(kind, declarPath.get(\"declarations\").pop());\n  }\n\n  getProgramParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isProgram()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"Couldn't find a Program\");\n  }\n\n  getFunctionParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isFunctionParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    return null;\n  }\n\n  getBlockParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isBlockParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\");\n  }\n\n  getAllBindings() {\n    const ids = Object.create(null);\n    let scope = this;\n\n    do {\n      for (const key of Object.keys(scope.bindings)) {\n        if (key in ids === false) {\n          ids[key] = scope.bindings[key];\n        }\n      }\n\n      scope = scope.parent;\n    } while (scope);\n\n    return ids;\n  }\n\n  getAllBindingsOfKind(...kinds) {\n    const ids = Object.create(null);\n\n    for (const kind of kinds) {\n      let scope = this;\n\n      do {\n        for (const name of Object.keys(scope.bindings)) {\n          const binding = scope.bindings[name];\n          if (binding.kind === kind) ids[name] = binding;\n        }\n\n        scope = scope.parent;\n      } while (scope);\n    }\n\n    return ids;\n  }\n\n  bindingIdentifierEquals(name, node) {\n    return this.getBindingIdentifier(name) === node;\n  }\n\n  getBinding(name) {\n    let scope = this;\n    let previousPath;\n\n    do {\n      const binding = scope.getOwnBinding(name);\n\n      if (binding) {\n        var _previousPath;\n\n        if ((_previousPath = previousPath) != null && _previousPath.isPattern() && binding.kind !== \"param\" && binding.kind !== \"local\") {} else {\n          return binding;\n        }\n      }\n\n      previousPath = scope.path;\n    } while (scope = scope.parent);\n  }\n\n  getOwnBinding(name) {\n    return this.bindings[name];\n  }\n\n  getBindingIdentifier(name) {\n    var _this$getBinding;\n\n    return (_this$getBinding = this.getBinding(name)) == null ? void 0 : _this$getBinding.identifier;\n  }\n\n  getOwnBindingIdentifier(name) {\n    const binding = this.bindings[name];\n    return binding == null ? void 0 : binding.identifier;\n  }\n\n  hasOwnBinding(name) {\n    return !!this.getOwnBinding(name);\n  }\n\n  hasBinding(name, noGlobals) {\n    if (!name) return false;\n    if (this.hasOwnBinding(name)) return true;\n    if (this.parentHasBinding(name, noGlobals)) return true;\n    if (this.hasUid(name)) return true;\n    if (!noGlobals && Scope.globals.includes(name)) return true;\n    if (!noGlobals && Scope.contextVariables.includes(name)) return true;\n    return false;\n  }\n\n  parentHasBinding(name, noGlobals) {\n    var _this$parent;\n\n    return (_this$parent = this.parent) == null ? void 0 : _this$parent.hasBinding(name, noGlobals);\n  }\n\n  moveBindingTo(name, scope) {\n    const info = this.getBinding(name);\n\n    if (info) {\n      info.scope.removeOwnBinding(name);\n      info.scope = scope;\n      scope.bindings[name] = info;\n    }\n  }\n\n  removeOwnBinding(name) {\n    delete this.bindings[name];\n  }\n\n  removeBinding(name) {\n    var _this$getBinding2;\n\n    (_this$getBinding2 = this.getBinding(name)) == null ? void 0 : _this$getBinding2.scope.removeOwnBinding(name);\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) {\n        scope.uids[name] = false;\n      }\n    } while (scope = scope.parent);\n  }\n\n}\n\nexports.default = Scope;\nScope.globals = Object.keys(_globals.builtin);\nScope.contextVariables = [\"arguments\", \"undefined\", \"Infinity\", \"NaN\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Binding {\n  constructor({\n    identifier,\n    scope,\n    path,\n    kind\n  }) {\n    this.identifier = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.kind = void 0;\n    this.constantViolations = [];\n    this.constant = true;\n    this.referencePaths = [];\n    this.referenced = false;\n    this.references = 0;\n    this.identifier = identifier;\n    this.scope = scope;\n    this.path = path;\n    this.kind = kind;\n    this.clearValue();\n  }\n\n  deoptValue() {\n    this.clearValue();\n    this.hasDeoptedValue = true;\n  }\n\n  setValue(value) {\n    if (this.hasDeoptedValue) return;\n    this.hasValue = true;\n    this.value = value;\n  }\n\n  clearValue() {\n    this.hasDeoptedValue = false;\n    this.hasValue = false;\n    this.value = null;\n  }\n\n  reassign(path) {\n    this.constant = false;\n\n    if (this.constantViolations.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.constantViolations.push(path);\n  }\n\n  reference(path) {\n    if (this.referencePaths.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.referenced = true;\n    this.references++;\n    this.referencePaths.push(path);\n  }\n\n  dereference() {\n    this.references--;\n    this.referenced = !!this.references;\n  }\n\n}\n\nexports.default = Binding;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = require(\"./path\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nclass TraversalContext {\n  constructor(scope, opts, state, parentPath) {\n    this.queue = null;\n    this.priorityQueue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  shouldVisit(node) {\n    const opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n    if (opts[node.type]) return true;\n    const keys = VISITOR_KEYS[node.type];\n    if (!(keys != null && keys.length)) return false;\n\n    for (const key of keys) {\n      if (node[key]) return true;\n    }\n\n    return false;\n  }\n\n  create(node, obj, key, listKey) {\n    return _path.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container: obj,\n      key: key,\n      listKey\n    });\n  }\n\n  maybeQueue(path, notPriority) {\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  }\n\n  visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n    const queue = [];\n\n    for (let key = 0; key < container.length; key++) {\n      const node = container[key];\n\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  }\n\n  visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  }\n\n  visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n    const visited = new WeakSet();\n    let stop = false;\n\n    for (const path of queue) {\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n      const {\n        node\n      } = path;\n      if (visited.has(node)) continue;\n      if (node) visited.add(node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (const path of queue) {\n      path.popContext();\n    }\n\n    this.queue = null;\n    return stop;\n  }\n\n  visit(node, key) {\n    const nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  }\n\n}\n\nexports.default = TraversalContext;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = require(\"../binding\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  VISITOR_KEYS,\n  assignmentExpression,\n  identifier,\n  toExpression,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      skipAllButComputedMethodKey(path);\n    }\n  },\n\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration() && !maybeExportDeclar.get(\"declaration\").node.id) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return;\n    if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;\n    if (this.binding.kind !== \"hoisted\") return;\n    path.node.id = identifier(this.oldName);\n    path.node._blockHoist = 3;\n    path.replaceWith(variableDeclaration(\"let\", [variableDeclarator(identifier(this.newName), toExpression(path.node))]));\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return;\n    if (!path.isFunctionExpression() && !path.isClassExpression()) return;\n    if (this.binding.kind !== \"local\") return;\n    path.node.id = identifier(this.oldName);\n    this.binding.scope.parent.push({\n      id: identifier(this.newName)\n    });\n    path.replaceWith(assignmentExpression(\"=\", identifier(this.newName), path.node));\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    const blockToTraverse = block || scope.block;\n\n    if ((blockToTraverse == null ? void 0 : blockToTraverse.type) === \"SwitchStatement\") {\n      blockToTraverse.cases.forEach(c => {\n        scope.traverse(c, renameVisitor, this);\n      });\n    } else {\n      scope.traverse(blockToTraverse, renameVisitor, this);\n    }\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(parentDeclar);\n      this.maybeConvertFromClassFunctionExpression(parentDeclar);\n    }\n  }\n\n}\n\nexports.default = Renamer;\n\nfunction skipAllButComputedMethodKey(path) {\n  if (!path.isMethod() || !path.node.computed) {\n    path.skip();\n    return;\n  }\n\n  const keys = VISITOR_KEYS[path.type];\n\n  for (const key of keys) {\n    if (key !== \"key\") path.skipKey(key);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.find = find;\nexports.findParent = findParent;\nexports.getAncestry = getAncestry;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.inType = inType;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\n\nvar _t = require(\"@babel/types\");\n\nvar _index = require(\"./index\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType(...candidateTypes) {\n  let path = this;\n\n  while (path) {\n    for (const type of candidateTypes) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._getTypeAnnotation = _getTypeAnnotation;\nexports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;\nexports.couldBeBaseType = couldBeBaseType;\nexports.getTypeAnnotation = getTypeAnnotation;\nexports.isBaseType = isBaseType;\nexports.isGenericType = isGenericType;\n\nvar inferers = require(\"./inferers\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  anyTypeAnnotation,\n  isAnyTypeAnnotation,\n  isBooleanTypeAnnotation,\n  isEmptyTypeAnnotation,\n  isFlowBaseAnnotation,\n  isGenericTypeAnnotation,\n  isIdentifier,\n  isMixedTypeAnnotation,\n  isNumberTypeAnnotation,\n  isStringTypeAnnotation,\n  isTypeAnnotation,\n  isUnionTypeAnnotation,\n  isVoidTypeAnnotation,\n  stringTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction getTypeAnnotation() {\n  if (this.typeAnnotation) return this.typeAnnotation;\n  let type = this._getTypeAnnotation() || anyTypeAnnotation();\n  if (isTypeAnnotation(type)) type = type.typeAnnotation;\n  return this.typeAnnotation = type;\n}\n\nconst typeAnnotationInferringNodes = new WeakSet();\n\nfunction _getTypeAnnotation() {\n  const node = this.node;\n\n  if (!node) {\n    if (this.key === \"init\" && this.parentPath.isVariableDeclarator()) {\n      const declar = this.parentPath.parentPath;\n      const declarParent = declar.parentPath;\n\n      if (declar.key === \"left\" && declarParent.isForInStatement()) {\n        return stringTypeAnnotation();\n      }\n\n      if (declar.key === \"left\" && declarParent.isForOfStatement()) {\n        return anyTypeAnnotation();\n      }\n\n      return voidTypeAnnotation();\n    } else {\n      return;\n    }\n  }\n\n  if (node.typeAnnotation) {\n    return node.typeAnnotation;\n  }\n\n  if (typeAnnotationInferringNodes.has(node)) {\n    return;\n  }\n\n  typeAnnotationInferringNodes.add(node);\n\n  try {\n    var _inferer;\n\n    let inferer = inferers[node.type];\n\n    if (inferer) {\n      return inferer.call(this, node);\n    }\n\n    inferer = inferers[this.parentPath.type];\n\n    if ((_inferer = inferer) != null && _inferer.validParent) {\n      return this.parentPath.getTypeAnnotation();\n    }\n  } finally {\n    typeAnnotationInferringNodes.delete(node);\n  }\n}\n\nfunction isBaseType(baseName, soft) {\n  return _isBaseType(baseName, this.getTypeAnnotation(), soft);\n}\n\nfunction _isBaseType(baseName, type, soft) {\n  if (baseName === \"string\") {\n    return isStringTypeAnnotation(type);\n  } else if (baseName === \"number\") {\n    return isNumberTypeAnnotation(type);\n  } else if (baseName === \"boolean\") {\n    return isBooleanTypeAnnotation(type);\n  } else if (baseName === \"any\") {\n    return isAnyTypeAnnotation(type);\n  } else if (baseName === \"mixed\") {\n    return isMixedTypeAnnotation(type);\n  } else if (baseName === \"empty\") {\n    return isEmptyTypeAnnotation(type);\n  } else if (baseName === \"void\") {\n    return isVoidTypeAnnotation(type);\n  } else {\n    if (soft) {\n      return false;\n    } else {\n      throw new Error(`Unknown base type ${baseName}`);\n    }\n  }\n}\n\nfunction couldBeBaseType(name) {\n  const type = this.getTypeAnnotation();\n  if (isAnyTypeAnnotation(type)) return true;\n\n  if (isUnionTypeAnnotation(type)) {\n    for (const type2 of type.types) {\n      if (isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {\n        return true;\n      }\n    }\n\n    return false;\n  } else {\n    return _isBaseType(name, type, true);\n  }\n}\n\nfunction baseTypeStrictlyMatches(rightArg) {\n  const left = this.getTypeAnnotation();\n  const right = rightArg.getTypeAnnotation();\n\n  if (!isAnyTypeAnnotation(left) && isFlowBaseAnnotation(left)) {\n    return right.type === left.type;\n  }\n\n  return false;\n}\n\nfunction isGenericType(genericName) {\n  const type = this.getTypeAnnotation();\n  return isGenericTypeAnnotation(type) && isIdentifier(type.id, {\n    name: genericName\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ArrayExpression = ArrayExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.BooleanLiteral = BooleanLiteral;\nexports.CallExpression = CallExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = Func;\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _infererReference.default;\n  }\n});\nexports.LogicalExpression = LogicalExpression;\nexports.NewExpression = NewExpression;\nexports.NullLiteral = NullLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.RegExpLiteral = RegExpLiteral;\nexports.RestElement = RestElement;\nexports.SequenceExpression = SequenceExpression;\nexports.StringLiteral = StringLiteral;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.TypeCastExpression = TypeCastExpression;\nexports.UnaryExpression = UnaryExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.VariableDeclarator = VariableDeclarator;\n\nvar _t = require(\"@babel/types\");\n\nvar _infererReference = require(\"./inferer-reference\");\n\nconst {\n  BOOLEAN_BINARY_OPERATORS,\n  BOOLEAN_UNARY_OPERATORS,\n  NUMBER_BINARY_OPERATORS,\n  NUMBER_UNARY_OPERATORS,\n  STRING_UNARY_OPERATORS,\n  anyTypeAnnotation,\n  arrayTypeAnnotation,\n  booleanTypeAnnotation,\n  buildMatchMemberExpression,\n  createFlowUnionType,\n  createTSUnionType,\n  createUnionTypeAnnotation,\n  genericTypeAnnotation,\n  identifier,\n  isTSTypeAnnotation,\n  nullLiteralTypeAnnotation,\n  numberTypeAnnotation,\n  stringTypeAnnotation,\n  tupleTypeAnnotation,\n  unionTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction VariableDeclarator() {\n  var _type;\n\n  const id = this.get(\"id\");\n  if (!id.isIdentifier()) return;\n  const init = this.get(\"init\");\n  let type = init.getTypeAnnotation();\n\n  if (((_type = type) == null ? void 0 : _type.type) === \"AnyTypeAnnotation\") {\n    if (init.isCallExpression() && init.get(\"callee\").isIdentifier({\n      name: \"Array\"\n    }) && !init.scope.hasBinding(\"Array\", true)) {\n      type = ArrayExpression();\n    }\n  }\n\n  return type;\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction NewExpression(node) {\n  if (this.get(\"callee\").isIdentifier()) {\n    return genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"void\") {\n    return voidTypeAnnotation();\n  } else if (NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return numberTypeAnnotation();\n  } else if (STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return stringTypeAnnotation();\n  } else if (BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  const operator = node.operator;\n\n  if (NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return numberTypeAnnotation();\n  } else if (BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    const right = this.get(\"right\");\n    const left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      return numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      return stringTypeAnnotation();\n    }\n\n    return unionTypeAnnotation([stringTypeAnnotation(), numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  const argumentTypes = [this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()];\n\n  if (isTSTypeAnnotation(argumentTypes[0]) && createTSUnionType) {\n    return createTSUnionType(argumentTypes);\n  }\n\n  if (createFlowUnionType) {\n    return createFlowUnionType(argumentTypes);\n  }\n\n  return createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction ConditionalExpression() {\n  const argumentTypes = [this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()];\n\n  if (isTSTypeAnnotation(argumentTypes[0]) && createTSUnionType) {\n    return createTSUnionType(argumentTypes);\n  }\n\n  if (createFlowUnionType) {\n    return createFlowUnionType(argumentTypes);\n  }\n\n  return createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\nfunction ParenthesizedExpression() {\n  return this.get(\"expression\").getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"++\" || operator === \"--\") {\n    return numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return genericTypeAnnotation(identifier(\"RegExp\"));\n}\n\nfunction ObjectExpression() {\n  return genericTypeAnnotation(identifier(\"Object\"));\n}\n\nfunction ArrayExpression() {\n  return genericTypeAnnotation(identifier(\"Array\"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return genericTypeAnnotation(identifier(\"Function\"));\n}\n\nconst isArrayFrom = buildMatchMemberExpression(\"Array.from\");\nconst isObjectKeys = buildMatchMemberExpression(\"Object.keys\");\nconst isObjectValues = buildMatchMemberExpression(\"Object.values\");\nconst isObjectEntries = buildMatchMemberExpression(\"Object.entries\");\n\nfunction CallExpression() {\n  const {\n    callee\n  } = this.node;\n\n  if (isObjectKeys(callee)) {\n    return arrayTypeAnnotation(stringTypeAnnotation());\n  } else if (isArrayFrom(callee) || isObjectValues(callee)) {\n    return arrayTypeAnnotation(anyTypeAnnotation());\n  } else if (isObjectEntries(callee)) {\n    return arrayTypeAnnotation(tupleTypeAnnotation([stringTypeAnnotation(), anyTypeAnnotation()]));\n  }\n\n  return resolveCall(this.get(\"callee\"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is(\"async\")) {\n      if (callee.is(\"generator\")) {\n        return genericTypeAnnotation(identifier(\"AsyncIterator\"));\n      } else {\n        return genericTypeAnnotation(identifier(\"Promise\"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {}\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  BOOLEAN_NUMBER_BINARY_OPERATORS,\n  createFlowUnionType,\n  createTSUnionType,\n  createTypeAnnotationBasedOnTypeof,\n  createUnionTypeAnnotation,\n  isTSTypeAnnotation,\n  numberTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction _default(node) {\n  if (!this.isReferenced()) return;\n  const binding = this.scope.getBinding(node.name);\n\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(binding, this, node.name);\n    }\n  }\n\n  if (node.name === \"undefined\") {\n    return voidTypeAnnotation();\n  } else if (node.name === \"NaN\" || node.name === \"Infinity\") {\n    return numberTypeAnnotation();\n  } else if (node.name === \"arguments\") {}\n}\n\nfunction getTypeAnnotationBindingConstantViolations(binding, path, name) {\n  const types = [];\n  const functionConstantViolations = [];\n  let constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n  const testType = getConditionalAnnotation(binding, path, name);\n\n  if (testType) {\n    const testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n    constantViolations = constantViolations.filter(path => testConstantViolations.indexOf(path) < 0);\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations.push(...functionConstantViolations);\n\n    for (const violation of constantViolations) {\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (!types.length) {\n    return;\n  }\n\n  if (isTSTypeAnnotation(types[0]) && createTSUnionType) {\n    return createTSUnionType(types);\n  }\n\n  if (createFlowUnionType) {\n    return createFlowUnionType(types);\n  }\n\n  return createUnionTypeAnnotation(types);\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  const violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(violation => {\n    violation = violation.resolve();\n\n    const status = violation._guessExecutionStatusRelativeTo(path);\n\n    if (functions && status === \"unknown\") functions.push(violation);\n    return status === \"before\";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  const operator = path.node.operator;\n  const right = path.get(\"right\").resolve();\n  const left = path.get(\"left\").resolve();\n  let target;\n\n  if (left.isIdentifier({\n    name\n  })) {\n    target = right;\n  } else if (right.isIdentifier({\n    name\n  })) {\n    target = left;\n  }\n\n  if (target) {\n    if (operator === \"===\") {\n      return target.getTypeAnnotation();\n    }\n\n    if (BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return numberTypeAnnotation();\n    }\n\n    return;\n  }\n\n  if (operator !== \"===\" && operator !== \"==\") return;\n  let typeofPath;\n  let typePath;\n\n  if (left.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = right;\n    typePath = left;\n  }\n\n  if (!typeofPath) return;\n  if (!typeofPath.get(\"argument\").isIdentifier({\n    name\n  })) return;\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n  const typeValue = typePath.node.value;\n  if (typeof typeValue !== \"string\") return;\n  return createTypeAnnotationBasedOnTypeof(typeValue);\n}\n\nfunction getParentConditionalPath(binding, path, name) {\n  let parentPath;\n\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === \"test\") {\n        return;\n      }\n\n      return parentPath;\n    }\n\n    if (parentPath.isFunction()) {\n      if (parentPath.parentPath.scope.getBinding(name) !== binding) return;\n    }\n\n    path = parentPath;\n  }\n}\n\nfunction getConditionalAnnotation(binding, path, name) {\n  const ifStatement = getParentConditionalPath(binding, path, name);\n  if (!ifStatement) return;\n  const test = ifStatement.get(\"test\");\n  const paths = [test];\n  const types = [];\n\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i];\n\n    if (path.isLogicalExpression()) {\n      if (path.node.operator === \"&&\") {\n        paths.push(path.get(\"left\"));\n        paths.push(path.get(\"right\"));\n      }\n    } else if (path.isBinaryExpression()) {\n      const type = inferAnnotationFromBinaryExpression(name, path);\n      if (type) types.push(type);\n    }\n  }\n\n  if (types.length) {\n    if (isTSTypeAnnotation(types[0]) && createTSUnionType) {\n      return {\n        typeAnnotation: createTSUnionType(types),\n        ifStatement\n      };\n    }\n\n    if (createFlowUnionType) {\n      return {\n        typeAnnotation: createFlowUnionType(types),\n        ifStatement\n      };\n    }\n\n    return {\n      typeAnnotation: createUnionTypeAnnotation(types),\n      ifStatement\n    };\n  }\n\n  return getConditionalAnnotation(ifStatement, name);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._replaceWith = _replaceWith;\nexports.replaceExpressionWithStatements = replaceExpressionWithStatements;\nexports.replaceInline = replaceInline;\nexports.replaceWith = replaceWith;\nexports.replaceWithMultiple = replaceWithMultiple;\nexports.replaceWithSourceString = replaceWithSourceString;\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nvar _cache = require(\"../cache\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _t = require(\"@babel/types\");\n\nvar _helperHoistVariables = require(\"@babel/helper-hoist-variables\");\n\nconst {\n  FUNCTION_TYPES,\n  arrowFunctionExpression,\n  assignmentExpression,\n  awaitExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  inheritLeadingComments,\n  inheritTrailingComments,\n  inheritsComments,\n  isExpression,\n  isProgram,\n  isStatement,\n  removeComments,\n  returnStatement,\n  toSequenceExpression,\n  validate,\n  yieldExpression\n} = _t;\n\nfunction replaceWithMultiple(nodes) {\n  var _pathCache$get;\n\n  this.resync();\n  nodes = this._verifyNodeList(nodes);\n  inheritLeadingComments(nodes[0], this.node);\n  inheritTrailingComments(nodes[nodes.length - 1], this.node);\n  (_pathCache$get = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get.delete(this.node);\n  this.node = this.container[this.key] = null;\n  const paths = this.insertAfter(nodes);\n\n  if (this.node) {\n    this.requeue();\n  } else {\n    this.remove();\n  }\n\n  return paths;\n}\n\nfunction replaceWithSourceString(replacement) {\n  this.resync();\n\n  try {\n    replacement = `(${replacement})`;\n    replacement = (0, _parser.parse)(replacement);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \" - make sure this is an expression.\\n\" + (0, _codeFrame.codeFrameColumns)(replacement, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      });\n      err.code = \"BABEL_REPLACE_SOURCE_ERROR\";\n    }\n\n    throw err;\n  }\n\n  replacement = replacement.program.body[0].expression;\n\n  _index.default.removeProperties(replacement);\n\n  return this.replaceWith(replacement);\n}\n\nfunction replaceWith(replacement) {\n  this.resync();\n\n  if (this.removed) {\n    throw new Error(\"You can't replace this node, we've already removed it\");\n  }\n\n  if (replacement instanceof _index2.default) {\n    replacement = replacement.node;\n  }\n\n  if (!replacement) {\n    throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");\n  }\n\n  if (this.node === replacement) {\n    return [this];\n  }\n\n  if (this.isProgram() && !isProgram(replacement)) {\n    throw new Error(\"You can only replace a Program root node with another Program node\");\n  }\n\n  if (Array.isArray(replacement)) {\n    throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");\n  }\n\n  if (typeof replacement === \"string\") {\n    throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");\n  }\n\n  let nodePath = \"\";\n\n  if (this.isNodeType(\"Statement\") && isExpression(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n      replacement = expressionStatement(replacement);\n      nodePath = \"expression\";\n    }\n  }\n\n  if (this.isNodeType(\"Expression\") && isStatement(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n      return this.replaceExpressionWithStatements([replacement]);\n    }\n  }\n\n  const oldNode = this.node;\n\n  if (oldNode) {\n    inheritsComments(replacement, oldNode);\n    removeComments(oldNode);\n  }\n\n  this._replaceWith(replacement);\n\n  this.type = replacement.type;\n  this.setScope();\n  this.requeue();\n  return [nodePath ? this.get(nodePath) : this];\n}\n\nfunction _replaceWith(node) {\n  var _pathCache$get2;\n\n  if (!this.container) {\n    throw new ReferenceError(\"Container is falsy\");\n  }\n\n  if (this.inList) {\n    validate(this.parent, this.key, [node]);\n  } else {\n    validate(this.parent, this.key, node);\n  }\n\n  this.debug(`Replace with ${node == null ? void 0 : node.type}`);\n  (_pathCache$get2 = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get2.set(node, this).delete(this.node);\n  this.node = this.container[this.key] = node;\n}\n\nfunction replaceExpressionWithStatements(nodes) {\n  this.resync();\n  const nodesAsSequenceExpression = toSequenceExpression(nodes, this.scope);\n\n  if (nodesAsSequenceExpression) {\n    return this.replaceWith(nodesAsSequenceExpression)[0].get(\"expressions\");\n  }\n\n  const functionParent = this.getFunctionParent();\n  const isParentAsync = functionParent == null ? void 0 : functionParent.is(\"async\");\n  const isParentGenerator = functionParent == null ? void 0 : functionParent.is(\"generator\");\n  const container = arrowFunctionExpression([], blockStatement(nodes));\n  this.replaceWith(callExpression(container, []));\n  const callee = this.get(\"callee\");\n  (0, _helperHoistVariables.default)(callee.get(\"body\"), id => {\n    this.scope.push({\n      id\n    });\n  }, \"var\");\n  const completionRecords = this.get(\"callee\").getCompletionRecords();\n\n  for (const path of completionRecords) {\n    if (!path.isExpressionStatement()) continue;\n    const loop = path.findParent(path => path.isLoop());\n\n    if (loop) {\n      let uid = loop.getData(\"expressionReplacementReturnUid\");\n\n      if (!uid) {\n        uid = callee.scope.generateDeclaredUidIdentifier(\"ret\");\n        callee.get(\"body\").pushContainer(\"body\", returnStatement(cloneNode(uid)));\n        loop.setData(\"expressionReplacementReturnUid\", uid);\n      } else {\n        uid = identifier(uid.name);\n      }\n\n      path.get(\"expression\").replaceWith(assignmentExpression(\"=\", cloneNode(uid), path.node.expression));\n    } else {\n      path.replaceWith(returnStatement(path.node.expression));\n    }\n  }\n\n  callee.arrowFunctionToExpression();\n  const newCallee = callee;\n\n  const needToAwaitFunction = isParentAsync && _index.default.hasType(this.get(\"callee.body\").node, \"AwaitExpression\", FUNCTION_TYPES);\n\n  const needToYieldFunction = isParentGenerator && _index.default.hasType(this.get(\"callee.body\").node, \"YieldExpression\", FUNCTION_TYPES);\n\n  if (needToAwaitFunction) {\n    newCallee.set(\"async\", true);\n\n    if (!needToYieldFunction) {\n      this.replaceWith(awaitExpression(this.node));\n    }\n  }\n\n  if (needToYieldFunction) {\n    newCallee.set(\"generator\", true);\n    this.replaceWith(yieldExpression(this.node, true));\n  }\n\n  return newCallee.get(\"body.body\");\n}\n\nfunction replaceInline(nodes) {\n  this.resync();\n\n  if (Array.isArray(nodes)) {\n    if (Array.isArray(this.container)) {\n      nodes = this._verifyNodeList(nodes);\n\n      const paths = this._containerInsertAfter(nodes);\n\n      this.remove();\n      return paths;\n    } else {\n      return this.replaceWithMultiple(nodes);\n    }\n  } else {\n    return this.replaceWith(nodes);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluate = evaluate;\nexports.evaluateTruthy = evaluateTruthy;\nconst VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nconst INVALID_METHODS = [\"random\"];\n\nfunction evaluateTruthy() {\n  const res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction deopt(path, state) {\n  if (!state.confident) return;\n  state.deoptPath = path;\n  state.confident = false;\n}\n\nfunction evaluateCached(path, state) {\n  const {\n    node\n  } = path;\n  const {\n    seen\n  } = state;\n\n  if (seen.has(node)) {\n    const existing = seen.get(node);\n\n    if (existing.resolved) {\n      return existing.value;\n    } else {\n      deopt(path, state);\n      return;\n    }\n  } else {\n    const item = {\n      resolved: false\n    };\n    seen.set(node, item);\n\n    const val = _evaluate(path, state);\n\n    if (state.confident) {\n      item.resolved = true;\n      item.value = val;\n    }\n\n    return val;\n  }\n}\n\nfunction _evaluate(path, state) {\n  if (!state.confident) return;\n\n  if (path.isSequenceExpression()) {\n    const exprs = path.get(\"expressions\");\n    return evaluateCached(exprs[exprs.length - 1], state);\n  }\n\n  if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n    return path.node.value;\n  }\n\n  if (path.isNullLiteral()) {\n    return null;\n  }\n\n  if (path.isTemplateLiteral()) {\n    return evaluateQuasis(path, path.node.quasis, state);\n  }\n\n  if (path.isTaggedTemplateExpression() && path.get(\"tag\").isMemberExpression()) {\n    const object = path.get(\"tag.object\");\n    const {\n      node: {\n        name\n      }\n    } = object;\n    const property = path.get(\"tag.property\");\n\n    if (object.isIdentifier() && name === \"String\" && !path.scope.getBinding(name) && property.isIdentifier() && property.node.name === \"raw\") {\n      return evaluateQuasis(path, path.node.quasi.quasis, state, true);\n    }\n  }\n\n  if (path.isConditionalExpression()) {\n    const testResult = evaluateCached(path.get(\"test\"), state);\n    if (!state.confident) return;\n\n    if (testResult) {\n      return evaluateCached(path.get(\"consequent\"), state);\n    } else {\n      return evaluateCached(path.get(\"alternate\"), state);\n    }\n  }\n\n  if (path.isExpressionWrapper()) {\n    return evaluateCached(path.get(\"expression\"), state);\n  }\n\n  if (path.isMemberExpression() && !path.parentPath.isCallExpression({\n    callee: path.node\n  })) {\n    const property = path.get(\"property\");\n    const object = path.get(\"object\");\n\n    if (object.isLiteral() && property.isIdentifier()) {\n      const value = object.node.value;\n      const type = typeof value;\n\n      if (type === \"number\" || type === \"string\") {\n        return value[property.node.name];\n      }\n    }\n  }\n\n  if (path.isReferencedIdentifier()) {\n    const binding = path.scope.getBinding(path.node.name);\n\n    if (binding && binding.constantViolations.length > 0) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding && path.node.start < binding.path.node.end) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding != null && binding.hasValue) {\n      return binding.value;\n    } else {\n      if (path.node.name === \"undefined\") {\n        return binding ? deopt(binding.path, state) : undefined;\n      } else if (path.node.name === \"Infinity\") {\n        return binding ? deopt(binding.path, state) : Infinity;\n      } else if (path.node.name === \"NaN\") {\n        return binding ? deopt(binding.path, state) : NaN;\n      }\n\n      const resolved = path.resolve();\n\n      if (resolved === path) {\n        return deopt(path, state);\n      } else {\n        return evaluateCached(resolved, state);\n      }\n    }\n  }\n\n  if (path.isUnaryExpression({\n    prefix: true\n  })) {\n    if (path.node.operator === \"void\") {\n      return undefined;\n    }\n\n    const argument = path.get(\"argument\");\n\n    if (path.node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n      return \"function\";\n    }\n\n    const arg = evaluateCached(argument, state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"!\":\n        return !arg;\n\n      case \"+\":\n        return +arg;\n\n      case \"-\":\n        return -arg;\n\n      case \"~\":\n        return ~arg;\n\n      case \"typeof\":\n        return typeof arg;\n    }\n  }\n\n  if (path.isArrayExpression()) {\n    const arr = [];\n    const elems = path.get(\"elements\");\n\n    for (const elem of elems) {\n      const elemValue = elem.evaluate();\n\n      if (elemValue.confident) {\n        arr.push(elemValue.value);\n      } else {\n        return deopt(elemValue.deopt, state);\n      }\n    }\n\n    return arr;\n  }\n\n  if (path.isObjectExpression()) {\n    const obj = {};\n    const props = path.get(\"properties\");\n\n    for (const prop of props) {\n      if (prop.isObjectMethod() || prop.isSpreadElement()) {\n        return deopt(prop, state);\n      }\n\n      const keyPath = prop.get(\"key\");\n      let key = keyPath;\n\n      if (prop.node.computed) {\n        key = key.evaluate();\n\n        if (!key.confident) {\n          return deopt(key.deopt, state);\n        }\n\n        key = key.value;\n      } else if (key.isIdentifier()) {\n        key = key.node.name;\n      } else {\n        key = key.node.value;\n      }\n\n      const valuePath = prop.get(\"value\");\n      let value = valuePath.evaluate();\n\n      if (!value.confident) {\n        return deopt(value.deopt, state);\n      }\n\n      value = value.value;\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  if (path.isLogicalExpression()) {\n    const wasConfident = state.confident;\n    const left = evaluateCached(path.get(\"left\"), state);\n    const leftConfident = state.confident;\n    state.confident = wasConfident;\n    const right = evaluateCached(path.get(\"right\"), state);\n    const rightConfident = state.confident;\n\n    switch (path.node.operator) {\n      case \"||\":\n        state.confident = leftConfident && (!!left || rightConfident);\n        if (!state.confident) return;\n        return left || right;\n\n      case \"&&\":\n        state.confident = leftConfident && (!left || rightConfident);\n        if (!state.confident) return;\n        return left && right;\n    }\n  }\n\n  if (path.isBinaryExpression()) {\n    const left = evaluateCached(path.get(\"left\"), state);\n    if (!state.confident) return;\n    const right = evaluateCached(path.get(\"right\"), state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"-\":\n        return left - right;\n\n      case \"+\":\n        return left + right;\n\n      case \"/\":\n        return left / right;\n\n      case \"*\":\n        return left * right;\n\n      case \"%\":\n        return left % right;\n\n      case \"**\":\n        return Math.pow(left, right);\n\n      case \"<\":\n        return left < right;\n\n      case \">\":\n        return left > right;\n\n      case \"<=\":\n        return left <= right;\n\n      case \">=\":\n        return left >= right;\n\n      case \"==\":\n        return left == right;\n\n      case \"!=\":\n        return left != right;\n\n      case \"===\":\n        return left === right;\n\n      case \"!==\":\n        return left !== right;\n\n      case \"|\":\n        return left | right;\n\n      case \"&\":\n        return left & right;\n\n      case \"^\":\n        return left ^ right;\n\n      case \"<<\":\n        return left << right;\n\n      case \">>\":\n        return left >> right;\n\n      case \">>>\":\n        return left >>> right;\n    }\n  }\n\n  if (path.isCallExpression()) {\n    const callee = path.get(\"callee\");\n    let context;\n    let func;\n\n    if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {\n      func = global[callee.node.name];\n    }\n\n    if (callee.isMemberExpression()) {\n      const object = callee.get(\"object\");\n      const property = callee.get(\"property\");\n\n      if (object.isIdentifier() && property.isIdentifier() && VALID_CALLEES.indexOf(object.node.name) >= 0 && INVALID_METHODS.indexOf(property.node.name) < 0) {\n        context = global[object.node.name];\n        func = context[property.node.name];\n      }\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        const type = typeof object.node.value;\n\n        if (type === \"string\" || type === \"number\") {\n          context = object.node.value;\n          func = context[property.node.name];\n        }\n      }\n    }\n\n    if (func) {\n      const args = path.get(\"arguments\").map(arg => evaluateCached(arg, state));\n      if (!state.confident) return;\n      return func.apply(context, args);\n    }\n  }\n\n  deopt(path, state);\n}\n\nfunction evaluateQuasis(path, quasis, state, raw = false) {\n  let str = \"\";\n  let i = 0;\n  const exprs = path.get(\"expressions\");\n\n  for (const elem of quasis) {\n    if (!state.confident) break;\n    str += raw ? elem.value.raw : elem.value.cooked;\n    const expr = exprs[i++];\n    if (expr) str += String(evaluateCached(expr, state));\n  }\n\n  if (!state.confident) return;\n  return str;\n}\n\nfunction evaluate() {\n  const state = {\n    confident: true,\n    deoptPath: null,\n    seen: new Map()\n  };\n  let value = evaluateCached(this, state);\n  if (!state.confident) value = undefined;\n  return {\n    confident: state.confident,\n    deopt: state.deoptPath,\n    value: value\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrowFunctionToExpression = arrowFunctionToExpression;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\nexports.ensureBlock = ensureBlock;\nexports.toComputedKey = toComputedKey;\nexports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\n\nvar _t = require(\"@babel/types\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nconst {\n  arrowFunctionExpression,\n  assignmentExpression,\n  binaryExpression,\n  blockStatement,\n  callExpression,\n  conditionalExpression,\n  expressionStatement,\n  identifier,\n  isIdentifier,\n  jsxIdentifier,\n  memberExpression,\n  metaProperty,\n  numericLiteral,\n  objectExpression,\n  restElement,\n  returnStatement,\n  sequenceExpression,\n  spreadElement,\n  stringLiteral,\n  super: _super,\n  thisExpression,\n  toExpression,\n  unaryExpression\n} = _t;\n\nfunction toComputedKey() {\n  let key;\n\n  if (this.isMemberExpression()) {\n    key = this.node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = this.node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!this.node.computed) {\n    if (isIdentifier(key)) key = stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  const body = this.get(\"body\");\n  const bodyNode = body.node;\n\n  if (Array.isArray(body)) {\n    throw new Error(\"Can't convert array path to a block statement\");\n  }\n\n  if (!bodyNode) {\n    throw new Error(\"Can't convert node without a body\");\n  }\n\n  if (body.isBlockStatement()) {\n    return bodyNode;\n  }\n\n  const statements = [];\n  let stringPath = \"body\";\n  let key;\n  let listKey;\n\n  if (body.isStatement()) {\n    listKey = \"body\";\n    key = 0;\n    statements.push(body.node);\n  } else {\n    stringPath += \".body.0\";\n\n    if (this.isFunction()) {\n      key = \"argument\";\n      statements.push(returnStatement(body.node));\n    } else {\n      key = \"expression\";\n      statements.push(expressionStatement(body.node));\n    }\n  }\n\n  this.node.body = blockStatement(statements);\n  const parentPath = this.get(stringPath);\n  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n  return this.node;\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n  this.arrowFunctionToExpression();\n}\n\nfunction unwrapFunctionEnvironment() {\n  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n    throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n  }\n\n  hoistFunctionEnvironment(this);\n}\n\nfunction arrowFunctionToExpression({\n  allowInsertArrow = true,\n  specCompliant = false,\n  noNewArrows = !specCompliant\n} = {}) {\n  if (!this.isArrowFunctionExpression()) {\n    throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n  }\n\n  const {\n    thisBinding,\n    fnPath: fn\n  } = hoistFunctionEnvironment(this, noNewArrows, allowInsertArrow);\n  fn.ensureBlock();\n  fn.node.type = \"FunctionExpression\";\n\n  if (!noNewArrows) {\n    const checkBinding = thisBinding ? null : fn.scope.generateUidIdentifier(\"arrowCheckId\");\n\n    if (checkBinding) {\n      fn.parentPath.scope.push({\n        id: checkBinding,\n        init: objectExpression([])\n      });\n    }\n\n    fn.get(\"body\").unshiftContainer(\"body\", expressionStatement(callExpression(this.hub.addHelper(\"newArrowCheck\"), [thisExpression(), checkBinding ? identifier(checkBinding.name) : identifier(thisBinding)])));\n    fn.replaceWith(callExpression(memberExpression((0, _helperFunctionName.default)(this, true) || fn.node, identifier(\"bind\")), [checkBinding ? identifier(checkBinding.name) : thisExpression()]));\n  }\n}\n\nfunction hoistFunctionEnvironment(fnPath, noNewArrows = true, allowInsertArrow = true) {\n  let arrowParent;\n  let thisEnvFn = fnPath.findParent(p => {\n    if (p.isArrowFunctionExpression()) {\n      var _arrowParent;\n\n      (_arrowParent = arrowParent) != null ? _arrowParent : arrowParent = p;\n      return false;\n    }\n\n    return p.isFunction() || p.isProgram() || p.isClassProperty({\n      static: false\n    }) || p.isClassPrivateProperty({\n      static: false\n    });\n  });\n  const inConstructor = thisEnvFn.isClassMethod({\n    kind: \"constructor\"\n  });\n\n  if (thisEnvFn.isClassProperty() || thisEnvFn.isClassPrivateProperty()) {\n    if (arrowParent) {\n      thisEnvFn = arrowParent;\n    } else if (allowInsertArrow) {\n      fnPath.replaceWith(callExpression(arrowFunctionExpression([], toExpression(fnPath.node)), []));\n      thisEnvFn = fnPath.get(\"callee\");\n      fnPath = thisEnvFn.get(\"body\");\n    } else {\n      throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n    }\n  }\n\n  const {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  } = getScopeInformation(fnPath);\n\n  if (inConstructor && superCalls.length > 0) {\n    if (!allowInsertArrow) {\n      throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n    }\n\n    const allSuperCalls = [];\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        allSuperCalls.push(child);\n      }\n\n    });\n    const superBinding = getSuperBinding(thisEnvFn);\n    allSuperCalls.forEach(superCall => {\n      const callee = identifier(superBinding);\n      callee.loc = superCall.node.callee.loc;\n      superCall.get(\"callee\").replaceWith(callee);\n    });\n  }\n\n  if (argumentsPaths.length > 0) {\n    const argumentsBinding = getBinding(thisEnvFn, \"arguments\", () => {\n      const args = () => identifier(\"arguments\");\n\n      if (thisEnvFn.scope.path.isProgram()) {\n        return conditionalExpression(binaryExpression(\"===\", unaryExpression(\"typeof\", args()), stringLiteral(\"undefined\")), thisEnvFn.scope.buildUndefinedNode(), args());\n      } else {\n        return args();\n      }\n    });\n    argumentsPaths.forEach(argumentsChild => {\n      const argsRef = identifier(argumentsBinding);\n      argsRef.loc = argumentsChild.node.loc;\n      argumentsChild.replaceWith(argsRef);\n    });\n  }\n\n  if (newTargetPaths.length > 0) {\n    const newTargetBinding = getBinding(thisEnvFn, \"newtarget\", () => metaProperty(identifier(\"new\"), identifier(\"target\")));\n    newTargetPaths.forEach(targetChild => {\n      const targetRef = identifier(newTargetBinding);\n      targetRef.loc = targetChild.node.loc;\n      targetChild.replaceWith(targetRef);\n    });\n  }\n\n  if (superProps.length > 0) {\n    if (!allowInsertArrow) {\n      throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n    }\n\n    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);\n    flatSuperProps.forEach(superProp => {\n      const key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n      const isAssignment = superProp.parentPath.isAssignmentExpression({\n        left: superProp.node\n      });\n      const isCall = superProp.parentPath.isCallExpression({\n        callee: superProp.node\n      });\n      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n      const args = [];\n\n      if (superProp.node.computed) {\n        args.push(superProp.get(\"property\").node);\n      }\n\n      if (isAssignment) {\n        const value = superProp.parentPath.node.right;\n        args.push(value);\n      }\n\n      const call = callExpression(identifier(superBinding), args);\n\n      if (isCall) {\n        superProp.parentPath.unshiftContainer(\"arguments\", thisExpression());\n        superProp.replaceWith(memberExpression(call, identifier(\"call\")));\n        thisPaths.push(superProp.parentPath.get(\"arguments.0\"));\n      } else if (isAssignment) {\n        superProp.parentPath.replaceWith(call);\n      } else {\n        superProp.replaceWith(call);\n      }\n    });\n  }\n\n  let thisBinding;\n\n  if (thisPaths.length > 0 || !noNewArrows) {\n    thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n    if (noNewArrows || inConstructor && hasSuperClass(thisEnvFn)) {\n      thisPaths.forEach(thisChild => {\n        const thisRef = thisChild.isJSX() ? jsxIdentifier(thisBinding) : identifier(thisBinding);\n        thisRef.loc = thisChild.node.loc;\n        thisChild.replaceWith(thisRef);\n      });\n      if (!noNewArrows) thisBinding = null;\n    }\n  }\n\n  return {\n    thisBinding,\n    fnPath\n  };\n}\n\nfunction standardizeSuperProperty(superProp) {\n  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n    const assignmentPath = superProp.parentPath;\n    const op = assignmentPath.node.operator.slice(0, -1);\n    const value = assignmentPath.node.right;\n    assignmentPath.node.operator = \"=\";\n\n    if (superProp.node.computed) {\n      const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n      assignmentPath.get(\"left\").replaceWith(memberExpression(superProp.node.object, assignmentExpression(\"=\", tmp, superProp.node.property), true));\n      assignmentPath.get(\"right\").replaceWith(binaryExpression(op, memberExpression(superProp.node.object, identifier(tmp.name), true), value));\n    } else {\n      assignmentPath.get(\"left\").replaceWith(memberExpression(superProp.node.object, superProp.node.property));\n      assignmentPath.get(\"right\").replaceWith(binaryExpression(op, memberExpression(superProp.node.object, identifier(superProp.node.property.name)), value));\n    }\n\n    return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n  } else if (superProp.parentPath.isUpdateExpression()) {\n    const updateExpr = superProp.parentPath;\n    const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n    const parts = [assignmentExpression(\"=\", tmp, memberExpression(superProp.node.object, computedKey ? assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), assignmentExpression(\"=\", memberExpression(superProp.node.object, computedKey ? identifier(computedKey.name) : superProp.node.property, superProp.node.computed), binaryExpression(\"+\", identifier(tmp.name), numericLiteral(1)))];\n\n    if (!superProp.parentPath.node.prefix) {\n      parts.push(identifier(tmp.name));\n    }\n\n    updateExpr.replaceWith(sequenceExpression(parts));\n    const left = updateExpr.get(\"expressions.0.right\");\n    const right = updateExpr.get(\"expressions.1.left\");\n    return [left, right];\n  }\n\n  return [superProp];\n}\n\nfunction hasSuperClass(thisEnvFn) {\n  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n}\n\nfunction getThisBinding(thisEnvFn, inConstructor) {\n  return getBinding(thisEnvFn, \"this\", thisBinding => {\n    if (!inConstructor || !hasSuperClass(thisEnvFn)) return thisExpression();\n    const supers = new WeakSet();\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        if (supers.has(child.node)) return;\n        supers.add(child.node);\n        child.replaceWithMultiple([child.node, assignmentExpression(\"=\", identifier(thisBinding), identifier(\"this\"))]);\n      }\n\n    });\n  });\n}\n\nfunction getSuperBinding(thisEnvFn) {\n  return getBinding(thisEnvFn, \"supercall\", () => {\n    const argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n    return arrowFunctionExpression([restElement(argsBinding)], callExpression(_super(), [spreadElement(identifier(argsBinding.name))]));\n  });\n}\n\nfunction getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n  const op = isAssignment ? \"set\" : \"get\";\n  return getBinding(thisEnvFn, `superprop_${op}:${propName || \"\"}`, () => {\n    const argsList = [];\n    let fnBody;\n\n    if (propName) {\n      fnBody = memberExpression(_super(), identifier(propName));\n    } else {\n      const method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n      argsList.unshift(method);\n      fnBody = memberExpression(_super(), identifier(method.name), true);\n    }\n\n    if (isAssignment) {\n      const valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n      argsList.push(valueIdent);\n      fnBody = assignmentExpression(\"=\", fnBody, identifier(valueIdent.name));\n    }\n\n    return arrowFunctionExpression(argsList, fnBody);\n  });\n}\n\nfunction getBinding(thisEnvFn, key, init) {\n  const cacheKey = \"binding:\" + key;\n  let data = thisEnvFn.getData(cacheKey);\n\n  if (!data) {\n    const id = thisEnvFn.scope.generateUidIdentifier(key);\n    data = id.name;\n    thisEnvFn.setData(cacheKey, data);\n    thisEnvFn.scope.push({\n      id: id,\n      init: init(data)\n    });\n  }\n\n  return data;\n}\n\nfunction getScopeInformation(fnPath) {\n  const thisPaths = [];\n  const argumentsPaths = [];\n  const newTargetPaths = [];\n  const superProps = [];\n  const superCalls = [];\n  fnPath.traverse({\n    ClassProperty(child) {\n      child.skip();\n    },\n\n    Function(child) {\n      if (child.isArrowFunctionExpression()) return;\n      child.skip();\n    },\n\n    ThisExpression(child) {\n      thisPaths.push(child);\n    },\n\n    JSXIdentifier(child) {\n      if (child.node.name !== \"this\") return;\n\n      if (!child.parentPath.isJSXMemberExpression({\n        object: child.node\n      }) && !child.parentPath.isJSXOpeningElement({\n        name: child.node\n      })) {\n        return;\n      }\n\n      thisPaths.push(child);\n    },\n\n    CallExpression(child) {\n      if (child.get(\"callee\").isSuper()) superCalls.push(child);\n    },\n\n    MemberExpression(child) {\n      if (child.get(\"object\").isSuper()) superProps.push(child);\n    },\n\n    ReferencedIdentifier(child) {\n      if (child.node.name !== \"arguments\") return;\n      let curr = child.scope;\n\n      do {\n        if (curr.hasOwnBinding(\"arguments\")) {\n          curr.rename(\"arguments\");\n          return;\n        }\n\n        if (curr.path.isFunction() && !curr.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (curr = curr.parent);\n\n      argumentsPaths.push(child);\n    },\n\n    MetaProperty(child) {\n      if (!child.get(\"meta\").isIdentifier({\n        name: \"new\"\n      })) return;\n      if (!child.get(\"property\").isIdentifier({\n        name: \"target\"\n      })) return;\n      newTargetPaths.push(child);\n    }\n\n  });\n  return {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;\nexports._resolve = _resolve;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.equals = equals;\nexports.getSource = getSource;\nexports.has = has;\nexports.is = void 0;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isConstantExpression = isConstantExpression;\nexports.isInStrictMode = isInStrictMode;\nexports.isNodeType = isNodeType;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.matchesPattern = matchesPattern;\nexports.referencesImport = referencesImport;\nexports.resolve = resolve;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  STATEMENT_OR_BLOCK_KEYS,\n  VISITOR_KEYS,\n  isBlockStatement,\n  isExpression,\n  isIdentifier,\n  isLiteral,\n  isStringLiteral,\n  isType,\n  matchesPattern: _matchesPattern\n} = _t;\n\nfunction matchesPattern(pattern, allowPartial) {\n  return _matchesPattern(this.node, pattern, allowPartial);\n}\n\nfunction has(key) {\n  const val = this.node && this.node[key];\n\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nconst is = has;\nexports.is = is;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === \"init\" || this.key === \"left\") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== \"body\" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  let path = this;\n  let first = true;\n\n  do {\n    const container = path.container;\n\n    if (path.isFunction() && !first) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return STATEMENT_OR_BLOCK_KEYS.includes(this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) {\n    if ((this.isMemberExpression() || this.isOptionalMemberExpression()) && (this.node.computed ? isStringLiteral(this.node.property, {\n      value: importName\n    }) : this.node.property.name === importName)) {\n      const object = this.get(\"object\");\n      return object.isReferencedIdentifier() && object.referencesImport(moduleSource, \"*\");\n    }\n\n    return false;\n  }\n\n  const binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== \"module\") return false;\n  const path = binding.path;\n  const parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === \"default\") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === \"*\") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && isIdentifier(path.node.imported, {\n    name: importName\n  })) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  const node = this.node;\n\n  if (node.end) {\n    const code = this.hub.getCode();\n    if (code) return code.slice(node.start, node.end);\n  }\n\n  return \"\";\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== \"after\";\n}\n\nfunction getOuterFunction(path) {\n  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;\n}\n\nfunction isExecutionUncertain(type, key) {\n  switch (type) {\n    case \"LogicalExpression\":\n      return key === \"right\";\n\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      return key === \"consequent\" || key === \"alternate\";\n\n    case \"WhileStatement\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      return key === \"body\";\n\n    case \"ForStatement\":\n      return key === \"body\" || key === \"update\";\n\n    case \"SwitchStatement\":\n      return key === \"cases\";\n\n    case \"TryStatement\":\n      return key === \"handler\";\n\n    case \"AssignmentPattern\":\n      return key === \"right\";\n\n    case \"OptionalMemberExpression\":\n      return key === \"property\";\n\n    case \"OptionalCallExpression\":\n      return key === \"arguments\";\n\n    default:\n      return false;\n  }\n}\n\nfunction isExecutionUncertainInList(paths, maxIndex) {\n  for (let i = 0; i < maxIndex; i++) {\n    const path = paths[i];\n\n    if (isExecutionUncertain(path.parent.type, path.parentKey)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  const funcParent = {\n    this: getOuterFunction(this),\n    target: getOuterFunction(target)\n  };\n\n  if (funcParent.target.node !== funcParent.this.node) {\n    return this._guessExecutionStatusRelativeToDifferentFunctions(funcParent.target);\n  }\n\n  const paths = {\n    target: target.getAncestry(),\n    this: this.getAncestry()\n  };\n  if (paths.target.indexOf(this) >= 0) return \"after\";\n  if (paths.this.indexOf(target) >= 0) return \"before\";\n  let commonPath;\n  const commonIndex = {\n    target: 0,\n    this: 0\n  };\n\n  while (!commonPath && commonIndex.this < paths.this.length) {\n    const path = paths.this[commonIndex.this];\n    commonIndex.target = paths.target.indexOf(path);\n\n    if (commonIndex.target >= 0) {\n      commonPath = path;\n    } else {\n      commonIndex.this++;\n    }\n  }\n\n  if (!commonPath) {\n    throw new Error(\"Internal Babel error - The two compared nodes\" + \" don't appear to belong to the same program.\");\n  }\n\n  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {\n    return \"unknown\";\n  }\n\n  const divergence = {\n    this: paths.this[commonIndex.this - 1],\n    target: paths.target[commonIndex.target - 1]\n  };\n\n  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {\n    return divergence.target.key > divergence.this.key ? \"before\" : \"after\";\n  }\n\n  const keys = VISITOR_KEYS[commonPath.type];\n  const keyPosition = {\n    this: keys.indexOf(divergence.this.parentKey),\n    target: keys.indexOf(divergence.target.parentKey)\n  };\n  return keyPosition.target > keyPosition.this ? \"before\" : \"after\";\n}\n\nconst executionOrderCheckedNodes = new WeakSet();\n\nfunction _guessExecutionStatusRelativeToDifferentFunctions(target) {\n  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {\n    return \"unknown\";\n  }\n\n  const binding = target.scope.getBinding(target.node.id.name);\n  if (!binding.references) return \"before\";\n  const referencePaths = binding.referencePaths;\n  let allStatus;\n\n  for (const path of referencePaths) {\n    const childOfFunction = !!path.find(path => path.node === target.node);\n    if (childOfFunction) continue;\n\n    if (path.key !== \"callee\" || !path.parentPath.isCallExpression()) {\n      return \"unknown\";\n    }\n\n    if (executionOrderCheckedNodes.has(path.node)) continue;\n    executionOrderCheckedNodes.add(path.node);\n\n    const status = this._guessExecutionStatusRelativeTo(path);\n\n    executionOrderCheckedNodes.delete(path.node);\n\n    if (allStatus && allStatus !== status) {\n      return \"unknown\";\n    } else {\n      allStatus = status;\n    }\n  }\n\n  return allStatus;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get(\"id\").isIdentifier()) {\n      return this.get(\"init\").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n    if (!binding.constant) return;\n    if (binding.kind === \"module\") return;\n\n    if (binding.path !== this) {\n      const ret = binding.path.resolve(dangerous, resolved);\n      if (this.find(parent => parent.node === ret.node)) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get(\"expression\").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n    const targetKey = this.toComputedKey();\n    if (!isLiteral(targetKey)) return;\n    const targetName = targetKey.value;\n    const target = this.get(\"object\").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      const props = target.get(\"properties\");\n\n      for (const prop of props) {\n        if (!prop.isProperty()) continue;\n        const key = prop.get(\"key\");\n        let match = prop.isnt(\"computed\") && key.isIdentifier({\n          name: targetName\n        });\n        match = match || key.isLiteral({\n          value: targetName\n        });\n        if (match) return prop.get(\"value\").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      const elems = target.get(\"elements\");\n      const elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\nfunction isConstantExpression() {\n  if (this.isIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return false;\n    return binding.constant;\n  }\n\n  if (this.isLiteral()) {\n    if (this.isRegExpLiteral()) {\n      return false;\n    }\n\n    if (this.isTemplateLiteral()) {\n      return this.get(\"expressions\").every(expression => expression.isConstantExpression());\n    }\n\n    return true;\n  }\n\n  if (this.isUnaryExpression()) {\n    if (this.node.operator !== \"void\") {\n      return false;\n    }\n\n    return this.get(\"argument\").isConstantExpression();\n  }\n\n  if (this.isBinaryExpression()) {\n    return this.get(\"left\").isConstantExpression() && this.get(\"right\").isConstantExpression();\n  }\n\n  return false;\n}\n\nfunction isInStrictMode() {\n  const start = this.isProgram() ? this : this.parentPath;\n  const strictParent = start.find(path => {\n    if (path.isProgram({\n      sourceType: \"module\"\n    })) return true;\n    if (path.isClass()) return true;\n    if (!path.isProgram() && !path.isFunction()) return false;\n\n    if (path.isArrowFunctionExpression() && !path.get(\"body\").isBlockStatement()) {\n      return false;\n    }\n\n    const body = path.isFunction() ? path.node.body : path.node;\n\n    for (const directive of body.directives) {\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  });\n  return !!strictParent;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._call = _call;\nexports._getQueueContexts = _getQueueContexts;\nexports._resyncKey = _resyncKey;\nexports._resyncList = _resyncList;\nexports._resyncParent = _resyncParent;\nexports._resyncRemoved = _resyncRemoved;\nexports.call = call;\nexports.isBlacklisted = exports.isDenylisted = isDenylisted;\nexports.popContext = popContext;\nexports.pushContext = pushContext;\nexports.requeue = requeue;\nexports.resync = resync;\nexports.setContext = setContext;\nexports.setKey = setKey;\nexports.setScope = setScope;\nexports.setup = setup;\nexports.skip = skip;\nexports.skipKey = skipKey;\nexports.stop = stop;\nexports.visit = visit;\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nfunction call(key) {\n  const opts = this.opts;\n  this.debug(key);\n\n  if (this.node) {\n    if (this._call(opts[key])) return true;\n  }\n\n  if (this.node) {\n    return this._call(opts[this.node.type] && opts[this.node.type][key]);\n  }\n\n  return false;\n}\n\nfunction _call(fns) {\n  if (!fns) return false;\n\n  for (const fn of fns) {\n    if (!fn) continue;\n    const node = this.node;\n    if (!node) return true;\n    const ret = fn.call(this.state, this, this.state);\n\n    if (ret && typeof ret === \"object\" && typeof ret.then === \"function\") {\n      throw new Error(`You appear to be using a plugin with an async traversal visitor, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n    }\n\n    if (ret) {\n      throw new Error(`Unexpected return value from visitor method ${fn}`);\n    }\n\n    if (this.node !== node) return true;\n    if (this._traverseFlags > 0) return true;\n  }\n\n  return false;\n}\n\nfunction isDenylisted() {\n  var _this$opts$denylist;\n\n  const denylist = (_this$opts$denylist = this.opts.denylist) != null ? _this$opts$denylist : this.opts.blacklist;\n  return denylist && denylist.indexOf(this.node.type) > -1;\n}\n\nfunction restoreContext(path, context) {\n  if (path.context !== context) {\n    path.context = context;\n    path.state = context.state;\n    path.opts = context.opts;\n  }\n}\n\nfunction visit() {\n  if (!this.node) {\n    return false;\n  }\n\n  if (this.isDenylisted()) {\n    return false;\n  }\n\n  if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {\n    return false;\n  }\n\n  const currentContext = this.context;\n\n  if (this.shouldSkip || this.call(\"enter\")) {\n    this.debug(\"Skip...\");\n    return this.shouldStop;\n  }\n\n  restoreContext(this, currentContext);\n  this.debug(\"Recursing into...\");\n\n  _index.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys);\n\n  restoreContext(this, currentContext);\n  this.call(\"exit\");\n  return this.shouldStop;\n}\n\nfunction skip() {\n  this.shouldSkip = true;\n}\n\nfunction skipKey(key) {\n  if (this.skipKeys == null) {\n    this.skipKeys = {};\n  }\n\n  this.skipKeys[key] = true;\n}\n\nfunction stop() {\n  this._traverseFlags |= _index2.SHOULD_SKIP | _index2.SHOULD_STOP;\n}\n\nfunction setScope() {\n  if (this.opts && this.opts.noScope) return;\n  let path = this.parentPath;\n  if (this.key === \"key\" && path.isMethod()) path = path.parentPath;\n  let target;\n\n  while (path && !target) {\n    if (path.opts && path.opts.noScope) return;\n    target = path.scope;\n    path = path.parentPath;\n  }\n\n  this.scope = this.getScope(target);\n  if (this.scope) this.scope.init();\n}\n\nfunction setContext(context) {\n  if (this.skipKeys != null) {\n    this.skipKeys = {};\n  }\n\n  this._traverseFlags = 0;\n\n  if (context) {\n    this.context = context;\n    this.state = context.state;\n    this.opts = context.opts;\n  }\n\n  this.setScope();\n  return this;\n}\n\nfunction resync() {\n  if (this.removed) return;\n\n  this._resyncParent();\n\n  this._resyncList();\n\n  this._resyncKey();\n}\n\nfunction _resyncParent() {\n  if (this.parentPath) {\n    this.parent = this.parentPath.node;\n  }\n}\n\nfunction _resyncKey() {\n  if (!this.container) return;\n  if (this.node === this.container[this.key]) return;\n\n  if (Array.isArray(this.container)) {\n    for (let i = 0; i < this.container.length; i++) {\n      if (this.container[i] === this.node) {\n        return this.setKey(i);\n      }\n    }\n  } else {\n    for (const key of Object.keys(this.container)) {\n      if (this.container[key] === this.node) {\n        return this.setKey(key);\n      }\n    }\n  }\n\n  this.key = null;\n}\n\nfunction _resyncList() {\n  if (!this.parent || !this.inList) return;\n  const newContainer = this.parent[this.listKey];\n  if (this.container === newContainer) return;\n  this.container = newContainer || null;\n}\n\nfunction _resyncRemoved() {\n  if (this.key == null || !this.container || this.container[this.key] !== this.node) {\n    this._markRemoved();\n  }\n}\n\nfunction popContext() {\n  this.contexts.pop();\n\n  if (this.contexts.length > 0) {\n    this.setContext(this.contexts[this.contexts.length - 1]);\n  } else {\n    this.setContext(undefined);\n  }\n}\n\nfunction pushContext(context) {\n  this.contexts.push(context);\n  this.setContext(context);\n}\n\nfunction setup(parentPath, container, listKey, key) {\n  this.listKey = listKey;\n  this.container = container;\n  this.parentPath = parentPath || this.parentPath;\n  this.setKey(key);\n}\n\nfunction setKey(key) {\n  var _this$node;\n\n  this.key = key;\n  this.node = this.container[this.key];\n  this.type = (_this$node = this.node) == null ? void 0 : _this$node.type;\n}\n\nfunction requeue(pathToQueue = this) {\n  if (pathToQueue.removed) return;\n  ;\n  const contexts = this.contexts;\n\n  for (const context of contexts) {\n    context.maybeQueue(pathToQueue);\n  }\n}\n\nfunction _getQueueContexts() {\n  let path = this;\n  let contexts = this.contexts;\n\n  while (!contexts.length) {\n    path = path.parentPath;\n    if (!path) break;\n    contexts = path.contexts;\n  }\n\n  return contexts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._assertUnremoved = _assertUnremoved;\nexports._callRemovalHooks = _callRemovalHooks;\nexports._markRemoved = _markRemoved;\nexports._remove = _remove;\nexports._removeFromScope = _removeFromScope;\nexports.remove = remove;\n\nvar _removalHooks = require(\"./lib/removal-hooks\");\n\nvar _cache = require(\"../cache\");\n\nvar _index = require(\"./index\");\n\nfunction remove() {\n  var _this$opts;\n\n  this._assertUnremoved();\n\n  this.resync();\n\n  if (!((_this$opts = this.opts) != null && _this$opts.noScope)) {\n    this._removeFromScope();\n  }\n\n  if (this._callRemovalHooks()) {\n    this._markRemoved();\n\n    return;\n  }\n\n  this.shareCommentsWithSiblings();\n\n  this._remove();\n\n  this._markRemoved();\n}\n\nfunction _removeFromScope() {\n  const bindings = this.getBindingIdentifiers();\n  Object.keys(bindings).forEach(name => this.scope.removeBinding(name));\n}\n\nfunction _callRemovalHooks() {\n  for (const fn of _removalHooks.hooks) {\n    if (fn(this, this.parentPath)) return true;\n  }\n}\n\nfunction _remove() {\n  if (Array.isArray(this.container)) {\n    this.container.splice(this.key, 1);\n    this.updateSiblingKeys(this.key, -1);\n  } else {\n    this._replaceWith(null);\n  }\n}\n\nfunction _markRemoved() {\n  this._traverseFlags |= _index.SHOULD_SKIP | _index.REMOVED;\n  if (this.parent) _cache.path.get(this.parent).delete(this.node);\n  this.node = null;\n}\n\nfunction _assertUnremoved() {\n  if (this.removed) {\n    throw this.buildCodeFrameError(\"NodePath has been removed so is read-only.\");\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hooks = void 0;\nconst hooks = [function (self, parent) {\n  const removeParent = self.key === \"test\" && (parent.isWhile() || parent.isSwitchCase()) || self.key === \"declaration\" && parent.isExportDeclaration() || self.key === \"body\" && parent.isLabeledStatement() || self.listKey === \"declarations\" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === \"expression\" && parent.isExpressionStatement();\n\n  if (removeParent) {\n    parent.remove();\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n    parent.replaceWith(parent.node.expressions[0]);\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isBinary()) {\n    if (self.key === \"left\") {\n      parent.replaceWith(parent.node.right);\n    } else {\n      parent.replaceWith(parent.node.left);\n    }\n\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isIfStatement() && (self.key === \"consequent\" || self.key === \"alternate\") || self.key === \"body\" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n    self.replaceWith({\n      type: \"BlockStatement\",\n      body: []\n    });\n    return true;\n  }\n}];\nexports.hooks = hooks;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._containerInsert = _containerInsert;\nexports._containerInsertAfter = _containerInsertAfter;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._verifyNodeList = _verifyNodeList;\nexports.hoist = hoist;\nexports.insertAfter = insertAfter;\nexports.insertBefore = insertBefore;\nexports.pushContainer = pushContainer;\nexports.unshiftContainer = unshiftContainer;\nexports.updateSiblingKeys = updateSiblingKeys;\n\nvar _cache = require(\"../cache\");\n\nvar _hoister = require(\"./lib/hoister\");\n\nvar _index = require(\"./index\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  arrowFunctionExpression,\n  assertExpression,\n  assignmentExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  isExpression\n} = _t;\n\nfunction insertBefore(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertBefore(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.unshiftContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n  const paths = [];\n  this.container.splice(from, 0, ...nodes);\n\n  for (let i = 0; i < nodes.length; i++) {\n    const to = from + i;\n    const path = this.getSibling(to);\n    paths.push(path);\n\n    if (this.context && this.context.queue) {\n      path.pushContext(this.context);\n    }\n  }\n\n  const contexts = this._getQueueContexts();\n\n  for (const path of paths) {\n    path.setScope();\n    path.debug(\"Inserted.\");\n\n    for (const context of contexts) {\n      context.maybeQueue(path, true);\n    }\n  }\n\n  return paths;\n}\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\nfunction insertAfter(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertAfter(nodes.map(node => {\n      return isExpression(node) ? expressionStatement(node) : node;\n    }));\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() && !parentPath.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      const node = this.node;\n      let {\n        scope\n      } = this;\n\n      if (scope.path.isPattern()) {\n        assertExpression(node);\n        this.replaceWith(callExpression(arrowFunctionExpression([], node), []));\n        this.get(\"callee.body\").insertAfter(nodes);\n        return [this];\n      }\n\n      if (parentPath.isMethod({\n        computed: true,\n        key: node\n      })) {\n        scope = scope.parent;\n      }\n\n      const temp = scope.generateDeclaredUidIdentifier();\n      nodes.unshift(expressionStatement(assignmentExpression(\"=\", cloneNode(temp), node)));\n      nodes.push(expressionStatement(cloneNode(temp)));\n    }\n\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertAfter(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.pushContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  if (!this.parent) return;\n\n  const paths = _cache.path.get(this.parent);\n\n  for (const [, path] of paths) {\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\nfunction _verifyNodeList(nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  if (!Array.isArray(nodes)) {\n    nodes = [nodes];\n  }\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    let msg;\n\n    if (!node) {\n      msg = \"has falsy node\";\n    } else if (typeof node !== \"object\") {\n      msg = \"contains a non-object node\";\n    } else if (!node.type) {\n      msg = \"without a type\";\n    } else if (node instanceof _index.default) {\n      msg = \"has a NodePath when it expected a raw object\";\n    }\n\n    if (msg) {\n      const type = Array.isArray(node) ? \"array\" : typeof node;\n      throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`);\n    }\n  }\n\n  return nodes;\n}\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: this.node[listKey],\n    listKey,\n    key: 0\n  }).setContext(this.context);\n\n  return path._containerInsertBefore(nodes);\n}\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  const verifiedNodes = this._verifyNodeList(nodes);\n\n  const container = this.node[listKey];\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey,\n    key: container.length\n  }).setContext(this.context);\n\n  return path.replaceWithMultiple(verifiedNodes);\n}\n\nfunction hoist(scope = this.scope) {\n  const hoister = new _hoister.default(this, scope);\n  return hoister.run();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _t = require(\"@babel/types\");\n\nvar _t2 = _t;\nconst {\n  react\n} = _t;\nconst {\n  cloneNode,\n  jsxExpressionContainer,\n  variableDeclaration,\n  variableDeclarator\n} = _t2;\nconst referenceVisitor = {\n  ReferencedIdentifier(path, state) {\n    if (path.isJSXIdentifier() && react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {\n      return;\n    }\n\n    if (path.node.name === \"this\") {\n      let scope = path.scope;\n\n      do {\n        if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (scope = scope.parent);\n\n      if (scope) state.breakOnScopePaths.push(scope.path);\n    }\n\n    const binding = path.scope.getBinding(path.node.name);\n    if (!binding) return;\n\n    for (const violation of binding.constantViolations) {\n      if (violation.scope !== binding.path.scope) {\n        state.mutableBinding = true;\n        path.stop();\n        return;\n      }\n    }\n\n    if (binding !== state.scope.getBinding(path.node.name)) return;\n    state.bindings[path.node.name] = binding;\n  }\n\n};\n\nclass PathHoister {\n  constructor(path, scope) {\n    this.breakOnScopePaths = void 0;\n    this.bindings = void 0;\n    this.mutableBinding = void 0;\n    this.scopes = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.attachAfter = void 0;\n    this.breakOnScopePaths = [];\n    this.bindings = {};\n    this.mutableBinding = false;\n    this.scopes = [];\n    this.scope = scope;\n    this.path = path;\n    this.attachAfter = false;\n  }\n\n  isCompatibleScope(scope) {\n    for (const key of Object.keys(this.bindings)) {\n      const binding = this.bindings[key];\n\n      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getCompatibleScopes() {\n    let scope = this.path.scope;\n\n    do {\n      if (this.isCompatibleScope(scope)) {\n        this.scopes.push(scope);\n      } else {\n        break;\n      }\n\n      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n        break;\n      }\n    } while (scope = scope.parent);\n  }\n\n  getAttachmentPath() {\n    let path = this._getAttachmentPath();\n\n    if (!path) return;\n    let targetScope = path.scope;\n\n    if (targetScope.path === path) {\n      targetScope = path.scope.parent;\n    }\n\n    if (targetScope.path.isProgram() || targetScope.path.isFunction()) {\n      for (const name of Object.keys(this.bindings)) {\n        if (!targetScope.hasOwnBinding(name)) continue;\n        const binding = this.bindings[name];\n\n        if (binding.kind === \"param\" || binding.path.parentKey === \"params\") {\n          continue;\n        }\n\n        const bindingParentPath = this.getAttachmentParentForPath(binding.path);\n\n        if (bindingParentPath.key >= path.key) {\n          this.attachAfter = true;\n          path = binding.path;\n\n          for (const violationPath of binding.constantViolations) {\n            if (this.getAttachmentParentForPath(violationPath).key > path.key) {\n              path = violationPath;\n            }\n          }\n        }\n      }\n    }\n\n    return path;\n  }\n\n  _getAttachmentPath() {\n    const scopes = this.scopes;\n    const scope = scopes.pop();\n    if (!scope) return;\n\n    if (scope.path.isFunction()) {\n      if (this.hasOwnParamBindings(scope)) {\n        if (this.scope === scope) return;\n        const bodies = scope.path.get(\"body\").get(\"body\");\n\n        for (let i = 0; i < bodies.length; i++) {\n          if (bodies[i].node._blockHoist) continue;\n          return bodies[i];\n        }\n      } else {\n        return this.getNextScopeAttachmentParent();\n      }\n    } else if (scope.path.isProgram()) {\n      return this.getNextScopeAttachmentParent();\n    }\n  }\n\n  getNextScopeAttachmentParent() {\n    const scope = this.scopes.pop();\n    if (scope) return this.getAttachmentParentForPath(scope.path);\n  }\n\n  getAttachmentParentForPath(path) {\n    do {\n      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n        return path;\n      }\n    } while (path = path.parentPath);\n  }\n\n  hasOwnParamBindings(scope) {\n    for (const name of Object.keys(this.bindings)) {\n      if (!scope.hasOwnBinding(name)) continue;\n      const binding = this.bindings[name];\n      if (binding.kind === \"param\" && binding.constant) return true;\n    }\n\n    return false;\n  }\n\n  run() {\n    this.path.traverse(referenceVisitor, this);\n    if (this.mutableBinding) return;\n    this.getCompatibleScopes();\n    const attachTo = this.getAttachmentPath();\n    if (!attachTo) return;\n    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n    let uid = attachTo.scope.generateUidIdentifier(\"ref\");\n    const declarator = variableDeclarator(uid, this.path.node);\n    const insertFn = this.attachAfter ? \"insertAfter\" : \"insertBefore\";\n    const [attached] = attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : variableDeclaration(\"var\", [declarator])]);\n    const parent = this.path.parentPath;\n\n    if (parent.isJSXElement() && this.path.container === parent.node.children) {\n      uid = jsxExpressionContainer(uid);\n    }\n\n    this.path.replaceWith(cloneNode(uid));\n    return attachTo.isVariableDeclarator() ? attached.get(\"init\") : attached.get(\"declarations.0.init\");\n  }\n\n}\n\nexports.default = PathHoister;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._getKey = _getKey;\nexports._getPattern = _getPattern;\nexports.get = get;\nexports.getAllNextSiblings = getAllNextSiblings;\nexports.getAllPrevSiblings = getAllPrevSiblings;\nexports.getBindingIdentifierPaths = getBindingIdentifierPaths;\nexports.getBindingIdentifiers = getBindingIdentifiers;\nexports.getCompletionRecords = getCompletionRecords;\nexports.getNextSibling = getNextSibling;\nexports.getOpposite = getOpposite;\nexports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\nexports.getPrevSibling = getPrevSibling;\nexports.getSibling = getSibling;\n\nvar _index = require(\"./index\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  getBindingIdentifiers: _getBindingIdentifiers,\n  getOuterBindingIdentifiers: _getOuterBindingIdentifiers,\n  isDeclaration,\n  numericLiteral,\n  unaryExpression\n} = _t;\nconst NORMAL_COMPLETION = 0;\nconst BREAK_COMPLETION = 1;\n\nfunction NormalCompletion(path) {\n  return {\n    type: NORMAL_COMPLETION,\n    path\n  };\n}\n\nfunction BreakCompletion(path) {\n  return {\n    type: BREAK_COMPLETION,\n    path\n  };\n}\n\nfunction getOpposite() {\n  if (this.key === \"left\") {\n    return this.getSibling(\"right\");\n  } else if (this.key === \"right\") {\n    return this.getSibling(\"left\");\n  }\n\n  return null;\n}\n\nfunction addCompletionRecords(path, records, context) {\n  if (path) {\n    records.push(..._getCompletionRecords(path, context));\n  }\n\n  return records;\n}\n\nfunction completionRecordForSwitch(cases, records, context) {\n  let lastNormalCompletions = [];\n\n  for (let i = 0; i < cases.length; i++) {\n    const casePath = cases[i];\n\n    const caseCompletions = _getCompletionRecords(casePath, context);\n\n    const normalCompletions = [];\n    const breakCompletions = [];\n\n    for (const c of caseCompletions) {\n      if (c.type === NORMAL_COMPLETION) {\n        normalCompletions.push(c);\n      }\n\n      if (c.type === BREAK_COMPLETION) {\n        breakCompletions.push(c);\n      }\n    }\n\n    if (normalCompletions.length) {\n      lastNormalCompletions = normalCompletions;\n    }\n\n    records.push(...breakCompletions);\n  }\n\n  records.push(...lastNormalCompletions);\n  return records;\n}\n\nfunction normalCompletionToBreak(completions) {\n  completions.forEach(c => {\n    c.type = BREAK_COMPLETION;\n  });\n}\n\nfunction replaceBreakStatementInBreakCompletion(completions, reachable) {\n  completions.forEach(c => {\n    if (c.path.isBreakStatement({\n      label: null\n    })) {\n      if (reachable) {\n        c.path.replaceWith(unaryExpression(\"void\", numericLiteral(0)));\n      } else {\n        c.path.remove();\n      }\n    }\n  });\n}\n\nfunction getStatementListCompletion(paths, context) {\n  const completions = [];\n\n  if (context.canHaveBreak) {\n    let lastNormalCompletions = [];\n\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      const newContext = Object.assign({}, context, {\n        inCaseClause: false\n      });\n\n      if (path.isBlockStatement() && (context.inCaseClause || context.shouldPopulateBreak)) {\n        newContext.shouldPopulateBreak = true;\n      } else {\n        newContext.shouldPopulateBreak = false;\n      }\n\n      const statementCompletions = _getCompletionRecords(path, newContext);\n\n      if (statementCompletions.length > 0 && statementCompletions.every(c => c.type === BREAK_COMPLETION)) {\n        if (lastNormalCompletions.length > 0 && statementCompletions.every(c => c.path.isBreakStatement({\n          label: null\n        }))) {\n          normalCompletionToBreak(lastNormalCompletions);\n          completions.push(...lastNormalCompletions);\n\n          if (lastNormalCompletions.some(c => c.path.isDeclaration())) {\n            completions.push(...statementCompletions);\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n\n          replaceBreakStatementInBreakCompletion(statementCompletions, false);\n        } else {\n          completions.push(...statementCompletions);\n\n          if (!context.shouldPopulateBreak) {\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n        }\n\n        break;\n      }\n\n      if (i === paths.length - 1) {\n        completions.push(...statementCompletions);\n      } else {\n        lastNormalCompletions = [];\n\n        for (let i = 0; i < statementCompletions.length; i++) {\n          const c = statementCompletions[i];\n\n          if (c.type === BREAK_COMPLETION) {\n            completions.push(c);\n          }\n\n          if (c.type === NORMAL_COMPLETION) {\n            lastNormalCompletions.push(c);\n          }\n        }\n      }\n    }\n  } else if (paths.length) {\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const pathCompletions = _getCompletionRecords(paths[i], context);\n\n      if (pathCompletions.length > 1 || pathCompletions.length === 1 && !pathCompletions[0].path.isVariableDeclaration()) {\n        completions.push(...pathCompletions);\n        break;\n      }\n    }\n  }\n\n  return completions;\n}\n\nfunction _getCompletionRecords(path, context) {\n  let records = [];\n\n  if (path.isIfStatement()) {\n    records = addCompletionRecords(path.get(\"consequent\"), records, context);\n    records = addCompletionRecords(path.get(\"alternate\"), records, context);\n  } else if (path.isDoExpression() || path.isFor() || path.isWhile() || path.isLabeledStatement()) {\n    return addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isProgram() || path.isBlockStatement()) {\n    return getStatementListCompletion(path.get(\"body\"), context);\n  } else if (path.isFunction()) {\n    return _getCompletionRecords(path.get(\"body\"), context);\n  } else if (path.isTryStatement()) {\n    records = addCompletionRecords(path.get(\"block\"), records, context);\n    records = addCompletionRecords(path.get(\"handler\"), records, context);\n  } else if (path.isCatchClause()) {\n    return addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isSwitchStatement()) {\n    return completionRecordForSwitch(path.get(\"cases\"), records, context);\n  } else if (path.isSwitchCase()) {\n    return getStatementListCompletion(path.get(\"consequent\"), {\n      canHaveBreak: true,\n      shouldPopulateBreak: false,\n      inCaseClause: true\n    });\n  } else if (path.isBreakStatement()) {\n    records.push(BreakCompletion(path));\n  } else {\n    records.push(NormalCompletion(path));\n  }\n\n  return records;\n}\n\nfunction getCompletionRecords() {\n  const records = _getCompletionRecords(this, {\n    canHaveBreak: false,\n    shouldPopulateBreak: false,\n    inCaseClause: false\n  });\n\n  return records.map(r => r.path);\n}\n\nfunction getSibling(key) {\n  return _index.default.get({\n    parentPath: this.parentPath,\n    parent: this.parent,\n    container: this.container,\n    listKey: this.listKey,\n    key: key\n  }).setContext(this.context);\n}\n\nfunction getPrevSibling() {\n  return this.getSibling(this.key - 1);\n}\n\nfunction getNextSibling() {\n  return this.getSibling(this.key + 1);\n}\n\nfunction getAllNextSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(++_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(++_key);\n  }\n\n  return siblings;\n}\n\nfunction getAllPrevSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(--_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(--_key);\n  }\n\n  return siblings;\n}\n\nfunction get(key, context = true) {\n  if (context === true) context = this.context;\n  const parts = key.split(\".\");\n\n  if (parts.length === 1) {\n    return this._getKey(key, context);\n  } else {\n    return this._getPattern(parts, context);\n  }\n}\n\nfunction _getKey(key, context) {\n  const node = this.node;\n  const container = node[key];\n\n  if (Array.isArray(container)) {\n    return container.map((_, i) => {\n      return _index.default.get({\n        listKey: key,\n        parentPath: this,\n        parent: node,\n        container: container,\n        key: i\n      }).setContext(context);\n    });\n  } else {\n    return _index.default.get({\n      parentPath: this,\n      parent: node,\n      container: node,\n      key: key\n    }).setContext(context);\n  }\n}\n\nfunction _getPattern(parts, context) {\n  let path = this;\n\n  for (const part of parts) {\n    if (part === \".\") {\n      path = path.parentPath;\n    } else {\n      if (Array.isArray(path)) {\n        path = path[part];\n      } else {\n        path = path.get(part, context);\n      }\n    }\n  }\n\n  return path;\n}\n\nfunction getBindingIdentifiers(duplicates) {\n  return _getBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getOuterBindingIdentifiers(duplicates) {\n  return _getOuterBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getBindingIdentifierPaths(duplicates = false, outerOnly = false) {\n  const path = this;\n  const search = [path];\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    if (!id.node) continue;\n    const keys = _getBindingIdentifiers.keys[id.node.type];\n\n    if (id.isIdentifier()) {\n      if (duplicates) {\n        const _ids = ids[id.node.name] = ids[id.node.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.node.name] = id;\n      }\n\n      continue;\n    }\n\n    if (id.isExportDeclaration()) {\n      const declaration = id.get(\"declaration\");\n\n      if (isDeclaration(declaration)) {\n        search.push(declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if (id.isFunctionDeclaration()) {\n        search.push(id.get(\"id\"));\n        continue;\n      }\n\n      if (id.isFunctionExpression()) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const child = id.get(key);\n\n        if (Array.isArray(child)) {\n          search.push(...child);\n        } else if (child.node) {\n          search.push(child);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\nfunction getOuterBindingIdentifierPaths(duplicates) {\n  return this.getBindingIdentifierPaths(duplicates, true);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addComment = addComment;\nexports.addComments = addComments;\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  addComment: _addComment,\n  addComments: _addComments\n} = _t;\n\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n  const node = this.node;\n  if (!node) return;\n  const trailing = node.trailingComments;\n  const leading = node.leadingComments;\n  if (!trailing && !leading) return;\n  const prev = this.getSibling(this.key - 1);\n  const next = this.getSibling(this.key + 1);\n  const hasPrev = Boolean(prev.node);\n  const hasNext = Boolean(next.node);\n\n  if (hasPrev && !hasNext) {\n    prev.addComments(\"trailing\", trailing);\n  } else if (hasNext && !hasPrev) {\n    next.addComments(\"leading\", leading);\n  }\n}\n\nfunction addComment(type, content, line) {\n  _addComment(this.node, type, content, line);\n}\n\nfunction addComments(type, comments) {\n  _addComments(this.node, type, comments);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.merge = merge;\nexports.verify = verify;\n\nvar virtualTypes = require(\"./path/lib/virtual-types\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  DEPRECATED_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  TYPES\n} = _t;\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const wrapper = virtualTypes[nodeType];\n    if (!wrapper) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(wrapper, fns[type]);\n    }\n\n    delete visitor[nodeType];\n\n    if (wrapper.types) {\n      for (const type of wrapper.types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecatedKey = DEPRECATED_KEYS[nodeType];\n\n    if (deprecatedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecatedKey}`);\n      aliases = [deprecatedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = Object.assign({}, fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(wrapper, fn) {\n  const newFn = function (path) {\n    if (wrapper.checkPath(path)) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"denylist\" || key === \"noScope\" || key === \"skipKeys\" || key === \"blacklist\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Hub {\n  getCode() {}\n\n  getScope() {}\n\n  addHelper() {\n    throw new Error(\"Helpers are not supported by the default hub.\");\n  }\n\n  buildError(node, msg, Error = TypeError) {\n    return new Error(msg);\n  }\n\n}\n\nexports.default = Hub;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Hub\", {\n  enumerable: true,\n  get: function () {\n    return _hub.default;\n  }\n});\nObject.defineProperty(exports, \"NodePath\", {\n  enumerable: true,\n  get: function () {\n    return _path.default;\n  }\n});\nObject.defineProperty(exports, \"Scope\", {\n  enumerable: true,\n  get: function () {\n    return _scope.default;\n  }\n});\nexports.visitors = exports.default = void 0;\n\nvar _context = require(\"./context\");\n\nvar visitors = require(\"./visitors\");\n\nexports.visitors = visitors;\n\nvar _t = require(\"@babel/types\");\n\nvar cache = require(\"./cache\");\n\nvar _path = require(\"./path\");\n\nvar _scope = require(\"./scope\");\n\nvar _hub = require(\"./hub\");\n\nconst {\n  VISITOR_KEYS,\n  removeProperties,\n  traverseFast\n} = _t;\n\nfunction traverse(parent, opts = {}, scope, state, parentPath) {\n  if (!parent) return;\n\n  if (!opts.noScope && !scope) {\n    if (parent.type !== \"Program\" && parent.type !== \"File\") {\n      throw new Error(\"You must pass a scope and parentPath unless traversing a Program/File. \" + `Instead of that you tried to traverse a ${parent.type} node without ` + \"passing scope and parentPath.\");\n    }\n  }\n\n  if (!VISITOR_KEYS[parent.type]) {\n    return;\n  }\n\n  visitors.explode(opts);\n  traverse.node(parent, opts, scope, state, parentPath);\n}\n\nvar _default = traverse;\nexports.default = _default;\ntraverse.visitors = visitors;\ntraverse.verify = visitors.verify;\ntraverse.explode = visitors.explode;\n\ntraverse.cheap = function (node, enter) {\n  return traverseFast(node, enter);\n};\n\ntraverse.node = function (node, opts, scope, state, parentPath, skipKeys) {\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return;\n  const context = new _context.default(scope, opts, state, parentPath);\n\n  for (const key of keys) {\n    if (skipKeys && skipKeys[key]) continue;\n    if (context.visit(node, key)) return;\n  }\n};\n\ntraverse.clearNode = function (node, opts) {\n  removeProperties(node, opts);\n  cache.path.delete(node);\n};\n\ntraverse.removeProperties = function (tree, opts) {\n  traverseFast(tree, traverse.clearNode, opts);\n  return tree;\n};\n\nfunction hasDenylistedType(path, state) {\n  if (path.node.type === state.type) {\n    state.has = true;\n    path.stop();\n  }\n}\n\ntraverse.hasType = function (tree, type, denylistTypes) {\n  if (denylistTypes != null && denylistTypes.includes(tree.type)) return false;\n  if (tree.type === type) return true;\n  const state = {\n    has: false,\n    type: type\n  };\n  traverse(tree, {\n    noScope: true,\n    denylist: denylistTypes,\n    enter: hasDenylistedType\n  }, null, state);\n  return state.has;\n};\n\ntraverse.cache = cache;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_STOP = exports.SHOULD_SKIP = exports.REMOVED = void 0;\n\nvar virtualTypes = require(\"./lib/virtual-types\");\n\nvar _debug = require(\"debug\");\n\nvar _index = require(\"../index\");\n\nvar _scope = require(\"../scope\");\n\nvar _t = require(\"@babel/types\");\n\nvar t = _t;\n\nvar _cache = require(\"../cache\");\n\nvar _generator = require(\"@babel/generator\");\n\nvar NodePath_ancestry = require(\"./ancestry\");\n\nvar NodePath_inference = require(\"./inference\");\n\nvar NodePath_replacement = require(\"./replacement\");\n\nvar NodePath_evaluation = require(\"./evaluation\");\n\nvar NodePath_conversion = require(\"./conversion\");\n\nvar NodePath_introspection = require(\"./introspection\");\n\nvar NodePath_context = require(\"./context\");\n\nvar NodePath_removal = require(\"./removal\");\n\nvar NodePath_modification = require(\"./modification\");\n\nvar NodePath_family = require(\"./family\");\n\nvar NodePath_comments = require(\"./comments\");\n\nconst {\n  validate\n} = _t;\n\nconst debug = _debug(\"babel\");\n\nconst REMOVED = 1 << 0;\nexports.REMOVED = REMOVED;\nconst SHOULD_STOP = 1 << 1;\nexports.SHOULD_STOP = SHOULD_STOP;\nconst SHOULD_SKIP = 1 << 2;\nexports.SHOULD_SKIP = SHOULD_SKIP;\n\nclass NodePath {\n  constructor(hub, parent) {\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key\n  }) {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n\n    const targetNode = container[key];\n\n    let paths = _cache.path.get(parent);\n\n    if (!paths) {\n      paths = new Map();\n\n      _cache.path.set(parent, paths);\n    }\n\n    let path = paths.get(targetNode);\n\n    if (!path) {\n      path = new NodePath(hub, parent);\n      if (targetNode) paths.set(targetNode, path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n    return path;\n  }\n\n  getScope(scope) {\n    return this.isScope() ? new _scope.default(this) : scope;\n  }\n\n  setData(key, val) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    return this.data[key] = val;\n  }\n\n  getData(key, def) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n\n  buildCodeFrameError(msg, Error = SyntaxError) {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n\n  traverse(visitor, state) {\n    (0, _index.default)(this.node, visitor, this.scope, state, this);\n  }\n\n  set(key, node) {\n    validate(this.node, key, node);\n    this.node[key] = node;\n  }\n\n  getPathLocation() {\n    const parts = [];\n    let path = this;\n\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while (path = path.parentPath);\n\n    return parts.join(\".\");\n  }\n\n  debug(message) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n\n  toString() {\n    return (0, _generator.default)(this.node).code;\n  }\n\n  get inList() {\n    return !!this.listKey;\n  }\n\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n  }\n\n  get parentKey() {\n    return this.listKey || this.key;\n  }\n\n  get shouldSkip() {\n    return !!(this._traverseFlags & SHOULD_SKIP);\n  }\n\n  set shouldSkip(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_SKIP;\n    } else {\n      this._traverseFlags &= ~SHOULD_SKIP;\n    }\n  }\n\n  get shouldStop() {\n    return !!(this._traverseFlags & SHOULD_STOP);\n  }\n\n  set shouldStop(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_STOP;\n    } else {\n      this._traverseFlags &= ~SHOULD_STOP;\n    }\n  }\n\n  get removed() {\n    return !!(this._traverseFlags & REMOVED);\n  }\n\n  set removed(v) {\n    if (v) {\n      this._traverseFlags |= REMOVED;\n    } else {\n      this._traverseFlags &= ~REMOVED;\n    }\n  }\n\n}\n\nObject.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);\n\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  const fn = t[typeKey];\n\n  NodePath.prototype[typeKey] = function (opts) {\n    return fn(this.node, opts);\n  };\n\n  NodePath.prototype[`assert${type}`] = function (opts) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\n\nfor (const type of Object.keys(virtualTypes)) {\n  if (type[0] === \"_\") continue;\n  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);\n  const virtualType = virtualTypes[type];\n\n  NodePath.prototype[`is${type}`] = function (opts) {\n    return virtualType.checkPath(this, opts);\n  };\n}\n\nvar _default = NodePath;\nexports.default = _default;"],"sourceRoot":""}