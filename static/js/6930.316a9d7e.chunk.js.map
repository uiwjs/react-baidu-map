{"version":3,"file":"static/js/6930.316a9d7e.chunk.js","mappings":"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","sources":["../../node_modules/babel-plugin-transform-remove-imports/lib/index.js","../../node_modules/boolbase/index.js","../../node_modules/css-selector-parser/lib/index.js","../../node_modules/css-selector-parser/lib/parser-context.js","../../node_modules/css-selector-parser/lib/render.js","../../node_modules/css-selector-parser/lib/utils.js","../../node_modules/extend/index.js","../../node_modules/github-slugger/index.js","../../node_modules/github-slugger/regex.js","../../node_modules/inline-style-parser/index.js","../../node_modules/is-buffer/index.js","../../node_modules/markdown-react-code-preview-loader/src/utils/index.ts","../../node_modules/parse-numeric-range/index.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/react-code-preview-layout/src/icons.tsx","../../node_modules/react-code-preview-layout/src/Copied.tsx","../../node_modules/react-code-preview-layout/src/index.tsx","../../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/react-markdown/node_modules/react-is/index.js","../../node_modules/remark-stringify/index.js","../../node_modules/remark-stringify/node_modules/longest-streak/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/configure.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/break.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/code.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/definition.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/heading.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/html.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/image.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/link.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/list.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/root.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/strong.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/text.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/join.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/unsafe.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-rule-repeat.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-string/index.js","../../node_modules/remark-stringify/node_modules/parse-entities/decode-entity.browser.js","../../node_modules/remark-stringify/node_modules/zwitch/index.js","../../node_modules/remark/index.js","../../node_modules/remark/node_modules/bail/index.js","../../node_modules/remark/node_modules/is-plain-obj/index.js","../../node_modules/remark/node_modules/mdast-util-from-markdown/dist/index.js","../../node_modules/remark/node_modules/mdast-util-from-markdown/index.js","../../node_modules/remark/node_modules/mdast-util-to-string/index.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-alpha.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-alphanumeric.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-atext.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-control.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-digit.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-hex-digit.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-punctuation.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-line-ending-or-space.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-line-ending.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-space.js","../../node_modules/remark/node_modules/micromark/dist/character/unicode-punctuation.js","../../node_modules/remark/node_modules/micromark/dist/character/unicode-whitespace.js","../../node_modules/remark/node_modules/micromark/dist/constant/assign.js","../../node_modules/remark/node_modules/micromark/dist/constant/from-char-code.js","../../node_modules/remark/node_modules/micromark/dist/constant/has-own-property.js","../../node_modules/remark/node_modules/micromark/dist/constant/html-block-names.js","../../node_modules/remark/node_modules/micromark/dist/constant/html-raw-names.js","../../node_modules/remark/node_modules/micromark/dist/constant/splice.js","../../node_modules/remark/node_modules/micromark/dist/constant/unicode-punctuation-regex.js","../../node_modules/remark/node_modules/micromark/dist/constructs.js","../../node_modules/remark/node_modules/micromark/dist/initialize/content.js","../../node_modules/remark/node_modules/micromark/dist/initialize/document.js","../../node_modules/remark/node_modules/micromark/dist/initialize/flow.js","../../node_modules/remark/node_modules/micromark/dist/initialize/text.js","../../node_modules/remark/node_modules/micromark/dist/parse.js","../../node_modules/remark/node_modules/micromark/dist/postprocess.js","../../node_modules/remark/node_modules/micromark/dist/preprocess.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/attention.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/autolink.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/block-quote.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/character-escape.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/character-reference.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-fenced.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-indented.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-text.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/content.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/definition.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-destination.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-label.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-space.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-title.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-whitespace.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/hard-break-escape.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/heading-atx.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/html-flow.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/html-text.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-end.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-start-image.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-start-link.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/line-ending.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/list.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/partial-blank-line.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/setext-underline.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/thematic-break.js","../../node_modules/remark/node_modules/micromark/dist/util/chunked-push.js","../../node_modules/remark/node_modules/micromark/dist/util/chunked-splice.js","../../node_modules/remark/node_modules/micromark/dist/util/classify-character.js","../../node_modules/remark/node_modules/micromark/dist/util/combine-extensions.js","../../node_modules/remark/node_modules/micromark/dist/util/create-tokenizer.js","../../node_modules/remark/node_modules/micromark/dist/util/miniflat.js","../../node_modules/remark/node_modules/micromark/dist/util/move-point.js","../../node_modules/remark/node_modules/micromark/dist/util/normalize-identifier.js","../../node_modules/remark/node_modules/micromark/dist/util/prefix-size.js","../../node_modules/remark/node_modules/micromark/dist/util/regex-check.js","../../node_modules/remark/node_modules/micromark/dist/util/resolve-all.js","../../node_modules/remark/node_modules/micromark/dist/util/safe-from-int.js","../../node_modules/remark/node_modules/micromark/dist/util/serialize-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/shallow.js","../../node_modules/remark/node_modules/micromark/dist/util/size-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/slice-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/subtokenize.js","../../node_modules/remark/node_modules/parse-entities/decode-entity.browser.js","../../node_modules/remark/node_modules/remark-parse/index.js","../../node_modules/remark/node_modules/trough/index.js","../../node_modules/remark/node_modules/trough/wrap.js","../../node_modules/remark/node_modules/unified/index.js","../../node_modules/remark/node_modules/unist-util-stringify-position/index.js","../../node_modules/remark/node_modules/vfile-message/index.js","../../node_modules/remark/node_modules/vfile/index.js","../../node_modules/remark/node_modules/vfile/lib/core.js","../../node_modules/remark/node_modules/vfile/lib/index.js","../../node_modules/remark/node_modules/vfile/lib/minpath.browser.js","../../node_modules/remark/node_modules/vfile/lib/minproc.browser.js","../../node_modules/repeat-string/index.js","../../node_modules/style-to-object/index.js","../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../../node_modules/@babel/runtime/helpers/classCallCheck.js","../../node_modules/@babel/runtime/helpers/createClass.js","../../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../../node_modules/@babel/runtime/helpers/createSuper.js","../../node_modules/@babel/runtime/helpers/defineProperty.js","../../node_modules/@babel/runtime/helpers/get.js","../../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../../node_modules/@babel/runtime/helpers/inherits.js","../../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../../node_modules/@babel/runtime/helpers/nonIterableRest.js","../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../../node_modules/@babel/runtime/helpers/slicedToArray.js","../../node_modules/@babel/runtime/helpers/superPropBase.js","../../node_modules/@babel/runtime/helpers/typeof.js","../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../../node_modules/comma-separated-tokens/index.js","../../node_modules/decode-named-character-reference/index.dom.js","../../node_modules/hast-util-has-property/index.js","../../node_modules/hast-util-heading-rank/index.js","../../node_modules/hast-util-is-element/index.js","../../node_modules/hast-util-to-string/index.js","../../node_modules/hast-util-whitespace/index.js","../../node_modules/hast-util-parse-selector/index.js","../../node_modules/hastscript/lib/core.js","../../node_modules/hastscript/lib/html.js","../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../node_modules/micromark-factory-space/index.js","../../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../../node_modules/micromark-util-character/index.js","../../node_modules/micromark-util-chunked/index.js","../../node_modules/micromark-util-classify-character/index.js","../../node_modules/micromark-util-combine-extensions/index.js","../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../node_modules/micromark-util-decode-string/index.js","../../node_modules/micromark-util-normalize-identifier/index.js","../../node_modules/micromark-util-resolve-all/index.js","../../node_modules/character-entities-legacy/index.js","../../node_modules/character-reference-invalid/index.js","../../node_modules/is-decimal/index.js","../../node_modules/is-hexadecimal/index.js","../../node_modules/is-alphanumerical/index.js","../../node_modules/is-alphabetical/index.js","../../node_modules/parse-entities/lib/index.js","../../node_modules/property-information/lib/util/schema.js","../../node_modules/property-information/lib/util/merge.js","../../node_modules/property-information/lib/util/create.js","../../node_modules/property-information/lib/xlink.js","../../node_modules/property-information/lib/xml.js","../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/property-information/lib/xmlns.js","../../node_modules/property-information/lib/aria.js","../../node_modules/property-information/lib/html.js","../../node_modules/property-information/lib/svg.js","../../node_modules/property-information/index.js","../../node_modules/property-information/lib/find.js","../../node_modules/property-information/lib/hast-to-react.js","../../node_modules/property-information/lib/normalize.js","../../node_modules/property-information/lib/util/defined-info.js","../../node_modules/property-information/lib/util/info.js","../../node_modules/property-information/lib/util/types.js","../../node_modules/unist-util-stringify-position/index.js","../../node_modules/vfile-message/index.js","../../node_modules/vfile/lib/minpath.browser.js","../../node_modules/vfile/lib/minproc.browser.js","../../node_modules/vfile/lib/minurl.shared.js","../../node_modules/vfile/lib/minurl.browser.js","../../node_modules/vfile/lib/index.js","../../node_modules/@babel/runtime/helpers/esm/toArray.js","../../node_modules/bail/index.js","../../node_modules/unified/node_modules/is-plain-obj/index.js","../../node_modules/trough/index.js","../../node_modules/unified/lib/index.js","../../node_modules/mdast-util-to-string/index.js","../../node_modules/micromark/lib/initialize/content.js","../../node_modules/micromark/lib/initialize/document.js","../../node_modules/micromark-util-subtokenize/index.js","../../node_modules/micromark-core-commonmark/lib/content.js","../../node_modules/micromark/lib/initialize/flow.js","../../node_modules/micromark/lib/initialize/text.js","../../node_modules/micromark/lib/create-tokenizer.js","../../node_modules/micromark-core-commonmark/lib/thematic-break.js","../../node_modules/micromark-core-commonmark/lib/list.js","../../node_modules/micromark-core-commonmark/lib/block-quote.js","../../node_modules/micromark-factory-destination/index.js","../../node_modules/micromark-factory-label/index.js","../../node_modules/micromark-factory-title/index.js","../../node_modules/micromark-factory-whitespace/index.js","../../node_modules/micromark-core-commonmark/lib/definition.js","../../node_modules/micromark-core-commonmark/lib/code-indented.js","../../node_modules/micromark-core-commonmark/lib/heading-atx.js","../../node_modules/micromark-core-commonmark/lib/setext-underline.js","../../node_modules/micromark-util-html-tag-name/index.js","../../node_modules/micromark-core-commonmark/lib/html-flow.js","../../node_modules/micromark-core-commonmark/lib/code-fenced.js","../../node_modules/micromark-core-commonmark/lib/character-reference.js","../../node_modules/micromark-core-commonmark/lib/character-escape.js","../../node_modules/micromark-core-commonmark/lib/line-ending.js","../../node_modules/micromark-core-commonmark/lib/label-end.js","../../node_modules/micromark-core-commonmark/lib/label-start-image.js","../../node_modules/micromark-core-commonmark/lib/attention.js","../../node_modules/micromark-core-commonmark/lib/autolink.js","../../node_modules/micromark-core-commonmark/lib/html-text.js","../../node_modules/micromark-core-commonmark/lib/label-start-link.js","../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../node_modules/micromark-core-commonmark/lib/code-text.js","../../node_modules/micromark/lib/constructs.js","../../node_modules/micromark/lib/preprocess.js","../../node_modules/mdast-util-from-markdown/lib/index.js","../../node_modules/micromark/lib/postprocess.js","../../node_modules/micromark/lib/parse.js","../../node_modules/remark-parse/index.js","../../node_modules/remark-parse/lib/index.js","../../node_modules/unist-builder/index.js","../../node_modules/mdast-util-definitions/index.js","../../node_modules/mdast-util-to-hast/lib/traverse.js","../../node_modules/micromark-util-sanitize-uri/index.js","../../node_modules/mdast-util-to-hast/lib/wrap.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../node_modules/mdast-util-to-hast/lib/revert.js","../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../node_modules/trim-lines/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../node_modules/mdast-util-to-hast/lib/handlers/break.js","../../node_modules/mdast-util-to-hast/lib/handlers/code.js","../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../node_modules/mdast-util-to-hast/lib/handlers/html.js","../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/image.js","../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/link.js","../../node_modules/mdast-util-to-hast/lib/handlers/list.js","../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../node_modules/mdast-util-to-hast/lib/handlers/root.js","../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../node_modules/mdast-util-to-hast/lib/handlers/table.js","../../node_modules/mdast-util-to-hast/lib/handlers/text.js","../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../node_modules/mdast-util-to-hast/lib/index.js","../../node_modules/unist-util-generated/index.js","../../node_modules/mdast-util-to-hast/lib/footer.js","../../node_modules/remark-rehype/lib/index.js","../../node_modules/react-markdown/lib/rehype-filter.js","../../node_modules/react-markdown/lib/uri-transformer.js","../../node_modules/react-markdown/lib/ast-to-react.js","../../node_modules/react-markdown/lib/react-markdown.js","../../node_modules/rehype-attr/src/utils.ts","../../node_modules/rehype-attr/src/index.ts","../../node_modules/rehype-autolink-headings/lib/index.js","../../node_modules/rehype-ignore/src/index.ts","../../node_modules/unist-util-filter/index.js","../../src/generator.js","../../src/all.js","../../src/common.js","../../node_modules/hastscript/lib/svg.js","../../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../../node_modules/web-namespaces/index.js","../../node_modules/hast-util-from-parse5/lib/index.js","../../node_modules/vfile-location/index.js","../../node_modules/hast-to-hyperscript/index.js","../../node_modules/hast-util-to-parse5/lib/index.js","../../node_modules/html-void-elements/index.js","../../node_modules/hast-util-raw/lib/index.js","../../node_modules/rehype-raw/index.js","../../node_modules/direction/index.js","../../node_modules/hast-util-select/lib/util.js","../../node_modules/hast-util-select/lib/enter-state.js","../../node_modules/hast-util-select/lib/nest.js","../../node_modules/bcp-47-match/index.js","../../node_modules/hast-util-select/lib/pseudo.js","../../node_modules/hast-util-select/lib/attribute.js","../../node_modules/hast-util-select/lib/test.js","../../node_modules/hast-util-select/lib/name.js","../../node_modules/hast-util-select/lib/class-name.js","../../node_modules/hast-util-select/lib/id.js","../../node_modules/hast-util-select/lib/any.js","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/parse.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/compile.ts","../../node_modules/hast-util-select/lib/parse.js","../../node_modules/hast-util-select/index.js","../../node_modules/rehype-rewrite/src/index.ts","../../node_modules/rehype-slug/index.js","../../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../../node_modules/micromark-extension-gfm-table/lib/syntax.js","../../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../../node_modules/micromark-extension-gfm/index.js","../../node_modules/ccount/index.js","../../node_modules/mdast-util-find-and-replace/lib/index.js","../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../../node_modules/mdast-util-gfm-autolink-literal/index.js","../../node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/mdast-util-to-markdown/lib/util/track.js","../../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/mdast-util-gfm-footnote/index.js","../../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/mdast-util-gfm-strikethrough/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/markdown-table/index.js","../../node_modules/mdast-util-gfm-table/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/mdast-util-gfm-task-list-item/index.js","../../node_modules/mdast-util-gfm/lib/index.js","../../node_modules/remark-gfm/index.js","../../node_modules/space-separated-tokens/index.js","../../node_modules/unist-util-is/index.js","../../node_modules/unist-util-position/index.js","../../node_modules/unist-util-visit-parents/index.js","../../node_modules/unist-util-visit/index.js","../../node_modules/zwitch/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nfunction _default() {\n  return {\n    name: 'transform-remove-imports',\n    visitor: {\n      // https://babeljs.io/docs/en/babel-types#callexpression\n      CallExpression: function CallExpression(path, state) {\n        var node = path.node;\n\n        if (node.callee.name !== 'require') {\n          return;\n        }\n\n        var argument = node.arguments[0];\n        var moduleId = argument.value;\n        var options = state.opts;\n\n        if (options.test && !testMatches(moduleId, options.test)) {\n          return;\n        }\n\n        var parentType = path.parentPath.node.type; // In remove effects mode we should delete only requires that are\n        // simple expression statements\n\n        if (options.remove === 'effects' && parentType !== 'ExpressionStatement') {\n          return;\n        }\n\n        path.remove();\n      },\n      // https://babeljs.io/docs/en/babel-types#importdeclaration\n      ImportDeclaration: function ImportDeclaration(path, state) {\n        var node = path.node;\n        var source = node.source;\n        var opts = state.opts;\n\n        if (opts.removeAll) {\n          path.remove();\n          return;\n        }\n\n        if (!opts.test) {\n          console.warn('transform-remove-imports: \"test\" option should be specified');\n          return;\n        }\n        /** @var {string} importName */\n\n\n        var importName = source && source.value ? source.value : undefined;\n        var isMatch = testMatches(importName, opts.test); // https://github.com/uiwjs/babel-plugin-transform-remove-imports/issues/3\n\n        if (opts.remove === 'effects') {\n          if (node.specifiers && node.specifiers.length === 0 && importName && isMatch) {\n            path.remove();\n          }\n\n          return;\n        }\n\n        if (importName && isMatch) {\n          path.remove();\n        }\n      }\n    }\n  };\n}\n/**\n * Determines if the import matches the specified tests.\n *\n * @param {string} importName\n * @param {RegExp|RegExp[]|string|string[]} test\n * @returns {Boolean}\n */\n\n\nfunction testMatches(importName, test) {\n  // Normalizing tests\n  var tests = Array.isArray(test) ? test : [test]; // Finding out if at least one test matches\n\n  return tests.some(function (regex) {\n    if (typeof regex === 'string') {\n      regex = new RegExp(regex);\n    }\n\n    return regex.test(importName || '');\n  });\n}","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_context_1 = require(\"./parser-context\");\nvar render_1 = require(\"./render\");\nvar CssSelectorParser = /** @class */ (function () {\n    function CssSelectorParser() {\n        this.pseudos = {};\n        this.attrEqualityMods = {};\n        this.ruleNestingOperators = {};\n        this.substitutesEnabled = false;\n    }\n    CssSelectorParser.prototype.registerSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_1 = pseudos; _a < pseudos_1.length; _a++) {\n            var pseudo = pseudos_1[_a];\n            this.pseudos[pseudo] = 'selector';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_2 = pseudos; _a < pseudos_2.length; _a++) {\n            var pseudo = pseudos_2[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_3 = pseudos; _a < pseudos_3.length; _a++) {\n            var pseudo = pseudos_3[_a];\n            this.pseudos[pseudo] = 'numeric';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_4 = pseudos; _a < pseudos_4.length; _a++) {\n            var pseudo = pseudos_4[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_1 = operators; _a < operators_1.length; _a++) {\n            var operator = operators_1[_a];\n            this.ruleNestingOperators[operator] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_2 = operators; _a < operators_2.length; _a++) {\n            var operator = operators_2[_a];\n            delete this.ruleNestingOperators[operator];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_1 = mods; _a < mods_1.length; _a++) {\n            var mod = mods_1[_a];\n            this.attrEqualityMods[mod] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_2 = mods; _a < mods_2.length; _a++) {\n            var mod = mods_2[_a];\n            delete this.attrEqualityMods[mod];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.enableSubstitutes = function () {\n        this.substitutesEnabled = true;\n        return this;\n    };\n    CssSelectorParser.prototype.disableSubstitutes = function () {\n        this.substitutesEnabled = false;\n        return this;\n    };\n    CssSelectorParser.prototype.parse = function (str) {\n        return parser_context_1.parseCssSelector(str, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);\n    };\n    CssSelectorParser.prototype.render = function (path) {\n        return render_1.renderEntity(path).trim();\n    };\n    return CssSelectorParser;\n}());\nexports.CssSelectorParser = CssSelectorParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction parseCssSelector(str, pos, pseudos, attrEqualityMods, ruleNestingOperators, substitutesEnabled) {\n    var l = str.length;\n    var chr = '';\n    function getStr(quote, escapeTable) {\n        var result = '';\n        pos++;\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (chr === quote) {\n                pos++;\n                return result;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                chr = str.charAt(pos);\n                var esc = void 0;\n                if (chr === quote) {\n                    result += quote;\n                }\n                else if ((esc = escapeTable[chr]) !== undefined) {\n                    result += esc;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                result += chr;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function getIdent() {\n        var result = '';\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (utils_1.isIdent(chr)) {\n                result += chr;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                if (pos >= l) {\n                    throw Error('Expected symbol but end of file reached.');\n                }\n                chr = str.charAt(pos);\n                if (utils_1.identSpecialChars[chr]) {\n                    result += chr;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                return result;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function skipWhitespace() {\n        chr = str.charAt(pos);\n        var result = false;\n        while (chr === ' ' || chr === \"\\t\" || chr === \"\\n\" || chr === \"\\r\" || chr === \"\\f\") {\n            result = true;\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function parse() {\n        var res = parseSelector();\n        if (pos < l) {\n            throw Error('Rule expected but \"' + str.charAt(pos) + '\" found.');\n        }\n        return res;\n    }\n    function parseSelector() {\n        var selector = parseSingleSelector();\n        if (!selector) {\n            return null;\n        }\n        var res = selector;\n        chr = str.charAt(pos);\n        while (chr === ',') {\n            pos++;\n            skipWhitespace();\n            if (res.type !== 'selectors') {\n                res = {\n                    type: 'selectors',\n                    selectors: [selector]\n                };\n            }\n            selector = parseSingleSelector();\n            if (!selector) {\n                throw Error('Rule expected after \",\".');\n            }\n            res.selectors.push(selector);\n        }\n        return res;\n    }\n    function parseSingleSelector() {\n        skipWhitespace();\n        var selector = {\n            type: 'ruleSet'\n        };\n        var rule = parseRule();\n        if (!rule) {\n            return null;\n        }\n        var currentRule = selector;\n        while (rule) {\n            rule.type = 'rule';\n            currentRule.rule = rule;\n            currentRule = rule;\n            skipWhitespace();\n            chr = str.charAt(pos);\n            if (pos >= l || chr === ',' || chr === ')') {\n                break;\n            }\n            if (ruleNestingOperators[chr]) {\n                var op = chr;\n                pos++;\n                skipWhitespace();\n                rule = parseRule();\n                if (!rule) {\n                    throw Error('Rule expected after \"' + op + '\".');\n                }\n                rule.nestingOperator = op;\n            }\n            else {\n                rule = parseRule();\n                if (rule) {\n                    rule.nestingOperator = null;\n                }\n            }\n        }\n        return selector;\n    }\n    // @ts-ignore no-overlap\n    function parseRule() {\n        var rule = null;\n        while (pos < l) {\n            chr = str.charAt(pos);\n            if (chr === '*') {\n                pos++;\n                (rule = rule || {}).tagName = '*';\n            }\n            else if (utils_1.isIdentStart(chr) || chr === '\\\\') {\n                (rule = rule || {}).tagName = getIdent();\n            }\n            else if (chr === '.') {\n                pos++;\n                rule = rule || {};\n                (rule.classNames = rule.classNames || []).push(getIdent());\n            }\n            else if (chr === '#') {\n                pos++;\n                (rule = rule || {}).id = getIdent();\n            }\n            else if (chr === '[') {\n                pos++;\n                skipWhitespace();\n                var attr = {\n                    name: getIdent()\n                };\n                skipWhitespace();\n                // @ts-ignore\n                if (chr === ']') {\n                    pos++;\n                }\n                else {\n                    var operator = '';\n                    if (attrEqualityMods[chr]) {\n                        operator = chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \"=\" but end of file reached.');\n                    }\n                    if (chr !== '=') {\n                        throw Error('Expected \"=\" but \"' + chr + '\" found.');\n                    }\n                    attr.operator = operator + '=';\n                    pos++;\n                    skipWhitespace();\n                    var attrValue = '';\n                    attr.valueType = 'string';\n                    // @ts-ignore\n                    if (chr === '\"') {\n                        attrValue = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (chr === '\\'') {\n                        attrValue = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (substitutesEnabled && chr === '$') {\n                        pos++;\n                        attrValue = getIdent();\n                        attr.valueType = 'substitute';\n                    }\n                    else {\n                        while (pos < l) {\n                            if (chr === ']') {\n                                break;\n                            }\n                            attrValue += chr;\n                            pos++;\n                            chr = str.charAt(pos);\n                        }\n                        attrValue = attrValue.trim();\n                    }\n                    skipWhitespace();\n                    if (pos >= l) {\n                        throw Error('Expected \"]\" but end of file reached.');\n                    }\n                    if (chr !== ']') {\n                        throw Error('Expected \"]\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    attr.value = attrValue;\n                }\n                rule = rule || {};\n                (rule.attrs = rule.attrs || []).push(attr);\n            }\n            else if (chr === ':') {\n                pos++;\n                var pseudoName = getIdent();\n                var pseudo = {\n                    name: pseudoName\n                };\n                // @ts-ignore\n                if (chr === '(') {\n                    pos++;\n                    var value = '';\n                    skipWhitespace();\n                    if (pseudos[pseudoName] === 'selector') {\n                        pseudo.valueType = 'selector';\n                        value = parseSelector();\n                    }\n                    else {\n                        pseudo.valueType = pseudos[pseudoName] || 'string';\n                        // @ts-ignore\n                        if (chr === '\"') {\n                            value = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (chr === '\\'') {\n                            value = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (substitutesEnabled && chr === '$') {\n                            pos++;\n                            value = getIdent();\n                            pseudo.valueType = 'substitute';\n                        }\n                        else {\n                            while (pos < l) {\n                                if (chr === ')') {\n                                    break;\n                                }\n                                value += chr;\n                                pos++;\n                                chr = str.charAt(pos);\n                            }\n                            value = value.trim();\n                        }\n                        skipWhitespace();\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \")\" but end of file reached.');\n                    }\n                    if (chr !== ')') {\n                        throw Error('Expected \")\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    pseudo.value = value;\n                }\n                rule = rule || {};\n                (rule.pseudos = rule.pseudos || []).push(pseudo);\n            }\n            else {\n                break;\n            }\n        }\n        return rule;\n    }\n    return parse();\n}\nexports.parseCssSelector = parseCssSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction renderEntity(entity) {\n    var res = '';\n    switch (entity.type) {\n        case 'ruleSet':\n            var currentEntity = entity.rule;\n            var parts = [];\n            while (currentEntity) {\n                if (currentEntity.nestingOperator) {\n                    parts.push(currentEntity.nestingOperator);\n                }\n                parts.push(renderEntity(currentEntity));\n                currentEntity = currentEntity.rule;\n            }\n            res = parts.join(' ');\n            break;\n        case 'selectors':\n            res = entity.selectors.map(renderEntity).join(', ');\n            break;\n        case 'rule':\n            if (entity.tagName) {\n                if (entity.tagName === '*') {\n                    res = '*';\n                }\n                else {\n                    res = utils_1.escapeIdentifier(entity.tagName);\n                }\n            }\n            if (entity.id) {\n                res += \"#\" + utils_1.escapeIdentifier(entity.id);\n            }\n            if (entity.classNames) {\n                res += entity.classNames.map(function (cn) {\n                    return \".\" + (utils_1.escapeIdentifier(cn));\n                }).join('');\n            }\n            if (entity.attrs) {\n                res += entity.attrs.map(function (attr) {\n                    if ('operator' in attr) {\n                        if (attr.valueType === 'substitute') {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + \"$\" + attr.value + \"]\";\n                        }\n                        else {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + utils_1.escapeStr(attr.value) + \"]\";\n                        }\n                    }\n                    else {\n                        return \"[\" + utils_1.escapeIdentifier(attr.name) + \"]\";\n                    }\n                }).join('');\n            }\n            if (entity.pseudos) {\n                res += entity.pseudos.map(function (pseudo) {\n                    if (pseudo.valueType) {\n                        if (pseudo.valueType === 'selector') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + renderEntity(pseudo.value) + \")\";\n                        }\n                        else if (pseudo.valueType === 'substitute') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"($\" + pseudo.value + \")\";\n                        }\n                        else if (pseudo.valueType === 'numeric') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + pseudo.value + \")\";\n                        }\n                        else {\n                            return (\":\" + utils_1.escapeIdentifier(pseudo.name) +\n                                \"(\" + utils_1.escapeIdentifier(pseudo.value) + \")\");\n                        }\n                    }\n                    else {\n                        return \":\" + utils_1.escapeIdentifier(pseudo.name);\n                    }\n                }).join('');\n            }\n            break;\n        default:\n            throw Error('Unknown entity type: \"' + entity.type + '\".');\n    }\n    return res;\n}\nexports.renderEntity = renderEntity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c === '-') || (c === '_');\n}\nexports.isIdentStart = isIdentStart;\nfunction isIdent(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '-' || c === '_';\n}\nexports.isIdent = isIdent;\nfunction isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexports.isHex = isHex;\nfunction escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (exports.identSpecialChars[chr]) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (!(chr === '_' || chr === '-' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (i !== 0 && chr >= '0' && chr <= '9'))) {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xF800) === 0xD800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xFC00) !== 0xD800 || (extraCharCode & 0xFC00) !== 0xDC00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3FF) << 10) + (extraCharCode & 0x3FF) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n            else {\n                result += chr;\n            }\n        }\n        i++;\n    }\n    return result;\n}\nexports.escapeIdentifier = escapeIdentifier;\nfunction escapeStr(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    var replacement;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if ((replacement = exports.strReplacementsRev[chr]) !== undefined) {\n            chr = replacement;\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\" + result + \"\\\"\";\n}\nexports.escapeStr = escapeStr;\nexports.identSpecialChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    '$': true,\n    '%': true,\n    '&': true,\n    '\\'': true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexports.strReplacementsRev = {\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t',\n    '\\f': '\\\\f',\n    '\\v': '\\\\v'\n};\nexports.singleQuoteEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\\'': '\\''\n};\nexports.doubleQuotesEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\"': '\"'\n};\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","const regex = require('./regex.js')\n\nmodule.exports = BananaSlug\n\nconst own = Object.hasOwnProperty\n\nfunction BananaSlug () {\n  const self = this\n\n  if (!(self instanceof BananaSlug)) return new BananaSlug()\n\n  self.reset()\n}\n\n/**\n * Generate a unique slug.\n * @param  {string} value String of text to slugify\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\n * @return {string}       A unique slug string\n */\nBananaSlug.prototype.slug = function (value, maintainCase) {\n  const self = this\n  let slug = slugger(value, maintainCase === true)\n  const originalSlug = slug\n\n  while (own.call(self.occurrences, slug)) {\n    self.occurrences[originalSlug]++\n    slug = originalSlug + '-' + self.occurrences[originalSlug]\n  }\n\n  self.occurrences[slug] = 0\n\n  return slug\n}\n\n/**\n * Reset - Forget all previous slugs\n * @return void\n */\nBananaSlug.prototype.reset = function () {\n  this.occurrences = Object.create(null)\n}\n\nfunction slugger (string, maintainCase) {\n  if (typeof string !== 'string') return ''\n  if (!maintainCase) string = string.toLowerCase()\n  return string.replace(regex, '').replace(/ /g, '-')\n}\n\nBananaSlug.slug = slugger\n","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nmodule.exports = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08BE-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D04\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31BB-\\u31EF\\u3200-\\u33FF\\u4DB6-\\u4DFF\\u9FF0-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7C7-\\uA7F6\\uA828-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB68-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD47-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD-\\uDDCF\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC60-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD00-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD823-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D-\\uD83F\\uD87B-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE4-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD822[\\uDEF3-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","import { Parent, Node } from 'unist';\nimport webpack from 'webpack';\nimport remark from 'remark';\nimport { getTransformValue } from './transform';\nimport { Options, FUNNAME_PREFIX, CodeBlockItem, CodeBlockData } from '../';\n\n/**\n * Creates an object containing the parameters of the current URL.\n *\n * ```js\n * getURLParameters('name=Adam&surname=Smith');\n * // 👉 {name: 'Adam', surname: 'Smith'}\n * ```\n * @param url `name=Adam&surname=Smith`\n * @returns\n */\nexport const getURLParameters = (url: string): Record<string, string> =>\n  (url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce(\n    (a: Record<string, string>, v: string) => ((a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a),\n    {},\n  );\n\nexport interface MarkdownDataChild extends Node {\n  lang: string;\n  meta: string;\n  value: string;\n}\n\nexport interface MarkdownParseData extends Parent<MarkdownDataChild> {}\n\n/** 转换 代码*/\nexport const getProcessor = (source: string) => {\n  try {\n    const child = remark.parse(source) as MarkdownParseData;\n    return child.children;\n  } catch (err) {\n    console.warn(err);\n  }\n};\n\n/**\n * ```js\n * 'mdx:preview' => ''  // Empty\n * 'mdx:preview:demo12' => 'demo12' // return meta id => 'demo12'\n * ```\n * @param meta string\n * @returns string?\n */\nexport const getMetaId = (meta: string = '') => {\n  const [metaRaw = ''] = /mdx:(.[\\w|:]+)/i.exec(meta) || [];\n  return metaRaw.replace(/^mdx:preview:?/, '');\n};\n\n/**\n * ```js\n * isMeta('mdx:preview') => true\n * isMeta('mdx:preview:demo12') => true\n * isMeta('mdx:preview--demo12') => false\n * ```\n * @param meta\n * @returns boolean\n */\nexport const isMeta = (meta: string = '') => meta && meta.includes('mdx:preview');\n\n/** 获取需要渲染的代码块 **/\nexport function getCodeBlock(\n  child: MarkdownParseData['children'],\n  opts: Options = {},\n  resourcePath?: string,\n): CodeBlockData['data'] {\n  const { lang = ['jsx', 'tsx'] } = opts;\n  // 获取渲染部分\n  const codeBlock: Record<string | number, CodeBlockItem> = {};\n  child.forEach((item) => {\n    if (item && item.type === 'code' && lang.includes(item.lang)) {\n      const line = item.position.start.line;\n      const metaId = getMetaId(item.meta);\n      if (isMeta(item.meta)) {\n        let name = metaId || line;\n        const funName = `${resourcePath}.${FUNNAME_PREFIX}${name}`;\n        const returnCode = getTransformValue(item.value, `${funName}.${item.lang}`, opts);\n        codeBlock[name] = {\n          name,\n          meta: getURLParameters(item.meta),\n          code: returnCode,\n          language: item.lang,\n          value: item.value,\n        };\n      }\n    }\n  });\n  return codeBlock;\n}\n\n/**\n * `mdCodeModulesLoader` method for adding `markdown-react-code-preview-loader` to webpack config.\n * @param {webpack.Configuration} config webpack config\n * @param {string[]} lang Parsing language\n * @param {Options} option Loader Options\n * @returns {webpack.Configuration}\n */\nexport const mdCodeModulesLoader = (\n  config: webpack.Configuration,\n  lang?: string[],\n  option: Options = {},\n): webpack.Configuration => {\n  config.module.rules.forEach((ruleItem) => {\n    if (typeof ruleItem === 'object') {\n      if (ruleItem.oneOf) {\n        ruleItem.oneOf.unshift({\n          test: /.md$/,\n          use: [\n            {\n              loader: 'markdown-react-code-preview-loader',\n              options: { lang, ...option },\n            },\n          ],\n        });\n      }\n    }\n  });\n  return config;\n};\n","/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React from 'react';\n\nexport const ExpandIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path\n        d=\"M8.64 5.23a1 1 0 0 0-1.41.13l-5 6a1 1 0 0 0 0 1.27l4.83 6a1 1 0 0 0 .78.37 1 1 0 0 0 .78-1.63L4.29 12l4.48-5.36a1 1 0 0 0-.13-1.41zm13.14 6.14-4.78-6a1 1 0 0 0-1.41-.15 1 1 0 0 0-.15 1.41L19.71 12l-4.48 5.37a1 1 0 0 0 .13 1.41A1 1 0 0 0 16 19a1 1 0 0 0 .77-.36l5-6a1 1 0 0 0 .01-1.27z\"\n        data-name=\"code\"\n      />\n    </svg>\n  );\n};\nexport const CopyIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M18 21h-6a3 3 0 0 1-3-3v-6a3 3 0 0 1 3-3h6a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3zm-6-10a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1z\" />\n      <path d=\"M9.73 15H5.67A2.68 2.68 0 0 1 3 12.33V5.67A2.68 2.68 0 0 1 5.67 3h6.66A2.68 2.68 0 0 1 15 5.67V9.4h-2V5.67a.67.67 0 0 0-.67-.67H5.67a.67.67 0 0 0-.67.67v6.66a.67.67 0 0 0 .67.67h4.06z\" />\n    </svg>\n  );\n};\nexport const CopySuccessIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"green\">\n      <path d=\"M9.71 11.29a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 16a1 1 0 0 0 .72-.34l7-8a1 1 0 0 0-1.5-1.32L12 13.54z\" />\n      <path d=\"M21 11a1 1 0 0 0-1 1 8 8 0 0 1-8 8A8 8 0 0 1 6.33 6.36 7.93 7.93 0 0 1 12 4a8.79 8.79 0 0 1 1.9.22 1 1 0 1 0 .47-1.94A10.54 10.54 0 0 0 12 2a10 10 0 0 0-7 17.09A9.93 9.93 0 0 0 12 22a10 10 0 0 0 10-10 1 1 0 0 0-1-1z\" />\n    </svg>\n  );\n};\n","import { useState } from 'react';\nimport copyTextToClipboard from '@uiw/copy-to-clipboard';\nimport { CopyIcon, CopySuccessIcon } from './icons';\n\nexport const Copied = (props: { text?: string }) => {\n  const [copied, setCopied] = useState(false);\n  const handle = () => {\n    setCopied(true);\n    copyTextToClipboard(props.text || '', () => {\n      const timer = setTimeout(() => {\n        setCopied(false);\n        clearTimeout(timer);\n      }, 2000);\n    });\n  };\n  return <button onClick={handle}>{copied ? <CopySuccessIcon /> : <CopyIcon />}</button>;\n};\n","import { forwardRef, useState } from 'react';\nimport { Copied } from './Copied';\nimport { ExpandIcon } from './icons';\nimport './styles.css';\n\nexport interface CodeLayoutProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  prefixCls?: string;\n  /** 原始 代码块 渲染 **/\n  code?: React.ReactNode;\n  text?: string;\n  /** Title section, you can also place buttons **/\n  toolbar?: React.ReactNode;\n  /** 额外内容，展示 toolbar 右侧内容 */\n  toolbarExtra?: React.ReactNode;\n  disableToolbar?: boolean;\n  disableCode?: boolean;\n  disablePreview?: boolean;\n  /** 禁用方格背景 */\n  disableCheckered?: boolean;\n  /** Configure the preview background color. */\n  background?: string;\n  /**\n   * 是否需要边框\n   * @default true\n   */\n  bordered?: boolean;\n  /**\n   * 是否显示复制按钮\n   * @default true\n   */\n  copied?: boolean;\n}\n\n/** react-code-preview-layout 缩写 */\nconst PRE_FIX = 'w-rcpl';\n\nconst CodeLayout = forwardRef<HTMLDivElement, CodeLayoutProps>((props, ref) => {\n  const [showCode, setShowCode] = useState(false);\n  const {\n    children,\n    toolbar,\n    bordered = true,\n    disableCheckered = false,\n    disablePreview = false,\n    disableCode = false,\n    disableToolbar = false,\n    text = '',\n    background = '',\n    copied = true,\n    toolbarExtra,\n    code,\n    prefixCls = PRE_FIX,\n    className,\n    ...other\n  } = props;\n  const cls = [prefixCls, className, bordered ? `w-bordered` : null, disableCheckered ? `w-disable-checkered` : null]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n\n  const style: React.CSSProperties = !background\n    ? {}\n    : {\n        backgroundColor: background,\n        backgroundImage: 'none',\n      };\n  return (\n    <div ref={ref} {...other} className={cls}>\n      {!disablePreview && (\n        <div className={`${prefixCls}-preview`} style={style}>\n          {children}\n        </div>\n      )}\n      {!disableToolbar && (\n        <div className={`${prefixCls}-toolbar`}>\n          <div className={`${prefixCls}-title`}>{toolbar}</div>\n          <div className={`${prefixCls}-extra`}>\n            {toolbarExtra}\n            {copied && <Copied text={text} />}\n            {!disableCode && (\n              <button onClick={() => setShowCode(!showCode)}>\n                <ExpandIcon />\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n      {!disableCode && !disableToolbar && (\n        <div className={`${prefixCls}-code ${showCode ? 'w-display' : 'w-hidden'}`}>{code}</div>\n      )}\n    </div>\n  );\n});\n\nexport default CodeLayout;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use strict'\n\nmodule.exports = stringify\n\nvar toMarkdown = require('mdast-util-to-markdown')\n\nfunction stringify(options) {\n  var self = this\n\n  this.Compiler = compile\n\n  function compile(tree) {\n    return toMarkdown(\n      tree,\n      Object.assign({}, self.data('settings'), options, {\n        // Note: this option is not in the readme.\n        // The goal is for it to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: self.data('toMarkdownExtensions') || []\n      })\n    )\n  }\n}\n","'use strict'\n\nmodule.exports = longestStreak\n\n// Get the count of the longest repeating streak of `character` in `value`.\nfunction longestStreak(value, character) {\n  var count = 0\n  var maximum = 0\n  var expected\n  var index\n\n  if (typeof character !== 'string' || character.length !== 1) {\n    throw new Error('Expected character')\n  }\n\n  value = String(value)\n  index = value.indexOf(character)\n  expected = index\n\n  while (index !== -1) {\n    count++\n\n    if (index === expected) {\n      if (count > maximum) {\n        maximum = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + 1\n    index = value.indexOf(character, expected)\n  }\n\n  return maximum\n}\n","module.exports = require('./lib')\n","module.exports = configure\n\nfunction configure(base, extension) {\n  var index = -1\n  var key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      base[key] = base[key].concat(extension[key] || [])\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","module.exports = blockquote\n\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction blockquote(node, _, context) {\n  var exit = context.enter('blockquote')\n  var value = indentLines(flow(node, context), map)\n  exit()\n  return value\n}\n\nfunction map(line, index, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","module.exports = hardBreak\n\nvar patternInScope = require('../util/pattern-in-scope')\n\nfunction hardBreak(node, _, context, safe) {\n  var index = -1\n\n  while (++index < context.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      context.unsafe[index].character === '\\n' &&\n      patternInScope(context.stack, context.unsafe[index])\n    ) {\n      return /[ \\t]/.test(safe.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","module.exports = code\n\nvar repeat = require('repeat-string')\nvar streak = require('longest-streak')\nvar formatCodeAsIndented = require('../util/format-code-as-indented')\nvar checkFence = require('../util/check-fence')\nvar indentLines = require('../util/indent-lines')\nvar safe = require('../util/safe')\n\nfunction code(node, _, context) {\n  var marker = checkFence(context)\n  var raw = node.value || ''\n  var suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n  var value\n  var sequence\n  var exit\n  var subexit\n\n  if (formatCodeAsIndented(node, context)) {\n    exit = context.enter('codeIndented')\n    value = indentLines(raw, map)\n  } else {\n    sequence = repeat(marker, Math.max(streak(raw, marker) + 1, 3))\n    exit = context.enter('codeFenced')\n    value = sequence\n\n    if (node.lang) {\n      subexit = context.enter('codeFencedLang' + suffix)\n      value += safe(context, node.lang, {\n        before: '`',\n        after: ' ',\n        encode: ['`']\n      })\n      subexit()\n    }\n\n    if (node.lang && node.meta) {\n      subexit = context.enter('codeFencedMeta' + suffix)\n      value +=\n        ' ' +\n        safe(context, node.meta, {\n          before: ' ',\n          after: '\\n',\n          encode: ['`']\n        })\n      subexit()\n    }\n\n    value += '\\n'\n\n    if (raw) {\n      value += raw + '\\n'\n    }\n\n    value += sequence\n  }\n\n  exit()\n  return value\n}\n\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","module.exports = definition\n\nvar association = require('../util/association')\nvar checkQuote = require('../util/check-quote')\nvar safe = require('../util/safe')\n\nfunction definition(node, _, context) {\n  var marker = checkQuote(context)\n  var suffix = marker === '\"' ? 'Quote' : 'Apostrophe'\n  var exit = context.enter('definition')\n  var subexit = context.enter('label')\n  var value =\n    '[' + safe(context, association(node), {before: '[', after: ']'}) + ']: '\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there’s whitespace, enclosed is prettier.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {before: ' ', after: ' '})\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      marker +\n      safe(context, node.title, {before: marker, after: marker}) +\n      marker\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","module.exports = emphasis\nemphasis.peek = emphasisPeek\n\nvar checkEmphasis = require('../util/check-emphasis')\nvar phrasing = require('../util/container-phrasing')\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\nfunction emphasis(node, _, context) {\n  var marker = checkEmphasis(context)\n  var exit = context.enter('emphasis')\n  var value = phrasing(node, context, {before: marker, after: marker})\n  exit()\n  return marker + value + marker\n}\n\nfunction emphasisPeek(node, _, context) {\n  return context.options.emphasis || '*'\n}\n","module.exports = heading\n\nvar repeat = require('repeat-string')\nvar formatHeadingAsSetext = require('../util/format-heading-as-setext')\nvar phrasing = require('../util/container-phrasing')\n\nfunction heading(node, _, context) {\n  var rank = Math.max(Math.min(6, node.depth || 1), 1)\n  var exit\n  var subexit\n  var value\n  var sequence\n\n  if (formatHeadingAsSetext(node, context)) {\n    exit = context.enter('headingSetext')\n    subexit = context.enter('phrasing')\n    value = phrasing(node, context, {before: '\\n', after: '\\n'})\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      repeat(\n        rank === 1 ? '=' : '-',\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  sequence = repeat('#', rank)\n  exit = context.enter('headingAtx')\n  subexit = context.enter('phrasing')\n  value = phrasing(node, context, {before: '# ', after: '\\n'})\n  value = value ? sequence + ' ' + value : sequence\n  if (context.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","module.exports = html\nhtml.peek = htmlPeek\n\nfunction html(node) {\n  return node.value || ''\n}\n\nfunction htmlPeek() {\n  return '<'\n}\n","module.exports = imageReference\nimageReference.peek = imageReferencePeek\n\nvar association = require('../util/association')\nvar safe = require('../util/safe')\n\nfunction imageReference(node, _, context) {\n  var type = node.referenceType\n  var exit = context.enter('imageReference')\n  var subexit = context.enter('label')\n  var alt = safe(context, node.alt, {before: '[', after: ']'})\n  var value = '![' + alt + ']'\n  var reference\n  var stack\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  reference = safe(context, association(node), {before: '[', after: ']'})\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += '[' + reference + ']'\n  } else if (type !== 'shortcut') {\n    value += '[]'\n  }\n\n  return value\n}\n\nfunction imageReferencePeek() {\n  return '!'\n}\n","module.exports = image\nimage.peek = imagePeek\n\nvar checkQuote = require('../util/check-quote')\nvar safe = require('../util/safe')\n\nfunction image(node, _, context) {\n  var quote = checkQuote(context)\n  var suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  var exit = context.enter('image')\n  var subexit = context.enter('label')\n  var value = '![' + safe(context, node.alt, {before: '[', after: ']'}) + ']('\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // Or if there’s markdown whitespace or an eol, enclose.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {\n      before: '(',\n      after: node.title ? ' ' : ')'\n    })\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      quote +\n      safe(context, node.title, {before: quote, after: quote}) +\n      quote\n    subexit()\n  }\n\n  value += ')'\n  exit()\n\n  return value\n}\n\nfunction imagePeek() {\n  return '!'\n}\n","exports.blockquote = require('./blockquote')\nexports.break = require('./break')\nexports.code = require('./code')\nexports.definition = require('./definition')\nexports.emphasis = require('./emphasis')\nexports.hardBreak = require('./break')\nexports.heading = require('./heading')\nexports.html = require('./html')\nexports.image = require('./image')\nexports.imageReference = require('./image-reference')\nexports.inlineCode = require('./inline-code')\nexports.link = require('./link')\nexports.linkReference = require('./link-reference')\nexports.list = require('./list')\nexports.listItem = require('./list-item')\nexports.paragraph = require('./paragraph')\nexports.root = require('./root')\nexports.strong = require('./strong')\nexports.text = require('./text')\nexports.thematicBreak = require('./thematic-break')\n","module.exports = inlineCode\ninlineCode.peek = inlineCodePeek\n\nvar patternCompile = require('../util/pattern-compile')\n\nfunction inlineCode(node, parent, context) {\n  var value = node.value || ''\n  var sequence = '`'\n  var index = -1\n  var pattern\n  var expression\n  var match\n  var position\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    (/[ \\r\\n`]/.test(value.charAt(0)) ||\n      /[ \\r\\n`]/.test(value.charAt(value.length - 1)))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\nfunction inlineCodePeek() {\n  return '`'\n}\n","module.exports = linkReference\nlinkReference.peek = linkReferencePeek\n\nvar association = require('../util/association')\nvar phrasing = require('../util/container-phrasing')\nvar safe = require('../util/safe')\n\nfunction linkReference(node, _, context) {\n  var type = node.referenceType\n  var exit = context.enter('linkReference')\n  var subexit = context.enter('label')\n  var text = phrasing(node, context, {before: '[', after: ']'})\n  var value = '[' + text + ']'\n  var reference\n  var stack\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  reference = safe(context, association(node), {before: '[', after: ']'})\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += '[' + reference + ']'\n  } else if (type !== 'shortcut') {\n    value += '[]'\n  }\n\n  return value\n}\n\nfunction linkReferencePeek() {\n  return '['\n}\n","module.exports = link\nlink.peek = linkPeek\n\nvar checkQuote = require('../util/check-quote')\nvar formatLinkAsAutolink = require('../util/format-link-as-autolink')\nvar phrasing = require('../util/container-phrasing')\nvar safe = require('../util/safe')\n\nfunction link(node, _, context) {\n  var quote = checkQuote(context)\n  var suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  var exit\n  var subexit\n  var value\n  var stack\n\n  if (formatLinkAsAutolink(node, context)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    stack = context.stack\n    context.stack = []\n    exit = context.enter('autolink')\n    value = '<' + phrasing(node, context, {before: '<', after: '>'}) + '>'\n    exit()\n    context.stack = stack\n    return value\n  }\n\n  exit = context.enter('link')\n  subexit = context.enter('label')\n  value = '[' + phrasing(node, context, {before: '[', after: ']'}) + ']('\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // Or if there’s markdown whitespace or an eol, enclose.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {\n      before: '(',\n      after: node.title ? ' ' : ')'\n    })\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      quote +\n      safe(context, node.title, {before: quote, after: quote}) +\n      quote\n    subexit()\n  }\n\n  value += ')'\n\n  exit()\n  return value\n}\n\nfunction linkPeek(node, _, context) {\n  return formatLinkAsAutolink(node, context) ? '<' : '['\n}\n","module.exports = listItem\n\nvar repeat = require('repeat-string')\nvar checkBullet = require('../util/check-bullet')\nvar checkListItemIndent = require('../util/check-list-item-indent')\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction listItem(node, parent, context) {\n  var bullet = checkBullet(context)\n  var listItemIndent = checkListItemIndent(context)\n  var size\n  var value\n  var exit\n\n  if (parent && parent.ordered) {\n    bullet =\n      (parent.start > -1 ? parent.start : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      '.'\n  }\n\n  size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' && ((parent && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  exit = context.enter('listItem')\n  value = indentLines(flow(node, context), map)\n  exit()\n\n  return value\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : repeat(' ', size)) + line\n    }\n\n    return (blank ? bullet : bullet + repeat(' ', size - bullet.length)) + line\n  }\n}\n","module.exports = list\n\nvar flow = require('../util/container-flow')\n\nfunction list(node, _, context) {\n  var exit = context.enter('list')\n  var value = flow(node, context)\n  exit()\n  return value\n}\n","module.exports = paragraph\n\nvar phrasing = require('../util/container-phrasing')\n\nfunction paragraph(node, _, context) {\n  var exit = context.enter('paragraph')\n  var subexit = context.enter('phrasing')\n  var value = phrasing(node, context, {before: '\\n', after: '\\n'})\n  subexit()\n  exit()\n  return value\n}\n","module.exports = root\n\nvar flow = require('../util/container-flow')\n\nfunction root(node, _, context) {\n  return flow(node, context)\n}\n","module.exports = strong\nstrong.peek = strongPeek\n\nvar checkStrong = require('../util/check-strong')\nvar phrasing = require('../util/container-phrasing')\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\nfunction strong(node, _, context) {\n  var marker = checkStrong(context)\n  var exit = context.enter('strong')\n  var value = phrasing(node, context, {before: marker, after: marker})\n  exit()\n  return marker + marker + value + marker + marker\n}\n\nfunction strongPeek(node, _, context) {\n  return context.options.strong || '*'\n}\n","module.exports = text\n\nvar safe = require('../util/safe')\n\nfunction text(node, parent, context, safeOptions) {\n  return safe(context, node.value, safeOptions)\n}\n","module.exports = thematicBreak\n\nvar repeat = require('repeat-string')\nvar checkRepeat = require('../util/check-rule-repeat')\nvar checkRule = require('../util/check-rule')\n\nfunction thematicBreak(node, parent, context) {\n  var value = repeat(\n    checkRule(context) + (context.options.ruleSpaces ? ' ' : ''),\n    checkRepeat(context)\n  )\n\n  return context.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","module.exports = toMarkdown\n\nvar zwitch = require('zwitch')\nvar configure = require('./configure')\nvar defaultHandlers = require('./handle')\nvar defaultJoin = require('./join')\nvar defaultUnsafe = require('./unsafe')\n\nfunction toMarkdown(tree, options) {\n  var settings = options || {}\n  var context = {\n    enter: enter,\n    stack: [],\n    unsafe: [],\n    join: [],\n    handlers: {},\n    options: {}\n  }\n  var result\n\n  configure(context, {\n    unsafe: defaultUnsafe,\n    join: defaultJoin,\n    handlers: defaultHandlers\n  })\n  configure(context, settings)\n\n  if (context.options.tightDefinitions) {\n    context.join = [joinDefinition].concat(context.join)\n  }\n\n  context.handle = zwitch('type', {\n    invalid: invalid,\n    unknown: unknown,\n    handlers: context.handlers\n  })\n\n  result = context.handle(tree, null, context, {before: '\\n', after: '\\n'})\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  function enter(name) {\n    context.stack.push(name)\n    return exit\n\n    function exit() {\n      context.stack.pop()\n    }\n  }\n}\n\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\nfunction unknown(node) {\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n","module.exports = [joinDefaults]\n\nvar formatCodeAsIndented = require('./util/format-code-as-indented')\nvar formatHeadingAsSetext = require('./util/format-heading-as-setext')\n\nfunction joinDefaults(left, right, parent, context) {\n  if (\n    // Two lists with the same marker.\n    (right.type === 'list' &&\n      right.type === left.type &&\n      Boolean(left.ordered) === Boolean(right.ordered)) ||\n    // Indented code after list or another indented code.\n    (right.type === 'code' &&\n      formatCodeAsIndented(right, context) &&\n      (left.type === 'list' ||\n        (left.type === right.type && formatCodeAsIndented(left, context))))\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if (typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, context)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","module.exports = [\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {character: '!', after: '\\\\[', inConstruct: 'phrasing'},\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  {before: '\\\\]', character: '(', inConstruct: 'phrasing'},\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*'},\n  {character: '*', inConstruct: 'phrasing'},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {character: '<', after: '[!/?A-Za-z]', inConstruct: 'phrasing'},\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: ['phrasing', 'label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {\n    character: ']',\n    inConstruct: ['label', 'reference']\n  },\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {before: '[^A-Za-z]', character: '_', inConstruct: 'phrasing'},\n  {character: '_', after: '[^A-Za-z]', inConstruct: 'phrasing'},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedMetaGraveAccent',\n      'phrasing'\n    ]\n  },\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","module.exports = association\n\nvar decode = require('parse-entities/decode-entity')\n\nvar characterEscape = /\\\\([!-/:-@[-`{-~])/g\nvar characterReference = /&(#(\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n// The `label` of an association is the string value: character escapes and\n// references work, and casing is intact.\n// The `identifier` is used to match one association to another: controversially,\n// character escapes and references don’t work in this matching: `&copy;` does\n// not match `©`, and `\\+` does not match `+`.\n// But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n// matches `a b`.\n// So, we do prefer the label when figuring out how we’re going to serialize:\n// it has whitespace, casing, and we can ignore most useless character escapes\n// and all character references.\nfunction association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return node.identifier\n    .replace(characterEscape, '$1')\n    .replace(characterReference, decodeIfPossible)\n}\n\nfunction decodeIfPossible($0, $1) {\n  return decode($1) || $0\n}\n","module.exports = checkBullet\n\nfunction checkBullet(context) {\n  var marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkEmphasis\n\nfunction checkEmphasis(context) {\n  var marker = context.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkFence\n\nfunction checkFence(context) {\n  var marker = context.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkListItemIndent\n\nfunction checkListItemIndent(context) {\n  var style = context.options.listItemIndent || 'tab'\n\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","module.exports = checkQuote\n\nfunction checkQuote(context) {\n  var marker = context.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkRule\n\nfunction checkRule(context) {\n  var repetition = context.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","module.exports = checkRule\n\nfunction checkRule(context) {\n  var marker = context.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkStrong\n\nfunction checkStrong(context) {\n  var marker = context.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = flow\n\nvar repeat = require('repeat-string')\n\nfunction flow(parent, context) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  function between(left, right) {\n    var index = -1\n    var result\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result))\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","module.exports = phrasing\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var before = safeOptions.before\n  var after\n  var handle\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: ''\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n    }\n\n    results.push(\n      context.handle(child, parent, context, {\n        before: before,\n        after: after\n      })\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  return results.join('')\n}\n","module.exports = formatCodeAsIndented\n\nfunction formatCodeAsIndented(node, context) {\n  return (\n    !context.options.fences &&\n    node.value &&\n    // If there’s no info…\n    !node.lang &&\n    // And there’s a non-whitespace character…\n    /[^ \\r\\n]/.test(node.value) &&\n    // And the value doesn’t start or end in a blank…\n    !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","module.exports = formatHeadingAsSetext\n\nvar toString = require('mdast-util-to-string')\n\nfunction formatHeadingAsSetext(node, context) {\n  return (\n    context.options.setext && (!node.depth || node.depth < 3) && toString(node)\n  )\n}\n","module.exports = formatLinkAsAutolink\n\nvar toString = require('mdast-util-to-string')\n\nfunction formatLinkAsAutolink(node, context) {\n  var raw = toString(node)\n\n  return (\n    !context.options.resourceLink &&\n    // If there’s a url…\n    node.url &&\n    // And there’s a no title…\n    !node.title &&\n    // And the content of `node` is a single text node…\n    node.children &&\n    node.children.length === 1 &&\n    node.children[0].type === 'text' &&\n    // And if the url is the same as the content…\n    (raw === node.url || 'mailto:' + raw === node.url) &&\n    // And that starts w/ a protocol…\n    /^[a-z][a-z+.-]+:/i.test(node.url) &&\n    // And that doesn’t contain ASCII control codes (character escapes and\n    // references don’t work) or angle brackets…\n    !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","module.exports = indentLines\n\nvar eol = /\\r?\\n|\\r/g\n\nfunction indentLines(value, map) {\n  var result = []\n  var start = 0\n  var line = 0\n  var match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","module.exports = patternCompile\n\nfunction patternCompile(pattern) {\n  var before\n  var after\n\n  if (!pattern._compiled) {\n    before = pattern.before ? '(?:' + pattern.before + ')' : ''\n    after = pattern.after ? '(?:' + pattern.after + ')' : ''\n\n    if (pattern.atBreak) {\n      before = '[\\\\r\\\\n][\\\\t ]*' + before\n    }\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (after || ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","module.exports = patternInScope\n\nfunction patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct)\n  )\n}\n\nfunction listInScope(stack, list, none) {\n  var index\n\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  index = -1\n\n  while (++index < list.length) {\n    if (stack.indexOf(list[index]) !== -1) {\n      return true\n    }\n  }\n\n  return false\n}\n","module.exports = safe\n\nvar patternCompile = require('./pattern-compile')\nvar patternInScope = require('./pattern-in-scope')\n\nfunction safe(context, input, config) {\n  var value = (config.before || '') + (input || '') + (config.after || '')\n  var positions = []\n  var result = []\n  var infos = {}\n  var index = -1\n  var before\n  var after\n  var position\n  var pattern\n  var expression\n  var match\n  var start\n  var end\n\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      before = 'before' in pattern || pattern.atBreak\n      after = 'after' in pattern\n\n      position = match.index + (before ? match[1].length : 0)\n\n      if (positions.indexOf(position) === -1) {\n        positions.push(position)\n        infos[position] = {before: before, after: after}\n      } else {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  start = config.before ? config.before.length : 0\n  end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    position = positions[index]\n\n    if (\n      // Character before or after matched:\n      position < start ||\n      position >= end\n    ) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      position + 1 < end &&\n      positions[index + 1] === position + 1 &&\n      infos[position].after &&\n      !infos[position + 1].before &&\n      !infos[position + 1].after\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || config.encode.indexOf(value.charAt(position)) === -1)\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\nfunction numerical(a, b) {\n  return a - b\n}\n\nfunction escapeBackslashes(value, after) {\n  var expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  var positions = []\n  var results = []\n  var index = -1\n  var start = 0\n  var whole = value + after\n  var match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.\n// Prefer the node’s plain-text fields, otherwise serialize its children,\n// and if the given value is an array, serialize the nodes in it.\nfunction toString(node) {\n  return (\n    (node &&\n      (node.value ||\n        node.alt ||\n        node.title ||\n        ('children' in node && all(node.children)) ||\n        ('length' in node && all(node)))) ||\n    ''\n  )\n}\n\nfunction all(values) {\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = toString(values[index])\n  }\n\n  return result.join('')\n}\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nmodule.exports = factory\n\nvar noop = Function.prototype\nvar own = {}.hasOwnProperty\n\n// Handle values based on a property.\nfunction factory(key, options) {\n  var settings = options || {}\n\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    return (fn || noop).apply(this, arguments)\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n","'use strict'\n\nvar unified = require('unified')\nvar parse = require('remark-parse')\nvar stringify = require('remark-stringify')\n\nmodule.exports = unified().use(parse).use(stringify).freeze()\n","'use strict'\n\nmodule.exports = bail\n\nfunction bail(err) {\n  if (err) {\n    throw err\n  }\n}\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict'\n\nmodule.exports = fromMarkdown\n\n// These three are compiled away in the `dist/`\n\nvar toString = require('mdast-util-to-string')\nvar assign = require('micromark/dist/constant/assign')\nvar own = require('micromark/dist/constant/has-own-property')\nvar normalizeIdentifier = require('micromark/dist/util/normalize-identifier')\nvar safeFromInt = require('micromark/dist/util/safe-from-int')\nvar parser = require('micromark/dist/parse')\nvar preprocessor = require('micromark/dist/preprocess')\nvar postprocess = require('micromark/dist/postprocess')\nvar decode = require('parse-entities/decode-entity')\nvar stringifyPosition = require('unist-util-stringify-position')\n\nfunction fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n\n  return compiler(options)(\n    postprocess(\n      parser(options).document().write(preprocessor()(value, encoding, true))\n    )\n  )\n}\n\n// Note this compiler only understand complete buffering, not streaming.\nfunction compiler(options) {\n  var settings = options || {}\n  var config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n\n    settings.mdastExtensions || []\n  )\n\n  var data = {}\n\n  return compile\n\n  function compile(events) {\n    var tree = {type: 'root', children: []}\n    var stack = [tree]\n    var tokenStack = []\n    var listStack = []\n    var index = -1\n    var handler\n    var listStart\n\n    var context = {\n      stack: stack,\n      tokenStack: tokenStack,\n      config: config,\n      enter: enter,\n      exit: exit,\n      buffer: buffer,\n      resume: resume,\n      setData: setData,\n      getData: getData\n    }\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          listStart = listStack.pop(index)\n          index = prepareList(events, listStart, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          assign({sliceSerialize: events[index][2].sliceSerialize}, context),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length) {\n      throw new Error(\n        'Cannot close document, a token (`' +\n          tokenStack[tokenStack.length - 1].type +\n          '`, ' +\n          stringifyPosition({\n            start: tokenStack[tokenStack.length - 1].start,\n            end: tokenStack[tokenStack.length - 1].end\n          }) +\n          ') is still open'\n      )\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length ? events[0][1].start : {line: 1, column: 1, offset: 0}\n      ),\n\n      end: point(\n        events.length\n          ? events[events.length - 2][1].end\n          : {line: 1, column: 1, offset: 0}\n      )\n    }\n\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n\n  function prepareList(events, start, length) {\n    var index = start - 1\n    var containerBalance = -1\n    var listSpread = false\n    var listItem\n    var tailIndex\n    var lineIndex\n    var tailEvent\n    var event\n    var firstBlankLineIndex\n    var atMarker\n\n    while (++index <= length) {\n      event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = point(\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: point(event[1].start)\n          }\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  function getData(key) {\n    return data[key]\n  }\n\n  function point(d) {\n    return {line: d.line, column: d.column, offset: d.offset}\n  }\n\n  function opener(create, and) {\n    return open\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  function buffer() {\n    this.stack.push({type: 'fragment', children: []})\n  }\n\n  function enter(node, token) {\n    this.stack[this.stack.length - 1].children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push(token)\n    node.position = {start: point(token.start)}\n    return node\n  }\n\n  function closer(and) {\n    return close\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  function exit(token) {\n    var node = this.stack.pop()\n    var open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): it’s not open'\n      )\n    } else if (open.type !== token.type) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): a different token (`' +\n          open.type +\n          '`, ' +\n          stringifyPosition({start: open.start, end: open.end}) +\n          ') is open'\n      )\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      this.stack[this.stack.length - 2].start = parseInt(\n        this.sliceSerialize(token),\n        10\n      )\n\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  function onexitcodefencedfenceinfo() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].lang = data\n  }\n\n  function onexitcodefencedfencemeta() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].meta = data\n  }\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  function onexitcodefenced() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data.replace(\n      /^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g,\n      ''\n    )\n\n    setData('flowCodeInside')\n  }\n\n  function onexitcodeindented() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitdefinitiontitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitdefinitiondestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitatxheadingsequence(token) {\n    if (!this.stack[this.stack.length - 1].depth) {\n      this.stack[this.stack.length - 1].depth = this.sliceSerialize(\n        token\n      ).length\n    }\n  }\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  function onexitsetextheadinglinesequence(token) {\n    this.stack[this.stack.length - 1].depth =\n      this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  function onenterdata(token) {\n    var siblings = this.stack[this.stack.length - 1].children\n    var tail = siblings[siblings.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {start: point(token.start)}\n      this.stack[this.stack.length - 1].children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n\n  function onexitdata(token) {\n    var tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  function onexitlineending(token) {\n    var context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      context.children[context.children.length - 1].position.end = point(\n        token.end\n      )\n\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.indexOf(context.type) > -1\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  function onexithtmlflow() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexithtmltext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitcodetext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitlink() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitimage() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitlabeltext(token) {\n    this.stack[this.stack.length - 2].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitlabel() {\n    var fragment = this.stack[this.stack.length - 1]\n    var value = this.resume()\n\n    this.stack[this.stack.length - 1].label = value\n\n    // Assume a reference.\n    setData('inReference', true)\n\n    if (this.stack[this.stack.length - 1].type === 'link') {\n      this.stack[this.stack.length - 1].children = fragment.children\n    } else {\n      this.stack[this.stack.length - 1].alt = value\n    }\n  }\n\n  function onexitresourcedestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitresourcetitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  function onexitreferencestring(token) {\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  function onexitcharacterreferencevalue(token) {\n    var data = this.sliceSerialize(token)\n    var type = getData('characterReferenceType')\n    var value\n    var tail\n\n    if (type) {\n      value = safeFromInt(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n\n      setData('characterReferenceType')\n    } else {\n      value = decode(data)\n    }\n\n    tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url = this.sliceSerialize(token)\n  }\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url =\n      'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  function blockQuote() {\n    return {type: 'blockquote', children: []}\n  }\n\n  function codeFlow() {\n    return {type: 'code', lang: null, meta: null, value: ''}\n  }\n\n  function codeText() {\n    return {type: 'inlineCode', value: ''}\n  }\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  function emphasis() {\n    return {type: 'emphasis', children: []}\n  }\n\n  function heading() {\n    return {type: 'heading', depth: undefined, children: []}\n  }\n\n  function hardBreak() {\n    return {type: 'break'}\n  }\n\n  function html() {\n    return {type: 'html', value: ''}\n  }\n\n  function image() {\n    return {type: 'image', title: null, url: '', alt: null}\n  }\n\n  function link() {\n    return {type: 'link', title: null, url: '', children: []}\n  }\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  function paragraph() {\n    return {type: 'paragraph', children: []}\n  }\n\n  function strong() {\n    return {type: 'strong', children: []}\n  }\n\n  function text() {\n    return {type: 'text', value: ''}\n  }\n\n  function thematicBreak() {\n    return {type: 'thematicBreak'}\n  }\n}\n\nfunction configure(config, extensions) {\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(config, extensions[index])\n  }\n\n  return config\n}\n\nfunction extension(config, extension) {\n  var key\n  var left\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : (config[key] = {})\n\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, extension[key])\n    } else {\n      Object.assign(left, extension[key])\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = require('./dist')\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.\n// Prefer the node’s plain-text fields, otherwise serialize its children,\n// and if the given value is an array, serialize the nodes in it.\nfunction toString(node) {\n  return (\n    (node &&\n      (node.value ||\n        node.alt ||\n        node.title ||\n        ('children' in node && all(node.children)) ||\n        ('length' in node && all(node)))) ||\n    ''\n  )\n}\n\nfunction all(values) {\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = toString(values[index])\n  }\n\n  return result.join('')\n}\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlpha = regexCheck(/[A-Za-z]/)\n\nmodule.exports = asciiAlpha\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\nmodule.exports = asciiAlphanumeric\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\nmodule.exports = asciiAtext\n","'use strict'\n\n// Note: EOF is seen as ASCII control here, because `null < 32 == true`.\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code < 32 || code === 127\n  )\n}\n\nmodule.exports = asciiControl\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiDigit = regexCheck(/\\d/)\n\nmodule.exports = asciiDigit\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\nmodule.exports = asciiHexDigit\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\nmodule.exports = asciiPunctuation\n","'use strict'\n\nfunction markdownLineEndingOrSpace(code) {\n  return code < 0 || code === 32\n}\n\nmodule.exports = markdownLineEndingOrSpace\n","'use strict'\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n\nmodule.exports = markdownLineEnding\n","'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n","'use strict'\n\nvar unicodePunctuationRegex = require('../constant/unicode-punctuation-regex.js')\nvar regexCheck = require('../util/regex-check.js')\n\n// In fact adds to the bundle size.\n\nvar unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar unicodeWhitespace = regexCheck(/\\s/)\n\nmodule.exports = unicodeWhitespace\n","'use strict'\n\nvar assign = Object.assign\n\nmodule.exports = assign\n","'use strict'\n\nvar fromCharCode = String.fromCharCode\n\nmodule.exports = fromCharCode\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = own\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar basics = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\nmodule.exports = basics\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar raws = ['pre', 'script', 'style', 'textarea']\n\nmodule.exports = raws\n","'use strict'\n\nvar splice = [].splice\n\nmodule.exports = splice\n","'use strict'\n\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nvar unicodePunctuation = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar text$1 = require('./initialize/text.js')\nvar attention = require('./tokenize/attention.js')\nvar autolink = require('./tokenize/autolink.js')\nvar blockQuote = require('./tokenize/block-quote.js')\nvar characterEscape = require('./tokenize/character-escape.js')\nvar characterReference = require('./tokenize/character-reference.js')\nvar codeFenced = require('./tokenize/code-fenced.js')\nvar codeIndented = require('./tokenize/code-indented.js')\nvar codeText = require('./tokenize/code-text.js')\nvar definition = require('./tokenize/definition.js')\nvar hardBreakEscape = require('./tokenize/hard-break-escape.js')\nvar headingAtx = require('./tokenize/heading-atx.js')\nvar htmlFlow = require('./tokenize/html-flow.js')\nvar htmlText = require('./tokenize/html-text.js')\nvar labelEnd = require('./tokenize/label-end.js')\nvar labelStartImage = require('./tokenize/label-start-image.js')\nvar labelStartLink = require('./tokenize/label-start-link.js')\nvar lineEnding = require('./tokenize/line-ending.js')\nvar list = require('./tokenize/list.js')\nvar setextUnderline = require('./tokenize/setext-underline.js')\nvar thematicBreak = require('./tokenize/thematic-break.js')\n\nvar document = {\n  42: list,\n  // Asterisk\n  43: list,\n  // Plus sign\n  45: list,\n  // Dash\n  48: list,\n  // 0\n  49: list,\n  // 1\n  50: list,\n  // 2\n  51: list,\n  // 3\n  52: list,\n  // 4\n  53: list,\n  // 5\n  54: list,\n  // 6\n  55: list,\n  // 7\n  56: list,\n  // 8\n  57: list,\n  // 9\n  62: blockQuote // Greater than\n}\nvar contentInitial = {\n  91: definition // Left square bracket\n}\nvar flowInitial = {\n  '-2': codeIndented,\n  // Horizontal tab\n  '-1': codeIndented,\n  // Virtual space\n  32: codeIndented // Space\n}\nvar flow = {\n  35: headingAtx,\n  // Number sign\n  42: thematicBreak,\n  // Asterisk\n  45: [setextUnderline, thematicBreak],\n  // Dash\n  60: htmlFlow,\n  // Less than\n  61: setextUnderline,\n  // Equals to\n  95: thematicBreak,\n  // Underscore\n  96: codeFenced,\n  // Grave accent\n  126: codeFenced // Tilde\n}\nvar string = {\n  38: characterReference,\n  // Ampersand\n  92: characterEscape // Backslash\n}\nvar text = {\n  '-5': lineEnding,\n  // Carriage return\n  '-4': lineEnding,\n  // Line feed\n  '-3': lineEnding,\n  // Carriage return + line feed\n  33: labelStartImage,\n  // Exclamation mark\n  38: characterReference,\n  // Ampersand\n  42: attention,\n  // Asterisk\n  60: [autolink, htmlText],\n  // Less than\n  91: labelStartLink,\n  // Left square bracket\n  92: [hardBreakEscape, characterEscape],\n  // Backslash\n  93: labelEnd,\n  // Right square bracket\n  95: attention,\n  // Underscore\n  96: codeText // Grave accent\n}\nvar insideSpan = {\n  null: [attention, text$1.resolver]\n}\nvar disable = {\n  null: []\n}\n\nexports.contentInitial = contentInitial\nexports.disable = disable\nexports.document = document\nexports.flow = flow\nexports.flowInitial = flowInitial\nexports.insideSpan = insideSpan\nexports.string = string\nexports.text = text\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\n\nvar tokenize = initializeContent\n\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  var previous\n  return contentStart\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeDocument\nvar containerConstruct = {\n  tokenize: tokenizeContainer\n}\nvar lazyFlowConstruct = {\n  tokenize: tokenizeLazyFlow\n}\n\nfunction initializeDocument(effects) {\n  var self = this\n  var stack = []\n  var continued = 0\n  var inspectConstruct = {\n    tokenize: tokenizeInspect,\n    partial: true\n  }\n  var inspectResult\n  var childFlow\n  var childToken\n  return start\n\n  function start(code) {\n    if (continued < stack.length) {\n      self.containerState = stack[continued][1]\n      return effects.attempt(\n        stack[continued][0].continuation,\n        documentContinue,\n        documentContinued\n      )(code)\n    }\n\n    return documentContinued(code)\n  }\n\n  function documentContinue(code) {\n    continued++\n    return start(code)\n  }\n\n  function documentContinued(code) {\n    // If we’re in a concrete construct (such as when expecting another line of\n    // HTML, or we resulted in lazy content), we can immediately start flow.\n    if (inspectResult && inspectResult.flowContinue) {\n      return flowStart(code)\n    }\n\n    self.interrupt =\n      childFlow &&\n      childFlow.currentConstruct &&\n      childFlow.currentConstruct.interruptible\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  function containerContinue(code) {\n    stack.push([self.currentConstruct, self.containerState])\n    self.containerState = undefined\n    return documentContinued(code)\n  }\n\n  function flowStart(code) {\n    if (code === null) {\n      exitContainers(0, true)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  function flowContinue(code) {\n    if (code === null) {\n      continueFlow(effects.exit('chunkFlow'))\n      return flowStart(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      continueFlow(effects.exit('chunkFlow'))\n      return effects.check(inspectConstruct, documentAfterPeek)\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  function documentAfterPeek(code) {\n    exitContainers(\n      inspectResult.continued,\n      inspectResult && inspectResult.flowEnd\n    )\n    continued = 0\n    return start(code)\n  }\n\n  function continueFlow(token) {\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.lazy = inspectResult && inspectResult.lazy\n    childFlow.defineSkip(token.start)\n    childFlow.write(self.sliceStream(token))\n  }\n\n  function exitContainers(size, end) {\n    var index = stack.length // Close the flow.\n\n    if (childFlow && end) {\n      childFlow.write([null])\n      childToken = childFlow = undefined\n    } // Exit open containers.\n\n    while (index-- > size) {\n      self.containerState = stack[index][1]\n      stack[index][0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function tokenizeInspect(effects, ok) {\n    var subcontinued = 0\n    inspectResult = {}\n    return inspectStart\n\n    function inspectStart(code) {\n      if (subcontinued < stack.length) {\n        self.containerState = stack[subcontinued][1]\n        return effects.attempt(\n          stack[subcontinued][0].continuation,\n          inspectContinue,\n          inspectLess\n        )(code)\n      } // If we’re continued but in a concrete flow, we can’t have more\n      // containers.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        inspectResult.flowContinue = true\n        return inspectDone(code)\n      }\n\n      self.interrupt =\n        childFlow.currentConstruct && childFlow.currentConstruct.interruptible\n      self.containerState = {}\n      return effects.attempt(\n        containerConstruct,\n        inspectFlowEnd,\n        inspectDone\n      )(code)\n    }\n\n    function inspectContinue(code) {\n      subcontinued++\n      return self.containerState._closeFlow\n        ? inspectFlowEnd(code)\n        : inspectStart(code)\n    }\n\n    function inspectLess(code) {\n      if (childFlow.currentConstruct && childFlow.currentConstruct.lazy) {\n        // Maybe another container?\n        self.containerState = {}\n        return effects.attempt(\n          containerConstruct,\n          inspectFlowEnd, // Maybe flow, or a blank line?\n          effects.attempt(\n            lazyFlowConstruct,\n            inspectFlowEnd,\n            effects.check(partialBlankLine, inspectFlowEnd, inspectLazy)\n          )\n        )(code)\n      } // Otherwise we’re interrupting.\n\n      return inspectFlowEnd(code)\n    }\n\n    function inspectLazy(code) {\n      // Act as if all containers are continued.\n      subcontinued = stack.length\n      inspectResult.lazy = true\n      inspectResult.flowContinue = true\n      return inspectDone(code)\n    } // We’re done with flow if we have more containers, or an interruption.\n\n    function inspectFlowEnd(code) {\n      inspectResult.flowEnd = true\n      return inspectDone(code)\n    }\n\n    function inspectDone(code) {\n      inspectResult.continued = subcontinued\n      self.interrupt = self.containerState = undefined\n      return ok(code)\n    }\n  }\n}\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction tokenizeLazyFlow(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.lazy(this.parser.constructs.flow, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar content = require('../tokenize/content.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar assign = require('../constant/assign.js')\nvar shallow = require('../util/shallow.js')\n\nvar text = initializeFactory('text')\nvar string = initializeFactory('string')\nvar resolver = {\n  resolveAll: createResolver()\n}\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  function initializeText(effects) {\n    var self = this\n    var constructs = this.parser.constructs[field]\n    var text = effects.attempt(constructs, start, notText)\n    return start\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n\n    function atBreak(code) {\n      var list = constructs[code]\n      var index = -1\n\n      if (code === null) {\n        return true\n      }\n\n      if (list) {\n        while (++index < list.length) {\n          if (\n            !list[index].previous ||\n            list[index].previous.call(self, self.previous)\n          ) {\n            return true\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  function resolveAllText(events, context) {\n    var index = -1\n    var enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n} // A rather ugly set of instructions which again looks at chunks in the input\n// stream.\n// The reason to do this here is that it is *much* faster to parse in reverse.\n// And that we can’t hook into `null` to split the line suffix before an EOF.\n// To do: figure out if we can make this into a clean utility, or even in core.\n// As it will be useful for GFMs literal autolink extension (and maybe even\n// tables?)\n\nfunction resolveAllLineSuffixes(events, context) {\n  var eventIndex = -1\n  var chunks\n  var data\n  var chunk\n  var index\n  var bufferIndex\n  var size\n  var tabs\n  var token\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      data = events[eventIndex - 1][1]\n      chunks = context.sliceStream(data)\n      index = chunks.length\n      bufferIndex = -1\n      size = 0\n      tabs = undefined\n\n      while (index--) {\n        chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1);\n        else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: shallow(data.end)\n        }\n        data.end = shallow(token.start)\n\n        if (data.start.offset === data.end.offset) {\n          assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n\nexports.resolver = resolver\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar content = require('./initialize/content.js')\nvar document = require('./initialize/document.js')\nvar flow = require('./initialize/flow.js')\nvar text = require('./initialize/text.js')\nvar combineExtensions = require('./util/combine-extensions.js')\nvar createTokenizer = require('./util/create-tokenizer.js')\nvar miniflat = require('./util/miniflat.js')\nvar constructs = require('./constructs.js')\n\nfunction parse(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  }\n  return parser\n\n  function create(initializer) {\n    return creator\n\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nvar subtokenize = require('./util/subtokenize.js')\n\nfunction postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n\nmodule.exports = postprocess\n","'use strict'\n\nvar search = /[\\0\\t\\n\\r]/g\n\nfunction preprocess() {\n  var start = true\n  var column = 1\n  var buffer = ''\n  var atCarriageReturn\n  return preprocessor\n\n  function preprocessor(value, encoding, end) {\n    var chunks = []\n    var match\n    var next\n    var startPosition\n    var endPosition\n    var code\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition = match ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        if (code === 0) {\n          chunks.push(65533)\n          column++\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4\n          chunks.push(-2)\n\n          while (column++ < next) chunks.push(-1)\n        } else if (code === 10) {\n          chunks.push(-4)\n          column = 1\n        } // Must be carriage return.\n        else {\n          atCarriageReturn = true\n          column = 1\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n\nmodule.exports = preprocess\n","'use strict'\n\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar classifyCharacter = require('../util/classify-character.js')\nvar movePoint = require('../util/move-point.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\n\nvar attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\nfunction resolveAllAttention(events, context) {\n  var index = -1\n  var open\n  var group\n  var text\n  var openingSequence\n  var closingSequence\n  var use\n  var nextEvents\n  var offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: movePoint(shallow(events[open][1].end), -use),\n            end: shallow(events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: shallow(events[index][1].start),\n            end: movePoint(shallow(events[index][1].start), use)\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: shallow(events[open][1].end),\n            end: shallow(events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: shallow(openingSequence.start),\n            end: shallow(closingSequence.end)\n          }\n          events[open][1].end = shallow(openingSequence.start)\n          events[index][1].start = shallow(closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = chunkedPush(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeAttention(effects, ok) {\n  var before = classifyCharacter(this.previous)\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    var token\n    var after\n    var open\n    var close\n\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    token = effects.exit('attentionSequence')\n    after = classifyCharacter(code)\n    open = !after || (after === 2 && before)\n    close = !before || (before === 2 && after)\n    token._open = marker === 42 ? open : open && (before || !close)\n    token._close = marker === 42 ? close : close && (after || !open)\n    return ok(code)\n  }\n}\n\nmodule.exports = attention\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiAtext = require('../character/ascii-atext.js')\nvar asciiControl = require('../character/ascii-control.js')\n\nvar autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 1\n  return start\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n\nmodule.exports = autolink\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit: exit\n}\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    if (code === 62) {\n      if (!self.containerState.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        self.containerState.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n\nmodule.exports = blockQuote\n","'use strict'\n\nvar asciiPunctuation = require('../character/ascii-punctuation.js')\n\nvar characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterEscape\n","'use strict'\n\nvar decodeEntity = require('parse-entities/decode-entity.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar asciiHexDigit = require('../character/ascii-hex-digit.js')\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {default: e}\n}\n\nvar decodeEntity__default = /*#__PURE__*/ _interopDefaultLegacy(decodeEntity)\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity__default['default'](self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterReference\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  var self = this\n  var closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  var initialPrefix = prefixSize(this.events, 'linePrefix')\n  var sizeOpen = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : content(code)\n  }\n\n  function content(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(\n        closingFenceConstruct,\n        after,\n        initialPrefix\n          ? factorySpace(effects, content, 'linePrefix', initialPrefix + 1)\n          : content\n      )\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return content(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    var size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\nmodule.exports = codeFenced\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n}\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok)\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n\nmodule.exports = codeIndented\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous: previous\n}\n\nfunction resolveCodeText(events) {\n  var tailExitIndex = events.length - 4\n  var headEnterIndex = 3\n  var index\n  var enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[tailExitIndex][1].type = events[headEnterIndex][1].type =\n          'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  var sizeOpen = 0\n  var size\n  var token\n  return start\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n\nmodule.exports = codeText\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar subtokenize = require('../util/subtokenize.js')\nvar factorySpace = require('./factory-space.js')\n\n// No name because it must not be turned off.\nvar content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent,\n  interruptible: true,\n  lazy: true\n}\nvar continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n} // Content is transparent: it’s parsed right now. That way, definitions are also\n// parsed right now: before text in paragraphs (specifically, media) are parsed.\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\nfunction tokenizeContent(effects, ok) {\n  var previous\n  return start\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous = previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous: previous\n    })\n    return data\n  }\n}\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  var self = this\n  return startLookahead\n\n  function startLookahead(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1 ||\n      prefixSize(self.events, 'linePrefix') < 4\n    ) {\n      return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = content\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factorySpace = require('./factory-space.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\nvar factoryTitle = require('./factory-title.js')\n\nvar definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\nvar titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this\n  var identifier\n  return start\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = definition\n","'use strict'\n\nvar asciiControl = require('../character/ascii-control.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\n// eslint-disable-next-line max-params\nfunction destinationFactory(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  var limit = max || Infinity\n  var balance = 0\n  return start\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (asciiControl(code) || code === 41) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n\nmodule.exports = destinationFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\n\n// eslint-disable-next-line max-params\nfunction labelFactory(effects, ok, nok, type, markerType, stringType) {\n  var self = this\n  var size = 0\n  var data\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* c8 ignore next */\n      (code === 94 &&\n        /* c8 ignore next */\n        !size &&\n        /* c8 ignore next */\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n\nmodule.exports = labelFactory\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction titleFactory(effects, ok, nok, type, markerType, stringType) {\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n\nmodule.exports = titleFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction whitespaceFactory(effects, ok) {\n  var seen\n  return start\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = whitespaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = hardBreakEscape\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar factorySpace = require('./factory-space.js')\n\nvar headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2\n  var contentStart = 3\n  var content\n  var text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var self = this\n  var size = 0\n  return start\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n\nmodule.exports = headingAtx\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar fromCharCode = require('../constant/from-char-code.js')\nvar htmlBlockNames = require('../constant/html-block-names.js')\nvar htmlRawNames = require('../constant/html-raw-names.js')\nvar partialBlankLine = require('./partial-blank-line.js')\n\nvar htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\nvar nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n\nfunction resolveToHtmlFlow(events) {\n  var index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  var self = this\n  var kind\n  var startTag\n  var buffer\n  var index\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.indexOf(buffer.toLowerCase()) > -1\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.indexOf(buffer.toLowerCase()) > -1) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting.\n\n      return self.interrupt\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = undefined\n    return completeAttributeValueUnquoted(code)\n  }\n\n  function completeAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return htmlContinueStart\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.indexOf(buffer.toLowerCase()) > -1) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(partialBlankLine, ok, nok)\n  }\n}\n\nmodule.exports = htmlFlow\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this\n  var marker\n  var buffer\n  var index\n  var returnState\n  return start\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = htmlText\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factoryTitle = require('./factory-title.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\n\nvar labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\nvar resourceConstruct = {\n  tokenize: tokenizeResource\n}\nvar fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\nvar collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n\nfunction resolveAllLabelEnd(events) {\n  var index = -1\n  var token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      !token._used &&\n      (token.type === 'labelImage' ||\n        token.type === 'labelLink' ||\n        token.type === 'labelEnd')\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length\n  var offset = 0\n  var group\n  var label\n  var text\n  var token\n  var open\n  var close\n  var media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: shallow(events[open][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n  label = {\n    type: 'label',\n    start: shallow(events[open][1].start),\n    end: shallow(events[close][1].end)\n  }\n  text = {\n    type: 'labelText',\n    start: shallow(events[open + offset + 2][1].end),\n    end: shallow(events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = chunkedPush(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = chunkedPush(media, [['enter', text, context]]) // Between.\n\n  media = chunkedPush(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = chunkedPush(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = chunkedPush(media, events.slice(close + 1)) // Media close.\n\n  media = chunkedPush(media, [['exit', group, context]])\n  chunkedSplice(events, open, events.length, media)\n  return events\n}\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var labelStart\n  var defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined =\n      self.parser.defined.indexOf(\n        normalizeIdentifier(\n          self.sliceSerialize({\n            start: labelStart.end,\n            end: self.now()\n          })\n        )\n      ) > -1\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  function afterLabel(code) {\n    return self.parser.defined.indexOf(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    ) < 0\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = labelEnd\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartImage\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartLink\n","'use strict'\n\nvar factorySpace = require('./factory-space.js')\n\nvar lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n\nmodule.exports = lineEnding\n","'use strict'\n\nvar asciiDigit = require('../character/ascii-digit.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar sizeChunks = require('../util/size-chunks.js')\nvar factorySpace = require('./factory-space.js')\nvar partialBlankLine = require('./partial-blank-line.js')\nvar thematicBreak = require('./thematic-break.js')\n\nvar list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\nvar listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\nvar indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\nfunction tokenizeListStart(effects, ok, nok) {\n  var self = this\n  var initialSize = prefixSize(self.events, 'linePrefix')\n  var size = 0\n  return start\n\n  function start(code) {\n    var kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      partialBlankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize + sizeChunks(self.sliceStream(effects.exit('listItemPrefix')))\n    return ok(code)\n  }\n}\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  var self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(partialBlankLine, onBlank, notBlank)\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'listItemIndent') ===\n      self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4 + 1\n  )\n\n  function afterPrefix(code) {\n    return markdownSpace(code) ||\n      !prefixSize(self.events, 'listItemPrefixWhitespace')\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = list\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar shallow = require('../util/shallow.js')\nvar factorySpace = require('./factory-space.js')\n\nvar setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\nfunction resolveToSetextUnderline(events, context) {\n  var index = events.length\n  var content\n  var text\n  var definition\n  var heading // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  heading = {\n    type: 'setextHeading',\n    start: shallow(events[text][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = shallow(events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var marker\n  var paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!self.lazy && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = setextUnderline\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n\nmodule.exports = thematicBreak\n","'use strict'\n\nvar chunkedSplice = require('./chunked-splice.js')\n\nfunction chunkedPush(list, items) {\n  if (list.length) {\n    chunkedSplice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n\nmodule.exports = chunkedPush\n","'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar unicodePunctuation = require('../character/unicode-punctuation.js')\nvar unicodeWhitespace = require('../character/unicode-whitespace.js')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\nmodule.exports = classifyCharacter\n","'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedPush = require('./chunked-push.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\nvar resolveAll = require('./resolve-all.js')\nvar serializeChunks = require('./serialize-chunks.js')\nvar shallow = require('./shallow.js')\nvar sliceChunks = require('./slice-chunks.js')\n\n// Create a tokenizer.\n// Tokenizers deal with one type of data (e.g., containers, flow, text).\n// The parser is the object dealing with it all.\n// `initialize` works like other constructs, except that only its `tokenize`\n// function is used, in which case it doesn’t receive an `ok` or `nok`.\n// `from` can be given to set the point before the first character, although\n// when further lines are indented, they must be set with `defineSkip`.\nfunction createTokenizer(parser, initialize, from) {\n  var point = from\n    ? shallow(from)\n    : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }\n  var columnStart = {}\n  var resolveAllConstructs = []\n  var chunks = []\n  var stack = []\n\n  var effects = {\n    consume: consume,\n    enter: enter,\n    exit: exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    }),\n    lazy: constructFactory(onsuccessfulcheck, {\n      lazy: true\n    })\n  } // State and tools for resolving and serializing.\n\n  var context = {\n    previous: null,\n    events: [],\n    parser: parser,\n    sliceStream: sliceStream,\n    sliceSerialize: sliceSerialize,\n    now: now,\n    defineSkip: skip,\n    write: write\n  } // The state function.\n\n  var state = initialize.tokenize.call(context, effects) // Track which character we expect to be consumed, to catch bugs.\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  } // Store where we are in the input stream.\n\n  point._index = 0\n  point._bufferIndex = -1\n  return context\n\n  function write(slice) {\n    chunks = chunkedPush(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  function sliceSerialize(token) {\n    return serializeChunks(sliceStream(token))\n  }\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  function now() {\n    return shallow(point)\n  }\n\n  function skip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n  // Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n  // `consume`).\n  // Here is where we walk through the chunks, which either include strings of\n  // several characters, or numerical character codes.\n  // The reason to do this in a loop instead of a call is so the stack can\n  // drain.\n\n  function main() {\n    var chunkIndex\n    var chunk\n\n    while (point._index < chunks.length) {\n      chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  } // Deal with one code.\n\n  function go(code) {\n    state = state(code)\n  } // Move a character forward.\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n  } // Start a token.\n\n  function enter(type, fields) {\n    var token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  } // Stop a token.\n\n  function exit(type) {\n    var token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  } // Use results.\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  } // Discard results.\n\n  function onsuccessfulcheck(construct, info) {\n    info.restore()\n  } // Factory to attempt/check/interrupt.\n\n  function constructFactory(onreturn, fields) {\n    return hook // Handle either an object mapping codes to constructs, a list of\n    // constructs, or a single construct.\n\n    function hook(constructs, returnState, bogusState) {\n      var listOfConstructs\n      var constructIndex\n      var currentConstruct\n      var info\n      return constructs.tokenize || 'length' in constructs\n        ? handleListOfConstructs(miniflat(constructs))\n        : handleMapOfConstructs\n\n      function handleMapOfConstructs(code) {\n        if (code in constructs || null in constructs) {\n          return handleListOfConstructs(\n            constructs.null\n              ? /* c8 ignore next */\n                miniflat(constructs[code]).concat(miniflat(constructs.null))\n              : constructs[code]\n          )(code)\n        }\n\n        return bogusState(code)\n      }\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        return handleConstruct(list[constructIndex])\n      }\n\n      function handleConstruct(construct) {\n        return start\n\n        function start(code) {\n          // To do: not nede to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.indexOf(construct.name) > -1\n          ) {\n            return nok()\n          }\n\n          return construct.tokenize.call(\n            fields ? assign({}, context, fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      function ok(code) {\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      function nok(code) {\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && resolveAllConstructs.indexOf(construct) < 0) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      chunkedSplice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  function store() {\n    var startPoint = now()\n    var startPrevious = context.previous\n    var startCurrentConstruct = context.currentConstruct\n    var startEventsIndex = context.events.length\n    var startStack = Array.from(stack)\n    return {\n      restore: restore,\n      from: startEventsIndex\n    }\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\nmodule.exports = createTokenizer\n","'use strict'\n\nfunction miniflat(value) {\n  return value === null || value === undefined\n    ? []\n    : 'length' in value\n    ? value\n    : [value]\n}\n\nmodule.exports = miniflat\n","'use strict'\n\n// chunks (replacement characters, tabs, or line endings).\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n  return point\n}\n\nmodule.exports = movePoint\n","'use strict'\n\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\nmodule.exports = normalizeIdentifier\n","'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction regexCheck(regex) {\n  return check\n\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n\nmodule.exports = regexCheck\n","'use strict'\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\nmodule.exports = resolveAll\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n\nmodule.exports = safeFromInt\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n\nmodule.exports = shallow\n","'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n","'use strict'\n\nfunction sliceChunks(chunks, token) {\n  var startIndex = token.start._index\n  var startBufferIndex = token.start._bufferIndex\n  var endIndex = token.end._index\n  var endBufferIndex = token.end._bufferIndex\n  var view\n\n  if (startIndex === endIndex) {\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\nmodule.exports = sliceChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar shallow = require('./shallow.js')\n\nfunction subtokenize(events) {\n  var jumps = {}\n  var index = -1\n  var event\n  var lineIndex\n  var otherIndex\n  var otherEvent\n  var parameters\n  var subevents\n  var more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1].isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container || event[1]._movePreviousLineEndings) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = shallow(events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        chunkedSplice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\nfunction subcontent(events, eventIndex) {\n  var token = events[eventIndex][1]\n  var context = events[eventIndex][2]\n  var startPosition = eventIndex - 1\n  var startPositions = []\n  var tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  var childEvents = tokenizer.events\n  var jumps = []\n  var gaps = {}\n  var stream\n  var previous\n  var index\n  var entered\n  var end\n  var adjust // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (token) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== token) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!token._tokenizer) {\n      stream = context.sliceStream(token)\n\n      if (!token.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(token.start)\n      }\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = token\n    token = token.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  token = previous\n  index = childEvents.length\n\n  while (index--) {\n    // Make sure we’ve at least seen something (final eol is part of the last\n    // token).\n    if (childEvents[index][0] === 'enter') {\n      entered = true\n    } else if (\n      // Find a void token that includes a break.\n      entered &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      add(childEvents.slice(index + 1, end))\n      // Help GC.\n      token._tokenizer = token.next = undefined\n      token = token.previous\n      end = index + 1\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = token._tokenizer = token.next = undefined // Do head:\n\n  add(childEvents.slice(0, end))\n  index = -1\n  adjust = 0\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n\n  function add(slice) {\n    var start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    chunkedSplice(events, start, 2, slice)\n  }\n}\n\nmodule.exports = subtokenize\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nmodule.exports = parse\n\nvar fromMarkdown = require('mdast-util-from-markdown')\n\nfunction parse(options) {\n  var self = this\n\n  this.Parser = parse\n\n  function parse(doc) {\n    return fromMarkdown(\n      doc,\n      Object.assign({}, self.data('settings'), options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: self.data('micromarkExtensions') || [],\n        mdastExtensions: self.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n}\n","'use strict'\n\nvar wrap = require('./wrap.js')\n\nmodule.exports = trough\n\ntrough.wrap = wrap\n\nvar slice = [].slice\n\n// Create new middleware.\nfunction trough() {\n  var fns = []\n  var middleware = {}\n\n  middleware.run = run\n  middleware.use = use\n\n  return middleware\n\n  // Run `fns`.  Last argument must be a completion handler.\n  function run() {\n    var index = -1\n    var input = slice.call(arguments, 0, -1)\n    var done = arguments[arguments.length - 1]\n\n    if (typeof done !== 'function') {\n      throw new Error('Expected function as last argument, not ' + done)\n    }\n\n    next.apply(null, [null].concat(input))\n\n    // Run the next `fn`, if any.\n    function next(err) {\n      var fn = fns[++index]\n      var params = slice.call(arguments, 0)\n      var values = params.slice(1)\n      var length = input.length\n      var pos = -1\n\n      if (err) {\n        done(err)\n        return\n      }\n\n      // Copy non-nully input into values.\n      while (++pos < length) {\n        if (values[pos] === null || values[pos] === undefined) {\n          values[pos] = input[pos]\n        }\n      }\n\n      input = values\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next).apply(null, input)\n      } else {\n        done.apply(null, [null].concat(input))\n      }\n    }\n  }\n\n  // Add `fn` to the list.\n  function use(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error('Expected `fn` to be a function, not ' + fn)\n    }\n\n    fns.push(fn)\n\n    return middleware\n  }\n}\n","'use strict'\n\nvar slice = [].slice\n\nmodule.exports = wrap\n\n// Wrap `fn`.\n// Can be sync or async; return a promise, receive a completion handler, return\n// new values and errors.\nfunction wrap(fn, callback) {\n  var invoked\n\n  return wrapped\n\n  function wrapped() {\n    var params = slice.call(arguments, 0)\n    var callback = fn.length > params.length\n    var result\n\n    if (callback) {\n      params.push(done)\n    }\n\n    try {\n      result = fn.apply(null, params)\n    } catch (error) {\n      // Well, this is quite the pickle.\n      // `fn` received a callback and invoked it (thus continuing the pipeline),\n      // but later also threw an error.\n      // We’re not about to restart the pipeline again, so the only thing left\n      // to do is to throw the thing instead.\n      if (callback && invoked) {\n        throw error\n      }\n\n      return done(error)\n    }\n\n    if (!callback) {\n      if (result && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  // Invoke `next`, only once.\n  function done() {\n    if (!invoked) {\n      invoked = true\n\n      callback.apply(null, arguments)\n    }\n  }\n\n  // Invoke `done` with one value.\n  // Tracks if an error is passed, too.\n  function then(value) {\n    done(null, value)\n  }\n}\n","'use strict'\n\nvar bail = require('bail')\nvar buffer = require('is-buffer')\nvar extend = require('extend')\nvar plain = require('is-plain-obj')\nvar trough = require('trough')\nvar vfile = require('vfile')\n\n// Expose a frozen processor.\nmodule.exports = unified().freeze()\n\nvar slice = [].slice\nvar own = {}.hasOwnProperty\n\n// Process pipeline.\nvar pipeline = trough()\n  .use(pipelineParse)\n  .use(pipelineRun)\n  .use(pipelineStringify)\n\nfunction pipelineParse(p, ctx) {\n  ctx.tree = p.parse(ctx.file)\n}\n\nfunction pipelineRun(p, ctx, next) {\n  p.run(ctx.tree, ctx.file, done)\n\n  function done(error, tree, file) {\n    if (error) {\n      next(error)\n    } else {\n      ctx.tree = tree\n      ctx.file = file\n      next()\n    }\n  }\n}\n\nfunction pipelineStringify(p, ctx) {\n  var result = p.stringify(ctx.tree, ctx.file)\n\n  if (result === undefined || result === null) {\n    // Empty.\n  } else if (typeof result === 'string' || buffer(result)) {\n    if ('value' in ctx.file) {\n      ctx.file.value = result\n    }\n\n    ctx.file.contents = result\n  } else {\n    ctx.file.result = result\n  }\n}\n\n// Function to create the first processor.\nfunction unified() {\n  var attachers = []\n  var transformers = trough()\n  var namespace = {}\n  var freezeIndex = -1\n  var frozen\n\n  // Data management.\n  processor.data = data\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  processor.run = run\n  processor.runSync = runSync\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  function processor() {\n    var destination = unified()\n    var index = -1\n\n    while (++index < attachers.length) {\n      destination.use.apply(null, attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  // Freeze: used to signal a processor that has finished configuration.\n  //\n  // For example, take unified itself: it’s frozen.\n  // Plugins should not be added to it.\n  // Rather, it should be extended, by invoking it, before modifying it.\n  //\n  // In essence, always invoke this when exporting a processor.\n  function freeze() {\n    var values\n    var transformer\n\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      values = attachers[freezeIndex]\n\n      if (values[1] === false) {\n        continue\n      }\n\n      if (values[1] === true) {\n        values[1] = undefined\n      }\n\n      transformer = values[0].apply(processor, values.slice(1))\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Infinity\n\n    return processor\n  }\n\n  // Data management.\n  // Getter / setter for processor-specific informtion.\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  // Plugin management.\n  //\n  // Pass it:\n  // *   an attacher and options,\n  // *   a preset,\n  // *   a list of presets, attachers, and arguments (list of attachers and\n  //     options).\n  function use(value) {\n    var settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin.apply(null, arguments)\n    } else if (typeof value === 'object') {\n      if ('length' in value) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new Error('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = extend(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = extend(settings || {}, result.settings)\n      }\n    }\n\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if ('length' in value) {\n          addPlugin.apply(null, value)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new Error('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    function addList(plugins) {\n      var index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (typeof plugins === 'object' && 'length' in plugins) {\n        while (++index < plugins.length) {\n          add(plugins[index])\n        }\n      } else {\n        throw new Error('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    function addPlugin(plugin, value) {\n      var entry = find(plugin)\n\n      if (entry) {\n        if (plain(entry[1]) && plain(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        attachers.push(slice.call(arguments))\n      }\n    }\n  }\n\n  function find(plugin) {\n    var index = -1\n\n    while (++index < attachers.length) {\n      if (attachers[index][0] === plugin) {\n        return attachers[index]\n      }\n    }\n  }\n\n  // Parse a file (in string or vfile representation) into a unist node using\n  // the `Parser` on the processor.\n  function parse(doc) {\n    var file = vfile(doc)\n    var Parser\n\n    freeze()\n    Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      return new Parser(String(file), file).parse()\n    }\n\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  // Run transforms on a unist node representation of a file (in string or\n  // vfile representation), async.\n  function run(node, file, cb) {\n    assertNode(node)\n    freeze()\n\n    if (!cb && typeof file === 'function') {\n      cb = file\n      file = null\n    }\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      transformers.run(node, vfile(file), done)\n\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          cb(null, tree, file)\n        }\n      }\n    }\n  }\n\n  // Run transforms on a unist node representation of a file (in string or\n  // vfile representation), sync.\n  function runSync(node, file) {\n    var result\n    var complete\n\n    run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    return result\n\n    function done(error, tree) {\n      complete = true\n      result = tree\n      bail(error)\n    }\n  }\n\n  // Stringify a unist node representation of a file (in string or vfile\n  // representation) into a string using the `Compiler` on the processor.\n  function stringify(node, doc) {\n    var file = vfile(doc)\n    var Compiler\n\n    freeze()\n    Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      return new Compiler(node, file).compile()\n    }\n\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  // Parse a file (in string or vfile representation) into a unist node using\n  // the `Parser` on the processor, then run transforms on that node, and\n  // compile the resulting node using the `Compiler` on the processor, and\n  // store that result on the vfile.\n  function process(doc, cb) {\n    freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      var file = vfile(doc)\n\n      pipeline.run(processor, {file: file}, done)\n\n      function done(error) {\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          cb(null, file)\n        }\n      }\n    }\n  }\n\n  // Process the given document (in string or vfile representation), sync.\n  function processSync(doc) {\n    var file\n    var complete\n\n    freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n    file = vfile(doc)\n\n    process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n// Check if `value` is a constructor.\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n// Check if `value` is an object with keys.\nfunction keys(value) {\n  var key\n  for (key in value) {\n    return true\n  }\n\n  return false\n}\n\n// Assert a parser is available.\nfunction assertParser(name, Parser) {\n  if (typeof Parser !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n// Assert a compiler is available.\nfunction assertCompiler(name, Compiler) {\n  if (typeof Compiler !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n// Assert the processor is not frozen.\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot invoke `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n// Assert `node` is a unist node.\nfunction assertNode(node) {\n  if (!node || typeof node.type !== 'string') {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n}\n\n// Assert that `complete` is `true`.\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = stringify\n\nfunction stringify(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if (own.call(value, 'position') || own.call(value, 'type')) {\n    return position(value.position)\n  }\n\n  // Position.\n  if (own.call(value, 'start') || own.call(value, 'end')) {\n    return position(value)\n  }\n\n  // Point.\n  if (own.call(value, 'line') || own.call(value, 'column')) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\nfunction point(point) {\n  if (!point || typeof point !== 'object') {\n    point = {}\n  }\n\n  return index(point.line) + ':' + index(point.column)\n}\n\nfunction position(pos) {\n  if (!pos || typeof pos !== 'object') {\n    pos = {}\n  }\n\n  return point(pos.start) + '-' + point(pos.end)\n}\n\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","'use strict'\n\nvar stringify = require('unist-util-stringify-position')\n\nmodule.exports = VMessage\n\n// Inherit from `Error#`.\nfunction VMessagePrototype() {}\nVMessagePrototype.prototype = Error.prototype\nVMessage.prototype = new VMessagePrototype()\n\n// Message properties.\nvar proto = VMessage.prototype\n\nproto.file = ''\nproto.name = ''\nproto.reason = ''\nproto.message = ''\nproto.stack = ''\nproto.fatal = null\nproto.column = null\nproto.line = null\n\n// Construct a new VMessage.\n//\n// Note: We cannot invoke `Error` on the created context, as that adds readonly\n// `line` and `column` attributes on Safari 9, thus throwing and failing the\n// data.\nfunction VMessage(reason, position, origin) {\n  var parts\n  var range\n  var location\n\n  if (typeof position === 'string') {\n    origin = position\n    position = null\n  }\n\n  parts = parseOrigin(origin)\n  range = stringify(position) || '1:1'\n\n  location = {\n    start: {line: null, column: null},\n    end: {line: null, column: null}\n  }\n\n  // Node.\n  if (position && position.position) {\n    position = position.position\n  }\n\n  if (position) {\n    // Position.\n    if (position.start) {\n      location = position\n      position = position.start\n    } else {\n      // Point.\n      location.start = position\n    }\n  }\n\n  if (reason.stack) {\n    this.stack = reason.stack\n    reason = reason.message\n  }\n\n  this.message = reason\n  this.name = range\n  this.reason = reason\n  this.line = position ? position.line : null\n  this.column = position ? position.column : null\n  this.location = location\n  this.source = parts[0]\n  this.ruleId = parts[1]\n}\n\nfunction parseOrigin(origin) {\n  var result = [null, null]\n  var index\n\n  if (typeof origin === 'string') {\n    index = origin.indexOf(':')\n\n    if (index === -1) {\n      result[1] = origin\n    } else {\n      result[0] = origin.slice(0, index)\n      result[1] = origin.slice(index + 1)\n    }\n  }\n\n  return result\n}\n","'use strict'\n\nmodule.exports = require('./lib')\n","'use strict'\n\nvar p = require('./minpath')\nvar proc = require('./minproc')\nvar buffer = require('is-buffer')\n\nmodule.exports = VFile\n\nvar own = {}.hasOwnProperty\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nvar order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nVFile.prototype.toString = toString\n\n// Access full path (`~/index.min.js`).\nObject.defineProperty(VFile.prototype, 'path', {get: getPath, set: setPath})\n\n// Access parent path (`~`).\nObject.defineProperty(VFile.prototype, 'dirname', {\n  get: getDirname,\n  set: setDirname\n})\n\n// Access basename (`index.min.js`).\nObject.defineProperty(VFile.prototype, 'basename', {\n  get: getBasename,\n  set: setBasename\n})\n\n// Access extname (`.js`).\nObject.defineProperty(VFile.prototype, 'extname', {\n  get: getExtname,\n  set: setExtname\n})\n\n// Access stem (`index.min`).\nObject.defineProperty(VFile.prototype, 'stem', {get: getStem, set: setStem})\n\n// Construct a new file.\nfunction VFile(options) {\n  var prop\n  var index\n\n  if (!options) {\n    options = {}\n  } else if (typeof options === 'string' || buffer(options)) {\n    options = {contents: options}\n  } else if ('message' in options && 'messages' in options) {\n    return options\n  }\n\n  if (!(this instanceof VFile)) {\n    return new VFile(options)\n  }\n\n  this.data = {}\n  this.messages = []\n  this.history = []\n  this.cwd = proc.cwd()\n\n  // Set path related properties in the correct order.\n  index = -1\n\n  while (++index < order.length) {\n    prop = order[index]\n\n    if (own.call(options, prop)) {\n      this[prop] = options[prop]\n    }\n  }\n\n  // Set non-path related properties.\n  for (prop in options) {\n    if (order.indexOf(prop) < 0) {\n      this[prop] = options[prop]\n    }\n  }\n}\n\nfunction getPath() {\n  return this.history[this.history.length - 1]\n}\n\nfunction setPath(path) {\n  assertNonEmpty(path, 'path')\n\n  if (this.path !== path) {\n    this.history.push(path)\n  }\n}\n\nfunction getDirname() {\n  return typeof this.path === 'string' ? p.dirname(this.path) : undefined\n}\n\nfunction setDirname(dirname) {\n  assertPath(this.path, 'dirname')\n  this.path = p.join(dirname || '', this.basename)\n}\n\nfunction getBasename() {\n  return typeof this.path === 'string' ? p.basename(this.path) : undefined\n}\n\nfunction setBasename(basename) {\n  assertNonEmpty(basename, 'basename')\n  assertPart(basename, 'basename')\n  this.path = p.join(this.dirname || '', basename)\n}\n\nfunction getExtname() {\n  return typeof this.path === 'string' ? p.extname(this.path) : undefined\n}\n\nfunction setExtname(extname) {\n  assertPart(extname, 'extname')\n  assertPath(this.path, 'extname')\n\n  if (extname) {\n    if (extname.charCodeAt(0) !== 46 /* `.` */) {\n      throw new Error('`extname` must start with `.`')\n    }\n\n    if (extname.indexOf('.', 1) > -1) {\n      throw new Error('`extname` cannot contain multiple dots')\n    }\n  }\n\n  this.path = p.join(this.dirname, this.stem + (extname || ''))\n}\n\nfunction getStem() {\n  return typeof this.path === 'string'\n    ? p.basename(this.path, this.extname)\n    : undefined\n}\n\nfunction setStem(stem) {\n  assertNonEmpty(stem, 'stem')\n  assertPart(stem, 'stem')\n  this.path = p.join(this.dirname || '', stem + (this.extname || ''))\n}\n\n// Get the value of the file.\nfunction toString(encoding) {\n  return (this.contents || '').toString(encoding)\n}\n\n// Assert that `part` is not a path (i.e., does not contain `p.sep`).\nfunction assertPart(part, name) {\n  if (part && part.indexOf(p.sep) > -1) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + p.sep + '`'\n    )\n  }\n}\n\n// Assert that `part` is not empty.\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n// Assert `path` exists.\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","'use strict'\n\nvar VMessage = require('vfile-message')\nvar VFile = require('./core.js')\n\nmodule.exports = VFile\n\nVFile.prototype.message = message\nVFile.prototype.info = info\nVFile.prototype.fail = fail\n\n// Create a message with `reason` at `position`.\n// When an error is passed in as `reason`, copies the stack.\nfunction message(reason, position, origin) {\n  var message = new VMessage(reason, position, origin)\n\n  if (this.path) {\n    message.name = this.path + ':' + message.name\n    message.file = this.path\n  }\n\n  message.fatal = false\n\n  this.messages.push(message)\n\n  return message\n}\n\n// Fail: creates a vmessage, associates it with the file, and throws it.\nfunction fail() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = true\n\n  throw message\n}\n\n// Info: creates a vmessage, associates it with the file, and marks the fatality\n// as null.\nfunction info() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = null\n\n  return message\n}\n","'use strict'\n\n// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexports.basename = basename\nexports.dirname = dirname\nexports.extname = extname\nexports.join = join\nexports.sep = '/'\n\nfunction basename(path, ext) {\n  var start = 0\n  var end = -1\n  var index\n  var firstNonSlashEnd\n  var seenNonSlash\n  var extIndex\n\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  index = path.length\n\n  if (ext === undefined || !ext.length || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  firstNonSlashEnd = -1\n  extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\nfunction dirname(path) {\n  var end\n  var unmatchedSlash\n  var index\n\n  assertPath(path)\n\n  if (!path.length) {\n    return '.'\n  }\n\n  end = -1\n  index = path.length\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\nfunction extname(path) {\n  var startDot = -1\n  var startPart = 0\n  var end = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  var preDotState = 0\n  var unmatchedSlash\n  var code\n  var index\n\n  assertPath(path)\n\n  index = path.length\n\n  while (index--) {\n    code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\nfunction join() {\n  var index = -1\n  var joined\n\n  while (++index < arguments.length) {\n    assertPath(arguments[index])\n\n    if (arguments[index]) {\n      joined =\n        joined === undefined\n          ? arguments[index]\n          : joined + '/' + arguments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  var absolute\n  var value\n\n  assertPath(path)\n\n  absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  value = normalizeString(path, !absolute)\n\n  if (!value.length && !absolute) {\n    value = '.'\n  }\n\n  if (value.length && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n// Resolve `.` and `..` elements in a path with directory names.\nfunction normalizeString(path, allowAboveRoot) {\n  var result = ''\n  var lastSegmentLength = 0\n  var lastSlash = -1\n  var dots = 0\n  var index = -1\n  var code\n  var lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            /* istanbul ignore else - No clue how to cover it. */\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n","'use strict'\n\n// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexports.cwd = cwd\n\nfunction cwd() {\n  return '/'\n}\n","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _get.apply(this, arguments);\n}\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","var own = {}.hasOwnProperty\n\n/**\n * Check if `node` has a set `name` property.\n *\n * @param {unknown} node\n * @param {string} name\n * @returns {boolean}\n */\nexport function hasProperty(node, name) {\n  /** @type {unknown} */\n  var value =\n    name &&\n    node &&\n    typeof node === 'object' &&\n    // @ts-ignore Looks like a node.\n    node.type === 'element' &&\n    // @ts-ignore Looks like an element.\n    node.properties &&\n    // @ts-ignore Looks like an element.\n    own.call(node.properties, name) &&\n    // @ts-ignore Looks like an element.\n    node.properties[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n","/**\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Parent['children'][number]} Node\n */\n\n/**\n * Rank of a heading: H1 -> 1, H2 -> 2, etc.\n *\n * @param {Node} node\n * @returns {number|null}\n */\nexport function headingRank(node) {\n  var name =\n    (node && node.type === 'element' && node.tagName.toLowerCase()) || ''\n  var code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */ ? code - 48 /* `0` */ : null\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n *\n * @typedef {string} TagName\n * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test\n */\n\n/**\n * @template {Element} T\n * @typedef {null|undefined|T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>} PredicateTest\n */\n\n/**\n * Check if an element passes a test\n *\n * @callback TestFunctionAnything\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if an element passes a certain node test\n *\n * @template {Element} X\n * @callback TestFunctionPredicate\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {element is X}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\n// Check if `node` is an `element` and whether it passes the given test.\nexport const isElement =\n  /**\n   * Check if a node is an element and passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test] When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number} [index] Position of `node` in `parent`\n     * @param {Parent} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * @param {Array.<TagName|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s tag\n * name for said string.\n *\n * @param {TagName} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Utility to return true if this is an element.\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nvar search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @param selector A simple CSS selector.\n *   Can contain a tag-name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param [defaultTagName='div'] Tag name to use if `selector` does not specify one.\n */\nexport const parseSelector =\n  /**\n   * @type {(\n   *  <Selector extends string, DefaultTagName extends string = 'div'>(selector?: Selector, defaultTagName?: DefaultTagName) => Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}\n   * )}\n   */\n  (\n    /**\n     * @param {string} [selector]\n     * @param {string} [defaultTagName='div']\n     * @returns {Element}\n     */\n    function (selector, defaultTagName = 'div') {\n      var value = selector || ''\n      /** @type {Properties} */\n      var props = {}\n      var start = 0\n      /** @type {string} */\n      var subvalue\n      /** @type {string} */\n      var previous\n      /** @type {RegExpMatchArray} */\n      var match\n\n      while (start < value.length) {\n        search.lastIndex = start\n        match = search.exec(value)\n        subvalue = value.slice(start, match ? match.index : value.length)\n\n        if (subvalue) {\n          if (!previous) {\n            defaultTagName = subvalue\n          } else if (previous === '#') {\n            props.id = subvalue\n          } else if (Array.isArray(props.className)) {\n            props.className.push(subvalue)\n          } else {\n            props.className = [subvalue]\n          }\n\n          start += subvalue.length\n        }\n\n        if (match) {\n          previous = match[0]\n          start++\n        }\n      }\n\n      return {\n        type: 'element',\n        tagName: defaultTagName,\n        properties: props,\n        children: []\n      }\n    }\n  )\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {Root['children'][number]} Child\n * @typedef {Child|Root} Node\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {Root|Element} HResult\n * @typedef {string|number} HStyleValue\n * @typedef {Record<string, HStyleValue>} HStyle\n * @typedef {string|number|boolean|null|undefined} HPrimitiveValue\n * @typedef {Array<string|number>} HArrayValue\n * @typedef {HPrimitiveValue|HArrayValue} HPropertyValue\n * @typedef {{[property: string]: HPropertyValue|HStyle}} HProperties\n *   Acceptable properties value.\n *\n * @typedef {string|number|null|undefined} HPrimitiveChild\n * @typedef {Array<Node|HPrimitiveChild>} HArrayChild\n * @typedef {Node|HPrimitiveChild|HArrayChild} HChild\n *   Acceptable child value\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null|undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string|null} [selector]\n       * @param {HProperties|HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties|HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle|HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string|number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Child>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * @param {HStyle} value\n * @returns {string}\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * @param {Array<string>} values\n * @returns {Record<string, string>}\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child Acceptable child value\n * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.\n *\n * @typedef {import('./jsx-classic').Element} h.JSX.Element\n * @typedef {import('./jsx-classic').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {string[]} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {number[]|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      indent = options.position.indent\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","import { Element, Comment, Literal, ElementContent, RootContent, Properties } from 'hast';\nimport { RehypeAttrsOptions } from './';\n\nexport const getURLParameters = (url: string): Record<string, string | number | boolean> =>\n(url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce(\n  (a: Record<string, string | number>, v: string) => (\n    (a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a\n  ),\n  {},\n);\n\nexport const prevChild = (data: Literal[] = [], index: number): Comment | undefined => {\n  let i = index;\n  while (i > -1) {\n    i--;\n    if (!data[i]) return\n    if ((data[i] && data[i].value && (data[i].value as string).replace(/(\\n|\\s)/g, '') !== '') || data[i].type !== 'text') {\n      if (!/^rehype:/.test(data[i].value as string) || (data[i].type as string) !== 'comment') return;\n      return data[i] as unknown as Comment;\n    }\n  }\n  return;\n}\n\nexport const nextChild = (data: RootContent[] | ElementContent[] = [], index: number, tagName?: string): ElementContent | undefined => {\n  let i = index;\n  while (i < data.length) {\n    i++;\n    if (tagName) {\n      const element = data[i] as Literal & Element;\n      if (element && element.value && (element.value as string).replace(/(\\n|\\s)/g, '') !== '' || data[i] && (data[i].type as string) === 'element') {\n        return element.tagName === tagName ? element : undefined\n      }\n    } else {\n      const element = data[i] as ElementContent & Literal;\n      if (!element || (element.type !== 'text' && (element.type as string) !== 'comment') || (element.type === 'text' && (element.value as string).replace(/(\\n|\\s)/g, '') !== '')) return;\n      if ((element.type as string) === 'comment') {\n        if (!/^rehype:/.test(element.value as string)) return;\n        const nextNode = nextChild(data, i, 'pre')\n        if (nextNode) return;\n        return element;\n      }\n    }\n  }\n  return\n}\n\n/**\n * 获取代码注视的位置\n * @param data 数据\n * @param index 当前数据所在的位置\n * @returns 返回 当前参数数据 Object，`{}`\n */\nexport const getCommentObject = ({ value = '' }: Comment): Properties => {\n  const param = getURLParameters(value.replace(/^rehype:/, ''));\n  Object.keys(param).forEach((keyName: string) => {\n    if (param[keyName] === 'true') {\n      param[keyName] = true;\n    }\n    if (param[keyName] === 'false') {\n      param[keyName] = false;\n    }\n    if (typeof param[keyName] === 'string' && !/^0/.test(param[keyName] as string) && !isNaN(+param[keyName])) {\n      param[keyName] = +param[keyName];\n    }\n  })\n  return param;\n}\n\nexport type DataConfig = {\n  'data-config': Properties\n}\n\nexport const propertiesHandle = (defaultAttrs?: Properties | null, attrs?: Properties, type?: RehypeAttrsOptions['properties']): Properties | DataConfig => {\n  if (type === 'string') {\n    return { ...defaultAttrs, 'data-config': JSON.stringify({ ...attrs, rehyp: true })}\n  } else if (type === 'attr') {\n    return { ...defaultAttrs, ...attrs}\n  }\n  return { ...defaultAttrs, 'data-config': { ...attrs, rehyp: true }}\n}","import { Plugin } from 'unified';\nimport { Root, Element, Comment, Properties, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils';\n\nexport type RehypeAttrsOptions = {\n  /**\n   * ## `data`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs&abc=2-->\n   * ```\n   * \n   * ⇣⇣⇣⇣⇣⇣\n   * \n   * ```html\n   * <p data-config=\"data-config='[object Object]'\">text</p>\n   * ```\n   * \n   * ## `string`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * \n   * ⇣⇣⇣⇣⇣⇣\n   * \n   * ```html\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\n   * ```\n   * \n   * ## attr\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * ⇣⇣⇣⇣⇣⇣\n   * ```html\n   * <p title=\"Rehype Attrs\">text</p>\n   * ```\n   */\n  properties: 'data' | 'string' | 'attr';\n}\n\nconst defaultOptions: RehypeAttrsOptions = {\n  properties: 'data',\n}\n\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options) => {\n  const opts = { ...defaultOptions, ...options }\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0] as Element;\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children as Literal[], index);\n          if (child) {\n            const attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, opts.properties) as Properties\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index)\n        if (child) {\n          const attr = getCommentObject(child as Comment)\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, opts.properties) as Properties\n          }\n        }\n      }\n    });\n  }\n}\n\n\nexport default rehypeAttrs\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast-util-is-element').Test} Test\n *\n * @typedef {'prepend'|'append'|'wrap'|'before'|'after'} Behavior\n *\n * @callback Build\n * @param {Element} node\n * @returns {ElementChild|ElementChild[]}\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior} [behavior='prepend']\n *   How to create links.\n * @property {Behavior} [behaviour]\n *   Please use `behavior` instead\n * @property {Properties} [properties]\n *   Extra properties to set on the link when injecting.\n *   Defaults to `{ariaHidden: true, tabIndex: -1}` when `'prepend'` or\n *   `'append'`.\n * @property {ElementChild|ElementChild[]|Build} [content={type: 'element', tagName: 'span', properties: {className: ['icon', 'icon-link']}, children: []}]\n *   hast nodes to insert in the link.\n * @property {ElementChild|ElementChild[]|Build} [group]\n *   hast node to wrap the heading and link with, if `behavior` is `'before'` or\n *   `'after'`.\n *   There is no default.\n * @property {Test} [test]\n *   Test to define which heading elements are linked.\n *   Any test that can be given to `hast-util-is-element` is supported.\n *   The default (no test) is to link all headings.\n *   Can be used to link only h1-h3, or for example all except h1.\n */\n\nimport extend from 'extend'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {visit, SKIP} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/**\n * Plugin to automatically add links to headings (h1-h6).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function rehypeAutolinkHeadings(options = {}) {\n  let props = options.properties\n  const behavior = options.behaviour || options.behavior || 'prepend'\n  const content = options.content || contentDefaults\n  const group = options.group\n  const is = convertElement(options.test)\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  let method\n\n  if (behavior === 'wrap') {\n    method = wrap\n  } else if (behavior === 'before' || behavior === 'after') {\n    method = around\n  } else {\n    if (!props) {\n      props = {ariaHidden: 'true', tabIndex: -1}\n    }\n\n    method = inject\n  }\n\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (\n        headingRank(node) &&\n        hasProperty(node, 'id') &&\n        is(node, index, parent)\n      ) {\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function inject(node) {\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, extend(true, {}, props), toChildren(content, node))\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function around(node, index, parent) {\n    // Uncommon.\n    /* c8 ignore next */\n    if (typeof index !== 'number' || !parent) return\n\n    const link = create(\n      node,\n      extend(true, {}, props),\n      toChildren(content, node)\n    )\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function wrap(node) {\n    node.children = [create(node, extend(true, {}, props), node.children)]\n    return [SKIP]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild[]}\n   */\n  function toChildren(value, node) {\n    const result = toNode(value, node)\n    return Array.isArray(result) ? result : [result]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild|ElementChild[]}\n   */\n  function toNode(value, node) {\n    if (typeof value === 'function') return value(node)\n    return extend(true, Array.isArray(value) ? [] : {}, value)\n  }\n\n  /**\n   * @param {Element} node\n   * @param {Properties} props\n   * @param {ElementChild[]} children\n   * @returns {Element}\n   */\n  function create(node, props, children) {\n    return {\n      type: 'element',\n      tagName: 'a',\n      properties: Object.assign({}, props, {\n        // Fix hast types and make them required.\n        /* c8 ignore next */\n        href: '#' + (node.properties || {}).id\n      }),\n      children\n    }\n  }\n}\n","import { Plugin } from 'unified';\nimport { Root, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\n\nexport type RehypeIgnoreOptions = {\n  /**\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\n   */\n  openDelimiter?: string;\n  /**\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\n   */\n  closeDelimiter?: string;\n}\n\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\n  return (tree) => {\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      if (node.type === 'element' || node.type === 'root') {\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\n        // if (start > -1 && end > -1) {\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\n        // }\n        let start = false;\n        node.children = node.children.filter((item) => {\n          if (item.type === 'comment' && item.value.trim() === openDelimiter) {\n            start = true;\n            return false\n          }\n          if (item.type === 'comment' && item.value.trim() === closeDelimiter) {\n            start = false;\n            return false\n          }\n          \n          return !start;\n        })\n      }\n    });\n  }\n}\n\nexport default rehypeIgnore;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * Options for unist util filter\n *\n * @typedef {Object} FilterOptions\n * @property {boolean} [cascade=true] Whether to drop parent nodes if they had children, but all their children were filtered out.\n */\n\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create a new tree consisting of copies of all nodes that pass test.\n * The tree is walked in preorder (NLR), visiting the node itself, then its head, etc.\n *\n * @param tree Tree to filter.\n * @param options Configuration (optional).\n * @param test is-compatible test (such as a type).\n * @returns Given `tree` or `null` if it didn’t pass `test`.\n */\nexport const filter =\n  /**\n   * @type {(\n   *  (<Tree extends Node, Check extends Test>(node: Tree, options: FilterOptions, test: Check) => import('./complex-types').Matches<Tree, Check>) &\n   *  (<Tree extends Node, Check extends Test>(node: Tree, test: Check) => import('./complex-types').Matches<Tree, Check>) &\n   *  (<Tree extends Node>(node: Tree, options?: FilterOptions) => Tree)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {FilterOptions} options\n     * @param {Test} test\n     * @returns {Node|null}\n     */\n    function (tree, options, test) {\n      const is = convert(test || options)\n      const cascade =\n        options.cascade === undefined || options.cascade === null\n          ? true\n          : options.cascade\n\n      return preorder(tree)\n\n      /**\n       * @param {Node} node\n       * @param {number|undefined} [index]\n       * @param {Parent|undefined} [parent]\n       * @returns {Node|null}\n       */\n      function preorder(node, index, parent) {\n        /** @type {Array.<Node>} */\n        const children = []\n        /** @type {number} */\n        let childIndex\n        /** @type {Node} */\n        let result\n        /** @type {string} */\n        let key\n\n        if (!is(node, index, parent)) return null\n\n        // @ts-expect-error: Looks like a parent.\n        if (node.children) {\n          childIndex = -1\n\n          // @ts-expect-error Looks like a parent.\n          while (++childIndex < node.children.length) {\n            // @ts-expect-error Looks like a parent.\n            result = preorder(node.children[childIndex], childIndex, node)\n\n            if (result) {\n              children.push(result)\n            }\n          }\n\n          // @ts-expect-error Looks like a parent.\n          if (cascade && node.children.length > 0 && children.length === 0)\n            return null\n        }\n\n        // Create a shallow clone, using the new children.\n        /** @type {typeof node} */\n        // @ts-expect-error all the fields will be copied over.\n        const next = {}\n\n        for (key in node) {\n          if (own.call(node, key)) {\n            // @ts-expect-error: Looks like a record.\n            next[key] = key === 'children' ? children : node[key]\n          }\n        }\n\n        return next\n      }\n    }\n  )\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef Options options\n *   Configuration.\n * @property {boolean} [showLineNumbers]\n *   Set `showLineNumbers` to `true` to always display line number\n * @property {boolean} [ignoreMissing]\n *   Set `ignoreMissing` to `true` to ignore unsupported languages and line highlighting when no language is specified\n */\n\nimport { visit } from 'unist-util-visit'\nimport { toString } from 'hast-util-to-string'\nimport { filter } from 'unist-util-filter'\nimport rangeParser from 'parse-numeric-range'\n\n/**\n * @param {Element} node\n * @return {string|null}\n */\nconst getLanguage = (node) => {\n  const className = node.properties.className\n  //@ts-ignore\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase()\n    }\n  }\n  return null\n}\n\n/**\n * Create a closure that determines if we have to highlight the given index\n *\n * @param {string} meta\n * @return { (index:number) => boolean }\n */\nconst calculateLinesToHighlight = (meta) => {\n  const RE = /{([\\d,-]+)}/\n  // Remove space between {} e.g. {1, 3}\n  const parsedMeta = meta\n    .split(',')\n    .map((str) => str.trim())\n    .join()\n  if (RE.test(parsedMeta)) {\n    const strlineNumbers = RE.exec(parsedMeta)[1]\n    const lineNumbers = rangeParser(strlineNumbers)\n    return (index) => lineNumbers.includes(index + 1)\n  } else {\n    return () => false\n  }\n}\n\n/**\n * Check if we want to start the line numbering from a given number or 1\n * showLineNumbers=5, will start the numbering from 5\n * @param {string} meta\n * @returns {number}\n */\nconst calculateStartingLine = (meta) => {\n  const RE = /showLineNumbers=(?<lines>\\d+)/i\n  // pick the line number after = using a named capturing group\n  if (RE.test(meta)) {\n    const {\n      groups: { lines },\n    } = RE.exec(meta)\n    return Number(lines)\n  }\n  return 1\n}\n\n/**\n * Create container AST for node lines\n *\n * @param {number} number\n * @return {Element[]}\n */\nconst createLineNodes = (number) => {\n  const a = new Array(number)\n  for (let i = 0; i < number; i++) {\n    a[i] = {\n      type: 'element',\n      tagName: 'span',\n      properties: { className: [] },\n      children: [],\n    }\n  }\n  return a\n}\n\n/**\n * Split multiline text nodes into individual nodes with positioning\n * Add a node start and end line position information for each text node\n *\n * @return { (ast:Element['children']) => Element['children'] }\n *\n */\nconst addNodePositionClosure = () => {\n  let startLineNum = 1\n  /**\n   * @param {Element['children']} ast\n   * @return {Element['children']}\n   */\n  const addNodePosition = (ast) => {\n    return ast.reduce((result, node) => {\n      if (node.type === 'text') {\n        const value = /** @type {string} */ (node.value)\n        const numLines = (value.match(/\\n/g) || '').length\n        if (numLines === 0) {\n          node.position = {\n            // column: 1 is needed to avoid error with @next/mdx\n            // https://github.com/timlrx/rehype-prism-plus/issues/44\n            start: { line: startLineNum, column: 1 },\n            end: { line: startLineNum, column: 1 },\n          }\n          result.push(node)\n        } else {\n          const lines = value.split('\\n')\n          for (const [i, line] of lines.entries()) {\n            result.push({\n              type: 'text',\n              value: i === lines.length - 1 ? line : line + '\\n',\n              position: {\n                start: { line: startLineNum + i, column: 1 },\n                end: { line: startLineNum + i, column: 1 },\n              },\n            })\n          }\n        }\n        startLineNum = startLineNum + numLines\n\n        return result\n      }\n\n      if (Object.prototype.hasOwnProperty.call(node, 'children')) {\n        const initialLineNum = startLineNum\n        // @ts-ignore\n        node.children = addNodePosition(node.children, startLineNum)\n        result.push(node)\n        node.position = {\n          start: { line: initialLineNum, column: 1 },\n          end: { line: startLineNum, column: 1 },\n        }\n        return result\n      }\n\n      result.push(node)\n      return result\n    }, [])\n  }\n  return addNodePosition\n}\n\n/**\n * Rehype prism plugin generator that highlights code blocks with refractor (prismjs)\n *\n * Pass in your own refractor object with the required languages registered:\n * https://github.com/wooorm/refractor#refractorregistersyntax\n *\n * @param {import('refractor/lib/core').Refractor} refractor\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypePrismGenerator = (refractor) => {\n  return (options = {}) => {\n    return (tree) => {\n      visit(tree, 'element', visitor)\n    }\n\n    /**\n     * @param {Element} node\n     * @param {number} index\n     * @param {Element} parent\n     */\n    function visitor(node, index, parent) {\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      let meta = node.data && node.data.meta ? /** @type {string} */ (node.data.meta) : ''\n      // Coerce className to array\n      if (node.properties.className) {\n        if (typeof node.properties.className === 'boolean') {\n          node.properties.className = []\n        } else if (!Array.isArray(node.properties.className)) {\n          node.properties.className = [node.properties.className]\n        }\n      } else {\n        node.properties.className = []\n      }\n      node.properties.className.push('code-highlight')\n      const lang = getLanguage(node)\n\n      /** @type {Element} */\n      let refractorRoot\n\n      // Syntax highlight\n      if (lang) {\n        try {\n          let rootLang\n          if (lang?.includes('diff-')){\n            rootLang=lang.split('-')[1]\n          } else{\n            rootLang=lang\n          }\n          // @ts-ignore\n          refractorRoot = refractor.highlight(toString(node), rootLang)\n          // @ts-ignore className is already an array\n          parent.properties.className = (parent.properties.className || []).concat(\n            'language-' + rootLang\n          )\n        } catch (err) {\n          if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n            refractorRoot = node\n          } else {\n            throw err\n          }\n        }\n      } else {\n        refractorRoot = node\n      }\n\n      refractorRoot.children = addNodePositionClosure()(refractorRoot.children)\n\n      // Add position info to root\n      if (refractorRoot.children.length > 0) {\n        refractorRoot.position = {\n          start: { line: refractorRoot.children[0].position.start.line, column: 0 },\n          end: {\n            line: refractorRoot.children[refractorRoot.children.length - 1].position.end.line,\n            column: 0,\n          },\n        }\n      } else {\n        refractorRoot.position = {\n          start: { line: 0, column: 0 },\n          end: { line: 0, column: 0 },\n        }\n      }\n\n      const shouldHighlightLine = calculateLinesToHighlight(meta)\n      const startingLineNumber = calculateStartingLine(meta)\n      const codeLineArray = createLineNodes(refractorRoot.position.end.line)\n\n      const falseShowLineNumbersStr = [\n        'showlinenumbers=false',\n        'showlinenumbers=\"false\"',\n        'showlinenumbers={false}',\n      ]\n      for (const [i, line] of codeLineArray.entries()) {\n        // Default class name for each line\n        line.properties.className = ['code-line']\n\n        // Syntax highlight\n        const treeExtract = filter(\n          refractorRoot,\n          (node) => node.position.start.line <= i + 1 && node.position.end.line >= i + 1\n        )\n        line.children = treeExtract.children\n\n        // Line number\n        if (\n          (meta.toLowerCase().includes('showLineNumbers'.toLowerCase()) ||\n            options.showLineNumbers) &&\n          !falseShowLineNumbersStr.some((str) => meta.toLowerCase().includes(str))\n        ) {\n          line.properties.line = [(i + startingLineNumber).toString()]\n          line.properties.className.push('line-number')\n        }\n\n        // Line highlight\n        if (shouldHighlightLine(i)) {\n          line.properties.className.push('highlight-line')\n        }\n\n        // Diff classes\n        if ((lang === 'diff' || lang?.includes('diff-')) && toString(line).substring(0, 1) === '-') {\n          line.properties.className.push('deleted')\n        } else if ((lang === 'diff' || lang?.includes('diff-')) && toString(line).substring(0, 1) === '+') {\n          line.properties.className.push('inserted')\n        }\n      }\n\n      // Remove possible trailing line when splitting by \\n which results in empty array\n      if (\n        codeLineArray.length > 0 &&\n        toString(codeLineArray[codeLineArray.length - 1]).trim() === ''\n      ) {\n        codeLineArray.pop()\n      }\n\n      node.children = codeLineArray\n    }\n  }\n}\n\nexport default rehypePrismGenerator\n","import { refractor as refractorAll } from 'refractor/lib/all.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * This supports all the languages and should be used on the server side.\n *\n * Consider using rehypePrismCommon or rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismAll = rehypePrismGenerator(refractorAll)\n\nexport default rehypePrismAll\n","import { refractor as refractorCommon } from 'refractor/lib/common.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * Supported languages: https://github.com/wooorm/refractor#data\n *\n * Consider using rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismCommon = rehypePrismGenerator(refractorCommon)\n\nexport default rehypePrismCommon\n","/**\n * @typedef {import('./core.js').HChild} Child\n * @typedef {import('./core.js').HProperties} Properties\n *\n * @typedef {import('./jsx-classic').Element} s.JSX.Element\n * @typedef {import('./jsx-classic').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {Parent['children'][number]} Child\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {Child|Root} Node\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentType} P5Doctype\n * @typedef {import('parse5').CommentNode} P5Comment\n * @typedef {import('parse5').TextNode} P5Text\n * @typedef {import('parse5').Element} P5Element\n * @typedef {import('parse5').ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Location} P5Location\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {import('parse5').Node} P5Node\n *\n * @typedef {'html'|'svg'} Space\n *\n * @callback Handler\n * @param {Context} ctx\n * @param {P5Node} node\n * @param {Array.<Child>} [children]\n * @returns {Node}\n *\n * @typedef Options\n * @property {Space} [space='html'] Whether the root of the tree is in the `'html'` or `'svg'` space. If an element in with the SVG namespace is found in `ast`, `fromParse5` automatically switches to the SVG space when entering the element, and switches back when leaving\n * @property {VFile} [file] `VFile`, used to add positional information to nodes. If given, the file should have the original HTML source as its contents\n * @property {boolean} [verbose=false] Whether to add extra positional information about starting tags, closing tags, and attributes to elements. Note: not used without `file`\n *\n * @typedef Context\n * @property {Schema} schema\n * @property {VFile|undefined} file\n * @property {boolean|undefined} verbose\n * @property {boolean} location\n */\n\nimport {h, s} from 'hastscript'\nimport {html, svg, find} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n\n// Handlers.\nconst map = {\n  '#document': root,\n  '#document-fragment': root,\n  '#text': text,\n  '#comment': comment,\n  '#documentType': doctype\n}\n\n/**\n * Transform Parse5’s AST to a hast tree.\n *\n * @param {P5Node} ast\n * @param {Options|VFile} [options]\n */\nexport function fromParse5(ast, options = {}) {\n  /** @type {Options} */\n  let settings\n  /** @type {VFile|undefined} */\n  let file\n\n  if (isFile(options)) {\n    file = options\n    settings = {}\n  } else {\n    file = options.file\n    settings = options\n  }\n\n  return transform(\n    {\n      schema: settings.space === 'svg' ? svg : html,\n      file,\n      verbose: settings.verbose,\n      location: false\n    },\n    ast\n  )\n}\n\n/**\n * Transform children.\n *\n * @param {Context} ctx\n * @param {P5Node} ast\n * @returns {Node}\n */\nfunction transform(ctx, ast) {\n  const schema = ctx.schema\n  /** @type {Handler} */\n  // @ts-expect-error: index is fine.\n  const fn = own.call(map, ast.nodeName) ? map[ast.nodeName] : element\n  /** @type {Array.<Child>|undefined} */\n  let children\n\n  // Element.\n  if ('tagName' in ast) {\n    ctx.schema = ast.namespaceURI === webNamespaces.svg ? svg : html\n  }\n\n  if ('childNodes' in ast) {\n    children = nodes(ctx, ast.childNodes)\n  }\n\n  const result = fn(ctx, ast, children)\n\n  if ('sourceCodeLocation' in ast && ast.sourceCodeLocation && ctx.file) {\n    // @ts-expect-error It’s fine.\n    const position = createLocation(ctx, result, ast.sourceCodeLocation)\n\n    if (position) {\n      ctx.location = true\n      result.position = position\n    }\n  }\n\n  ctx.schema = schema\n\n  return result\n}\n\n/**\n * Transform children.\n *\n * @param {Context} ctx\n * @param {Array.<P5Node>} children\n * @returns {Array.<Child>}\n */\nfunction nodes(ctx, children) {\n  let index = -1\n  /** @type {Array.<Child>} */\n  const result = []\n\n  while (++index < children.length) {\n    // @ts-expect-error Assume no roots in children.\n    result[index] = transform(ctx, children[index])\n  }\n\n  return result\n}\n\n/**\n * Transform a document.\n * Stores `ast.quirksMode` in `node.data.quirksMode`.\n *\n * @type {Handler}\n * @param {P5Document} ast\n * @param {Array.<Child>} children\n * @returns {Root}\n */\nfunction root(ctx, ast, children) {\n  /** @type {Root} */\n  const result = {\n    type: 'root',\n    children,\n    data: {quirksMode: ast.mode === 'quirks' || ast.mode === 'limited-quirks'}\n  }\n\n  if (ctx.file && ctx.location) {\n    const doc = String(ctx.file)\n    const loc = location(doc)\n    result.position = {\n      start: loc.toPoint(0),\n      end: loc.toPoint(doc.length)\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform a doctype.\n *\n * @type {Handler}\n * @returns {Doctype}\n */\nfunction doctype() {\n  // @ts-expect-error Types are out of date.\n  return {type: 'doctype'}\n}\n\n/**\n * Transform a text.\n *\n * @type {Handler}\n * @param {P5Text} ast\n * @returns {Text}\n */\nfunction text(_, ast) {\n  return {type: 'text', value: ast.value}\n}\n\n/**\n * Transform a comment.\n *\n * @type {Handler}\n * @param {P5Comment} ast\n * @returns {Comment}\n */\nfunction comment(_, ast) {\n  return {type: 'comment', value: ast.data}\n}\n\n/**\n * Transform an element.\n *\n * @type {Handler}\n * @param {P5Element} ast\n * @param {Array.<ElementChild>} children\n * @returns {Element}\n */\nfunction element(ctx, ast, children) {\n  const fn = ctx.schema.space === 'svg' ? s : h\n  let index = -1\n  /** @type {Object.<string, string>} */\n  const props = {}\n\n  while (++index < ast.attrs.length) {\n    const attribute = ast.attrs[index]\n    props[(attribute.prefix ? attribute.prefix + ':' : '') + attribute.name] =\n      attribute.value\n  }\n\n  const result = fn(ast.tagName, props, children)\n\n  if (result.tagName === 'template' && 'content' in ast) {\n    const pos = ast.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    /** @type {Root} */\n    // @ts-expect-error Types are wrong.\n    const content = transform(ctx, ast.content)\n\n    if (startTag && endTag && ctx.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  return result\n}\n\n/**\n * Create clean positional information.\n *\n * @param {Context} ctx\n * @param {Node} node\n * @param {P5ElementLocation} location\n * @returns {Position|null}\n */\nfunction createLocation(ctx, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (ctx.verbose) {\n      /** @type {Object.<string, Position|null>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      for (key in location.attrs) {\n        if (own.call(location.attrs, key)) {\n          props[find(ctx.schema, key).property] = position(location.attrs[key])\n        }\n      }\n\n      node.data = {\n        position: {\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {P5Location} loc\n * @returns {Position|null}\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n  // @ts-expect-error `null` is fine.\n  return start || end ? {start, end} : null\n}\n\n/**\n * @param {Point} point\n * @returns {Point|null}\n */\nfunction point(point) {\n  return point.line && point.column ? point : null\n}\n\n/**\n * @param {VFile|Options} value\n * @returns {value is VFile}\n */\nfunction isFile(value) {\n  return 'messages' in value\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {Pick<Point, 'line'|'column'>} PositionalPoint\n * @typedef {Required<Point>} FullPoint\n * @typedef {NonNullable<Point['offset']>} Offset\n */\n\n/**\n * Get transform functions for the given `document`.\n *\n * @param {string|Uint8Array|VFile} file\n */\nexport function location(file) {\n  var value = String(file)\n  /** @type {Array.<number>} */\n  var indices = []\n  var search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /**\n   * Get the line and column-based `point` for `offset` in the bound indices.\n   * Returns a point with `undefined` values when given invalid or out of bounds\n   * input.\n   *\n   * @param {Offset} offset\n   * @returns {FullPoint}\n   */\n  function toPoint(offset) {\n    var index = -1\n\n    if (offset > -1 && offset < indices[indices.length - 1]) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (indices[index - 1] || 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /**\n   * Get the `offset` for a line and column-based `point` in the bound indices.\n   * Returns `-1` when given invalid or out of bounds input.\n   *\n   * @param {PositionalPoint} point\n   * @returns {Offset}\n   */\n  function toOffset(point) {\n    var line = point && point.line\n    var column = point && point.column\n    /** @type {number} */\n    var offset\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      offset = (indices[line - 2] || 0) + column - 1 || 0\n    }\n\n    return offset > -1 && offset < indices[indices.length - 1] ? offset : -1\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('unist-util-is').AssertPredicate<Element>} AssertElement\n * @typedef {import('unist-util-is').AssertPredicate<Text>} AssertText\n * @typedef {import('unist-util-is').AssertPredicate<Root>} AssertRoot\n *\n * @callback CreateElementLike\n * @param {string} name\n * @param {any} attributes\n * @param {Array.<string|any>} [children]\n * @returns {any}\n *\n * @typedef Context\n * @property {html|svg} schema\n * @property {string|null} prefix\n * @property {number} key\n * @property {boolean} react\n * @property {boolean} vue\n * @property {boolean} vdom\n * @property {boolean} hyperscript\n *\n * @typedef Options\n * @property {string|null} [prefix]\n * @property {'html'|'svg'} [space]\n */\n\nimport {html, svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {webNamespaces} from 'web-namespaces'\nimport {convert} from 'unist-util-is'\n\nconst ns = /** @type {Record<string, string>} */ (webNamespaces)\nconst toReact = /** @type {Record<string, string>} */ (hastToReact)\n\nconst own = {}.hasOwnProperty\n\n/** @type {AssertRoot} */\n// @ts-expect-error it’s correct.\nconst root = convert('root')\n/** @type {AssertElement} */\n// @ts-expect-error it’s correct.\nconst element = convert('element')\n/** @type {AssertText} */\n// @ts-expect-error it’s correct.\nconst text = convert('text')\n\n/**\n * @template {CreateElementLike} H\n * @param {H} h\n * @param {Element|Root} tree\n * @param {string|boolean|Options} [options]\n * @returns {ReturnType<H>}\n */\nexport function toH(h, tree, options) {\n  if (typeof h !== 'function') {\n    throw new TypeError('h is not a function')\n  }\n\n  const r = react(h)\n  const v = vue(h)\n  const vd = vdom(h)\n  /** @type {string|boolean|null|undefined} */\n  let prefix\n  /** @type {Element} */\n  let node\n\n  if (typeof options === 'string' || typeof options === 'boolean') {\n    prefix = options\n    options = {}\n  } else {\n    if (!options) options = {}\n    prefix = options.prefix\n  }\n\n  if (root(tree)) {\n    // @ts-expect-error Allow `doctypes` in there, we’ll filter them out later.\n    node =\n      tree.children.length === 1 && element(tree.children[0])\n        ? tree.children[0]\n        : {\n            type: 'element',\n            tagName: 'div',\n            properties: {},\n            children: tree.children\n          }\n  } else if (element(tree)) {\n    node = tree\n  } else {\n    throw new Error(\n      // @ts-expect-error runtime.\n      'Expected root or element, not `' + ((tree && tree.type) || tree) + '`'\n    )\n  }\n\n  return transform(h, node, {\n    schema: options.space === 'svg' ? svg : html,\n    prefix:\n      prefix === undefined || prefix === null\n        ? r || v || vd\n          ? 'h-'\n          : null\n        : typeof prefix === 'string'\n        ? prefix\n        : prefix\n        ? 'h-'\n        : null,\n    key: 0,\n    react: r,\n    vue: v,\n    vdom: vd,\n    hyperscript: hyperscript(h)\n  })\n}\n\n/**\n * Transform a hast node through a hyperscript interface to *anything*!\n *\n * @template {CreateElementLike} H\n * @param {H} h\n * @param {Element} node\n * @param {Context} ctx\n */\nfunction transform(h, node, ctx) {\n  const parentSchema = ctx.schema\n  let schema = parentSchema\n  let name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const attributes = {}\n  /** @type {Array.<ReturnType<H>|string>} */\n  const nodes = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (parentSchema.space === 'html' && name.toLowerCase() === 'svg') {\n    schema = svg\n    ctx.schema = schema\n  }\n\n  for (key in node.properties) {\n    if (node.properties && own.call(node.properties, key)) {\n      addAttribute(attributes, key, node.properties[key], ctx, name)\n    }\n  }\n\n  if (ctx.vdom) {\n    if (schema.space === 'html') {\n      name = name.toUpperCase()\n    } else if (schema.space) {\n      attributes.namespace = ns[schema.space]\n    }\n  }\n\n  if (ctx.prefix) {\n    ctx.key++\n    attributes.key = ctx.prefix + ctx.key\n  }\n\n  if (node.children) {\n    while (++index < node.children.length) {\n      const value = node.children[index]\n\n      if (element(value)) {\n        nodes.push(transform(h, value, ctx))\n      } else if (text(value)) {\n        nodes.push(value.value)\n      }\n    }\n  }\n\n  // Restore parent schema.\n  ctx.schema = parentSchema\n\n  // Ensure no React warnings are triggered for void elements having children\n  // passed in.\n  return nodes.length > 0\n    ? h.call(node, name, attributes, nodes)\n    : h.call(node, name, attributes)\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n * @param {string} name\n */\n// eslint-disable-next-line complexity, max-params\nfunction addAttribute(props, prop, value, ctx, name) {\n  const info = find(ctx.schema, prop)\n  /** @type {string|undefined} */\n  let subprop\n\n  // Ignore nullish and `NaN` values.\n  // Ignore `false` and falsey known booleans for hyperlike DSLs.\n  if (\n    value === undefined ||\n    value === null ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (value === false && (ctx.vue || ctx.vdom || ctx.hyperscript)) ||\n    (!value && info.boolean && (ctx.vue || ctx.vdom || ctx.hyperscript))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // Treat `true` and truthy known booleans.\n  if (info.boolean && ctx.hyperscript) {\n    value = ''\n  }\n\n  // VDOM, Vue, and React accept `style` as object.\n  if (\n    info.property === 'style' &&\n    typeof value === 'string' &&\n    (ctx.react || ctx.vue || ctx.vdom)\n  ) {\n    value = parseStyle(value, name)\n  }\n\n  if (ctx.vue) {\n    if (info.property !== 'style') subprop = 'attrs'\n  } else if (!info.mustUseProperty) {\n    if (ctx.vdom) {\n      if (info.property !== 'style') subprop = 'attributes'\n    } else if (ctx.hyperscript) {\n      subprop = 'attrs'\n    }\n  }\n\n  if (subprop) {\n    props[subprop] = Object.assign(props[subprop] || {}, {\n      [info.attribute]: value\n    })\n  } else if (info.space && ctx.react) {\n    props[toReact[info.property] || info.property] = value\n  } else {\n    props[info.attribute] = value\n  }\n}\n\n/**\n * Check if `h` is `react.createElement`.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction react(h) {\n  /** @type {unknown} */\n  const node = h('div', {})\n  return Boolean(\n    node &&\n      // @ts-expect-error Looks like a React node.\n      ('_owner' in node || '_store' in node) &&\n      // @ts-expect-error Looks like a React node.\n      (node.key === undefined || node.key === null)\n  )\n}\n\n/**\n * Check if `h` is `hyperscript`.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction hyperscript(h) {\n  return 'context' in h && 'cleanup' in h\n}\n\n/**\n * Check if `h` is `virtual-dom/h`.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction vdom(h) {\n  /** @type {unknown} */\n  const node = h('div', {})\n  // @ts-expect-error Looks like a vnode.\n  return node.type === 'VirtualNode'\n}\n\n/**\n * Check if `h` is Vue.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction vue(h) {\n  /** @type {unknown} */\n  const node = h('div', {})\n  // @ts-expect-error Looks like a Vue node.\n  return Boolean(node && node.context && node.context._isVue)\n}\n\n/**\n * @param {string} value\n * @param {string} tagName\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value, tagName) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, (name, value) => {\n      if (name.slice(0, 4) === '-ms-') name = 'ms-' + name.slice(4)\n\n      result[\n        name.replace(\n          /-([a-z])/g,\n          /**\n           * @param {string} _\n           * @param {string} $1\n           * @returns {string}\n           */ (_, $1) => $1.toUpperCase()\n        )\n      ] = value\n    })\n  } catch (error) {\n    error.message =\n      tagName + '[style]' + error.message.slice('undefined'.length)\n    throw error\n  }\n\n  return result\n}\n","/**\n * @typedef {import('parse5').Node} P5Node\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentFragment} P5Fragment\n * @typedef {import('parse5').DocumentType} P5Doctype\n * @typedef {import('parse5').CommentNode} P5Comment\n * @typedef {import('parse5').TextNode} P5Text\n * @typedef {import('parse5').Element} P5Element\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {import('parse5').ParentNode} P5Parent\n * @typedef {Exclude<P5Node, P5Document|P5Fragment>} P5Child\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('property-information').Info} Info\n * @typedef {'html'|'svg'} Space\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {Parent['children'][number]} Child\n * @typedef {Child|Root} Node\n *\n * @callback Handle\n * @param {Node} node\n * @param {Schema} schema\n * @returns {P5Node}\n */\n\nimport {html, svg, find} from 'property-information'\nimport {toH} from 'hast-to-hyperscript'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nvar own = {}.hasOwnProperty\n\nvar one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a tree from hast to Parse5’s AST.\n *\n * @param {Node} tree\n * @param {Space} [space='html']\n * @returns {P5Node}\n */\nexport function toParse5(tree, space) {\n  // @ts-ignore Types are wrong.\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @type {Handle}\n * @param {Root} node\n * @returns {P5Document}\n */\nfunction root(node, schema) {\n  /** @type {P5Document} */\n  var p5 = {\n    nodeName: '#document',\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  // @ts-ignore Assume correct children.\n  p5.childNodes = all(node.children, p5, schema)\n  return patch(node, p5)\n}\n\n/**\n * @type {Handle}\n * @param {Root} node\n * @returns {P5Fragment}\n */\nfunction fragment(node, schema) {\n  /** @type {P5Fragment} */\n  var p5 = {nodeName: '#document-fragment', childNodes: []}\n  // @ts-ignore Assume correct children.\n  p5.childNodes = all(node.children, p5, schema)\n  return patch(node, p5)\n}\n\n/**\n * @type {Handle}\n * @param {Doctype} node\n * @returns {P5Doctype}\n */\nfunction doctype(node) {\n  return patch(node, {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: undefined\n  })\n}\n\n/**\n * @type {Handle}\n * @param {Text} node\n * @returns {P5Text}\n */\nfunction text(node) {\n  return patch(node, {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: undefined\n  })\n}\n\n/**\n * @type {Handle}\n * @param {Comment} node\n * @returns {P5Comment}\n */\nfunction comment(node) {\n  return patch(node, {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: undefined\n  })\n}\n\n/**\n * @type {Handle}\n * @param {Element} node\n * @returns {P5Element}\n */\nfunction element(node, schema) {\n  /** @type {Space} */\n  // @ts-ignore Assume space.\n  var space = schema.space\n  return toH(h, Object.assign({}, node, {children: []}), {space})\n\n  /**\n   * @param {string} name\n   * @param {Object.<string, string|boolean|number>} attrs\n   */\n  function h(name, attrs) {\n    /** @type {Array.<P5Attribute>} */\n    var values = []\n    /** @type {Info} */\n    var info\n    /** @type {P5Attribute} */\n    var value\n    /** @type {string} */\n    var key\n    /** @type {number} */\n    var index\n    /** @type {P5Element} */\n    var p5\n\n    for (key in attrs) {\n      if (!own.call(attrs, key) || attrs[key] === false) {\n        continue\n      }\n\n      info = find(schema, key)\n\n      if (info.boolean && !attrs[key]) {\n        continue\n      }\n\n      value = {name: key, value: attrs[key] === true ? '' : String(attrs[key])}\n\n      if (info.space && info.space !== 'html' && info.space !== 'svg') {\n        index = key.indexOf(':')\n\n        if (index < 0) {\n          value.prefix = ''\n        } else {\n          value.name = key.slice(index + 1)\n          value.prefix = key.slice(0, index)\n        }\n\n        value.namespace = webNamespaces[info.space]\n      }\n\n      values.push(value)\n    }\n\n    if (schema.space === 'html' && node.tagName === 'svg') schema = svg\n\n    p5 = patch(node, {\n      nodeName: name,\n      tagName: name,\n      attrs: values,\n      namespaceURI: webNamespaces[schema.space],\n      childNodes: [],\n      parentNode: undefined\n    })\n\n    // @ts-ignore Assume correct children.\n    p5.childNodes = all(node.children, p5, schema)\n\n    // @ts-ignore Types are wrong.\n    if (name === 'template') p5.content = fragment(node.content, schema)\n\n    return p5\n  }\n}\n\n/**\n * @param {Array.<Child>} children\n * @param {P5Parent} p5\n * @param {Schema} schema\n * @returns {Array.<P5Child>}\n */\nfunction all(children, p5, schema) {\n  var index = -1\n  /** @type {Array.<P5Child>} */\n  var result = []\n  /** @type {P5Child} */\n  var child\n\n  if (children) {\n    while (++index < children.length) {\n      // @ts-ignore Assume child.\n      child = one(children[index], schema)\n\n      // @ts-ignore types are wrong.\n      child.parentNode = p5\n\n      result.push(child)\n    }\n  }\n\n  return result\n}\n\n/**\n * Patch specific properties.\n *\n * @template {P5Node} T\n * @param {Node} node\n * @param {T} p5\n * @returns {T}\n */\nfunction patch(node, p5) {\n  var position = node.position\n\n  if (position && position.start && position.end) {\n    // @ts-ignore Types are wrong.\n    p5.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n\n  return p5\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentFragment} P5Fragment\n * @typedef {Omit<import('parse5').Element, 'parentNode'>} P5Element\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {Omit<import('parse5').Location, 'startOffset' | 'endOffset'> & {startOffset: number|undefined, endOffset: number|undefined}} P5Location\n * @typedef {import('parse5').ParserOptions} P5ParserOptions\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {import('../complex-types').Raw} Raw\n *\n * @typedef {Omit<Comment, 'value'> & {value: {stitch: Node}}} Stitch\n *\n * @typedef Options\n * @property {Array<string>} [passThrough]\n *   List of custom hast node types to pass through (keep) in hast.\n *   If the passed through nodes have children, those children are expected to\n *   be hast and will be handled.\n *\n * @typedef HiddenTokenizer\n * @property {Array<HiddenLocationTracker>} __mixins\n *   Way too simple, but works for us.\n * @property {HiddenPreprocessor} preprocessor\n * @property {(value: string) => void} write\n * @property {() => number} _consume\n * @property {Array<HiddenToken>} tokenQueue\n * @property {string} state\n * @property {string} returnState\n * @property {number} charRefCode\n * @property {Array<number>} tempBuff\n * @property {Function} _flushCodePointsConsumedAsCharacterReference\n * @property {string} lastStartTagName\n * @property {number} consumedAfterSnapshot\n * @property {boolean} active\n * @property {HiddenToken|undefined} currentCharacterToken\n * @property {HiddenToken|undefined} currentToken\n * @property {unknown} currentAttr\n * @property {Function} NAMED_CHARACTER_REFERENCE_STATE\n * @property {Function} NUMERIC_CHARACTER_REFERENCE_END_STATE\n *\n * @typedef {Record<string, unknown> & {location: P5Location}} HiddenToken\n *\n * @typedef HiddenPreprocessor\n * @property {string|undefined} html\n * @property {number} pos\n * @property {number} lastGapPos\n * @property {number} lastCharPos\n * @property {Array<number>} gapStack\n * @property {boolean} skipNextNewLine\n * @property {boolean} lastChunkWritten\n * @property {boolean} endOfChunkHit\n *\n * @typedef HiddenLocationTracker\n * @property {P5Location|undefined} currentAttrLocation\n * @property {P5Location} ctLoc\n * @property {HiddenPosTracker} posTracker\n *\n * @typedef HiddenPosTracker\n * @property {boolean} isEol\n * @property {number} lineStartPos\n * @property {number} droppedBufferSize\n * @property {number} offset\n * @property {number} col\n * @property {number} line\n */\n\n// @ts-expect-error: untyped.\nimport Parser from 'parse5/lib/parser/index.js'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst inTemplateMode = 'IN_TEMPLATE_MODE'\nconst dataState = 'DATA_STATE'\nconst characterToken = 'CHARACTER_TOKEN'\nconst startTagToken = 'START_TAG_TOKEN'\nconst endTagToken = 'END_TAG_TOKEN'\nconst commentToken = 'COMMENT_TOKEN'\nconst doctypeToken = 'DOCTYPE_TOKEN'\n\n/** @type {P5ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Given a hast tree and an optional vfile (for positional info), return a new\n * parsed-again hast tree.\n *\n * @param tree\n *   Original hast tree.\n * @param file\n *   Virtual file for positional info, optional.\n * @param options\n *   Configuration.\n */\nexport const raw =\n  /**\n   * @type {(\n   *   ((tree: Node, file: VFile|undefined, options?: Options) => Node) &\n   *   ((tree: Node, options?: Options) => Node)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {VFile} [file]\n     * @param {Options} [options]\n     */\n    function (tree, file, options) {\n      let index = -1\n      const parser = new Parser(parseOptions)\n      const one = zwitch('type', {\n        // @ts-expect-error: hush.\n        handlers: {root, element, text, comment, doctype, raw: handleRaw},\n        // @ts-expect-error: hush.\n        unknown\n      })\n      /** @type {boolean|undefined} */\n      let stitches\n      /** @type {HiddenTokenizer|undefined} */\n      let tokenizer\n      /** @type {HiddenPreprocessor|undefined} */\n      let preprocessor\n      /** @type {HiddenPosTracker|undefined} */\n      let posTracker\n      /** @type {HiddenLocationTracker|undefined} */\n      let locationTracker\n\n      if (isOptions(file)) {\n        options = file\n        file = undefined\n      }\n\n      if (options && options.passThrough) {\n        while (++index < options.passThrough.length) {\n          // @ts-expect-error: hush.\n          one.handlers[options.passThrough[index]] = stitch\n        }\n      }\n\n      const result = fromParse5(\n        documentMode(tree) ? document() : fragment(),\n        file\n      )\n\n      if (stitches) {\n        visit(result, 'comment', (node, index, parent) => {\n          const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n          if (stitch.value.stitch && parent !== null && index !== null) {\n            // @ts-expect-error: assume the stitch is allowed.\n            parent.children[index] = stitch.value.stitch\n            return index\n          }\n        })\n      }\n\n      // Unpack if possible and when not given a `root`.\n      if (\n        tree.type !== 'root' &&\n        result.type === 'root' &&\n        result.children.length === 1\n      ) {\n        return result.children[0]\n      }\n\n      return result\n\n      /**\n       * @returns {P5Fragment}\n       */\n      function fragment() {\n        /** @type {P5Element} */\n        const context = {\n          nodeName: 'template',\n          tagName: 'template',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Element} */\n        const mock = {\n          nodeName: 'documentmock',\n          tagName: 'documentmock',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Fragment} */\n        const doc = {nodeName: '#document-fragment', childNodes: []}\n\n        parser._bootstrap(mock, context)\n        parser._pushTmplInsertionMode(inTemplateMode)\n        parser._initTokenizerForFragmentParsing()\n        parser._insertFakeRootElement()\n        parser._resetInsertionMode()\n        parser._findFormInFragmentContext()\n\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        parser._adoptNodes(mock.childNodes[0], doc)\n\n        return doc\n      }\n\n      /**\n       * @returns {P5Document}\n       */\n      function document() {\n        /** @type {P5Document} */\n        const doc = parser.treeAdapter.createDocument()\n\n        parser._bootstrap(doc, undefined)\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        return doc\n      }\n\n      /**\n       * @param {Array<Content>} nodes\n       * @returns {void}\n       */\n      function all(nodes) {\n        let index = -1\n\n        /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n        if (nodes) {\n          while (++index < nodes.length) {\n            one(nodes[index])\n          }\n        }\n      }\n\n      /**\n       * @param {Root} node\n       * @returns {void}\n       */\n      function root(node) {\n        all(node.children)\n      }\n\n      /**\n       * @param {Element} node\n       * @returns {void}\n       */\n      function element(node) {\n        resetTokenizer()\n        parser._processToken(startTag(node), webNamespaces.html)\n\n        all(node.children)\n\n        if (!htmlVoidElements.includes(node.tagName)) {\n          resetTokenizer()\n          parser._processToken(endTag(node))\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @returns {void}\n       */\n      function text(node) {\n        resetTokenizer()\n        parser._processToken({\n          type: characterToken,\n          chars: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Doctype} node\n       * @returns {void}\n       */\n      function doctype(node) {\n        resetTokenizer()\n        parser._processToken({\n          type: doctypeToken,\n          name: 'html',\n          forceQuirks: false,\n          publicId: '',\n          systemId: '',\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Comment|Stitch} node\n       * @returns {void}\n       */\n      function comment(node) {\n        resetTokenizer()\n        parser._processToken({\n          type: commentToken,\n          data: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Raw} node\n       * @returns {void}\n       */\n      function handleRaw(node) {\n        const start = pointStart(node)\n        const line = start.line || 1\n        const column = start.column || 1\n        const offset = start.offset || 0\n\n        /* c8 ignore next 4 */\n        if (!preprocessor) throw new Error('Expected `preprocessor`')\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n        if (!locationTracker) throw new Error('Expected `locationTracker`')\n\n        // Reset preprocessor:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/preprocessor.js#L17>.\n        preprocessor.html = undefined\n        preprocessor.pos = -1\n        preprocessor.lastGapPos = -1\n        preprocessor.lastCharPos = -1\n        preprocessor.gapStack = []\n        preprocessor.skipNextNewLine = false\n        preprocessor.lastChunkWritten = false\n        preprocessor.endOfChunkHit = false\n\n        // Reset preprocessor mixin:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/position-tracking/preprocessor-mixin.js>.\n        posTracker.isEol = false\n        posTracker.lineStartPos = -column + 1 // Looks weird, but ensures we get correct positional info.\n        posTracker.droppedBufferSize = offset\n        posTracker.offset = 0\n        posTracker.col = 1\n        posTracker.line = line\n\n        // Reset location tracker:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js>.\n        locationTracker.currentAttrLocation = undefined\n        locationTracker.ctLoc = createParse5Location(node)\n\n        // See the code for `parse` and `parseFragment`:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/parser/index.js#L371>.\n        tokenizer.write(node.value)\n        parser._runParsingLoop(null)\n\n        // Character references hang, so if we ended there, we need to flush\n        // those too.\n        // We reset the preprocessor as if the document ends here.\n        // Then one single call to the relevant state does the trick, parse5\n        // consumes the whole token.\n        if (\n          tokenizer.state === 'NAMED_CHARACTER_REFERENCE_STATE' ||\n          tokenizer.state === 'NUMERIC_CHARACTER_REFERENCE_END_STATE'\n        ) {\n          preprocessor.lastChunkWritten = true\n          tokenizer[tokenizer.state](tokenizer._consume())\n        }\n      }\n\n      /**\n       * @param {Node} node\n       */\n      function stitch(node) {\n        stitches = true\n\n        /** @type {Node} */\n        let clone\n\n        // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n        // passed through node).\n        if ('children' in node) {\n          clone = {\n            ...node,\n            children: raw(\n              {type: 'root', children: node.children},\n              file,\n              options\n              // @ts-expect-error Assume a given parent yields a parent.\n            ).children\n          }\n        } else {\n          clone = {...node}\n        }\n\n        // Hack: `value` is supposed to be a string, but as none of the tools\n        // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n        // through.\n        comment({type: 'comment', value: {stitch: clone}})\n      }\n\n      function resetTokenizer() {\n        /* c8 ignore next 2 */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n\n        // Process final characters if they’re still there after hibernating.\n        // Similar to:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js#L95>.\n        const token = tokenizer.currentCharacterToken\n\n        if (token) {\n          token.location.endLine = posTracker.line\n          token.location.endCol = posTracker.col + 1\n          token.location.endOffset = posTracker.offset + 1\n          parser._processToken(token)\n        }\n\n        // Reset tokenizer:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/index.js#L218-L234>.\n        // Especially putting it back in the `data` state is useful: some elements,\n        // like textareas and iframes, change the state.\n        // See GH-7.\n        // But also if broken HTML is in `raw`, and then a correct element is given.\n        // See GH-11.\n        tokenizer.tokenQueue = []\n        tokenizer.state = dataState\n        tokenizer.returnState = ''\n        tokenizer.charRefCode = -1\n        tokenizer.tempBuff = []\n        tokenizer.lastStartTagName = ''\n        tokenizer.consumedAfterSnapshot = -1\n        tokenizer.active = false\n        tokenizer.currentCharacterToken = undefined\n        tokenizer.currentToken = undefined\n        tokenizer.currentAttr = undefined\n      }\n    }\n  )\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction startTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: startTagToken,\n    tagName: node.tagName,\n    selfClosing: false,\n    attrs: attributes(node),\n    location\n  }\n}\n\n/**\n * @param {Element} node\n * @returns {Array<P5Attribute>}\n */\nfunction attributes(node) {\n  return toParse5({\n    tagName: node.tagName,\n    type: 'element',\n    properties: node.properties,\n    children: []\n    // @ts-expect-error Assume element.\n  }).attrs\n}\n\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction endTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: endTagToken,\n    tagName: node.tagName,\n    attrs: [],\n    location\n  }\n}\n\n/**\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot compile `' + node.type + '` node')\n}\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * @param {Node|Stitch} node\n * @returns {P5Location}\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  return {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n}\n\n/**\n * @param {VFile|Options|undefined} value\n * @return {value is Options}\n */\nfunction isOptions(value) {\n  return Boolean(value && !('message' in value && 'messages' in value))\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} Options\n * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Plugin to parse the tree again (and raw nodes).\n * Keeping positional info OK.  🙌\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeRaw(options = {}) {\n  return (tree, file) => {\n    // Assume that when a root was given, it’s also returned.\n    const result = /** @type {Root} */ (raw(tree, file, options))\n    return result\n  }\n}\n","const rtlRange = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nconst ltrRange =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\n/* eslint-disable no-misleading-character-class */\nconst rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']')\nconst ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']')\n/* eslint-enable no-misleading-character-class */\n\n/**\n * Detect the direction of text: left-to-right, right-to-left, or neutral\n *\n * @param {string} value\n * @returns {'rtl'|'ltr'|'neutral'}\n */\nexport function direction(value) {\n  const source = String(value || '')\n  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral'\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement\n */\n\nimport {convertElement} from 'hast-util-is-element'\n\n/**\n * @param {Node} node\n * @returns {node is Parent}\n */\nexport function parent(node) {\n  // @ts-expect-error: hush.\n  return Array.isArray(node.children)\n}\n\n/** @type {IsElement} */\n// @ts-expect-error it works.\nexport const element = convertElement()\n","/**\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').ElementChild} ElementChild\n * @typedef {import('./types.js').Direction} Direction\n * @typedef {import('unist-util-visit/complex-types').Visitor<ElementChild>} Visitor\n */\n\nimport {direction} from 'direction'\nimport {isElement} from 'hast-util-is-element'\nimport {toString} from 'hast-util-to-string'\nimport {svg} from 'property-information'\nimport {visit, EXIT, SKIP} from 'unist-util-visit'\nimport {element} from './util.js'\n\n/**\n * @param {SelectState} state\n * @param {HastNode} node\n * @returns {() => void}\n */\n// eslint-disable-next-line complexity\nexport function enterState(state, node) {\n  const schema = state.schema\n  const language = state.language\n  const currentDirection = state.direction\n  const editableOrEditingHost = state.editableOrEditingHost\n  /** @type {Direction|undefined} */\n  let dirInferred\n  /** @type {boolean|undefined} */\n  let found\n\n  if (element(node) && node.properties) {\n    const lang = node.properties.xmlLang || node.properties.lang\n    const type = node.properties.type || 'text'\n    const dir = dirProperty(node)\n\n    if (lang !== undefined && lang !== null) {\n      state.language = String(lang)\n      found = true\n    }\n\n    if (schema && schema.space === 'html') {\n      if (node.properties.contentEditable === 'true') {\n        state.editableOrEditingHost = true\n        found = true\n      }\n\n      if (isElement(node, 'svg')) {\n        state.schema = svg\n        found = true\n      }\n\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\n      // Explicit `[dir=rtl]`.\n      if (dir === 'rtl') {\n        dirInferred = dir\n      } else if (\n        // Explicit `[dir=ltr]`.\n        dir === 'ltr' ||\n        // HTML with an invalid or no `[dir]`.\n        (dir !== 'auto' && isElement(node, 'html')) ||\n        // `input[type=tel]` with an invalid or no `[dir]`.\n        (dir !== 'auto' && isElement(node, 'input') && type === 'tel')\n      ) {\n        dirInferred = 'ltr'\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n      } else if (dir === 'auto' || isElement(node, 'bdi')) {\n        if (isElement(node, 'textarea')) {\n          // Check contents of `<textarea>`.\n          dirInferred = dirBidi(toString(node))\n        } else if (\n          isElement(node, 'input') &&\n          (type === 'email' ||\n            type === 'search' ||\n            type === 'tel' ||\n            type === 'text')\n        ) {\n          // Check value of `<input>`.\n          // @ts-expect-error something is `never` in types but this is needed.\n          dirInferred = node.properties.value\n            ? // @ts-expect-error Assume string\n              dirBidi(node.properties.value)\n            : 'ltr'\n        } else {\n          // Check text nodes in `node`.\n          visit(node, inferDirectionality)\n        }\n      }\n\n      if (dirInferred) {\n        state.direction = dirInferred\n        found = true\n      }\n    }\n    // Turn off editing mode in non-HTML spaces.\n    else if (state.editableOrEditingHost) {\n      state.editableOrEditingHost = false\n      found = true\n    }\n  }\n\n  return found ? reset : noop\n\n  function reset() {\n    state.schema = schema\n    state.language = language\n    state.direction = currentDirection\n    state.editableOrEditingHost = editableOrEditingHost\n  }\n\n  /** @type {Visitor} */\n  function inferDirectionality(child) {\n    if (child.type === 'text') {\n      dirInferred = dirBidi(child.value)\n      return dirInferred ? EXIT : null\n    }\n\n    if (\n      child !== node &&\n      (isElement(child, ['bdi', 'script', 'style', 'textare']) ||\n        dirProperty(child))\n    ) {\n      return SKIP\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Direction|undefined}\n */\nfunction dirBidi(value) {\n  const result = direction(value)\n  return result === 'neutral' ? undefined : result\n}\n\n/**\n * @param {ElementChild} node\n * @returns {Direction|undefined}\n */\nfunction dirProperty(node) {\n  const value =\n    element(node) && node.properties && typeof node.properties.dir === 'string'\n      ? node.properties.dir.toLowerCase()\n      : undefined\n\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\n    ? value\n    : undefined\n}\n\nfunction noop() {}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').SelectIterator} SelectIterator\n * @typedef {import('./types.js').Handler} Handler\n */\n\nimport {zwitch} from 'zwitch'\nimport {enterState} from './enter-state.js'\nimport {parent, element} from './util.js'\n\nconst own = {}.hasOwnProperty\n\nconst handle = zwitch('nestingOperator', {\n  // @ts-expect-error: hush.\n  unknown: unknownNesting,\n  // @ts-expect-error: hush.\n  invalid: topScan, // `undefined` is the top query selector.\n  handlers: {\n    // @ts-expect-error: hush.\n    null: descendant, // `null` is the descendant combinator.\n    // @ts-expect-error: hush.\n    '>': child,\n    // @ts-expect-error: hush.\n    '+': adjacentSibling,\n    // @ts-expect-error: hush.\n    '~': generalSibling\n  }\n})\n\n/** @type {Handler} */\nexport function nest(query, node, index, parent, state) {\n  handle(query, node, index, parent, state)\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 6 */\n/**\n * @param {{[x: string]: unknown, type: string}} query\n */\nfunction unknownNesting(query) {\n  throw new Error('Unexpected nesting `' + query.nestingOperator + '`')\n}\n\n/** @type {Handler} */\nfunction topScan(query, node, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (parent || index === null) {\n    throw new Error('topScan is supposed to be called from the root node')\n  }\n\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (!state.iterator) {\n    throw new Error('Expected `iterator`')\n  }\n\n  state.iterator(query, node, index, parent, state)\n  if (!state.shallow) descendant(query, node, index, parent, state)\n}\n\n/** @type {Handler} */\nfunction descendant(query, node, index, parent, state) {\n  const previous = state.iterator\n\n  state.iterator = iterator\n  child(query, node, index, parent, state)\n\n  /** @type {SelectIterator} */\n  function iterator(query, node, index, parent, state) {\n    // Shouldn’t happen.\n    /* c8 ignore next 3 */\n    if (!previous) {\n      throw new Error('Expected `iterator`')\n    }\n\n    state.iterator = previous\n    previous(query, node, index, parent, state)\n    state.iterator = iterator\n\n    if (state.one && state.found) return\n\n    child(query, node, index, parent, state)\n  }\n}\n\n/** @type {Handler} */\nfunction child(query, node, _1, _2, state) {\n  if (!parent(node)) return\n  if (node.children.length === 0) return\n  indexedSearch(query, node, state)\n}\n\n/** @type {Handler} */\nfunction adjacentSibling(query, _, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next */\n  if (!parent || index === null) return\n  indexedSearch(query, parent, state, index + 1, true)\n}\n\n/** @type {Handler} */\nfunction generalSibling(query, _, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next */\n  if (!parent || index === null) return\n  indexedSearch(query, parent, state, index + 1)\n}\n\n/**\n * Handles `typeIndex` and `typeCount` properties for every walker.\n *\n * @param {Rule} query\n * @param {Parent} parent\n * @param {SelectState} state\n * @param {number} [from=0]\n * @param {boolean} [firstElementOnly=false]\n */\nfunction indexedSearch(query, parent, state, from, firstElementOnly) {\n  const handle = state.index ? delay : add\n  const children = parent.children\n  let elements = 0\n  let index = -1\n  /** @type {Record<string, number>} */\n  const types = {}\n  /** @type {Array<Function>} */\n  const delayed = []\n\n  // Start looking at `from`\n  if (from === undefined || from === null) from = 0\n\n  // Exit if there are no further nodes.\n  if (from >= children.length) return\n\n  // If we need to index for types, do so for all elements before `from`.\n  if (state.index) {\n    while (++index < from) {\n      const child = children[index]\n      if (element(child)) count(child.tagName)\n    }\n  }\n\n  index = from - 1\n\n  while (++index < children.length) {\n    const child = children[index]\n    // Only check elements.\n    // Check either all elements, or only check the first sibling\n    if (element(child)) {\n      handle(child, index)\n\n      // Stop if we’re looking for one node and it’s already found.\n      if (state.one && state.found) return\n      if (firstElementOnly) break\n    }\n  }\n\n  if (state.index) {\n    index = -1\n\n    while (++index < delayed.length) {\n      delayed[index]()\n      if (state.one && state.found) return\n    }\n  }\n\n  /**\n   * @param {Element} node\n   * @param {number} childIndex\n   */\n  function delay(node, childIndex) {\n    const elementsBefore = elements\n    const elementsByTypeBefore = own.call(types, node.tagName)\n      ? types[node.tagName]\n      : 0\n\n    count(node.tagName)\n\n    delayed.push(fn)\n\n    function fn() {\n      // Before counting further elements:\n      state.elementIndex = elementsBefore\n      state.typeIndex = elementsByTypeBefore\n\n      // After counting all elements.\n      state.elementCount = elements\n      state.typeCount = types[node.tagName]\n\n      add(node, childIndex)\n    }\n  }\n\n  /**\n   * @param {Element} node\n   * @param {number} childIndex\n   */\n  function add(node, childIndex) {\n    const exit = enterState(state, node)\n\n    // Shouldn’t happen.\n    /* c8 ignore next 3 */\n    if (!state.iterator) {\n      throw new Error('Expected `iterator`')\n    }\n\n    state.iterator(query, node, childIndex, parent, state)\n    exit()\n  }\n\n  /**\n   * @param {string} name\n   */\n  function count(name) {\n    if (!own.call(types, name)) types[name] = 0\n    elements++\n    types[name]++\n  }\n}\n","/**\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\n * for more information on the algorithms.\n */\n\n/**\n * @typedef {string} Tag\n * @typedef {Array<Tag>} Tags\n * @typedef {string} Range\n * @typedef {Array<Range>} Ranges\n *\n * @callback Check\n * @param {Tag} tag\n * @param {Range} range\n * @returns {boolean}\n *\n * @typedef {FilterOrLookup<true>} Filter\n * @typedef {FilterOrLookup<false>} Lookup\n */\n\n/**\n * @template {boolean} IsFilter\n * @callback FilterOrLookup\n * @param {Tag|Tags} tags\n * @param {Range|Ranges} [ranges='*']\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\n */\n\n/**\n * Factory to perform a filter or a lookup.\n * This factory creates a function that accepts a list of tags and a list of\n * ranges, and contains logic to exit early for lookups.\n * `check` just has to deal with one tag and one range.\n * This match function iterates over ranges, and for each range,\n * iterates over tags.  That way, earlier ranges matching any tag have\n * precedence over later ranges.\n *\n * @template {boolean} IsFilter\n * @param {Check} check\n * @param {IsFilter} filter\n * @returns {FilterOrLookup<IsFilter>}\n */\nfunction factory(check, filter) {\n  return function (tags, ranges) {\n    let left = cast(tags, 'tag')\n    const right = cast(\n      ranges === null || ranges === undefined ? '*' : ranges,\n      'range'\n    )\n    /** @type {Tags} */\n    const matches = []\n    let rightIndex = -1\n\n    while (++rightIndex < right.length) {\n      const range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      let leftIndex = -1\n      /** @type {Tags} */\n      const next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) {\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n              left[leftIndex]\n            )\n          }\n\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n      filter ? matches : undefined\n    )\n  }\n}\n\n/**\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\n * of basic language ranges (Section 2.1) to sets of language tags.\n */\nexport const basicFilter = factory(function (tag, range) {\n  return range === '*' || tag === range || tag.includes(range + '-')\n}, true)\n\n/**\n * Extended Filtering (Section 3.3.2) matches a language priority list\n * consisting of extended language ranges (Section 2.2) to sets of language\n * tags.\n */\nexport const extendedFilter = factory(function (tag, range) {\n  // 3.3.2.1\n  const left = tag.split('-')\n  const right = range.split('-')\n  let leftIndex = 0\n  let rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}, true)\n\n/**\n * Lookup (Section 3.4) matches a language priority list consisting of basic\n * language ranges to sets of language tags to find the one exact language tag\n * that best matches the range.\n */\nexport const lookup = factory(function (tag, range) {\n  let right = range\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    let index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}, false)\n\n/**\n * Validate tags or ranges, and cast them to arrays.\n *\n * @param {string|Array<string>} values\n * @param {string} name\n * @returns {Array<string>}\n */\nfunction cast(values, name) {\n  const value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n * @typedef {import('./types.js').RulePseudoSelector} RulePseudoSelector\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').ElementChild} ElementChild\n */\n\nimport {extendedFilter} from 'bcp-47-match'\nimport {parse as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {isElement} from 'hast-util-is-element'\nimport {whitespace} from 'hast-util-whitespace'\nimport {zwitch} from 'zwitch'\nimport {any} from './any.js'\n\nconst handle = zwitch('name', {\n  // @ts-expect-error: hush.\n  unknown: unknownPseudo,\n  invalid: invalidPseudo,\n  handlers: {\n    // @ts-expect-error: hush.\n    any: matches,\n    // @ts-expect-error: hush.\n    'any-link': anyLink,\n    // @ts-expect-error: hush.\n    blank,\n    // @ts-expect-error: hush.\n    checked,\n    // @ts-expect-error: hush.\n    dir,\n    // @ts-expect-error: hush.\n    disabled,\n    // @ts-expect-error: hush.\n    empty,\n    // @ts-expect-error: hush.\n    enabled,\n    // @ts-expect-error: hush.\n    'first-child': firstChild,\n    // @ts-expect-error: hush.\n    'first-of-type': firstOfType,\n    // @ts-expect-error: hush.\n    has,\n    // @ts-expect-error: hush.\n    lang,\n    // @ts-expect-error: hush.\n    'last-child': lastChild,\n    // @ts-expect-error: hush.\n    'last-of-type': lastOfType,\n    // @ts-expect-error: hush.\n    matches,\n    // @ts-expect-error: hush.\n    not,\n    // @ts-expect-error: hush.\n    'nth-child': nthChild,\n    // @ts-expect-error: hush.\n    'nth-last-child': nthLastChild,\n    // @ts-expect-error: hush.\n    'nth-of-type': nthOfType,\n    // @ts-expect-error: hush.\n    'nth-last-of-type': nthLastOfType,\n    // @ts-expect-error: hush.\n    'only-child': onlyChild,\n    // @ts-expect-error: hush.\n    'only-of-type': onlyOfType,\n    // @ts-expect-error: hush.\n    optional,\n    // @ts-expect-error: hush.\n    'read-only': readOnly,\n    // @ts-expect-error: hush.\n    'read-write': readWrite,\n    // @ts-expect-error: hush.\n    required,\n    // @ts-expect-error: hush.\n    root,\n    // @ts-expect-error: hush.\n    scope\n  }\n})\n\npseudo.needsIndex = [\n  'first-child',\n  'first-of-type',\n  'last-child',\n  'last-of-type',\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type',\n  'only-child',\n  'only-of-type'\n]\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function pseudo(query, element, index, parent, state) {\n  const pseudos = query.pseudos\n  let offset = -1\n\n  while (++offset < pseudos.length) {\n    if (!handle(pseudos[offset], element, index, parent, state)) return false\n  }\n\n  return true\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction matches(query, element, _1, _2, state) {\n  const shallow = state.shallow\n  const one = state.one\n\n  state.shallow = true\n  state.one = true\n\n  const result = any(query.value, element, state)[0] === element\n\n  state.shallow = shallow\n  state.one = one\n\n  return result\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction not(query, element, index, parent, state) {\n  return !matches(query, element, index, parent, state)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction anyLink(_, element) {\n  return (\n    isElement(element, ['a', 'area', 'link']) && hasProperty(element, 'href')\n  )\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction checked(_, element) {\n  if (isElement(element, ['input', 'menuitem'])) {\n    return Boolean(\n      element.properties &&\n        (element.properties.type === 'checkbox' ||\n          element.properties.type === 'radio') &&\n        hasProperty(element, 'checked')\n    )\n  }\n\n  if (isElement(element, 'option')) {\n    return hasProperty(element, 'selected')\n  }\n\n  return false\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction dir(query, _1, _2, _3, state) {\n  return state.direction === query.value\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction disabled(_, element) {\n  return (\n    isElement(element, [\n      'button',\n      'input',\n      'select',\n      'textarea',\n      'optgroup',\n      'option',\n      'menuitem',\n      'fieldset'\n    ]) && hasProperty(element, 'disabled')\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction enabled(query, element) {\n  return !disabled(query, element)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction required(_, element) {\n  return (\n    isElement(element, ['input', 'textarea', 'select']) &&\n    hasProperty(element, 'required')\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction optional(query, element) {\n  return !required(query, element)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readWrite(_, element, _1, _2, state) {\n  return isElement(element, ['input', 'textarea'])\n    ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled')\n    : Boolean(state.editableOrEditingHost)\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} element\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readOnly(query, element, index, parent, state) {\n  return !readWrite(query, element, index, parent, state)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction root(_, element, _1, parent, state) {\n  return Boolean(\n    (!parent || parent.type === 'root') &&\n      state.schema &&\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\n      isElement(element, ['html', 'svg'])\n  )\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction scope(_, element, _1, _2, state) {\n  return Boolean(\n    isElement(element) &&\n      state.scopeElements &&\n      state.scopeElements.includes(element)\n  )\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction empty(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return child.type === 'element' || child.type === 'text'\n  }\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction blank(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return (\n      child.type === 'element' || (child.type === 'text' && !whitespace(child))\n    )\n  }\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementIndex === 0\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lang(query, _1, _2, _3, state) {\n  return (\n    state.language !== '' &&\n    state.language !== undefined &&\n    state.language !== null &&\n    // @ts-expect-error never `selectors`.\n    extendedFilter(state.language, commas(query.value)).length > 0\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    state.elementCount && state.elementIndex === state.elementCount - 1\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementCount === 1\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.elementIndex === 'number' && query.value(state.elementIndex)\n  )\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    typeof state.elementCount === 'number' &&\n      typeof state.elementIndex === 'number' &&\n      query.value(state.elementCount - state.elementIndex - 1)\n  )\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && query.value(state.typeIndex)\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    typeof state.typeIndex === 'number' &&\n    query.value(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n/**\n * @param {Element} element\n * @param {(child: ElementChild) => boolean} check\n * @returns {boolean}\n */\nfunction someChildren(element, check) {\n  const children = element.children\n  let index = -1\n\n  while (++index < children.length) {\n    if (check(children[index])) return true\n  }\n\n  return false\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  throw new Error('Invalid pseudo-selector')\n}\n\n/**\n * @param {RulePseudo} query\n */\nfunction unknownPseudo(query) {\n  if (query.name) {\n    throw new Error('Unknown pseudo-selector `' + query.name + '`')\n  }\n\n  throw new Error('Unexpected pseudo-element or empty pseudo-class')\n}\n\n/**\n * @param {SelectState} state\n * @param {RulePseudo|RulePseudoNth} query\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction has(query, element, _2, _3, state) {\n  const shallow = state.shallow\n  const one = state.one\n  const scopeElements = state.scopeElements\n  const value = appendScope(query.value)\n\n  state.shallow = false\n  state.one = true\n  state.scopeElements = [element]\n\n  const result = any(value, element, state).length > 0\n\n  state.shallow = shallow\n  state.one = one\n  state.scopeElements = scopeElements\n\n  return result\n}\n\n/**\n * @param {Selector} value\n * @returns {Selectors}\n */\nfunction appendScope(value) {\n  /** @type {Selectors} */\n  const selector =\n    value.type === 'ruleSet' ? {type: 'selectors', selectors: [value]} : value\n  let index = -1\n\n  while (++index < selector.selectors.length) {\n    const rule = selector.selectors[index].rule\n    rule.nestingOperator = null\n\n    if (\n      !rule.pseudos ||\n      rule.pseudos.length !== 1 ||\n      rule.pseudos[0].name !== 'scope'\n    ) {\n      selector.selectors[index] = {\n        type: 'ruleSet',\n        // @ts-expect-error pseudos are fine w/ just a name!\n        rule: {type: 'rule', rule, pseudos: [{name: 'scope'}]}\n      }\n    }\n  }\n\n  return selector\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleAttr} RuleAttr\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Schema} Schema\n * @typedef {import('./types.js').Info} Info\n * @typedef {import('./types.js').PropertyValue} PropertyValue\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {zwitch} from 'zwitch'\n\nconst handle = zwitch('operator', {\n  // @ts-expect-error: hush.\n  unknown: unknownOperator,\n  // @ts-expect-error: hush.\n  invalid: exists,\n  handlers: {\n    // @ts-expect-error: hush.\n    '=': exact,\n    // @ts-expect-error: hush.\n    '~=': spaceSeparatedList,\n    // @ts-expect-error: hush.\n    '|=': exactOrPrefix,\n    // @ts-expect-error: hush.\n    '^=': begins,\n    // @ts-expect-error: hush.\n    '$=': ends,\n    // @ts-expect-error: hush.\n    '*=': contains\n  }\n})\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @param {Schema} schema\n * @returns {boolean}\n */\nexport function attribute(query, element, schema) {\n  const attrs = query.attrs\n  let index = -1\n\n  while (++index < attrs.length) {\n    if (!handle(attrs[index], element, find(schema, attrs[index].name))) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * `[attr]`\n *\n * @param {RuleAttr} _\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exists(_, element, info) {\n  return hasProperty(element, info.property)\n}\n\n/**\n * `[attr=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exact(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      normalizeValue(element.properties[info.property], info) === query.value\n  )\n}\n\n/**\n * `[attr~=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction spaceSeparatedList(query, element, info) {\n  const value = element.properties && element.properties[info.property]\n\n  return (\n    // If this is a comma-separated list, and the query is contained in it, return\n    // true.\n    (!info.commaSeparated &&\n      value &&\n      typeof value === 'object' &&\n      query.value &&\n      value.includes(query.value)) ||\n    // For all other values (including comma-separated lists), return whether this\n    // is an exact match.\n    (hasProperty(element, info.property) &&\n      normalizeValue(value, info) === query.value)\n  )\n}\n\n/**\n * `[attr|=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exactOrPrefix(query, element, info) {\n  const value = normalizeValue(\n    element.properties && element.properties[info.property],\n    info\n  )\n\n  return Boolean(\n    hasProperty(element, info.property) &&\n      query.value &&\n      (value === query.value ||\n        (value.slice(0, query.value.length) === query.value &&\n          value.charAt(query.value.length) === '-'))\n  )\n}\n\n/**\n * `[attr^=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction begins(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        0,\n        query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * `[attr$=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction ends(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        -query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * `[attr*=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction contains(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).includes(\n        query.value\n      )\n  )\n}\n\n// Shouldn’t be called, Parser throws an error instead.\n/**\n * @param {RuleAttr} query\n * @returns {boolean}\n */\n/* c8 ignore next 3 */\nfunction unknownOperator(query) {\n  throw new Error('Unknown operator `' + query.operator + '`')\n}\n\n/**\n * Stringify a hast value back to its HTML form.\n *\n * @param {PropertyValue} value\n * @param {Info} info\n * @returns {string}\n */\nfunction normalizeValue(value, info) {\n  if (typeof value === 'boolean') {\n    return info.attribute\n  }\n\n  if (Array.isArray(value)) {\n    return (info.commaSeparated ? commas : spaces)(value)\n  }\n\n  return String(value)\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\nimport {element} from './util.js'\n\n/**\n * @param {Rule} query\n * @param {HastNode} node\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function test(query, node, index, parent, state) {\n  return Boolean(\n    element(node) &&\n      state.schema &&\n      (!query.tagName || name(query, node)) &&\n      (!query.classNames || className(query, node)) &&\n      (!query.id || id(query, node)) &&\n      (!query.attrs || attribute(query, node, state.schema)) &&\n      (!query.pseudos || pseudo(query, node, index, parent, state))\n  )\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function name(query, element) {\n  return query.tagName === '*' || query.tagName === element.tagName\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function className(query, element) {\n  /** @type {Array<string>} */\n  // @ts-expect-error Assume array.\n  const value = element.properties.className || []\n  let index = -1\n\n  if (query.classNames) {\n    while (++index < query.classNames.length) {\n      if (!value.includes(query.classNames[index])) return false\n    }\n  }\n\n  return true\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function id(query, element) {\n  return Boolean(element.properties && element.properties.id === query.id)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').SelectIterator} SelectIterator\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {html, svg} from 'property-information'\nimport {zwitch} from 'zwitch'\nimport {enterState} from './enter-state.js'\nimport {nest} from './nest.js'\nimport {pseudo} from './pseudo.js'\nimport {test} from './test.js'\n\nconst type = zwitch('type', {\n  // @ts-expect-error: hush.\n  unknown: unknownType,\n  invalid: invalidType,\n  // @ts-expect-error: hush.\n  handlers: {selectors, ruleSet, rule}\n})\n\n/**\n * @param {Selectors|RuleSet|Rule} query\n * @param {HastNode|undefined} node\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nexport function any(query, node, state) {\n  // @ts-expect-error zwitch types are off.\n  return query && node ? type(query, node, state) : []\n}\n\n/**\n * @param {Selectors} query\n * @param {HastNode} node\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nfunction selectors(query, node, state) {\n  const collector = new Collector(state.one)\n  let index = -1\n\n  while (++index < query.selectors.length) {\n    collector.collectAll(ruleSet(query.selectors[index], node, state))\n  }\n\n  return collector.result\n}\n\n/**\n * @param {RuleSet} query\n * @param {HastNode} node\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nfunction ruleSet(query, node, state) {\n  return rule(query.rule, node, state)\n}\n\n/**\n * @param {Rule} query\n * @param {HastNode} tree\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nfunction rule(query, tree, state) {\n  const collector = new Collector(state.one)\n\n  if (state.shallow && query.rule) {\n    throw new Error('Expected selector without nesting')\n  }\n\n  nest(\n    query,\n    tree,\n    0,\n    null,\n    configure(query, {\n      schema: state.space === 'svg' ? svg : html,\n      language: undefined,\n      direction: 'ltr',\n      editableOrEditingHost: false,\n      // @ts-expect-error assume elements.\n      scopeElements: tree.type === 'root' ? tree.children : [tree],\n      iterator,\n      one: state.one,\n      shallow: state.shallow\n    })\n  )\n\n  return collector.result\n\n  /** @type {SelectIterator} */\n  function iterator(query, node, index, parent, state) {\n    const exit = enterState(state, node)\n\n    if (test(query, node, index, parent, state)) {\n      if (query.rule) {\n        nest(query.rule, node, index, parent, configure(query.rule, state))\n      } else {\n        // @ts-expect-error `test` also asserts `node is Element`\n        collector.collect(node)\n        state.found = true\n      }\n    }\n\n    exit()\n  }\n\n  /**\n   * @template {SelectState} S\n   * @param {Rule} query\n   * @param {S} state\n   * @returns {S}\n   */\n  function configure(query, state) {\n    const pseudos = query.pseudos || []\n    let index = -1\n\n    while (++index < pseudos.length) {\n      if (pseudo.needsIndex.includes(pseudos[index].name)) {\n        state.index = true\n        break\n      }\n    }\n\n    return state\n  }\n}\n\n// Shouldn’t be called, all data is handled.\n/* c8 ignore next 6 */\n/**\n * @param {{[x: string]: unknown, type: string}} query\n */\nfunction unknownType(query) {\n  throw new Error('Unknown type `' + query.type + '`')\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidType() {\n  throw new Error('Invalid type')\n}\n\nclass Collector {\n  /**\n   * @param {boolean|undefined} [one]\n   */\n  constructor(one) {\n    /** @type {Array<Element>} */\n    this.result = []\n    /** @type {boolean|undefined} */\n    this.one = one\n    /** @type {boolean} */\n    this.found = false\n  }\n\n  /**\n   * Append nodes to array, filtering out duplicates.\n   *\n   * @param {Array<Element>} elements\n   */\n  collectAll(elements) {\n    let index = -1\n\n    while (++index < elements.length) {\n      this.collect(elements[index])\n    }\n  }\n\n  /**\n   * Append one node.\n   *\n   * @param {Element} element\n   */\n  collect(element) {\n    if (this.one) {\n      // Shouldn’t happen, safeguards performance problems.\n      /* c8 ignore next */\n      if (this.found) return\n      this.found = true\n    }\n\n    if (!this.result.includes(element)) this.result.push(element)\n  }\n}\n",null,null,null,"/**\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n */\n\nimport {CssSelectorParser} from 'css-selector-parser'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\nconst nth = new Set([\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type'\n])\n\nconst parser = new CssSelectorParser()\n\n// @ts-expect-error: hush.\nconst compile = zwitch('type', {handlers: {selectors, ruleSet, rule}})\n\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*')\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has')\nparser.registerNestingOperators('>', '+', '~')\n\n/**\n * @param {string} selector\n * @returns {Selector}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  // @ts-expect-error types are wrong.\n  return compile(parser.parse(selector))\n}\n\n/**\n * @param {Selectors} query\n * @returns {Selectors}\n */\nfunction selectors(query) {\n  let index = -1\n\n  while (++index < query.selectors.length) {\n    compile(query.selectors[index])\n  }\n\n  return query\n}\n\n/**\n * @param {RuleSet} query\n * @returns {Rule}\n */\nfunction ruleSet(query) {\n  return rule(query.rule)\n}\n\n/**\n * @param {Rule} query\n * @returns {Rule}\n */\nfunction rule(query) {\n  const pseudos = query.pseudos || []\n  let index = -1\n\n  while (++index < pseudos.length) {\n    const pseudo = pseudos[index]\n\n    if (nth.has(pseudo.name)) {\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.value = nthCheck(pseudo.value)\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.valueType = 'function'\n    }\n  }\n\n  compile(query.rule)\n\n  return query\n}\n","/**\n * @typedef {import('./lib/types.js').Element} Element\n * @typedef {import('./lib/types.js').HastNode} HastNode\n * @typedef {import('./lib/types.js').Space} Space\n */\n\nimport {any} from './lib/any.js'\nimport {parse} from './lib/parse.js'\n\n/**\n * @param {string} selector\n * @param {HastNode} [node]\n * @param {Space} [space]\n * @returns {boolean}\n */\nexport function matches(selector, node, space) {\n  return Boolean(\n    any(parse(selector), node, {space, one: true, shallow: true})[0]\n  )\n}\n\n/**\n * @param {string} selector\n * @param {HastNode} [node]\n * @param {Space} [space]\n * @returns {Element|null}\n */\nexport function select(selector, node, space) {\n  return any(parse(selector), node, {space, one: true})[0] || null\n}\n\n/**\n * @param {string} selector\n * @param {HastNode} [node]\n * @param {Space} [space]\n * @returns {Array<Element>}\n */\nexport function selectAll(selector, node, space) {\n  return any(parse(selector), node, {space})\n}\n","import { Plugin } from 'unified';\nimport { Root, Element, ElementContent, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { selectAll } from 'hast-util-select';\nimport { Test } from 'unist-util-is';\n\n/** Get the node tree source code string */\nexport const getCodeString = (data: ElementContent[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\n      code += getCodeString(node.children);\n    }\n  });\n  return code;\n};\n\nexport type RehypeRewriteOptions = {\n  /**\n   * Select an element to be wrapped. Expects a string selector that can be passed to hast-util-select ([supported selectors](https://github.com/syntax-tree/hast-util-select/blob/master/readme.md#support)).\n   * If `selector` is not set then wrap will check for a body all elements.\n   */\n  selector?: string;\n  /** Rewrite Element. */\n  rewrite(node: Root | RootContent, index: number | null, parent: Root | Element | null): void;\n}\n\nconst remarkRewrite: Plugin<[RehypeRewriteOptions?], Root> = (options) => {\n  const { selector, rewrite } = options || {};\n  return (tree) => {\n    if (!rewrite || typeof rewrite !== 'function') return;\n    if (selector && typeof selector === 'string') {\n      const selected = selectAll(selector, tree);\n      if (selected && selected.length > 0) {\n        visit(tree, selected as unknown as Test, (node: Element, index, parent) => {\n          rewrite(node, index, parent);\n        });\n      }\n      return;\n    }\n\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      rewrite(node, index, parent);\n    });\n  }\n}\n\nexport default remarkRewrite;\n","/**\n * @typedef {import('hast').Root} Root\n */\n\nimport Slugger from 'github-slugger'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\nconst slugs = new Slugger()\n\n/**\n * Plugin to add `id`s to headings.\n *\n * @type {import('unified').Plugin<Array<void>, Root>}\n */\nexport default function rehypeSlug() {\n  return (tree) => {\n    slugs.reset()\n\n    visit(tree, 'element', (node) => {\n      if (headingRank(node) && node.properties && !hasProperty(node, 'id')) {\n        node.properties.id = slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [{character: '~', inConstruct: 'phrasing'}],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|Array<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {Array<Array<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","var own = {}.hasOwnProperty\n\n/**\n * @callback Handler\n * @param {...unknown} value\n * @return {unknown}\n *\n * @typedef {Record<string, Handler>} Handlers\n *\n * @typedef {Object} Options\n * @property {Handler} [unknown]\n * @property {Handler} [invalid]\n * @property {Handlers} [handlers]\n */\n\n/**\n * Handle values based on a property.\n *\n * @param {string} key\n * @param {Options} [options]\n */\nexport function zwitch(key, options) {\n  var settings = options || {}\n\n  /**\n   * Handle one value.\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @param {...unknown} [value]\n   * @this {unknown}\n   * @returns {unknown}\n   * @property {Handler} invalid\n   * @property {Handler} unknown\n   * @property {Handlers} handlers\n   */\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    if (fn) {\n      return fn.apply(this, arguments)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n"],"names":["testMatches","importName","test","Array","isArray","some","regex","RegExp","module","exports","trueFunc","falseFunc","parser_context_1","require","render_1","CssSelectorParser","this","pseudos","attrEqualityMods","ruleNestingOperators","substitutesEnabled","prototype","registerSelectorPseudos","_i","arguments","length","_a","pseudos_1","pseudo","unregisterSelectorPseudos","pseudos_2","registerNumericPseudos","pseudos_3","unregisterNumericPseudos","pseudos_4","registerNestingOperators","operators","operators_1","operator","unregisterNestingOperators","operators_2","registerAttrEqualityMods","mods","mods_1","mod","unregisterAttrEqualityMods","mods_2","enableSubstitutes","disableSubstitutes","parse","str","parseCssSelector","render","path","renderEntity","trim","Object","defineProperty","value","utils_1","pos","l","chr","getStr","quote","escapeTable","result","charAt","esc","undefined","isHex","hex","String","fromCharCode","parseInt","getIdent","isIdent","Error","identSpecialChars","skipWhitespace","parseSelector","selector","parseSingleSelector","res","type","selectors","push","rule","parseRule","currentRule","op","nestingOperator","tagName","isIdentStart","classNames","id","attr","name","attrValue","valueType","doubleQuotesEscapeChars","singleQuoteEscapeChars","attrs","pseudoName","entity","currentEntity","parts","join","map","escapeIdentifier","cn","escapeStr","c","s","len","i","charCode","charCodeAt","extraCharCode","toString","replacement","strReplacementsRev","n","r","t","f","hasOwn","hasOwnProperty","toStr","gOPD","getOwnPropertyDescriptor","arr","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","enumerable","configurable","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","deep","BananaSlug","own","reset","slugger","string","maintainCase","toLowerCase","replace","slug","self","originalSlug","occurrences","create","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","end","source","content","errorsList","error","msg","err","reason","filename","silent","re","m","exec","slice","comments","rules","comment","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","getURLParameters","url","reduce","a","v","indexOf","getMetaId","meta","isMeta","includes","parsePart","split","lhs","sep","rhs","incr","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","ExpandIcon","_jsx","viewBox","fill","children","d","CopyIcon","_jsxs","CopySuccessIcon","Copied","useState","copied","setCopied","onClick","copyTextToClipboard","text","timer","setTimeout","clearTimeout","forwardRef","ref","showCode","setShowCode","toolbar","bordered","disableCheckered","disablePreview","disableCode","disableToolbar","background","toolbarExtra","code","prefixCls","className","other","cls","filter","Boolean","backgroundColor","backgroundImage","u","b","Symbol","for","e","g","h","k","p","q","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","Compiler","tree","toMarkdown","assign","data","extensions","character","expected","index","count","maximum","configure","base","extension","concat","_","context","exit","enter","indentLines","flow","blank","safe","unsafe","patternInScope","stack","before","sequence","subexit","marker","checkFence","raw","suffix","formatCodeAsIndented","repeat","Math","max","streak","lang","after","encode","checkQuote","association","title","emphasis","peek","checkEmphasis","phrasing","rank","min","depth","formatHeadingAsSetext","closeAtx","html","imageReference","reference","referenceType","alt","image","blockquote","definition","hardBreak","heading","inlineCode","link","linkReference","list","listItem","paragraph","root","strong","thematicBreak","patternCompile","parent","pattern","expression","atBreak","formatLinkAsAutolink","size","bullet","checkBullet","listItemIndent","checkListItemIndent","ordered","incrementListMarker","spread","ceil","checkStrong","safeOptions","checkRule","ruleSpaces","checkRepeat","settings","pop","handlers","defaultUnsafe","defaultJoin","defaultHandlers","tightDefinitions","joinDefinition","handle","zwitch","invalid","unknown","left","right","inConstruct","label","identifier","characterEscape","characterReference","decodeIfPossible","decode","$0","$1","fence","repetition","ruleRepetition","child","results","between","Number","fences","setext","resourceLink","eol","one","_compiled","listInScope","none","notInConstruct","input","config","positions","infos","sort","numerical","escapeBackslashes","toUpperCase","whole","all","values","el","characters","char","document","createElement","innerHTML","textContent","fn","noop","apply","Function","unified","stringify","use","freeze","getPrototypeOf","encoding","transforms","canContainEols","autolink","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","blockQuote","codeFenced","codeFlow","codeFencedFenceInfo","buffer","codeFencedFenceMeta","codeIndented","codeText","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","hardBreakEscape","hardBreakTrailing","htmlFlow","htmlFlowData","htmlText","htmlTextData","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","lineEnding","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","compile","events","handler","tokenStack","listStack","resume","setData","getData","prepareList","sliceSerialize","stringifyPosition","point","offset","tailIndex","lineIndex","tailEvent","event","firstBlankLineIndex","atMarker","containerBalance","listSpread","_spread","splice","and","open","token","close","normalizeIdentifier","siblings","tail","fragment","safeFromInt","checked","compiler","postprocess","parser","write","preprocessor","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiDigit","asciiHexDigit","asciiPunctuation","unicodePunctuationRegex","unicodePunctuation","unicodeWhitespace","text$1","attention","headingAtx","labelEnd","labelStartImage","labelStartLink","setextUnderline","contentInitial","flowInitial","insideSpan","null","resolver","disable","markdownLineEnding","factorySpace","tokenize","effects","previous","contentStart","attempt","constructs","consume","lineStart","contentType","next","partialBlankLine","inspectResult","childFlow","childToken","continued","inspectConstruct","ok","subcontinued","inspectStart","containerState","continuation","inspectContinue","inspectLess","currentConstruct","concrete","flowContinue","inspectDone","interrupt","interruptible","containerConstruct","inspectFlowEnd","_closeFlow","lazy","lazyFlowConstruct","check","inspectLazy","flowEnd","partial","documentContinue","documentContinued","flowStart","containerContinue","exitContainers","now","_tokenizer","continueFlow","documentAfterPeek","defineSkip","sliceStream","nok","initial","afterConstruct","shallow","initializeFactory","resolveAll","createResolver","field","notText","resolveAllLineSuffixes","extraResolver","chunks","chunk","bufferIndex","tabs","eventIndex","_index","_bufferIndex","combineExtensions","createTokenizer","miniflat","defined","initializer","from","subtokenize","search","atCarriageReturn","startPosition","endPosition","lastIndex","chunkedPush","chunkedSplice","classifyCharacter","movePoint","_open","_close","group","openingSequence","closingSequence","nextEvents","asciiControl","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","markdownSpace","_container","decodeEntity","_interopDefaultLegacy","default","decodeEntity__default","numeric","markdownLineEndingOrSpace","prefixSize","closingFenceConstruct","closingSequenceStart","sizeOpen","closingSequenceEnd","initialPrefix","sequenceOpen","infoOpen","openAfter","info","infoAfter","contentContinue","indentedContentConstruct","afterPrefix","resolve","gap","tailExitIndex","headEnterIndex","contentEnd","continuationConstruct","prefixed","factoryDestination","factoryLabel","factoryWhitespace","factoryTitle","labelAfter","titleConstruct","literalType","literalMarkerType","rawType","stringType","limit","Infinity","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","markerType","labelEscape","prefix","atFirstTitleBreak","atTitleBreak","titleEscape","seen","fenceOpenInside","headingBreak","htmlBlockNames","htmlRawNames","kind","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","done","continuationRawEndTag","resolveTo","returnState","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","media","_used","destinationAfter","afterLabel","sizeChunks","initialSize","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","items","remove","parameters","chunkStart","unshift","hook","existing","add","serializeChunks","sliceChunks","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","main","state","chunkIndex","go","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","called","atTab","view","startIndex","startBufferIndex","endIndex","endBufferIndex","subcontent","stream","entered","adjust","startPositions","tokenizer","childEvents","jumps","gaps","isInFirstContentOfListItem","_gfmTasklistFirstContentOfListItem","otherIndex","otherEvent","subevents","more","_movePreviousLineEndings","Parser","doc","fromMarkdown","wrap","trough","fns","middleware","params","callback","invoked","then","bail","plain","vfile","frozen","attachers","transformers","namespace","freezeIndex","processor","assertUnfrozen","addPlugin","addList","addPreset","plugins","plugin","entry","find","file","assertParser","newable","assertCompiler","assertNode","run","runSync","complete","assertDone","process","processSync","destination","transformer","cb","Promise","executor","reject","pipeline","ctx","contents","keys","asyncName","VMessagePrototype","VMessage","proto","origin","range","parseOrigin","message","ruleId","fatal","proc","VFile","order","messages","history","cwd","assertPart","part","assertNonEmpty","assertPath","get","set","dirname","basename","extname","stem","fail","normalize","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","ext","firstNonSlashEnd","seenNonSlash","extIndex","unmatchedSlash","startDot","startPart","preDotState","joined","cache","num","substr","iterator","output","hasIterator","arr2","__esModule","ReferenceError","instance","Constructor","_defineProperties","descriptor","protoProps","staticProps","unsupportedIterableToArray","o","allowArrayLike","it","F","_e","normalCompletion","didErr","step","_e2","isNativeReflectConstruct","possibleConstructorReturn","Derived","hasNativeReflectConstruct","Super","NewTarget","Reflect","superPropBase","_get","bind","receiver","desc","_getPrototypeOf","setPrototypeOf","__proto__","subClass","superClass","sham","Proxy","valueOf","_s","_arr","_n","_d","_typeof","assertThisInitialized","_setPrototypeOf","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arrayLikeToArray","minLen","tokens","padRight","padLeft","decodeNamedCharacterReference","hasProperty","properties","headingRank","convertElement","POSITIVE_INFINITY","tagNameFactory","anyFactory","castFactory","tests","checks","thing","subvalue","defaultTagName","buttonTypes","Set","core","schema","caseSensitive","createAdjustMap","isProperties","addProperty","addChild","has","isNaN","spaceSeparated","spaces","commaSeparated","commas","commaOrSpaceSeparated","parsePrimitive","finalResult","nodes","boolean","overloadedBoolean","blankLine","syntaxExtension","decodeNumericCharacterReference","characterEscapeOrReference","decodeString","$2","head","characterEntitiesLegacy","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","parseEntities","indent","additional","queue","following","begin","characterReferenceCharacters","terminated","namedReference","diff","nonTerminated","warning","attribute","referenceCode","prohibited","disallowed","flush","referenceContext","warningContext","textContext","Schema","normal","space","merge","definitions","DefinedInfo","transform","attributes","mustUseProperty","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","align","aLink","archive","axis","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","Type","Info","rest","camelcase","dashes","kebab","hastToReact","types","mark","powers","increment","VFileMessage","place","actual","note","segments","isUrl","fileURLOrPath","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","stored","_toArray","iterableToArray","toStringTag","fnExpectsCallback","exception","middlewareIndex","middelware","attacher","isPlainObj","looksLikeAVFile","includeImageAlt","lineStartOffset","item","checkNewContainers","closeFlow","indexBeforeExits","indexBeforeFlow","_gfmTableDynamicInterruptHack","thereIsANewContainer","thereIsNoNewContainer","writeToChild","eof","_isInFirstContentOfListItem","current","breaks","expandTabs","def","handleMapOfConstructs","afterStartPrefix","indentedContent","htmlLineEnd","nonLazyLine","attentionMarkers","resolveText","defaultOnError","errorHandler","onExitError","ancestor","defaultConstructs","preprocess","combined","clean","augment","passThrough","returnNode","unknownHandler","normalizeUri","skip","encodeURIComponent","loose","footnoteReference","counter","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","revert","subtype","listItemLoose","trimLine","codePointAt","break","delete","footnote","footnoteById","no","dangerous","listLoose","wrapped","table","row","out","cellIndex","cell","pointStart","pointEnd","last","trimLines","toml","ignore","yaml","footnoteDefinition","factory","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","visit","hName","hProperties","hChildren","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","tailTail","dataFootnotes","footer","bridge","mutate","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","tableElements","childrenToReact","childIndex","toReact","skipHtml","parentSchema","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","uri","first","colon","propTypes","nextChild","nextNode","getCommentObject","param","forEach","keyName","propertiesHandle","defaultAttrs","rehyp","defaultOptions","opts","firstChild","prevChild","contentDefaults","rehypeAutolinkHeadings","behavior","behaviour","around","inject","toChildren","SKIP","grouping","toNode","openDelimiter","closeDelimiter","rehypePrismGenerator","refractor","visitor","refractorRoot","startLineNum","classListItem","rootLang","highlight","ignoreMissing","addNodePosition","ast","numLines","entries","initialLineNum","shouldHighlightLine","RE","parsedMeta","strlineNumbers","lineNumbers","rangeParser","startingLineNumber","groups","codeLineArray","falseShowLineNumbersStr","treeExtract","convert","cascade","preorder","showLineNumbers","substring","rehypePrismAll","refractorCommon","refractorAll","webNamespaces","mathml","nodeName","namespaceURI","childNodes","sourceCodeLocation","endTag","verbose","opening","closing","createLocation","quirksMode","loc","indices","toPoint","toOffset","startLine","startCol","endLine","endCol","endOffset","isFile","ns","toH","react","_isVue","vue","vd","vdom","hyperscript","addAttribute","subprop","p5","patch","parentNode","doctype","publicId","systemId","htmlVoidElements","endTagToken","parseOptions","sourceCodeLocationInfo","scriptingEnabled","stitches","posTracker","locationTracker","resetTokenizer","_processToken","createParse5Location","chars","forceQuirks","lastGapPos","lastCharPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","isEol","lineStartPos","droppedBufferSize","col","currentAttrLocation","ctLoc","_runParsingLoop","_consume","stitch","fromParse5","documentMode","treeAdapter","createDocument","_bootstrap","__mixins","mock","_pushTmplInsertionMode","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","_adoptNodes","currentCharacterToken","tokenQueue","charRefCode","tempBuff","lastStartTagName","consumedAfterSnapshot","active","currentToken","currentAttr","selfClosing","rehypeRaw","ltrRange","rtl","ltr","enterState","dirInferred","found","currentDirection","editableOrEditingHost","dirProperty","dirBidi","EXIT","query","descendant","indexedSearch","nest","_1","_2","firstElementOnly","elementsBefore","elements","elementsByTypeBefore","delayed","elementIndex","typeIndex","elementCount","typeCount","tags","ranges","cast","matches","rightIndex","leftIndex","tag","extendedFilter","someChildren","_3","empty","enabled","assertDeep","scopeElements","appendScope","not","optional","readWrite","needsIndex","normalizeValue","collector","Collector","collectAll","ruleSet","collect","ZERO","NINE","nthCheck","formula","parsed","boolbase","absA","abs","bMod","idx","sign","readSign","readNumber","fauxEsmNthCheck","nth","selectAll","getCodeString","rewrite","slugs","Slugger","rehypeSlug","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","tokenizeStrikethrough","resolveAllStrikethrough","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","gfm","ccount","findAndReplace","ignored","pairs","toExpression","toFunction","toPairs","pairIndex","visitParents","parents","grandparent","change","matchObject","global","escape","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","isCorrectDomain","closingParenIndex","openingParens","closingParens","trail","trailExec","splitUrl","email","track","options_","lineShift","move","shift","containerFlow","indexStack","tracker","bulletLastUsed","gfmFootnoteToMarkdown","containerPhrasing","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","handleDelete","serialize","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","tableRow","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","serializeData","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","bulletCurrent","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","gfmFromMarkdown","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","remarkGfm","typeFactory","propsFactory","reverse","subresult","grandparents","toResult"],"sourceRoot":""}