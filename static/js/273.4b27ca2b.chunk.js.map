{"version":3,"file":"static/js/273.4b27ca2b.chunk.js","mappings":"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/7B,MAAMvH,EAAM,EAAI,GAAIA,EAAM,GAAK,GAC3E,CAEA,OAAOihC,EAAAA,EAAAA,GAA8BqC,IAAOvqB,CAC9C,qCCjCO,SAAS4J,EAAoBxjB,GAClC,OACEA,EACGwG,QAAQ,cAAe,KACvBA,QAAQ,SAAU,IAMlBid,cACApI,aAEP,oECLO,SAAS8N,EAAWjD,EAAYrE,EAAQlO,GAK7C,IAHA,IAAM0iB,EAAS,GACXnjB,GAAS,IAEJA,EAAQgT,EAAWnoB,QAAQ,CAClC,IAAMqvB,EAAUlH,EAAWhT,GAAOiW,WAE9BiE,IAAYiJ,EAAO3sB,SAAS0jB,KAC9BvL,EAASuL,EAAQvL,EAAQlO,GACzB0iB,EAAOz0B,KAAKwrB,GAEhB,CAEA,OAAOvL,CACT,oGCxBO,IAAMwiB,EAA0B,CACrC,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QC1GWC,EAA4B,CACvC,EAAG,SACH,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,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","sources":["../../node_modules/babel-plugin-transform-remove-imports/lib/index.js","../../node_modules/boolbase/index.js","../../node_modules/css-selector-parser/lib/index.js","../../node_modules/css-selector-parser/lib/parser-context.js","../../node_modules/css-selector-parser/lib/render.js","../../node_modules/css-selector-parser/lib/utils.js","../../node_modules/extend/index.js","../../node_modules/inline-style-parser/index.js","../../node_modules/is-buffer/index.js","../../node_modules/markdown-react-code-preview-loader/src/utils/index.ts","../../node_modules/parse-numeric-range/index.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/react-code-preview-layout/src/icons.tsx","../../node_modules/react-code-preview-layout/src/Copied.tsx","../../node_modules/react-code-preview-layout/src/index.tsx","../../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/react-markdown/node_modules/react-is/index.js","../../node_modules/remark-stringify/index.js","../../node_modules/remark-stringify/node_modules/longest-streak/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/configure.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/break.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/code.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/definition.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/heading.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/html.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/image.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/link.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/list.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/root.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/strong.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/text.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/join.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/unsafe.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-rule-repeat.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-string/index.js","../../node_modules/remark-stringify/node_modules/parse-entities/decode-entity.browser.js","../../node_modules/remark-stringify/node_modules/zwitch/index.js","../../node_modules/remark/index.js","../../node_modules/remark/node_modules/bail/index.js","../../node_modules/remark/node_modules/is-plain-obj/index.js","../../node_modules/remark/node_modules/mdast-util-from-markdown/dist/index.js","../../node_modules/remark/node_modules/mdast-util-from-markdown/index.js","../../node_modules/remark/node_modules/mdast-util-to-string/index.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-alpha.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-alphanumeric.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-atext.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-control.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-digit.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-hex-digit.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-punctuation.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-line-ending-or-space.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-line-ending.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-space.js","../../node_modules/remark/node_modules/micromark/dist/character/unicode-punctuation.js","../../node_modules/remark/node_modules/micromark/dist/character/unicode-whitespace.js","../../node_modules/remark/node_modules/micromark/dist/constant/assign.js","../../node_modules/remark/node_modules/micromark/dist/constant/from-char-code.js","../../node_modules/remark/node_modules/micromark/dist/constant/has-own-property.js","../../node_modules/remark/node_modules/micromark/dist/constant/html-block-names.js","../../node_modules/remark/node_modules/micromark/dist/constant/html-raw-names.js","../../node_modules/remark/node_modules/micromark/dist/constant/splice.js","../../node_modules/remark/node_modules/micromark/dist/constant/unicode-punctuation-regex.js","../../node_modules/remark/node_modules/micromark/dist/constructs.js","../../node_modules/remark/node_modules/micromark/dist/initialize/content.js","../../node_modules/remark/node_modules/micromark/dist/initialize/document.js","../../node_modules/remark/node_modules/micromark/dist/initialize/flow.js","../../node_modules/remark/node_modules/micromark/dist/initialize/text.js","../../node_modules/remark/node_modules/micromark/dist/parse.js","../../node_modules/remark/node_modules/micromark/dist/postprocess.js","../../node_modules/remark/node_modules/micromark/dist/preprocess.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/attention.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/autolink.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/block-quote.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/character-escape.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/character-reference.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-fenced.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-indented.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-text.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/content.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/definition.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-destination.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-label.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-space.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-title.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-whitespace.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/hard-break-escape.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/heading-atx.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/html-flow.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/html-text.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-end.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-start-image.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-start-link.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/line-ending.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/list.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/partial-blank-line.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/setext-underline.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/thematic-break.js","../../node_modules/remark/node_modules/micromark/dist/util/chunked-push.js","../../node_modules/remark/node_modules/micromark/dist/util/chunked-splice.js","../../node_modules/remark/node_modules/micromark/dist/util/classify-character.js","../../node_modules/remark/node_modules/micromark/dist/util/combine-extensions.js","../../node_modules/remark/node_modules/micromark/dist/util/create-tokenizer.js","../../node_modules/remark/node_modules/micromark/dist/util/miniflat.js","../../node_modules/remark/node_modules/micromark/dist/util/move-point.js","../../node_modules/remark/node_modules/micromark/dist/util/normalize-identifier.js","../../node_modules/remark/node_modules/micromark/dist/util/prefix-size.js","../../node_modules/remark/node_modules/micromark/dist/util/regex-check.js","../../node_modules/remark/node_modules/micromark/dist/util/resolve-all.js","../../node_modules/remark/node_modules/micromark/dist/util/safe-from-int.js","../../node_modules/remark/node_modules/micromark/dist/util/serialize-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/shallow.js","../../node_modules/remark/node_modules/micromark/dist/util/size-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/slice-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/subtokenize.js","../../node_modules/remark/node_modules/parse-entities/decode-entity.browser.js","../../node_modules/remark/node_modules/remark-parse/index.js","../../node_modules/remark/node_modules/trough/index.js","../../node_modules/remark/node_modules/trough/wrap.js","../../node_modules/remark/node_modules/unified/index.js","../../node_modules/remark/node_modules/unist-util-stringify-position/index.js","../../node_modules/remark/node_modules/vfile-message/index.js","../../node_modules/remark/node_modules/vfile/index.js","../../node_modules/remark/node_modules/vfile/lib/core.js","../../node_modules/remark/node_modules/vfile/lib/index.js","../../node_modules/remark/node_modules/vfile/lib/minpath.browser.js","../../node_modules/remark/node_modules/vfile/lib/minproc.browser.js","../../node_modules/repeat-string/index.js","../../node_modules/style-to-object/index.js","../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../../node_modules/@babel/runtime/helpers/classCallCheck.js","../../node_modules/@babel/runtime/helpers/createClass.js","../../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../../node_modules/@babel/runtime/helpers/createSuper.js","../../node_modules/@babel/runtime/helpers/defineProperty.js","../../node_modules/@babel/runtime/helpers/get.js","../../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../../node_modules/@babel/runtime/helpers/inherits.js","../../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../../node_modules/@babel/runtime/helpers/nonIterableRest.js","../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../../node_modules/@babel/runtime/helpers/slicedToArray.js","../../node_modules/@babel/runtime/helpers/superPropBase.js","../../node_modules/@babel/runtime/helpers/toPrimitive.js","../../node_modules/@babel/runtime/helpers/toPropertyKey.js","../../node_modules/@babel/runtime/helpers/typeof.js","../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../../node_modules/comma-separated-tokens/index.js","../../node_modules/decode-named-character-reference/index.dom.js","../../node_modules/hast-util-has-property/lib/index.js","../../node_modules/hast-util-heading-rank/lib/index.js","../../node_modules/hast-util-to-string/index.js","../../node_modules/hast-util-whitespace/index.js","../../node_modules/hast-util-parse-selector/lib/index.js","../../node_modules/hastscript/lib/core.js","../../node_modules/hastscript/lib/html.js","../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../node_modules/micromark-factory-space/index.js","../../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../../node_modules/micromark-util-character/index.js","../../node_modules/micromark-util-chunked/index.js","../../node_modules/micromark-util-classify-character/index.js","../../node_modules/micromark-util-combine-extensions/index.js","../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../node_modules/micromark-util-decode-string/index.js","../../node_modules/micromark-util-normalize-identifier/index.js","../../node_modules/micromark-util-resolve-all/index.js","../../node_modules/character-entities-legacy/index.js","../../node_modules/character-reference-invalid/index.js","../../node_modules/is-decimal/index.js","../../node_modules/is-hexadecimal/index.js","../../node_modules/is-alphanumerical/index.js","../../node_modules/is-alphabetical/index.js","../../node_modules/parse-entities/lib/index.js","../../node_modules/property-information/lib/util/schema.js","../../node_modules/property-information/lib/util/merge.js","../../node_modules/property-information/lib/util/create.js","../../node_modules/property-information/lib/xlink.js","../../node_modules/property-information/lib/xml.js","../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/property-information/lib/xmlns.js","../../node_modules/property-information/lib/aria.js","../../node_modules/property-information/lib/html.js","../../node_modules/property-information/lib/svg.js","../../node_modules/property-information/index.js","../../node_modules/property-information/lib/find.js","../../node_modules/property-information/lib/normalize.js","../../node_modules/property-information/lib/util/defined-info.js","../../node_modules/property-information/lib/util/info.js","../../node_modules/property-information/lib/util/types.js","../../node_modules/unist-util-stringify-position/lib/index.js","../../node_modules/vfile-message/lib/index.js","../../node_modules/vfile/lib/minpath.browser.js","../../node_modules/vfile/lib/minproc.browser.js","../../node_modules/vfile/lib/minurl.shared.js","../../node_modules/vfile/lib/minurl.browser.js","../../node_modules/vfile/lib/index.js","../../node_modules/bail/index.js","../../node_modules/unified/node_modules/is-plain-obj/index.js","../../node_modules/trough/index.js","../../node_modules/unified/lib/index.js","../../node_modules/mdast-util-to-string/lib/index.js","../../node_modules/micromark/lib/initialize/content.js","../../node_modules/micromark/lib/initialize/document.js","../../node_modules/micromark-util-subtokenize/index.js","../../node_modules/micromark-core-commonmark/lib/content.js","../../node_modules/micromark/lib/initialize/flow.js","../../node_modules/micromark/lib/initialize/text.js","../../node_modules/micromark/lib/create-tokenizer.js","../../node_modules/micromark-core-commonmark/lib/thematic-break.js","../../node_modules/micromark-core-commonmark/lib/list.js","../../node_modules/micromark-core-commonmark/lib/block-quote.js","../../node_modules/micromark-factory-destination/index.js","../../node_modules/micromark-factory-label/index.js","../../node_modules/micromark-factory-title/index.js","../../node_modules/micromark-factory-whitespace/index.js","../../node_modules/micromark-core-commonmark/lib/definition.js","../../node_modules/micromark-core-commonmark/lib/code-indented.js","../../node_modules/micromark-core-commonmark/lib/heading-atx.js","../../node_modules/micromark-core-commonmark/lib/setext-underline.js","../../node_modules/micromark-util-html-tag-name/index.js","../../node_modules/micromark-core-commonmark/lib/html-flow.js","../../node_modules/micromark-core-commonmark/lib/code-fenced.js","../../node_modules/micromark-core-commonmark/lib/character-reference.js","../../node_modules/micromark-core-commonmark/lib/character-escape.js","../../node_modules/micromark-core-commonmark/lib/line-ending.js","../../node_modules/micromark-core-commonmark/lib/label-end.js","../../node_modules/micromark-core-commonmark/lib/label-start-image.js","../../node_modules/micromark-core-commonmark/lib/attention.js","../../node_modules/micromark-core-commonmark/lib/autolink.js","../../node_modules/micromark-core-commonmark/lib/html-text.js","../../node_modules/micromark-core-commonmark/lib/label-start-link.js","../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../node_modules/micromark-core-commonmark/lib/code-text.js","../../node_modules/micromark/lib/constructs.js","../../node_modules/micromark/lib/preprocess.js","../../node_modules/mdast-util-from-markdown/lib/index.js","../../node_modules/micromark/lib/postprocess.js","../../node_modules/micromark/lib/parse.js","../../node_modules/remark-parse/index.js","../../node_modules/remark-parse/lib/index.js","../../node_modules/micromark-util-sanitize-uri/index.js","../../node_modules/mdast-util-definitions/lib/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../node_modules/mdast-util-to-hast/lib/revert.js","../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../node_modules/trim-lines/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../node_modules/mdast-util-to-hast/lib/handlers/break.js","../../node_modules/mdast-util-to-hast/lib/handlers/code.js","../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../node_modules/mdast-util-to-hast/lib/handlers/html.js","../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/image.js","../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/link.js","../../node_modules/mdast-util-to-hast/lib/handlers/list.js","../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../node_modules/mdast-util-to-hast/lib/handlers/root.js","../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../node_modules/mdast-util-to-hast/lib/handlers/table.js","../../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../../node_modules/mdast-util-to-hast/lib/handlers/text.js","../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../node_modules/mdast-util-to-hast/lib/state.js","../../node_modules/unist-util-generated/lib/index.js","../../node_modules/mdast-util-to-hast/lib/index.js","../../node_modules/mdast-util-to-hast/lib/footer.js","../../node_modules/remark-rehype/lib/index.js","../../node_modules/react-markdown/lib/rehype-filter.js","../../node_modules/property-information/lib/hast-to-react.js","../../node_modules/style-to-object/index.mjs","../../node_modules/react-markdown/lib/uri-transformer.js","../../node_modules/react-markdown/lib/ast-to-react.js","../../node_modules/react-markdown/lib/react-markdown.js","../../node_modules/rehype-attr/src/utils.ts","../../node_modules/rehype-attr/src/index.ts","../../node_modules/hast-util-is-element/index.js","../../node_modules/rehype-autolink-headings/lib/index.js","../../node_modules/rehype-ignore/src/index.ts","../../node_modules/unist-util-filter/lib/index.js","../../src/generator.js","../../src/all.js","../../src/common.js","../../node_modules/hastscript/lib/svg.js","../../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../../node_modules/web-namespaces/index.js","../../node_modules/hast-util-from-parse5/lib/index.js","../../node_modules/vfile-location/lib/index.js","../../node_modules/hast-util-to-parse5/lib/index.js","../../node_modules/html-void-elements/index.js","../../node_modules/hast-util-raw/lib/index.js","../../node_modules/rehype-raw/index.js","../../node_modules/direction/index.js","../../node_modules/hast-util-select/lib/enter-state.js","../../node_modules/hast-util-select/lib/attribute.js","../../node_modules/bcp-47-match/index.js","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/parse.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/compile.ts","../../node_modules/hast-util-select/lib/pseudo.js","../../node_modules/hast-util-select/lib/test.js","../../node_modules/hast-util-select/lib/name.js","../../node_modules/hast-util-select/lib/class-name.js","../../node_modules/hast-util-select/lib/id.js","../../node_modules/hast-util-select/lib/walk.js","../../node_modules/hast-util-select/lib/parse.js","../../node_modules/hast-util-select/lib/index.js","../../node_modules/rehype-rewrite/src/index.ts","../../node_modules/github-slugger/regex.js","../../node_modules/github-slugger/index.js","../../node_modules/rehype-slug/index.js","../../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../../node_modules/micromark-extension-gfm-table/lib/syntax.js","../../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../../node_modules/ccount/index.js","../../node_modules/mdast-util-find-and-replace/lib/index.js","../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/mdast-util-to-markdown/lib/util/track.js","../../node_modules/mdast-util-gfm-footnote/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/markdown-table/index.js","../../node_modules/mdast-util-gfm-table/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../../node_modules/remark-gfm/index.js","../../node_modules/micromark-extension-gfm/index.js","../../node_modules/mdast-util-gfm/lib/index.js","../../node_modules/space-separated-tokens/index.js","../../node_modules/unist-util-is/lib/index.js","../../node_modules/unist-util-position/lib/index.js","../../node_modules/unist-util-visit-parents/lib/index.js","../../node_modules/unist-util-visit/lib/index.js","../../node_modules/zwitch/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nfunction _default() {\n  return {\n    name: 'transform-remove-imports',\n    visitor: {\n      // https://babeljs.io/docs/en/babel-types#callexpression\n      CallExpression: function CallExpression(path, state) {\n        var node = path.node;\n\n        if (node.callee.name !== 'require') {\n          return;\n        }\n\n        var argument = node.arguments[0];\n        var moduleId = argument.value;\n        var options = state.opts;\n\n        if (options.test && !testMatches(moduleId, options.test)) {\n          return;\n        }\n\n        var parentType = path.parentPath.node.type; // In remove effects mode we should delete only requires that are\n        // simple expression statements\n\n        if (options.remove === 'effects' && parentType !== 'ExpressionStatement') {\n          return;\n        }\n\n        path.remove();\n      },\n      // https://babeljs.io/docs/en/babel-types#importdeclaration\n      ImportDeclaration: function ImportDeclaration(path, state) {\n        var node = path.node;\n        var source = node.source;\n        var opts = state.opts;\n\n        if (opts.removeAll) {\n          path.remove();\n          return;\n        }\n\n        if (!opts.test) {\n          console.warn('transform-remove-imports: \"test\" option should be specified');\n          return;\n        }\n        /** @var {string} importName */\n\n\n        var importName = source && source.value ? source.value : undefined;\n        var isMatch = testMatches(importName, opts.test); // https://github.com/uiwjs/babel-plugin-transform-remove-imports/issues/3\n\n        if (opts.remove === 'effects') {\n          if (node.specifiers && node.specifiers.length === 0 && importName && isMatch) {\n            path.remove();\n          }\n\n          return;\n        }\n\n        if (importName && isMatch) {\n          path.remove();\n        }\n      }\n    }\n  };\n}\n/**\n * Determines if the import matches the specified tests.\n *\n * @param {string} importName\n * @param {RegExp|RegExp[]|string|string[]} test\n * @returns {Boolean}\n */\n\n\nfunction testMatches(importName, test) {\n  // Normalizing tests\n  var tests = Array.isArray(test) ? test : [test]; // Finding out if at least one test matches\n\n  return tests.some(function (regex) {\n    if (typeof regex === 'string') {\n      regex = new RegExp(regex);\n    }\n\n    return regex.test(importName || '');\n  });\n}","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_context_1 = require(\"./parser-context\");\nvar render_1 = require(\"./render\");\nvar CssSelectorParser = /** @class */ (function () {\n    function CssSelectorParser() {\n        this.pseudos = {};\n        this.attrEqualityMods = {};\n        this.ruleNestingOperators = {};\n        this.substitutesEnabled = false;\n    }\n    CssSelectorParser.prototype.registerSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_1 = pseudos; _a < pseudos_1.length; _a++) {\n            var pseudo = pseudos_1[_a];\n            this.pseudos[pseudo] = 'selector';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_2 = pseudos; _a < pseudos_2.length; _a++) {\n            var pseudo = pseudos_2[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_3 = pseudos; _a < pseudos_3.length; _a++) {\n            var pseudo = pseudos_3[_a];\n            this.pseudos[pseudo] = 'numeric';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_4 = pseudos; _a < pseudos_4.length; _a++) {\n            var pseudo = pseudos_4[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_1 = operators; _a < operators_1.length; _a++) {\n            var operator = operators_1[_a];\n            this.ruleNestingOperators[operator] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_2 = operators; _a < operators_2.length; _a++) {\n            var operator = operators_2[_a];\n            delete this.ruleNestingOperators[operator];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_1 = mods; _a < mods_1.length; _a++) {\n            var mod = mods_1[_a];\n            this.attrEqualityMods[mod] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_2 = mods; _a < mods_2.length; _a++) {\n            var mod = mods_2[_a];\n            delete this.attrEqualityMods[mod];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.enableSubstitutes = function () {\n        this.substitutesEnabled = true;\n        return this;\n    };\n    CssSelectorParser.prototype.disableSubstitutes = function () {\n        this.substitutesEnabled = false;\n        return this;\n    };\n    CssSelectorParser.prototype.parse = function (str) {\n        return parser_context_1.parseCssSelector(str, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);\n    };\n    CssSelectorParser.prototype.render = function (path) {\n        return render_1.renderEntity(path).trim();\n    };\n    return CssSelectorParser;\n}());\nexports.CssSelectorParser = CssSelectorParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction parseCssSelector(str, pos, pseudos, attrEqualityMods, ruleNestingOperators, substitutesEnabled) {\n    var l = str.length;\n    var chr = '';\n    function getStr(quote, escapeTable) {\n        var result = '';\n        pos++;\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (chr === quote) {\n                pos++;\n                return result;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                chr = str.charAt(pos);\n                var esc = void 0;\n                if (chr === quote) {\n                    result += quote;\n                }\n                else if ((esc = escapeTable[chr]) !== undefined) {\n                    result += esc;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                result += chr;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function getIdent() {\n        var result = '';\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (utils_1.isIdent(chr)) {\n                result += chr;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                if (pos >= l) {\n                    throw Error('Expected symbol but end of file reached.');\n                }\n                chr = str.charAt(pos);\n                if (utils_1.identSpecialChars[chr]) {\n                    result += chr;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                return result;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function skipWhitespace() {\n        chr = str.charAt(pos);\n        var result = false;\n        while (chr === ' ' || chr === \"\\t\" || chr === \"\\n\" || chr === \"\\r\" || chr === \"\\f\") {\n            result = true;\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function parse() {\n        var res = parseSelector();\n        if (pos < l) {\n            throw Error('Rule expected but \"' + str.charAt(pos) + '\" found.');\n        }\n        return res;\n    }\n    function parseSelector() {\n        var selector = parseSingleSelector();\n        if (!selector) {\n            return null;\n        }\n        var res = selector;\n        chr = str.charAt(pos);\n        while (chr === ',') {\n            pos++;\n            skipWhitespace();\n            if (res.type !== 'selectors') {\n                res = {\n                    type: 'selectors',\n                    selectors: [selector]\n                };\n            }\n            selector = parseSingleSelector();\n            if (!selector) {\n                throw Error('Rule expected after \",\".');\n            }\n            res.selectors.push(selector);\n        }\n        return res;\n    }\n    function parseSingleSelector() {\n        skipWhitespace();\n        var selector = {\n            type: 'ruleSet'\n        };\n        var rule = parseRule();\n        if (!rule) {\n            return null;\n        }\n        var currentRule = selector;\n        while (rule) {\n            rule.type = 'rule';\n            currentRule.rule = rule;\n            currentRule = rule;\n            skipWhitespace();\n            chr = str.charAt(pos);\n            if (pos >= l || chr === ',' || chr === ')') {\n                break;\n            }\n            if (ruleNestingOperators[chr]) {\n                var op = chr;\n                pos++;\n                skipWhitespace();\n                rule = parseRule();\n                if (!rule) {\n                    throw Error('Rule expected after \"' + op + '\".');\n                }\n                rule.nestingOperator = op;\n            }\n            else {\n                rule = parseRule();\n                if (rule) {\n                    rule.nestingOperator = null;\n                }\n            }\n        }\n        return selector;\n    }\n    // @ts-ignore no-overlap\n    function parseRule() {\n        var rule = null;\n        while (pos < l) {\n            chr = str.charAt(pos);\n            if (chr === '*') {\n                pos++;\n                (rule = rule || {}).tagName = '*';\n            }\n            else if (utils_1.isIdentStart(chr) || chr === '\\\\') {\n                (rule = rule || {}).tagName = getIdent();\n            }\n            else if (chr === '.') {\n                pos++;\n                rule = rule || {};\n                (rule.classNames = rule.classNames || []).push(getIdent());\n            }\n            else if (chr === '#') {\n                pos++;\n                (rule = rule || {}).id = getIdent();\n            }\n            else if (chr === '[') {\n                pos++;\n                skipWhitespace();\n                var attr = {\n                    name: getIdent()\n                };\n                skipWhitespace();\n                // @ts-ignore\n                if (chr === ']') {\n                    pos++;\n                }\n                else {\n                    var operator = '';\n                    if (attrEqualityMods[chr]) {\n                        operator = chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \"=\" but end of file reached.');\n                    }\n                    if (chr !== '=') {\n                        throw Error('Expected \"=\" but \"' + chr + '\" found.');\n                    }\n                    attr.operator = operator + '=';\n                    pos++;\n                    skipWhitespace();\n                    var attrValue = '';\n                    attr.valueType = 'string';\n                    // @ts-ignore\n                    if (chr === '\"') {\n                        attrValue = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (chr === '\\'') {\n                        attrValue = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (substitutesEnabled && chr === '$') {\n                        pos++;\n                        attrValue = getIdent();\n                        attr.valueType = 'substitute';\n                    }\n                    else {\n                        while (pos < l) {\n                            if (chr === ']') {\n                                break;\n                            }\n                            attrValue += chr;\n                            pos++;\n                            chr = str.charAt(pos);\n                        }\n                        attrValue = attrValue.trim();\n                    }\n                    skipWhitespace();\n                    if (pos >= l) {\n                        throw Error('Expected \"]\" but end of file reached.');\n                    }\n                    if (chr !== ']') {\n                        throw Error('Expected \"]\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    attr.value = attrValue;\n                }\n                rule = rule || {};\n                (rule.attrs = rule.attrs || []).push(attr);\n            }\n            else if (chr === ':') {\n                pos++;\n                var pseudoName = getIdent();\n                var pseudo = {\n                    name: pseudoName\n                };\n                // @ts-ignore\n                if (chr === '(') {\n                    pos++;\n                    var value = '';\n                    skipWhitespace();\n                    if (pseudos[pseudoName] === 'selector') {\n                        pseudo.valueType = 'selector';\n                        value = parseSelector();\n                    }\n                    else {\n                        pseudo.valueType = pseudos[pseudoName] || 'string';\n                        // @ts-ignore\n                        if (chr === '\"') {\n                            value = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (chr === '\\'') {\n                            value = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (substitutesEnabled && chr === '$') {\n                            pos++;\n                            value = getIdent();\n                            pseudo.valueType = 'substitute';\n                        }\n                        else {\n                            while (pos < l) {\n                                if (chr === ')') {\n                                    break;\n                                }\n                                value += chr;\n                                pos++;\n                                chr = str.charAt(pos);\n                            }\n                            value = value.trim();\n                        }\n                        skipWhitespace();\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \")\" but end of file reached.');\n                    }\n                    if (chr !== ')') {\n                        throw Error('Expected \")\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    pseudo.value = value;\n                }\n                rule = rule || {};\n                (rule.pseudos = rule.pseudos || []).push(pseudo);\n            }\n            else {\n                break;\n            }\n        }\n        return rule;\n    }\n    return parse();\n}\nexports.parseCssSelector = parseCssSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction renderEntity(entity) {\n    var res = '';\n    switch (entity.type) {\n        case 'ruleSet':\n            var currentEntity = entity.rule;\n            var parts = [];\n            while (currentEntity) {\n                if (currentEntity.nestingOperator) {\n                    parts.push(currentEntity.nestingOperator);\n                }\n                parts.push(renderEntity(currentEntity));\n                currentEntity = currentEntity.rule;\n            }\n            res = parts.join(' ');\n            break;\n        case 'selectors':\n            res = entity.selectors.map(renderEntity).join(', ');\n            break;\n        case 'rule':\n            if (entity.tagName) {\n                if (entity.tagName === '*') {\n                    res = '*';\n                }\n                else {\n                    res = utils_1.escapeIdentifier(entity.tagName);\n                }\n            }\n            if (entity.id) {\n                res += \"#\" + utils_1.escapeIdentifier(entity.id);\n            }\n            if (entity.classNames) {\n                res += entity.classNames.map(function (cn) {\n                    return \".\" + (utils_1.escapeIdentifier(cn));\n                }).join('');\n            }\n            if (entity.attrs) {\n                res += entity.attrs.map(function (attr) {\n                    if ('operator' in attr) {\n                        if (attr.valueType === 'substitute') {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + \"$\" + attr.value + \"]\";\n                        }\n                        else {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + utils_1.escapeStr(attr.value) + \"]\";\n                        }\n                    }\n                    else {\n                        return \"[\" + utils_1.escapeIdentifier(attr.name) + \"]\";\n                    }\n                }).join('');\n            }\n            if (entity.pseudos) {\n                res += entity.pseudos.map(function (pseudo) {\n                    if (pseudo.valueType) {\n                        if (pseudo.valueType === 'selector') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + renderEntity(pseudo.value) + \")\";\n                        }\n                        else if (pseudo.valueType === 'substitute') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"($\" + pseudo.value + \")\";\n                        }\n                        else if (pseudo.valueType === 'numeric') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + pseudo.value + \")\";\n                        }\n                        else {\n                            return (\":\" + utils_1.escapeIdentifier(pseudo.name) +\n                                \"(\" + utils_1.escapeIdentifier(pseudo.value) + \")\");\n                        }\n                    }\n                    else {\n                        return \":\" + utils_1.escapeIdentifier(pseudo.name);\n                    }\n                }).join('');\n            }\n            break;\n        default:\n            throw Error('Unknown entity type: \"' + entity.type + '\".');\n    }\n    return res;\n}\nexports.renderEntity = renderEntity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c === '-') || (c === '_');\n}\nexports.isIdentStart = isIdentStart;\nfunction isIdent(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '-' || c === '_';\n}\nexports.isIdent = isIdent;\nfunction isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexports.isHex = isHex;\nfunction escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (exports.identSpecialChars[chr]) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (!(chr === '_' || chr === '-' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (i !== 0 && chr >= '0' && chr <= '9'))) {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xF800) === 0xD800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xFC00) !== 0xD800 || (extraCharCode & 0xFC00) !== 0xDC00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3FF) << 10) + (extraCharCode & 0x3FF) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n            else {\n                result += chr;\n            }\n        }\n        i++;\n    }\n    return result;\n}\nexports.escapeIdentifier = escapeIdentifier;\nfunction escapeStr(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    var replacement;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if ((replacement = exports.strReplacementsRev[chr]) !== undefined) {\n            chr = replacement;\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\" + result + \"\\\"\";\n}\nexports.escapeStr = escapeStr;\nexports.identSpecialChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    '$': true,\n    '%': true,\n    '&': true,\n    '\\'': true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexports.strReplacementsRev = {\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t',\n    '\\f': '\\\\f',\n    '\\v': '\\\\v'\n};\nexports.singleQuoteEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\\'': '\\''\n};\nexports.doubleQuotesEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\"': '\"'\n};\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","import { Parent, Node } from 'unist';\nimport webpack from 'webpack';\nimport remark from 'remark';\nimport { getTransformValue } from './transform';\nimport { Options, FUNNAME_PREFIX, CodeBlockItem, CodeBlockData } from '../';\n\n/**\n * Creates an object containing the parameters of the current URL.\n *\n * ```js\n * getURLParameters('name=Adam&surname=Smith');\n * // 👉 {name: 'Adam', surname: 'Smith'}\n * ```\n * @param url `name=Adam&surname=Smith`\n * @returns\n */\nexport const getURLParameters = (url: string): Record<string, string> => {\n  const regex = /([^?=&]+)=([^&]*)/g;\n  const params: Record<string, string> = {};\n  let match;\n  while ((match = regex.exec(url))) {\n    params[match[1]] = match[2];\n  }\n  return params;\n};\n\nexport interface MarkdownDataChild extends Node {\n  lang: string;\n  meta: string;\n  value: string;\n}\n\nexport interface MarkdownParseData extends Parent<MarkdownDataChild> {}\n\n/** 转换 代码*/\nexport const getProcessor = (source: string) => {\n  try {\n    const child = remark.parse(source) as MarkdownParseData;\n    return child.children;\n  } catch (err) {\n    console.warn(err);\n  }\n};\n\n/**\n * ```js\n * 'mdx:preview' => ''  // Empty\n * 'mdx:preview:demo12' => 'demo12' // return meta id => 'demo12'\n * ```\n * @param meta string\n * @returns string?\n */\nexport const getMetaId = (meta: string = '') => {\n  const [metaRaw = ''] = /mdx:(.[\\w|:]+)/i.exec(meta) || [];\n  return metaRaw.replace(/^mdx:preview:?/, '');\n};\n\n/**\n * ```js\n * isMeta('mdx:preview') => true\n * isMeta('mdx:preview:demo12') => true\n * isMeta('mdx:preview--demo12') => false\n * ```\n * @param meta\n * @returns boolean\n */\nexport const isMeta = (meta: string = '') => meta && meta.includes('mdx:preview');\n\n/** 获取需要渲染的代码块 **/\nexport function getCodeBlock(\n  child: MarkdownParseData['children'],\n  opts: Options = {},\n  resourcePath?: string,\n): CodeBlockData['data'] {\n  const { lang = ['jsx', 'tsx'] } = opts;\n  // 获取渲染部分\n  const codeBlock: Record<string | number, CodeBlockItem> = {};\n  child.forEach((item) => {\n    if (item && item.type === 'code' && lang.includes(item.lang)) {\n      const line = item.position.start.line;\n      const metaId = getMetaId(item.meta);\n      if (isMeta(item.meta)) {\n        let name = metaId || line;\n        const funName = `${resourcePath}.${FUNNAME_PREFIX}${name}`;\n        const returnCode = getTransformValue(item.value, `${funName}.${item.lang}`, opts);\n        codeBlock[name] = {\n          name,\n          meta: getURLParameters(item.meta),\n          code: returnCode,\n          language: item.lang,\n          value: item.value,\n        };\n      }\n    }\n  });\n  return codeBlock;\n}\n\n/**\n * `mdCodeModulesLoader` method for adding `markdown-react-code-preview-loader` to webpack config.\n * @param {webpack.Configuration} config webpack config\n * @param {string[]} lang Parsing language\n * @param {Options} option Loader Options\n * @returns {webpack.Configuration}\n */\nexport const mdCodeModulesLoader = (\n  config: webpack.Configuration,\n  lang?: string[],\n  option: Options = {},\n): webpack.Configuration => {\n  config.module.rules.forEach((ruleItem) => {\n    if (typeof ruleItem === 'object') {\n      if (ruleItem.oneOf) {\n        ruleItem.oneOf.unshift({\n          test: /.md$/,\n          use: [\n            {\n              loader: 'markdown-react-code-preview-loader',\n              options: { lang, ...option },\n            },\n          ],\n        });\n      }\n    }\n  });\n  return config;\n};\n","/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React from 'react';\n\nexport const ExpandIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path\n        d=\"M8.64 5.23a1 1 0 0 0-1.41.13l-5 6a1 1 0 0 0 0 1.27l4.83 6a1 1 0 0 0 .78.37 1 1 0 0 0 .78-1.63L4.29 12l4.48-5.36a1 1 0 0 0-.13-1.41zm13.14 6.14-4.78-6a1 1 0 0 0-1.41-.15 1 1 0 0 0-.15 1.41L19.71 12l-4.48 5.37a1 1 0 0 0 .13 1.41A1 1 0 0 0 16 19a1 1 0 0 0 .77-.36l5-6a1 1 0 0 0 .01-1.27z\"\n        data-name=\"code\"\n      />\n    </svg>\n  );\n};\nexport const CopyIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M18 21h-6a3 3 0 0 1-3-3v-6a3 3 0 0 1 3-3h6a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3zm-6-10a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1z\" />\n      <path d=\"M9.73 15H5.67A2.68 2.68 0 0 1 3 12.33V5.67A2.68 2.68 0 0 1 5.67 3h6.66A2.68 2.68 0 0 1 15 5.67V9.4h-2V5.67a.67.67 0 0 0-.67-.67H5.67a.67.67 0 0 0-.67.67v6.66a.67.67 0 0 0 .67.67h4.06z\" />\n    </svg>\n  );\n};\nexport const CopySuccessIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"green\">\n      <path d=\"M9.71 11.29a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 16a1 1 0 0 0 .72-.34l7-8a1 1 0 0 0-1.5-1.32L12 13.54z\" />\n      <path d=\"M21 11a1 1 0 0 0-1 1 8 8 0 0 1-8 8A8 8 0 0 1 6.33 6.36 7.93 7.93 0 0 1 12 4a8.79 8.79 0 0 1 1.9.22 1 1 0 1 0 .47-1.94A10.54 10.54 0 0 0 12 2a10 10 0 0 0-7 17.09A9.93 9.93 0 0 0 12 22a10 10 0 0 0 10-10 1 1 0 0 0-1-1z\" />\n    </svg>\n  );\n};\n","import { useState } from 'react';\nimport copyTextToClipboard from '@uiw/copy-to-clipboard';\nimport { CopyIcon, CopySuccessIcon } from './icons';\n\nexport const Copied = (props: { text?: string }) => {\n  const [copied, setCopied] = useState(false);\n  const handle = () => {\n    setCopied(true);\n    copyTextToClipboard(props.text || '', () => {\n      const timer = setTimeout(() => {\n        setCopied(false);\n        clearTimeout(timer);\n      }, 2000);\n    });\n  };\n  return <button onClick={handle}>{copied ? <CopySuccessIcon /> : <CopyIcon />}</button>;\n};\n","import { forwardRef, useState } from 'react';\nimport { Copied } from './Copied';\nimport { ExpandIcon } from './icons';\nimport './styles.css';\n\nexport interface CodeLayoutProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  prefixCls?: string;\n  /** 原始 代码块 渲染 **/\n  code?: React.ReactNode;\n  text?: string;\n  /** Title section, you can also place buttons **/\n  toolbar?: React.ReactNode;\n  /** 额外内容，展示 toolbar 右侧内容 */\n  toolbarExtra?: React.ReactNode;\n  disableToolbar?: boolean;\n  disableCode?: boolean;\n  disablePreview?: boolean;\n  /** 禁用方格背景 */\n  disableCheckered?: boolean;\n  /** Configure the preview background color. */\n  background?: string;\n  codeProps?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;\n  /**\n   * 是否需要边框\n   * @default true\n   */\n  bordered?: boolean;\n  /**\n   * 是否显示复制按钮\n   * @default true\n   */\n  copied?: boolean;\n}\n\n/** react-code-preview-layout 缩写 */\nconst PRE_FIX = 'w-rcpl';\n\nconst CodeLayout = forwardRef<HTMLDivElement, CodeLayoutProps>((props, ref) => {\n  const [showCode, setShowCode] = useState(false);\n  const {\n    children,\n    toolbar,\n    bordered = true,\n    disableCheckered = false,\n    disablePreview = false,\n    disableCode = false,\n    disableToolbar = false,\n    text = '',\n    background = '',\n    copied = true,\n    toolbarExtra,\n    code,\n    prefixCls = PRE_FIX,\n    className,\n    codeProps,\n    ...other\n  } = props;\n  const cls = [prefixCls, className, bordered ? `w-bordered` : null, disableCheckered ? `w-disable-checkered` : null]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n\n  const style: React.CSSProperties = !background\n    ? {}\n    : {\n        backgroundColor: background,\n        backgroundImage: 'none',\n      };\n  return (\n    <div ref={ref} {...other} className={cls}>\n      {!disablePreview && (\n        <div className={`${prefixCls}-preview`} style={style}>\n          {children}\n        </div>\n      )}\n      {!disableToolbar && (\n        <div className={`${prefixCls}-toolbar`}>\n          <div className={`${prefixCls}-title`}>{toolbar}</div>\n          <div className={`${prefixCls}-extra`}>\n            {toolbarExtra}\n            {copied && <Copied text={text} />}\n            {!disableCode && (\n              <button onClick={() => setShowCode(!showCode)}>\n                <ExpandIcon />\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n      {!disableCode && !disableToolbar && (\n        <div\n          {...codeProps}\n          className={`${prefixCls}-code ${codeProps?.className || ''} ${showCode ? 'w-display' : 'w-hidden'}`}\n        >\n          {code}\n        </div>\n      )}\n    </div>\n  );\n});\n\nexport default CodeLayout;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use strict'\n\nmodule.exports = stringify\n\nvar toMarkdown = require('mdast-util-to-markdown')\n\nfunction stringify(options) {\n  var self = this\n\n  this.Compiler = compile\n\n  function compile(tree) {\n    return toMarkdown(\n      tree,\n      Object.assign({}, self.data('settings'), options, {\n        // Note: this option is not in the readme.\n        // The goal is for it to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: self.data('toMarkdownExtensions') || []\n      })\n    )\n  }\n}\n","'use strict'\n\nmodule.exports = longestStreak\n\n// Get the count of the longest repeating streak of `character` in `value`.\nfunction longestStreak(value, character) {\n  var count = 0\n  var maximum = 0\n  var expected\n  var index\n\n  if (typeof character !== 'string' || character.length !== 1) {\n    throw new Error('Expected character')\n  }\n\n  value = String(value)\n  index = value.indexOf(character)\n  expected = index\n\n  while (index !== -1) {\n    count++\n\n    if (index === expected) {\n      if (count > maximum) {\n        maximum = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + 1\n    index = value.indexOf(character, expected)\n  }\n\n  return maximum\n}\n","module.exports = require('./lib')\n","module.exports = configure\n\nfunction configure(base, extension) {\n  var index = -1\n  var key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      base[key] = base[key].concat(extension[key] || [])\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","module.exports = blockquote\n\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction blockquote(node, _, context) {\n  var exit = context.enter('blockquote')\n  var value = indentLines(flow(node, context), map)\n  exit()\n  return value\n}\n\nfunction map(line, index, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","module.exports = hardBreak\n\nvar patternInScope = require('../util/pattern-in-scope')\n\nfunction hardBreak(node, _, context, safe) {\n  var index = -1\n\n  while (++index < context.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      context.unsafe[index].character === '\\n' &&\n      patternInScope(context.stack, context.unsafe[index])\n    ) {\n      return /[ \\t]/.test(safe.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","module.exports = code\n\nvar repeat = require('repeat-string')\nvar streak = require('longest-streak')\nvar formatCodeAsIndented = require('../util/format-code-as-indented')\nvar checkFence = require('../util/check-fence')\nvar indentLines = require('../util/indent-lines')\nvar safe = require('../util/safe')\n\nfunction code(node, _, context) {\n  var marker = checkFence(context)\n  var raw = node.value || ''\n  var suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n  var value\n  var sequence\n  var exit\n  var subexit\n\n  if (formatCodeAsIndented(node, context)) {\n    exit = context.enter('codeIndented')\n    value = indentLines(raw, map)\n  } else {\n    sequence = repeat(marker, Math.max(streak(raw, marker) + 1, 3))\n    exit = context.enter('codeFenced')\n    value = sequence\n\n    if (node.lang) {\n      subexit = context.enter('codeFencedLang' + suffix)\n      value += safe(context, node.lang, {\n        before: '`',\n        after: ' ',\n        encode: ['`']\n      })\n      subexit()\n    }\n\n    if (node.lang && node.meta) {\n      subexit = context.enter('codeFencedMeta' + suffix)\n      value +=\n        ' ' +\n        safe(context, node.meta, {\n          before: ' ',\n          after: '\\n',\n          encode: ['`']\n        })\n      subexit()\n    }\n\n    value += '\\n'\n\n    if (raw) {\n      value += raw + '\\n'\n    }\n\n    value += sequence\n  }\n\n  exit()\n  return value\n}\n\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","module.exports = definition\n\nvar association = require('../util/association')\nvar checkQuote = require('../util/check-quote')\nvar safe = require('../util/safe')\n\nfunction definition(node, _, context) {\n  var marker = checkQuote(context)\n  var suffix = marker === '\"' ? 'Quote' : 'Apostrophe'\n  var exit = context.enter('definition')\n  var subexit = context.enter('label')\n  var value =\n    '[' + safe(context, association(node), {before: '[', after: ']'}) + ']: '\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there’s whitespace, enclosed is prettier.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {before: ' ', after: ' '})\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      marker +\n      safe(context, node.title, {before: marker, after: marker}) +\n      marker\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","module.exports = emphasis\nemphasis.peek = emphasisPeek\n\nvar checkEmphasis = require('../util/check-emphasis')\nvar phrasing = require('../util/container-phrasing')\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\nfunction emphasis(node, _, context) {\n  var marker = checkEmphasis(context)\n  var exit = context.enter('emphasis')\n  var value = phrasing(node, context, {before: marker, after: marker})\n  exit()\n  return marker + value + marker\n}\n\nfunction emphasisPeek(node, _, context) {\n  return context.options.emphasis || '*'\n}\n","module.exports = heading\n\nvar repeat = require('repeat-string')\nvar formatHeadingAsSetext = require('../util/format-heading-as-setext')\nvar phrasing = require('../util/container-phrasing')\n\nfunction heading(node, _, context) {\n  var rank = Math.max(Math.min(6, node.depth || 1), 1)\n  var exit\n  var subexit\n  var value\n  var sequence\n\n  if (formatHeadingAsSetext(node, context)) {\n    exit = context.enter('headingSetext')\n    subexit = context.enter('phrasing')\n    value = phrasing(node, context, {before: '\\n', after: '\\n'})\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      repeat(\n        rank === 1 ? '=' : '-',\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  sequence = repeat('#', rank)\n  exit = context.enter('headingAtx')\n  subexit = context.enter('phrasing')\n  value = phrasing(node, context, {before: '# ', after: '\\n'})\n  value = value ? sequence + ' ' + value : sequence\n  if (context.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","module.exports = html\nhtml.peek = htmlPeek\n\nfunction html(node) {\n  return node.value || ''\n}\n\nfunction htmlPeek() {\n  return '<'\n}\n","module.exports = imageReference\nimageReference.peek = imageReferencePeek\n\nvar association = require('../util/association')\nvar safe = require('../util/safe')\n\nfunction imageReference(node, _, context) {\n  var type = node.referenceType\n  var exit = context.enter('imageReference')\n  var subexit = context.enter('label')\n  var alt = safe(context, node.alt, {before: '[', after: ']'})\n  var value = '![' + alt + ']'\n  var reference\n  var stack\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  reference = safe(context, association(node), {before: '[', after: ']'})\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += '[' + reference + ']'\n  } else if (type !== 'shortcut') {\n    value += '[]'\n  }\n\n  return value\n}\n\nfunction imageReferencePeek() {\n  return '!'\n}\n","module.exports = image\nimage.peek = imagePeek\n\nvar checkQuote = require('../util/check-quote')\nvar safe = require('../util/safe')\n\nfunction image(node, _, context) {\n  var quote = checkQuote(context)\n  var suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  var exit = context.enter('image')\n  var subexit = context.enter('label')\n  var value = '![' + safe(context, node.alt, {before: '[', after: ']'}) + ']('\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // Or if there’s markdown whitespace or an eol, enclose.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {\n      before: '(',\n      after: node.title ? ' ' : ')'\n    })\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      quote +\n      safe(context, node.title, {before: quote, after: quote}) +\n      quote\n    subexit()\n  }\n\n  value += ')'\n  exit()\n\n  return value\n}\n\nfunction imagePeek() {\n  return '!'\n}\n","exports.blockquote = require('./blockquote')\nexports.break = require('./break')\nexports.code = require('./code')\nexports.definition = require('./definition')\nexports.emphasis = require('./emphasis')\nexports.hardBreak = require('./break')\nexports.heading = require('./heading')\nexports.html = require('./html')\nexports.image = require('./image')\nexports.imageReference = require('./image-reference')\nexports.inlineCode = require('./inline-code')\nexports.link = require('./link')\nexports.linkReference = require('./link-reference')\nexports.list = require('./list')\nexports.listItem = require('./list-item')\nexports.paragraph = require('./paragraph')\nexports.root = require('./root')\nexports.strong = require('./strong')\nexports.text = require('./text')\nexports.thematicBreak = require('./thematic-break')\n","module.exports = inlineCode\ninlineCode.peek = inlineCodePeek\n\nvar patternCompile = require('../util/pattern-compile')\n\nfunction inlineCode(node, parent, context) {\n  var value = node.value || ''\n  var sequence = '`'\n  var index = -1\n  var pattern\n  var expression\n  var match\n  var position\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    (/[ \\r\\n`]/.test(value.charAt(0)) ||\n      /[ \\r\\n`]/.test(value.charAt(value.length - 1)))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\nfunction inlineCodePeek() {\n  return '`'\n}\n","module.exports = linkReference\nlinkReference.peek = linkReferencePeek\n\nvar association = require('../util/association')\nvar phrasing = require('../util/container-phrasing')\nvar safe = require('../util/safe')\n\nfunction linkReference(node, _, context) {\n  var type = node.referenceType\n  var exit = context.enter('linkReference')\n  var subexit = context.enter('label')\n  var text = phrasing(node, context, {before: '[', after: ']'})\n  var value = '[' + text + ']'\n  var reference\n  var stack\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  reference = safe(context, association(node), {before: '[', after: ']'})\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += '[' + reference + ']'\n  } else if (type !== 'shortcut') {\n    value += '[]'\n  }\n\n  return value\n}\n\nfunction linkReferencePeek() {\n  return '['\n}\n","module.exports = link\nlink.peek = linkPeek\n\nvar checkQuote = require('../util/check-quote')\nvar formatLinkAsAutolink = require('../util/format-link-as-autolink')\nvar phrasing = require('../util/container-phrasing')\nvar safe = require('../util/safe')\n\nfunction link(node, _, context) {\n  var quote = checkQuote(context)\n  var suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  var exit\n  var subexit\n  var value\n  var stack\n\n  if (formatLinkAsAutolink(node, context)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    stack = context.stack\n    context.stack = []\n    exit = context.enter('autolink')\n    value = '<' + phrasing(node, context, {before: '<', after: '>'}) + '>'\n    exit()\n    context.stack = stack\n    return value\n  }\n\n  exit = context.enter('link')\n  subexit = context.enter('label')\n  value = '[' + phrasing(node, context, {before: '[', after: ']'}) + ']('\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // Or if there’s markdown whitespace or an eol, enclose.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {\n      before: '(',\n      after: node.title ? ' ' : ')'\n    })\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      quote +\n      safe(context, node.title, {before: quote, after: quote}) +\n      quote\n    subexit()\n  }\n\n  value += ')'\n\n  exit()\n  return value\n}\n\nfunction linkPeek(node, _, context) {\n  return formatLinkAsAutolink(node, context) ? '<' : '['\n}\n","module.exports = listItem\n\nvar repeat = require('repeat-string')\nvar checkBullet = require('../util/check-bullet')\nvar checkListItemIndent = require('../util/check-list-item-indent')\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction listItem(node, parent, context) {\n  var bullet = checkBullet(context)\n  var listItemIndent = checkListItemIndent(context)\n  var size\n  var value\n  var exit\n\n  if (parent && parent.ordered) {\n    bullet =\n      (parent.start > -1 ? parent.start : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      '.'\n  }\n\n  size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' && ((parent && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  exit = context.enter('listItem')\n  value = indentLines(flow(node, context), map)\n  exit()\n\n  return value\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : repeat(' ', size)) + line\n    }\n\n    return (blank ? bullet : bullet + repeat(' ', size - bullet.length)) + line\n  }\n}\n","module.exports = list\n\nvar flow = require('../util/container-flow')\n\nfunction list(node, _, context) {\n  var exit = context.enter('list')\n  var value = flow(node, context)\n  exit()\n  return value\n}\n","module.exports = paragraph\n\nvar phrasing = require('../util/container-phrasing')\n\nfunction paragraph(node, _, context) {\n  var exit = context.enter('paragraph')\n  var subexit = context.enter('phrasing')\n  var value = phrasing(node, context, {before: '\\n', after: '\\n'})\n  subexit()\n  exit()\n  return value\n}\n","module.exports = root\n\nvar flow = require('../util/container-flow')\n\nfunction root(node, _, context) {\n  return flow(node, context)\n}\n","module.exports = strong\nstrong.peek = strongPeek\n\nvar checkStrong = require('../util/check-strong')\nvar phrasing = require('../util/container-phrasing')\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\nfunction strong(node, _, context) {\n  var marker = checkStrong(context)\n  var exit = context.enter('strong')\n  var value = phrasing(node, context, {before: marker, after: marker})\n  exit()\n  return marker + marker + value + marker + marker\n}\n\nfunction strongPeek(node, _, context) {\n  return context.options.strong || '*'\n}\n","module.exports = text\n\nvar safe = require('../util/safe')\n\nfunction text(node, parent, context, safeOptions) {\n  return safe(context, node.value, safeOptions)\n}\n","module.exports = thematicBreak\n\nvar repeat = require('repeat-string')\nvar checkRepeat = require('../util/check-rule-repeat')\nvar checkRule = require('../util/check-rule')\n\nfunction thematicBreak(node, parent, context) {\n  var value = repeat(\n    checkRule(context) + (context.options.ruleSpaces ? ' ' : ''),\n    checkRepeat(context)\n  )\n\n  return context.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","module.exports = toMarkdown\n\nvar zwitch = require('zwitch')\nvar configure = require('./configure')\nvar defaultHandlers = require('./handle')\nvar defaultJoin = require('./join')\nvar defaultUnsafe = require('./unsafe')\n\nfunction toMarkdown(tree, options) {\n  var settings = options || {}\n  var context = {\n    enter: enter,\n    stack: [],\n    unsafe: [],\n    join: [],\n    handlers: {},\n    options: {}\n  }\n  var result\n\n  configure(context, {\n    unsafe: defaultUnsafe,\n    join: defaultJoin,\n    handlers: defaultHandlers\n  })\n  configure(context, settings)\n\n  if (context.options.tightDefinitions) {\n    context.join = [joinDefinition].concat(context.join)\n  }\n\n  context.handle = zwitch('type', {\n    invalid: invalid,\n    unknown: unknown,\n    handlers: context.handlers\n  })\n\n  result = context.handle(tree, null, context, {before: '\\n', after: '\\n'})\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  function enter(name) {\n    context.stack.push(name)\n    return exit\n\n    function exit() {\n      context.stack.pop()\n    }\n  }\n}\n\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\nfunction unknown(node) {\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n","module.exports = [joinDefaults]\n\nvar formatCodeAsIndented = require('./util/format-code-as-indented')\nvar formatHeadingAsSetext = require('./util/format-heading-as-setext')\n\nfunction joinDefaults(left, right, parent, context) {\n  if (\n    // Two lists with the same marker.\n    (right.type === 'list' &&\n      right.type === left.type &&\n      Boolean(left.ordered) === Boolean(right.ordered)) ||\n    // Indented code after list or another indented code.\n    (right.type === 'code' &&\n      formatCodeAsIndented(right, context) &&\n      (left.type === 'list' ||\n        (left.type === right.type && formatCodeAsIndented(left, context))))\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if (typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, context)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","module.exports = [\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {character: '!', after: '\\\\[', inConstruct: 'phrasing'},\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  {before: '\\\\]', character: '(', inConstruct: 'phrasing'},\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*'},\n  {character: '*', inConstruct: 'phrasing'},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {character: '<', after: '[!/?A-Za-z]', inConstruct: 'phrasing'},\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: ['phrasing', 'label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {\n    character: ']',\n    inConstruct: ['label', 'reference']\n  },\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {before: '[^A-Za-z]', character: '_', inConstruct: 'phrasing'},\n  {character: '_', after: '[^A-Za-z]', inConstruct: 'phrasing'},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedMetaGraveAccent',\n      'phrasing'\n    ]\n  },\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","module.exports = association\n\nvar decode = require('parse-entities/decode-entity')\n\nvar characterEscape = /\\\\([!-/:-@[-`{-~])/g\nvar characterReference = /&(#(\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n// The `label` of an association is the string value: character escapes and\n// references work, and casing is intact.\n// The `identifier` is used to match one association to another: controversially,\n// character escapes and references don’t work in this matching: `&copy;` does\n// not match `©`, and `\\+` does not match `+`.\n// But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n// matches `a b`.\n// So, we do prefer the label when figuring out how we’re going to serialize:\n// it has whitespace, casing, and we can ignore most useless character escapes\n// and all character references.\nfunction association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return node.identifier\n    .replace(characterEscape, '$1')\n    .replace(characterReference, decodeIfPossible)\n}\n\nfunction decodeIfPossible($0, $1) {\n  return decode($1) || $0\n}\n","module.exports = checkBullet\n\nfunction checkBullet(context) {\n  var marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkEmphasis\n\nfunction checkEmphasis(context) {\n  var marker = context.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkFence\n\nfunction checkFence(context) {\n  var marker = context.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkListItemIndent\n\nfunction checkListItemIndent(context) {\n  var style = context.options.listItemIndent || 'tab'\n\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","module.exports = checkQuote\n\nfunction checkQuote(context) {\n  var marker = context.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkRule\n\nfunction checkRule(context) {\n  var repetition = context.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","module.exports = checkRule\n\nfunction checkRule(context) {\n  var marker = context.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkStrong\n\nfunction checkStrong(context) {\n  var marker = context.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = flow\n\nvar repeat = require('repeat-string')\n\nfunction flow(parent, context) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  function between(left, right) {\n    var index = -1\n    var result\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result))\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","module.exports = phrasing\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var before = safeOptions.before\n  var after\n  var handle\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: ''\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n    }\n\n    results.push(\n      context.handle(child, parent, context, {\n        before: before,\n        after: after\n      })\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  return results.join('')\n}\n","module.exports = formatCodeAsIndented\n\nfunction formatCodeAsIndented(node, context) {\n  return (\n    !context.options.fences &&\n    node.value &&\n    // If there’s no info…\n    !node.lang &&\n    // And there’s a non-whitespace character…\n    /[^ \\r\\n]/.test(node.value) &&\n    // And the value doesn’t start or end in a blank…\n    !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","module.exports = formatHeadingAsSetext\n\nvar toString = require('mdast-util-to-string')\n\nfunction formatHeadingAsSetext(node, context) {\n  return (\n    context.options.setext && (!node.depth || node.depth < 3) && toString(node)\n  )\n}\n","module.exports = formatLinkAsAutolink\n\nvar toString = require('mdast-util-to-string')\n\nfunction formatLinkAsAutolink(node, context) {\n  var raw = toString(node)\n\n  return (\n    !context.options.resourceLink &&\n    // If there’s a url…\n    node.url &&\n    // And there’s a no title…\n    !node.title &&\n    // And the content of `node` is a single text node…\n    node.children &&\n    node.children.length === 1 &&\n    node.children[0].type === 'text' &&\n    // And if the url is the same as the content…\n    (raw === node.url || 'mailto:' + raw === node.url) &&\n    // And that starts w/ a protocol…\n    /^[a-z][a-z+.-]+:/i.test(node.url) &&\n    // And that doesn’t contain ASCII control codes (character escapes and\n    // references don’t work) or angle brackets…\n    !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","module.exports = indentLines\n\nvar eol = /\\r?\\n|\\r/g\n\nfunction indentLines(value, map) {\n  var result = []\n  var start = 0\n  var line = 0\n  var match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","module.exports = patternCompile\n\nfunction patternCompile(pattern) {\n  var before\n  var after\n\n  if (!pattern._compiled) {\n    before = pattern.before ? '(?:' + pattern.before + ')' : ''\n    after = pattern.after ? '(?:' + pattern.after + ')' : ''\n\n    if (pattern.atBreak) {\n      before = '[\\\\r\\\\n][\\\\t ]*' + before\n    }\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (after || ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","module.exports = patternInScope\n\nfunction patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct)\n  )\n}\n\nfunction listInScope(stack, list, none) {\n  var index\n\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  index = -1\n\n  while (++index < list.length) {\n    if (stack.indexOf(list[index]) !== -1) {\n      return true\n    }\n  }\n\n  return false\n}\n","module.exports = safe\n\nvar patternCompile = require('./pattern-compile')\nvar patternInScope = require('./pattern-in-scope')\n\nfunction safe(context, input, config) {\n  var value = (config.before || '') + (input || '') + (config.after || '')\n  var positions = []\n  var result = []\n  var infos = {}\n  var index = -1\n  var before\n  var after\n  var position\n  var pattern\n  var expression\n  var match\n  var start\n  var end\n\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      before = 'before' in pattern || pattern.atBreak\n      after = 'after' in pattern\n\n      position = match.index + (before ? match[1].length : 0)\n\n      if (positions.indexOf(position) === -1) {\n        positions.push(position)\n        infos[position] = {before: before, after: after}\n      } else {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  start = config.before ? config.before.length : 0\n  end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    position = positions[index]\n\n    if (\n      // Character before or after matched:\n      position < start ||\n      position >= end\n    ) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      position + 1 < end &&\n      positions[index + 1] === position + 1 &&\n      infos[position].after &&\n      !infos[position + 1].before &&\n      !infos[position + 1].after\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || config.encode.indexOf(value.charAt(position)) === -1)\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\nfunction numerical(a, b) {\n  return a - b\n}\n\nfunction escapeBackslashes(value, after) {\n  var expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  var positions = []\n  var results = []\n  var index = -1\n  var start = 0\n  var whole = value + after\n  var match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.\n// Prefer the node’s plain-text fields, otherwise serialize its children,\n// and if the given value is an array, serialize the nodes in it.\nfunction toString(node) {\n  return (\n    (node &&\n      (node.value ||\n        node.alt ||\n        node.title ||\n        ('children' in node && all(node.children)) ||\n        ('length' in node && all(node)))) ||\n    ''\n  )\n}\n\nfunction all(values) {\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = toString(values[index])\n  }\n\n  return result.join('')\n}\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nmodule.exports = factory\n\nvar noop = Function.prototype\nvar own = {}.hasOwnProperty\n\n// Handle values based on a property.\nfunction factory(key, options) {\n  var settings = options || {}\n\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    return (fn || noop).apply(this, arguments)\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n","'use strict'\n\nvar unified = require('unified')\nvar parse = require('remark-parse')\nvar stringify = require('remark-stringify')\n\nmodule.exports = unified().use(parse).use(stringify).freeze()\n","'use strict'\n\nmodule.exports = bail\n\nfunction bail(err) {\n  if (err) {\n    throw err\n  }\n}\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict'\n\nmodule.exports = fromMarkdown\n\n// These three are compiled away in the `dist/`\n\nvar toString = require('mdast-util-to-string')\nvar assign = require('micromark/dist/constant/assign')\nvar own = require('micromark/dist/constant/has-own-property')\nvar normalizeIdentifier = require('micromark/dist/util/normalize-identifier')\nvar safeFromInt = require('micromark/dist/util/safe-from-int')\nvar parser = require('micromark/dist/parse')\nvar preprocessor = require('micromark/dist/preprocess')\nvar postprocess = require('micromark/dist/postprocess')\nvar decode = require('parse-entities/decode-entity')\nvar stringifyPosition = require('unist-util-stringify-position')\n\nfunction fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n\n  return compiler(options)(\n    postprocess(\n      parser(options).document().write(preprocessor()(value, encoding, true))\n    )\n  )\n}\n\n// Note this compiler only understand complete buffering, not streaming.\nfunction compiler(options) {\n  var settings = options || {}\n  var config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n\n    settings.mdastExtensions || []\n  )\n\n  var data = {}\n\n  return compile\n\n  function compile(events) {\n    var tree = {type: 'root', children: []}\n    var stack = [tree]\n    var tokenStack = []\n    var listStack = []\n    var index = -1\n    var handler\n    var listStart\n\n    var context = {\n      stack: stack,\n      tokenStack: tokenStack,\n      config: config,\n      enter: enter,\n      exit: exit,\n      buffer: buffer,\n      resume: resume,\n      setData: setData,\n      getData: getData\n    }\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          listStart = listStack.pop(index)\n          index = prepareList(events, listStart, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          assign({sliceSerialize: events[index][2].sliceSerialize}, context),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length) {\n      throw new Error(\n        'Cannot close document, a token (`' +\n          tokenStack[tokenStack.length - 1].type +\n          '`, ' +\n          stringifyPosition({\n            start: tokenStack[tokenStack.length - 1].start,\n            end: tokenStack[tokenStack.length - 1].end\n          }) +\n          ') is still open'\n      )\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length ? events[0][1].start : {line: 1, column: 1, offset: 0}\n      ),\n\n      end: point(\n        events.length\n          ? events[events.length - 2][1].end\n          : {line: 1, column: 1, offset: 0}\n      )\n    }\n\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n\n  function prepareList(events, start, length) {\n    var index = start - 1\n    var containerBalance = -1\n    var listSpread = false\n    var listItem\n    var tailIndex\n    var lineIndex\n    var tailEvent\n    var event\n    var firstBlankLineIndex\n    var atMarker\n\n    while (++index <= length) {\n      event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = point(\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: point(event[1].start)\n          }\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  function getData(key) {\n    return data[key]\n  }\n\n  function point(d) {\n    return {line: d.line, column: d.column, offset: d.offset}\n  }\n\n  function opener(create, and) {\n    return open\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  function buffer() {\n    this.stack.push({type: 'fragment', children: []})\n  }\n\n  function enter(node, token) {\n    this.stack[this.stack.length - 1].children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push(token)\n    node.position = {start: point(token.start)}\n    return node\n  }\n\n  function closer(and) {\n    return close\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  function exit(token) {\n    var node = this.stack.pop()\n    var open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): it’s not open'\n      )\n    } else if (open.type !== token.type) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): a different token (`' +\n          open.type +\n          '`, ' +\n          stringifyPosition({start: open.start, end: open.end}) +\n          ') is open'\n      )\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      this.stack[this.stack.length - 2].start = parseInt(\n        this.sliceSerialize(token),\n        10\n      )\n\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  function onexitcodefencedfenceinfo() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].lang = data\n  }\n\n  function onexitcodefencedfencemeta() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].meta = data\n  }\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  function onexitcodefenced() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data.replace(\n      /^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g,\n      ''\n    )\n\n    setData('flowCodeInside')\n  }\n\n  function onexitcodeindented() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitdefinitiontitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitdefinitiondestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitatxheadingsequence(token) {\n    if (!this.stack[this.stack.length - 1].depth) {\n      this.stack[this.stack.length - 1].depth = this.sliceSerialize(\n        token\n      ).length\n    }\n  }\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  function onexitsetextheadinglinesequence(token) {\n    this.stack[this.stack.length - 1].depth =\n      this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  function onenterdata(token) {\n    var siblings = this.stack[this.stack.length - 1].children\n    var tail = siblings[siblings.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {start: point(token.start)}\n      this.stack[this.stack.length - 1].children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n\n  function onexitdata(token) {\n    var tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  function onexitlineending(token) {\n    var context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      context.children[context.children.length - 1].position.end = point(\n        token.end\n      )\n\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.indexOf(context.type) > -1\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  function onexithtmlflow() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexithtmltext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitcodetext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitlink() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitimage() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitlabeltext(token) {\n    this.stack[this.stack.length - 2].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitlabel() {\n    var fragment = this.stack[this.stack.length - 1]\n    var value = this.resume()\n\n    this.stack[this.stack.length - 1].label = value\n\n    // Assume a reference.\n    setData('inReference', true)\n\n    if (this.stack[this.stack.length - 1].type === 'link') {\n      this.stack[this.stack.length - 1].children = fragment.children\n    } else {\n      this.stack[this.stack.length - 1].alt = value\n    }\n  }\n\n  function onexitresourcedestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitresourcetitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  function onexitreferencestring(token) {\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  function onexitcharacterreferencevalue(token) {\n    var data = this.sliceSerialize(token)\n    var type = getData('characterReferenceType')\n    var value\n    var tail\n\n    if (type) {\n      value = safeFromInt(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n\n      setData('characterReferenceType')\n    } else {\n      value = decode(data)\n    }\n\n    tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url = this.sliceSerialize(token)\n  }\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url =\n      'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  function blockQuote() {\n    return {type: 'blockquote', children: []}\n  }\n\n  function codeFlow() {\n    return {type: 'code', lang: null, meta: null, value: ''}\n  }\n\n  function codeText() {\n    return {type: 'inlineCode', value: ''}\n  }\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  function emphasis() {\n    return {type: 'emphasis', children: []}\n  }\n\n  function heading() {\n    return {type: 'heading', depth: undefined, children: []}\n  }\n\n  function hardBreak() {\n    return {type: 'break'}\n  }\n\n  function html() {\n    return {type: 'html', value: ''}\n  }\n\n  function image() {\n    return {type: 'image', title: null, url: '', alt: null}\n  }\n\n  function link() {\n    return {type: 'link', title: null, url: '', children: []}\n  }\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  function paragraph() {\n    return {type: 'paragraph', children: []}\n  }\n\n  function strong() {\n    return {type: 'strong', children: []}\n  }\n\n  function text() {\n    return {type: 'text', value: ''}\n  }\n\n  function thematicBreak() {\n    return {type: 'thematicBreak'}\n  }\n}\n\nfunction configure(config, extensions) {\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(config, extensions[index])\n  }\n\n  return config\n}\n\nfunction extension(config, extension) {\n  var key\n  var left\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : (config[key] = {})\n\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, extension[key])\n    } else {\n      Object.assign(left, extension[key])\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = require('./dist')\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.\n// Prefer the node’s plain-text fields, otherwise serialize its children,\n// and if the given value is an array, serialize the nodes in it.\nfunction toString(node) {\n  return (\n    (node &&\n      (node.value ||\n        node.alt ||\n        node.title ||\n        ('children' in node && all(node.children)) ||\n        ('length' in node && all(node)))) ||\n    ''\n  )\n}\n\nfunction all(values) {\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = toString(values[index])\n  }\n\n  return result.join('')\n}\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlpha = regexCheck(/[A-Za-z]/)\n\nmodule.exports = asciiAlpha\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\nmodule.exports = asciiAlphanumeric\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\nmodule.exports = asciiAtext\n","'use strict'\n\n// Note: EOF is seen as ASCII control here, because `null < 32 == true`.\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code < 32 || code === 127\n  )\n}\n\nmodule.exports = asciiControl\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiDigit = regexCheck(/\\d/)\n\nmodule.exports = asciiDigit\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\nmodule.exports = asciiHexDigit\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\nmodule.exports = asciiPunctuation\n","'use strict'\n\nfunction markdownLineEndingOrSpace(code) {\n  return code < 0 || code === 32\n}\n\nmodule.exports = markdownLineEndingOrSpace\n","'use strict'\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n\nmodule.exports = markdownLineEnding\n","'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n","'use strict'\n\nvar unicodePunctuationRegex = require('../constant/unicode-punctuation-regex.js')\nvar regexCheck = require('../util/regex-check.js')\n\n// In fact adds to the bundle size.\n\nvar unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar unicodeWhitespace = regexCheck(/\\s/)\n\nmodule.exports = unicodeWhitespace\n","'use strict'\n\nvar assign = Object.assign\n\nmodule.exports = assign\n","'use strict'\n\nvar fromCharCode = String.fromCharCode\n\nmodule.exports = fromCharCode\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = own\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar basics = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\nmodule.exports = basics\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar raws = ['pre', 'script', 'style', 'textarea']\n\nmodule.exports = raws\n","'use strict'\n\nvar splice = [].splice\n\nmodule.exports = splice\n","'use strict'\n\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nvar unicodePunctuation = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar text$1 = require('./initialize/text.js')\nvar attention = require('./tokenize/attention.js')\nvar autolink = require('./tokenize/autolink.js')\nvar blockQuote = require('./tokenize/block-quote.js')\nvar characterEscape = require('./tokenize/character-escape.js')\nvar characterReference = require('./tokenize/character-reference.js')\nvar codeFenced = require('./tokenize/code-fenced.js')\nvar codeIndented = require('./tokenize/code-indented.js')\nvar codeText = require('./tokenize/code-text.js')\nvar definition = require('./tokenize/definition.js')\nvar hardBreakEscape = require('./tokenize/hard-break-escape.js')\nvar headingAtx = require('./tokenize/heading-atx.js')\nvar htmlFlow = require('./tokenize/html-flow.js')\nvar htmlText = require('./tokenize/html-text.js')\nvar labelEnd = require('./tokenize/label-end.js')\nvar labelStartImage = require('./tokenize/label-start-image.js')\nvar labelStartLink = require('./tokenize/label-start-link.js')\nvar lineEnding = require('./tokenize/line-ending.js')\nvar list = require('./tokenize/list.js')\nvar setextUnderline = require('./tokenize/setext-underline.js')\nvar thematicBreak = require('./tokenize/thematic-break.js')\n\nvar document = {\n  42: list,\n  // Asterisk\n  43: list,\n  // Plus sign\n  45: list,\n  // Dash\n  48: list,\n  // 0\n  49: list,\n  // 1\n  50: list,\n  // 2\n  51: list,\n  // 3\n  52: list,\n  // 4\n  53: list,\n  // 5\n  54: list,\n  // 6\n  55: list,\n  // 7\n  56: list,\n  // 8\n  57: list,\n  // 9\n  62: blockQuote // Greater than\n}\nvar contentInitial = {\n  91: definition // Left square bracket\n}\nvar flowInitial = {\n  '-2': codeIndented,\n  // Horizontal tab\n  '-1': codeIndented,\n  // Virtual space\n  32: codeIndented // Space\n}\nvar flow = {\n  35: headingAtx,\n  // Number sign\n  42: thematicBreak,\n  // Asterisk\n  45: [setextUnderline, thematicBreak],\n  // Dash\n  60: htmlFlow,\n  // Less than\n  61: setextUnderline,\n  // Equals to\n  95: thematicBreak,\n  // Underscore\n  96: codeFenced,\n  // Grave accent\n  126: codeFenced // Tilde\n}\nvar string = {\n  38: characterReference,\n  // Ampersand\n  92: characterEscape // Backslash\n}\nvar text = {\n  '-5': lineEnding,\n  // Carriage return\n  '-4': lineEnding,\n  // Line feed\n  '-3': lineEnding,\n  // Carriage return + line feed\n  33: labelStartImage,\n  // Exclamation mark\n  38: characterReference,\n  // Ampersand\n  42: attention,\n  // Asterisk\n  60: [autolink, htmlText],\n  // Less than\n  91: labelStartLink,\n  // Left square bracket\n  92: [hardBreakEscape, characterEscape],\n  // Backslash\n  93: labelEnd,\n  // Right square bracket\n  95: attention,\n  // Underscore\n  96: codeText // Grave accent\n}\nvar insideSpan = {\n  null: [attention, text$1.resolver]\n}\nvar disable = {\n  null: []\n}\n\nexports.contentInitial = contentInitial\nexports.disable = disable\nexports.document = document\nexports.flow = flow\nexports.flowInitial = flowInitial\nexports.insideSpan = insideSpan\nexports.string = string\nexports.text = text\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\n\nvar tokenize = initializeContent\n\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  var previous\n  return contentStart\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeDocument\nvar containerConstruct = {\n  tokenize: tokenizeContainer\n}\nvar lazyFlowConstruct = {\n  tokenize: tokenizeLazyFlow\n}\n\nfunction initializeDocument(effects) {\n  var self = this\n  var stack = []\n  var continued = 0\n  var inspectConstruct = {\n    tokenize: tokenizeInspect,\n    partial: true\n  }\n  var inspectResult\n  var childFlow\n  var childToken\n  return start\n\n  function start(code) {\n    if (continued < stack.length) {\n      self.containerState = stack[continued][1]\n      return effects.attempt(\n        stack[continued][0].continuation,\n        documentContinue,\n        documentContinued\n      )(code)\n    }\n\n    return documentContinued(code)\n  }\n\n  function documentContinue(code) {\n    continued++\n    return start(code)\n  }\n\n  function documentContinued(code) {\n    // If we’re in a concrete construct (such as when expecting another line of\n    // HTML, or we resulted in lazy content), we can immediately start flow.\n    if (inspectResult && inspectResult.flowContinue) {\n      return flowStart(code)\n    }\n\n    self.interrupt =\n      childFlow &&\n      childFlow.currentConstruct &&\n      childFlow.currentConstruct.interruptible\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  function containerContinue(code) {\n    stack.push([self.currentConstruct, self.containerState])\n    self.containerState = undefined\n    return documentContinued(code)\n  }\n\n  function flowStart(code) {\n    if (code === null) {\n      exitContainers(0, true)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  function flowContinue(code) {\n    if (code === null) {\n      continueFlow(effects.exit('chunkFlow'))\n      return flowStart(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      continueFlow(effects.exit('chunkFlow'))\n      return effects.check(inspectConstruct, documentAfterPeek)\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  function documentAfterPeek(code) {\n    exitContainers(\n      inspectResult.continued,\n      inspectResult && inspectResult.flowEnd\n    )\n    continued = 0\n    return start(code)\n  }\n\n  function continueFlow(token) {\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.lazy = inspectResult && inspectResult.lazy\n    childFlow.defineSkip(token.start)\n    childFlow.write(self.sliceStream(token))\n  }\n\n  function exitContainers(size, end) {\n    var index = stack.length // Close the flow.\n\n    if (childFlow && end) {\n      childFlow.write([null])\n      childToken = childFlow = undefined\n    } // Exit open containers.\n\n    while (index-- > size) {\n      self.containerState = stack[index][1]\n      stack[index][0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function tokenizeInspect(effects, ok) {\n    var subcontinued = 0\n    inspectResult = {}\n    return inspectStart\n\n    function inspectStart(code) {\n      if (subcontinued < stack.length) {\n        self.containerState = stack[subcontinued][1]\n        return effects.attempt(\n          stack[subcontinued][0].continuation,\n          inspectContinue,\n          inspectLess\n        )(code)\n      } // If we’re continued but in a concrete flow, we can’t have more\n      // containers.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        inspectResult.flowContinue = true\n        return inspectDone(code)\n      }\n\n      self.interrupt =\n        childFlow.currentConstruct && childFlow.currentConstruct.interruptible\n      self.containerState = {}\n      return effects.attempt(\n        containerConstruct,\n        inspectFlowEnd,\n        inspectDone\n      )(code)\n    }\n\n    function inspectContinue(code) {\n      subcontinued++\n      return self.containerState._closeFlow\n        ? inspectFlowEnd(code)\n        : inspectStart(code)\n    }\n\n    function inspectLess(code) {\n      if (childFlow.currentConstruct && childFlow.currentConstruct.lazy) {\n        // Maybe another container?\n        self.containerState = {}\n        return effects.attempt(\n          containerConstruct,\n          inspectFlowEnd, // Maybe flow, or a blank line?\n          effects.attempt(\n            lazyFlowConstruct,\n            inspectFlowEnd,\n            effects.check(partialBlankLine, inspectFlowEnd, inspectLazy)\n          )\n        )(code)\n      } // Otherwise we’re interrupting.\n\n      return inspectFlowEnd(code)\n    }\n\n    function inspectLazy(code) {\n      // Act as if all containers are continued.\n      subcontinued = stack.length\n      inspectResult.lazy = true\n      inspectResult.flowContinue = true\n      return inspectDone(code)\n    } // We’re done with flow if we have more containers, or an interruption.\n\n    function inspectFlowEnd(code) {\n      inspectResult.flowEnd = true\n      return inspectDone(code)\n    }\n\n    function inspectDone(code) {\n      inspectResult.continued = subcontinued\n      self.interrupt = self.containerState = undefined\n      return ok(code)\n    }\n  }\n}\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction tokenizeLazyFlow(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.lazy(this.parser.constructs.flow, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar content = require('../tokenize/content.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar assign = require('../constant/assign.js')\nvar shallow = require('../util/shallow.js')\n\nvar text = initializeFactory('text')\nvar string = initializeFactory('string')\nvar resolver = {\n  resolveAll: createResolver()\n}\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  function initializeText(effects) {\n    var self = this\n    var constructs = this.parser.constructs[field]\n    var text = effects.attempt(constructs, start, notText)\n    return start\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n\n    function atBreak(code) {\n      var list = constructs[code]\n      var index = -1\n\n      if (code === null) {\n        return true\n      }\n\n      if (list) {\n        while (++index < list.length) {\n          if (\n            !list[index].previous ||\n            list[index].previous.call(self, self.previous)\n          ) {\n            return true\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  function resolveAllText(events, context) {\n    var index = -1\n    var enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n} // A rather ugly set of instructions which again looks at chunks in the input\n// stream.\n// The reason to do this here is that it is *much* faster to parse in reverse.\n// And that we can’t hook into `null` to split the line suffix before an EOF.\n// To do: figure out if we can make this into a clean utility, or even in core.\n// As it will be useful for GFMs literal autolink extension (and maybe even\n// tables?)\n\nfunction resolveAllLineSuffixes(events, context) {\n  var eventIndex = -1\n  var chunks\n  var data\n  var chunk\n  var index\n  var bufferIndex\n  var size\n  var tabs\n  var token\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      data = events[eventIndex - 1][1]\n      chunks = context.sliceStream(data)\n      index = chunks.length\n      bufferIndex = -1\n      size = 0\n      tabs = undefined\n\n      while (index--) {\n        chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1);\n        else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: shallow(data.end)\n        }\n        data.end = shallow(token.start)\n\n        if (data.start.offset === data.end.offset) {\n          assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n\nexports.resolver = resolver\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar content = require('./initialize/content.js')\nvar document = require('./initialize/document.js')\nvar flow = require('./initialize/flow.js')\nvar text = require('./initialize/text.js')\nvar combineExtensions = require('./util/combine-extensions.js')\nvar createTokenizer = require('./util/create-tokenizer.js')\nvar miniflat = require('./util/miniflat.js')\nvar constructs = require('./constructs.js')\n\nfunction parse(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  }\n  return parser\n\n  function create(initializer) {\n    return creator\n\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nvar subtokenize = require('./util/subtokenize.js')\n\nfunction postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n\nmodule.exports = postprocess\n","'use strict'\n\nvar search = /[\\0\\t\\n\\r]/g\n\nfunction preprocess() {\n  var start = true\n  var column = 1\n  var buffer = ''\n  var atCarriageReturn\n  return preprocessor\n\n  function preprocessor(value, encoding, end) {\n    var chunks = []\n    var match\n    var next\n    var startPosition\n    var endPosition\n    var code\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition = match ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        if (code === 0) {\n          chunks.push(65533)\n          column++\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4\n          chunks.push(-2)\n\n          while (column++ < next) chunks.push(-1)\n        } else if (code === 10) {\n          chunks.push(-4)\n          column = 1\n        } // Must be carriage return.\n        else {\n          atCarriageReturn = true\n          column = 1\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n\nmodule.exports = preprocess\n","'use strict'\n\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar classifyCharacter = require('../util/classify-character.js')\nvar movePoint = require('../util/move-point.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\n\nvar attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\nfunction resolveAllAttention(events, context) {\n  var index = -1\n  var open\n  var group\n  var text\n  var openingSequence\n  var closingSequence\n  var use\n  var nextEvents\n  var offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: movePoint(shallow(events[open][1].end), -use),\n            end: shallow(events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: shallow(events[index][1].start),\n            end: movePoint(shallow(events[index][1].start), use)\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: shallow(events[open][1].end),\n            end: shallow(events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: shallow(openingSequence.start),\n            end: shallow(closingSequence.end)\n          }\n          events[open][1].end = shallow(openingSequence.start)\n          events[index][1].start = shallow(closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = chunkedPush(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeAttention(effects, ok) {\n  var before = classifyCharacter(this.previous)\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    var token\n    var after\n    var open\n    var close\n\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    token = effects.exit('attentionSequence')\n    after = classifyCharacter(code)\n    open = !after || (after === 2 && before)\n    close = !before || (before === 2 && after)\n    token._open = marker === 42 ? open : open && (before || !close)\n    token._close = marker === 42 ? close : close && (after || !open)\n    return ok(code)\n  }\n}\n\nmodule.exports = attention\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiAtext = require('../character/ascii-atext.js')\nvar asciiControl = require('../character/ascii-control.js')\n\nvar autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 1\n  return start\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n\nmodule.exports = autolink\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit: exit\n}\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    if (code === 62) {\n      if (!self.containerState.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        self.containerState.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n\nmodule.exports = blockQuote\n","'use strict'\n\nvar asciiPunctuation = require('../character/ascii-punctuation.js')\n\nvar characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterEscape\n","'use strict'\n\nvar decodeEntity = require('parse-entities/decode-entity.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar asciiHexDigit = require('../character/ascii-hex-digit.js')\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {default: e}\n}\n\nvar decodeEntity__default = /*#__PURE__*/ _interopDefaultLegacy(decodeEntity)\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity__default['default'](self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterReference\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  var self = this\n  var closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  var initialPrefix = prefixSize(this.events, 'linePrefix')\n  var sizeOpen = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : content(code)\n  }\n\n  function content(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(\n        closingFenceConstruct,\n        after,\n        initialPrefix\n          ? factorySpace(effects, content, 'linePrefix', initialPrefix + 1)\n          : content\n      )\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return content(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    var size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\nmodule.exports = codeFenced\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n}\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok)\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n\nmodule.exports = codeIndented\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous: previous\n}\n\nfunction resolveCodeText(events) {\n  var tailExitIndex = events.length - 4\n  var headEnterIndex = 3\n  var index\n  var enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[tailExitIndex][1].type = events[headEnterIndex][1].type =\n          'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  var sizeOpen = 0\n  var size\n  var token\n  return start\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n\nmodule.exports = codeText\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar subtokenize = require('../util/subtokenize.js')\nvar factorySpace = require('./factory-space.js')\n\n// No name because it must not be turned off.\nvar content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent,\n  interruptible: true,\n  lazy: true\n}\nvar continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n} // Content is transparent: it’s parsed right now. That way, definitions are also\n// parsed right now: before text in paragraphs (specifically, media) are parsed.\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\nfunction tokenizeContent(effects, ok) {\n  var previous\n  return start\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous = previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous: previous\n    })\n    return data\n  }\n}\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  var self = this\n  return startLookahead\n\n  function startLookahead(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1 ||\n      prefixSize(self.events, 'linePrefix') < 4\n    ) {\n      return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = content\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factorySpace = require('./factory-space.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\nvar factoryTitle = require('./factory-title.js')\n\nvar definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\nvar titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this\n  var identifier\n  return start\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = definition\n","'use strict'\n\nvar asciiControl = require('../character/ascii-control.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\n// eslint-disable-next-line max-params\nfunction destinationFactory(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  var limit = max || Infinity\n  var balance = 0\n  return start\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (asciiControl(code) || code === 41) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n\nmodule.exports = destinationFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\n\n// eslint-disable-next-line max-params\nfunction labelFactory(effects, ok, nok, type, markerType, stringType) {\n  var self = this\n  var size = 0\n  var data\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* c8 ignore next */\n      (code === 94 &&\n        /* c8 ignore next */\n        !size &&\n        /* c8 ignore next */\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n\nmodule.exports = labelFactory\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction titleFactory(effects, ok, nok, type, markerType, stringType) {\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n\nmodule.exports = titleFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction whitespaceFactory(effects, ok) {\n  var seen\n  return start\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = whitespaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = hardBreakEscape\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar factorySpace = require('./factory-space.js')\n\nvar headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2\n  var contentStart = 3\n  var content\n  var text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var self = this\n  var size = 0\n  return start\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n\nmodule.exports = headingAtx\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar fromCharCode = require('../constant/from-char-code.js')\nvar htmlBlockNames = require('../constant/html-block-names.js')\nvar htmlRawNames = require('../constant/html-raw-names.js')\nvar partialBlankLine = require('./partial-blank-line.js')\n\nvar htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\nvar nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n\nfunction resolveToHtmlFlow(events) {\n  var index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  var self = this\n  var kind\n  var startTag\n  var buffer\n  var index\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.indexOf(buffer.toLowerCase()) > -1\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.indexOf(buffer.toLowerCase()) > -1) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting.\n\n      return self.interrupt\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = undefined\n    return completeAttributeValueUnquoted(code)\n  }\n\n  function completeAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return htmlContinueStart\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.indexOf(buffer.toLowerCase()) > -1) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(partialBlankLine, ok, nok)\n  }\n}\n\nmodule.exports = htmlFlow\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this\n  var marker\n  var buffer\n  var index\n  var returnState\n  return start\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = htmlText\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factoryTitle = require('./factory-title.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\n\nvar labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\nvar resourceConstruct = {\n  tokenize: tokenizeResource\n}\nvar fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\nvar collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n\nfunction resolveAllLabelEnd(events) {\n  var index = -1\n  var token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      !token._used &&\n      (token.type === 'labelImage' ||\n        token.type === 'labelLink' ||\n        token.type === 'labelEnd')\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length\n  var offset = 0\n  var group\n  var label\n  var text\n  var token\n  var open\n  var close\n  var media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: shallow(events[open][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n  label = {\n    type: 'label',\n    start: shallow(events[open][1].start),\n    end: shallow(events[close][1].end)\n  }\n  text = {\n    type: 'labelText',\n    start: shallow(events[open + offset + 2][1].end),\n    end: shallow(events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = chunkedPush(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = chunkedPush(media, [['enter', text, context]]) // Between.\n\n  media = chunkedPush(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = chunkedPush(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = chunkedPush(media, events.slice(close + 1)) // Media close.\n\n  media = chunkedPush(media, [['exit', group, context]])\n  chunkedSplice(events, open, events.length, media)\n  return events\n}\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var labelStart\n  var defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined =\n      self.parser.defined.indexOf(\n        normalizeIdentifier(\n          self.sliceSerialize({\n            start: labelStart.end,\n            end: self.now()\n          })\n        )\n      ) > -1\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  function afterLabel(code) {\n    return self.parser.defined.indexOf(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    ) < 0\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = labelEnd\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartImage\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartLink\n","'use strict'\n\nvar factorySpace = require('./factory-space.js')\n\nvar lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n\nmodule.exports = lineEnding\n","'use strict'\n\nvar asciiDigit = require('../character/ascii-digit.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar sizeChunks = require('../util/size-chunks.js')\nvar factorySpace = require('./factory-space.js')\nvar partialBlankLine = require('./partial-blank-line.js')\nvar thematicBreak = require('./thematic-break.js')\n\nvar list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\nvar listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\nvar indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\nfunction tokenizeListStart(effects, ok, nok) {\n  var self = this\n  var initialSize = prefixSize(self.events, 'linePrefix')\n  var size = 0\n  return start\n\n  function start(code) {\n    var kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      partialBlankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize + sizeChunks(self.sliceStream(effects.exit('listItemPrefix')))\n    return ok(code)\n  }\n}\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  var self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(partialBlankLine, onBlank, notBlank)\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'listItemIndent') ===\n      self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4 + 1\n  )\n\n  function afterPrefix(code) {\n    return markdownSpace(code) ||\n      !prefixSize(self.events, 'listItemPrefixWhitespace')\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = list\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar shallow = require('../util/shallow.js')\nvar factorySpace = require('./factory-space.js')\n\nvar setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\nfunction resolveToSetextUnderline(events, context) {\n  var index = events.length\n  var content\n  var text\n  var definition\n  var heading // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  heading = {\n    type: 'setextHeading',\n    start: shallow(events[text][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = shallow(events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var marker\n  var paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!self.lazy && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = setextUnderline\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n\nmodule.exports = thematicBreak\n","'use strict'\n\nvar chunkedSplice = require('./chunked-splice.js')\n\nfunction chunkedPush(list, items) {\n  if (list.length) {\n    chunkedSplice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n\nmodule.exports = chunkedPush\n","'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar unicodePunctuation = require('../character/unicode-punctuation.js')\nvar unicodeWhitespace = require('../character/unicode-whitespace.js')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\nmodule.exports = classifyCharacter\n","'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedPush = require('./chunked-push.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\nvar resolveAll = require('./resolve-all.js')\nvar serializeChunks = require('./serialize-chunks.js')\nvar shallow = require('./shallow.js')\nvar sliceChunks = require('./slice-chunks.js')\n\n// Create a tokenizer.\n// Tokenizers deal with one type of data (e.g., containers, flow, text).\n// The parser is the object dealing with it all.\n// `initialize` works like other constructs, except that only its `tokenize`\n// function is used, in which case it doesn’t receive an `ok` or `nok`.\n// `from` can be given to set the point before the first character, although\n// when further lines are indented, they must be set with `defineSkip`.\nfunction createTokenizer(parser, initialize, from) {\n  var point = from\n    ? shallow(from)\n    : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }\n  var columnStart = {}\n  var resolveAllConstructs = []\n  var chunks = []\n  var stack = []\n\n  var effects = {\n    consume: consume,\n    enter: enter,\n    exit: exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    }),\n    lazy: constructFactory(onsuccessfulcheck, {\n      lazy: true\n    })\n  } // State and tools for resolving and serializing.\n\n  var context = {\n    previous: null,\n    events: [],\n    parser: parser,\n    sliceStream: sliceStream,\n    sliceSerialize: sliceSerialize,\n    now: now,\n    defineSkip: skip,\n    write: write\n  } // The state function.\n\n  var state = initialize.tokenize.call(context, effects) // Track which character we expect to be consumed, to catch bugs.\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  } // Store where we are in the input stream.\n\n  point._index = 0\n  point._bufferIndex = -1\n  return context\n\n  function write(slice) {\n    chunks = chunkedPush(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  function sliceSerialize(token) {\n    return serializeChunks(sliceStream(token))\n  }\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  function now() {\n    return shallow(point)\n  }\n\n  function skip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n  // Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n  // `consume`).\n  // Here is where we walk through the chunks, which either include strings of\n  // several characters, or numerical character codes.\n  // The reason to do this in a loop instead of a call is so the stack can\n  // drain.\n\n  function main() {\n    var chunkIndex\n    var chunk\n\n    while (point._index < chunks.length) {\n      chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  } // Deal with one code.\n\n  function go(code) {\n    state = state(code)\n  } // Move a character forward.\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n  } // Start a token.\n\n  function enter(type, fields) {\n    var token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  } // Stop a token.\n\n  function exit(type) {\n    var token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  } // Use results.\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  } // Discard results.\n\n  function onsuccessfulcheck(construct, info) {\n    info.restore()\n  } // Factory to attempt/check/interrupt.\n\n  function constructFactory(onreturn, fields) {\n    return hook // Handle either an object mapping codes to constructs, a list of\n    // constructs, or a single construct.\n\n    function hook(constructs, returnState, bogusState) {\n      var listOfConstructs\n      var constructIndex\n      var currentConstruct\n      var info\n      return constructs.tokenize || 'length' in constructs\n        ? handleListOfConstructs(miniflat(constructs))\n        : handleMapOfConstructs\n\n      function handleMapOfConstructs(code) {\n        if (code in constructs || null in constructs) {\n          return handleListOfConstructs(\n            constructs.null\n              ? /* c8 ignore next */\n                miniflat(constructs[code]).concat(miniflat(constructs.null))\n              : constructs[code]\n          )(code)\n        }\n\n        return bogusState(code)\n      }\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        return handleConstruct(list[constructIndex])\n      }\n\n      function handleConstruct(construct) {\n        return start\n\n        function start(code) {\n          // To do: not nede to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.indexOf(construct.name) > -1\n          ) {\n            return nok()\n          }\n\n          return construct.tokenize.call(\n            fields ? assign({}, context, fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      function ok(code) {\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      function nok(code) {\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && resolveAllConstructs.indexOf(construct) < 0) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      chunkedSplice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  function store() {\n    var startPoint = now()\n    var startPrevious = context.previous\n    var startCurrentConstruct = context.currentConstruct\n    var startEventsIndex = context.events.length\n    var startStack = Array.from(stack)\n    return {\n      restore: restore,\n      from: startEventsIndex\n    }\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\nmodule.exports = createTokenizer\n","'use strict'\n\nfunction miniflat(value) {\n  return value === null || value === undefined\n    ? []\n    : 'length' in value\n    ? value\n    : [value]\n}\n\nmodule.exports = miniflat\n","'use strict'\n\n// chunks (replacement characters, tabs, or line endings).\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n  return point\n}\n\nmodule.exports = movePoint\n","'use strict'\n\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\nmodule.exports = normalizeIdentifier\n","'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction regexCheck(regex) {\n  return check\n\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n\nmodule.exports = regexCheck\n","'use strict'\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\nmodule.exports = resolveAll\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n\nmodule.exports = safeFromInt\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n\nmodule.exports = shallow\n","'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n","'use strict'\n\nfunction sliceChunks(chunks, token) {\n  var startIndex = token.start._index\n  var startBufferIndex = token.start._bufferIndex\n  var endIndex = token.end._index\n  var endBufferIndex = token.end._bufferIndex\n  var view\n\n  if (startIndex === endIndex) {\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\nmodule.exports = sliceChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar shallow = require('./shallow.js')\n\nfunction subtokenize(events) {\n  var jumps = {}\n  var index = -1\n  var event\n  var lineIndex\n  var otherIndex\n  var otherEvent\n  var parameters\n  var subevents\n  var more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1].isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container || event[1]._movePreviousLineEndings) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = shallow(events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        chunkedSplice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\nfunction subcontent(events, eventIndex) {\n  var token = events[eventIndex][1]\n  var context = events[eventIndex][2]\n  var startPosition = eventIndex - 1\n  var startPositions = []\n  var tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  var childEvents = tokenizer.events\n  var jumps = []\n  var gaps = {}\n  var stream\n  var previous\n  var index\n  var entered\n  var end\n  var adjust // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (token) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== token) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!token._tokenizer) {\n      stream = context.sliceStream(token)\n\n      if (!token.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(token.start)\n      }\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = token\n    token = token.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  token = previous\n  index = childEvents.length\n\n  while (index--) {\n    // Make sure we’ve at least seen something (final eol is part of the last\n    // token).\n    if (childEvents[index][0] === 'enter') {\n      entered = true\n    } else if (\n      // Find a void token that includes a break.\n      entered &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      add(childEvents.slice(index + 1, end))\n      // Help GC.\n      token._tokenizer = token.next = undefined\n      token = token.previous\n      end = index + 1\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = token._tokenizer = token.next = undefined // Do head:\n\n  add(childEvents.slice(0, end))\n  index = -1\n  adjust = 0\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n\n  function add(slice) {\n    var start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    chunkedSplice(events, start, 2, slice)\n  }\n}\n\nmodule.exports = subtokenize\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nmodule.exports = parse\n\nvar fromMarkdown = require('mdast-util-from-markdown')\n\nfunction parse(options) {\n  var self = this\n\n  this.Parser = parse\n\n  function parse(doc) {\n    return fromMarkdown(\n      doc,\n      Object.assign({}, self.data('settings'), options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: self.data('micromarkExtensions') || [],\n        mdastExtensions: self.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n}\n","'use strict'\n\nvar wrap = require('./wrap.js')\n\nmodule.exports = trough\n\ntrough.wrap = wrap\n\nvar slice = [].slice\n\n// Create new middleware.\nfunction trough() {\n  var fns = []\n  var middleware = {}\n\n  middleware.run = run\n  middleware.use = use\n\n  return middleware\n\n  // Run `fns`.  Last argument must be a completion handler.\n  function run() {\n    var index = -1\n    var input = slice.call(arguments, 0, -1)\n    var done = arguments[arguments.length - 1]\n\n    if (typeof done !== 'function') {\n      throw new Error('Expected function as last argument, not ' + done)\n    }\n\n    next.apply(null, [null].concat(input))\n\n    // Run the next `fn`, if any.\n    function next(err) {\n      var fn = fns[++index]\n      var params = slice.call(arguments, 0)\n      var values = params.slice(1)\n      var length = input.length\n      var pos = -1\n\n      if (err) {\n        done(err)\n        return\n      }\n\n      // Copy non-nully input into values.\n      while (++pos < length) {\n        if (values[pos] === null || values[pos] === undefined) {\n          values[pos] = input[pos]\n        }\n      }\n\n      input = values\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next).apply(null, input)\n      } else {\n        done.apply(null, [null].concat(input))\n      }\n    }\n  }\n\n  // Add `fn` to the list.\n  function use(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error('Expected `fn` to be a function, not ' + fn)\n    }\n\n    fns.push(fn)\n\n    return middleware\n  }\n}\n","'use strict'\n\nvar slice = [].slice\n\nmodule.exports = wrap\n\n// Wrap `fn`.\n// Can be sync or async; return a promise, receive a completion handler, return\n// new values and errors.\nfunction wrap(fn, callback) {\n  var invoked\n\n  return wrapped\n\n  function wrapped() {\n    var params = slice.call(arguments, 0)\n    var callback = fn.length > params.length\n    var result\n\n    if (callback) {\n      params.push(done)\n    }\n\n    try {\n      result = fn.apply(null, params)\n    } catch (error) {\n      // Well, this is quite the pickle.\n      // `fn` received a callback and invoked it (thus continuing the pipeline),\n      // but later also threw an error.\n      // We’re not about to restart the pipeline again, so the only thing left\n      // to do is to throw the thing instead.\n      if (callback && invoked) {\n        throw error\n      }\n\n      return done(error)\n    }\n\n    if (!callback) {\n      if (result && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  // Invoke `next`, only once.\n  function done() {\n    if (!invoked) {\n      invoked = true\n\n      callback.apply(null, arguments)\n    }\n  }\n\n  // Invoke `done` with one value.\n  // Tracks if an error is passed, too.\n  function then(value) {\n    done(null, value)\n  }\n}\n","'use strict'\n\nvar bail = require('bail')\nvar buffer = require('is-buffer')\nvar extend = require('extend')\nvar plain = require('is-plain-obj')\nvar trough = require('trough')\nvar vfile = require('vfile')\n\n// Expose a frozen processor.\nmodule.exports = unified().freeze()\n\nvar slice = [].slice\nvar own = {}.hasOwnProperty\n\n// Process pipeline.\nvar pipeline = trough()\n  .use(pipelineParse)\n  .use(pipelineRun)\n  .use(pipelineStringify)\n\nfunction pipelineParse(p, ctx) {\n  ctx.tree = p.parse(ctx.file)\n}\n\nfunction pipelineRun(p, ctx, next) {\n  p.run(ctx.tree, ctx.file, done)\n\n  function done(error, tree, file) {\n    if (error) {\n      next(error)\n    } else {\n      ctx.tree = tree\n      ctx.file = file\n      next()\n    }\n  }\n}\n\nfunction pipelineStringify(p, ctx) {\n  var result = p.stringify(ctx.tree, ctx.file)\n\n  if (result === undefined || result === null) {\n    // Empty.\n  } else if (typeof result === 'string' || buffer(result)) {\n    if ('value' in ctx.file) {\n      ctx.file.value = result\n    }\n\n    ctx.file.contents = result\n  } else {\n    ctx.file.result = result\n  }\n}\n\n// Function to create the first processor.\nfunction unified() {\n  var attachers = []\n  var transformers = trough()\n  var namespace = {}\n  var freezeIndex = -1\n  var frozen\n\n  // Data management.\n  processor.data = data\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  processor.run = run\n  processor.runSync = runSync\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  function processor() {\n    var destination = unified()\n    var index = -1\n\n    while (++index < attachers.length) {\n      destination.use.apply(null, attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  // Freeze: used to signal a processor that has finished configuration.\n  //\n  // For example, take unified itself: it’s frozen.\n  // Plugins should not be added to it.\n  // Rather, it should be extended, by invoking it, before modifying it.\n  //\n  // In essence, always invoke this when exporting a processor.\n  function freeze() {\n    var values\n    var transformer\n\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      values = attachers[freezeIndex]\n\n      if (values[1] === false) {\n        continue\n      }\n\n      if (values[1] === true) {\n        values[1] = undefined\n      }\n\n      transformer = values[0].apply(processor, values.slice(1))\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Infinity\n\n    return processor\n  }\n\n  // Data management.\n  // Getter / setter for processor-specific informtion.\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  // Plugin management.\n  //\n  // Pass it:\n  // *   an attacher and options,\n  // *   a preset,\n  // *   a list of presets, attachers, and arguments (list of attachers and\n  //     options).\n  function use(value) {\n    var settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin.apply(null, arguments)\n    } else if (typeof value === 'object') {\n      if ('length' in value) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new Error('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = extend(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = extend(settings || {}, result.settings)\n      }\n    }\n\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if ('length' in value) {\n          addPlugin.apply(null, value)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new Error('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    function addList(plugins) {\n      var index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (typeof plugins === 'object' && 'length' in plugins) {\n        while (++index < plugins.length) {\n          add(plugins[index])\n        }\n      } else {\n        throw new Error('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    function addPlugin(plugin, value) {\n      var entry = find(plugin)\n\n      if (entry) {\n        if (plain(entry[1]) && plain(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        attachers.push(slice.call(arguments))\n      }\n    }\n  }\n\n  function find(plugin) {\n    var index = -1\n\n    while (++index < attachers.length) {\n      if (attachers[index][0] === plugin) {\n        return attachers[index]\n      }\n    }\n  }\n\n  // Parse a file (in string or vfile representation) into a unist node using\n  // the `Parser` on the processor.\n  function parse(doc) {\n    var file = vfile(doc)\n    var Parser\n\n    freeze()\n    Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      return new Parser(String(file), file).parse()\n    }\n\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  // Run transforms on a unist node representation of a file (in string or\n  // vfile representation), async.\n  function run(node, file, cb) {\n    assertNode(node)\n    freeze()\n\n    if (!cb && typeof file === 'function') {\n      cb = file\n      file = null\n    }\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      transformers.run(node, vfile(file), done)\n\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          cb(null, tree, file)\n        }\n      }\n    }\n  }\n\n  // Run transforms on a unist node representation of a file (in string or\n  // vfile representation), sync.\n  function runSync(node, file) {\n    var result\n    var complete\n\n    run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    return result\n\n    function done(error, tree) {\n      complete = true\n      result = tree\n      bail(error)\n    }\n  }\n\n  // Stringify a unist node representation of a file (in string or vfile\n  // representation) into a string using the `Compiler` on the processor.\n  function stringify(node, doc) {\n    var file = vfile(doc)\n    var Compiler\n\n    freeze()\n    Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      return new Compiler(node, file).compile()\n    }\n\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  // Parse a file (in string or vfile representation) into a unist node using\n  // the `Parser` on the processor, then run transforms on that node, and\n  // compile the resulting node using the `Compiler` on the processor, and\n  // store that result on the vfile.\n  function process(doc, cb) {\n    freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      var file = vfile(doc)\n\n      pipeline.run(processor, {file: file}, done)\n\n      function done(error) {\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          cb(null, file)\n        }\n      }\n    }\n  }\n\n  // Process the given document (in string or vfile representation), sync.\n  function processSync(doc) {\n    var file\n    var complete\n\n    freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n    file = vfile(doc)\n\n    process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n// Check if `value` is a constructor.\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n// Check if `value` is an object with keys.\nfunction keys(value) {\n  var key\n  for (key in value) {\n    return true\n  }\n\n  return false\n}\n\n// Assert a parser is available.\nfunction assertParser(name, Parser) {\n  if (typeof Parser !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n// Assert a compiler is available.\nfunction assertCompiler(name, Compiler) {\n  if (typeof Compiler !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n// Assert the processor is not frozen.\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot invoke `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n// Assert `node` is a unist node.\nfunction assertNode(node) {\n  if (!node || typeof node.type !== 'string') {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n}\n\n// Assert that `complete` is `true`.\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = stringify\n\nfunction stringify(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if (own.call(value, 'position') || own.call(value, 'type')) {\n    return position(value.position)\n  }\n\n  // Position.\n  if (own.call(value, 'start') || own.call(value, 'end')) {\n    return position(value)\n  }\n\n  // Point.\n  if (own.call(value, 'line') || own.call(value, 'column')) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\nfunction point(point) {\n  if (!point || typeof point !== 'object') {\n    point = {}\n  }\n\n  return index(point.line) + ':' + index(point.column)\n}\n\nfunction position(pos) {\n  if (!pos || typeof pos !== 'object') {\n    pos = {}\n  }\n\n  return point(pos.start) + '-' + point(pos.end)\n}\n\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","'use strict'\n\nvar stringify = require('unist-util-stringify-position')\n\nmodule.exports = VMessage\n\n// Inherit from `Error#`.\nfunction VMessagePrototype() {}\nVMessagePrototype.prototype = Error.prototype\nVMessage.prototype = new VMessagePrototype()\n\n// Message properties.\nvar proto = VMessage.prototype\n\nproto.file = ''\nproto.name = ''\nproto.reason = ''\nproto.message = ''\nproto.stack = ''\nproto.fatal = null\nproto.column = null\nproto.line = null\n\n// Construct a new VMessage.\n//\n// Note: We cannot invoke `Error` on the created context, as that adds readonly\n// `line` and `column` attributes on Safari 9, thus throwing and failing the\n// data.\nfunction VMessage(reason, position, origin) {\n  var parts\n  var range\n  var location\n\n  if (typeof position === 'string') {\n    origin = position\n    position = null\n  }\n\n  parts = parseOrigin(origin)\n  range = stringify(position) || '1:1'\n\n  location = {\n    start: {line: null, column: null},\n    end: {line: null, column: null}\n  }\n\n  // Node.\n  if (position && position.position) {\n    position = position.position\n  }\n\n  if (position) {\n    // Position.\n    if (position.start) {\n      location = position\n      position = position.start\n    } else {\n      // Point.\n      location.start = position\n    }\n  }\n\n  if (reason.stack) {\n    this.stack = reason.stack\n    reason = reason.message\n  }\n\n  this.message = reason\n  this.name = range\n  this.reason = reason\n  this.line = position ? position.line : null\n  this.column = position ? position.column : null\n  this.location = location\n  this.source = parts[0]\n  this.ruleId = parts[1]\n}\n\nfunction parseOrigin(origin) {\n  var result = [null, null]\n  var index\n\n  if (typeof origin === 'string') {\n    index = origin.indexOf(':')\n\n    if (index === -1) {\n      result[1] = origin\n    } else {\n      result[0] = origin.slice(0, index)\n      result[1] = origin.slice(index + 1)\n    }\n  }\n\n  return result\n}\n","'use strict'\n\nmodule.exports = require('./lib')\n","'use strict'\n\nvar p = require('./minpath')\nvar proc = require('./minproc')\nvar buffer = require('is-buffer')\n\nmodule.exports = VFile\n\nvar own = {}.hasOwnProperty\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nvar order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nVFile.prototype.toString = toString\n\n// Access full path (`~/index.min.js`).\nObject.defineProperty(VFile.prototype, 'path', {get: getPath, set: setPath})\n\n// Access parent path (`~`).\nObject.defineProperty(VFile.prototype, 'dirname', {\n  get: getDirname,\n  set: setDirname\n})\n\n// Access basename (`index.min.js`).\nObject.defineProperty(VFile.prototype, 'basename', {\n  get: getBasename,\n  set: setBasename\n})\n\n// Access extname (`.js`).\nObject.defineProperty(VFile.prototype, 'extname', {\n  get: getExtname,\n  set: setExtname\n})\n\n// Access stem (`index.min`).\nObject.defineProperty(VFile.prototype, 'stem', {get: getStem, set: setStem})\n\n// Construct a new file.\nfunction VFile(options) {\n  var prop\n  var index\n\n  if (!options) {\n    options = {}\n  } else if (typeof options === 'string' || buffer(options)) {\n    options = {contents: options}\n  } else if ('message' in options && 'messages' in options) {\n    return options\n  }\n\n  if (!(this instanceof VFile)) {\n    return new VFile(options)\n  }\n\n  this.data = {}\n  this.messages = []\n  this.history = []\n  this.cwd = proc.cwd()\n\n  // Set path related properties in the correct order.\n  index = -1\n\n  while (++index < order.length) {\n    prop = order[index]\n\n    if (own.call(options, prop)) {\n      this[prop] = options[prop]\n    }\n  }\n\n  // Set non-path related properties.\n  for (prop in options) {\n    if (order.indexOf(prop) < 0) {\n      this[prop] = options[prop]\n    }\n  }\n}\n\nfunction getPath() {\n  return this.history[this.history.length - 1]\n}\n\nfunction setPath(path) {\n  assertNonEmpty(path, 'path')\n\n  if (this.path !== path) {\n    this.history.push(path)\n  }\n}\n\nfunction getDirname() {\n  return typeof this.path === 'string' ? p.dirname(this.path) : undefined\n}\n\nfunction setDirname(dirname) {\n  assertPath(this.path, 'dirname')\n  this.path = p.join(dirname || '', this.basename)\n}\n\nfunction getBasename() {\n  return typeof this.path === 'string' ? p.basename(this.path) : undefined\n}\n\nfunction setBasename(basename) {\n  assertNonEmpty(basename, 'basename')\n  assertPart(basename, 'basename')\n  this.path = p.join(this.dirname || '', basename)\n}\n\nfunction getExtname() {\n  return typeof this.path === 'string' ? p.extname(this.path) : undefined\n}\n\nfunction setExtname(extname) {\n  assertPart(extname, 'extname')\n  assertPath(this.path, 'extname')\n\n  if (extname) {\n    if (extname.charCodeAt(0) !== 46 /* `.` */) {\n      throw new Error('`extname` must start with `.`')\n    }\n\n    if (extname.indexOf('.', 1) > -1) {\n      throw new Error('`extname` cannot contain multiple dots')\n    }\n  }\n\n  this.path = p.join(this.dirname, this.stem + (extname || ''))\n}\n\nfunction getStem() {\n  return typeof this.path === 'string'\n    ? p.basename(this.path, this.extname)\n    : undefined\n}\n\nfunction setStem(stem) {\n  assertNonEmpty(stem, 'stem')\n  assertPart(stem, 'stem')\n  this.path = p.join(this.dirname || '', stem + (this.extname || ''))\n}\n\n// Get the value of the file.\nfunction toString(encoding) {\n  return (this.contents || '').toString(encoding)\n}\n\n// Assert that `part` is not a path (i.e., does not contain `p.sep`).\nfunction assertPart(part, name) {\n  if (part && part.indexOf(p.sep) > -1) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + p.sep + '`'\n    )\n  }\n}\n\n// Assert that `part` is not empty.\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n// Assert `path` exists.\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","'use strict'\n\nvar VMessage = require('vfile-message')\nvar VFile = require('./core.js')\n\nmodule.exports = VFile\n\nVFile.prototype.message = message\nVFile.prototype.info = info\nVFile.prototype.fail = fail\n\n// Create a message with `reason` at `position`.\n// When an error is passed in as `reason`, copies the stack.\nfunction message(reason, position, origin) {\n  var message = new VMessage(reason, position, origin)\n\n  if (this.path) {\n    message.name = this.path + ':' + message.name\n    message.file = this.path\n  }\n\n  message.fatal = false\n\n  this.messages.push(message)\n\n  return message\n}\n\n// Fail: creates a vmessage, associates it with the file, and throws it.\nfunction fail() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = true\n\n  throw message\n}\n\n// Info: creates a vmessage, associates it with the file, and marks the fatality\n// as null.\nfunction info() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = null\n\n  return message\n}\n","'use strict'\n\n// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexports.basename = basename\nexports.dirname = dirname\nexports.extname = extname\nexports.join = join\nexports.sep = '/'\n\nfunction basename(path, ext) {\n  var start = 0\n  var end = -1\n  var index\n  var firstNonSlashEnd\n  var seenNonSlash\n  var extIndex\n\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  index = path.length\n\n  if (ext === undefined || !ext.length || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  firstNonSlashEnd = -1\n  extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\nfunction dirname(path) {\n  var end\n  var unmatchedSlash\n  var index\n\n  assertPath(path)\n\n  if (!path.length) {\n    return '.'\n  }\n\n  end = -1\n  index = path.length\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\nfunction extname(path) {\n  var startDot = -1\n  var startPart = 0\n  var end = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  var preDotState = 0\n  var unmatchedSlash\n  var code\n  var index\n\n  assertPath(path)\n\n  index = path.length\n\n  while (index--) {\n    code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\nfunction join() {\n  var index = -1\n  var joined\n\n  while (++index < arguments.length) {\n    assertPath(arguments[index])\n\n    if (arguments[index]) {\n      joined =\n        joined === undefined\n          ? arguments[index]\n          : joined + '/' + arguments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  var absolute\n  var value\n\n  assertPath(path)\n\n  absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  value = normalizeString(path, !absolute)\n\n  if (!value.length && !absolute) {\n    value = '.'\n  }\n\n  if (value.length && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n// Resolve `.` and `..` elements in a path with directory names.\nfunction normalizeString(path, allowAboveRoot) {\n  var result = ''\n  var lastSegmentLength = 0\n  var lastSlash = -1\n  var dots = 0\n  var index = -1\n  var code\n  var lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            /* istanbul ignore else - No clue how to cover it. */\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n","'use strict'\n\n// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexports.cwd = cwd\n\nfunction cwd() {\n  return '/'\n}\n","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _get.apply(this, arguments);\n}\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Check if `node`is an element and has a `field` property.\n *\n * @param {unknown} node\n *   Thing to check (typically `Element`).\n * @param {unknown} field\n *   Field name to check (typically `string`).\n * @returns {boolean}\n *   Whether `node` is an element that has a `field` property.\n */\nexport function hasProperty(node, field) {\n  const value =\n    typeof field === 'string' &&\n    isNode(node) &&\n    node.type === 'element' &&\n    node.properties &&\n    own.call(node.properties, field) &&\n    node.properties[field]\n\n  return value !== null && value !== undefined && value !== false\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n  return Boolean(value && typeof value === 'object' && 'type' in value)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\n// To do next major: return `undefined`.\n/**\n * Get the rank (`1` to `6`) of headings (`h1` to `h6`).\n *\n * @param {Node} node\n *   Node to check.\n * @returns {number | null}\n *   Rank of the heading or `null` if not a heading.\n */\nexport function headingRank(node) {\n  const name =\n    (node && node.type === 'element' && node.tagName.toLowerCase()) || ''\n  const code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */ ? code - 48 /* `0` */ : null\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      // @ts-expect-error: points don’t have indent.\n      indent = options.position.indent\n      // @ts-expect-error: points don’t have indent.\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n */\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const includeImageAlt = (options || {}).includeImageAlt\n  return one(\n    value,\n    typeof includeImageAlt === 'boolean' ? includeImageAlt : true\n  )\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt) {\n  return (\n    (node(value) &&\n      (('value' in value && value.value) ||\n        (includeImageAlt && 'alt' in value && value.alt) ||\n        ('children' in value && all(value.children, includeImageAlt)))) ||\n    (Array.isArray(value) && all(value, includeImageAlt)) ||\n    ''\n  )\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","import { Element, Comment, Literal, ElementContent, RootContent, Properties } from 'hast';\nimport { RehypeAttrsOptions } from './';\n\nexport const getURLParameters = (url: string = '') =>\n  ((url.match(/([^?=&]+)(=([^&]*))/g) || []) as string[]).reduce(\n      (a: Record<string, string | number | boolean>, v: string) => (\n        (a[v.slice(0, v.indexOf('=')) as keyof typeof a] = v.slice(v.indexOf('=') + 1)), a\n      ),\n      {}\n    )\n\nexport const prevChild = (data: Literal[] = [], index: number): Comment | undefined => {\n  let i = index;\n  while (i > -1) {\n    i--;\n    if (!data[i]) return\n    if ((data[i] && data[i].value && (data[i].value as string).replace(/(\\n|\\s)/g, '') !== '') || data[i].type !== 'text') {\n      if (!/^rehype:/.test(data[i].value as string) || (data[i].type as string) !== 'comment') return;\n      return data[i] as unknown as Comment;\n    }\n  }\n  return;\n}\n\nexport const nextChild = (data: RootContent[] | ElementContent[] = [], index: number, tagName?: string, codeBlockParames?: boolean): ElementContent | undefined => {\n  let i = index;\n  while (i < data.length) {\n    i++;\n    if (tagName) {\n      const element = data[i] as Literal & Element;\n      if (element && element.value && (element.value as string).replace(/(\\n|\\s)/g, '') !== '' || data[i] && (data[i].type as string) === 'element') {\n        return element.tagName === tagName ? element : undefined\n      }\n    } else {\n      const element = data[i] as ElementContent & Literal;\n      if (!element || element.type === 'element') return;\n      if (element.type === 'text' && element.value.replace(/(\\n|\\s)/g, '') !== '') return;\n      if (element.type && /^(comment|raw)$/ig.test(element.type)) {\n        if (element.value && !/^rehype:/.test(element.value.replace(/^(\\s+)?<!--(.*?)-->/, '$2') || '')) {\n          return\n        };\n        if (codeBlockParames) {\n          const nextNode = nextChild(data, i, 'pre', codeBlockParames)\n          if (nextNode) return;\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        } else {\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        }\n      }\n    }\n  }\n  return\n}\n\n/**\n * 获取代码注视的位置\n * @param data 数据\n * @param index 当前数据所在的位置\n * @returns 返回 当前参数数据 Object，`{}`\n */\nexport const getCommentObject = ({ value = '' }: Comment): Properties => {\n  const param = getURLParameters(value.replace(/^<!--(.*?)-->/, '$1').replace(/^rehype:/, ''));\n  Object.keys(param).forEach((keyName: string) => {\n    if (param[keyName] === 'true') {\n      param[keyName] = true;\n    }\n    if (param[keyName] === 'false') {\n      param[keyName] = false;\n    }\n    if (typeof param[keyName] === 'string' && !/^0/.test(param[keyName] as string) && !isNaN(+param[keyName])) {\n      param[keyName] = +param[keyName];\n    }\n  })\n  return param;\n}\n\nexport type DataConfig = {\n  'data-config': Properties\n}\n\nexport const propertiesHandle = (defaultAttrs?: Properties | null, attrs?: Properties, type?: RehypeAttrsOptions['properties']): Properties | DataConfig => {\n  if (type === 'string') {\n    return { ...defaultAttrs, 'data-config': JSON.stringify({ ...attrs, rehyp: true })}\n  } else if (type === 'attr') {\n    return { ...defaultAttrs, ...attrs}\n  }\n  return { ...defaultAttrs, 'data-config': { ...attrs, rehyp: true }}\n}","import { Plugin } from 'unified';\nimport { Root, Element, Comment, Properties, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils';\n\nexport type RehypeAttrsOptions = {\n  /**\n   * ## `data`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs&abc=2-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p data-config=\"data-config='[object Object]'\">text</p>\n   * ```\n   * \n   * ## `string`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * \n   * 👇👇👇👇👇\n   * \n   * ```html\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\n   * ```\n   * \n   * ## attr\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p title=\"Rehype Attrs\">text</p>\n   * ```\n   * @default `data`\n   */\n  properties?: 'data' | 'string' | 'attr';\n  /**\n   * Code block passing parameters\n   */\n  codeBlockParames?: boolean;\n}\n\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options = {}) => {\n  const { properties = 'data', codeBlockParames = true } = options;\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (codeBlockParames && node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0] as Element;\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children as Literal[], index);\n          if (child) {\n            const attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, properties) as Properties\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index, '', codeBlockParames)\n        if (child) {\n          const attr = getCommentObject(child as Comment)\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, properties) as Properties\n          }\n        }\n      }\n    });\n  }\n}\n\n\nexport default rehypeAttrs\n","/**\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n */\n\n/**\n * @typedef {null | undefined | string | TestFunctionAnything | Array<string | TestFunctionAnything>} Test\n *   Check for an arbitrary element, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if an element passes a test, unaware of TypeScript inferral.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element’s parent.\n * @returns {boolean | void}\n *   Whether this element passes the test.\n */\n\n/**\n * @template {Element} T\n *   Element type.\n * @typedef {T['tagName'] | TestFunctionPredicate<T> | Array<T['tagName'] | TestFunctionPredicate<T>>} PredicateTest\n *   Check for an element that can be inferred by TypeScript.\n */\n\n/**\n * Check if an element passes a certain node test.\n *\n * @template {Element} T\n *   Element type.\n * @callback TestFunctionPredicate\n *   Complex test function for an element that can be inferred by TypeScript.\n * @param {Element} element\n *   An element.\n * @param {number | null | undefined} [index]\n *   The element’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The element’s parent.\n * @returns {element is T}\n *   Whether this element passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is an element, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} T\n *   Element type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific element, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is T}\n *   Whether this is an element and passes a test.\n */\n\n/**\n * Check if `node` is an `Element` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific element.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is an element and passes a test.\n */\nexport const isElement =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *  When nullish, checks if `node` is an `Element`.\n *   *  When `string`, works like passing `(element) => element.tagName === test`.\n *   *  When `function` checks if function passed the element is true.\n *   *  When `array`, checks any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName'] | TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<string | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain tag name.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast-util-is-element').Test} Test\n *\n * @typedef {'prepend'|'append'|'wrap'|'before'|'after'} Behavior\n *\n * @callback Build\n * @param {Element} node\n * @returns {ElementChild|ElementChild[]}\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior} [behavior='prepend']\n *   How to create links.\n * @property {Behavior} [behaviour]\n *   Please use `behavior` instead\n * @property {Properties} [properties]\n *   Extra properties to set on the link when injecting.\n *   Defaults to `{ariaHidden: true, tabIndex: -1}` when `'prepend'` or\n *   `'append'`.\n * @property {ElementChild|ElementChild[]|Build} [content={type: 'element', tagName: 'span', properties: {className: ['icon', 'icon-link']}, children: []}]\n *   hast nodes to insert in the link.\n * @property {ElementChild|ElementChild[]|Build} [group]\n *   hast node to wrap the heading and link with, if `behavior` is `'before'` or\n *   `'after'`.\n *   There is no default.\n * @property {Test} [test]\n *   Test to define which heading elements are linked.\n *   Any test that can be given to `hast-util-is-element` is supported.\n *   The default (no test) is to link all headings.\n *   Can be used to link only h1-h3, or for example all except h1.\n */\n\nimport extend from 'extend'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {visit, SKIP} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/**\n * Plugin to automatically add links to headings (h1-h6).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function rehypeAutolinkHeadings(options = {}) {\n  let props = options.properties\n  const behavior = options.behaviour || options.behavior || 'prepend'\n  const content = options.content || contentDefaults\n  const group = options.group\n  const is = convertElement(options.test)\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  let method\n\n  if (behavior === 'wrap') {\n    method = wrap\n  } else if (behavior === 'before' || behavior === 'after') {\n    method = around\n  } else {\n    if (!props) {\n      props = {ariaHidden: 'true', tabIndex: -1}\n    }\n\n    method = inject\n  }\n\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (\n        headingRank(node) &&\n        hasProperty(node, 'id') &&\n        is(node, index, parent)\n      ) {\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function inject(node) {\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, extend(true, {}, props), toChildren(content, node))\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function around(node, index, parent) {\n    // Uncommon.\n    /* c8 ignore next */\n    if (typeof index !== 'number' || !parent) return\n\n    const link = create(\n      node,\n      extend(true, {}, props),\n      toChildren(content, node)\n    )\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function wrap(node) {\n    node.children = [create(node, extend(true, {}, props), node.children)]\n    return [SKIP]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild[]}\n   */\n  function toChildren(value, node) {\n    const result = toNode(value, node)\n    return Array.isArray(result) ? result : [result]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild|ElementChild[]}\n   */\n  function toNode(value, node) {\n    if (typeof value === 'function') return value(node)\n    return extend(true, Array.isArray(value) ? [] : {}, value)\n  }\n\n  /**\n   * @param {Element} node\n   * @param {Properties} props\n   * @param {ElementChild[]} children\n   * @returns {Element}\n   */\n  function create(node, props, children) {\n    return {\n      type: 'element',\n      tagName: 'a',\n      properties: Object.assign({}, props, {\n        // Fix hast types and make them required.\n        /* c8 ignore next */\n        href: '#' + (node.properties || {}).id\n      }),\n      children\n    }\n  }\n}\n","import { Plugin } from 'unified';\nimport { Root, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\n\nexport type RehypeIgnoreOptions = {\n  /**\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\n   */\n  openDelimiter?: string;\n  /**\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\n   */\n  closeDelimiter?: string;\n}\n\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\n  return (tree) => {\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      if (node.type === 'element' || node.type === 'root') {\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\n        // if (start > -1 && end > -1) {\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\n        // }\n        let start = false;\n        node.children = node.children.filter((item) => {\n          if (item.type === 'raw' || item.type === 'comment') {\n            let str =  (item.value || '').trim();\n            str = str.replace(/^<!--(.*?)-->/, '$1')\n            if (str === openDelimiter) {\n                start = true;\n                return false;\n            }\n            if (str === closeDelimiter) {\n                start = false;\n                return false;\n            }\n          }\n          \n          return !start;\n        })\n      }\n    });\n  }\n}\n\nexport default rehypeIgnore;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out.\n */\n\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create a new `tree` of copies of all nodes that pass `test`.\n *\n * The tree is walked in *preorder* (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @param tree\n *   Tree to filter.\n * @param options\n *   Configuration (optional).\n * @param test\n *   `unist-util-is` compatible test.\n * @returns\n *   New filtered tree.\n *\n *   `null` is returned if `tree` itself didn’t pass the test, or is cascaded\n *   away.\n */\nexport const filter =\n  /**\n   * @type {(\n   *  (<Tree extends Node, Check extends Test>(node: Tree, options: Options | null | undefined, test: Check | null | undefined) => import('./complex-types.js').Matches<Tree, Check>) &\n   *  (<Tree extends Node, Check extends Test>(node: Tree, test: Check) => import('./complex-types.js').Matches<Tree, Check>) &\n   *  (<Tree extends Node>(node: Tree, options?: Options | null | undefined) => Tree)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Options | Test | null | undefined} [options]\n     * @param {Test | null | undefined} [test]\n     * @returns {Node | null}\n     */\n    function (tree, options, test) {\n      const is = convert(test || options)\n      /** @type {boolean | null | undefined} */\n      const cascadeRaw =\n        options && typeof options === 'object' && 'cascade' in options\n          ? /** @type {boolean | null | undefined} */ (options.cascade)\n          : undefined\n      const cascade =\n        cascadeRaw === undefined || cascadeRaw === null ? true : cascadeRaw\n\n      return preorder(tree)\n\n      /**\n       * @param {Node} node\n       *   Current node.\n       * @param {number | undefined} [index]\n       *   Index of `node` in `parent`.\n       * @param {Parent | undefined} [parent]\n       *   Parent node.\n       * @returns {Node | null}\n       *   Shallow copy of `node`.\n       */\n      function preorder(node, index, parent) {\n        /** @type {Array<Node>} */\n        const children = []\n\n        if (!is(node, index, parent)) return null\n\n        // @ts-expect-error: Looks like a parent.\n        if (node.children) {\n          let childIndex = -1\n\n          // @ts-expect-error Looks like a parent.\n          while (++childIndex < node.children.length) {\n            // @ts-expect-error Looks like a parent.\n            const result = preorder(node.children[childIndex], childIndex, node)\n\n            if (result) {\n              children.push(result)\n            }\n          }\n\n          // @ts-expect-error Looks like a parent.\n          if (cascade && node.children.length > 0 && children.length === 0)\n            return null\n        }\n\n        // Create a shallow clone, using the new children.\n        /** @type {typeof node} */\n        // @ts-expect-error all the fields will be copied over.\n        const next = {}\n        /** @type {string} */\n        let key\n\n        for (key in node) {\n          if (own.call(node, key)) {\n            // @ts-expect-error: Looks like a record.\n            next[key] = key === 'children' ? children : node[key]\n          }\n        }\n\n        return next\n      }\n    }\n  )\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef Options options\n *   Configuration.\n * @property {boolean} [showLineNumbers]\n *   Set `showLineNumbers` to `true` to always display line number\n * @property {boolean} [ignoreMissing]\n *   Set `ignoreMissing` to `true` to ignore unsupported languages and line highlighting when no language is specified\n */\n\nimport { visit } from 'unist-util-visit'\nimport { toString } from 'hast-util-to-string'\nimport { filter } from 'unist-util-filter'\nimport rangeParser from 'parse-numeric-range'\n\n/**\n * @param {Element} node\n * @return {string|null}\n */\nconst getLanguage = (node) => {\n  const className = node.properties.className\n  //@ts-ignore\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase()\n    }\n  }\n  return null\n}\n\n/**\n * Create a closure that determines if we have to highlight the given index\n *\n * @param {string} meta\n * @return { (index:number) => boolean }\n */\nconst calculateLinesToHighlight = (meta) => {\n  const RE = /{([\\d,-]+)}/\n  // Remove space between {} e.g. {1, 3}\n  const parsedMeta = meta\n    .split(',')\n    .map((str) => str.trim())\n    .join()\n  if (RE.test(parsedMeta)) {\n    const strlineNumbers = RE.exec(parsedMeta)[1]\n    const lineNumbers = rangeParser(strlineNumbers)\n    return (index) => lineNumbers.includes(index + 1)\n  } else {\n    return () => false\n  }\n}\n\n/**\n * Check if we want to start the line numbering from a given number or 1\n * showLineNumbers=5, will start the numbering from 5\n * @param {string} meta\n * @returns {number}\n */\nconst calculateStartingLine = (meta) => {\n  const RE = /showLineNumbers=(?<lines>\\d+)/i\n  // pick the line number after = using a named capturing group\n  if (RE.test(meta)) {\n    const {\n      groups: { lines },\n    } = RE.exec(meta)\n    return Number(lines)\n  }\n  return 1\n}\n\n/**\n * Create container AST for node lines\n *\n * @param {number} number\n * @return {Element[]}\n */\nconst createLineNodes = (number) => {\n  const a = new Array(number)\n  for (let i = 0; i < number; i++) {\n    a[i] = {\n      type: 'element',\n      tagName: 'span',\n      properties: { className: [] },\n      children: [],\n    }\n  }\n  return a\n}\n\n/**\n * Split multiline text nodes into individual nodes with positioning\n * Add a node start and end line position information for each text node\n *\n * @return { (ast:Element['children']) => Element['children'] }\n *\n */\nconst addNodePositionClosure = () => {\n  let startLineNum = 1\n  /**\n   * @param {Element['children']} ast\n   * @return {Element['children']}\n   */\n  const addNodePosition = (ast) => {\n    return ast.reduce((result, node) => {\n      if (node.type === 'text') {\n        const value = /** @type {string} */ (node.value)\n        const numLines = (value.match(/\\n/g) || '').length\n        if (numLines === 0) {\n          node.position = {\n            // column: 1 is needed to avoid error with @next/mdx\n            // https://github.com/timlrx/rehype-prism-plus/issues/44\n            start: { line: startLineNum, column: 1 },\n            end: { line: startLineNum, column: 1 },\n          }\n          result.push(node)\n        } else {\n          const lines = value.split('\\n')\n          for (const [i, line] of lines.entries()) {\n            result.push({\n              type: 'text',\n              value: i === lines.length - 1 ? line : line + '\\n',\n              position: {\n                start: { line: startLineNum + i, column: 1 },\n                end: { line: startLineNum + i, column: 1 },\n              },\n            })\n          }\n        }\n        startLineNum = startLineNum + numLines\n\n        return result\n      }\n\n      if (Object.prototype.hasOwnProperty.call(node, 'children')) {\n        const initialLineNum = startLineNum\n        // @ts-ignore\n        node.children = addNodePosition(node.children, startLineNum)\n        result.push(node)\n        node.position = {\n          start: { line: initialLineNum, column: 1 },\n          end: { line: startLineNum, column: 1 },\n        }\n        return result\n      }\n\n      result.push(node)\n      return result\n    }, [])\n  }\n  return addNodePosition\n}\n\n/**\n * Rehype prism plugin generator that highlights code blocks with refractor (prismjs)\n *\n * Pass in your own refractor object with the required languages registered:\n * https://github.com/wooorm/refractor#refractorregistersyntax\n *\n * @param {import('refractor/lib/core').Refractor} refractor\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypePrismGenerator = (refractor) => {\n  return (options = {}) => {\n    return (tree) => {\n      visit(tree, 'element', visitor)\n    }\n\n    /**\n     * @param {Element} node\n     * @param {number} index\n     * @param {Element} parent\n     */\n    function visitor(node, index, parent) {\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      let meta = /** @type {string} */ (node?.data?.meta || node?.properties?.metastring || '')\n      // Coerce className to array\n      if (node.properties.className) {\n        if (typeof node.properties.className === 'boolean') {\n          node.properties.className = []\n        } else if (!Array.isArray(node.properties.className)) {\n          node.properties.className = [node.properties.className]\n        }\n      } else {\n        node.properties.className = []\n      }\n      node.properties.className.push('code-highlight')\n      const lang = getLanguage(node)\n\n      /** @type {Element} */\n      let refractorRoot\n\n      // Syntax highlight\n      if (lang) {\n        try {\n          let rootLang\n          if (lang?.includes('diff-')){\n            rootLang=lang.split('-')[1]\n          } else{\n            rootLang=lang\n          }\n          // @ts-ignore\n          refractorRoot = refractor.highlight(toString(node), rootLang)\n          // @ts-ignore className is already an array\n          parent.properties.className = (parent.properties.className || []).concat(\n            'language-' + rootLang\n          )\n        } catch (err) {\n          if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n            refractorRoot = node\n          } else {\n            throw err\n          }\n        }\n      } else {\n        refractorRoot = node\n      }\n\n      refractorRoot.children = addNodePositionClosure()(refractorRoot.children)\n\n      // Add position info to root\n      if (refractorRoot.children.length > 0) {\n        refractorRoot.position = {\n          start: { line: refractorRoot.children[0].position.start.line, column: 0 },\n          end: {\n            line: refractorRoot.children[refractorRoot.children.length - 1].position.end.line,\n            column: 0,\n          },\n        }\n      } else {\n        refractorRoot.position = {\n          start: { line: 0, column: 0 },\n          end: { line: 0, column: 0 },\n        }\n      }\n\n      const shouldHighlightLine = calculateLinesToHighlight(meta)\n      const startingLineNumber = calculateStartingLine(meta)\n      const codeLineArray = createLineNodes(refractorRoot.position.end.line)\n\n      const falseShowLineNumbersStr = [\n        'showlinenumbers=false',\n        'showlinenumbers=\"false\"',\n        'showlinenumbers={false}',\n      ]\n      for (const [i, line] of codeLineArray.entries()) {\n        // Default class name for each line\n        line.properties.className = ['code-line']\n\n        // Syntax highlight\n        const treeExtract = filter(\n          refractorRoot,\n          (node) => node.position.start.line <= i + 1 && node.position.end.line >= i + 1\n        )\n        line.children = treeExtract.children\n\n        // Line number\n        if (\n          (meta.toLowerCase().includes('showLineNumbers'.toLowerCase()) ||\n            options.showLineNumbers) &&\n          !falseShowLineNumbersStr.some((str) => meta.toLowerCase().includes(str))\n        ) {\n          line.properties.line = [(i + startingLineNumber).toString()]\n          line.properties.className.push('line-number')\n        }\n\n        // Line highlight\n        if (shouldHighlightLine(i)) {\n          line.properties.className.push('highlight-line')\n        }\n\n        // Diff classes\n        if ((lang === 'diff' || lang?.includes('diff-')) && toString(line).substring(0, 1) === '-') {\n          line.properties.className.push('deleted')\n        } else if ((lang === 'diff' || lang?.includes('diff-')) && toString(line).substring(0, 1) === '+') {\n          line.properties.className.push('inserted')\n        }\n      }\n\n      // Remove possible trailing line when splitting by \\n which results in empty array\n      if (\n        codeLineArray.length > 0 &&\n        toString(codeLineArray[codeLineArray.length - 1]).trim() === ''\n      ) {\n        codeLineArray.pop()\n      }\n\n      node.children = codeLineArray\n    }\n  }\n}\n\nexport default rehypePrismGenerator\n","import { refractor as refractorAll } from 'refractor/lib/all.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * This supports all the languages and should be used on the server side.\n *\n * Consider using rehypePrismCommon or rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismAll = rehypePrismGenerator(refractorAll)\n\nexport default rehypePrismAll\n","import { refractor as refractorCommon } from 'refractor/lib/common.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * Supported languages: https://github.com/wooorm/refractor#data\n *\n * Consider using rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismCommon = rehypePrismGenerator(refractorCommon)\n\nexport default rehypePrismCommon\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes.\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements.\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {Schema} schema\n *   Current schema.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n * @property {boolean} location\n *   Whether location info was found.\n */\n\nimport {h, s} from 'hastscript'\nimport {html, svg, find} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | VFile | null | undefined} [options]\n *   Configuration.\n * @returns {Node}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const options_ = options || {}\n  /** @type {Options} */\n  let settings\n  /** @type {VFile | undefined} */\n  let file\n\n  if (isFile(options_)) {\n    file = options_\n    settings = {}\n  } else {\n    file = options_.file || undefined\n    settings = options_\n  }\n\n  return one(\n    {\n      schema: settings.space === 'svg' ? svg : html,\n      file,\n      verbose: settings.verbose,\n      location: false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Node}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Node} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // @ts-expect-error: always defined as we give valid input.\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      // @ts-expect-error Types are out of date.\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<Content>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<Content>} */\n  const result = []\n\n  while (++index < nodes.length) {\n    // @ts-expect-error Assume no roots in `nodes`.\n    result[index] = one(state, nodes[index])\n  }\n\n  return result\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    /** @type {Root} */\n    // @ts-expect-error Types are wrong.\n    const content = one(state, reference.content)\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Node} to\n *   hast node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Node} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      node.data = {\n        position: {\n          // @ts-expect-error: assume not `undefined`.\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n  // @ts-expect-error `undefined` is fine.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n\n/**\n * Check if something is a file.\n *\n * @param {VFile | Options} value\n *   File or options.\n * @returns {value is VFile}\n *   Whether `value` is a file.\n */\nfunction isFile(value) {\n  return 'messages' in value\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n */\n\n/**\n * @typedef Point\n *   unist point, where `line` and `column` can be `undefined`.\n * @property {number | undefined} line\n *   Line.\n * @property {number | undefined} column\n *   Column.\n * @property {number | undefined} [offset]\n *   Offset.\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get a line/column-based `point` from `offset`.\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {Point}\n *   Point, line/column are undefined for invalid or out of bounds input.\n *\n * @callback ToOffset\n *   Get an offset from a line/column-based `point`.\n * @param {Point | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number}\n *   Offset or `-1` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get a line/column-based `point` from `offset`.\n * @property {ToOffset} toOffset\n *   Get an offset from a line/column-based `point`.\n */\n\n/**\n * Index the given document so you can translate between line/column and offset\n * based positional info.\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /** @type {Array<number>} */\n  const indices = []\n  const search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n\n    return -1\n  }\n}\n","/**\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5Fragment\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['documentType']} P5Doctype\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['parentNode']} P5Parent\n * @typedef {import('parse5').Token.Attribute} P5Attribute\n * @typedef {Exclude<P5Node, P5Document | P5Fragment>} P5Child\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {'html' | 'svg'} Space\n *\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in.\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {html, svg, find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst own = {}.hasOwnProperty\n\n/** @type {(from: Node, schema: Schema) => P5Node} */\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to Parse5’s AST.\n *\n * @param {Node} tree\n *   Tree to transform.\n * @param {Options | Space | null | undefined} [options]\n *   Configuration.\n * @returns {P5Node}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const space = options && typeof options === 'object' ? options.space : options\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Document}\n */\nfunction root(node, schema) {\n  /** @type {P5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Fragment}\n */\nfunction fragment(node, schema) {\n  /** @type {P5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n * @returns {P5Doctype}\n */\nfunction doctype(node) {\n  /** @type {P5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    // @ts-expect-error: change to `null` in a major?\n    parentNode: undefined\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n * @returns {P5Text}\n */\nfunction text(node) {\n  /** @type {P5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n * @returns {P5Comment}\n */\nfunction comment(node) {\n  /** @type {P5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n * @param {Schema} schema\n *   Current schema.\n * @returns {P5Element}\n *   `parse5` node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<P5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  /** @type {P5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: html and svg both have a space.\n    namespaceURI: webNamespaces[currentSchema.space],\n    childNodes: [],\n    // @ts-expect-error: no `parentNode`\n    parentNode: undefined\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<string | number> | string | number | boolean | null | undefined} value\n *   hast property value.\n * @returns {P5Attribute | void}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === undefined ||\n    value === null ||\n    value === false ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {P5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<Content>} children\n *   List of children.\n * @param {P5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<P5Child>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<P5Child>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {P5Child} */\n      // @ts-expect-error assume no document.\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Node} from\n *   hast node.\n * @param {P5Node} to\n *   `parse5` node.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      // @ts-expect-error assume this is set.\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      // @ts-expect-error assume this is set.\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentFragment} P5Fragment\n * @typedef {Omit<import('parse5').Element, 'parentNode'>} P5Element\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {Omit<import('parse5').Location, 'startOffset' | 'endOffset'> & {startOffset: number|undefined, endOffset: number|undefined}} P5Location\n * @typedef {import('parse5').ParserOptions} P5ParserOptions\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {import('../complex-types').Raw} Raw\n *\n * @typedef {Omit<Comment, 'value'> & {value: {stitch: Node}}} Stitch\n *\n * @typedef Options\n * @property {Array<string>} [passThrough]\n *   List of custom hast node types to pass through (keep) in hast.\n *   If the passed through nodes have children, those children are expected to\n *   be hast and will be handled.\n *\n * @typedef HiddenTokenizer\n * @property {Array<HiddenLocationTracker>} __mixins\n *   Way too simple, but works for us.\n * @property {HiddenPreprocessor} preprocessor\n * @property {(value: string) => void} write\n * @property {() => number} _consume\n * @property {Array<HiddenToken>} tokenQueue\n * @property {string} state\n * @property {string} returnState\n * @property {number} charRefCode\n * @property {Array<number>} tempBuff\n * @property {Function} _flushCodePointsConsumedAsCharacterReference\n * @property {string} lastStartTagName\n * @property {number} consumedAfterSnapshot\n * @property {boolean} active\n * @property {HiddenToken|undefined} currentCharacterToken\n * @property {HiddenToken|undefined} currentToken\n * @property {unknown} currentAttr\n * @property {Function} NAMED_CHARACTER_REFERENCE_STATE\n * @property {Function} NUMERIC_CHARACTER_REFERENCE_END_STATE\n *\n * @typedef {Record<string, unknown> & {location: P5Location}} HiddenToken\n *\n * @typedef HiddenPreprocessor\n * @property {string|undefined} html\n * @property {number} pos\n * @property {number} lastGapPos\n * @property {number} lastCharPos\n * @property {Array<number>} gapStack\n * @property {boolean} skipNextNewLine\n * @property {boolean} lastChunkWritten\n * @property {boolean} endOfChunkHit\n *\n * @typedef HiddenLocationTracker\n * @property {P5Location|undefined} currentAttrLocation\n * @property {P5Location} ctLoc\n * @property {HiddenPosTracker} posTracker\n *\n * @typedef HiddenPosTracker\n * @property {boolean} isEol\n * @property {number} lineStartPos\n * @property {number} droppedBufferSize\n * @property {number} offset\n * @property {number} col\n * @property {number} line\n */\n\n// @ts-expect-error: untyped.\nimport Parser from 'parse5/lib/parser/index.js'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst inTemplateMode = 'IN_TEMPLATE_MODE'\nconst dataState = 'DATA_STATE'\nconst characterToken = 'CHARACTER_TOKEN'\nconst startTagToken = 'START_TAG_TOKEN'\nconst endTagToken = 'END_TAG_TOKEN'\nconst commentToken = 'COMMENT_TOKEN'\nconst doctypeToken = 'DOCTYPE_TOKEN'\n\n/** @type {P5ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Given a hast tree and an optional vfile (for positional info), return a new\n * parsed-again hast tree.\n *\n * @param tree\n *   Original hast tree.\n * @param file\n *   Virtual file for positional info, optional.\n * @param options\n *   Configuration.\n */\nexport const raw =\n  /**\n   * @type {(\n   *   ((tree: Node, file: VFile|undefined, options?: Options) => Node) &\n   *   ((tree: Node, options?: Options) => Node)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {VFile} [file]\n     * @param {Options} [options]\n     */\n    function (tree, file, options) {\n      let index = -1\n      const parser = new Parser(parseOptions)\n      const one = zwitch('type', {\n        handlers: {root, element, text, comment, doctype, raw: handleRaw},\n        // @ts-expect-error: hush.\n        unknown\n      })\n      /** @type {boolean|undefined} */\n      let stitches\n      /** @type {HiddenTokenizer|undefined} */\n      let tokenizer\n      /** @type {HiddenPreprocessor|undefined} */\n      let preprocessor\n      /** @type {HiddenPosTracker|undefined} */\n      let posTracker\n      /** @type {HiddenLocationTracker|undefined} */\n      let locationTracker\n\n      if (isOptions(file)) {\n        options = file\n        file = undefined\n      }\n\n      if (options && options.passThrough) {\n        while (++index < options.passThrough.length) {\n          // @ts-expect-error: hush.\n          one.handlers[options.passThrough[index]] = stitch\n        }\n      }\n\n      const result = fromParse5(\n        documentMode(tree) ? document() : fragment(),\n        file\n      )\n\n      if (stitches) {\n        visit(result, 'comment', (node, index, parent) => {\n          const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n          if (stitch.value.stitch && parent !== null && index !== null) {\n            // @ts-expect-error: assume the stitch is allowed.\n            parent.children[index] = stitch.value.stitch\n            return index\n          }\n        })\n      }\n\n      // Unpack if possible and when not given a `root`.\n      if (\n        tree.type !== 'root' &&\n        result.type === 'root' &&\n        result.children.length === 1\n      ) {\n        return result.children[0]\n      }\n\n      return result\n\n      /**\n       * @returns {P5Fragment}\n       */\n      function fragment() {\n        /** @type {P5Element} */\n        const context = {\n          nodeName: 'template',\n          tagName: 'template',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Element} */\n        const mock = {\n          nodeName: 'documentmock',\n          tagName: 'documentmock',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Fragment} */\n        const doc = {nodeName: '#document-fragment', childNodes: []}\n\n        parser._bootstrap(mock, context)\n        parser._pushTmplInsertionMode(inTemplateMode)\n        parser._initTokenizerForFragmentParsing()\n        parser._insertFakeRootElement()\n        parser._resetInsertionMode()\n        parser._findFormInFragmentContext()\n\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        parser._adoptNodes(mock.childNodes[0], doc)\n\n        return doc\n      }\n\n      /**\n       * @returns {P5Document}\n       */\n      function document() {\n        /** @type {P5Document} */\n        const doc = parser.treeAdapter.createDocument()\n\n        parser._bootstrap(doc, undefined)\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        return doc\n      }\n\n      /**\n       * @param {Array<Content>} nodes\n       * @returns {void}\n       */\n      function all(nodes) {\n        let index = -1\n\n        /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n        if (nodes) {\n          while (++index < nodes.length) {\n            one(nodes[index])\n          }\n        }\n      }\n\n      /**\n       * @param {Root} node\n       * @returns {void}\n       */\n      function root(node) {\n        all(node.children)\n      }\n\n      /**\n       * @param {Element} node\n       * @returns {void}\n       */\n      function element(node) {\n        resetTokenizer()\n        parser._processInputToken(startTag(node))\n\n        all(node.children)\n\n        if (!htmlVoidElements.includes(node.tagName)) {\n          resetTokenizer()\n          parser._processInputToken(endTag(node))\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @returns {void}\n       */\n      function text(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: characterToken,\n          chars: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Doctype} node\n       * @returns {void}\n       */\n      function doctype(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: doctypeToken,\n          name: 'html',\n          forceQuirks: false,\n          publicId: '',\n          systemId: '',\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Comment|Stitch} node\n       * @returns {void}\n       */\n      function comment(node) {\n        resetTokenizer()\n        parser._processInputToken({\n          type: commentToken,\n          data: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Raw} node\n       * @returns {void}\n       */\n      function handleRaw(node) {\n        const start = pointStart(node)\n        const line = start.line || 1\n        const column = start.column || 1\n        const offset = start.offset || 0\n\n        /* c8 ignore next 4 */\n        if (!preprocessor) throw new Error('Expected `preprocessor`')\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n        if (!locationTracker) throw new Error('Expected `locationTracker`')\n\n        // Reset preprocessor:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/preprocessor.js#L17>.\n        preprocessor.html = undefined\n        preprocessor.pos = -1\n        preprocessor.lastGapPos = -1\n        preprocessor.lastCharPos = -1\n        preprocessor.gapStack = []\n        preprocessor.skipNextNewLine = false\n        preprocessor.lastChunkWritten = false\n        preprocessor.endOfChunkHit = false\n\n        // Reset preprocessor mixin:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/position-tracking/preprocessor-mixin.js>.\n        posTracker.isEol = false\n        posTracker.lineStartPos = -column + 1 // Looks weird, but ensures we get correct positional info.\n        posTracker.droppedBufferSize = offset\n        posTracker.offset = 0\n        posTracker.col = 1\n        posTracker.line = line\n\n        // Reset location tracker:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js>.\n        locationTracker.currentAttrLocation = undefined\n        locationTracker.ctLoc = createParse5Location(node)\n\n        // See the code for `parse` and `parseFragment`:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/parser/index.js#L371>.\n        tokenizer.write(node.value)\n        parser._runParsingLoop(null)\n\n        // Character references hang, so if we ended there, we need to flush\n        // those too.\n        // We reset the preprocessor as if the document ends here.\n        // Then one single call to the relevant state does the trick, parse5\n        // consumes the whole token.\n        if (\n          tokenizer.state === 'NAMED_CHARACTER_REFERENCE_STATE' ||\n          tokenizer.state === 'NUMERIC_CHARACTER_REFERENCE_END_STATE'\n        ) {\n          preprocessor.lastChunkWritten = true\n          tokenizer[tokenizer.state](tokenizer._consume())\n        }\n      }\n\n      /**\n       * @param {Node} node\n       */\n      function stitch(node) {\n        stitches = true\n\n        /** @type {Node} */\n        let clone\n\n        // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n        // passed through node).\n        if ('children' in node) {\n          clone = {\n            ...node,\n            children: raw(\n              {type: 'root', children: node.children},\n              file,\n              options\n              // @ts-expect-error Assume a given parent yields a parent.\n            ).children\n          }\n        } else {\n          clone = {...node}\n        }\n\n        // Hack: `value` is supposed to be a string, but as none of the tools\n        // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n        // through.\n        comment({type: 'comment', value: {stitch: clone}})\n      }\n\n      function resetTokenizer() {\n        /* c8 ignore next 2 */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n\n        // Process final characters if they’re still there after hibernating.\n        // Similar to:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js#L95>.\n        const token = tokenizer.currentCharacterToken\n\n        if (token) {\n          token.location.endLine = posTracker.line\n          token.location.endCol = posTracker.col + 1\n          token.location.endOffset = posTracker.offset + 1\n          parser._processInputToken(token)\n        }\n\n        // Reset tokenizer:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/index.js#L218-L234>.\n        // Especially putting it back in the `data` state is useful: some elements,\n        // like textareas and iframes, change the state.\n        // See GH-7.\n        // But also if broken HTML is in `raw`, and then a correct element is given.\n        // See GH-11.\n        tokenizer.tokenQueue = []\n        tokenizer.state = dataState\n        tokenizer.returnState = ''\n        tokenizer.charRefCode = -1\n        tokenizer.tempBuff = []\n        tokenizer.lastStartTagName = ''\n        tokenizer.consumedAfterSnapshot = -1\n        tokenizer.active = false\n        tokenizer.currentCharacterToken = undefined\n        tokenizer.currentToken = undefined\n        tokenizer.currentAttr = undefined\n      }\n    }\n  )\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction startTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: startTagToken,\n    tagName: node.tagName,\n    selfClosing: false,\n    attrs: attributes(node),\n    location\n  }\n}\n\n/**\n * @param {Element} node\n * @returns {Array<P5Attribute>}\n */\nfunction attributes(node) {\n  return toParse5({\n    tagName: node.tagName,\n    type: 'element',\n    properties: node.properties,\n    children: []\n    // @ts-expect-error Assume element.\n  }).attrs\n}\n\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction endTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: endTagToken,\n    tagName: node.tagName,\n    attrs: [],\n    location\n  }\n}\n\n/**\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot compile `' + node.type + '` node')\n}\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * @param {Node|Stitch} node\n * @returns {P5Location}\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  return {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n}\n\n/**\n * @param {VFile|Options|undefined} value\n * @return {value is Options}\n */\nfunction isOptions(value) {\n  return Boolean(value && !('message' in value && 'messages' in value))\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} Options\n * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Plugin to parse the tree again (and raw nodes).\n * Keeping positional info OK.  🙌\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeRaw(options = {}) {\n  return (tree, file) => {\n    // Assume that when a root was given, it’s also returned.\n    const result = /** @type {Root} */ (raw(tree, file, options))\n    return result\n  }\n}\n","const rtlRange = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nconst ltrRange =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\n/* eslint-disable no-misleading-character-class */\nconst rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']')\nconst ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']')\n/* eslint-enable no-misleading-character-class */\n\n/**\n * Detect the direction of text: left-to-right, right-to-left, or neutral\n *\n * @param {string} value\n * @returns {'rtl'|'ltr'|'neutral'}\n */\nexport function direction(value) {\n  const source = String(value || '')\n  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral'\n}\n","/**\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').ElementChild} ElementChild\n * @typedef {import('./types.js').Direction} Direction\n * @typedef {import('unist-util-visit/complex-types.js').Visitor<ElementChild>} Visitor\n */\n\nimport {direction} from 'direction'\nimport {toString} from 'hast-util-to-string'\nimport {svg} from 'property-information'\nimport {visit, EXIT, SKIP} from 'unist-util-visit'\n\n/**\n * Enter a node.\n *\n * The caller is responsible for calling the return value `exit`.\n *\n * @param {SelectState} state\n *   Current state.\n *\n *   Will be mutated: `exit` undos the changes.\n * @param {Node} node\n *   Node to enter.\n * @returns {() => void}\n *   Call to exit.\n */\n// eslint-disable-next-line complexity\nexport function enterState(state, node) {\n  const schema = state.schema\n  const language = state.language\n  const currentDirection = state.direction\n  const editableOrEditingHost = state.editableOrEditingHost\n  /** @type {Direction | undefined} */\n  let dirInferred\n\n  if (node.type === 'element' && node.properties) {\n    const lang = node.properties.xmlLang || node.properties.lang\n    const type = node.properties.type || 'text'\n    const dir = dirProperty(node)\n\n    if (lang !== undefined && lang !== null) {\n      state.language = String(lang)\n    }\n\n    if (schema && schema.space === 'html') {\n      if (node.properties.contentEditable === 'true') {\n        state.editableOrEditingHost = true\n      }\n\n      if (node.tagName === 'svg') {\n        state.schema = svg\n      }\n\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\n      // Explicit `[dir=rtl]`.\n      if (dir === 'rtl') {\n        dirInferred = dir\n      } else if (\n        // Explicit `[dir=ltr]`.\n        dir === 'ltr' ||\n        // HTML with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'html') ||\n        // `input[type=tel]` with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'input' && type === 'tel')\n      ) {\n        dirInferred = 'ltr'\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n      } else if (dir === 'auto' || node.tagName === 'bdi') {\n        if (node.tagName === 'textarea') {\n          // Check contents of `<textarea>`.\n          dirInferred = dirBidi(toString(node))\n        } else if (\n          node.tagName === 'input' &&\n          (type === 'email' ||\n            type === 'search' ||\n            type === 'tel' ||\n            type === 'text')\n        ) {\n          // Check value of `<input>`.\n          dirInferred = node.properties.value\n            ? // @ts-expect-error Assume string\n              dirBidi(node.properties.value)\n            : 'ltr'\n        } else {\n          // Check text nodes in `node`.\n          visit(node, inferDirectionality)\n        }\n      }\n\n      if (dirInferred) {\n        state.direction = dirInferred\n      }\n    }\n    // Turn off editing mode in non-HTML spaces.\n    else if (state.editableOrEditingHost) {\n      state.editableOrEditingHost = false\n    }\n  }\n\n  return reset\n\n  function reset() {\n    state.schema = schema\n    state.language = language\n    state.direction = currentDirection\n    state.editableOrEditingHost = editableOrEditingHost\n  }\n\n  /** @type {Visitor} */\n  function inferDirectionality(child) {\n    if (child.type === 'text') {\n      dirInferred = dirBidi(child.value)\n      return dirInferred ? EXIT : undefined\n    }\n\n    if (\n      child !== node &&\n      child.type === 'element' &&\n      (child.tagName === 'bdi' ||\n        child.tagName === 'script' ||\n        child.tagName === 'style' ||\n        child.tagName === 'textare' ||\n        dirProperty(child))\n    ) {\n      return SKIP\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Direction | undefined}\n */\nfunction dirBidi(value) {\n  const result = direction(value)\n  return result === 'neutral' ? undefined : result\n}\n\n/**\n * @param {ElementChild} node\n * @returns {Direction | undefined}\n */\nfunction dirProperty(node) {\n  const value =\n    node.type === 'element' &&\n    node.properties &&\n    typeof node.properties.dir === 'string'\n      ? node.properties.dir.toLowerCase()\n      : undefined\n\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\n    ? value\n    : undefined\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleAttr} RuleAttr\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Schema} Schema\n * @typedef {import('./types.js').Info} Info\n * @typedef {import('./types.js').PropertyValue} PropertyValue\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {zwitch} from 'zwitch'\n\n/** @type {(query: RuleAttr, element: Element, info: Info) => boolean} */\nconst handle = zwitch('operator', {\n  unknown: unknownOperator,\n  // @ts-expect-error: hush.\n  invalid: exists,\n  handlers: {\n    '=': exact,\n    '~=': spaceSeparatedList,\n    '|=': exactOrPrefix,\n    '^=': begins,\n    '$=': ends,\n    '*=': contains\n  }\n})\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @param {Schema} schema\n * @returns {boolean}\n */\nexport function attribute(query, element, schema) {\n  const attrs = query.attrs\n  let index = -1\n\n  while (++index < attrs.length) {\n    if (!handle(attrs[index], element, find(schema, attrs[index].name))) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Check whether an attribute exists.\n *\n * `[attr]`\n *\n * @param {RuleAttr} _\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exists(_, element, info) {\n  return hasProperty(element, info.property)\n}\n\n/**\n * Check whether an attribute has an exact value.\n *\n * `[attr=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exact(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      normalizeValue(element.properties[info.property], info) === query.value\n  )\n}\n\n/**\n * Check whether an attribute, interpreted as a space-separated list, contains\n * a value.\n *\n * `[attr~=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction spaceSeparatedList(query, element, info) {\n  const value = element.properties && element.properties[info.property]\n\n  return (\n    // If this is a space-separated list, and the query is contained in it, return\n    // true.\n    (!info.commaSeparated &&\n      value &&\n      typeof value === 'object' &&\n      query.value &&\n      value.includes(query.value)) ||\n    // For all other values (including comma-separated lists), return whether this\n    // is an exact match.\n    (hasProperty(element, info.property) &&\n      normalizeValue(value, info) === query.value)\n  )\n}\n\n/**\n * Check whether an attribute has a substring as either the exact value or a\n * prefix.\n *\n * `[attr|=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exactOrPrefix(query, element, info) {\n  const value = normalizeValue(\n    element.properties && element.properties[info.property],\n    info\n  )\n\n  return Boolean(\n    hasProperty(element, info.property) &&\n      query.value &&\n      (value === query.value ||\n        (value.slice(0, query.value.length) === query.value &&\n          value.charAt(query.value.length) === '-'))\n  )\n}\n\n/**\n * Check whether an attribute has a substring as its start.\n *\n * `[attr^=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction begins(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        0,\n        query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * Check whether an attribute has a substring as its end.\n *\n * `[attr$=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction ends(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        -query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * Check whether an attribute contains a substring.\n *\n * `[attr*=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction contains(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).includes(\n        query.value\n      )\n  )\n}\n\n// Shouldn’t be called, Parser throws an error instead.\n/**\n * @param {unknown} query\n * @returns {never}\n */\n/* c8 ignore next 4 */\nfunction unknownOperator(query) {\n  // @ts-expect-error: `operator` guaranteed.\n  throw new Error('Unknown operator `' + query.operator + '`')\n}\n\n/**\n * Stringify a hast value back to its HTML form.\n *\n * @param {PropertyValue} value\n * @param {Info} info\n * @returns {string}\n */\nfunction normalizeValue(value, info) {\n  if (typeof value === 'boolean') {\n    return info.attribute\n  }\n\n  if (Array.isArray(value)) {\n    return (info.commaSeparated ? commas : spaces)(value)\n  }\n\n  return String(value)\n}\n","/**\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\n * for more info on the algorithms.\n */\n\n/**\n * @typedef {string} Tag\n *   BCP-47 tag.\n * @typedef {Array<Tag>} Tags\n *   List of BCP-47 tags.\n * @typedef {string} Range\n *   RFC 4647 range.\n * @typedef {Array<Range>} Ranges\n *   List of RFC 4647 range.\n *\n * @callback Check\n *   An internal check.\n * @param {Tag} tag\n *   BCP-47 tag.\n * @param {Range} range\n *   RFC 4647 range.\n * @returns {boolean}\n *   Whether the range matches the tag.\n *\n * @typedef {FilterOrLookup<true>} Filter\n *   Filter: yields all tags that match a range.\n * @typedef {FilterOrLookup<false>} Lookup\n *   Lookup: yields the best tag that matches a range.\n */\n\n/**\n * @template {boolean} IsFilter\n *   Whether to filter or perform a lookup.\n * @callback FilterOrLookup\n *   A check.\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\n *   Result.\n */\n\n/**\n * Factory to perform a filter or a lookup.\n *\n * This factory creates a function that accepts a list of tags and a list of\n * ranges, and contains logic to exit early for lookups.\n * `check` just has to deal with one tag and one range.\n * This match function iterates over ranges, and for each range,\n * iterates over tags.\n * That way, earlier ranges matching any tag have precedence over later ranges.\n *\n * @template {boolean} IsFilter\n * @param {Check} check\n *   A check.\n * @param {IsFilter} filter\n *   Whether to filter or perform a lookup.\n * @returns {FilterOrLookup<IsFilter>}\n *   Filter or lookup.\n */\nfunction factory(check, filter) {\n  /**\n   * @param {Tag|Tags} tags\n   *   One or more BCP-47 tags.\n   * @param {Range|Ranges|undefined} [ranges='*']\n   *   One or more RFC 4647 ranges.\n   * @returns {IsFilter extends true ? Tags : Tag|undefined}\n   *   Result.\n   */\n  return function (tags, ranges) {\n    let left = cast(tags, 'tag')\n    const right = cast(\n      ranges === null || ranges === undefined ? '*' : ranges,\n      'range'\n    )\n    /** @type {Tags} */\n    const matches = []\n    let rightIndex = -1\n\n    while (++rightIndex < right.length) {\n      const range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      let leftIndex = -1\n      /** @type {Tags} */\n      const next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) {\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n              left[leftIndex]\n            )\n          }\n\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n      filter ? matches : undefined\n    )\n  }\n}\n\n/**\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\n * of basic language ranges (Section 2.1) to sets of language tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const basicFilter = factory(function (tag, range) {\n  return range === '*' || tag === range || tag.includes(range + '-')\n}, true)\n\n/**\n * Extended Filtering (Section 3.3.2) matches a language priority list\n * consisting of extended language ranges (Section 2.2) to sets of language\n * tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const extendedFilter = factory(function (tag, range) {\n  // 3.3.2.1\n  const left = tag.split('-')\n  const right = range.split('-')\n  let leftIndex = 0\n  let rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}, true)\n\n/**\n * Lookup (Section 3.4) matches a language priority list consisting of basic\n * language ranges to sets of language tags to find the one exact language tag\n * that best matches the range.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tag|undefined}\n *   BCP-47 tag.\n */\nexport const lookup = factory(function (tag, range) {\n  let right = range\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    let index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}, false)\n\n/**\n * Validate tags or ranges, and cast them to arrays.\n *\n * @param {string|Array<string>} values\n * @param {string} name\n * @returns {Array<string>}\n */\nfunction cast(values, name) {\n  const value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n",null,null,null,"/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoSelector} RulePseudoSelector\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').ElementChild} ElementChild\n */\n\nimport {extendedFilter} from 'bcp-47-match'\nimport {parse as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {whitespace} from 'hast-util-whitespace'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\nimport {queryToSelectors, walk} from './walk.js'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\n/** @type {(rule: Rule | RulePseudo, element: Element, index: number | undefined, parent: Parent | undefined, state: SelectState) => boolean} */\nconst handle = zwitch('name', {\n  unknown: unknownPseudo,\n  invalid: invalidPseudo,\n  handlers: {\n    any: matches,\n    'any-link': anyLink,\n    blank,\n    checked,\n    dir,\n    disabled,\n    empty,\n    enabled,\n    'first-child': firstChild,\n    'first-of-type': firstOfType,\n    has,\n    lang,\n    'last-child': lastChild,\n    'last-of-type': lastOfType,\n    matches,\n    not,\n    'nth-child': nthChild,\n    'nth-last-child': nthLastChild,\n    'nth-of-type': nthOfType,\n    'nth-last-of-type': nthLastOfType,\n    'only-child': onlyChild,\n    'only-of-type': onlyOfType,\n    optional,\n    'read-only': readOnly,\n    'read-write': readWrite,\n    required,\n    root,\n    scope\n  }\n})\n\npseudo.needsIndex = [\n  'any',\n  'first-child',\n  'first-of-type',\n  'last-child',\n  'last-of-type',\n  'matches',\n  'not',\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type',\n  'only-child',\n  'only-of-type'\n]\n\n/**\n * Check whether an element matches pseudo selectors.\n *\n * @param {Rule} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function pseudo(query, element, index, parent, state) {\n  const pseudos = query.pseudos\n  let offset = -1\n\n  while (++offset < pseudos.length) {\n    if (!handle(pseudos[offset], element, index, parent, state)) return false\n  }\n\n  return true\n}\n\n/**\n * Check whether an element matches an `:any-link` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction anyLink(_, element) {\n  return (\n    (element.tagName === 'a' ||\n      element.tagName === 'area' ||\n      element.tagName === 'link') &&\n    hasProperty(element, 'href')\n  )\n}\n\n/**\n * Check whether an element matches a `:blank` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction blank(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return (\n      child.type === 'element' || (child.type === 'text' && !whitespace(child))\n    )\n  }\n}\n\n/**\n * Check whether an element matches a `:checked` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction checked(_, element) {\n  if (element.tagName === 'input' || element.tagName === 'menuitem') {\n    return Boolean(\n      element.properties &&\n        (element.properties.type === 'checkbox' ||\n          element.properties.type === 'radio') &&\n        hasProperty(element, 'checked')\n    )\n  }\n\n  if (element.tagName === 'option') {\n    return hasProperty(element, 'selected')\n  }\n\n  return false\n}\n\n/**\n * Check whether an element matches a `:dir()` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction dir(query, _1, _2, _3, state) {\n  return state.direction === query.value\n}\n\n/**\n * Check whether an element matches a `:disabled` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction disabled(_, element) {\n  return (\n    (element.tagName === 'button' ||\n      element.tagName === 'input' ||\n      element.tagName === 'select' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'optgroup' ||\n      element.tagName === 'option' ||\n      element.tagName === 'menuitem' ||\n      element.tagName === 'fieldset') &&\n    hasProperty(element, 'disabled')\n  )\n}\n\n/**\n * Check whether an element matches an `:empty` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction empty(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return child.type === 'element' || child.type === 'text'\n  }\n}\n\n/**\n * Check whether an element matches an `:enabled` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction enabled(query, element) {\n  return !disabled(query, element)\n}\n\n/**\n * Check whether an element matches a `:first-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementIndex === 0\n}\n\n/**\n * Check whether an element matches a `:first-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction has(query, element, _1, _2, state) {\n  /** @type {SelectState} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // Do walk deep.\n    shallow: false,\n    // One result is enough.\n    one: true,\n    scopeElements: [element],\n    results: [],\n    rootQuery: queryToSelectors(query.value)\n  }\n\n  walk(childState, {type: 'root', children: element.children})\n\n  return childState.results.length > 0\n}\n\n/**\n * Check whether an element matches a `:lang()` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lang(query, _1, _2, _3, state) {\n  return (\n    state.language !== '' &&\n    state.language !== undefined &&\n    // @ts-expect-error never `selectors`.\n    extendedFilter(state.language, commas(query.value)).length > 0\n  )\n}\n\n/**\n * Check whether an element matches a `:last-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    state.elementCount && state.elementIndex === state.elementCount - 1\n  )\n}\n\n/**\n * Check whether an element matches a `:last-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * Check whether an element `:matches` further selectors.\n *\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number | undefined} _\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction matches(query, element, _, parent, state) {\n  /** @type {SelectState} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // Do walk deep.\n    shallow: false,\n    // One result is enough.\n    one: true,\n    scopeElements: [element],\n    results: [],\n    rootQuery: queryToSelectors(query.value)\n  }\n\n  walk(childState, element)\n\n  return childState.results[0] === element\n}\n\n/**\n * Check whether an element does `:not` match further selectors.\n *\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction not(query, element, index, parent, state) {\n  return !matches(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches an `:nth-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.elementIndex === 'number' && fn(state.elementIndex)\n}\n\n/**\n * Check whether an element matches an `:nth-last-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return Boolean(\n    typeof state.elementCount === 'number' &&\n      typeof state.elementIndex === 'number' &&\n      fn(state.elementCount - state.elementIndex - 1)\n  )\n}\n\n/**\n * Check whether an element matches a `:nth-last-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    typeof state.typeIndex === 'number' &&\n    fn(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * Check whether an element matches an `:nth-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && fn(state.typeIndex)\n}\n\n/**\n * Check whether an element matches an `:only-child` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementCount === 1\n}\n\n/**\n * Check whether an element matches an `:only-of-type` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number | undefined} _2\n * @param {Parent | undefined} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n/**\n * Check whether an element matches an `:optional` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction optional(query, element) {\n  return !required(query, element)\n}\n\n/**\n * Check whether an element matches a `:read-only` pseudo.\n *\n * @param {RulePseudo} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readOnly(query, element, index, parent, state) {\n  return !readWrite(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches a `:read-write` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readWrite(_, element, _1, _2, state) {\n  return element.tagName === 'input' || element.tagName === 'textarea'\n    ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled')\n    : Boolean(state.editableOrEditingHost)\n}\n\n/**\n * Check whether an element matches a `:required` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction required(_, element) {\n  return (\n    (element.tagName === 'input' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'select') &&\n    hasProperty(element, 'required')\n  )\n}\n\n/**\n * Check whether an element matches a `:root` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction root(_, element, _1, parent, state) {\n  return Boolean(\n    (!parent || parent.type === 'root') &&\n      state.schema &&\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\n      (element.tagName === 'html' || element.tagName === 'svg')\n  )\n}\n\n/**\n * Check whether an element matches a `:scope` pseudo.\n *\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number | undefined} _1\n * @param {Parent | undefined} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction scope(_, element, _1, _2, state) {\n  return state.scopeElements.includes(element)\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  throw new Error('Invalid pseudo-selector')\n}\n\n/**\n * @param {unknown} query\n * @returns {never}\n */\nfunction unknownPseudo(query) {\n  // @ts-expect-error: indexable.\n  if (query.name) {\n    // @ts-expect-error: indexable.\n    throw new Error('Unknown pseudo-selector `' + query.name + '`')\n  }\n\n  throw new Error('Unexpected pseudo-element or empty pseudo-class')\n}\n\n/**\n * Check children.\n *\n * @param {Element} element\n * @param {(child: ElementChild) => boolean} check\n * @returns {boolean}\n */\nfunction someChildren(element, check) {\n  const children = element.children\n  let index = -1\n\n  while (++index < children.length) {\n    if (check(children[index])) return true\n  }\n\n  return false\n}\n\n/**\n * @param {SelectState} state\n * @param {RulePseudo} query\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * @param {RulePseudo} query\n * @returns {(value: number) => boolean}\n */\nfunction getCachedNthCheck(query) {\n  /** @type {(value: number) => boolean} */\n  // @ts-expect-error: cache.\n  let fn = query._cachedFn\n\n  if (!fn) {\n    // @ts-expect-error: always string.\n    fn = nthCheck(query.value)\n    // @ts-expect-error: cache.\n    query._cachedFn = fn\n  }\n\n  return fn\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\n\n/**\n * Test a rule.\n *\n * @param {Rule} query\n * @param {Element} element\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function test(query, element, index, parent, state) {\n  return Boolean(\n    (!query.tagName || name(query, element)) &&\n      (!query.classNames || className(query, element)) &&\n      (!query.id || id(query, element)) &&\n      (!query.attrs || attribute(query, element, state.schema)) &&\n      (!query.pseudos || pseudo(query, element, index, parent, state))\n  )\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * Check whether an element has a tag name.\n *\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function name(query, element) {\n  return query.tagName === '*' || query.tagName === element.tagName\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * Check whether an element has all class names.\n *\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function className(query, element) {\n  /** @type {readonly string[]} */\n  // @ts-expect-error Assume array.\n  const value = element.properties.className || []\n  let index = -1\n\n  if (query.classNames) {\n    while (++index < query.classNames.length) {\n      if (!value.includes(query.classNames[index])) return false\n    }\n  }\n\n  return true\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * Check whether an element has an ID.\n *\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function id(query, element) {\n  return Boolean(element.properties && element.properties.id === query.id)\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Selectors} Selectors\n *\n * @typedef Nest\n *   Rule sets by nesting.\n * @property {Array<RuleSet> | undefined} descendant\n *   `a b`\n * @property {Array<RuleSet> | undefined} directChild\n *   `a > b`\n * @property {Array<RuleSet> | undefined} adjacentSibling\n *   `a + b`\n * @property {Array<RuleSet> | undefined} generalSibling\n *   `a ~ b`\n *\n * @typedef Counts\n *   Info on elements in a parent.\n * @property {number} count\n *   Number of elements.\n * @property {Map<string, number>} types\n *   Number of elements by tag name.\n */\n\nimport {enterState} from './enter-state.js'\nimport {test} from './test.js'\n\n/** @type {Array<never>} */\nconst empty = []\n\n/**\n * Turn a query into a uniform object.\n *\n * @param {Selectors | RuleSet | null} query\n * @returns {Selectors}\n */\nexport function queryToSelectors(query) {\n  if (query === null) {\n    return {type: 'selectors', selectors: []}\n  }\n\n  if (query.type === 'ruleSet') {\n    return {type: 'selectors', selectors: [query]}\n  }\n\n  return query\n}\n\n/**\n * Walk a tree.\n *\n * @param {SelectState} state\n * @param {Node | undefined} tree\n */\nexport function walk(state, tree) {\n  if (tree) {\n    one(state, [], tree, undefined, undefined)\n  }\n}\n\n/**\n * Check a node.\n *\n * @param {SelectState} state\n * @param {Array<RuleSet>} currentRules\n * @param {Node} node\n * @param {number | undefined} index\n * @param {Parent | undefined} parent\n * @returns {Nest}\n */\nfunction one(state, currentRules, node, index, parent) {\n  /** @type {Nest} */\n  let nestResult = {\n    directChild: undefined,\n    descendant: undefined,\n    adjacentSibling: undefined,\n    generalSibling: undefined\n  }\n  const exit = enterState(state, node)\n\n  if (node.type === 'element') {\n    nestResult = applySelectors(\n      state,\n      // Try the root rules for this element too.\n      combine(currentRules, state.rootQuery.selectors),\n      node,\n      index,\n      parent\n    )\n  }\n\n  // If this is a parent, and we want to delve into them, and we haven’t found\n  // our single result yet.\n  if ('children' in node && !state.shallow && !(state.one && state.found)) {\n    all(state, nestResult, node)\n  }\n\n  exit()\n\n  return nestResult\n}\n\n/**\n * Check a node.\n *\n * @param {SelectState} state\n * @param {Nest} nest\n * @param {Parent} node\n * @returns {void}\n */\nfunction all(state, nest, node) {\n  const fromParent = combine(nest.descendant, nest.directChild)\n  /** @type {Array<RuleSet> | undefined} */\n  let fromSibling\n  let index = -1\n  /**\n   * Total counts.\n   * @type {Counts}\n   */\n  const total = {count: 0, types: new Map()}\n  /**\n   * Counts of previous siblings.\n   * @type {Counts}\n   */\n  const before = {count: 0, types: new Map()}\n\n  while (++index < node.children.length) {\n    count(total, node.children[index])\n  }\n\n  index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name =\n      child.type === 'element' ? child.tagName.toUpperCase() : undefined\n    // Before counting further elements:\n    state.elementIndex = before.count\n    state.typeIndex = name ? before.types.get(name) || 0 : 0\n    // After counting all elements.\n    state.elementCount = total.count\n    state.typeCount = name ? total.types.get(name) : 0\n\n    // Only apply if this is a parent, this should be an element, but we check\n    // for parents so that we delve into custom nodes too.\n    if ('children' in child) {\n      const forSibling = combine(fromParent, fromSibling)\n      const nest = one(state, forSibling, node.children[index], index, node)\n      fromSibling = combine(nest.generalSibling, nest.adjacentSibling)\n    }\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    count(before, node.children[index])\n  }\n}\n\n/**\n * Apply selectors to an element.\n *\n * @param {SelectState} state\n *   Current state.\n * @param {Array<RuleSet>} rules\n *   Rules to apply.\n * @param {Element} node\n *   Element to apply rules to.\n * @param {number | undefined} index\n *   Index of node in parent.\n * @param {Parent | undefined} parent\n *   Parent of node.\n * @returns {Nest}\n *   Further rules.\n */\nfunction applySelectors(state, rules, node, index, parent) {\n  /** @type {Nest} */\n  const nestResult = {\n    directChild: undefined,\n    descendant: undefined,\n    adjacentSibling: undefined,\n    generalSibling: undefined\n  }\n  let selectorIndex = -1\n\n  while (++selectorIndex < rules.length) {\n    const ruleSet = rules[selectorIndex]\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    // When shallow, we don’t allow nested rules.\n    // Idea: we could allow a stack of parents?\n    // Might get quite complex though.\n    if (state.shallow && ruleSet.rule.rule) {\n      throw new Error('Expected selector without nesting')\n    }\n\n    // If this rule matches:\n    if (test(ruleSet.rule, node, index, parent, state)) {\n      const nest = ruleSet.rule.rule\n\n      // Are there more?\n      if (nest) {\n        /** @type {RuleSet} */\n        const rule = {type: 'ruleSet', rule: nest}\n        /** @type {keyof Nest} */\n        const label =\n          nest.nestingOperator === '+'\n            ? 'adjacentSibling'\n            : nest.nestingOperator === '~'\n            ? 'generalSibling'\n            : nest.nestingOperator === '>'\n            ? 'directChild'\n            : 'descendant'\n        add(nestResult, label, rule)\n      } else {\n        // We have a match!\n        state.found = true\n\n        if (!state.results.includes(node)) {\n          state.results.push(node)\n        }\n      }\n    }\n\n    // Descendant.\n    if (ruleSet.rule.nestingOperator === null) {\n      add(nestResult, 'descendant', ruleSet)\n    }\n    // Adjacent.\n    else if (ruleSet.rule.nestingOperator === '~') {\n      add(nestResult, 'generalSibling', ruleSet)\n    }\n    // Drop top-level nesting (`undefined`), direct child (`>`), adjacent sibling (`+`).\n  }\n\n  return nestResult\n}\n\n/**\n * Combine two lists, if needed.\n *\n * This is optimized to create as few lists as possible.\n *\n * @param {Array<RuleSet> | undefined} left\n * @param {Array<RuleSet> | undefined} right\n * @returns {Array<RuleSet>}\n */\nfunction combine(left, right) {\n  return left && right && left.length > 0 && right.length > 0\n    ? [...left, ...right]\n    : left && left.length > 0\n    ? left\n    : right && right.length > 0\n    ? right\n    : empty\n}\n\n/**\n * Add a rule to a nesting map.\n *\n * @param {Nest} nest\n * @param {keyof Nest} field\n * @param {RuleSet} rule\n */\nfunction add(nest, field, rule) {\n  const list = nest[field]\n  if (list) {\n    list.push(rule)\n  } else {\n    nest[field] = [rule]\n  }\n}\n\n/**\n * Count a node.\n *\n * @param {Counts} counts\n *   Counts.\n * @param {Node} node\n *   Node (we’re looking for elements).\n * @returns {void}\n *   Nothing.\n */\nfunction count(counts, node) {\n  if (node.type === 'element') {\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name = node.tagName.toUpperCase()\n    const count = (counts.types.get(name) || 0) + 1\n    counts.count++\n    counts.types.set(name, count)\n  }\n}\n","/**\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n */\n\nimport {CssSelectorParser} from 'css-selector-parser'\n\nconst parser = new CssSelectorParser()\n\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*')\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has')\nparser.registerNestingOperators('>', '+', '~')\n\n/**\n * @param {string} selector\n * @returns {Selectors | RuleSet | null}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  return parser.parse(selector)\n}\n","/**\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Space} Space\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {html, svg} from 'property-information'\nimport {queryToSelectors, walk} from './walk.js'\nimport {parse} from './parse.js'\n\n/**\n * Check that the given `node` matches `selector`.\n *\n * This only checks the element itself, not the surrounding tree.\n * Thus, nesting in selectors is not supported (`p b`, `p > b`), neither are\n * selectors like `:first-child`, etc.\n * This only checks that the given element matches the selector.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Node | null | undefined} [node]\n *   Node that might match `selector`, should be an element.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {boolean}\n *   Whether `node` matches `selector`.\n */\nexport function matches(selector, node, space) {\n  const state = createState(selector, node, space)\n  state.one = true\n  state.shallow = true\n  walk(state, node || undefined)\n  return state.results.length > 0\n}\n\n/**\n * Select the first element that matches `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Node | null | undefined} [tree]\n *   Tree to search.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {Element | null}\n *   First element in `tree` that matches `selector` or `null` if nothing is\n *   found.\n *   This could be `tree` itself.\n */\nexport function select(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  state.one = true\n  walk(state, tree || undefined)\n  // To do in major: return `undefined` instead.\n  return state.results[0] || null\n}\n\n/**\n * Select all elements that match `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Node | null | undefined} [tree]\n *   Tree to search.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {Array<Element>}\n *   Elements in `tree` that match `selector`.\n *   This could include `tree` itself.\n */\nexport function selectAll(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  walk(state, tree || undefined)\n  return state.results\n}\n\n/**\n * @param {string} selector\n *   Tree to search.\n * @param {Node | null | undefined} [tree]\n *   Tree to search.\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (`'svg'` or `'html'`).\n * @returns {SelectState} SelectState\n */\nfunction createState(selector, tree, space) {\n  return {\n    // State of the query.\n    rootQuery: queryToSelectors(parse(selector)),\n    results: [],\n    // @ts-expect-error assume elements.\n    scopeElements: tree ? (tree.type === 'root' ? tree.children : [tree]) : [],\n    one: false,\n    shallow: false,\n    found: false,\n    // State in the tree.\n    schema: space === 'svg' ? svg : html,\n    language: undefined,\n    direction: 'ltr',\n    editableOrEditingHost: false,\n    typeIndex: undefined,\n    elementIndex: undefined,\n    typeCount: undefined,\n    elementCount: undefined\n  }\n}\n","import { Plugin } from 'unified';\nimport { Root, Element, ElementContent, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { selectAll } from 'hast-util-select';\nimport { Test } from 'unist-util-is';\n\n/** Get the node tree source code string */\nexport const getCodeString = (data: ElementContent[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\n      code += getCodeString(node.children);\n    }\n  });\n  return code;\n};\n\nexport type RehypeRewriteOptions = {\n  /**\n   * Select an element to be wrapped. Expects a string selector that can be passed to hast-util-select ([supported selectors](https://github.com/syntax-tree/hast-util-select/blob/master/readme.md#support)).\n   * If `selector` is not set then wrap will check for a body all elements.\n   */\n  selector?: string;\n  /** Rewrite Element. */\n  rewrite(node: Root | RootContent, index: number | null, parent: Root | Element | null): void;\n}\n\nconst remarkRewrite: Plugin<[RehypeRewriteOptions?], Root> = (options) => {\n  const { selector, rewrite } = options || {};\n  return (tree) => {\n    if (!rewrite || typeof rewrite !== 'function') return;\n    if (selector && typeof selector === 'string') {\n      const selected = selectAll(selector, tree);\n      if (selected && selected.length > 0) {\n        visit(tree, selected as unknown as Test, (node: Element, index, parent) => {\n          rewrite(node, index, parent);\n        });\n      }\n      return;\n    }\n\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      rewrite(node, index, parent);\n    });\n  }\n}\n\nexport default remarkRewrite;\n","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nexport const regex = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","import { regex } from './regex.js'\n\nconst own = Object.hasOwnProperty\n\n/**\n * Slugger.\n */\nexport default class BananaSlug {\n  /**\n   * Create a new slug class.\n   */\n  constructor () {\n    /** @type {Record<string, number>} */\n    // eslint-disable-next-line no-unused-expressions\n    this.occurrences\n\n    this.reset()\n  }\n\n  /**\n   * Generate a unique slug.\n  *\n  * Tracks previously generated slugs: repeated calls with the same value\n  * will result in different slugs.\n  * Use the `slug` function to get same slugs.\n   *\n   * @param  {string} value\n   *   String of text to slugify\n   * @param  {boolean} [maintainCase=false]\n   *   Keep the current case, otherwise make all lowercase\n   * @return {string}\n   *   A unique slug string\n   */\n  slug (value, maintainCase) {\n    const self = this\n    let result = slug(value, maintainCase === true)\n    const originalSlug = result\n\n    while (own.call(self.occurrences, result)) {\n      self.occurrences[originalSlug]++\n      result = originalSlug + '-' + self.occurrences[originalSlug]\n    }\n\n    self.occurrences[result] = 0\n\n    return result\n  }\n\n  /**\n   * Reset - Forget all previous slugs\n   *\n   * @return void\n   */\n  reset () {\n    this.occurrences = Object.create(null)\n  }\n}\n\n/**\n * Generate a slug.\n *\n * Does not track previously generated slugs: repeated calls with the same value\n * will result in the exact same slug.\n * Use the `GithubSlugger` class to get unique slugs.\n *\n * @param  {string} value\n *   String of text to slugify\n * @param  {boolean} [maintainCase=false]\n *   Keep the current case, otherwise make all lowercase\n * @return {string}\n *   A unique slug string\n */\nexport function slug (value, maintainCase) {\n  if (typeof value !== 'string') return ''\n  if (!maintainCase) value = value.toLowerCase()\n  return value.replace(regex, '').replace(/ /g, '-')\n}\n","/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s.\n */\n\nimport Slugger from 'github-slugger'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\nconst slugs = new Slugger()\n\n/**\n * Plugin to add `id`s to headings.\n *\n * @type {import('unified').Plugin<[Options?]|Array<void>, Root>}\n */\nexport default function rehypeSlug(options = {}) {\n  const prefix = options.prefix || ''\n\n  return (tree) => {\n    slugs.reset()\n\n    visit(tree, 'element', (node) => {\n      if (headingRank(node) && node.properties && !hasProperty(node, 'id')) {\n        node.properties.id = prefix + slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don’t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn’t understand but it’s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn’t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n// To do: next major: expose functions instead of extensions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Link | Array<PhrasingContent> | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\n// utilities on `state`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteReference')\n  const subexit = context.enter('reference')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteDefinition')\n  const subexit = context.enter('label')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    indentLines(containerFlow(node, context, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n *\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells.\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters.\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\n// To do: next major: use `defaultHandlers.inlineCode`.\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\n/**\n * @typedef {Extract<Root | Content, Parent>} Parents\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\n// `track` from `state`.\n// To do: next major: replace exports with functions.\n// To do: next major: use `defaulthandlers.listItem`.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n"],"names":["testMatches","importName","test","Array","isArray","some","regex","RegExp","module","exports","trueFunc","falseFunc","parser_context_1","require","render_1","CssSelectorParser","this","pseudos","attrEqualityMods","ruleNestingOperators","substitutesEnabled","prototype","registerSelectorPseudos","_i","arguments","length","_a","pseudos_1","pseudo","unregisterSelectorPseudos","pseudos_2","registerNumericPseudos","pseudos_3","unregisterNumericPseudos","pseudos_4","registerNestingOperators","operators","operators_1","operator","unregisterNestingOperators","operators_2","registerAttrEqualityMods","mods","mods_1","mod","unregisterAttrEqualityMods","mods_2","enableSubstitutes","disableSubstitutes","parse","str","parseCssSelector","render","path","renderEntity","trim","Object","defineProperty","value","utils_1","pos","l","chr","getStr","quote","escapeTable","result","charAt","esc","undefined","isHex","hex","String","fromCharCode","parseInt","getIdent","isIdent","Error","identSpecialChars","skipWhitespace","parseSelector","selector","parseSingleSelector","res","type","selectors","push","rule","parseRule","currentRule","op","nestingOperator","tagName","isIdentStart","classNames","id","attr","name","attrValue","valueType","doubleQuotesEscapeChars","singleQuoteEscapeChars","attrs","pseudoName","entity","currentEntity","parts","join","map","escapeIdentifier","cn","escapeStr","c","s","len","i","charCode","charCodeAt","extraCharCode","toString","replacement","strReplacementsRev","n","r","t","f","hasOwn","hasOwnProperty","toStr","gOPD","getOwnPropertyDescriptor","arr","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","enumerable","configurable","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","end","source","content","errorsList","error","msg","err","reason","filename","silent","re","m","exec","slice","comments","rules","comment","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","getURLParameters","url","params","getMetaId","meta","_ref","_ref2$","_slicedToArray","isMeta","includes","parsePart","string","_step","_iterator","_createForOfIteratorHelper","split","done","_m2","lhs","sep","rhs","incr","e","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","ExpandIcon","_jsx","viewBox","fill","children","d","CopyIcon","_jsxs","CopySuccessIcon","Copied","_useState","useState","_useState2","copied","setCopied","onClick","copyTextToClipboard","text","timer","setTimeout","clearTimeout","forwardRef","ref","showCode","setShowCode","toolbar","_props$bordered","bordered","_props$disableChecker","disableCheckered","_props$disablePreview","disablePreview","_props$disableCode","disableCode","_props$disableToolbar","disableToolbar","_props$text","_props$background","background","_props$copied","toolbarExtra","code","_props$prefixCls","prefixCls","className","codeProps","other","_objectWithoutPropertiesLoose","_excluded","cls","filter","Boolean","backgroundColor","backgroundImage","_extends","u","b","Symbol","for","g","h","k","p","q","v","a","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","self","Compiler","tree","toMarkdown","assign","data","extensions","character","expected","index","count","maximum","indexOf","configure","base","extension","concat","_","context","exit","enter","indentLines","flow","blank","safe","unsafe","patternInScope","stack","before","sequence","subexit","marker","checkFence","raw","suffix","formatCodeAsIndented","repeat","Math","max","streak","lang","after","encode","checkQuote","association","title","emphasis","peek","checkEmphasis","phrasing","rank","min","depth","formatHeadingAsSetext","closeAtx","html","imageReference","reference","referenceType","alt","image","blockquote","definition","hardBreak","heading","inlineCode","link","linkReference","list","listItem","paragraph","root","strong","thematicBreak","patternCompile","parent","pattern","expression","atBreak","formatLinkAsAutolink","size","bullet","checkBullet","listItemIndent","checkListItemIndent","ordered","incrementListMarker","spread","ceil","checkStrong","safeOptions","checkRule","ruleSpaces","checkRepeat","settings","pop","handlers","defaultUnsafe","defaultJoin","defaultHandlers","tightDefinitions","joinDefinition","handle","zwitch","invalid","unknown","left","right","inConstruct","label","identifier","characterEscape","characterReference","decodeIfPossible","decode","$0","$1","fence","repetition","ruleRepetition","child","results","between","Number","fences","setext","resourceLink","eol","one","_compiled","listInScope","none","notInConstruct","input","config","positions","infos","sort","numerical","escapeBackslashes","toUpperCase","whole","all","values","el","semicolon","characters","char","document","createElement","innerHTML","textContent","fn","own","noop","apply","Function","unified","stringify","use","freeze","getPrototypeOf","encoding","transforms","canContainEols","autolink","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","blockQuote","codeFenced","codeFlow","codeFencedFenceInfo","buffer","codeFencedFenceMeta","codeIndented","codeText","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","hardBreakEscape","hardBreakTrailing","htmlFlow","htmlFlowData","htmlText","htmlTextData","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","lineEnding","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","compile","events","handler","tokenStack","listStack","resume","setData","getData","prepareList","sliceSerialize","stringifyPosition","point","offset","tailIndex","lineIndex","tailEvent","event","firstBlankLineIndex","atMarker","containerBalance","listSpread","_spread","splice","create","and","open","token","close","normalizeIdentifier","toLowerCase","siblings","tail","fragment","safeFromInt","checked","compiler","postprocess","parser","write","preprocessor","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiDigit","asciiHexDigit","asciiPunctuation","unicodePunctuationRegex","unicodePunctuation","unicodeWhitespace","text$1","attention","headingAtx","labelEnd","labelStartImage","labelStartLink","setextUnderline","contentInitial","flowInitial","insideSpan","null","resolver","disable","markdownLineEnding","factorySpace","tokenize","effects","previous","contentStart","attempt","constructs","consume","lineStart","contentType","next","partialBlankLine","inspectResult","childFlow","childToken","continued","inspectConstruct","ok","subcontinued","inspectStart","containerState","continuation","inspectContinue","inspectLess","currentConstruct","concrete","flowContinue","inspectDone","interrupt","interruptible","containerConstruct","inspectFlowEnd","_closeFlow","lazy","lazyFlowConstruct","check","inspectLazy","flowEnd","partial","documentContinue","documentContinued","flowStart","containerContinue","exitContainers","now","_tokenizer","continueFlow","documentAfterPeek","defineSkip","sliceStream","nok","initial","afterConstruct","shallow","initializeFactory","resolveAll","createResolver","field","notText","resolveAllLineSuffixes","extraResolver","chunks","chunk","bufferIndex","tabs","eventIndex","_index","_bufferIndex","combineExtensions","createTokenizer","miniflat","defined","initializer","from","subtokenize","search","atCarriageReturn","startPosition","endPosition","lastIndex","chunkedPush","chunkedSplice","classifyCharacter","movePoint","_open","_close","group","openingSequence","closingSequence","nextEvents","asciiControl","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","markdownSpace","_container","decodeEntity","_interopDefaultLegacy","default","decodeEntity__default","numeric","markdownLineEndingOrSpace","prefixSize","closingFenceConstruct","closingSequenceStart","sizeOpen","closingSequenceEnd","initialPrefix","sequenceOpen","infoOpen","openAfter","info","infoAfter","contentContinue","indentedContentConstruct","afterPrefix","resolve","gap","tailExitIndex","headEnterIndex","contentEnd","continuationConstruct","prefixed","factoryDestination","factoryLabel","factoryWhitespace","factoryTitle","labelAfter","titleConstruct","literalType","literalMarkerType","rawType","stringType","limit","Infinity","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","markerType","labelEscape","prefix","atFirstTitleBreak","atTitleBreak","titleEscape","seen","fenceOpenInside","headingBreak","htmlBlockNames","htmlRawNames","kind","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","continuationRawEndTag","resolveTo","returnState","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","media","_used","destinationAfter","afterLabel","sizeChunks","initialSize","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","items","remove","parameters","chunkStart","unshift","hook","existing","add","serializeChunks","sliceChunks","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","main","state","chunkIndex","go","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","called","atTab","view","startIndex","startBufferIndex","endIndex","endBufferIndex","subcontent","stream","entered","adjust","startPositions","tokenizer","childEvents","jumps","gaps","isInFirstContentOfListItem","_gfmTasklistFirstContentOfListItem","otherIndex","otherEvent","subevents","more","_movePreviousLineEndings","Parser","doc","fromMarkdown","wrap","trough","fns","middleware","callback","invoked","then","bail","plain","vfile","frozen","attachers","transformers","namespace","freezeIndex","processor","assertUnfrozen","addPlugin","addList","addPreset","plugins","plugin","entry","find","file","assertParser","newable","assertCompiler","assertNode","run","runSync","complete","assertDone","process","processSync","destination","transformer","cb","Promise","executor","reject","pipeline","ctx","contents","keys","asyncName","VMessagePrototype","VMessage","proto","origin","range","parseOrigin","message","ruleId","fatal","proc","VFile","order","messages","history","cwd","assertPart","part","assertNonEmpty","assertPath","get","set","dirname","basename","extname","stem","fail","JSON","ext","firstNonSlashEnd","seenNonSlash","extIndex","unmatchedSlash","startDot","startPart","preDotState","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","normalize","cache","num","substr","StyleToObject","iterator","output","hasIterator","arr2","__esModule","ReferenceError","instance","Constructor","toPropertyKey","_defineProperties","descriptor","protoProps","staticProps","unsupportedIterableToArray","o","allowArrayLike","it","F","_e","normalCompletion","didErr","step","_e2","isNativeReflectConstruct","possibleConstructorReturn","Derived","hasNativeReflectConstruct","Super","NewTarget","Reflect","superPropBase","_get","bind","receiver","desc","_getPrototypeOf","setPrototypeOf","__proto__","subClass","superClass","sham","Proxy","valueOf","_s","_x","_r","_arr","_n","_d","_typeof","assertThisInitialized","_setPrototypeOf","arrayWithHoles","iterableToArrayLimit","nonIterableRest","hint","prim","toPrimitive","arg","arrayLikeToArray","minLen","tokens","_toConsumableArray","padRight","padLeft","decodeNamedCharacterReference","hasProperty","isNode","properties","headingRank","thing","buttonTypes","Set","core","schema","defaultTagName","caseSensitive","createAdjustMap","_len","_key","subvalue","has","isProperties","addProperty","addChild","isNaN","spaceSeparated","spaces","commaSeparated","commas","commaOrSpaceSeparated","parsePrimitive","finalResult","nodes","boolean","overloadedBoolean","blankLine","POSITIVE_INFINITY","syntaxExtension","decodeNumericCharacterReference","characterEscapeOrReference","decodeString","$2","head","characterEntitiesLegacy","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","parseEntities","indent","additional","queue","following","begin","characterReferenceCharacters","terminated","namedReference","diff","nonTerminated","warning","attribute","referenceCode","disallowed","flush","referenceContext","warningContext","textContext","Schema","_createClass","normal","space","_classCallCheck","merge","definitions","DefinedInfo","transform","attributes","mustUseProperty","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","align","aLink","archive","axis","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","Type","Info","rest","camelcase","dashes","kebab","checks","types","_Info","_inherits","_super","_createSuper","_this","mark","_assertThisInitialized","powers","increment","pow","VFileMessage","_Error","place","actual","note","_wrapNativeSuper","segments","isUrl","fileUrlOrPath","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","bufferLike","stored","toStringTag","middlewareIndex","_len2","_key2","wrapped","_len3","_key3","fnExpectsCallback","_len4","_key4","middelware","_attachers$freezeInde","_toArray","attacher","_value","isPlainObj","looksLikeAVFile","includeImageAlt","lineStartOffset","item","checkNewContainers","closeFlow","indexBeforeExits","indexBeforeFlow","_gfmTableDynamicInterruptHack","thereIsANewContainer","thereIsNoNewContainer","writeToChild","eof","_isInFirstContentOfListItem","current","breaks","expandTabs","def","handleMapOfConstructs","afterStartPrefix","indentedContent","htmlLineEnd","nonLazyLine","attentionMarkers","_document","_defineProperty","_flowInitial","_flow","_string","_text","resolveText","defaultOnError","errorHandler","onExitError","ancestor","defaultConstructs","preprocess","combined","_combined$key","_combined$key2","normalizeUri","skip","encodeURIComponent","clean","footnoteReference","counter","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","patch","sup","applyData","revert","subtype","listItemLoose","tab","trimLines","last","trimLine","codePointAt","break","delete","footnote","footnoteById","no","dangerous","loose","listLoose","table","firstRow","shift","tableContent","body","pointStart","pointEnd","tableCell","tableRow","cellIndex","cells","cell","alignValue","toml","ignore","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","_objectSpread","visit","augment","hName","hProperties","hChildren","generated","defaultUnknownHandler","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","_tail$children","tailTail","dataFootnotes","footer","bridge","mutate","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","_parent$children","unwrapDisallowed","hastToReact","protocols","uriTransformer","uri","first","colon","tableElements","childrenToReact","childIndex","toReact","skipHtml","transformLinkUri","parentSchema","listDepth","component","components","basic","React","ReactIs","linkTarget","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","_unused","styleReplacer","parseStyle","changelog","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","nextChild","codeBlockParames","getCommentObject","_ref$value","param","reduce","forEach","keyName","propertiesHandle","defaultAttrs","rehyp","_options$properties","_options$codeBlockPar","firstChild","prevChild","convertElement","tagNameFactory","anyFactory","castFactory","tests","_checks$index","contentDefaults","rehypeAutolinkHeadings","behavior","behaviour","SKIP","toChildren","grouping","toNode","_options$openDelimite","openDelimiter","_options$closeDelimit","closeDelimiter","metastring","highlight","ignoreMissing","entries","groups","w","N","j","convert","cascadeRaw","cascade","preorder","showLineNumbers","substring","webNamespaces","mathml","fromParse5","options_","verbose","nodeName","quirksMode","childNodes","loc","indices","toPoint","toOffset","namespaceURI","sourceCodeLocation","endTag","opening","closing","createLocation","startLine","startCol","endLine","endCol","endOffset","currentSchema","createProperty","parentNode","doctype","publicId","systemId","htmlVoidElements","startTagToken","endTagToken","parseOptions","sourceCodeLocationInfo","scriptingEnabled","stitches","posTracker","locationTracker","resetTokenizer","_processInputToken","createParse5Location","chars","forceQuirks","lastGapPos","lastCharPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","isEol","lineStartPos","droppedBufferSize","col","currentAttrLocation","ctLoc","_runParsingLoop","_consume","stitch","documentMode","treeAdapter","createDocument","_bootstrap","__mixins","mock","_pushTmplInsertionMode","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","_adoptNodes","currentCharacterToken","tokenQueue","charRefCode","tempBuff","lastStartTagName","consumedAfterSnapshot","active","currentToken","currentAttr","selfClosing","toParse5","rehypeRaw","rtlRange","ltrRange","rtl","ltr","dirBidi","dirProperty","query","normalizeValue","factory","tags","ranges","cast","matches","rightIndex","leftIndex","tag","extendedFilter","ZERO","NINE","nthCheck","formula","parsed","boolbase","absA","abs","bMod","idx","sign","readSign","readNumber","fauxEsmNthCheck","someChildren","_1","_2","_3","empty","enabled","assertDeep","elementIndex","typeIndex","childState","found","scopeElements","rootQuery","queryToSelectors","walk","elementCount","typeCount","not","getCachedNthCheck","optional","readWrite","editableOrEditingHost","_cachedFn","needsIndex","currentRules","nestResult","directChild","descendant","adjacentSibling","generalSibling","dirInferred","currentDirection","EXIT","enterState","selectorIndex","ruleSet","nest","applySelectors","combine","fromSibling","fromParent","total","Map","counts","getCodeString","rewrite","selectAll","BananaSlug","occurrences","reset","maintainCase","slug","originalSlug","slugs","Slugger","rehypeSlug","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","ccount","findAndReplace","ignored","pairs","toExpression","toFunction","toPairs","pairIndex","visitParents","visitor","parents","grandparent","change","matchObject","_nodes","global","escape","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","email","track","lineShift","move","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","tracker","indexStack","createTracker","bulletLastUsed","containerFlow","containerPhrasing","handleDelete","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","columnIndex","delimiterStart","delimiterEnd","markdownTable","bulletCurrent","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","remarkGfm","gfm","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","typeFactory","propsFactory","CONTINUE","reverse","subresult","grandparents","toResult","_fn"],"sourceRoot":""}