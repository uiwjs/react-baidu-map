{"version":3,"sources":["../../packages/panorama-control/README.md"],"names":[],"mappings":"qGAAA,OAAe","file":"static/js/63.68575c4a.chunk.js","sourcesContent":["export default \"PanoramaControl 全景地图控件\\n===\\n\\n全景地图控件。\\n\\n```jsx\\nimport { PanoramaControl, usePanoramaControl } from '@uiw/react-baidu-map';\\n// 或者单独安装使用\\nimport PanoramaControl, { usePanoramaControl } from '@uiw/react-baidu-map-panorama-control';\\n```\\n\\n### 基本用法\\n\\n<!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useState } from 'react';\\nimport { Map, APILoader, PanoramaControl } from '@uiw/react-baidu-map';\\n\\nconst Example = () => {\\n  const [show, setShow] = useState(true);\\n  return (\\n    <>\\n      <button onClick={() => setShow(!show)}>\\n        {show ? '关闭' : '开启'}\\n      </button>\\n      <Map zoom={13} style={{ height: 300 }}>\\n        {show && (\\n          <PanoramaControl />\\n        )}\\n        <PanoramaControl visiable={show} />\\n      </Map>\\n    </>\\n  );\\n}\\n\\nReactDOM.render((\\n  <div style={{ width: '100%' }}>\\n    <APILoader akay=\\\"GTrnXa5hwXGwgQnTBG28SHBubErMKm3f\\\">\\n      <Example />\\n    </APILoader>\\n  </div>\\n), _mount_);\\n```\\n\\n\\n### 使用 hooks\\n\\n`panoramaControl`, `setPanoramaControl`\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport { useRef, useEffect, useState } from 'react';\\nimport { Map, APILoader, useMap, usePanoramaControl } from '@uiw/react-baidu-map';\\n\\nconst Example = () => {\\n  const divElm = useRef(null);\\n  const [show, setShow] = useState(true);\\n  const { setContainer, map } = useMap();\\n  const { panoramaControl } = usePanoramaControl({\\n    map, anchor: BMAP_NAVIGATION_CONTROL_LARGE, visiable: show,\\n  });\\n\\n  useEffect(() => {\\n    if (divElm.current && !map) {\\n      setContainer(divElm.current);\\n    }\\n  }, [map]);\\n  return (\\n    <>\\n      <button onClick={() => setShow(!show)}>\\n        {show ? '关闭' : '开启'}\\n      </button>\\n      <div ref={divElm} style={{ height: '100%' }} />\\n    </>\\n  );\\n}\\n\\nconst Demo = () => (\\n  <div style={{ width: '100%', height: '300px' }}>\\n    <APILoader akay=\\\"GTrnXa5hwXGwgQnTBG28SHBubErMKm3f\\\">\\n      <Example />\\n    </APILoader>\\n  </div>\\n);\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n| ----- | ----- | ----- | ----- |\\n| visiable | 覆盖物是否可见。 | `boolean` | - |\\n| ~~anchor~~ | **`无效`** 控件的位置偏移值。| `ControlAnchor` | `BMAP_ANCHOR_TOP_RIGHT` |\\n| ~~offset~~ | **`无效`** 控件的水平偏移值。 | `BMap.Size` | - |\\n\";"],"sourceRoot":""}