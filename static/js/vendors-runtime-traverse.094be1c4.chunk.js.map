{"version":3,"sources":["../../node_modules/@babel/traverse/lib/index.js","../../node_modules/@babel/traverse/lib/path/index.js","../../node_modules/@babel/traverse/lib/cache.js","../../node_modules/@babel/traverse/lib/path/lib/virtual-types.js","../../node_modules/@babel/traverse/lib/scope/index.js","../../node_modules/@babel/traverse/lib/scope/binding.js","../../node_modules/@babel/traverse/lib/context.js","../../node_modules/@babel/traverse/lib/scope/lib/renamer.js","../../node_modules/@babel/traverse/lib/path/ancestry.js","../../node_modules/@babel/traverse/lib/path/inference/index.js","../../node_modules/@babel/traverse/lib/path/inference/inferers.js","../../node_modules/@babel/traverse/lib/path/inference/inferer-reference.js","../../node_modules/@babel/traverse/lib/path/replacement.js","../../node_modules/@babel/traverse/lib/path/evaluation.js","../../node_modules/@babel/traverse/lib/path/conversion.js","../../node_modules/@babel/traverse/lib/path/introspection.js","../../node_modules/@babel/traverse/lib/path/context.js","../../node_modules/@babel/traverse/lib/path/removal.js","../../node_modules/@babel/traverse/lib/path/lib/removal-hooks.js","../../node_modules/@babel/traverse/lib/path/modification.js","../../node_modules/@babel/traverse/lib/path/lib/hoister.js","../../node_modules/@babel/traverse/lib/path/family.js","../../node_modules/@babel/traverse/lib/path/comments.js","../../node_modules/@babel/traverse/lib/visitors.js","../../node_modules/@babel/traverse/lib/hub.js"],"names":["Object","defineProperty","exports","value","enumerable","get","_path","default","_scope","_hub","visitors","_context","require","_t","cache","VISITOR_KEYS","removeProperties","traverseFast","traverse","parent","opts","scope","state","parentPath","noScope","type","Error","explode","node","_default","hasDenylistedType","path","has","stop","verify","cheap","enter","skipKeys","keys","context","key","visit","clearNode","delete","tree","hasType","denylistTypes","includes","denylist","SHOULD_SKIP","SHOULD_STOP","REMOVED","virtualTypes","_debug","_index","t","_cache","_generator","NodePath_ancestry","NodePath_inference","NodePath_replacement","NodePath_evaluation","NodePath_conversion","NodePath_introspection","NodePath_context","NodePath_removal","NodePath_modification","NodePath_family","NodePath_comments","validate","debug","NodePath","hub","this","contexts","_traverseFlags","container","listKey","data","isScope","val","create","def","undefined","msg","SyntaxError","buildError","visitor","parts","inList","unshift","join","message","enabled","getPathLocation","code","v","targetNode","paths","Map","set","setup","assign","prototype","TYPES","typeKey","fn","TypeError","indexOf","push","virtualType","checkPath","clear","clearPath","clearScope","WeakMap","ForAwaitStatement","NumericLiteralTypeAnnotation","ExistentialTypeParam","SpreadProperty","RestProperty","Flow","Pure","Generated","User","Var","BlockScoped","Referenced","Scope","Expression","Statement","BindingIdentifier","ReferencedMemberExpression","ReferencedIdentifier","isBinding","isBlockScoped","isExportDeclaration","isExpression","isFlow","isForStatement","isForXStatement","isIdentifier","isImportDeclaration","isImportSpecifier","isJSXIdentifier","isJSXMemberExpression","isMemberExpression","isReferenced","isStatement","isVar","isVariableDeclaration","isCompatTag","react","types","name","grandparent","left","init","isReferencedIdentifier","loc","isUser","isPure","importKind","exportKind","isObjectPattern","isObjectExpression","await","_renamer","_binding","_globals","NOT_LOCAL_BINDING","callExpression","cloneNode","getBindingIdentifiers","identifier","isArrayExpression","isBinary","isClass","isClassBody","isClassDeclaration","isExportAllDeclaration","isExportDefaultDeclaration","isExportNamedDeclaration","isFunctionDeclaration","isLiteral","isMethod","isModuleDeclaration","isModuleSpecifier","isProperty","isPureish","isSuper","isTaggedTemplateExpression","isTemplateLiteral","isThisExpression","isUnaryExpression","matchesPattern","memberExpression","numericLiteral","toIdentifier","unaryExpression","variableDeclaration","variableDeclarator","gatherNodeParts","source","specifiers","length","declaration","local","object","property","callee","properties","argument","id","expression","meta","openingElement","openingFragment","namespace","collectorVisitor","ForStatement","declar","getFunctionParent","getProgramParent","registerBinding","Declaration","registerDeclaration","ImportDeclaration","getBlockParent","references","ForXStatement","isPattern","constantViolations","ExportDeclaration","exit","binding","getBinding","reference","declarations","decl","LabeledStatement","AssignmentExpression","assignments","UpdateExpression","UnaryExpression","operator","bindings","CatchClause","Function","isFunctionExpression","params","param","ClassExpression","uid","block","labels","inited","globals","uids","crawling","cached","_parent","isKey","generateUidIdentifier","generateUid","replace","i","_generateUid","hasLabel","hasBinding","hasGlobal","hasReference","program","defaultName","slice","generateUidBasedOnNode","constant","dontPush","isStatic","generateUidIdentifierBasedOnNode","kind","oldName","newName","rename","map","sep","repeat","console","log","violations","arrayLikeIsIterable","isGenericType","helperName","args","addHelper","getLabel","label","isLabeledStatement","registerLabel","specifier","ids","reassign","bindingPath","ReferenceError","declarators","getOuterBindingIdentifiers","getOwnBinding","checkBlockScopedCollisions","registerConstantViolation","constantsOnly","superClass","body","method","right","elements","elem","prop","computed","tag","quasi","expressions","crawl","programParent","_exploded","typeVisitors","addGlobal","ref","isBlockStatement","isProgram","isSwitchStatement","isLoop","isCatchClause","isFunction","ensureBlock","unique","blockHoist","_blockHoist","dataKey","declarPath","getData","unshiftContainer","setData","declarator","pop","isFunctionParent","isBlockParent","kinds","getBindingIdentifier","previousPath","_previousPath","_this$getBinding","noGlobals","hasOwnBinding","parentHasBinding","hasUid","contextVariables","_this$parent","info","removeOwnBinding","_this$getBinding2","builtin","Binding","referencePaths","referenced","clearValue","hasDeoptedValue","hasValue","TraversalContext","queue","priorityQueue","obj","notPriority","shouldVisit","visitQueue","visited","WeakSet","resync","pushContext","add","popContext","nodes","Array","isArray","visitMultiple","visitSingle","_helperSplitExportDeclaration","renameVisitor","assignmentExpression","toExpression","bindingIdentifierEquals","skip","skipKey","skipAllButComputedMethodKey","Renamer","parentDeclar","maybeExportDeclar","find","isDeclaration","isClassExpression","maybeConvertFromExportDeclaration","blockToTraverse","cases","forEach","c","maybeConvertFromClassFunctionDeclaration","maybeConvertFromClassFunctionExpression","findParent","callback","p","getStatementParent","isFile","getEarliestCommonAncestorFrom","getDeepestCommonAncestorFrom","deepest","ancestries","earliest","parentKey","filter","lastCommonIndex","lastCommon","minDepth","Infinity","ancestry","first","depthLoop","shouldMatch","getAncestry","isAncestor","maybeDescendant","isDescendant","maybeAncestor","inType","candidateTypes","getTypeAnnotation","typeAnnotation","_getTypeAnnotation","anyTypeAnnotation","isTypeAnnotation","isVariableDeclarator","declarParent","isForInStatement","stringTypeAnnotation","isForOfStatement","voidTypeAnnotation","typeAnnotationInferringNodes","_inferer","inferer","inferers","call","validParent","isBaseType","baseName","soft","_isBaseType","couldBeBaseType","isAnyTypeAnnotation","isUnionTypeAnnotation","type2","baseTypeStrictlyMatches","rightArg","isFlowBaseAnnotation","genericName","isGenericTypeAnnotation","isBooleanTypeAnnotation","isEmptyTypeAnnotation","isMixedTypeAnnotation","isNumberTypeAnnotation","isStringTypeAnnotation","isVoidTypeAnnotation","VariableDeclarator","_type","isCallExpression","ArrayExpression","TypeCastExpression","NewExpression","genericTypeAnnotation","TemplateLiteral","NUMBER_UNARY_OPERATORS","numberTypeAnnotation","STRING_UNARY_OPERATORS","BOOLEAN_UNARY_OPERATORS","booleanTypeAnnotation","BinaryExpression","NUMBER_BINARY_OPERATORS","BOOLEAN_BINARY_OPERATORS","unionTypeAnnotation","LogicalExpression","argumentTypes","isTSTypeAnnotation","createTSUnionType","createFlowUnionType","createUnionTypeAnnotation","ConditionalExpression","SequenceExpression","ParenthesizedExpression","StringLiteral","NumericLiteral","BooleanLiteral","NullLiteral","nullLiteralTypeAnnotation","RegExpLiteral","ObjectExpression","RestElement","ClassDeclaration","FunctionDeclaration","ArrowFunctionExpression","FunctionExpression","CallExpression","isObjectKeys","arrayTypeAnnotation","isArrayFrom","isObjectValues","isObjectEntries","tupleTypeAnnotation","resolveCall","TaggedTemplateExpression","_infererReference","buildMatchMemberExpression","resolve","is","returnType","functionConstantViolations","getConstantViolationsBefore","testType","getConditionalAnnotation","testConstantViolations","ifStatement","violation","getTypeAnnotationBindingConstantViolations","BOOLEAN_NUMBER_BINARY_OPERATORS","createTypeAnnotationBasedOnTypeof","functions","status","_guessExecutionStatusRelativeTo","inferAnnotationFromBinaryExpression","target","typeofPath","typePath","typeValue","isIfStatement","isConditionalExpression","getParentConditionalPath","isLogicalExpression","isBinaryExpression","replaceWithMultiple","_pathCache$get","_verifyNodeList","inheritLeadingComments","inheritTrailingComments","insertAfter","requeue","remove","replaceWithSourceString","replacement","_parser","parse","err","_codeFrame","codeFrameColumns","start","line","column","replaceWith","removed","_index2","nodePath","isNodeType","canHaveVariableDeclarationOrExpression","canSwapBetweenExpressionAndStatement","expressionStatement","replaceExpressionWithStatements","oldNode","inheritsComments","removeComments","_replaceWith","setScope","_pathCache$get2","nodesAsSequenceExpression","toSequenceExpression","functionParent","isParentAsync","isParentGenerator","arrowFunctionExpression","blockStatement","_helperHoistVariables","completionRecords","getCompletionRecords","isExpressionStatement","loop","generateDeclaredUidIdentifier","pushContainer","returnStatement","arrowFunctionToExpression","newCallee","needToAwaitFunction","FUNCTION_TYPES","needToYieldFunction","awaitExpression","yieldExpression","replaceInline","_containerInsertAfter","evaluateTruthy","res","evaluate","confident","deoptPath","seen","evaluateCached","deopt","VALID_CALLEES","INVALID_METHODS","existing","resolved","item","isSequenceExpression","exprs","isStringLiteral","isNumericLiteral","isBooleanLiteral","isNullLiteral","evaluateQuasis","quasis","testResult","isExpressionWrapper","end","NaN","prefix","arg","arr","elems","elemValue","props","isObjectMethod","isSpreadElement","wasConfident","leftConfident","rightConfident","Math","pow","func","global","apply","_evaluate","raw","str","cooked","expr","String","toComputedKey","stringLiteral","bodyNode","statements","stringPath","arrowFunctionToShadowed","isArrowFunctionExpression","unwrapFunctionEnvironment","buildCodeFrameError","hoistFunctionEnvironment","allowInsertArrow","specCompliant","noNewArrows","thisBinding","checkBinding","objectExpression","thisExpression","_helperFunctionName","binaryExpression","conditionalExpression","jsxIdentifier","metaProperty","restElement","sequenceExpression","spreadElement","_super","super","fnPath","thisEnvFn","isClassProperty","static","inConstructor","getScopeInformation","thisPaths","argumentsPaths","newTargetPaths","superProps","superCalls","allSuperCalls","child","ClassProperty","superBinding","getSuperBinding","superCall","argumentsBinding","buildUndefinedNode","argumentsChild","argsRef","newTargetBinding","targetChild","targetRef","flatSuperProps","reduce","acc","superProp","concat","standardizeSuperProperty","isAssignment","isAssignmentExpression","isCall","getSuperPropBinding","getThisBinding","hasSuperClass","thisChild","thisRef","isJSX","assignmentPath","op","tmp","isUpdateExpression","updateExpr","computedKey","isClassMethod","supers","argsBinding","propName","fnBody","argsList","valueIdent","cacheKey","ThisExpression","JSXIdentifier","isJSXOpeningElement","MemberExpression","curr","MetaProperty","pattern","allowPartial","_matchesPattern","isnt","equals","isType","isFor","isCompletionRecord","allowInsideFunction","isStatementOrBlock","STATEMENT_OR_BLOCK_KEYS","referencesImport","moduleSource","importName","isOptionalMemberExpression","isImportDefaultSpecifier","isImportNamespaceSpecifier","imported","getSource","getCode","willIMaybeExecuteBefore","funcParent","getOuterFunction","_guessExecutionStatusRelativeToDifferentFunctions","commonPath","commonIndex","isExecutionUncertainInList","divergence","keyPosition","allStatus","executionOrderCheckedNodes","dangerous","_resolve","ret","isTypeCastExpression","targetKey","targetName","match","isNaN","isConstantExpression","isRegExpLiteral","every","isInStrictMode","sourceType","directives","isExecutionUncertain","maxIndex","_call","fns","then","isBlacklisted","isDenylisted","_this$opts$denylist","blacklist","shouldSkip","shouldStop","getScope","setContext","_resyncParent","_resyncList","_resyncKey","setKey","newContainer","_resyncRemoved","_markRemoved","_this$node","pathToQueue","maybeQueue","_getQueueContexts","_this$opts","_assertUnremoved","_removeFromScope","_callRemovalHooks","shareCommentsWithSiblings","_remove","removeBinding","_removalHooks","hooks","splice","updateSiblingKeys","self","isWhile","isSwitchCase","insertBefore","nodes_","isJSXElement","_containerInsertBefore","shouldInsertCurrentNode","_containerInsert","from","to","getSibling","assertExpression","temp","fromIndex","incrementBy","verifiedNodes","hoist","hoister","_hoister","run","_t2","jsxExpressionContainer","referenceVisitor","breakOnScopePaths","mutableBinding","PathHoister","scopes","attachAfter","isCompatibleScope","_getAttachmentPath","targetScope","getAttachmentParentForPath","violationPath","hasOwnParamBindings","getNextScopeAttachmentParent","bodies","getCompatibleScopes","attachTo","getAttachmentPath","attached","children","getOpposite","_getCompletionRecords","canHaveBreak","shouldPopulateBreak","inCaseClause","r","getPrevSibling","getNextSibling","getAllNextSiblings","_key","sibling","siblings","getAllPrevSiblings","split","_getKey","_getPattern","_","part","duplicates","_getBindingIdentifiers","_getOuterBindingIdentifiers","getBindingIdentifierPaths","outerOnly","search","shift","_ids","getOuterBindingIdentifierPaths","addCompletionRecords","records","normalCompletionToBreak","completions","replaceBreakStatementInBreakCompletion","reachable","isBreakStatement","getStatementListCompletion","lastNormalCompletions","newContext","statementCompletions","some","pathCompletions","isDoExpression","isTryStatement","caseCompletions","normalCompletions","breakCompletions","completionRecordForSwitch","BreakCompletion","NormalCompletion","trailing","trailingComments","leading","leadingComments","prev","next","hasPrev","Boolean","hasNext","addComments","addComment","content","_addComment","comments","_addComments","merge","states","wrapper","rootVisitor","visitorType","wrapWithStateOrWrapper","nodeVisitor","mergePair","DEPRECATED_KEYS","FLIPPED_ALIAS_KEYS","nodeType","shouldIgnoreKey","__esModule","ensureEntranceObjects","ensureCallbackArrays","wrapCheck","aliases","deprecatedKey","trace","alias","_verified","validateVisitorMethods","visitorKey","oldVisitor","newVisitor","newFn","toString","arguments","dest","src","Hub"],"mappings":"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","file":"static/js/vendors-runtime-traverse.094be1c4.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NodePath\", {\n  enumerable: true,\n  get: function () {\n    return _path.default;\n  }\n});\nObject.defineProperty(exports, \"Scope\", {\n  enumerable: true,\n  get: function () {\n    return _scope.default;\n  }\n});\nObject.defineProperty(exports, \"Hub\", {\n  enumerable: true,\n  get: function () {\n    return _hub.default;\n  }\n});\nexports.visitors = exports.default = void 0;\n\nvar _context = require(\"./context\");\n\nvar visitors = require(\"./visitors\");\n\nexports.visitors = visitors;\n\nvar _t = require(\"@babel/types\");\n\nvar cache = require(\"./cache\");\n\nvar _path = require(\"./path\");\n\nvar _scope = require(\"./scope\");\n\nvar _hub = require(\"./hub\");\n\nconst {\n  VISITOR_KEYS,\n  removeProperties,\n  traverseFast\n} = _t;\n\nfunction traverse(parent, opts = {}, scope, state, parentPath) {\n  if (!parent) return;\n\n  if (!opts.noScope && !scope) {\n    if (parent.type !== \"Program\" && parent.type !== \"File\") {\n      throw new Error(\"You must pass a scope and parentPath unless traversing a Program/File. \" + `Instead of that you tried to traverse a ${parent.type} node without ` + \"passing scope and parentPath.\");\n    }\n  }\n\n  if (!VISITOR_KEYS[parent.type]) {\n    return;\n  }\n\n  visitors.explode(opts);\n  traverse.node(parent, opts, scope, state, parentPath);\n}\n\nvar _default = traverse;\nexports.default = _default;\ntraverse.visitors = visitors;\ntraverse.verify = visitors.verify;\ntraverse.explode = visitors.explode;\n\ntraverse.cheap = function (node, enter) {\n  return traverseFast(node, enter);\n};\n\ntraverse.node = function (node, opts, scope, state, parentPath, skipKeys) {\n  const keys = VISITOR_KEYS[node.type];\n  if (!keys) return;\n  const context = new _context.default(scope, opts, state, parentPath);\n\n  for (const key of keys) {\n    if (skipKeys && skipKeys[key]) continue;\n    if (context.visit(node, key)) return;\n  }\n};\n\ntraverse.clearNode = function (node, opts) {\n  removeProperties(node, opts);\n  cache.path.delete(node);\n};\n\ntraverse.removeProperties = function (tree, opts) {\n  traverseFast(tree, traverse.clearNode, opts);\n  return tree;\n};\n\nfunction hasDenylistedType(path, state) {\n  if (path.node.type === state.type) {\n    state.has = true;\n    path.stop();\n  }\n}\n\ntraverse.hasType = function (tree, type, denylistTypes) {\n  if (denylistTypes != null && denylistTypes.includes(tree.type)) return false;\n  if (tree.type === type) return true;\n  const state = {\n    has: false,\n    type: type\n  };\n  traverse(tree, {\n    noScope: true,\n    denylist: denylistTypes,\n    enter: hasDenylistedType\n  }, null, state);\n  return state.has;\n};\n\ntraverse.cache = cache;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.SHOULD_SKIP = exports.SHOULD_STOP = exports.REMOVED = void 0;\n\nvar virtualTypes = require(\"./lib/virtual-types\");\n\nvar _debug = require(\"debug\");\n\nvar _index = require(\"../index\");\n\nvar _scope = require(\"../scope\");\n\nvar _t = require(\"@babel/types\");\n\nvar t = _t;\n\nvar _cache = require(\"../cache\");\n\nvar _generator = require(\"@babel/generator\");\n\nvar NodePath_ancestry = require(\"./ancestry\");\n\nvar NodePath_inference = require(\"./inference\");\n\nvar NodePath_replacement = require(\"./replacement\");\n\nvar NodePath_evaluation = require(\"./evaluation\");\n\nvar NodePath_conversion = require(\"./conversion\");\n\nvar NodePath_introspection = require(\"./introspection\");\n\nvar NodePath_context = require(\"./context\");\n\nvar NodePath_removal = require(\"./removal\");\n\nvar NodePath_modification = require(\"./modification\");\n\nvar NodePath_family = require(\"./family\");\n\nvar NodePath_comments = require(\"./comments\");\n\nconst {\n  validate\n} = _t;\n\nconst debug = _debug(\"babel\");\n\nconst REMOVED = 1 << 0;\nexports.REMOVED = REMOVED;\nconst SHOULD_STOP = 1 << 1;\nexports.SHOULD_STOP = SHOULD_STOP;\nconst SHOULD_SKIP = 1 << 2;\nexports.SHOULD_SKIP = SHOULD_SKIP;\n\nclass NodePath {\n  constructor(hub, parent) {\n    this.contexts = [];\n    this.state = null;\n    this.opts = null;\n    this._traverseFlags = 0;\n    this.skipKeys = null;\n    this.parentPath = null;\n    this.container = null;\n    this.listKey = null;\n    this.key = null;\n    this.node = null;\n    this.type = null;\n    this.parent = parent;\n    this.hub = hub;\n    this.data = null;\n    this.context = null;\n    this.scope = null;\n  }\n\n  static get({\n    hub,\n    parentPath,\n    parent,\n    container,\n    listKey,\n    key\n  }) {\n    if (!hub && parentPath) {\n      hub = parentPath.hub;\n    }\n\n    if (!parent) {\n      throw new Error(\"To get a node path the parent needs to exist\");\n    }\n\n    const targetNode = container[key];\n\n    let paths = _cache.path.get(parent);\n\n    if (!paths) {\n      paths = new Map();\n\n      _cache.path.set(parent, paths);\n    }\n\n    let path = paths.get(targetNode);\n\n    if (!path) {\n      path = new NodePath(hub, parent);\n      if (targetNode) paths.set(targetNode, path);\n    }\n\n    path.setup(parentPath, container, listKey, key);\n    return path;\n  }\n\n  getScope(scope) {\n    return this.isScope() ? new _scope.default(this) : scope;\n  }\n\n  setData(key, val) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    return this.data[key] = val;\n  }\n\n  getData(key, def) {\n    if (this.data == null) {\n      this.data = Object.create(null);\n    }\n\n    let val = this.data[key];\n    if (val === undefined && def !== undefined) val = this.data[key] = def;\n    return val;\n  }\n\n  buildCodeFrameError(msg, Error = SyntaxError) {\n    return this.hub.buildError(this.node, msg, Error);\n  }\n\n  traverse(visitor, state) {\n    (0, _index.default)(this.node, visitor, this.scope, state, this);\n  }\n\n  set(key, node) {\n    validate(this.node, key, node);\n    this.node[key] = node;\n  }\n\n  getPathLocation() {\n    const parts = [];\n    let path = this;\n\n    do {\n      let key = path.key;\n      if (path.inList) key = `${path.listKey}[${key}]`;\n      parts.unshift(key);\n    } while (path = path.parentPath);\n\n    return parts.join(\".\");\n  }\n\n  debug(message) {\n    if (!debug.enabled) return;\n    debug(`${this.getPathLocation()} ${this.type}: ${message}`);\n  }\n\n  toString() {\n    return (0, _generator.default)(this.node).code;\n  }\n\n  get inList() {\n    return !!this.listKey;\n  }\n\n  set inList(inList) {\n    if (!inList) {\n      this.listKey = null;\n    }\n  }\n\n  get parentKey() {\n    return this.listKey || this.key;\n  }\n\n  get shouldSkip() {\n    return !!(this._traverseFlags & SHOULD_SKIP);\n  }\n\n  set shouldSkip(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_SKIP;\n    } else {\n      this._traverseFlags &= ~SHOULD_SKIP;\n    }\n  }\n\n  get shouldStop() {\n    return !!(this._traverseFlags & SHOULD_STOP);\n  }\n\n  set shouldStop(v) {\n    if (v) {\n      this._traverseFlags |= SHOULD_STOP;\n    } else {\n      this._traverseFlags &= ~SHOULD_STOP;\n    }\n  }\n\n  get removed() {\n    return !!(this._traverseFlags & REMOVED);\n  }\n\n  set removed(v) {\n    if (v) {\n      this._traverseFlags |= REMOVED;\n    } else {\n      this._traverseFlags &= ~REMOVED;\n    }\n  }\n\n}\n\nObject.assign(NodePath.prototype, NodePath_ancestry, NodePath_inference, NodePath_replacement, NodePath_evaluation, NodePath_conversion, NodePath_introspection, NodePath_context, NodePath_removal, NodePath_modification, NodePath_family, NodePath_comments);\n\nfor (const type of t.TYPES) {\n  const typeKey = `is${type}`;\n  const fn = t[typeKey];\n\n  NodePath.prototype[typeKey] = function (opts) {\n    return fn(this.node, opts);\n  };\n\n  NodePath.prototype[`assert${type}`] = function (opts) {\n    if (!fn(this.node, opts)) {\n      throw new TypeError(`Expected node path of type ${type}`);\n    }\n  };\n}\n\nfor (const type of Object.keys(virtualTypes)) {\n  if (type[0] === \"_\") continue;\n  if (t.TYPES.indexOf(type) < 0) t.TYPES.push(type);\n  const virtualType = virtualTypes[type];\n\n  NodePath.prototype[`is${type}`] = function (opts) {\n    return virtualType.checkPath(this, opts);\n  };\n}\n\nvar _default = NodePath;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear;\nexports.clearPath = clearPath;\nexports.clearScope = clearScope;\nexports.scope = exports.path = void 0;\nlet path = new WeakMap();\nexports.path = path;\nlet scope = new WeakMap();\nexports.scope = scope;\n\nfunction clear() {\n  clearPath();\n  clearScope();\n}\n\nfunction clearPath() {\n  exports.path = path = new WeakMap();\n}\n\nfunction clearScope() {\n  exports.scope = scope = new WeakMap();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ForAwaitStatement = exports.NumericLiteralTypeAnnotation = exports.ExistentialTypeParam = exports.SpreadProperty = exports.RestProperty = exports.Flow = exports.Pure = exports.Generated = exports.User = exports.Var = exports.BlockScoped = exports.Referenced = exports.Scope = exports.Expression = exports.Statement = exports.BindingIdentifier = exports.ReferencedMemberExpression = exports.ReferencedIdentifier = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  isBinding,\n  isBlockScoped,\n  isExportDeclaration,\n  isExpression,\n  isFlow,\n  isForStatement,\n  isForXStatement,\n  isIdentifier,\n  isImportDeclaration,\n  isImportSpecifier,\n  isJSXIdentifier,\n  isJSXMemberExpression,\n  isMemberExpression,\n  isReferenced,\n  isScope,\n  isStatement,\n  isVar,\n  isVariableDeclaration,\n  react\n} = _t;\nconst {\n  isCompatTag\n} = react;\nconst ReferencedIdentifier = {\n  types: [\"Identifier\", \"JSXIdentifier\"],\n\n  checkPath(path, opts) {\n    const {\n      node,\n      parent\n    } = path;\n\n    if (!isIdentifier(node, opts) && !isJSXMemberExpression(parent, opts)) {\n      if (isJSXIdentifier(node, opts)) {\n        if (isCompatTag(node.name)) return false;\n      } else {\n        return false;\n      }\n    }\n\n    return isReferenced(node, parent, path.parentPath.parent);\n  }\n\n};\nexports.ReferencedIdentifier = ReferencedIdentifier;\nconst ReferencedMemberExpression = {\n  types: [\"MemberExpression\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    return isMemberExpression(node) && isReferenced(node, parent);\n  }\n\n};\nexports.ReferencedMemberExpression = ReferencedMemberExpression;\nconst BindingIdentifier = {\n  types: [\"Identifier\"],\n\n  checkPath(path) {\n    const {\n      node,\n      parent\n    } = path;\n    const grandparent = path.parentPath.parent;\n    return isIdentifier(node) && isBinding(node, parent, grandparent);\n  }\n\n};\nexports.BindingIdentifier = BindingIdentifier;\nconst Statement = {\n  types: [\"Statement\"],\n\n  checkPath({\n    node,\n    parent\n  }) {\n    if (isStatement(node)) {\n      if (isVariableDeclaration(node)) {\n        if (isForXStatement(parent, {\n          left: node\n        })) return false;\n        if (isForStatement(parent, {\n          init: node\n        })) return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Statement = Statement;\nconst Expression = {\n  types: [\"Expression\"],\n\n  checkPath(path) {\n    if (path.isIdentifier()) {\n      return path.isReferencedIdentifier();\n    } else {\n      return isExpression(path.node);\n    }\n  }\n\n};\nexports.Expression = Expression;\nconst Scope = {\n  types: [\"Scopable\", \"Pattern\"],\n\n  checkPath(path) {\n    return isScope(path.node, path.parent);\n  }\n\n};\nexports.Scope = Scope;\nconst Referenced = {\n  checkPath(path) {\n    return isReferenced(path.node, path.parent);\n  }\n\n};\nexports.Referenced = Referenced;\nconst BlockScoped = {\n  checkPath(path) {\n    return isBlockScoped(path.node);\n  }\n\n};\nexports.BlockScoped = BlockScoped;\nconst Var = {\n  types: [\"VariableDeclaration\"],\n\n  checkPath(path) {\n    return isVar(path.node);\n  }\n\n};\nexports.Var = Var;\nconst User = {\n  checkPath(path) {\n    return path.node && !!path.node.loc;\n  }\n\n};\nexports.User = User;\nconst Generated = {\n  checkPath(path) {\n    return !path.isUser();\n  }\n\n};\nexports.Generated = Generated;\nconst Pure = {\n  checkPath(path, opts) {\n    return path.scope.isPure(path.node, opts);\n  }\n\n};\nexports.Pure = Pure;\nconst Flow = {\n  types: [\"Flow\", \"ImportDeclaration\", \"ExportDeclaration\", \"ImportSpecifier\"],\n\n  checkPath({\n    node\n  }) {\n    if (isFlow(node)) {\n      return true;\n    } else if (isImportDeclaration(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else if (isExportDeclaration(node)) {\n      return node.exportKind === \"type\";\n    } else if (isImportSpecifier(node)) {\n      return node.importKind === \"type\" || node.importKind === \"typeof\";\n    } else {\n      return false;\n    }\n  }\n\n};\nexports.Flow = Flow;\nconst RestProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectPattern();\n  }\n\n};\nexports.RestProperty = RestProperty;\nconst SpreadProperty = {\n  types: [\"RestElement\"],\n\n  checkPath(path) {\n    return path.parentPath && path.parentPath.isObjectExpression();\n  }\n\n};\nexports.SpreadProperty = SpreadProperty;\nconst ExistentialTypeParam = {\n  types: [\"ExistsTypeAnnotation\"]\n};\nexports.ExistentialTypeParam = ExistentialTypeParam;\nconst NumericLiteralTypeAnnotation = {\n  types: [\"NumberLiteralTypeAnnotation\"]\n};\nexports.NumericLiteralTypeAnnotation = NumericLiteralTypeAnnotation;\nconst ForAwaitStatement = {\n  types: [\"ForOfStatement\"],\n\n  checkPath({\n    node\n  }) {\n    return node.await === true;\n  }\n\n};\nexports.ForAwaitStatement = ForAwaitStatement;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _renamer = require(\"./lib/renamer\");\n\nvar _index = require(\"../index\");\n\nvar _binding = require(\"./binding\");\n\nvar _globals = require(\"globals\");\n\nvar _t = require(\"@babel/types\");\n\nvar _cache = require(\"../cache\");\n\nconst {\n  NOT_LOCAL_BINDING,\n  callExpression,\n  cloneNode,\n  getBindingIdentifiers,\n  identifier,\n  isArrayExpression,\n  isBinary,\n  isClass,\n  isClassBody,\n  isClassDeclaration,\n  isExportAllDeclaration,\n  isExportDefaultDeclaration,\n  isExportNamedDeclaration,\n  isFunctionDeclaration,\n  isIdentifier,\n  isImportDeclaration,\n  isLiteral,\n  isMethod,\n  isModuleDeclaration,\n  isModuleSpecifier,\n  isObjectExpression,\n  isProperty,\n  isPureish,\n  isSuper,\n  isTaggedTemplateExpression,\n  isTemplateLiteral,\n  isThisExpression,\n  isUnaryExpression,\n  isVariableDeclaration,\n  matchesPattern,\n  memberExpression,\n  numericLiteral,\n  toIdentifier,\n  unaryExpression,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\n\nfunction gatherNodeParts(node, parts) {\n  switch (node == null ? void 0 : node.type) {\n    default:\n      if (isModuleDeclaration(node)) {\n        if ((isExportAllDeclaration(node) || isExportNamedDeclaration(node) || isImportDeclaration(node)) && node.source) {\n          gatherNodeParts(node.source, parts);\n        } else if ((isExportNamedDeclaration(node) || isImportDeclaration(node)) && node.specifiers && node.specifiers.length) {\n          for (const e of node.specifiers) gatherNodeParts(e, parts);\n        } else if ((isExportDefaultDeclaration(node) || isExportNamedDeclaration(node)) && node.declaration) {\n          gatherNodeParts(node.declaration, parts);\n        }\n      } else if (isModuleSpecifier(node)) {\n        gatherNodeParts(node.local, parts);\n      } else if (isLiteral(node)) {\n        parts.push(node.value);\n      }\n\n      break;\n\n    case \"MemberExpression\":\n    case \"OptionalMemberExpression\":\n    case \"JSXMemberExpression\":\n      gatherNodeParts(node.object, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"Identifier\":\n    case \"JSXIdentifier\":\n      parts.push(node.name);\n      break;\n\n    case \"CallExpression\":\n    case \"OptionalCallExpression\":\n    case \"NewExpression\":\n      gatherNodeParts(node.callee, parts);\n      break;\n\n    case \"ObjectExpression\":\n    case \"ObjectPattern\":\n      for (const e of node.properties) {\n        gatherNodeParts(e, parts);\n      }\n\n      break;\n\n    case \"SpreadElement\":\n    case \"RestElement\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"ObjectProperty\":\n    case \"ObjectMethod\":\n    case \"ClassProperty\":\n    case \"ClassMethod\":\n    case \"ClassPrivateProperty\":\n    case \"ClassPrivateMethod\":\n      gatherNodeParts(node.key, parts);\n      break;\n\n    case \"ThisExpression\":\n      parts.push(\"this\");\n      break;\n\n    case \"Super\":\n      parts.push(\"super\");\n      break;\n\n    case \"Import\":\n      parts.push(\"import\");\n      break;\n\n    case \"DoExpression\":\n      parts.push(\"do\");\n      break;\n\n    case \"YieldExpression\":\n      parts.push(\"yield\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AwaitExpression\":\n      parts.push(\"await\");\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"AssignmentExpression\":\n      gatherNodeParts(node.left, parts);\n      break;\n\n    case \"VariableDeclarator\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"FunctionExpression\":\n    case \"FunctionDeclaration\":\n    case \"ClassExpression\":\n    case \"ClassDeclaration\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"PrivateName\":\n      gatherNodeParts(node.id, parts);\n      break;\n\n    case \"ParenthesizedExpression\":\n      gatherNodeParts(node.expression, parts);\n      break;\n\n    case \"UnaryExpression\":\n    case \"UpdateExpression\":\n      gatherNodeParts(node.argument, parts);\n      break;\n\n    case \"MetaProperty\":\n      gatherNodeParts(node.meta, parts);\n      gatherNodeParts(node.property, parts);\n      break;\n\n    case \"JSXElement\":\n      gatherNodeParts(node.openingElement, parts);\n      break;\n\n    case \"JSXOpeningElement\":\n      parts.push(node.name);\n      break;\n\n    case \"JSXFragment\":\n      gatherNodeParts(node.openingFragment, parts);\n      break;\n\n    case \"JSXOpeningFragment\":\n      parts.push(\"Fragment\");\n      break;\n\n    case \"JSXNamespacedName\":\n      gatherNodeParts(node.namespace, parts);\n      gatherNodeParts(node.name, parts);\n      break;\n  }\n}\n\nconst collectorVisitor = {\n  ForStatement(path) {\n    const declar = path.get(\"init\");\n\n    if (declar.isVar()) {\n      const {\n        scope\n      } = path;\n      const parentScope = scope.getFunctionParent() || scope.getProgramParent();\n      parentScope.registerBinding(\"var\", declar);\n    }\n  },\n\n  Declaration(path) {\n    if (path.isBlockScoped()) return;\n    if (path.isImportDeclaration()) return;\n    if (path.isExportDeclaration()) return;\n    const parent = path.scope.getFunctionParent() || path.scope.getProgramParent();\n    parent.registerDeclaration(path);\n  },\n\n  ImportDeclaration(path) {\n    const parent = path.scope.getBlockParent();\n    parent.registerDeclaration(path);\n  },\n\n  ReferencedIdentifier(path, state) {\n    state.references.push(path);\n  },\n\n  ForXStatement(path, state) {\n    const left = path.get(\"left\");\n\n    if (left.isPattern() || left.isIdentifier()) {\n      state.constantViolations.push(path);\n    } else if (left.isVar()) {\n      const {\n        scope\n      } = path;\n      const parentScope = scope.getFunctionParent() || scope.getProgramParent();\n      parentScope.registerBinding(\"var\", left);\n    }\n  },\n\n  ExportDeclaration: {\n    exit(path) {\n      const {\n        node,\n        scope\n      } = path;\n      if (isExportAllDeclaration(node)) return;\n      const declar = node.declaration;\n\n      if (isClassDeclaration(declar) || isFunctionDeclaration(declar)) {\n        const id = declar.id;\n        if (!id) return;\n        const binding = scope.getBinding(id.name);\n        binding == null ? void 0 : binding.reference(path);\n      } else if (isVariableDeclaration(declar)) {\n        for (const decl of declar.declarations) {\n          for (const name of Object.keys(getBindingIdentifiers(decl))) {\n            const binding = scope.getBinding(name);\n            binding == null ? void 0 : binding.reference(path);\n          }\n        }\n      }\n    }\n\n  },\n\n  LabeledStatement(path) {\n    path.scope.getBlockParent().registerDeclaration(path);\n  },\n\n  AssignmentExpression(path, state) {\n    state.assignments.push(path);\n  },\n\n  UpdateExpression(path, state) {\n    state.constantViolations.push(path);\n  },\n\n  UnaryExpression(path, state) {\n    if (path.node.operator === \"delete\") {\n      state.constantViolations.push(path);\n    }\n  },\n\n  BlockScoped(path) {\n    let scope = path.scope;\n    if (scope.path === path) scope = scope.parent;\n    const parent = scope.getBlockParent();\n    parent.registerDeclaration(path);\n\n    if (path.isClassDeclaration() && path.node.id) {\n      const id = path.node.id;\n      const name = id.name;\n      path.scope.bindings[name] = path.scope.parent.getBinding(name);\n    }\n  },\n\n  CatchClause(path) {\n    path.scope.registerBinding(\"let\", path);\n  },\n\n  Function(path) {\n    if (path.isFunctionExpression() && path.has(\"id\") && !path.get(\"id\").node[NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path.get(\"id\"), path);\n    }\n\n    const params = path.get(\"params\");\n\n    for (const param of params) {\n      path.scope.registerBinding(\"param\", param);\n    }\n  },\n\n  ClassExpression(path) {\n    if (path.has(\"id\") && !path.get(\"id\").node[NOT_LOCAL_BINDING]) {\n      path.scope.registerBinding(\"local\", path);\n    }\n  }\n\n};\nlet uid = 0;\n\nclass Scope {\n  constructor(path) {\n    this.uid = void 0;\n    this.path = void 0;\n    this.block = void 0;\n    this.labels = void 0;\n    this.inited = void 0;\n    this.bindings = void 0;\n    this.references = void 0;\n    this.globals = void 0;\n    this.uids = void 0;\n    this.data = void 0;\n    this.crawling = void 0;\n    const {\n      node\n    } = path;\n\n    const cached = _cache.scope.get(node);\n\n    if ((cached == null ? void 0 : cached.path) === path) {\n      return cached;\n    }\n\n    _cache.scope.set(node, this);\n\n    this.uid = uid++;\n    this.block = node;\n    this.path = path;\n    this.labels = new Map();\n    this.inited = false;\n  }\n\n  get parent() {\n    var _parent;\n\n    let parent,\n        path = this.path;\n\n    do {\n      const isKey = path.key === \"key\";\n      path = path.parentPath;\n      if (isKey && path.isMethod()) path = path.parentPath;\n      if (path && path.isScope()) parent = path;\n    } while (path && !parent);\n\n    return (_parent = parent) == null ? void 0 : _parent.scope;\n  }\n\n  get parentBlock() {\n    return this.path.parent;\n  }\n\n  get hub() {\n    return this.path.hub;\n  }\n\n  traverse(node, opts, state) {\n    (0, _index.default)(node, opts, this, state, this.path);\n  }\n\n  generateDeclaredUidIdentifier(name) {\n    const id = this.generateUidIdentifier(name);\n    this.push({\n      id\n    });\n    return cloneNode(id);\n  }\n\n  generateUidIdentifier(name) {\n    return identifier(this.generateUid(name));\n  }\n\n  generateUid(name = \"temp\") {\n    name = toIdentifier(name).replace(/^_+/, \"\").replace(/[0-9]+$/g, \"\");\n    let uid;\n    let i = 1;\n\n    do {\n      uid = this._generateUid(name, i);\n      i++;\n    } while (this.hasLabel(uid) || this.hasBinding(uid) || this.hasGlobal(uid) || this.hasReference(uid));\n\n    const program = this.getProgramParent();\n    program.references[uid] = true;\n    program.uids[uid] = true;\n    return uid;\n  }\n\n  _generateUid(name, i) {\n    let id = name;\n    if (i > 1) id += i;\n    return `_${id}`;\n  }\n\n  generateUidBasedOnNode(node, defaultName) {\n    const parts = [];\n    gatherNodeParts(node, parts);\n    let id = parts.join(\"$\");\n    id = id.replace(/^_/, \"\") || defaultName || \"ref\";\n    return this.generateUid(id.slice(0, 20));\n  }\n\n  generateUidIdentifierBasedOnNode(node, defaultName) {\n    return identifier(this.generateUidBasedOnNode(node, defaultName));\n  }\n\n  isStatic(node) {\n    if (isThisExpression(node) || isSuper(node)) {\n      return true;\n    }\n\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding) {\n        return binding.constant;\n      } else {\n        return this.hasBinding(node.name);\n      }\n    }\n\n    return false;\n  }\n\n  maybeGenerateMemoised(node, dontPush) {\n    if (this.isStatic(node)) {\n      return null;\n    } else {\n      const id = this.generateUidIdentifierBasedOnNode(node);\n\n      if (!dontPush) {\n        this.push({\n          id\n        });\n        return cloneNode(id);\n      }\n\n      return id;\n    }\n  }\n\n  checkBlockScopedCollisions(local, kind, name, id) {\n    if (kind === \"param\") return;\n    if (local.kind === \"local\") return;\n    const duplicate = kind === \"let\" || local.kind === \"let\" || local.kind === \"const\" || local.kind === \"module\" || local.kind === \"param\" && (kind === \"let\" || kind === \"const\");\n\n    if (duplicate) {\n      throw this.hub.buildError(id, `Duplicate declaration \"${name}\"`, TypeError);\n    }\n  }\n\n  rename(oldName, newName, block) {\n    const binding = this.getBinding(oldName);\n\n    if (binding) {\n      newName = newName || this.generateUidIdentifier(oldName).name;\n      return new _renamer.default(binding, oldName, newName).rename(block);\n    }\n  }\n\n  _renameFromMap(map, oldName, newName, value) {\n    if (map[oldName]) {\n      map[newName] = value;\n      map[oldName] = null;\n    }\n  }\n\n  dump() {\n    const sep = \"-\".repeat(60);\n    console.log(sep);\n    let scope = this;\n\n    do {\n      console.log(\"#\", scope.block.type);\n\n      for (const name of Object.keys(scope.bindings)) {\n        const binding = scope.bindings[name];\n        console.log(\" -\", name, {\n          constant: binding.constant,\n          references: binding.references,\n          violations: binding.constantViolations.length,\n          kind: binding.kind\n        });\n      }\n    } while (scope = scope.parent);\n\n    console.log(sep);\n  }\n\n  toArray(node, i, arrayLikeIsIterable) {\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n\n      if (binding != null && binding.constant && binding.path.isGenericType(\"Array\")) {\n        return node;\n      }\n    }\n\n    if (isArrayExpression(node)) {\n      return node;\n    }\n\n    if (isIdentifier(node, {\n      name: \"arguments\"\n    })) {\n      return callExpression(memberExpression(memberExpression(memberExpression(identifier(\"Array\"), identifier(\"prototype\")), identifier(\"slice\")), identifier(\"call\")), [node]);\n    }\n\n    let helperName;\n    const args = [node];\n\n    if (i === true) {\n      helperName = \"toConsumableArray\";\n    } else if (i) {\n      args.push(numericLiteral(i));\n      helperName = \"slicedToArray\";\n    } else {\n      helperName = \"toArray\";\n    }\n\n    if (arrayLikeIsIterable) {\n      args.unshift(this.hub.addHelper(helperName));\n      helperName = \"maybeArrayLike\";\n    }\n\n    return callExpression(this.hub.addHelper(helperName), args);\n  }\n\n  hasLabel(name) {\n    return !!this.getLabel(name);\n  }\n\n  getLabel(name) {\n    return this.labels.get(name);\n  }\n\n  registerLabel(path) {\n    this.labels.set(path.node.label.name, path);\n  }\n\n  registerDeclaration(path) {\n    if (path.isLabeledStatement()) {\n      this.registerLabel(path);\n    } else if (path.isFunctionDeclaration()) {\n      this.registerBinding(\"hoisted\", path.get(\"id\"), path);\n    } else if (path.isVariableDeclaration()) {\n      const declarations = path.get(\"declarations\");\n\n      for (const declar of declarations) {\n        this.registerBinding(path.node.kind, declar);\n      }\n    } else if (path.isClassDeclaration()) {\n      this.registerBinding(\"let\", path);\n    } else if (path.isImportDeclaration()) {\n      const specifiers = path.get(\"specifiers\");\n\n      for (const specifier of specifiers) {\n        this.registerBinding(\"module\", specifier);\n      }\n    } else if (path.isExportDeclaration()) {\n      const declar = path.get(\"declaration\");\n\n      if (declar.isClassDeclaration() || declar.isFunctionDeclaration() || declar.isVariableDeclaration()) {\n        this.registerDeclaration(declar);\n      }\n    } else {\n      this.registerBinding(\"unknown\", path);\n    }\n  }\n\n  buildUndefinedNode() {\n    return unaryExpression(\"void\", numericLiteral(0), true);\n  }\n\n  registerConstantViolation(path) {\n    const ids = path.getBindingIdentifiers();\n\n    for (const name of Object.keys(ids)) {\n      const binding = this.getBinding(name);\n      if (binding) binding.reassign(path);\n    }\n  }\n\n  registerBinding(kind, path, bindingPath = path) {\n    if (!kind) throw new ReferenceError(\"no `kind`\");\n\n    if (path.isVariableDeclaration()) {\n      const declarators = path.get(\"declarations\");\n\n      for (const declar of declarators) {\n        this.registerBinding(kind, declar);\n      }\n\n      return;\n    }\n\n    const parent = this.getProgramParent();\n    const ids = path.getOuterBindingIdentifiers(true);\n\n    for (const name of Object.keys(ids)) {\n      parent.references[name] = true;\n\n      for (const id of ids[name]) {\n        const local = this.getOwnBinding(name);\n\n        if (local) {\n          if (local.identifier === id) continue;\n          this.checkBlockScopedCollisions(local, kind, name, id);\n        }\n\n        if (local) {\n          this.registerConstantViolation(bindingPath);\n        } else {\n          this.bindings[name] = new _binding.default({\n            identifier: id,\n            scope: this,\n            path: bindingPath,\n            kind: kind\n          });\n        }\n      }\n    }\n  }\n\n  addGlobal(node) {\n    this.globals[node.name] = node;\n  }\n\n  hasUid(name) {\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasGlobal(name) {\n    let scope = this;\n\n    do {\n      if (scope.globals[name]) return true;\n    } while (scope = scope.parent);\n\n    return false;\n  }\n\n  hasReference(name) {\n    return !!this.getProgramParent().references[name];\n  }\n\n  isPure(node, constantsOnly) {\n    if (isIdentifier(node)) {\n      const binding = this.getBinding(node.name);\n      if (!binding) return false;\n      if (constantsOnly) return binding.constant;\n      return true;\n    } else if (isClass(node)) {\n      if (node.superClass && !this.isPure(node.superClass, constantsOnly)) {\n        return false;\n      }\n\n      return this.isPure(node.body, constantsOnly);\n    } else if (isClassBody(node)) {\n      for (const method of node.body) {\n        if (!this.isPure(method, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isBinary(node)) {\n      return this.isPure(node.left, constantsOnly) && this.isPure(node.right, constantsOnly);\n    } else if (isArrayExpression(node)) {\n      for (const elem of node.elements) {\n        if (!this.isPure(elem, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isObjectExpression(node)) {\n      for (const prop of node.properties) {\n        if (!this.isPure(prop, constantsOnly)) return false;\n      }\n\n      return true;\n    } else if (isMethod(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      if (node.kind === \"get\" || node.kind === \"set\") return false;\n      return true;\n    } else if (isProperty(node)) {\n      if (node.computed && !this.isPure(node.key, constantsOnly)) return false;\n      return this.isPure(node.value, constantsOnly);\n    } else if (isUnaryExpression(node)) {\n      return this.isPure(node.argument, constantsOnly);\n    } else if (isTaggedTemplateExpression(node)) {\n      return matchesPattern(node.tag, \"String.raw\") && !this.hasBinding(\"String\", true) && this.isPure(node.quasi, constantsOnly);\n    } else if (isTemplateLiteral(node)) {\n      for (const expression of node.expressions) {\n        if (!this.isPure(expression, constantsOnly)) return false;\n      }\n\n      return true;\n    } else {\n      return isPureish(node);\n    }\n  }\n\n  setData(key, val) {\n    return this.data[key] = val;\n  }\n\n  getData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) return data;\n    } while (scope = scope.parent);\n  }\n\n  removeData(key) {\n    let scope = this;\n\n    do {\n      const data = scope.data[key];\n      if (data != null) scope.data[key] = null;\n    } while (scope = scope.parent);\n  }\n\n  init() {\n    if (!this.inited) {\n      this.inited = true;\n      this.crawl();\n    }\n  }\n\n  crawl() {\n    const path = this.path;\n    this.references = Object.create(null);\n    this.bindings = Object.create(null);\n    this.globals = Object.create(null);\n    this.uids = Object.create(null);\n    this.data = Object.create(null);\n    const programParent = this.getProgramParent();\n    if (programParent.crawling) return;\n    const state = {\n      references: [],\n      constantViolations: [],\n      assignments: []\n    };\n    this.crawling = true;\n\n    if (path.type !== \"Program\" && collectorVisitor._exploded) {\n      for (const visit of collectorVisitor.enter) {\n        visit(path, state);\n      }\n\n      const typeVisitors = collectorVisitor[path.type];\n\n      if (typeVisitors) {\n        for (const visit of typeVisitors.enter) {\n          visit(path, state);\n        }\n      }\n    }\n\n    path.traverse(collectorVisitor, state);\n    this.crawling = false;\n\n    for (const path of state.assignments) {\n      const ids = path.getBindingIdentifiers();\n\n      for (const name of Object.keys(ids)) {\n        if (path.scope.getBinding(name)) continue;\n        programParent.addGlobal(ids[name]);\n      }\n\n      path.scope.registerConstantViolation(path);\n    }\n\n    for (const ref of state.references) {\n      const binding = ref.scope.getBinding(ref.node.name);\n\n      if (binding) {\n        binding.reference(ref);\n      } else {\n        programParent.addGlobal(ref.node);\n      }\n    }\n\n    for (const path of state.constantViolations) {\n      path.scope.registerConstantViolation(path);\n    }\n  }\n\n  push(opts) {\n    let path = this.path;\n\n    if (!path.isBlockStatement() && !path.isProgram()) {\n      path = this.getBlockParent().path;\n    }\n\n    if (path.isSwitchStatement()) {\n      path = (this.getFunctionParent() || this.getProgramParent()).path;\n    }\n\n    if (path.isLoop() || path.isCatchClause() || path.isFunction()) {\n      path.ensureBlock();\n      path = path.get(\"body\");\n    }\n\n    const unique = opts.unique;\n    const kind = opts.kind || \"var\";\n    const blockHoist = opts._blockHoist == null ? 2 : opts._blockHoist;\n    const dataKey = `declaration:${kind}:${blockHoist}`;\n    let declarPath = !unique && path.getData(dataKey);\n\n    if (!declarPath) {\n      const declar = variableDeclaration(kind, []);\n      declar._blockHoist = blockHoist;\n      [declarPath] = path.unshiftContainer(\"body\", [declar]);\n      if (!unique) path.setData(dataKey, declarPath);\n    }\n\n    const declarator = variableDeclarator(opts.id, opts.init);\n    declarPath.node.declarations.push(declarator);\n    this.registerBinding(kind, declarPath.get(\"declarations\").pop());\n  }\n\n  getProgramParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isProgram()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"Couldn't find a Program\");\n  }\n\n  getFunctionParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isFunctionParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    return null;\n  }\n\n  getBlockParent() {\n    let scope = this;\n\n    do {\n      if (scope.path.isBlockParent()) {\n        return scope;\n      }\n    } while (scope = scope.parent);\n\n    throw new Error(\"We couldn't find a BlockStatement, For, Switch, Function, Loop or Program...\");\n  }\n\n  getAllBindings() {\n    const ids = Object.create(null);\n    let scope = this;\n\n    do {\n      for (const key of Object.keys(scope.bindings)) {\n        if (key in ids === false) {\n          ids[key] = scope.bindings[key];\n        }\n      }\n\n      scope = scope.parent;\n    } while (scope);\n\n    return ids;\n  }\n\n  getAllBindingsOfKind(...kinds) {\n    const ids = Object.create(null);\n\n    for (const kind of kinds) {\n      let scope = this;\n\n      do {\n        for (const name of Object.keys(scope.bindings)) {\n          const binding = scope.bindings[name];\n          if (binding.kind === kind) ids[name] = binding;\n        }\n\n        scope = scope.parent;\n      } while (scope);\n    }\n\n    return ids;\n  }\n\n  bindingIdentifierEquals(name, node) {\n    return this.getBindingIdentifier(name) === node;\n  }\n\n  getBinding(name) {\n    let scope = this;\n    let previousPath;\n\n    do {\n      const binding = scope.getOwnBinding(name);\n\n      if (binding) {\n        var _previousPath;\n\n        if ((_previousPath = previousPath) != null && _previousPath.isPattern() && binding.kind !== \"param\") {} else {\n          return binding;\n        }\n      }\n\n      previousPath = scope.path;\n    } while (scope = scope.parent);\n  }\n\n  getOwnBinding(name) {\n    return this.bindings[name];\n  }\n\n  getBindingIdentifier(name) {\n    var _this$getBinding;\n\n    return (_this$getBinding = this.getBinding(name)) == null ? void 0 : _this$getBinding.identifier;\n  }\n\n  getOwnBindingIdentifier(name) {\n    const binding = this.bindings[name];\n    return binding == null ? void 0 : binding.identifier;\n  }\n\n  hasOwnBinding(name) {\n    return !!this.getOwnBinding(name);\n  }\n\n  hasBinding(name, noGlobals) {\n    if (!name) return false;\n    if (this.hasOwnBinding(name)) return true;\n    if (this.parentHasBinding(name, noGlobals)) return true;\n    if (this.hasUid(name)) return true;\n    if (!noGlobals && Scope.globals.includes(name)) return true;\n    if (!noGlobals && Scope.contextVariables.includes(name)) return true;\n    return false;\n  }\n\n  parentHasBinding(name, noGlobals) {\n    var _this$parent;\n\n    return (_this$parent = this.parent) == null ? void 0 : _this$parent.hasBinding(name, noGlobals);\n  }\n\n  moveBindingTo(name, scope) {\n    const info = this.getBinding(name);\n\n    if (info) {\n      info.scope.removeOwnBinding(name);\n      info.scope = scope;\n      scope.bindings[name] = info;\n    }\n  }\n\n  removeOwnBinding(name) {\n    delete this.bindings[name];\n  }\n\n  removeBinding(name) {\n    var _this$getBinding2;\n\n    (_this$getBinding2 = this.getBinding(name)) == null ? void 0 : _this$getBinding2.scope.removeOwnBinding(name);\n    let scope = this;\n\n    do {\n      if (scope.uids[name]) {\n        scope.uids[name] = false;\n      }\n    } while (scope = scope.parent);\n  }\n\n}\n\nexports.default = Scope;\nScope.globals = Object.keys(_globals.builtin);\nScope.contextVariables = [\"arguments\", \"undefined\", \"Infinity\", \"NaN\"];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Binding {\n  constructor({\n    identifier,\n    scope,\n    path,\n    kind\n  }) {\n    this.identifier = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.kind = void 0;\n    this.constantViolations = [];\n    this.constant = true;\n    this.referencePaths = [];\n    this.referenced = false;\n    this.references = 0;\n    this.identifier = identifier;\n    this.scope = scope;\n    this.path = path;\n    this.kind = kind;\n    this.clearValue();\n  }\n\n  deoptValue() {\n    this.clearValue();\n    this.hasDeoptedValue = true;\n  }\n\n  setValue(value) {\n    if (this.hasDeoptedValue) return;\n    this.hasValue = true;\n    this.value = value;\n  }\n\n  clearValue() {\n    this.hasDeoptedValue = false;\n    this.hasValue = false;\n    this.value = null;\n  }\n\n  reassign(path) {\n    this.constant = false;\n\n    if (this.constantViolations.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.constantViolations.push(path);\n  }\n\n  reference(path) {\n    if (this.referencePaths.indexOf(path) !== -1) {\n      return;\n    }\n\n    this.referenced = true;\n    this.references++;\n    this.referencePaths.push(path);\n  }\n\n  dereference() {\n    this.references--;\n    this.referenced = !!this.references;\n  }\n\n}\n\nexports.default = Binding;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = require(\"./path\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nclass TraversalContext {\n  constructor(scope, opts, state, parentPath) {\n    this.queue = null;\n    this.priorityQueue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  shouldVisit(node) {\n    const opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n    if (opts[node.type]) return true;\n    const keys = VISITOR_KEYS[node.type];\n    if (!(keys != null && keys.length)) return false;\n\n    for (const key of keys) {\n      if (node[key]) return true;\n    }\n\n    return false;\n  }\n\n  create(node, obj, key, listKey) {\n    return _path.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container: obj,\n      key: key,\n      listKey\n    });\n  }\n\n  maybeQueue(path, notPriority) {\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  }\n\n  visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n    const queue = [];\n\n    for (let key = 0; key < container.length; key++) {\n      const node = container[key];\n\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  }\n\n  visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  }\n\n  visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n    const visited = new WeakSet();\n    let stop = false;\n\n    for (const path of queue) {\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n      const {\n        node\n      } = path;\n      if (visited.has(node)) continue;\n      if (node) visited.add(node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (const path of queue) {\n      path.popContext();\n    }\n\n    this.queue = null;\n    return stop;\n  }\n\n  visit(node, key) {\n    const nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  }\n\n}\n\nexports.default = TraversalContext;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _binding = require(\"../binding\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  VISITOR_KEYS,\n  assignmentExpression,\n  identifier,\n  toExpression,\n  variableDeclaration,\n  variableDeclarator\n} = _t;\nconst renameVisitor = {\n  ReferencedIdentifier({\n    node\n  }, state) {\n    if (node.name === state.oldName) {\n      node.name = state.newName;\n    }\n  },\n\n  Scope(path, state) {\n    if (!path.scope.bindingIdentifierEquals(state.oldName, state.binding.identifier)) {\n      skipAllButComputedMethodKey(path);\n    }\n  },\n\n  \"AssignmentExpression|Declaration|VariableDeclarator\"(path, state) {\n    if (path.isVariableDeclaration()) return;\n    const ids = path.getOuterBindingIdentifiers();\n\n    for (const name in ids) {\n      if (name === state.oldName) ids[name].name = state.newName;\n    }\n  }\n\n};\n\nclass Renamer {\n  constructor(binding, oldName, newName) {\n    this.newName = newName;\n    this.oldName = oldName;\n    this.binding = binding;\n  }\n\n  maybeConvertFromExportDeclaration(parentDeclar) {\n    const maybeExportDeclar = parentDeclar.parentPath;\n\n    if (!maybeExportDeclar.isExportDeclaration()) {\n      return;\n    }\n\n    if (maybeExportDeclar.isExportDefaultDeclaration() && !maybeExportDeclar.get(\"declaration\").node.id) {\n      return;\n    }\n\n    (0, _helperSplitExportDeclaration.default)(maybeExportDeclar);\n  }\n\n  maybeConvertFromClassFunctionDeclaration(path) {\n    return;\n    if (!path.isFunctionDeclaration() && !path.isClassDeclaration()) return;\n    if (this.binding.kind !== \"hoisted\") return;\n    path.node.id = identifier(this.oldName);\n    path.node._blockHoist = 3;\n    path.replaceWith(variableDeclaration(\"let\", [variableDeclarator(identifier(this.newName), toExpression(path.node))]));\n  }\n\n  maybeConvertFromClassFunctionExpression(path) {\n    return;\n    if (!path.isFunctionExpression() && !path.isClassExpression()) return;\n    if (this.binding.kind !== \"local\") return;\n    path.node.id = identifier(this.oldName);\n    this.binding.scope.parent.push({\n      id: identifier(this.newName)\n    });\n    path.replaceWith(assignmentExpression(\"=\", identifier(this.newName), path.node));\n  }\n\n  rename(block) {\n    const {\n      binding,\n      oldName,\n      newName\n    } = this;\n    const {\n      scope,\n      path\n    } = binding;\n    const parentDeclar = path.find(path => path.isDeclaration() || path.isFunctionExpression() || path.isClassExpression());\n\n    if (parentDeclar) {\n      const bindingIds = parentDeclar.getOuterBindingIdentifiers();\n\n      if (bindingIds[oldName] === binding.identifier) {\n        this.maybeConvertFromExportDeclaration(parentDeclar);\n      }\n    }\n\n    const blockToTraverse = block || scope.block;\n\n    if ((blockToTraverse == null ? void 0 : blockToTraverse.type) === \"SwitchStatement\") {\n      blockToTraverse.cases.forEach(c => {\n        scope.traverse(c, renameVisitor, this);\n      });\n    } else {\n      scope.traverse(blockToTraverse, renameVisitor, this);\n    }\n\n    if (!block) {\n      scope.removeOwnBinding(oldName);\n      scope.bindings[newName] = binding;\n      this.binding.identifier.name = newName;\n    }\n\n    if (parentDeclar) {\n      this.maybeConvertFromClassFunctionDeclaration(parentDeclar);\n      this.maybeConvertFromClassFunctionExpression(parentDeclar);\n    }\n  }\n\n}\n\nexports.default = Renamer;\n\nfunction skipAllButComputedMethodKey(path) {\n  if (!path.isMethod() || !path.node.computed) {\n    path.skip();\n    return;\n  }\n\n  const keys = VISITOR_KEYS[path.type];\n\n  for (const key of keys) {\n    if (key !== \"key\") path.skipKey(key);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findParent = findParent;\nexports.find = find;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getAncestry = getAncestry;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\nexports.inType = inType;\n\nvar _t = require(\"@babel/types\");\n\nvar _index = require(\"./index\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType(...candidateTypes) {\n  let path = this;\n\n  while (path) {\n    for (const type of candidateTypes) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTypeAnnotation = getTypeAnnotation;\nexports._getTypeAnnotation = _getTypeAnnotation;\nexports.isBaseType = isBaseType;\nexports.couldBeBaseType = couldBeBaseType;\nexports.baseTypeStrictlyMatches = baseTypeStrictlyMatches;\nexports.isGenericType = isGenericType;\n\nvar inferers = require(\"./inferers\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  anyTypeAnnotation,\n  isAnyTypeAnnotation,\n  isBooleanTypeAnnotation,\n  isEmptyTypeAnnotation,\n  isFlowBaseAnnotation,\n  isGenericTypeAnnotation,\n  isIdentifier,\n  isMixedTypeAnnotation,\n  isNumberTypeAnnotation,\n  isStringTypeAnnotation,\n  isTypeAnnotation,\n  isUnionTypeAnnotation,\n  isVoidTypeAnnotation,\n  stringTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction getTypeAnnotation() {\n  if (this.typeAnnotation) return this.typeAnnotation;\n  let type = this._getTypeAnnotation() || anyTypeAnnotation();\n  if (isTypeAnnotation(type)) type = type.typeAnnotation;\n  return this.typeAnnotation = type;\n}\n\nconst typeAnnotationInferringNodes = new WeakSet();\n\nfunction _getTypeAnnotation() {\n  const node = this.node;\n\n  if (!node) {\n    if (this.key === \"init\" && this.parentPath.isVariableDeclarator()) {\n      const declar = this.parentPath.parentPath;\n      const declarParent = declar.parentPath;\n\n      if (declar.key === \"left\" && declarParent.isForInStatement()) {\n        return stringTypeAnnotation();\n      }\n\n      if (declar.key === \"left\" && declarParent.isForOfStatement()) {\n        return anyTypeAnnotation();\n      }\n\n      return voidTypeAnnotation();\n    } else {\n      return;\n    }\n  }\n\n  if (node.typeAnnotation) {\n    return node.typeAnnotation;\n  }\n\n  if (typeAnnotationInferringNodes.has(node)) {\n    return;\n  }\n\n  typeAnnotationInferringNodes.add(node);\n\n  try {\n    var _inferer;\n\n    let inferer = inferers[node.type];\n\n    if (inferer) {\n      return inferer.call(this, node);\n    }\n\n    inferer = inferers[this.parentPath.type];\n\n    if ((_inferer = inferer) != null && _inferer.validParent) {\n      return this.parentPath.getTypeAnnotation();\n    }\n  } finally {\n    typeAnnotationInferringNodes.delete(node);\n  }\n}\n\nfunction isBaseType(baseName, soft) {\n  return _isBaseType(baseName, this.getTypeAnnotation(), soft);\n}\n\nfunction _isBaseType(baseName, type, soft) {\n  if (baseName === \"string\") {\n    return isStringTypeAnnotation(type);\n  } else if (baseName === \"number\") {\n    return isNumberTypeAnnotation(type);\n  } else if (baseName === \"boolean\") {\n    return isBooleanTypeAnnotation(type);\n  } else if (baseName === \"any\") {\n    return isAnyTypeAnnotation(type);\n  } else if (baseName === \"mixed\") {\n    return isMixedTypeAnnotation(type);\n  } else if (baseName === \"empty\") {\n    return isEmptyTypeAnnotation(type);\n  } else if (baseName === \"void\") {\n    return isVoidTypeAnnotation(type);\n  } else {\n    if (soft) {\n      return false;\n    } else {\n      throw new Error(`Unknown base type ${baseName}`);\n    }\n  }\n}\n\nfunction couldBeBaseType(name) {\n  const type = this.getTypeAnnotation();\n  if (isAnyTypeAnnotation(type)) return true;\n\n  if (isUnionTypeAnnotation(type)) {\n    for (const type2 of type.types) {\n      if (isAnyTypeAnnotation(type2) || _isBaseType(name, type2, true)) {\n        return true;\n      }\n    }\n\n    return false;\n  } else {\n    return _isBaseType(name, type, true);\n  }\n}\n\nfunction baseTypeStrictlyMatches(rightArg) {\n  const left = this.getTypeAnnotation();\n  const right = rightArg.getTypeAnnotation();\n\n  if (!isAnyTypeAnnotation(left) && isFlowBaseAnnotation(left)) {\n    return right.type === left.type;\n  }\n\n  return false;\n}\n\nfunction isGenericType(genericName) {\n  const type = this.getTypeAnnotation();\n  return isGenericTypeAnnotation(type) && isIdentifier(type.id, {\n    name: genericName\n  });\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VariableDeclarator = VariableDeclarator;\nexports.TypeCastExpression = TypeCastExpression;\nexports.NewExpression = NewExpression;\nexports.TemplateLiteral = TemplateLiteral;\nexports.UnaryExpression = UnaryExpression;\nexports.BinaryExpression = BinaryExpression;\nexports.LogicalExpression = LogicalExpression;\nexports.ConditionalExpression = ConditionalExpression;\nexports.SequenceExpression = SequenceExpression;\nexports.ParenthesizedExpression = ParenthesizedExpression;\nexports.AssignmentExpression = AssignmentExpression;\nexports.UpdateExpression = UpdateExpression;\nexports.StringLiteral = StringLiteral;\nexports.NumericLiteral = NumericLiteral;\nexports.BooleanLiteral = BooleanLiteral;\nexports.NullLiteral = NullLiteral;\nexports.RegExpLiteral = RegExpLiteral;\nexports.ObjectExpression = ObjectExpression;\nexports.ArrayExpression = ArrayExpression;\nexports.RestElement = RestElement;\nexports.ClassDeclaration = exports.ClassExpression = exports.FunctionDeclaration = exports.ArrowFunctionExpression = exports.FunctionExpression = Func;\nexports.CallExpression = CallExpression;\nexports.TaggedTemplateExpression = TaggedTemplateExpression;\nObject.defineProperty(exports, \"Identifier\", {\n  enumerable: true,\n  get: function () {\n    return _infererReference.default;\n  }\n});\n\nvar _t = require(\"@babel/types\");\n\nvar _infererReference = require(\"./inferer-reference\");\n\nconst {\n  BOOLEAN_BINARY_OPERATORS,\n  BOOLEAN_UNARY_OPERATORS,\n  NUMBER_BINARY_OPERATORS,\n  NUMBER_UNARY_OPERATORS,\n  STRING_UNARY_OPERATORS,\n  anyTypeAnnotation,\n  arrayTypeAnnotation,\n  booleanTypeAnnotation,\n  buildMatchMemberExpression,\n  createFlowUnionType,\n  createTSUnionType,\n  createUnionTypeAnnotation,\n  genericTypeAnnotation,\n  identifier,\n  isTSTypeAnnotation,\n  nullLiteralTypeAnnotation,\n  numberTypeAnnotation,\n  stringTypeAnnotation,\n  tupleTypeAnnotation,\n  unionTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction VariableDeclarator() {\n  var _type;\n\n  const id = this.get(\"id\");\n  if (!id.isIdentifier()) return;\n  const init = this.get(\"init\");\n  let type = init.getTypeAnnotation();\n\n  if (((_type = type) == null ? void 0 : _type.type) === \"AnyTypeAnnotation\") {\n    if (init.isCallExpression() && init.get(\"callee\").isIdentifier({\n      name: \"Array\"\n    }) && !init.scope.hasBinding(\"Array\", true)) {\n      type = ArrayExpression();\n    }\n  }\n\n  return type;\n}\n\nfunction TypeCastExpression(node) {\n  return node.typeAnnotation;\n}\n\nTypeCastExpression.validParent = true;\n\nfunction NewExpression(node) {\n  if (this.get(\"callee\").isIdentifier()) {\n    return genericTypeAnnotation(node.callee);\n  }\n}\n\nfunction TemplateLiteral() {\n  return stringTypeAnnotation();\n}\n\nfunction UnaryExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"void\") {\n    return voidTypeAnnotation();\n  } else if (NUMBER_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return numberTypeAnnotation();\n  } else if (STRING_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return stringTypeAnnotation();\n  } else if (BOOLEAN_UNARY_OPERATORS.indexOf(operator) >= 0) {\n    return booleanTypeAnnotation();\n  }\n}\n\nfunction BinaryExpression(node) {\n  const operator = node.operator;\n\n  if (NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return numberTypeAnnotation();\n  } else if (BOOLEAN_BINARY_OPERATORS.indexOf(operator) >= 0) {\n    return booleanTypeAnnotation();\n  } else if (operator === \"+\") {\n    const right = this.get(\"right\");\n    const left = this.get(\"left\");\n\n    if (left.isBaseType(\"number\") && right.isBaseType(\"number\")) {\n      return numberTypeAnnotation();\n    } else if (left.isBaseType(\"string\") || right.isBaseType(\"string\")) {\n      return stringTypeAnnotation();\n    }\n\n    return unionTypeAnnotation([stringTypeAnnotation(), numberTypeAnnotation()]);\n  }\n}\n\nfunction LogicalExpression() {\n  const argumentTypes = [this.get(\"left\").getTypeAnnotation(), this.get(\"right\").getTypeAnnotation()];\n\n  if (isTSTypeAnnotation(argumentTypes[0]) && createTSUnionType) {\n    return createTSUnionType(argumentTypes);\n  }\n\n  if (createFlowUnionType) {\n    return createFlowUnionType(argumentTypes);\n  }\n\n  return createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction ConditionalExpression() {\n  const argumentTypes = [this.get(\"consequent\").getTypeAnnotation(), this.get(\"alternate\").getTypeAnnotation()];\n\n  if (isTSTypeAnnotation(argumentTypes[0]) && createTSUnionType) {\n    return createTSUnionType(argumentTypes);\n  }\n\n  if (createFlowUnionType) {\n    return createFlowUnionType(argumentTypes);\n  }\n\n  return createUnionTypeAnnotation(argumentTypes);\n}\n\nfunction SequenceExpression() {\n  return this.get(\"expressions\").pop().getTypeAnnotation();\n}\n\nfunction ParenthesizedExpression() {\n  return this.get(\"expression\").getTypeAnnotation();\n}\n\nfunction AssignmentExpression() {\n  return this.get(\"right\").getTypeAnnotation();\n}\n\nfunction UpdateExpression(node) {\n  const operator = node.operator;\n\n  if (operator === \"++\" || operator === \"--\") {\n    return numberTypeAnnotation();\n  }\n}\n\nfunction StringLiteral() {\n  return stringTypeAnnotation();\n}\n\nfunction NumericLiteral() {\n  return numberTypeAnnotation();\n}\n\nfunction BooleanLiteral() {\n  return booleanTypeAnnotation();\n}\n\nfunction NullLiteral() {\n  return nullLiteralTypeAnnotation();\n}\n\nfunction RegExpLiteral() {\n  return genericTypeAnnotation(identifier(\"RegExp\"));\n}\n\nfunction ObjectExpression() {\n  return genericTypeAnnotation(identifier(\"Object\"));\n}\n\nfunction ArrayExpression() {\n  return genericTypeAnnotation(identifier(\"Array\"));\n}\n\nfunction RestElement() {\n  return ArrayExpression();\n}\n\nRestElement.validParent = true;\n\nfunction Func() {\n  return genericTypeAnnotation(identifier(\"Function\"));\n}\n\nconst isArrayFrom = buildMatchMemberExpression(\"Array.from\");\nconst isObjectKeys = buildMatchMemberExpression(\"Object.keys\");\nconst isObjectValues = buildMatchMemberExpression(\"Object.values\");\nconst isObjectEntries = buildMatchMemberExpression(\"Object.entries\");\n\nfunction CallExpression() {\n  const {\n    callee\n  } = this.node;\n\n  if (isObjectKeys(callee)) {\n    return arrayTypeAnnotation(stringTypeAnnotation());\n  } else if (isArrayFrom(callee) || isObjectValues(callee)) {\n    return arrayTypeAnnotation(anyTypeAnnotation());\n  } else if (isObjectEntries(callee)) {\n    return arrayTypeAnnotation(tupleTypeAnnotation([stringTypeAnnotation(), anyTypeAnnotation()]));\n  }\n\n  return resolveCall(this.get(\"callee\"));\n}\n\nfunction TaggedTemplateExpression() {\n  return resolveCall(this.get(\"tag\"));\n}\n\nfunction resolveCall(callee) {\n  callee = callee.resolve();\n\n  if (callee.isFunction()) {\n    if (callee.is(\"async\")) {\n      if (callee.is(\"generator\")) {\n        return genericTypeAnnotation(identifier(\"AsyncIterator\"));\n      } else {\n        return genericTypeAnnotation(identifier(\"Promise\"));\n      }\n    } else {\n      if (callee.node.returnType) {\n        return callee.node.returnType;\n      } else {}\n    }\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  BOOLEAN_NUMBER_BINARY_OPERATORS,\n  createFlowUnionType,\n  createTSUnionType,\n  createTypeAnnotationBasedOnTypeof,\n  createUnionTypeAnnotation,\n  isTSTypeAnnotation,\n  numberTypeAnnotation,\n  voidTypeAnnotation\n} = _t;\n\nfunction _default(node) {\n  if (!this.isReferenced()) return;\n  const binding = this.scope.getBinding(node.name);\n\n  if (binding) {\n    if (binding.identifier.typeAnnotation) {\n      return binding.identifier.typeAnnotation;\n    } else {\n      return getTypeAnnotationBindingConstantViolations(binding, this, node.name);\n    }\n  }\n\n  if (node.name === \"undefined\") {\n    return voidTypeAnnotation();\n  } else if (node.name === \"NaN\" || node.name === \"Infinity\") {\n    return numberTypeAnnotation();\n  } else if (node.name === \"arguments\") {}\n}\n\nfunction getTypeAnnotationBindingConstantViolations(binding, path, name) {\n  const types = [];\n  const functionConstantViolations = [];\n  let constantViolations = getConstantViolationsBefore(binding, path, functionConstantViolations);\n  const testType = getConditionalAnnotation(binding, path, name);\n\n  if (testType) {\n    const testConstantViolations = getConstantViolationsBefore(binding, testType.ifStatement);\n    constantViolations = constantViolations.filter(path => testConstantViolations.indexOf(path) < 0);\n    types.push(testType.typeAnnotation);\n  }\n\n  if (constantViolations.length) {\n    constantViolations.push(...functionConstantViolations);\n\n    for (const violation of constantViolations) {\n      types.push(violation.getTypeAnnotation());\n    }\n  }\n\n  if (!types.length) {\n    return;\n  }\n\n  if (isTSTypeAnnotation(types[0]) && createTSUnionType) {\n    return createTSUnionType(types);\n  }\n\n  if (createFlowUnionType) {\n    return createFlowUnionType(types);\n  }\n\n  return createUnionTypeAnnotation(types);\n}\n\nfunction getConstantViolationsBefore(binding, path, functions) {\n  const violations = binding.constantViolations.slice();\n  violations.unshift(binding.path);\n  return violations.filter(violation => {\n    violation = violation.resolve();\n\n    const status = violation._guessExecutionStatusRelativeTo(path);\n\n    if (functions && status === \"unknown\") functions.push(violation);\n    return status === \"before\";\n  });\n}\n\nfunction inferAnnotationFromBinaryExpression(name, path) {\n  const operator = path.node.operator;\n  const right = path.get(\"right\").resolve();\n  const left = path.get(\"left\").resolve();\n  let target;\n\n  if (left.isIdentifier({\n    name\n  })) {\n    target = right;\n  } else if (right.isIdentifier({\n    name\n  })) {\n    target = left;\n  }\n\n  if (target) {\n    if (operator === \"===\") {\n      return target.getTypeAnnotation();\n    }\n\n    if (BOOLEAN_NUMBER_BINARY_OPERATORS.indexOf(operator) >= 0) {\n      return numberTypeAnnotation();\n    }\n\n    return;\n  }\n\n  if (operator !== \"===\" && operator !== \"==\") return;\n  let typeofPath;\n  let typePath;\n\n  if (left.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = left;\n    typePath = right;\n  } else if (right.isUnaryExpression({\n    operator: \"typeof\"\n  })) {\n    typeofPath = right;\n    typePath = left;\n  }\n\n  if (!typeofPath) return;\n  if (!typeofPath.get(\"argument\").isIdentifier({\n    name\n  })) return;\n  typePath = typePath.resolve();\n  if (!typePath.isLiteral()) return;\n  const typeValue = typePath.node.value;\n  if (typeof typeValue !== \"string\") return;\n  return createTypeAnnotationBasedOnTypeof(typeValue);\n}\n\nfunction getParentConditionalPath(binding, path, name) {\n  let parentPath;\n\n  while (parentPath = path.parentPath) {\n    if (parentPath.isIfStatement() || parentPath.isConditionalExpression()) {\n      if (path.key === \"test\") {\n        return;\n      }\n\n      return parentPath;\n    }\n\n    if (parentPath.isFunction()) {\n      if (parentPath.parentPath.scope.getBinding(name) !== binding) return;\n    }\n\n    path = parentPath;\n  }\n}\n\nfunction getConditionalAnnotation(binding, path, name) {\n  const ifStatement = getParentConditionalPath(binding, path, name);\n  if (!ifStatement) return;\n  const test = ifStatement.get(\"test\");\n  const paths = [test];\n  const types = [];\n\n  for (let i = 0; i < paths.length; i++) {\n    const path = paths[i];\n\n    if (path.isLogicalExpression()) {\n      if (path.node.operator === \"&&\") {\n        paths.push(path.get(\"left\"));\n        paths.push(path.get(\"right\"));\n      }\n    } else if (path.isBinaryExpression()) {\n      const type = inferAnnotationFromBinaryExpression(name, path);\n      if (type) types.push(type);\n    }\n  }\n\n  if (types.length) {\n    if (isTSTypeAnnotation(types[0]) && createTSUnionType) {\n      return {\n        typeAnnotation: createTSUnionType(types),\n        ifStatement\n      };\n    }\n\n    if (createFlowUnionType) {\n      return {\n        typeAnnotation: createFlowUnionType(types),\n        ifStatement\n      };\n    }\n\n    return {\n      typeAnnotation: createUnionTypeAnnotation(types),\n      ifStatement\n    };\n  }\n\n  return getConditionalAnnotation(ifStatement, name);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.replaceWithMultiple = replaceWithMultiple;\nexports.replaceWithSourceString = replaceWithSourceString;\nexports.replaceWith = replaceWith;\nexports._replaceWith = _replaceWith;\nexports.replaceExpressionWithStatements = replaceExpressionWithStatements;\nexports.replaceInline = replaceInline;\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nvar _cache = require(\"../cache\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _t = require(\"@babel/types\");\n\nvar _helperHoistVariables = require(\"@babel/helper-hoist-variables\");\n\nconst {\n  FUNCTION_TYPES,\n  arrowFunctionExpression,\n  assignmentExpression,\n  awaitExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  identifier,\n  inheritLeadingComments,\n  inheritTrailingComments,\n  inheritsComments,\n  isExpression,\n  isProgram,\n  isStatement,\n  removeComments,\n  returnStatement,\n  toSequenceExpression,\n  validate,\n  yieldExpression\n} = _t;\n\nfunction replaceWithMultiple(nodes) {\n  var _pathCache$get;\n\n  this.resync();\n  nodes = this._verifyNodeList(nodes);\n  inheritLeadingComments(nodes[0], this.node);\n  inheritTrailingComments(nodes[nodes.length - 1], this.node);\n  (_pathCache$get = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get.delete(this.node);\n  this.node = this.container[this.key] = null;\n  const paths = this.insertAfter(nodes);\n\n  if (this.node) {\n    this.requeue();\n  } else {\n    this.remove();\n  }\n\n  return paths;\n}\n\nfunction replaceWithSourceString(replacement) {\n  this.resync();\n\n  try {\n    replacement = `(${replacement})`;\n    replacement = (0, _parser.parse)(replacement);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \" - make sure this is an expression.\\n\" + (0, _codeFrame.codeFrameColumns)(replacement, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      });\n      err.code = \"BABEL_REPLACE_SOURCE_ERROR\";\n    }\n\n    throw err;\n  }\n\n  replacement = replacement.program.body[0].expression;\n\n  _index.default.removeProperties(replacement);\n\n  return this.replaceWith(replacement);\n}\n\nfunction replaceWith(replacement) {\n  this.resync();\n\n  if (this.removed) {\n    throw new Error(\"You can't replace this node, we've already removed it\");\n  }\n\n  if (replacement instanceof _index2.default) {\n    replacement = replacement.node;\n  }\n\n  if (!replacement) {\n    throw new Error(\"You passed `path.replaceWith()` a falsy node, use `path.remove()` instead\");\n  }\n\n  if (this.node === replacement) {\n    return [this];\n  }\n\n  if (this.isProgram() && !isProgram(replacement)) {\n    throw new Error(\"You can only replace a Program root node with another Program node\");\n  }\n\n  if (Array.isArray(replacement)) {\n    throw new Error(\"Don't use `path.replaceWith()` with an array of nodes, use `path.replaceWithMultiple()`\");\n  }\n\n  if (typeof replacement === \"string\") {\n    throw new Error(\"Don't use `path.replaceWith()` with a source string, use `path.replaceWithSourceString()`\");\n  }\n\n  let nodePath = \"\";\n\n  if (this.isNodeType(\"Statement\") && isExpression(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement) && !this.parentPath.isExportDefaultDeclaration()) {\n      replacement = expressionStatement(replacement);\n      nodePath = \"expression\";\n    }\n  }\n\n  if (this.isNodeType(\"Expression\") && isStatement(replacement)) {\n    if (!this.canHaveVariableDeclarationOrExpression() && !this.canSwapBetweenExpressionAndStatement(replacement)) {\n      return this.replaceExpressionWithStatements([replacement]);\n    }\n  }\n\n  const oldNode = this.node;\n\n  if (oldNode) {\n    inheritsComments(replacement, oldNode);\n    removeComments(oldNode);\n  }\n\n  this._replaceWith(replacement);\n\n  this.type = replacement.type;\n  this.setScope();\n  this.requeue();\n  return [nodePath ? this.get(nodePath) : this];\n}\n\nfunction _replaceWith(node) {\n  var _pathCache$get2;\n\n  if (!this.container) {\n    throw new ReferenceError(\"Container is falsy\");\n  }\n\n  if (this.inList) {\n    validate(this.parent, this.key, [node]);\n  } else {\n    validate(this.parent, this.key, node);\n  }\n\n  this.debug(`Replace with ${node == null ? void 0 : node.type}`);\n  (_pathCache$get2 = _cache.path.get(this.parent)) == null ? void 0 : _pathCache$get2.set(node, this).delete(this.node);\n  this.node = this.container[this.key] = node;\n}\n\nfunction replaceExpressionWithStatements(nodes) {\n  this.resync();\n  const nodesAsSequenceExpression = toSequenceExpression(nodes, this.scope);\n\n  if (nodesAsSequenceExpression) {\n    return this.replaceWith(nodesAsSequenceExpression)[0].get(\"expressions\");\n  }\n\n  const functionParent = this.getFunctionParent();\n  const isParentAsync = functionParent == null ? void 0 : functionParent.is(\"async\");\n  const isParentGenerator = functionParent == null ? void 0 : functionParent.is(\"generator\");\n  const container = arrowFunctionExpression([], blockStatement(nodes));\n  this.replaceWith(callExpression(container, []));\n  const callee = this.get(\"callee\");\n  (0, _helperHoistVariables.default)(callee.get(\"body\"), id => {\n    this.scope.push({\n      id\n    });\n  }, \"var\");\n  const completionRecords = this.get(\"callee\").getCompletionRecords();\n\n  for (const path of completionRecords) {\n    if (!path.isExpressionStatement()) continue;\n    const loop = path.findParent(path => path.isLoop());\n\n    if (loop) {\n      let uid = loop.getData(\"expressionReplacementReturnUid\");\n\n      if (!uid) {\n        uid = callee.scope.generateDeclaredUidIdentifier(\"ret\");\n        callee.get(\"body\").pushContainer(\"body\", returnStatement(cloneNode(uid)));\n        loop.setData(\"expressionReplacementReturnUid\", uid);\n      } else {\n        uid = identifier(uid.name);\n      }\n\n      path.get(\"expression\").replaceWith(assignmentExpression(\"=\", cloneNode(uid), path.node.expression));\n    } else {\n      path.replaceWith(returnStatement(path.node.expression));\n    }\n  }\n\n  callee.arrowFunctionToExpression();\n  const newCallee = callee;\n\n  const needToAwaitFunction = isParentAsync && _index.default.hasType(this.get(\"callee.body\").node, \"AwaitExpression\", FUNCTION_TYPES);\n\n  const needToYieldFunction = isParentGenerator && _index.default.hasType(this.get(\"callee.body\").node, \"YieldExpression\", FUNCTION_TYPES);\n\n  if (needToAwaitFunction) {\n    newCallee.set(\"async\", true);\n\n    if (!needToYieldFunction) {\n      this.replaceWith(awaitExpression(this.node));\n    }\n  }\n\n  if (needToYieldFunction) {\n    newCallee.set(\"generator\", true);\n    this.replaceWith(yieldExpression(this.node, true));\n  }\n\n  return newCallee.get(\"body.body\");\n}\n\nfunction replaceInline(nodes) {\n  this.resync();\n\n  if (Array.isArray(nodes)) {\n    if (Array.isArray(this.container)) {\n      nodes = this._verifyNodeList(nodes);\n\n      const paths = this._containerInsertAfter(nodes);\n\n      this.remove();\n      return paths;\n    } else {\n      return this.replaceWithMultiple(nodes);\n    }\n  } else {\n    return this.replaceWith(nodes);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.evaluateTruthy = evaluateTruthy;\nexports.evaluate = evaluate;\nconst VALID_CALLEES = [\"String\", \"Number\", \"Math\"];\nconst INVALID_METHODS = [\"random\"];\n\nfunction evaluateTruthy() {\n  const res = this.evaluate();\n  if (res.confident) return !!res.value;\n}\n\nfunction deopt(path, state) {\n  if (!state.confident) return;\n  state.deoptPath = path;\n  state.confident = false;\n}\n\nfunction evaluateCached(path, state) {\n  const {\n    node\n  } = path;\n  const {\n    seen\n  } = state;\n\n  if (seen.has(node)) {\n    const existing = seen.get(node);\n\n    if (existing.resolved) {\n      return existing.value;\n    } else {\n      deopt(path, state);\n      return;\n    }\n  } else {\n    const item = {\n      resolved: false\n    };\n    seen.set(node, item);\n\n    const val = _evaluate(path, state);\n\n    if (state.confident) {\n      item.resolved = true;\n      item.value = val;\n    }\n\n    return val;\n  }\n}\n\nfunction _evaluate(path, state) {\n  if (!state.confident) return;\n\n  if (path.isSequenceExpression()) {\n    const exprs = path.get(\"expressions\");\n    return evaluateCached(exprs[exprs.length - 1], state);\n  }\n\n  if (path.isStringLiteral() || path.isNumericLiteral() || path.isBooleanLiteral()) {\n    return path.node.value;\n  }\n\n  if (path.isNullLiteral()) {\n    return null;\n  }\n\n  if (path.isTemplateLiteral()) {\n    return evaluateQuasis(path, path.node.quasis, state);\n  }\n\n  if (path.isTaggedTemplateExpression() && path.get(\"tag\").isMemberExpression()) {\n    const object = path.get(\"tag.object\");\n    const {\n      node: {\n        name\n      }\n    } = object;\n    const property = path.get(\"tag.property\");\n\n    if (object.isIdentifier() && name === \"String\" && !path.scope.getBinding(name) && property.isIdentifier() && property.node.name === \"raw\") {\n      return evaluateQuasis(path, path.node.quasi.quasis, state, true);\n    }\n  }\n\n  if (path.isConditionalExpression()) {\n    const testResult = evaluateCached(path.get(\"test\"), state);\n    if (!state.confident) return;\n\n    if (testResult) {\n      return evaluateCached(path.get(\"consequent\"), state);\n    } else {\n      return evaluateCached(path.get(\"alternate\"), state);\n    }\n  }\n\n  if (path.isExpressionWrapper()) {\n    return evaluateCached(path.get(\"expression\"), state);\n  }\n\n  if (path.isMemberExpression() && !path.parentPath.isCallExpression({\n    callee: path.node\n  })) {\n    const property = path.get(\"property\");\n    const object = path.get(\"object\");\n\n    if (object.isLiteral() && property.isIdentifier()) {\n      const value = object.node.value;\n      const type = typeof value;\n\n      if (type === \"number\" || type === \"string\") {\n        return value[property.node.name];\n      }\n    }\n  }\n\n  if (path.isReferencedIdentifier()) {\n    const binding = path.scope.getBinding(path.node.name);\n\n    if (binding && binding.constantViolations.length > 0) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding && path.node.start < binding.path.node.end) {\n      return deopt(binding.path, state);\n    }\n\n    if (binding != null && binding.hasValue) {\n      return binding.value;\n    } else {\n      if (path.node.name === \"undefined\") {\n        return binding ? deopt(binding.path, state) : undefined;\n      } else if (path.node.name === \"Infinity\") {\n        return binding ? deopt(binding.path, state) : Infinity;\n      } else if (path.node.name === \"NaN\") {\n        return binding ? deopt(binding.path, state) : NaN;\n      }\n\n      const resolved = path.resolve();\n\n      if (resolved === path) {\n        return deopt(path, state);\n      } else {\n        return evaluateCached(resolved, state);\n      }\n    }\n  }\n\n  if (path.isUnaryExpression({\n    prefix: true\n  })) {\n    if (path.node.operator === \"void\") {\n      return undefined;\n    }\n\n    const argument = path.get(\"argument\");\n\n    if (path.node.operator === \"typeof\" && (argument.isFunction() || argument.isClass())) {\n      return \"function\";\n    }\n\n    const arg = evaluateCached(argument, state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"!\":\n        return !arg;\n\n      case \"+\":\n        return +arg;\n\n      case \"-\":\n        return -arg;\n\n      case \"~\":\n        return ~arg;\n\n      case \"typeof\":\n        return typeof arg;\n    }\n  }\n\n  if (path.isArrayExpression()) {\n    const arr = [];\n    const elems = path.get(\"elements\");\n\n    for (const elem of elems) {\n      const elemValue = elem.evaluate();\n\n      if (elemValue.confident) {\n        arr.push(elemValue.value);\n      } else {\n        return deopt(elemValue.deopt, state);\n      }\n    }\n\n    return arr;\n  }\n\n  if (path.isObjectExpression()) {\n    const obj = {};\n    const props = path.get(\"properties\");\n\n    for (const prop of props) {\n      if (prop.isObjectMethod() || prop.isSpreadElement()) {\n        return deopt(prop, state);\n      }\n\n      const keyPath = prop.get(\"key\");\n      let key = keyPath;\n\n      if (prop.node.computed) {\n        key = key.evaluate();\n\n        if (!key.confident) {\n          return deopt(key.deopt, state);\n        }\n\n        key = key.value;\n      } else if (key.isIdentifier()) {\n        key = key.node.name;\n      } else {\n        key = key.node.value;\n      }\n\n      const valuePath = prop.get(\"value\");\n      let value = valuePath.evaluate();\n\n      if (!value.confident) {\n        return deopt(value.deopt, state);\n      }\n\n      value = value.value;\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  if (path.isLogicalExpression()) {\n    const wasConfident = state.confident;\n    const left = evaluateCached(path.get(\"left\"), state);\n    const leftConfident = state.confident;\n    state.confident = wasConfident;\n    const right = evaluateCached(path.get(\"right\"), state);\n    const rightConfident = state.confident;\n\n    switch (path.node.operator) {\n      case \"||\":\n        state.confident = leftConfident && (!!left || rightConfident);\n        if (!state.confident) return;\n        return left || right;\n\n      case \"&&\":\n        state.confident = leftConfident && (!left || rightConfident);\n        if (!state.confident) return;\n        return left && right;\n    }\n  }\n\n  if (path.isBinaryExpression()) {\n    const left = evaluateCached(path.get(\"left\"), state);\n    if (!state.confident) return;\n    const right = evaluateCached(path.get(\"right\"), state);\n    if (!state.confident) return;\n\n    switch (path.node.operator) {\n      case \"-\":\n        return left - right;\n\n      case \"+\":\n        return left + right;\n\n      case \"/\":\n        return left / right;\n\n      case \"*\":\n        return left * right;\n\n      case \"%\":\n        return left % right;\n\n      case \"**\":\n        return Math.pow(left, right);\n\n      case \"<\":\n        return left < right;\n\n      case \">\":\n        return left > right;\n\n      case \"<=\":\n        return left <= right;\n\n      case \">=\":\n        return left >= right;\n\n      case \"==\":\n        return left == right;\n\n      case \"!=\":\n        return left != right;\n\n      case \"===\":\n        return left === right;\n\n      case \"!==\":\n        return left !== right;\n\n      case \"|\":\n        return left | right;\n\n      case \"&\":\n        return left & right;\n\n      case \"^\":\n        return left ^ right;\n\n      case \"<<\":\n        return left << right;\n\n      case \">>\":\n        return left >> right;\n\n      case \">>>\":\n        return left >>> right;\n    }\n  }\n\n  if (path.isCallExpression()) {\n    const callee = path.get(\"callee\");\n    let context;\n    let func;\n\n    if (callee.isIdentifier() && !path.scope.getBinding(callee.node.name) && VALID_CALLEES.indexOf(callee.node.name) >= 0) {\n      func = global[callee.node.name];\n    }\n\n    if (callee.isMemberExpression()) {\n      const object = callee.get(\"object\");\n      const property = callee.get(\"property\");\n\n      if (object.isIdentifier() && property.isIdentifier() && VALID_CALLEES.indexOf(object.node.name) >= 0 && INVALID_METHODS.indexOf(property.node.name) < 0) {\n        context = global[object.node.name];\n        func = context[property.node.name];\n      }\n\n      if (object.isLiteral() && property.isIdentifier()) {\n        const type = typeof object.node.value;\n\n        if (type === \"string\" || type === \"number\") {\n          context = object.node.value;\n          func = context[property.node.name];\n        }\n      }\n    }\n\n    if (func) {\n      const args = path.get(\"arguments\").map(arg => evaluateCached(arg, state));\n      if (!state.confident) return;\n      return func.apply(context, args);\n    }\n  }\n\n  deopt(path, state);\n}\n\nfunction evaluateQuasis(path, quasis, state, raw = false) {\n  let str = \"\";\n  let i = 0;\n  const exprs = path.get(\"expressions\");\n\n  for (const elem of quasis) {\n    if (!state.confident) break;\n    str += raw ? elem.value.raw : elem.value.cooked;\n    const expr = exprs[i++];\n    if (expr) str += String(evaluateCached(expr, state));\n  }\n\n  if (!state.confident) return;\n  return str;\n}\n\nfunction evaluate() {\n  const state = {\n    confident: true,\n    deoptPath: null,\n    seen: new Map()\n  };\n  let value = evaluateCached(this, state);\n  if (!state.confident) value = undefined;\n  return {\n    confident: state.confident,\n    deopt: state.deoptPath,\n    value: value\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toComputedKey = toComputedKey;\nexports.ensureBlock = ensureBlock;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\nexports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\nexports.arrowFunctionToExpression = arrowFunctionToExpression;\n\nvar _t = require(\"@babel/types\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nconst {\n  arrowFunctionExpression,\n  assignmentExpression,\n  binaryExpression,\n  blockStatement,\n  callExpression,\n  conditionalExpression,\n  expressionStatement,\n  identifier,\n  isIdentifier,\n  jsxIdentifier,\n  memberExpression,\n  metaProperty,\n  numericLiteral,\n  objectExpression,\n  restElement,\n  returnStatement,\n  sequenceExpression,\n  spreadElement,\n  stringLiteral,\n  super: _super,\n  thisExpression,\n  unaryExpression\n} = _t;\n\nfunction toComputedKey() {\n  let key;\n\n  if (this.isMemberExpression()) {\n    key = this.node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = this.node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!this.node.computed) {\n    if (isIdentifier(key)) key = stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  const body = this.get(\"body\");\n  const bodyNode = body.node;\n\n  if (Array.isArray(body)) {\n    throw new Error(\"Can't convert array path to a block statement\");\n  }\n\n  if (!bodyNode) {\n    throw new Error(\"Can't convert node without a body\");\n  }\n\n  if (body.isBlockStatement()) {\n    return bodyNode;\n  }\n\n  const statements = [];\n  let stringPath = \"body\";\n  let key;\n  let listKey;\n\n  if (body.isStatement()) {\n    listKey = \"body\";\n    key = 0;\n    statements.push(body.node);\n  } else {\n    stringPath += \".body.0\";\n\n    if (this.isFunction()) {\n      key = \"argument\";\n      statements.push(returnStatement(body.node));\n    } else {\n      key = \"expression\";\n      statements.push(expressionStatement(body.node));\n    }\n  }\n\n  this.node.body = blockStatement(statements);\n  const parentPath = this.get(stringPath);\n  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n  return this.node;\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n  this.arrowFunctionToExpression();\n}\n\nfunction unwrapFunctionEnvironment() {\n  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n    throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n  }\n\n  hoistFunctionEnvironment(this);\n}\n\nfunction arrowFunctionToExpression({\n  allowInsertArrow = true,\n  specCompliant = false,\n  noNewArrows = !specCompliant\n} = {}) {\n  if (!this.isArrowFunctionExpression()) {\n    throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n  }\n\n  const thisBinding = hoistFunctionEnvironment(this, noNewArrows, allowInsertArrow);\n  this.ensureBlock();\n  this.node.type = \"FunctionExpression\";\n\n  if (!noNewArrows) {\n    const checkBinding = thisBinding ? null : this.parentPath.scope.generateUidIdentifier(\"arrowCheckId\");\n\n    if (checkBinding) {\n      this.parentPath.scope.push({\n        id: checkBinding,\n        init: objectExpression([])\n      });\n    }\n\n    this.get(\"body\").unshiftContainer(\"body\", expressionStatement(callExpression(this.hub.addHelper(\"newArrowCheck\"), [thisExpression(), checkBinding ? identifier(checkBinding.name) : identifier(thisBinding)])));\n    this.replaceWith(callExpression(memberExpression((0, _helperFunctionName.default)(this, true) || this.node, identifier(\"bind\")), [checkBinding ? identifier(checkBinding.name) : thisExpression()]));\n  }\n}\n\nfunction hoistFunctionEnvironment(fnPath, noNewArrows = true, allowInsertArrow = true) {\n  const thisEnvFn = fnPath.findParent(p => {\n    return p.isFunction() && !p.isArrowFunctionExpression() || p.isProgram() || p.isClassProperty({\n      static: false\n    });\n  });\n  const inConstructor = (thisEnvFn == null ? void 0 : thisEnvFn.node.kind) === \"constructor\";\n\n  if (thisEnvFn.isClassProperty()) {\n    throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n  }\n\n  const {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  } = getScopeInformation(fnPath);\n\n  if (inConstructor && superCalls.length > 0) {\n    if (!allowInsertArrow) {\n      throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n    }\n\n    const allSuperCalls = [];\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        allSuperCalls.push(child);\n      }\n\n    });\n    const superBinding = getSuperBinding(thisEnvFn);\n    allSuperCalls.forEach(superCall => {\n      const callee = identifier(superBinding);\n      callee.loc = superCall.node.callee.loc;\n      superCall.get(\"callee\").replaceWith(callee);\n    });\n  }\n\n  if (argumentsPaths.length > 0) {\n    const argumentsBinding = getBinding(thisEnvFn, \"arguments\", () => {\n      const args = () => identifier(\"arguments\");\n\n      if (thisEnvFn.scope.path.isProgram()) {\n        return conditionalExpression(binaryExpression(\"===\", unaryExpression(\"typeof\", args()), stringLiteral(\"undefined\")), thisEnvFn.scope.buildUndefinedNode(), args());\n      } else {\n        return args();\n      }\n    });\n    argumentsPaths.forEach(argumentsChild => {\n      const argsRef = identifier(argumentsBinding);\n      argsRef.loc = argumentsChild.node.loc;\n      argumentsChild.replaceWith(argsRef);\n    });\n  }\n\n  if (newTargetPaths.length > 0) {\n    const newTargetBinding = getBinding(thisEnvFn, \"newtarget\", () => metaProperty(identifier(\"new\"), identifier(\"target\")));\n    newTargetPaths.forEach(targetChild => {\n      const targetRef = identifier(newTargetBinding);\n      targetRef.loc = targetChild.node.loc;\n      targetChild.replaceWith(targetRef);\n    });\n  }\n\n  if (superProps.length > 0) {\n    if (!allowInsertArrow) {\n      throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n    }\n\n    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);\n    flatSuperProps.forEach(superProp => {\n      const key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n      const isAssignment = superProp.parentPath.isAssignmentExpression({\n        left: superProp.node\n      });\n      const isCall = superProp.parentPath.isCallExpression({\n        callee: superProp.node\n      });\n      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n      const args = [];\n\n      if (superProp.node.computed) {\n        args.push(superProp.get(\"property\").node);\n      }\n\n      if (isAssignment) {\n        const value = superProp.parentPath.node.right;\n        args.push(value);\n      }\n\n      const call = callExpression(identifier(superBinding), args);\n\n      if (isCall) {\n        superProp.parentPath.unshiftContainer(\"arguments\", thisExpression());\n        superProp.replaceWith(memberExpression(call, identifier(\"call\")));\n        thisPaths.push(superProp.parentPath.get(\"arguments.0\"));\n      } else if (isAssignment) {\n        superProp.parentPath.replaceWith(call);\n      } else {\n        superProp.replaceWith(call);\n      }\n    });\n  }\n\n  let thisBinding;\n\n  if (thisPaths.length > 0 || !noNewArrows) {\n    thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n    if (noNewArrows || inConstructor && hasSuperClass(thisEnvFn)) {\n      thisPaths.forEach(thisChild => {\n        const thisRef = thisChild.isJSX() ? jsxIdentifier(thisBinding) : identifier(thisBinding);\n        thisRef.loc = thisChild.node.loc;\n        thisChild.replaceWith(thisRef);\n      });\n      if (!noNewArrows) thisBinding = null;\n    }\n  }\n\n  return thisBinding;\n}\n\nfunction standardizeSuperProperty(superProp) {\n  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n    const assignmentPath = superProp.parentPath;\n    const op = assignmentPath.node.operator.slice(0, -1);\n    const value = assignmentPath.node.right;\n    assignmentPath.node.operator = \"=\";\n\n    if (superProp.node.computed) {\n      const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n      assignmentPath.get(\"left\").replaceWith(memberExpression(superProp.node.object, assignmentExpression(\"=\", tmp, superProp.node.property), true));\n      assignmentPath.get(\"right\").replaceWith(binaryExpression(op, memberExpression(superProp.node.object, identifier(tmp.name), true), value));\n    } else {\n      assignmentPath.get(\"left\").replaceWith(memberExpression(superProp.node.object, superProp.node.property));\n      assignmentPath.get(\"right\").replaceWith(binaryExpression(op, memberExpression(superProp.node.object, identifier(superProp.node.property.name)), value));\n    }\n\n    return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n  } else if (superProp.parentPath.isUpdateExpression()) {\n    const updateExpr = superProp.parentPath;\n    const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n    const parts = [assignmentExpression(\"=\", tmp, memberExpression(superProp.node.object, computedKey ? assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), assignmentExpression(\"=\", memberExpression(superProp.node.object, computedKey ? identifier(computedKey.name) : superProp.node.property, superProp.node.computed), binaryExpression(\"+\", identifier(tmp.name), numericLiteral(1)))];\n\n    if (!superProp.parentPath.node.prefix) {\n      parts.push(identifier(tmp.name));\n    }\n\n    updateExpr.replaceWith(sequenceExpression(parts));\n    const left = updateExpr.get(\"expressions.0.right\");\n    const right = updateExpr.get(\"expressions.1.left\");\n    return [left, right];\n  }\n\n  return [superProp];\n}\n\nfunction hasSuperClass(thisEnvFn) {\n  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n}\n\nfunction getThisBinding(thisEnvFn, inConstructor) {\n  return getBinding(thisEnvFn, \"this\", thisBinding => {\n    if (!inConstructor || !hasSuperClass(thisEnvFn)) return thisExpression();\n    const supers = new WeakSet();\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        if (supers.has(child.node)) return;\n        supers.add(child.node);\n        child.replaceWithMultiple([child.node, assignmentExpression(\"=\", identifier(thisBinding), identifier(\"this\"))]);\n      }\n\n    });\n  });\n}\n\nfunction getSuperBinding(thisEnvFn) {\n  return getBinding(thisEnvFn, \"supercall\", () => {\n    const argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n    return arrowFunctionExpression([restElement(argsBinding)], callExpression(_super(), [spreadElement(identifier(argsBinding.name))]));\n  });\n}\n\nfunction getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n  const op = isAssignment ? \"set\" : \"get\";\n  return getBinding(thisEnvFn, `superprop_${op}:${propName || \"\"}`, () => {\n    const argsList = [];\n    let fnBody;\n\n    if (propName) {\n      fnBody = memberExpression(_super(), identifier(propName));\n    } else {\n      const method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n      argsList.unshift(method);\n      fnBody = memberExpression(_super(), identifier(method.name), true);\n    }\n\n    if (isAssignment) {\n      const valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n      argsList.push(valueIdent);\n      fnBody = assignmentExpression(\"=\", fnBody, identifier(valueIdent.name));\n    }\n\n    return arrowFunctionExpression(argsList, fnBody);\n  });\n}\n\nfunction getBinding(thisEnvFn, key, init) {\n  const cacheKey = \"binding:\" + key;\n  let data = thisEnvFn.getData(cacheKey);\n\n  if (!data) {\n    const id = thisEnvFn.scope.generateUidIdentifier(key);\n    data = id.name;\n    thisEnvFn.setData(cacheKey, data);\n    thisEnvFn.scope.push({\n      id: id,\n      init: init(data)\n    });\n  }\n\n  return data;\n}\n\nfunction getScopeInformation(fnPath) {\n  const thisPaths = [];\n  const argumentsPaths = [];\n  const newTargetPaths = [];\n  const superProps = [];\n  const superCalls = [];\n  fnPath.traverse({\n    ClassProperty(child) {\n      child.skip();\n    },\n\n    Function(child) {\n      if (child.isArrowFunctionExpression()) return;\n      child.skip();\n    },\n\n    ThisExpression(child) {\n      thisPaths.push(child);\n    },\n\n    JSXIdentifier(child) {\n      if (child.node.name !== \"this\") return;\n\n      if (!child.parentPath.isJSXMemberExpression({\n        object: child.node\n      }) && !child.parentPath.isJSXOpeningElement({\n        name: child.node\n      })) {\n        return;\n      }\n\n      thisPaths.push(child);\n    },\n\n    CallExpression(child) {\n      if (child.get(\"callee\").isSuper()) superCalls.push(child);\n    },\n\n    MemberExpression(child) {\n      if (child.get(\"object\").isSuper()) superProps.push(child);\n    },\n\n    ReferencedIdentifier(child) {\n      if (child.node.name !== \"arguments\") return;\n      let curr = child.scope;\n\n      do {\n        if (curr.hasOwnBinding(\"arguments\")) {\n          curr.rename(\"arguments\");\n          return;\n        }\n\n        if (curr.path.isFunction() && !curr.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (curr = curr.parent);\n\n      argumentsPaths.push(child);\n    },\n\n    MetaProperty(child) {\n      if (!child.get(\"meta\").isIdentifier({\n        name: \"new\"\n      })) return;\n      if (!child.get(\"property\").isIdentifier({\n        name: \"target\"\n      })) return;\n      newTargetPaths.push(child);\n    }\n\n  });\n  return {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.matchesPattern = matchesPattern;\nexports.has = has;\nexports.isStatic = isStatic;\nexports.isnt = isnt;\nexports.equals = equals;\nexports.isNodeType = isNodeType;\nexports.canHaveVariableDeclarationOrExpression = canHaveVariableDeclarationOrExpression;\nexports.canSwapBetweenExpressionAndStatement = canSwapBetweenExpressionAndStatement;\nexports.isCompletionRecord = isCompletionRecord;\nexports.isStatementOrBlock = isStatementOrBlock;\nexports.referencesImport = referencesImport;\nexports.getSource = getSource;\nexports.willIMaybeExecuteBefore = willIMaybeExecuteBefore;\nexports._guessExecutionStatusRelativeTo = _guessExecutionStatusRelativeTo;\nexports._guessExecutionStatusRelativeToDifferentFunctions = _guessExecutionStatusRelativeToDifferentFunctions;\nexports.resolve = resolve;\nexports._resolve = _resolve;\nexports.isConstantExpression = isConstantExpression;\nexports.isInStrictMode = isInStrictMode;\nexports.is = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  STATEMENT_OR_BLOCK_KEYS,\n  VISITOR_KEYS,\n  isBlockStatement,\n  isExpression,\n  isIdentifier,\n  isLiteral,\n  isStringLiteral,\n  isType,\n  matchesPattern: _matchesPattern\n} = _t;\n\nfunction matchesPattern(pattern, allowPartial) {\n  return _matchesPattern(this.node, pattern, allowPartial);\n}\n\nfunction has(key) {\n  const val = this.node && this.node[key];\n\n  if (val && Array.isArray(val)) {\n    return !!val.length;\n  } else {\n    return !!val;\n  }\n}\n\nfunction isStatic() {\n  return this.scope.isStatic(this.node);\n}\n\nconst is = has;\nexports.is = is;\n\nfunction isnt(key) {\n  return !this.has(key);\n}\n\nfunction equals(key, value) {\n  return this.node[key] === value;\n}\n\nfunction isNodeType(type) {\n  return isType(this.type, type);\n}\n\nfunction canHaveVariableDeclarationOrExpression() {\n  return (this.key === \"init\" || this.key === \"left\") && this.parentPath.isFor();\n}\n\nfunction canSwapBetweenExpressionAndStatement(replacement) {\n  if (this.key !== \"body\" || !this.parentPath.isArrowFunctionExpression()) {\n    return false;\n  }\n\n  if (this.isExpression()) {\n    return isBlockStatement(replacement);\n  } else if (this.isBlockStatement()) {\n    return isExpression(replacement);\n  }\n\n  return false;\n}\n\nfunction isCompletionRecord(allowInsideFunction) {\n  let path = this;\n  let first = true;\n\n  do {\n    const container = path.container;\n\n    if (path.isFunction() && !first) {\n      return !!allowInsideFunction;\n    }\n\n    first = false;\n\n    if (Array.isArray(container) && path.key !== container.length - 1) {\n      return false;\n    }\n  } while ((path = path.parentPath) && !path.isProgram());\n\n  return true;\n}\n\nfunction isStatementOrBlock() {\n  if (this.parentPath.isLabeledStatement() || isBlockStatement(this.container)) {\n    return false;\n  } else {\n    return STATEMENT_OR_BLOCK_KEYS.includes(this.key);\n  }\n}\n\nfunction referencesImport(moduleSource, importName) {\n  if (!this.isReferencedIdentifier()) {\n    if ((this.isMemberExpression() || this.isOptionalMemberExpression()) && (this.node.computed ? isStringLiteral(this.node.property, {\n      value: importName\n    }) : this.node.property.name === importName)) {\n      const object = this.get(\"object\");\n      return object.isReferencedIdentifier() && object.referencesImport(moduleSource, \"*\");\n    }\n\n    return false;\n  }\n\n  const binding = this.scope.getBinding(this.node.name);\n  if (!binding || binding.kind !== \"module\") return false;\n  const path = binding.path;\n  const parent = path.parentPath;\n  if (!parent.isImportDeclaration()) return false;\n\n  if (parent.node.source.value === moduleSource) {\n    if (!importName) return true;\n  } else {\n    return false;\n  }\n\n  if (path.isImportDefaultSpecifier() && importName === \"default\") {\n    return true;\n  }\n\n  if (path.isImportNamespaceSpecifier() && importName === \"*\") {\n    return true;\n  }\n\n  if (path.isImportSpecifier() && isIdentifier(path.node.imported, {\n    name: importName\n  })) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getSource() {\n  const node = this.node;\n\n  if (node.end) {\n    const code = this.hub.getCode();\n    if (code) return code.slice(node.start, node.end);\n  }\n\n  return \"\";\n}\n\nfunction willIMaybeExecuteBefore(target) {\n  return this._guessExecutionStatusRelativeTo(target) !== \"after\";\n}\n\nfunction getOuterFunction(path) {\n  return (path.scope.getFunctionParent() || path.scope.getProgramParent()).path;\n}\n\nfunction isExecutionUncertain(type, key) {\n  switch (type) {\n    case \"LogicalExpression\":\n      return key === \"right\";\n\n    case \"ConditionalExpression\":\n    case \"IfStatement\":\n      return key === \"consequent\" || key === \"alternate\";\n\n    case \"WhileStatement\":\n    case \"DoWhileStatement\":\n    case \"ForInStatement\":\n    case \"ForOfStatement\":\n      return key === \"body\";\n\n    case \"ForStatement\":\n      return key === \"body\" || key === \"update\";\n\n    case \"SwitchStatement\":\n      return key === \"cases\";\n\n    case \"TryStatement\":\n      return key === \"handler\";\n\n    case \"AssignmentPattern\":\n      return key === \"right\";\n\n    case \"OptionalMemberExpression\":\n      return key === \"property\";\n\n    case \"OptionalCallExpression\":\n      return key === \"arguments\";\n\n    default:\n      return false;\n  }\n}\n\nfunction isExecutionUncertainInList(paths, maxIndex) {\n  for (let i = 0; i < maxIndex; i++) {\n    const path = paths[i];\n\n    if (isExecutionUncertain(path.parent.type, path.parentKey)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction _guessExecutionStatusRelativeTo(target) {\n  const funcParent = {\n    this: getOuterFunction(this),\n    target: getOuterFunction(target)\n  };\n\n  if (funcParent.target.node !== funcParent.this.node) {\n    return this._guessExecutionStatusRelativeToDifferentFunctions(funcParent.target);\n  }\n\n  const paths = {\n    target: target.getAncestry(),\n    this: this.getAncestry()\n  };\n  if (paths.target.indexOf(this) >= 0) return \"after\";\n  if (paths.this.indexOf(target) >= 0) return \"before\";\n  let commonPath;\n  const commonIndex = {\n    target: 0,\n    this: 0\n  };\n\n  while (!commonPath && commonIndex.this < paths.this.length) {\n    const path = paths.this[commonIndex.this];\n    commonIndex.target = paths.target.indexOf(path);\n\n    if (commonIndex.target >= 0) {\n      commonPath = path;\n    } else {\n      commonIndex.this++;\n    }\n  }\n\n  if (!commonPath) {\n    throw new Error(\"Internal Babel error - The two compared nodes\" + \" don't appear to belong to the same program.\");\n  }\n\n  if (isExecutionUncertainInList(paths.this, commonIndex.this - 1) || isExecutionUncertainInList(paths.target, commonIndex.target - 1)) {\n    return \"unknown\";\n  }\n\n  const divergence = {\n    this: paths.this[commonIndex.this - 1],\n    target: paths.target[commonIndex.target - 1]\n  };\n\n  if (divergence.target.listKey && divergence.this.listKey && divergence.target.container === divergence.this.container) {\n    return divergence.target.key > divergence.this.key ? \"before\" : \"after\";\n  }\n\n  const keys = VISITOR_KEYS[commonPath.type];\n  const keyPosition = {\n    this: keys.indexOf(divergence.this.parentKey),\n    target: keys.indexOf(divergence.target.parentKey)\n  };\n  return keyPosition.target > keyPosition.this ? \"before\" : \"after\";\n}\n\nconst executionOrderCheckedNodes = new WeakSet();\n\nfunction _guessExecutionStatusRelativeToDifferentFunctions(target) {\n  if (!target.isFunctionDeclaration() || target.parentPath.isExportDeclaration()) {\n    return \"unknown\";\n  }\n\n  const binding = target.scope.getBinding(target.node.id.name);\n  if (!binding.references) return \"before\";\n  const referencePaths = binding.referencePaths;\n  let allStatus;\n\n  for (const path of referencePaths) {\n    const childOfFunction = !!path.find(path => path.node === target.node);\n    if (childOfFunction) continue;\n\n    if (path.key !== \"callee\" || !path.parentPath.isCallExpression()) {\n      return \"unknown\";\n    }\n\n    if (executionOrderCheckedNodes.has(path.node)) continue;\n    executionOrderCheckedNodes.add(path.node);\n\n    const status = this._guessExecutionStatusRelativeTo(path);\n\n    executionOrderCheckedNodes.delete(path.node);\n\n    if (allStatus && allStatus !== status) {\n      return \"unknown\";\n    } else {\n      allStatus = status;\n    }\n  }\n\n  return allStatus;\n}\n\nfunction resolve(dangerous, resolved) {\n  return this._resolve(dangerous, resolved) || this;\n}\n\nfunction _resolve(dangerous, resolved) {\n  if (resolved && resolved.indexOf(this) >= 0) return;\n  resolved = resolved || [];\n  resolved.push(this);\n\n  if (this.isVariableDeclarator()) {\n    if (this.get(\"id\").isIdentifier()) {\n      return this.get(\"init\").resolve(dangerous, resolved);\n    } else {}\n  } else if (this.isReferencedIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return;\n    if (!binding.constant) return;\n    if (binding.kind === \"module\") return;\n\n    if (binding.path !== this) {\n      const ret = binding.path.resolve(dangerous, resolved);\n      if (this.find(parent => parent.node === ret.node)) return;\n      return ret;\n    }\n  } else if (this.isTypeCastExpression()) {\n    return this.get(\"expression\").resolve(dangerous, resolved);\n  } else if (dangerous && this.isMemberExpression()) {\n    const targetKey = this.toComputedKey();\n    if (!isLiteral(targetKey)) return;\n    const targetName = targetKey.value;\n    const target = this.get(\"object\").resolve(dangerous, resolved);\n\n    if (target.isObjectExpression()) {\n      const props = target.get(\"properties\");\n\n      for (const prop of props) {\n        if (!prop.isProperty()) continue;\n        const key = prop.get(\"key\");\n        let match = prop.isnt(\"computed\") && key.isIdentifier({\n          name: targetName\n        });\n        match = match || key.isLiteral({\n          value: targetName\n        });\n        if (match) return prop.get(\"value\").resolve(dangerous, resolved);\n      }\n    } else if (target.isArrayExpression() && !isNaN(+targetName)) {\n      const elems = target.get(\"elements\");\n      const elem = elems[targetName];\n      if (elem) return elem.resolve(dangerous, resolved);\n    }\n  }\n}\n\nfunction isConstantExpression() {\n  if (this.isIdentifier()) {\n    const binding = this.scope.getBinding(this.node.name);\n    if (!binding) return false;\n    return binding.constant;\n  }\n\n  if (this.isLiteral()) {\n    if (this.isRegExpLiteral()) {\n      return false;\n    }\n\n    if (this.isTemplateLiteral()) {\n      return this.get(\"expressions\").every(expression => expression.isConstantExpression());\n    }\n\n    return true;\n  }\n\n  if (this.isUnaryExpression()) {\n    if (this.node.operator !== \"void\") {\n      return false;\n    }\n\n    return this.get(\"argument\").isConstantExpression();\n  }\n\n  if (this.isBinaryExpression()) {\n    return this.get(\"left\").isConstantExpression() && this.get(\"right\").isConstantExpression();\n  }\n\n  return false;\n}\n\nfunction isInStrictMode() {\n  const start = this.isProgram() ? this : this.parentPath;\n  const strictParent = start.find(path => {\n    if (path.isProgram({\n      sourceType: \"module\"\n    })) return true;\n    if (path.isClass()) return true;\n    if (!path.isProgram() && !path.isFunction()) return false;\n\n    if (path.isArrowFunctionExpression() && !path.get(\"body\").isBlockStatement()) {\n      return false;\n    }\n\n    const body = path.isFunction() ? path.node.body : path.node;\n\n    for (const directive of body.directives) {\n      if (directive.value.value === \"use strict\") {\n        return true;\n      }\n    }\n  });\n  return !!strictParent;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.call = call;\nexports._call = _call;\nexports.isBlacklisted = exports.isDenylisted = isDenylisted;\nexports.visit = visit;\nexports.skip = skip;\nexports.skipKey = skipKey;\nexports.stop = stop;\nexports.setScope = setScope;\nexports.setContext = setContext;\nexports.resync = resync;\nexports._resyncParent = _resyncParent;\nexports._resyncKey = _resyncKey;\nexports._resyncList = _resyncList;\nexports._resyncRemoved = _resyncRemoved;\nexports.popContext = popContext;\nexports.pushContext = pushContext;\nexports.setup = setup;\nexports.setKey = setKey;\nexports.requeue = requeue;\nexports._getQueueContexts = _getQueueContexts;\n\nvar _index = require(\"../index\");\n\nvar _index2 = require(\"./index\");\n\nfunction call(key) {\n  const opts = this.opts;\n  this.debug(key);\n\n  if (this.node) {\n    if (this._call(opts[key])) return true;\n  }\n\n  if (this.node) {\n    return this._call(opts[this.node.type] && opts[this.node.type][key]);\n  }\n\n  return false;\n}\n\nfunction _call(fns) {\n  if (!fns) return false;\n\n  for (const fn of fns) {\n    if (!fn) continue;\n    const node = this.node;\n    if (!node) return true;\n    const ret = fn.call(this.state, this, this.state);\n\n    if (ret && typeof ret === \"object\" && typeof ret.then === \"function\") {\n      throw new Error(`You appear to be using a plugin with an async traversal visitor, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n    }\n\n    if (ret) {\n      throw new Error(`Unexpected return value from visitor method ${fn}`);\n    }\n\n    if (this.node !== node) return true;\n    if (this._traverseFlags > 0) return true;\n  }\n\n  return false;\n}\n\nfunction isDenylisted() {\n  var _this$opts$denylist;\n\n  const denylist = (_this$opts$denylist = this.opts.denylist) != null ? _this$opts$denylist : this.opts.blacklist;\n  return denylist && denylist.indexOf(this.node.type) > -1;\n}\n\nfunction visit() {\n  if (!this.node) {\n    return false;\n  }\n\n  if (this.isDenylisted()) {\n    return false;\n  }\n\n  if (this.opts.shouldSkip && this.opts.shouldSkip(this)) {\n    return false;\n  }\n\n  if (this.shouldSkip || this.call(\"enter\") || this.shouldSkip) {\n    this.debug(\"Skip...\");\n    return this.shouldStop;\n  }\n\n  this.debug(\"Recursing into...\");\n\n  _index.default.node(this.node, this.opts, this.scope, this.state, this, this.skipKeys);\n\n  this.call(\"exit\");\n  return this.shouldStop;\n}\n\nfunction skip() {\n  this.shouldSkip = true;\n}\n\nfunction skipKey(key) {\n  if (this.skipKeys == null) {\n    this.skipKeys = {};\n  }\n\n  this.skipKeys[key] = true;\n}\n\nfunction stop() {\n  this._traverseFlags |= _index2.SHOULD_SKIP | _index2.SHOULD_STOP;\n}\n\nfunction setScope() {\n  if (this.opts && this.opts.noScope) return;\n  let path = this.parentPath;\n  if (this.key === \"key\" && path.isMethod()) path = path.parentPath;\n  let target;\n\n  while (path && !target) {\n    if (path.opts && path.opts.noScope) return;\n    target = path.scope;\n    path = path.parentPath;\n  }\n\n  this.scope = this.getScope(target);\n  if (this.scope) this.scope.init();\n}\n\nfunction setContext(context) {\n  if (this.skipKeys != null) {\n    this.skipKeys = {};\n  }\n\n  this._traverseFlags = 0;\n\n  if (context) {\n    this.context = context;\n    this.state = context.state;\n    this.opts = context.opts;\n  }\n\n  this.setScope();\n  return this;\n}\n\nfunction resync() {\n  if (this.removed) return;\n\n  this._resyncParent();\n\n  this._resyncList();\n\n  this._resyncKey();\n}\n\nfunction _resyncParent() {\n  if (this.parentPath) {\n    this.parent = this.parentPath.node;\n  }\n}\n\nfunction _resyncKey() {\n  if (!this.container) return;\n  if (this.node === this.container[this.key]) return;\n\n  if (Array.isArray(this.container)) {\n    for (let i = 0; i < this.container.length; i++) {\n      if (this.container[i] === this.node) {\n        return this.setKey(i);\n      }\n    }\n  } else {\n    for (const key of Object.keys(this.container)) {\n      if (this.container[key] === this.node) {\n        return this.setKey(key);\n      }\n    }\n  }\n\n  this.key = null;\n}\n\nfunction _resyncList() {\n  if (!this.parent || !this.inList) return;\n  const newContainer = this.parent[this.listKey];\n  if (this.container === newContainer) return;\n  this.container = newContainer || null;\n}\n\nfunction _resyncRemoved() {\n  if (this.key == null || !this.container || this.container[this.key] !== this.node) {\n    this._markRemoved();\n  }\n}\n\nfunction popContext() {\n  this.contexts.pop();\n\n  if (this.contexts.length > 0) {\n    this.setContext(this.contexts[this.contexts.length - 1]);\n  } else {\n    this.setContext(undefined);\n  }\n}\n\nfunction pushContext(context) {\n  this.contexts.push(context);\n  this.setContext(context);\n}\n\nfunction setup(parentPath, container, listKey, key) {\n  this.listKey = listKey;\n  this.container = container;\n  this.parentPath = parentPath || this.parentPath;\n  this.setKey(key);\n}\n\nfunction setKey(key) {\n  var _this$node;\n\n  this.key = key;\n  this.node = this.container[this.key];\n  this.type = (_this$node = this.node) == null ? void 0 : _this$node.type;\n}\n\nfunction requeue(pathToQueue = this) {\n  if (pathToQueue.removed) return;\n  ;\n  const contexts = this.contexts;\n\n  for (const context of contexts) {\n    context.maybeQueue(pathToQueue);\n  }\n}\n\nfunction _getQueueContexts() {\n  let path = this;\n  let contexts = this.contexts;\n\n  while (!contexts.length) {\n    path = path.parentPath;\n    if (!path) break;\n    contexts = path.contexts;\n  }\n\n  return contexts;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.remove = remove;\nexports._removeFromScope = _removeFromScope;\nexports._callRemovalHooks = _callRemovalHooks;\nexports._remove = _remove;\nexports._markRemoved = _markRemoved;\nexports._assertUnremoved = _assertUnremoved;\n\nvar _removalHooks = require(\"./lib/removal-hooks\");\n\nvar _cache = require(\"../cache\");\n\nvar _index = require(\"./index\");\n\nfunction remove() {\n  var _this$opts;\n\n  this._assertUnremoved();\n\n  this.resync();\n\n  if (!((_this$opts = this.opts) != null && _this$opts.noScope)) {\n    this._removeFromScope();\n  }\n\n  if (this._callRemovalHooks()) {\n    this._markRemoved();\n\n    return;\n  }\n\n  this.shareCommentsWithSiblings();\n\n  this._remove();\n\n  this._markRemoved();\n}\n\nfunction _removeFromScope() {\n  const bindings = this.getBindingIdentifiers();\n  Object.keys(bindings).forEach(name => this.scope.removeBinding(name));\n}\n\nfunction _callRemovalHooks() {\n  for (const fn of _removalHooks.hooks) {\n    if (fn(this, this.parentPath)) return true;\n  }\n}\n\nfunction _remove() {\n  if (Array.isArray(this.container)) {\n    this.container.splice(this.key, 1);\n    this.updateSiblingKeys(this.key, -1);\n  } else {\n    this._replaceWith(null);\n  }\n}\n\nfunction _markRemoved() {\n  this._traverseFlags |= _index.SHOULD_SKIP | _index.REMOVED;\n  if (this.parent) _cache.path.get(this.parent).delete(this.node);\n  this.node = null;\n}\n\nfunction _assertUnremoved() {\n  if (this.removed) {\n    throw this.buildCodeFrameError(\"NodePath has been removed so is read-only.\");\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hooks = void 0;\nconst hooks = [function (self, parent) {\n  const removeParent = self.key === \"test\" && (parent.isWhile() || parent.isSwitchCase()) || self.key === \"declaration\" && parent.isExportDeclaration() || self.key === \"body\" && parent.isLabeledStatement() || self.listKey === \"declarations\" && parent.isVariableDeclaration() && parent.node.declarations.length === 1 || self.key === \"expression\" && parent.isExpressionStatement();\n\n  if (removeParent) {\n    parent.remove();\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isSequenceExpression() && parent.node.expressions.length === 1) {\n    parent.replaceWith(parent.node.expressions[0]);\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isBinary()) {\n    if (self.key === \"left\") {\n      parent.replaceWith(parent.node.right);\n    } else {\n      parent.replaceWith(parent.node.left);\n    }\n\n    return true;\n  }\n}, function (self, parent) {\n  if (parent.isIfStatement() && (self.key === \"consequent\" || self.key === \"alternate\") || self.key === \"body\" && (parent.isLoop() || parent.isArrowFunctionExpression())) {\n    self.replaceWith({\n      type: \"BlockStatement\",\n      body: []\n    });\n    return true;\n  }\n}];\nexports.hooks = hooks;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.insertBefore = insertBefore;\nexports._containerInsert = _containerInsert;\nexports._containerInsertBefore = _containerInsertBefore;\nexports._containerInsertAfter = _containerInsertAfter;\nexports.insertAfter = insertAfter;\nexports.updateSiblingKeys = updateSiblingKeys;\nexports._verifyNodeList = _verifyNodeList;\nexports.unshiftContainer = unshiftContainer;\nexports.pushContainer = pushContainer;\nexports.hoist = hoist;\n\nvar _cache = require(\"../cache\");\n\nvar _hoister = require(\"./lib/hoister\");\n\nvar _index = require(\"./index\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  arrowFunctionExpression,\n  assertExpression,\n  assignmentExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  expressionStatement,\n  isExpression\n} = _t;\n\nfunction insertBefore(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertBefore(nodes);\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) nodes.push(this.node);\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertBefore(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.unshiftContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction _containerInsert(from, nodes) {\n  this.updateSiblingKeys(from, nodes.length);\n  const paths = [];\n  this.container.splice(from, 0, ...nodes);\n\n  for (let i = 0; i < nodes.length; i++) {\n    const to = from + i;\n    const path = this.getSibling(to);\n    paths.push(path);\n\n    if (this.context && this.context.queue) {\n      path.pushContext(this.context);\n    }\n  }\n\n  const contexts = this._getQueueContexts();\n\n  for (const path of paths) {\n    path.setScope();\n    path.debug(\"Inserted.\");\n\n    for (const context of contexts) {\n      context.maybeQueue(path, true);\n    }\n  }\n\n  return paths;\n}\n\nfunction _containerInsertBefore(nodes) {\n  return this._containerInsert(this.key, nodes);\n}\n\nfunction _containerInsertAfter(nodes) {\n  return this._containerInsert(this.key + 1, nodes);\n}\n\nfunction insertAfter(nodes_) {\n  this._assertUnremoved();\n\n  const nodes = this._verifyNodeList(nodes_);\n\n  const {\n    parentPath\n  } = this;\n\n  if (parentPath.isExpressionStatement() || parentPath.isLabeledStatement() || parentPath.isExportNamedDeclaration() || parentPath.isExportDefaultDeclaration() && this.isDeclaration()) {\n    return parentPath.insertAfter(nodes.map(node => {\n      return isExpression(node) ? expressionStatement(node) : node;\n    }));\n  } else if (this.isNodeType(\"Expression\") && !this.isJSXElement() && !parentPath.isJSXElement() || parentPath.isForStatement() && this.key === \"init\") {\n    if (this.node) {\n      const node = this.node;\n      let {\n        scope\n      } = this;\n\n      if (scope.path.isPattern()) {\n        assertExpression(node);\n        this.replaceWith(callExpression(arrowFunctionExpression([], node), []));\n        this.get(\"callee.body\").insertAfter(nodes);\n        return [this];\n      }\n\n      if (parentPath.isMethod({\n        computed: true,\n        key: node\n      })) {\n        scope = scope.parent;\n      }\n\n      const temp = scope.generateDeclaredUidIdentifier();\n      nodes.unshift(expressionStatement(assignmentExpression(\"=\", cloneNode(temp), node)));\n      nodes.push(expressionStatement(cloneNode(temp)));\n    }\n\n    return this.replaceExpressionWithStatements(nodes);\n  } else if (Array.isArray(this.container)) {\n    return this._containerInsertAfter(nodes);\n  } else if (this.isStatementOrBlock()) {\n    const node = this.node;\n    const shouldInsertCurrentNode = node && (!this.isExpressionStatement() || node.expression != null);\n    this.replaceWith(blockStatement(shouldInsertCurrentNode ? [node] : []));\n    return this.pushContainer(\"body\", nodes);\n  } else {\n    throw new Error(\"We don't know what to do with this node type. \" + \"We were previously a Statement but we can't fit in here?\");\n  }\n}\n\nfunction updateSiblingKeys(fromIndex, incrementBy) {\n  if (!this.parent) return;\n\n  const paths = _cache.path.get(this.parent);\n\n  for (const [, path] of paths) {\n    if (path.key >= fromIndex) {\n      path.key += incrementBy;\n    }\n  }\n}\n\nfunction _verifyNodeList(nodes) {\n  if (!nodes) {\n    return [];\n  }\n\n  if (!Array.isArray(nodes)) {\n    nodes = [nodes];\n  }\n\n  for (let i = 0; i < nodes.length; i++) {\n    const node = nodes[i];\n    let msg;\n\n    if (!node) {\n      msg = \"has falsy node\";\n    } else if (typeof node !== \"object\") {\n      msg = \"contains a non-object node\";\n    } else if (!node.type) {\n      msg = \"without a type\";\n    } else if (node instanceof _index.default) {\n      msg = \"has a NodePath when it expected a raw object\";\n    }\n\n    if (msg) {\n      const type = Array.isArray(node) ? \"array\" : typeof node;\n      throw new Error(`Node list ${msg} with the index of ${i} and type of ${type}`);\n    }\n  }\n\n  return nodes;\n}\n\nfunction unshiftContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  nodes = this._verifyNodeList(nodes);\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: this.node[listKey],\n    listKey,\n    key: 0\n  }).setContext(this.context);\n\n  return path._containerInsertBefore(nodes);\n}\n\nfunction pushContainer(listKey, nodes) {\n  this._assertUnremoved();\n\n  const verifiedNodes = this._verifyNodeList(nodes);\n\n  const container = this.node[listKey];\n\n  const path = _index.default.get({\n    parentPath: this,\n    parent: this.node,\n    container: container,\n    listKey,\n    key: container.length\n  }).setContext(this.context);\n\n  return path.replaceWithMultiple(verifiedNodes);\n}\n\nfunction hoist(scope = this.scope) {\n  const hoister = new _hoister.default(this, scope);\n  return hoister.run();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _t = require(\"@babel/types\");\n\nvar _t2 = _t;\nconst {\n  react\n} = _t;\nconst {\n  cloneNode,\n  jsxExpressionContainer,\n  variableDeclaration,\n  variableDeclarator\n} = _t2;\nconst referenceVisitor = {\n  ReferencedIdentifier(path, state) {\n    if (path.isJSXIdentifier() && react.isCompatTag(path.node.name) && !path.parentPath.isJSXMemberExpression()) {\n      return;\n    }\n\n    if (path.node.name === \"this\") {\n      let scope = path.scope;\n\n      do {\n        if (scope.path.isFunction() && !scope.path.isArrowFunctionExpression()) {\n          break;\n        }\n      } while (scope = scope.parent);\n\n      if (scope) state.breakOnScopePaths.push(scope.path);\n    }\n\n    const binding = path.scope.getBinding(path.node.name);\n    if (!binding) return;\n\n    for (const violation of binding.constantViolations) {\n      if (violation.scope !== binding.path.scope) {\n        state.mutableBinding = true;\n        path.stop();\n        return;\n      }\n    }\n\n    if (binding !== state.scope.getBinding(path.node.name)) return;\n    state.bindings[path.node.name] = binding;\n  }\n\n};\n\nclass PathHoister {\n  constructor(path, scope) {\n    this.breakOnScopePaths = void 0;\n    this.bindings = void 0;\n    this.mutableBinding = void 0;\n    this.scopes = void 0;\n    this.scope = void 0;\n    this.path = void 0;\n    this.attachAfter = void 0;\n    this.breakOnScopePaths = [];\n    this.bindings = {};\n    this.mutableBinding = false;\n    this.scopes = [];\n    this.scope = scope;\n    this.path = path;\n    this.attachAfter = false;\n  }\n\n  isCompatibleScope(scope) {\n    for (const key of Object.keys(this.bindings)) {\n      const binding = this.bindings[key];\n\n      if (!scope.bindingIdentifierEquals(key, binding.identifier)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  getCompatibleScopes() {\n    let scope = this.path.scope;\n\n    do {\n      if (this.isCompatibleScope(scope)) {\n        this.scopes.push(scope);\n      } else {\n        break;\n      }\n\n      if (this.breakOnScopePaths.indexOf(scope.path) >= 0) {\n        break;\n      }\n    } while (scope = scope.parent);\n  }\n\n  getAttachmentPath() {\n    let path = this._getAttachmentPath();\n\n    if (!path) return;\n    let targetScope = path.scope;\n\n    if (targetScope.path === path) {\n      targetScope = path.scope.parent;\n    }\n\n    if (targetScope.path.isProgram() || targetScope.path.isFunction()) {\n      for (const name of Object.keys(this.bindings)) {\n        if (!targetScope.hasOwnBinding(name)) continue;\n        const binding = this.bindings[name];\n\n        if (binding.kind === \"param\" || binding.path.parentKey === \"params\") {\n          continue;\n        }\n\n        const bindingParentPath = this.getAttachmentParentForPath(binding.path);\n\n        if (bindingParentPath.key >= path.key) {\n          this.attachAfter = true;\n          path = binding.path;\n\n          for (const violationPath of binding.constantViolations) {\n            if (this.getAttachmentParentForPath(violationPath).key > path.key) {\n              path = violationPath;\n            }\n          }\n        }\n      }\n    }\n\n    return path;\n  }\n\n  _getAttachmentPath() {\n    const scopes = this.scopes;\n    const scope = scopes.pop();\n    if (!scope) return;\n\n    if (scope.path.isFunction()) {\n      if (this.hasOwnParamBindings(scope)) {\n        if (this.scope === scope) return;\n        const bodies = scope.path.get(\"body\").get(\"body\");\n\n        for (let i = 0; i < bodies.length; i++) {\n          if (bodies[i].node._blockHoist) continue;\n          return bodies[i];\n        }\n      } else {\n        return this.getNextScopeAttachmentParent();\n      }\n    } else if (scope.path.isProgram()) {\n      return this.getNextScopeAttachmentParent();\n    }\n  }\n\n  getNextScopeAttachmentParent() {\n    const scope = this.scopes.pop();\n    if (scope) return this.getAttachmentParentForPath(scope.path);\n  }\n\n  getAttachmentParentForPath(path) {\n    do {\n      if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n        return path;\n      }\n    } while (path = path.parentPath);\n  }\n\n  hasOwnParamBindings(scope) {\n    for (const name of Object.keys(this.bindings)) {\n      if (!scope.hasOwnBinding(name)) continue;\n      const binding = this.bindings[name];\n      if (binding.kind === \"param\" && binding.constant) return true;\n    }\n\n    return false;\n  }\n\n  run() {\n    this.path.traverse(referenceVisitor, this);\n    if (this.mutableBinding) return;\n    this.getCompatibleScopes();\n    const attachTo = this.getAttachmentPath();\n    if (!attachTo) return;\n    if (attachTo.getFunctionParent() === this.path.getFunctionParent()) return;\n    let uid = attachTo.scope.generateUidIdentifier(\"ref\");\n    const declarator = variableDeclarator(uid, this.path.node);\n    const insertFn = this.attachAfter ? \"insertAfter\" : \"insertBefore\";\n    const [attached] = attachTo[insertFn]([attachTo.isVariableDeclarator() ? declarator : variableDeclaration(\"var\", [declarator])]);\n    const parent = this.path.parentPath;\n\n    if (parent.isJSXElement() && this.path.container === parent.node.children) {\n      uid = jsxExpressionContainer(uid);\n    }\n\n    this.path.replaceWith(cloneNode(uid));\n    return attachTo.isVariableDeclarator() ? attached.get(\"init\") : attached.get(\"declarations.0.init\");\n  }\n\n}\n\nexports.default = PathHoister;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getOpposite = getOpposite;\nexports.getCompletionRecords = getCompletionRecords;\nexports.getSibling = getSibling;\nexports.getPrevSibling = getPrevSibling;\nexports.getNextSibling = getNextSibling;\nexports.getAllNextSiblings = getAllNextSiblings;\nexports.getAllPrevSiblings = getAllPrevSiblings;\nexports.get = get;\nexports._getKey = _getKey;\nexports._getPattern = _getPattern;\nexports.getBindingIdentifiers = getBindingIdentifiers;\nexports.getOuterBindingIdentifiers = getOuterBindingIdentifiers;\nexports.getBindingIdentifierPaths = getBindingIdentifierPaths;\nexports.getOuterBindingIdentifierPaths = getOuterBindingIdentifierPaths;\n\nvar _index = require(\"./index\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  getBindingIdentifiers: _getBindingIdentifiers,\n  getOuterBindingIdentifiers: _getOuterBindingIdentifiers,\n  isDeclaration,\n  numericLiteral,\n  unaryExpression\n} = _t;\nconst NORMAL_COMPLETION = 0;\nconst BREAK_COMPLETION = 1;\n\nfunction NormalCompletion(path) {\n  return {\n    type: NORMAL_COMPLETION,\n    path\n  };\n}\n\nfunction BreakCompletion(path) {\n  return {\n    type: BREAK_COMPLETION,\n    path\n  };\n}\n\nfunction getOpposite() {\n  if (this.key === \"left\") {\n    return this.getSibling(\"right\");\n  } else if (this.key === \"right\") {\n    return this.getSibling(\"left\");\n  }\n\n  return null;\n}\n\nfunction addCompletionRecords(path, records, context) {\n  if (path) {\n    records.push(..._getCompletionRecords(path, context));\n  }\n\n  return records;\n}\n\nfunction completionRecordForSwitch(cases, records, context) {\n  let lastNormalCompletions = [];\n\n  for (let i = 0; i < cases.length; i++) {\n    const casePath = cases[i];\n\n    const caseCompletions = _getCompletionRecords(casePath, context);\n\n    const normalCompletions = [];\n    const breakCompletions = [];\n\n    for (const c of caseCompletions) {\n      if (c.type === NORMAL_COMPLETION) {\n        normalCompletions.push(c);\n      }\n\n      if (c.type === BREAK_COMPLETION) {\n        breakCompletions.push(c);\n      }\n    }\n\n    if (normalCompletions.length) {\n      lastNormalCompletions = normalCompletions;\n    }\n\n    records.push(...breakCompletions);\n  }\n\n  records.push(...lastNormalCompletions);\n  return records;\n}\n\nfunction normalCompletionToBreak(completions) {\n  completions.forEach(c => {\n    c.type = BREAK_COMPLETION;\n  });\n}\n\nfunction replaceBreakStatementInBreakCompletion(completions, reachable) {\n  completions.forEach(c => {\n    if (c.path.isBreakStatement({\n      label: null\n    })) {\n      if (reachable) {\n        c.path.replaceWith(unaryExpression(\"void\", numericLiteral(0)));\n      } else {\n        c.path.remove();\n      }\n    }\n  });\n}\n\nfunction getStatementListCompletion(paths, context) {\n  const completions = [];\n\n  if (context.canHaveBreak) {\n    let lastNormalCompletions = [];\n\n    for (let i = 0; i < paths.length; i++) {\n      const path = paths[i];\n      const newContext = Object.assign({}, context, {\n        inCaseClause: false\n      });\n\n      if (path.isBlockStatement() && (context.inCaseClause || context.shouldPopulateBreak)) {\n        newContext.shouldPopulateBreak = true;\n      } else {\n        newContext.shouldPopulateBreak = false;\n      }\n\n      const statementCompletions = _getCompletionRecords(path, newContext);\n\n      if (statementCompletions.length > 0 && statementCompletions.every(c => c.type === BREAK_COMPLETION)) {\n        if (lastNormalCompletions.length > 0 && statementCompletions.every(c => c.path.isBreakStatement({\n          label: null\n        }))) {\n          normalCompletionToBreak(lastNormalCompletions);\n          completions.push(...lastNormalCompletions);\n\n          if (lastNormalCompletions.some(c => c.path.isDeclaration())) {\n            completions.push(...statementCompletions);\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n\n          replaceBreakStatementInBreakCompletion(statementCompletions, false);\n        } else {\n          completions.push(...statementCompletions);\n\n          if (!context.shouldPopulateBreak) {\n            replaceBreakStatementInBreakCompletion(statementCompletions, true);\n          }\n        }\n\n        break;\n      }\n\n      if (i === paths.length - 1) {\n        completions.push(...statementCompletions);\n      } else {\n        lastNormalCompletions = [];\n\n        for (let i = 0; i < statementCompletions.length; i++) {\n          const c = statementCompletions[i];\n\n          if (c.type === BREAK_COMPLETION) {\n            completions.push(c);\n          }\n\n          if (c.type === NORMAL_COMPLETION) {\n            lastNormalCompletions.push(c);\n          }\n        }\n      }\n    }\n  } else if (paths.length) {\n    for (let i = paths.length - 1; i >= 0; i--) {\n      const pathCompletions = _getCompletionRecords(paths[i], context);\n\n      if (pathCompletions.length > 1 || pathCompletions.length === 1 && !pathCompletions[0].path.isVariableDeclaration()) {\n        completions.push(...pathCompletions);\n        break;\n      }\n    }\n  }\n\n  return completions;\n}\n\nfunction _getCompletionRecords(path, context) {\n  let records = [];\n\n  if (path.isIfStatement()) {\n    records = addCompletionRecords(path.get(\"consequent\"), records, context);\n    records = addCompletionRecords(path.get(\"alternate\"), records, context);\n  } else if (path.isDoExpression() || path.isFor() || path.isWhile() || path.isLabeledStatement()) {\n    return addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isProgram() || path.isBlockStatement()) {\n    return getStatementListCompletion(path.get(\"body\"), context);\n  } else if (path.isFunction()) {\n    return _getCompletionRecords(path.get(\"body\"), context);\n  } else if (path.isTryStatement()) {\n    records = addCompletionRecords(path.get(\"block\"), records, context);\n    records = addCompletionRecords(path.get(\"handler\"), records, context);\n  } else if (path.isCatchClause()) {\n    return addCompletionRecords(path.get(\"body\"), records, context);\n  } else if (path.isSwitchStatement()) {\n    return completionRecordForSwitch(path.get(\"cases\"), records, context);\n  } else if (path.isSwitchCase()) {\n    return getStatementListCompletion(path.get(\"consequent\"), {\n      canHaveBreak: true,\n      shouldPopulateBreak: false,\n      inCaseClause: true\n    });\n  } else if (path.isBreakStatement()) {\n    records.push(BreakCompletion(path));\n  } else {\n    records.push(NormalCompletion(path));\n  }\n\n  return records;\n}\n\nfunction getCompletionRecords() {\n  const records = _getCompletionRecords(this, {\n    canHaveBreak: false,\n    shouldPopulateBreak: false,\n    inCaseClause: false\n  });\n\n  return records.map(r => r.path);\n}\n\nfunction getSibling(key) {\n  return _index.default.get({\n    parentPath: this.parentPath,\n    parent: this.parent,\n    container: this.container,\n    listKey: this.listKey,\n    key: key\n  }).setContext(this.context);\n}\n\nfunction getPrevSibling() {\n  return this.getSibling(this.key - 1);\n}\n\nfunction getNextSibling() {\n  return this.getSibling(this.key + 1);\n}\n\nfunction getAllNextSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(++_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(++_key);\n  }\n\n  return siblings;\n}\n\nfunction getAllPrevSiblings() {\n  let _key = this.key;\n  let sibling = this.getSibling(--_key);\n  const siblings = [];\n\n  while (sibling.node) {\n    siblings.push(sibling);\n    sibling = this.getSibling(--_key);\n  }\n\n  return siblings;\n}\n\nfunction get(key, context = true) {\n  if (context === true) context = this.context;\n  const parts = key.split(\".\");\n\n  if (parts.length === 1) {\n    return this._getKey(key, context);\n  } else {\n    return this._getPattern(parts, context);\n  }\n}\n\nfunction _getKey(key, context) {\n  const node = this.node;\n  const container = node[key];\n\n  if (Array.isArray(container)) {\n    return container.map((_, i) => {\n      return _index.default.get({\n        listKey: key,\n        parentPath: this,\n        parent: node,\n        container: container,\n        key: i\n      }).setContext(context);\n    });\n  } else {\n    return _index.default.get({\n      parentPath: this,\n      parent: node,\n      container: node,\n      key: key\n    }).setContext(context);\n  }\n}\n\nfunction _getPattern(parts, context) {\n  let path = this;\n\n  for (const part of parts) {\n    if (part === \".\") {\n      path = path.parentPath;\n    } else {\n      if (Array.isArray(path)) {\n        path = path[part];\n      } else {\n        path = path.get(part, context);\n      }\n    }\n  }\n\n  return path;\n}\n\nfunction getBindingIdentifiers(duplicates) {\n  return _getBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getOuterBindingIdentifiers(duplicates) {\n  return _getOuterBindingIdentifiers(this.node, duplicates);\n}\n\nfunction getBindingIdentifierPaths(duplicates = false, outerOnly = false) {\n  const path = this;\n  const search = [path];\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    if (!id.node) continue;\n    const keys = _getBindingIdentifiers.keys[id.node.type];\n\n    if (id.isIdentifier()) {\n      if (duplicates) {\n        const _ids = ids[id.node.name] = ids[id.node.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.node.name] = id;\n      }\n\n      continue;\n    }\n\n    if (id.isExportDeclaration()) {\n      const declaration = id.get(\"declaration\");\n\n      if (isDeclaration(declaration)) {\n        search.push(declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if (id.isFunctionDeclaration()) {\n        search.push(id.get(\"id\"));\n        continue;\n      }\n\n      if (id.isFunctionExpression()) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        const child = id.get(key);\n\n        if (Array.isArray(child)) {\n          search.push(...child);\n        } else if (child.node) {\n          search.push(child);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\nfunction getOuterBindingIdentifierPaths(duplicates) {\n  return this.getBindingIdentifierPaths(duplicates, true);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shareCommentsWithSiblings = shareCommentsWithSiblings;\nexports.addComment = addComment;\nexports.addComments = addComments;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  addComment: _addComment,\n  addComments: _addComments\n} = _t;\n\nfunction shareCommentsWithSiblings() {\n  if (typeof this.key === \"string\") return;\n  const node = this.node;\n  if (!node) return;\n  const trailing = node.trailingComments;\n  const leading = node.leadingComments;\n  if (!trailing && !leading) return;\n  const prev = this.getSibling(this.key - 1);\n  const next = this.getSibling(this.key + 1);\n  const hasPrev = Boolean(prev.node);\n  const hasNext = Boolean(next.node);\n\n  if (hasPrev && !hasNext) {\n    prev.addComments(\"trailing\", trailing);\n  } else if (hasNext && !hasPrev) {\n    next.addComments(\"leading\", leading);\n  }\n}\n\nfunction addComment(type, content, line) {\n  _addComment(this.node, type, content, line);\n}\n\nfunction addComments(type, comments) {\n  _addComments(this.node, type, comments);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.explode = explode;\nexports.verify = verify;\nexports.merge = merge;\n\nvar virtualTypes = require(\"./path/lib/virtual-types\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  DEPRECATED_KEYS,\n  FLIPPED_ALIAS_KEYS,\n  TYPES\n} = _t;\n\nfunction explode(visitor) {\n  if (visitor._exploded) return visitor;\n  visitor._exploded = true;\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const parts = nodeType.split(\"|\");\n    if (parts.length === 1) continue;\n    const fns = visitor[nodeType];\n    delete visitor[nodeType];\n\n    for (const part of parts) {\n      visitor[part] = fns;\n    }\n  }\n\n  verify(visitor);\n  delete visitor.__esModule;\n  ensureEntranceObjects(visitor);\n  ensureCallbackArrays(visitor);\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const wrapper = virtualTypes[nodeType];\n    if (!wrapper) continue;\n    const fns = visitor[nodeType];\n\n    for (const type of Object.keys(fns)) {\n      fns[type] = wrapCheck(wrapper, fns[type]);\n    }\n\n    delete visitor[nodeType];\n\n    if (wrapper.types) {\n      for (const type of wrapper.types) {\n        if (visitor[type]) {\n          mergePair(visitor[type], fns);\n        } else {\n          visitor[type] = fns;\n        }\n      }\n    } else {\n      mergePair(visitor, fns);\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    const fns = visitor[nodeType];\n    let aliases = FLIPPED_ALIAS_KEYS[nodeType];\n    const deprecatedKey = DEPRECATED_KEYS[nodeType];\n\n    if (deprecatedKey) {\n      console.trace(`Visitor defined for ${nodeType} but it has been renamed to ${deprecatedKey}`);\n      aliases = [deprecatedKey];\n    }\n\n    if (!aliases) continue;\n    delete visitor[nodeType];\n\n    for (const alias of aliases) {\n      const existing = visitor[alias];\n\n      if (existing) {\n        mergePair(existing, fns);\n      } else {\n        visitor[alias] = Object.assign({}, fns);\n      }\n    }\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (shouldIgnoreKey(nodeType)) continue;\n    ensureCallbackArrays(visitor[nodeType]);\n  }\n\n  return visitor;\n}\n\nfunction verify(visitor) {\n  if (visitor._verified) return;\n\n  if (typeof visitor === \"function\") {\n    throw new Error(\"You passed `traverse()` a function when it expected a visitor object, \" + \"are you sure you didn't mean `{ enter: Function }`?\");\n  }\n\n  for (const nodeType of Object.keys(visitor)) {\n    if (nodeType === \"enter\" || nodeType === \"exit\") {\n      validateVisitorMethods(nodeType, visitor[nodeType]);\n    }\n\n    if (shouldIgnoreKey(nodeType)) continue;\n\n    if (TYPES.indexOf(nodeType) < 0) {\n      throw new Error(`You gave us a visitor for the node type ${nodeType} but it's not a valid type`);\n    }\n\n    const visitors = visitor[nodeType];\n\n    if (typeof visitors === \"object\") {\n      for (const visitorKey of Object.keys(visitors)) {\n        if (visitorKey === \"enter\" || visitorKey === \"exit\") {\n          validateVisitorMethods(`${nodeType}.${visitorKey}`, visitors[visitorKey]);\n        } else {\n          throw new Error(\"You passed `traverse()` a visitor object with the property \" + `${nodeType} that has the invalid property ${visitorKey}`);\n        }\n      }\n    }\n  }\n\n  visitor._verified = true;\n}\n\nfunction validateVisitorMethods(path, val) {\n  const fns = [].concat(val);\n\n  for (const fn of fns) {\n    if (typeof fn !== \"function\") {\n      throw new TypeError(`Non-function found defined in ${path} with type ${typeof fn}`);\n    }\n  }\n}\n\nfunction merge(visitors, states = [], wrapper) {\n  const rootVisitor = {};\n\n  for (let i = 0; i < visitors.length; i++) {\n    const visitor = visitors[i];\n    const state = states[i];\n    explode(visitor);\n\n    for (const type of Object.keys(visitor)) {\n      let visitorType = visitor[type];\n\n      if (state || wrapper) {\n        visitorType = wrapWithStateOrWrapper(visitorType, state, wrapper);\n      }\n\n      const nodeVisitor = rootVisitor[type] = rootVisitor[type] || {};\n      mergePair(nodeVisitor, visitorType);\n    }\n  }\n\n  return rootVisitor;\n}\n\nfunction wrapWithStateOrWrapper(oldVisitor, state, wrapper) {\n  const newVisitor = {};\n\n  for (const key of Object.keys(oldVisitor)) {\n    let fns = oldVisitor[key];\n    if (!Array.isArray(fns)) continue;\n    fns = fns.map(function (fn) {\n      let newFn = fn;\n\n      if (state) {\n        newFn = function (path) {\n          return fn.call(state, path, state);\n        };\n      }\n\n      if (wrapper) {\n        newFn = wrapper(state.key, key, newFn);\n      }\n\n      if (newFn !== fn) {\n        newFn.toString = () => fn.toString();\n      }\n\n      return newFn;\n    });\n    newVisitor[key] = fns;\n  }\n\n  return newVisitor;\n}\n\nfunction ensureEntranceObjects(obj) {\n  for (const key of Object.keys(obj)) {\n    if (shouldIgnoreKey(key)) continue;\n    const fns = obj[key];\n\n    if (typeof fns === \"function\") {\n      obj[key] = {\n        enter: fns\n      };\n    }\n  }\n}\n\nfunction ensureCallbackArrays(obj) {\n  if (obj.enter && !Array.isArray(obj.enter)) obj.enter = [obj.enter];\n  if (obj.exit && !Array.isArray(obj.exit)) obj.exit = [obj.exit];\n}\n\nfunction wrapCheck(wrapper, fn) {\n  const newFn = function (path) {\n    if (wrapper.checkPath(path)) {\n      return fn.apply(this, arguments);\n    }\n  };\n\n  newFn.toString = () => fn.toString();\n\n  return newFn;\n}\n\nfunction shouldIgnoreKey(key) {\n  if (key[0] === \"_\") return true;\n  if (key === \"enter\" || key === \"exit\" || key === \"shouldSkip\") return true;\n\n  if (key === \"denylist\" || key === \"noScope\" || key === \"skipKeys\" || key === \"blacklist\") {\n    return true;\n  }\n\n  return false;\n}\n\nfunction mergePair(dest, src) {\n  for (const key of Object.keys(src)) {\n    dest[key] = [].concat(dest[key] || [], src[key]);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nclass Hub {\n  getCode() {}\n\n  getScope() {}\n\n  addHelper() {\n    throw new Error(\"Helpers are not supported by the default hub.\");\n  }\n\n  buildError(node, msg, Error = TypeError) {\n    return new Error(msg);\n  }\n\n}\n\nexports.default = Hub;"],"sourceRoot":""}