{"version":3,"sources":["../../src/main.js","../../src/index.tsx"],"names":["copyTextToClipboard","text","cb","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","isCopy","execCommand","err","removeChild","removeAllRanges","addRange","Split","state","dragging","warpper","paneNumber","startX","startY","move","target","boxWidth","boxHeight","preWidth","nextWidth","preHeight","nextHeight","preSize","nextSize","componentWillUnmount","this","removeEvent","window","onMouseDown","env","prevTarget","nextTarget","onDragging","mode","x","y","onDragEnd","render","prefixCls","className","children","visiable","lineBar","disable","other","cls","child","React","ref","node","props","Object","element","visiableBar","idx","barProps","Component","defaultProps"],"mappings":";0JAyBe,SAASA,EAAoBC,EAAMC,GAChD,IAAMC,EAAKC,SAASC,cAAc,YAClCF,EAAGG,MAAQL,EACXE,EAAGI,aAAa,WAAY,IAC5BJ,EAAGK,MAAQ,CACTC,SAAU,WACVC,KAAM,WAERN,SAASO,KAAKC,YAAYT,GAC1B,IAAMU,EAAWT,SAASU,eAAeC,WAAa,GAAIX,SAASU,eAAeE,WAAW,GAC7Fb,EAAGc,SACH,IAAIC,GAAS,EACb,IAEEA,IADmBd,SAASe,YAAY,QAExC,MAAOC,GACPF,GAAS,EAEXd,SAASO,KAAKU,YAAYlB,GACtBU,GAAYT,SAASU,eACvBV,SAASU,eAAeQ,kBACxBlB,SAASU,eAAeS,SAASV,IAEnCX,GAAMA,EAAGgB,G,oQCZUM,E,YAyBnB,cAA+B,aAC7B,wBApBKC,MAAoB,CACzBC,UAAU,GAkBmB,EAhBxBC,aAgBwB,IAfxBC,gBAewB,IAdxBC,YAcwB,IAbxBC,YAawB,IAZxBC,UAYwB,IAXxBC,YAWwB,IATxBC,cASwB,IARxBC,eAQwB,IAPxBC,cAOwB,IANxBC,eAMwB,IALxBC,eAKwB,IAJxBC,gBAIwB,IAFxBC,aAEwB,IADxBC,cACwB,EAE7B,YAAiB,6BAAjB,IACA,aAAkB,8BAAlB,IAH6B,E,4CAKxBC,qBAAP,WACEC,KAAA,e,EAEMC,YAAR,WACEC,uCAAwCF,KAAxCE,eACAA,qCAAsCF,KAAtCE,e,EAEFC,0BACE,GAAKC,EAAD,QAAgBJ,KAApB,SAGAA,KAAA,aACAA,KAAA,OAAcI,EAAd,QACAJ,KAAA,OAAcI,EAAd,QACAJ,KAAA,QACAA,KAAA,OAAeI,EAAD,OAAd,WACA,IAAMC,EAAaL,KAAKV,OAAxB,uBACMgB,EAAaN,KAAKV,OAAxB,mBACAU,KAAA,SAAgBA,KAAKf,QAArB,YACAe,KAAA,UAAiBA,KAAKf,QAAtB,aACA,IACEe,KAAA,SAAgBK,EAAhB,YACAL,KAAA,UAAiBK,EAAjB,cAEF,IACEL,KAAA,UAAiBM,EAAjB,YACAN,KAAA,WAAkBM,EAAlB,cAEFJ,oCAAqCF,KAArCE,YACAA,kCAAmCF,KAAnCE,cACAF,KAAA,SAAc,CAAEhB,UAAU,M,EAE5BuB,uBACE,GAAKP,KAAL,MAGKA,KAAKjB,MAAV,UACEiB,KAAA,SAAc,CAAEhB,UAAU,IAE5B,MAA6BgB,KAA7B,MAAQQ,EAAR,OAAcD,EAAd,aACMD,EAAaN,KAAKV,OAAxB,mBACMe,EAAaL,KAAKV,OAAxB,uBACMmB,EAAKL,EAAD,QAA8BJ,KAAxC,OACMU,EAAKN,EAAD,QAA8BJ,KAAxC,OAGA,GAFAA,KAAA,UACAA,KAAA,WACA,eAAIQ,EAAuB,CAGzB,GAFAR,KAAA,QAAeA,KAAKP,SAAWgB,GAAhB,EAAyBT,KAAKP,SAA9B,EAAf,EACAO,KAAA,SAAgBA,KAAKN,UAAYe,GAAjB,EAA0BT,KAAKN,UAA/B,EAAhB,EACqB,IAAjBM,KAAKH,SAAT,IAA0BG,KAAKF,SAC7B,OAEFE,KAAA,aAAgBA,KAAKH,QAAUG,KAAf,cAAwCA,KAAKH,QAAUG,KAAxD,UACfA,KAAA,cAAiBA,KAAKF,SAAWE,KAAhB,cAAyCA,KAAKF,SAAWE,KAA1D,UACZK,GAAJ,IACEA,cAA4BL,KAA5BK,YACAC,cAA4BN,KAA5BM,cAGJ,GAAIE,gBAAuBR,KAAKL,UAAYe,GAAxCF,GAAkDR,KAAKJ,WAAac,GAAxE,EAAgF,CAK9E,GAJAV,KAAA,QAAeA,KAAKL,UAAYe,GAAjB,EAA0BV,KAAKL,UAA/B,EAAf,EACAK,KAAA,SAAgBA,KAAKJ,WAAac,GAAlB,EAA2BV,KAAKJ,WAAhC,EAAhB,EACAI,KAAA,aAAgBA,KAAKH,QAAUG,KAAf,eAAyCA,KAAKH,QAAUG,KAAzD,WACfA,KAAA,cAAiBA,KAAKF,SAAWE,KAAhB,eAA0CA,KAAKF,SAAWE,KAA3D,WACK,IAAjBA,KAAKH,SAAT,IAA0BG,KAAKF,SAC7B,OAEEO,GAAJ,IACEA,eAA6BL,KAA7BK,YACAC,eAA6BN,KAA7BM,cAGJC,GAAcA,EAAWP,KAAD,QAAeA,KAAf,SAA8BA,KAAtDO,c,EAEFI,qBACE,IAAQA,EAAcX,KAAtB,gBACAA,KAAA,QACAW,GAAaA,EAAUX,KAAD,QAAeA,KAAf,SAA8BA,KAApDW,YACAX,KAAA,cACAA,KAAA,SAAc,CAAEhB,UAAU,K,EAE5B4B,kBAAS,WACP,EAA8GZ,KAA9G,MAAQa,EAAR,YAAmBC,EAAnB,YAA8BC,EAA9B,WAAwCP,EAAxC,OAA8CQ,EAA9C,WAAwDC,EAAxD,UAAiEC,EAAjE,UAAoGC,GAApG,2CACQnC,EAAagB,KAArB,eACMoB,EAAM,CAACP,EAAWC,EAAcD,EAA1B,MAA+C7B,EAAW,WAA1D,gCAAZ,OAGMqC,EAAQC,qBAAd,GACA,OACE,iCAAKR,UAAWM,GAAhB,GAAgCG,IAAK,SAAAC,GAAI,OAAI,UAAJ,GAAzC,SACG,oBAA0B,cACzB,IAAMC,EAAQC,OAAA,UAAkBC,EAAlB,MAAiC,CAC7Cb,UAAW,CAAID,EAAJ,QAAsBc,QAAtB,qCADkC,OAI7C7D,MAAO,OAAF,IAAE,CAAF,GAAO6D,QAAP,SAEDC,GAAeZ,OAAsBA,GAAYA,WAAmBa,EAAtD,KAApB,EACMC,EAAW,CACfhB,UAAW,CAAID,EAAJ,OACXI,EAAaJ,EAAN,YADI,KAEVI,EAFU,KAEGJ,EAAd,cAFW,kCAWb,QALIK,OAAqBA,GAAWA,WAAkBW,EAAtD,MACEC,YAAqB,CAACA,EAAD,UAAqBZ,EAAU,UAA/B,gCAArBY,QAKA,eAAC,IAAD,oBACGD,UAA4B,0CAA4C,qBAAK1B,YAAa,qBAA4B0B,EAA5B,MAC1FP,kCAFH,c,GA7IuBA,IAAMS,WAApBjD,EACLkD,aAA2B,CACvCnB,UADuC,UAEvCG,UAFuC,EAGvCR,KAAM,e","file":"static/js/vendors-uiwjs.0283e5dc.chunk.js","sourcesContent":["/**\n * *** This styling is an extra step which is likely not required. ***\n * https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard\n * \n * Why is it here? To ensure:\n * \n * 1. the element is able to have focus and selection.\n * 2. if element was to flash render it has minimal visual impact.\n * 3. less flakyness with selection and copying which **might** occur if\n *     the textarea element is not visible.\n *\n *   The likelihood is the element won't even render, not even a flash,\n *   so some of these are just precautions. However in IE the element\n *   is visible whilst the popup box asking the user for permission for\n *   the web page to copy to the clipboard.\n *  \n *   Place in top-left corner of screen regardless of scroll position.\n *\n * @typedef CopyTextToClipboard\n * @property {(text: string, method?: (isCopy: boolean) => void) => void} void\n * @returns {void}\n * \n * @param {string} text \n * @param {CopyTextToClipboard} cb \n */\nexport default function copyTextToClipboard(text, cb) {\n  const el = document.createElement('textarea');\n  el.value = text;\n  el.setAttribute('readonly', '');\n  el.style = {\n    position: 'absolute',\n    left: '-9999px',\n  }\n  document.body.appendChild(el);\n  const selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n  el.select();\n  let isCopy = false;\n  try {\n    const successful = document.execCommand('copy');\n    isCopy = !!successful;\n  } catch (err) {\n    isCopy = false;\n  }\n  document.body.removeChild(el);\n  if (selected && document.getSelection) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n  }\n  cb && cb(isCopy);\n};\n","import React from 'react';\nimport './style/index.less';\n\nexport interface SplitProps extends  Omit<React.HTMLAttributes<HTMLDivElement>, 'onDragEnd'> {\n  style?: React.CSSProperties;\n  className?: string;\n  prefixCls?: string;\n  /**\n   * 拖拽宽度/高度变化回调函数，宽度或者高度根据 mode 参数来确定\n   */\n  onDragging?: (preSize: number, nextSize: number, paneNumber: number) => void;\n  /**\n   * 拖拽结束的回调函数\n   */\n  onDragEnd?: (preSize: number, nextSize: number, paneNumber: number) => void;\n  /**\n   * 设置拖拽的工具条，为线条样式。\n   */\n  lineBar?: boolean;\n  /**\n   * 设置拖拽的工具条，是否可见\n   */\n  visiable?: boolean | number[];\n  /**\n   * 设置拖拽的工具条，禁用\n   */\n  disable?: boolean | number[];\n  /**\n   * 类型，可选值为 `horizontal` 或 `vertical`\n   */\n  mode?: 'horizontal' | 'vertical';\n}\nexport interface SplitState {\n  dragging: boolean;\n}\n\nexport default class Split extends React.Component<SplitProps, SplitState> {\n  public static defaultProps: SplitProps = {\n    prefixCls: 'w-split',\n    visiable: true,\n    mode: 'horizontal',\n  }\n  public state: SplitState = {\n    dragging: false,\n  }\n  public warpper!: HTMLDivElement | null;\n  public paneNumber!: number;\n  public startX!: number;\n  public startY!: number;\n  public move!: boolean;\n  public target!: HTMLDivElement;\n\n  public boxWidth!: number;\n  public boxHeight!: number;\n  public preWidth!: number;\n  public nextWidth!: number;\n  public preHeight!: number;\n  public nextHeight!: number;\n\n  public preSize!: number;\n  public nextSize!: number;\n  constructor(props: SplitProps) {\n    super(props);\n    this.onDragEnd = this.onDragEnd.bind(this);\n    this.onDragging = this.onDragging.bind(this);\n  }\n  public componentWillUnmount() {\n    this.removeEvent();\n  }\n  private removeEvent() {\n    window.removeEventListener('mousemove', this.onDragging, false);\n    window.removeEventListener('mouseup', this.onDragEnd, false);\n  }\n  onMouseDown(paneNumber: number, env: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!env.target || !this.warpper) {\n      return;\n    }\n    this.paneNumber = paneNumber;\n    this.startX = env.clientX;\n    this.startY = env.clientY;\n    this.move = true;\n    this.target = (env.target as HTMLDivElement).parentNode as HTMLDivElement;\n    const prevTarget = this.target.previousElementSibling;\n    const nextTarget = this.target.nextElementSibling;\n    this.boxWidth = this.warpper.clientWidth;\n    this.boxHeight = this.warpper.clientHeight;\n    if (prevTarget) {\n      this.preWidth = prevTarget.clientWidth;\n      this.preHeight = prevTarget.clientHeight;\n    }\n    if (nextTarget) {\n      this.nextWidth = nextTarget.clientWidth;\n      this.nextHeight = nextTarget.clientHeight;\n    }\n    window.addEventListener('mousemove', this.onDragging);\n    window.addEventListener('mouseup', this.onDragEnd, false);\n    this.setState({ dragging: true });\n  }\n  onDragging(env: Event) {\n    if (!this.move) {\n      return;\n    }\n    if (!this.state.dragging) {\n      this.setState({ dragging: true });\n    }\n    const { mode, onDragging } = this.props;\n    const nextTarget = this.target.nextElementSibling as HTMLDivElement;\n    const prevTarget = this.target.previousElementSibling as HTMLDivElement;\n    const x = (env as MouseEvent).clientX - this.startX;\n    const y = (env as MouseEvent).clientY - this.startY;\n    this.preSize = 0;\n    this.nextSize = 0;\n    if (mode === 'horizontal') {\n      this.preSize = this.preWidth + x > -1 ? this.preWidth + x : 0;\n      this.nextSize = this.nextWidth - x > -1 ? this.nextWidth - x : 0;\n      if (this.preSize === 0 || this.nextSize === 0) {\n        return;\n      }\n      this.preSize = (this.preSize / this.boxWidth >= 1 ? 1 : this.preSize / this.boxWidth) * 100;\n      this.nextSize = (this.nextSize / this.boxWidth >= 1 ? 1 : this.nextSize / this.boxWidth) * 100;\n      if (prevTarget && nextTarget) {\n        prevTarget.style.width = `${this.preSize}%`;\n        nextTarget.style.width = `${this.nextSize}%`;\n      }\n    }\n    if (mode === 'vertical' && this.preHeight + y > -1 && this.nextHeight - y > -1) {\n      this.preSize = this.preHeight + y > -1 ? this.preHeight + y : 0;\n      this.nextSize = this.nextHeight - y > -1 ? this.nextHeight - y : 0;\n      this.preSize = (this.preSize / this.boxHeight >= 1 ? 1 : this.preSize / this.boxHeight) * 100;\n      this.nextSize = (this.nextSize / this.boxHeight >= 1 ? 1 : this.nextSize / this.boxHeight) * 100;\n      if (this.preSize === 0 || this.nextSize === 0) {\n        return;\n      }\n      if (prevTarget && nextTarget) {\n        prevTarget.style.height = `${this.preSize}%`;\n        nextTarget.style.height = `${this.nextSize}%`;\n      }\n    }\n    onDragging && onDragging(this.preSize, this.nextSize, this.paneNumber);\n  }\n  onDragEnd() {\n    const { onDragEnd } = this.props;\n    this.move = false;\n    onDragEnd && onDragEnd(this.preSize, this.nextSize, this.paneNumber);\n    this.removeEvent();\n    this.setState({ dragging: false });\n  }\n  render() {\n    const { prefixCls, className, children, mode, visiable, lineBar, disable, onDragEnd, onDragging, ...other } = this.props;\n    const { dragging } = this.state;\n    const cls = [prefixCls, className, `${prefixCls}-${mode}`, dragging ? 'dragging' : null].filter(Boolean)\n    .join(' ')\n    .trim();\n    const child = React.Children.toArray(children);\n    return (\n      <div className={cls} {...other} ref={node => this.warpper = node}>\n        {React.Children.map(child, (element: any, idx: number) => {\n          const props = Object.assign({}, element.props, {\n            className: [`${prefixCls}-pane`, element.props.className].filter(Boolean)\n            .join(' ')\n            .trim(),\n            style: { ...element.props.style },\n          });\n          const visiableBar = (visiable === true || (visiable && visiable.includes((idx + 1) as never))) || false;\n          const barProps = {\n            className: [`${prefixCls}-bar`, \n            lineBar ? `${prefixCls}-line-bar` : null,\n            !lineBar ? `${prefixCls}-large-bar` : null].filter(Boolean)\n            .join(' ')\n            .trim(),\n          };\n          if (disable === true || (disable && disable.includes((idx + 1) as never))) {\n            barProps.className = [barProps.className, disable ? 'disable' : null].filter(Boolean)\n            .join(' ')\n            .trim();\n          }\n          return (\n            <React.Fragment>\n              {idx !== 0 && visiableBar && React.createElement('div', { ...barProps }, <div onMouseDown={this.onMouseDown.bind(this, idx + 1)} />)}\n              {React.cloneElement(element, { ...props })}\n            </React.Fragment>\n          );\n        })}\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}