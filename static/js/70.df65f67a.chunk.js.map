{"version":3,"sources":["../src/withMap/README.md"],"names":[],"mappings":"sIAAA,OAAe","file":"static/js/70.df65f67a.chunk.js","sourcesContent":["export default \"withMap\\n===\\n\\n一个高阶组件，用于将当前上下文的 `BMap.Map` 实例注入到目标组件中，主要用于实现对地图组件的自定义控制。\\n\\n### 基本用法\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { withMap, APILoader } from '@uiw/react-baidu-map';\\n\\nclass ExampleMap extends React.Component {\\n  componentDidMount() {\\n    const { BMap, map, container } = this.props;\\n    // 启用滚轮放大缩小，默认禁用\\n    // map.enableScrollWheelZoom();\\n    // 添加地图类型控件\\n    map.addControl(new BMap.MapTypeControl({\\n      mapTypes:[\\n        BMAP_NORMAL_MAP,\\n        BMAP_HYBRID_MAP\\n      ]\\n    }));\\n    const point = new BMap.Point(121.458965, 31.238775);\\n    const marker = new BMap.Marker(point);      // 创建标注\\n    map.addOverlay(marker);                     // 将标注添加到地图中\\n    marker.setAnimation(BMAP_ANIMATION_BOUNCE); // 跳动的动画\\n\\n    // 添加自定义菜单\\n    const menu = new BMap.ContextMenu()\\n    const menuItem = [\\n      { text: '放大', callback: () => map.zoomIn() },\\n      { text: '缩小', callback: () => map.zoomOut() },\\n    ]\\n    for (let i = 0; i < menuItem.length; i++) {\\n      menu.addItem(new BMap.MenuItem(menuItem[i].text, menuItem[i].callback, 100));\\n    }\\n    map.addContextMenu(menu);\\n  }\\n  render() {\\n    return null;\\n  }\\n}\\n\\nconst CustomWithMap = withMap(ExampleMap);\\n\\nconst Demo = () => {\\n  return (\\n    <div style={{ width: '100%', height: '300px' }}>\\n      <APILoader akay=\\\"GTrnXa5hwXGwgQnTBG28SHBubErMKm3f\\\">\\n        <CustomWithMap\\n          enableScrollWheelZoom\\n          zoom={8}\\n          ref={(instance) => {\\n            console.log('instance>', instance);\\n          }}\\n        />\\n      </APILoader>\\n    </div>\\n  )\\n};\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n\\n高阶组件 `withMap` 可以作为 `Map` 组件来使用，继承 `Map` 可以默认传递 `Map` 的属性，相关属性参考 [`<Map>`](#/map)。\";"],"sourceRoot":""}