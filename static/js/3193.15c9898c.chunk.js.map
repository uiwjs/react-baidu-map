{"version":3,"file":"static/js/3193.15c9898c.chunk.js","mappings":"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,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QC1GWC,EAA4B,CACvC,EAAG,SACH,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,UC1BA,SAASC,EAAUxxB,GACxB,IAAMxD,EACiB,kBAAdwD,EAAyBA,EAAU/N,WAAW,GAAK+N,EAE5D,OAAOxD,GAAQ,IAAMA,GAAQ,EAC/B,CCLO,SAASi1B,EAAczxB,GAC5B,IAAMxD,EACiB,kBAAdwD,EAAyBA,EAAU/N,WAAW,GAAK+N,EAE5D,OACGxD,GAAQ,IAAcA,GAAQ,KAC9BA,GAAQ,IAAcA,GAAQ,IAC9BA,GAAQ,IAAcA,GAAQ,EAEnC,CCNO,SAASk1B,EAAiB1xB,GAC/B,OCJK,SAAwBA,GAC7B,IAAMxD,EACiB,kBAAdwD,EAAyBA,EAAU/N,WAAW,GAAK+N,EAE5D,OACGxD,GAAQ,IAAMA,GAAQ,KACtBA,GAAQ,IAAMA,GAAQ,EAE3B,CDJSm1B,CAAe3xB,IAAcwxB,EAAUxxB,EAChD,eEAM3Q,EAAeD,OAAOC,aAGtBo5B,EAAW,CACf,GAEA,+DAEA,iEAEA,6CAEA,+CAEA,2CAEA,oDAEA,gFASK,SAASmJ,EAActjC,GAAqB,IAW7C+gB,EAEAwiB,EAb+Bp+B,EAAU,UAAH,6CAAG,CAAC,EACxCq+B,EAC0B,kBAAvBr+B,EAAQq+B,WACXr+B,EAAQq+B,WAAW7/B,WAAW,GAC9BwB,EAAQq+B,WAERhjC,EAAS,GACXoR,EAAQ,EACR9K,GAAS,EACT28B,EAAQ,GAMRt+B,EAAQ8B,WACN,UAAW9B,EAAQ8B,UAAY,WAAY9B,EAAQ8B,UACrDs8B,EAASp+B,EAAQ8B,SAASs8B,OAC1BxiB,EAAQ5b,EAAQ8B,SAASC,OAEzB6Z,EAAQ5b,EAAQ8B,UAIpB,IAMIyK,EANAvK,GAAQ4Z,EAAQA,EAAM5Z,KAAO,IAAM,EACnCP,GAAUma,EAAQA,EAAMna,OAAS,IAAM,EAGvC2d,EAAWyC,IAOf,IAFApV,MAESA,GAAS5R,EAAMjC,QAQtB,GANkB,KAAd2T,IACF9K,GAAU28B,EAASA,EAAOz8B,GAAS,IAAM,GAKzB,MAFlB4K,EAAY1R,EAAM2D,WAAWiO,IAEG,CAC9B,IAAM8xB,EAAY1jC,EAAM2D,WAAWiO,EAAQ,GAG3C,GACgB,IAAd8xB,GACc,KAAdA,GACc,KAAdA,GACc,KAAdA,GACc,KAAdA,GACc,KAAdA,GACA7qB,OAAOipB,MAAM4B,IACZF,GAAcE,IAAcF,EAC7B,CAIAC,GAAS1iC,EAAa2Q,GACtB9K,IACA,QACF,CAEA,IAAMM,EAAQ0K,EAAQ,EAClB+xB,EAAQz8B,EACRK,EAAML,EAENxF,OAAI,EAER,GAAkB,KAAdgiC,EAA4B,CAE9Bn8B,IAAQo8B,EAGR,IAAMD,EAAY1jC,EAAM2D,WAAW4D,GAEjB,KAAdm8B,GAA4C,MAAdA,GAEhChiC,EAAO,cACP6F,IAAQo8B,GAGRjiC,EAAO,SAEX,MAEEA,EAAO,QAGT,IAAIkiC,EAA+B,GAC/B1rB,EAAqB,GACrBiC,EAAa,GAIX3d,EACK,UAATkF,EACI0hC,EACS,YAAT1hC,EACAwhC,EACAC,EAIN,IAFA57B,MAESA,GAAOvH,EAAMjC,QAAQ,CAC5B,IAAM2lC,EAAY1jC,EAAM2D,WAAW4D,GAEnC,IAAK/K,EAAKknC,GACR,MAGFvpB,GAAcpZ,EAAa2iC,GAKd,UAAThiC,GAAoBshC,EAAwBt5B,SAASyQ,KACvDypB,EAA+BzpB,EAE/BjC,GAAqBooB,EAAAA,EAAAA,GAA8BnmB,GAEvD,CAEA,IAAI0pB,EAAuC,KAA1B7jC,EAAM2D,WAAW4D,GAElC,GAAIs8B,EAAY,CACdt8B,IAEA,IAAMu8B,EACK,UAATpiC,IAAmB4+B,EAAAA,EAAAA,GAA8BnmB,GAE/C2pB,IACFF,EAA+BzpB,EAC/BjC,EAAqB4rB,EAEzB,CAEA,IAAIC,EAAO,EAAIx8B,EAAML,EACjByN,EAAY,GAEhB,GAAKkvB,IAAwC,IAA1B1+B,EAAQ6+B,cAEpB,GAAK7pB,EAML,GAAa,UAATzY,EAAkB,CAG3B,GAAImiC,IAAe3rB,EACjB+rB,EAAQ,EAAyB,QAWjC,GAPIL,IAAiCzpB,IAEnC4pB,EAAO,GADPx8B,EAAMo8B,EAAQC,EAA6B7lC,QAC1B4lC,EACjBE,GAAa,IAIVA,EAAY,CACf,IAAM/7B,EAAS87B,EACX,EACA,EAEJ,GAAIz+B,EAAQ++B,UAAW,CACrB,IAAMR,EAAY1jC,EAAM2D,WAAW4D,GAEjB,KAAdm8B,GACFO,EAAQn8B,EAAQi8B,GAChB7rB,EAAqB,IACZkrB,EAAiBM,GAC1BxrB,EAAqB,GAErB+rB,EAAQn8B,EAAQi8B,EAEpB,MACEE,EAAQn8B,EAAQi8B,EAEpB,CAGFpvB,EAAYuD,CACd,KAAO,CACA2rB,GAGHI,EAAQ,EAAkCF,GAK5C,IAAII,EAAgBtrB,OAAO7X,SACzBmZ,EACS,gBAATzY,EAAyB,GAAK,IAKhC,GAAI0iC,EAAWD,GACbF,EAAQ,EAA8BF,GACtCpvB,EAAY5T,EAAa,YACpB,GAAIojC,KAAiBlB,EAG1BgB,EAAQ,EAA8BF,GACtCpvB,EAAYsuB,EAA0BkB,OACjC,CAEL,IAAI5H,EAAS,GAGT8H,EAAWF,IACbF,EAAQ,EAA8BF,GAIpCI,EAAgB,QAElB5H,GAAUx7B,GADVojC,GAAiB,SACyB,GAAgB,OAC1DA,EAAgB,MAA0B,KAAhBA,GAG5BxvB,EAAY4nB,EAASx7B,EAAaojC,EACpC,CACF,KAnFe,UAATziC,GACFuiC,EAAQ,EAAyBF,QAsFrC,GAAIpvB,EAAW,CACb2vB,IAEA/f,EAAWyC,IACXpV,EAAQrK,EAAM,EACdX,GAAUW,EAAML,EAAQ,EACxB1G,EAAOoB,KAAK+S,GACZ,IAAMmQ,EAAOkC,IACblC,EAAK9D,SAED7b,EAAQwP,WACVxP,EAAQwP,UAAUjQ,KAChBS,EAAQo/B,iBACR5vB,EACA,CAACzN,MAAOqd,EAAUhd,IAAKud,GACvB9kB,EAAMoI,MAAMlB,EAAQ,EAAGK,IAI3Bgd,EAAWO,CACb,MAKE3K,EAAana,EAAMoI,MAAMlB,EAAQ,EAAGK,GACpCk8B,GAAStpB,EACTvT,GAAUuT,EAAWpc,OACrB6T,EAAQrK,EAAM,CAElB,MAEoB,KAAdmK,IACFvK,IACAL,IACAF,EAAS,GAGPiS,OAAOipB,MAAMpwB,GACf4yB,KAEAb,GAAS1iC,EAAa2Q,GACtB9K,KAMN,OAAOpG,EAAOyC,KAAK,IAGnB,SAAS+jB,IACP,MAAO,CACL7f,KAAAA,EACAP,OAAAA,EACAoa,OAAQpP,IAAUmP,EAAQA,EAAMC,OAAS,IAAM,GAEnD,CAQA,SAASijB,EAAQ/1B,EAAM8S,GAErB,IAAI/Z,EAEA9B,EAAQ8+B,WACVh9B,EAAW+f,KACFpgB,QAAUoa,EACnB/Z,EAAS+Z,QAAUA,EAEnB7b,EAAQ8+B,QAAQv/B,KACdS,EAAQq/B,eACRrK,EAASjsB,GACTjH,EACAiH,GAGN,CAOA,SAASo2B,IACHb,IACFjjC,EAAOoB,KAAK6hC,GAERt+B,EAAQ+H,MACV/H,EAAQ+H,KAAKxI,KAAKS,EAAQs/B,YAAahB,EAAO,CAC5Cv8B,MAAOqd,EACPhd,IAAKyf,MAITyc,EAAQ,GAEZ,CACF,CAQA,SAASW,EAAWl2B,GAClB,OAAQA,GAAQ,OAAUA,GAAQ,OAAWA,EAAO,OACtD,CAQA,SAASm2B,EAAWn2B,GAClB,OACGA,GAAQ,GAAUA,GAAQ,GAClB,KAATA,GACCA,GAAQ,IAAUA,GAAQ,IAC1BA,GAAQ,KAAUA,GAAQ,KAC1BA,GAAQ,OAAUA,GAAQ,OACP,SAAZ,MAAPA,IACmB,SAAZ,MAAPA,EAEL,sHC7Yaw2B,GAAM,QAOjB,WAAY97B,EAAU+7B,EAAQC,IAAO,eACnCtnC,KAAKsL,SAAWA,EAChBtL,KAAKqnC,OAASA,EACVC,IACFtnC,KAAKsnC,MAAQA,EAEjB,ICPK,SAASC,EAAMC,EAAaF,GAOjC,IALA,IAAMh8B,EAAW,CAAC,EAEZ+7B,EAAS,CAAC,EACZ/yB,GAAS,IAEJA,EAAQkzB,EAAY/mC,QAC3B+B,OAAOyR,OAAO3I,EAAUk8B,EAAYlzB,GAAOhJ,UAC3C9I,OAAOyR,OAAOozB,EAAQG,EAAYlzB,GAAO+yB,QAG3C,OAAO,IAAID,EAAO97B,EAAU+7B,EAAQC,EACtC,CDFAF,EAAO/mC,UAAUiL,SAAW,CAAC,EAE7B87B,EAAO/mC,UAAUgnC,OAAS,CAAC,EAE3BD,EAAO/mC,UAAUinC,MAAQ,4BETnBlqB,EAAM,CAAC,EAAErW,eAMR,SAASsd,EAAO3M,GAErB,IAIIvM,EAJEG,EAAW,CAAC,EAEZ+7B,EAAS,CAAC,EAIhB,IAAKl8B,KAAQuM,EAAWwrB,WACtB,GAAI9lB,EAAIhW,KAAKsQ,EAAWwrB,WAAY/3B,GAAO,CACzC,IAAMzI,EAAQgV,EAAWwrB,WAAW/3B,GAC9B8iB,EAAO,IAAIwZ,EAAAA,EACft8B,EACAuM,EAAWgwB,UAAUhwB,EAAWiwB,YAAc,CAAC,EAAGx8B,GAClDzI,EACAgV,EAAW4vB,OAIX5vB,EAAWkwB,iBACXlwB,EAAWkwB,gBAAgBx7B,SAASjB,KAEpC8iB,EAAK2Z,iBAAkB,GAGzBt8B,EAASH,GAAQ8iB,EAEjBoZ,GAAO1J,EAAAA,EAAAA,GAAUxyB,IAASA,EAC1Bk8B,GAAO1J,EAAAA,EAAAA,GAAU1P,EAAK2Y,YAAcz7B,CACtC,CAGF,OAAO,IAAIi8B,EAAO97B,EAAU+7B,EAAQ3vB,EAAW4vB,MACjD,CCvDO,IAAMO,EAAQxjB,EAAO,CAC1BijB,MAAO,QACPI,UAAS,SAAC7yB,EAAG1J,GACX,MAAO,SAAWA,EAAKL,MAAM,GAAG6Z,aAClC,EACAue,WAAY,CACV4E,aAAc,KACdC,aAAc,KACdC,UAAW,KACXC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,UAAW,QCZFC,EAAMhkB,EAAO,CACxBijB,MAAO,MACPI,UAAS,SAAC7yB,EAAG1J,GACX,MAAO,OAASA,EAAKL,MAAM,GAAG6Z,aAChC,EACAue,WAAY,CAACoF,QAAS,KAAMC,QAAS,KAAMC,SAAU,QCFhD,SAASC,EAAuBd,EAAYf,GACjD,OAAOA,KAAae,EAAaA,EAAWf,GAAaA,CAC3D,CCAO,SAAS8B,EAAyBf,EAAYr8B,GACnD,OAAOm9B,EAAuBd,EAAYr8B,EAASqZ,cACrD,CCNO,IAAMgkB,EAAQtkB,EAAO,CAC1BijB,MAAO,QACPK,WAAY,CAACiB,WAAY,eACzBlB,UAAWgB,EACXxF,WAAY,CAACyF,MAAO,KAAME,WAAY,kBCJ3BC,EAAOzkB,EAAO,CACzBqjB,UAAS,SAAC7yB,EAAG1J,GACX,MAAgB,SAATA,EAAkBA,EAAO,QAAUA,EAAKL,MAAM,GAAG6Z,aAC1D,EACAue,WAAY,CACV6F,qBAAsB,KACtBC,WAAYC,EAAAA,WACZC,iBAAkB,KAClBC,SAAUF,EAAAA,WACVG,YAAaH,EAAAA,WACbI,aAAcv7B,EAAAA,OACdw7B,aAAcx7B,EAAAA,OACdy7B,YAAaz7B,EAAAA,OACb07B,aAAc/E,EAAAA,eACdgF,YAAa,KACbC,gBAAiBjF,EAAAA,eACjBkF,YAAa,KACbC,aAAcX,EAAAA,WACdY,eAAgBpF,EAAAA,eAChBqF,iBAAkB,KAClBC,aAAcd,EAAAA,WACde,WAAYvF,EAAAA,eACZwF,YAAahB,EAAAA,WACbiB,aAAc,KACdC,WAAYlB,EAAAA,WACZmB,YAAa,KACbC,iBAAkB,KAClBC,UAAW,KACXC,eAAgB9F,EAAAA,eAChB+F,UAAW18B,EAAAA,OACX28B,SAAU,KACVC,UAAWzB,EAAAA,WACX0B,cAAe1B,EAAAA,WACf2B,oBAAqB3B,EAAAA,WACrB4B,gBAAiB,KACjBC,SAAUrG,EAAAA,eACVsG,gBAAiB,KACjBC,aAAcl9B,EAAAA,OACdm9B,YAAahC,EAAAA,WACbiC,aAAcjC,EAAAA,WACdkC,aAAc,KACdC,aAAcnC,EAAAA,WACdoC,oBAAqB5G,EAAAA,eACrB6G,aAAcx9B,EAAAA,OACdy9B,aAAcz9B,EAAAA,OACd09B,YAAa19B,EAAAA,OACb29B,aAAcxC,EAAAA,WACdyC,YAAa59B,EAAAA,OACb69B,SAAU,KACVC,aAAc99B,EAAAA,OACd+9B,aAAc/9B,EAAAA,OACdg+B,aAAch+B,EAAAA,OACdi+B,cAAe,KACfC,KAAM,QC7CG70B,EAAOkN,EAAO,CACzBijB,MAAO,OACPK,WAAY,CACVsE,cAAe,iBACfC,UAAW,QACXC,QAAS,MACTC,UAAW,cAEb1E,UAAWgB,EACXd,gBAAiB,CAAC,UAAW,WAAY,QAAS,YAClD1E,WAAY,CAEVmJ,KAAM,KACNC,OAAQ3H,EAAAA,eACR4H,cAAe9H,EAAAA,eACf+H,UAAW/H,EAAAA,eACXgI,OAAQ,KACRC,MAAO,KACPC,gBAAiB1H,EAAAA,QACjB2H,oBAAqB3H,EAAAA,QACrB4H,eAAgB5H,EAAAA,QAChB1tB,IAAK,KACLu1B,GAAI,KACJC,MAAO9H,EAAAA,QACP+H,eAAgB,KAChBC,aAAcxI,EAAAA,eACdyI,UAAWjI,EAAAA,QACXkI,SAAUlI,EAAAA,QACVmI,QAASnI,EAAAA,QACToI,QAAS,KACTroB,QAASigB,EAAAA,QACTqI,KAAM,KACNx8B,UAAW2zB,EAAAA,eACX8I,KAAMz/B,EAAAA,OACN0/B,QAAS,KACTrjC,QAAS,KACTsjC,gBAAiBxE,EAAAA,WACjByE,SAAUzI,EAAAA,QACV0I,aAAclJ,EAAAA,eACdmJ,OAAQ9/B,EAAAA,OAAS62B,EAAAA,eACjBkJ,YAAa,KACb35B,KAAM,KACN45B,SAAU,KACVC,SAAU,KACV3gB,QAAS6X,EAAAA,QACT+I,MAAO/I,EAAAA,QACPgJ,IAAK,KACLC,QAAS,KACTC,SAAUlJ,EAAAA,QACVmJ,SAAUlJ,EAAAA,kBACVmJ,UAAWpF,EAAAA,WACXqF,QAAS,KACTC,aAAc,KACdC,KAAM,KACNC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,eAAgB3J,EAAAA,QAChB4J,WAAY,KACZC,QAASrK,EAAAA,eACTsK,OAAQjhC,EAAAA,OACRkhC,OAAQ/J,EAAAA,QACRgK,KAAMnhC,EAAAA,OACNohC,KAAM,KACNC,SAAU,KACVC,QAAS3K,EAAAA,eACT4K,UAAW5K,EAAAA,eACX1/B,GAAI,KACJuqC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,KACXC,GAAI,KACJC,MAAO1K,EAAAA,QACP2K,OAAQ,KACRC,SAAUpL,EAAAA,eACVqL,QAASrL,EAAAA,eACTsL,UAAW9K,EAAAA,QACX+K,SAAUvL,EAAAA,eACV/T,KAAM,KACNjW,MAAO,KACPrE,KAAM,KACN65B,SAAU,KACVj4B,KAAM,KACNk4B,QAAS,KACTC,KAAMlL,EAAAA,QACNmL,IAAKtiC,EAAAA,OACLuiC,SAAU,KACVn6B,IAAK,KACLo6B,UAAWxiC,EAAAA,OACXumB,MAAO,KACPkc,OAAQ,KACRx5B,IAAK,KACLy5B,UAAW1iC,EAAAA,OACX2iC,SAAUxL,EAAAA,QACVyL,MAAOzL,EAAAA,QACPhgC,KAAM,KACN0rC,MAAO,KACPC,SAAU3L,EAAAA,QACV4L,WAAY5L,EAAAA,QACZ6L,QAAS,KACTC,aAAc,KACdC,WAAY,KACZC,cAAe,KACfC,cAAe,KACfC,eAAgB,KAChBC,OAAQ,KACRC,SAAU,KACVC,UAAW,KACXC,iBAAkB,KAClBC,SAAU,KACV9hC,QAAS,KACT+hC,QAAS,KACTC,cAAe,KACfC,cAAe,KACfC,kBAAmB,KACnBC,OAAQ,KACRC,YAAa,KACbC,MAAO,KACPC,WAAY,KACZC,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,OAAQ,KACRC,iBAAkB,KAClBC,UAAW,KACXC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,WAAY,KACZC,aAAc,KACdC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,QAAS,KACTC,iBAAkB,KAClBC,OAAQ,KACRC,aAAc,KACdC,iBAAkB,KAClBC,UAAW,KACXC,YAAa,KACbC,UAAW,KACXC,eAAgB,KAChBC,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXC,WAAY,KACZC,WAAY,KACZC,aAAc,KACdC,mBAAoB,KACpBC,QAAS,KACTC,SAAU,KACVC,SAAU,KACVC,YAAa,KACbC,0BAA2B,KAC3BC,SAAU,KACVC,UAAW,KACXC,SAAU,KACVC,aAAc,KACdC,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,UAAW,KACXC,aAAc,KACdC,SAAU,KACVC,qBAAsB,KACtBC,SAAU,KACVC,eAAgB,KAChBC,UAAW,KACXC,QAAS,KACT5xB,KAAM0gB,EAAAA,QACNmR,QAAStoC,EAAAA,OACT0K,QAAS,KACT69B,KAAM5R,EAAAA,eACN6R,YAAa,KACbC,YAAatR,EAAAA,QACbuR,OAAQ,KACRC,QAAS,KACTC,SAAUzR,EAAAA,QACV0R,eAAgB,KAChBC,IAAKnS,EAAAA,eACLoS,SAAU5R,EAAAA,QACV6R,SAAU7R,EAAAA,QACV8R,KAAMjpC,EAAAA,OACNkpC,QAASlpC,EAAAA,OACTmpC,QAASxS,EAAAA,eACTyS,MAAO,KACPC,OAAQlS,EAAAA,QACRmS,SAAUnS,EAAAA,QACVoS,SAAUpS,EAAAA,QACVx2B,MAAO,KACPmK,KAAM9K,EAAAA,OACNwpC,MAAO,KACPC,KAAM,KACNC,KAAM1pC,EAAAA,OACN2pC,WAAYxO,EAAAA,WACZ7gC,IAAK,KACLsvC,OAAQ,KACRC,QAAS,KACTC,OAAQ,KACRhuC,MAAOkE,EAAAA,OACPuyB,KAAM,KACNl3B,MAAO,KACP0uC,SAAU/pC,EAAAA,OACVlG,OAAQ,KACR6O,MAAO,KACPqhC,UAAW,KACX1zC,KAAM,KACN2zC,cAAe9S,EAAAA,QACf+S,OAAQ,KACRt1C,MAAOumC,EAAAA,WACPgP,MAAOnqC,EAAAA,OACPorB,KAAM,KAINgf,MAAO,KACPC,MAAO,KACPC,QAAS3T,EAAAA,eACT4T,KAAM,KACN3nC,WAAY,KACZ4nC,QAAS,KACTC,OAAQzqC,EAAAA,OACR0qC,YAAa,KACbC,aAAc3qC,EAAAA,OACd4qC,YAAa,KACbC,YAAa,KACb77B,KAAM,KACN87B,QAAS,KACTC,QAAS,KACTC,MAAO,KACPloC,KAAM,KACNmoC,SAAU,KACVC,SAAU,KACVC,MAAO,KACPC,QAASjU,EAAAA,QACTkU,QAASlU,EAAAA,QACTnhB,MAAO,KACPs1B,KAAM,KACNC,MAAO,KACPC,YAAa,KACbC,OAAQzrC,EAAAA,OACR0rC,WAAY1rC,EAAAA,OACZgK,KAAM,KACN2hC,SAAU,KACVC,OAAQ,KACRC,aAAc7rC,EAAAA,OACd8rC,YAAa9rC,EAAAA,OACb+rC,SAAU5U,EAAAA,QACV6U,OAAQ7U,EAAAA,QACR8U,QAAS9U,EAAAA,QACT+U,OAAQ/U,EAAAA,QACRl3B,OAAQ,KACRksC,QAAS,KACTC,OAAQ,KACRC,IAAK,KACLC,YAAatsC,EAAAA,OACb9C,MAAO,KACPqvC,OAAQ,KACRC,UAAWrR,EAAAA,WACXsR,QAAS,KACTC,QAAS,KACT5qC,KAAM,KACN6qC,UAAW3sC,EAAAA,OACX3I,UAAW,KACXu1C,QAAS,KACTC,OAAQ,KACRC,MAAO,KACPC,OAAQ/sC,EAAAA,OAGRgtC,kBAAmB,KACnBC,YAAa,KACbC,SAAU,KACVC,wBAAyBhW,EAAAA,QACzBiW,sBAAuBjW,EAAAA,QACvBhV,OAAQ,KACR3kB,SAAU,KACV+P,QAASvN,EAAAA,OACTqtC,SAAU,KACVC,aAAc,QC1SLC,EAAMh3B,EAAO,CACxBijB,MAAO,MACPK,WAAY,CACV2T,aAAc,gBACdC,kBAAmB,qBACnBC,WAAY,cACZC,cAAe,iBACfC,UAAW,aACX5qC,UAAW,QACX6qC,SAAU,YACVC,SAAU,YACVC,mBAAoB,sBACpBC,0BAA2B,8BAC3BC,aAAc,gBACdC,eAAgB,kBAChBnO,YAAa,cACboO,SAAU,WACVC,iBAAkB,oBAClBC,iBAAkB,oBAClBC,YAAa,eACbC,SAAU,YACVC,WAAY,cACZC,aAAc,gBACdC,WAAY,cACZC,SAAU,YACVC,eAAgB,mBAChBC,YAAa,eACbC,UAAW,aACXC,YAAa,eACbC,WAAY,cACZC,UAAW,aACXC,2BAA4B,+BAC5BC,yBAA0B,6BAC1B9N,SAAU,WACV+N,UAAW,cACXC,aAAc,iBACdC,aAAc,iBACdC,eAAgB,kBAChBC,cAAe,iBACfC,cAAe,iBACfC,UAAW,aACXC,UAAW,aACXC,YAAa,eACbC,QAAS,WACTC,YAAa,gBACbC,aAAc,iBACdC,QAAS,WACTC,QAAS,WACTC,QAAS,WACTC,SAAU,YACVC,MAAO,SACPC,UAAW,cACXC,WAAY,eACZtN,QAAS,UACTuN,WAAY,aACZtN,aAAc,eACdG,cAAe,gBACfoN,QAAS,UACTjN,SAAU,WACVC,UAAW,YACXC,iBAAkB,mBAClBC,SAAU,WACV9hC,QAAS,UACT+hC,QAAS,UACTI,OAAQ,SACRC,YAAa,cACbC,MAAO,QACPC,WAAY,aACZC,OAAQ,SACRC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,OAAQ,SACRC,iBAAkB,mBAClBC,UAAW,YACX6L,MAAO,QACP5L,QAAS,UACTC,QAAS,UACTC,QAAS,UACT2L,UAAW,YACXC,WAAY,aACZ1L,aAAc,eACdC,QAAS,UACTC,UAAW,YACXC,UAAW,YACXC,WAAY,aACZC,QAAS,UACTE,OAAQ,SACRC,aAAc,eACdC,iBAAkB,mBAClBE,YAAa,cACbC,UAAW,YACXE,YAAa,cACbC,aAAc,eACdC,aAAc,eACdC,YAAa,cACbC,WAAY,aACZC,YAAa,cACbC,UAAW,YACXuK,aAAc,eACdtK,UAAW,YACXC,SAAU,WACVC,WAAY,aACZC,WAAY,aACZC,QAAS,UACTC,QAAS,UACTC,OAAQ,SACRC,UAAW,YACXC,WAAY,aACZC,WAAY,aACZC,aAAc,eACd6J,SAAU,WACV3J,QAAS,UACTC,SAAU,WACVC,SAAU,WACVG,SAAU,WACVC,UAAW,YACXC,SAAU,WACVqJ,OAAQ,SACRnJ,UAAW,YACXC,UAAW,YACXC,SAAU,WACVC,UAAW,YACXC,aAAc,eACdC,SAAU,WACVE,SAAU,WACVC,eAAgB,iBAChBC,UAAW,YACX2I,OAAQ,SACRC,iBAAkB,oBAClBC,kBAAmB,qBACnBC,WAAY,cACZC,QAAS,WACTC,cAAe,iBACfvI,eAAgB,iBAChBwI,gBAAiB,mBACjBC,eAAgB,kBAChBC,UAAW,aACXC,YAAa,eACbC,sBAAuB,yBACvBC,uBAAwB,0BACxBC,gBAAiB,mBACjBC,iBAAkB,oBAClBC,cAAe,iBACfC,eAAgB,kBAChBC,iBAAkB,oBAClBC,cAAe,iBACfC,YAAa,eACblI,SAAU,WACVmI,WAAY,cACZC,eAAgB,kBAChBC,cAAe,iBACftsC,OAAQ,SACRusC,kBAAmB,qBACnBC,mBAAoB,sBACpBC,YAAa,eACbC,aAAc,gBACdC,WAAY,eACZC,YAAa,eACbC,SAAU,YACVC,aAAc,gBACdC,cAAe,iBACfC,aAAc,gBACdC,SAAU,aACVC,YAAa,gBACbC,YAAa,gBACbC,YAAa,eACbC,YAAa,eACbC,QAAS,WAETC,cAAe,gBACfC,cAAe,iBAEjB1Z,UAAWe,EACXvF,WAAY,CACVme,MAAOxc,EAAAA,sBACPyW,aAAcxtC,EAAAA,OACdwzC,WAAY,KACZC,SAAU,KACVhG,kBAAmB,KACnBiG,WAAY1zC,EAAAA,OACZ2zC,UAAW3zC,EAAAA,OACX0tC,WAAY,KACZkG,OAAQ5zC,EAAAA,OACR6zC,cAAe,KACfC,cAAe,KACfC,QAAS/zC,EAAAA,OACTg0C,UAAW,KACXrG,cAAe,KACfsG,cAAe,KACfC,YAAa,KACbC,KAAM,KACN5b,MAAO,KACP6b,KAAMp0C,EAAAA,OACNq0C,GAAI,KACJC,SAAU,KACV1G,UAAW5tC,EAAAA,OACXgD,UAAW2zB,EAAAA,eACX4d,KAAM,KACN1G,SAAU,KACV2G,cAAe,KACf1G,SAAU,KACV3C,MAAO,KACP4C,mBAAoB,KACpBC,0BAA2B,KAC3BC,aAAc,KACdC,eAAgB,KAChB7xC,QAAS,KACTo4C,kBAAmB,KACnBC,iBAAkB,KAClB3U,YAAa,KACb4U,OAAQ,KACRC,GAAI,KACJC,GAAI,KACJzzC,EAAG,KACH+sC,SAAU,KACV2G,cAAe,KACfC,QAAS/0C,EAAAA,OACTg1C,gBAAiBh1C,EAAAA,OACjBi1C,UAAW,KACXC,QAAS,KACTC,IAAK,KACLC,QAASp1C,EAAAA,OACTouC,iBAAkB,KAClB9N,SAAUnJ,EAAAA,QACVke,GAAI,KACJC,GAAI,KACJC,SAAU,KACVC,SAAU,KACVC,UAAWz1C,EAAAA,OACXquC,iBAAkB,KAClBlyC,IAAK,KACL6Z,MAAO,KACP0/B,SAAU11C,EAAAA,OACV21C,0BAA2B,KAC3Bz0C,KAAM,KACNotC,YAAatuC,EAAAA,OACbuuC,SAAU,KACVprC,OAAQ,KACRyyC,UAAW,KACXC,YAAa,KACbrH,WAAY,KACZC,aAAc,KACdqH,UAAW,KACXC,eAAgB,KAChBrH,WAAY,KACZC,SAAU,KACVC,eAAgB,KAChBC,YAAa,KACbC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZgH,OAAQ,KACRC,GAAI,KACJx4B,KAAM,KACNy4B,GAAI,KACJC,GAAI,KACJC,GAAIvf,EAAAA,eACJwf,GAAIxf,EAAAA,eACJoY,UAAWpY,EAAAA,eACXqY,2BAA4B,KAC5BC,yBAA0B,KAC1BmH,SAAU,KACVC,kBAAmB,KACnBC,cAAe,KACfthC,QAAS,KACTuhC,QAASz2C,EAAAA,OACT02C,kBAAmB,KACnBC,WAAY,KACZ1V,OAAQ,KACRG,KAAM,KACNC,SAAU,KACV+N,UAAWpvC,EAAAA,OACXqvC,aAAcrvC,EAAAA,OACdsvC,aAActvC,EAAAA,OACd/I,GAAI,KACJ2/C,YAAa52C,EAAAA,OACbuvC,eAAgB,KAChBsH,kBAAmB,KACnBC,GAAI,KACJC,IAAK,KACLC,UAAWh3C,EAAAA,OACX8D,EAAG9D,EAAAA,OACHi3C,GAAIj3C,EAAAA,OACJk3C,GAAIl3C,EAAAA,OACJm3C,GAAIn3C,EAAAA,OACJo3C,GAAIp3C,EAAAA,OACJq3C,aAActgB,EAAAA,sBACdugB,iBAAkB,KAClBC,UAAW,KACXC,WAAY,KACZC,SAAU,KACVC,QAAS,KACTpvC,KAAM,KACNqvC,aAAc,KACdnI,cAAe,KACfC,cAAe,KACfmI,kBAAmB53C,EAAAA,OACnB63C,MAAO,KACPnI,UAAW,KACXC,UAAW,KACXC,YAAa,KACbkI,aAAc,KACdC,YAAa,KACbC,YAAa,KACbC,KAAM,KACNC,iBAAkB,KAClBC,UAAW,KACXC,aAAc,KACdhwC,IAAK,KACLme,MAAO,KACP8xB,uBAAwB,KACxBC,sBAAuB,KACvBC,UAAWv4C,EAAAA,OACXw4C,UAAW,KACX/V,OAAQ,KACRx5B,IAAK,KACLwvC,KAAM,KACNthD,KAAM,KACN04C,QAAS,KACTC,YAAa,KACbC,aAAc,KACdC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,SAAU,KACVC,MAAO,KACPC,UAAW,KACXC,WAAY,KACZoI,WAAY,KACZC,SAAU,KACV/iC,OAAQ,KACRotB,QAAS,KACTuN,WAAY,KACZtN,aAAc,KACdG,cAAe,KACfoN,QAAS,KACTjN,SAAU,KACVC,UAAW,KACXC,iBAAkB,KAClBC,SAAU,KACV9hC,QAAS,KACT+hC,QAAS,KACTI,OAAQ,KACRC,YAAa,KACbC,MAAO,KACPC,WAAY,KACZC,OAAQ,KACRC,UAAW,KACXC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,OAAQ,KACRC,iBAAkB,KAClBC,UAAW,KACX6L,MAAO,KACP5L,QAAS,KACTC,QAAS,KACTC,QAAS,KACT2L,UAAW,KACXC,WAAY,KACZ1L,aAAc,KACdC,QAAS,KACTC,UAAW,KACXC,UAAW,KACXC,WAAY,KACZC,QAAS,KACTE,OAAQ,KACRC,aAAc,KACdC,iBAAkB,KAClBE,YAAa,KACbC,UAAW,KACXE,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,YAAa,KACbC,WAAY,KACZC,YAAa,KACbC,UAAW,KACXuK,aAAc,KACdtK,UAAW,KACXC,SAAU,KACVC,WAAY,KACZC,WAAY,KACZC,QAAS,KACTC,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXC,WAAY,KACZC,WAAY,KACZC,aAAc,KACd6J,SAAU,KACV3J,QAAS,KACTC,SAAU,KACVC,SAAU,KACVG,SAAU,KACVC,UAAW,KACXC,SAAU,KACVqJ,OAAQ,KACRnJ,UAAW,KACXC,UAAW,KACXC,SAAU,KACVC,UAAW,KACXC,aAAc,KACdC,SAAU,KACVE,SAAU,KACVC,eAAgB,KAChBC,UAAW,KACX2I,OAAQ,KACR6H,QAAS,KACTplD,SAAU,KACVs7B,MAAO,KACP+pB,OAAQ,KACRC,YAAa,KACbxqB,OAAQ,KACRyqB,SAAU,KACVC,QAAS,KACThI,iBAAkBhxC,EAAAA,OAClBixC,kBAAmBjxC,EAAAA,OACnBkxC,WAAY,KACZC,QAAS,KACT58C,KAAM,KACN0kD,WAAYj5C,EAAAA,OACZk5C,oBAAqB,KACrBC,iBAAkB,KAClBC,aAAc,KACdC,MAAO,KACP9Q,KAAM5R,EAAAA,eACN2iB,MAAO,KACPjG,cAAe,KACfjC,cAAe,KACfmI,OAAQ,KACRC,UAAWx5C,EAAAA,OACXy5C,UAAWz5C,EAAAA,OACX05C,UAAW15C,EAAAA,OACX25C,cAAe,KACfC,oBAAqB,KACrBC,eAAgB,KAChBC,UAAW,KACXt8C,SAAUu5B,EAAAA,sBACVl+B,EAAG,KACHkhD,OAAQ,KACRlR,eAAgB,KAChBmR,KAAM,KACNC,KAAM,KACNnR,IAAK/R,EAAAA,sBACLsV,IAAKtV,EAAAA,sBACLsa,gBAAiB,KACjB6I,YAAa,KACbC,UAAW,KACXC,mBAAoBrjB,EAAAA,sBACpBsjB,iBAAkBtjB,EAAAA,sBAClBujB,cAAevjB,EAAAA,sBACfwjB,gBAAiBxjB,EAAAA,sBACjBviB,SAAU,KACVgmC,QAAS,KACTplD,OAAQ,KACRqlD,OAAQ,KACRC,GAAI,KACJC,GAAI,KACJC,MAAO,KACPC,KAAM,KACNvJ,eAAgB,KAChBwJ,KAAM,KACNC,MAAO,KACPC,aAAc,KACdC,iBAAkBj7C,EAAAA,OAClBk7C,iBAAkBl7C,EAAAA,OAClBm7C,aAAc,KACdC,QAAS,KACTC,YAAa,KACbC,aAAc,KACdC,MAAO,KACPC,MAAO,KACPC,YAAa,KACblK,UAAW,KACXC,YAAa,KACbC,sBAAuBzxC,EAAAA,OACvB0xC,uBAAwB1xC,EAAAA,OACxBxB,OAAQ,KACRk9C,OAAQ,KACR/J,gBAAiB5a,EAAAA,sBACjB6a,iBAAkB,KAClBC,cAAe,KACfC,eAAgB,KAChBC,iBAAkB/xC,EAAAA,OAClBgyC,cAAehyC,EAAAA,OACfiyC,YAAa,KACb52C,MAAO,KACPsgD,aAAc37C,EAAAA,OACd47C,aAAc,KACdC,oBAAqB,KACrBC,WAAY,KACZC,cAAe,KACfC,qBAAsB,KACtBC,eAAgBllB,EAAAA,sBAChBgT,SAAU/pC,EAAAA,OACVk8C,YAAa,KACbpiD,OAAQ,KACRqiD,QAASn8C,EAAAA,OACTo8C,QAASp8C,EAAAA,OACTkyC,WAAY,KACZC,eAAgB,KAChBC,cAAe,KACfiK,WAAY,KACZ/I,cAAe,KACf3qC,MAAO,KACP2zC,kBAAmB,KACnBhmD,KAAM,KACNwP,OAAQixB,EAAAA,sBACRwlB,GAAI,KACJ3iB,UAAW,KACX4iB,GAAI,KACJC,GAAI,KACJpK,kBAAmBryC,EAAAA,OACnBsyC,mBAAoBtyC,EAAAA,OACpB08C,QAAS,KACTnK,YAAa,KACbC,aAAc,KACdC,WAAYzyC,EAAAA,OACZ6O,OAAQ,KACR6jC,YAAa1yC,EAAAA,OACb6yC,cAAe7yC,EAAAA,OACf8yC,aAAc,KACdH,SAAU3yC,EAAAA,OACV4yC,aAAc5yC,EAAAA,OACd4sC,QAAS,KACTmG,SAAU/yC,EAAAA,OACVgzC,YAAahzC,EAAAA,OACbizC,YAAajzC,EAAAA,OACbiB,QAAS,KACT07C,WAAY,KACZC,WAAY,KACZzS,MAAO,KACP0S,OAAQ,KACR3J,YAAa,KACbC,YAAa,KACb2J,EAAG,KACHC,GAAI,KACJC,GAAI,KACJC,iBAAkB,KAClB7J,QAASpzC,EAAAA,OACTk9C,EAAG,KACHC,GAAI,KACJC,GAAI,KACJC,iBAAkB,KAClBC,EAAG,KACHC,WAAY,QCliBHl0C,EAAOowB,EAAM,CAACc,EAAKR,EAAOc,EAAOG,EAAMwiB,GAAW,QAClDjQ,EAAM9T,EAAM,CAACc,EAAKR,EAAOc,EAAOG,EAAMyiB,GAAU,2GCTvDC,EAAQ,kBACRC,EAAO,UACPC,EAAM,SAOL,SAAShxB,EAAKuJ,EAAQvhC,GAC3B,IAAM2kC,GAAS1J,EAAAA,EAAAA,GAAUj7B,GACrByI,EAAOzI,EACPipD,EAAOC,EAAAA,EAEX,GAAIvkB,KAAUpD,EAAOoD,OACnB,OAAOpD,EAAO34B,SAAS24B,EAAOoD,OAAOA,IAGvC,GAAIA,EAAO5mC,OAAS,GAA4B,SAAvB4mC,EAAOv8B,MAAM,EAAG,IAAiB0gD,EAAMtsD,KAAKwD,GAAQ,CAE3E,GAAwB,MAApBA,EAAMS,OAAO,GAAY,CAE3B,IAAM0oD,EAAOnpD,EAAMoI,MAAM,GAAG5B,QAAQuiD,EAAMK,GAC1C3gD,EAAO,OAAS0gD,EAAK1oD,OAAO,GAAGqZ,cAAgBqvC,EAAK/gD,MAAM,EAC5D,KAAO,CAEL,IAAM+gD,EAAOnpD,EAAMoI,MAAM,GAEzB,IAAK2gD,EAAKvsD,KAAK2sD,GAAO,CACpB,IAAIE,EAASF,EAAK3iD,QAAQwiD,EAAKM,GAEN,MAArBD,EAAO5oD,OAAO,KAChB4oD,EAAS,IAAMA,GAGjBrpD,EAAQ,OAASqpD,CACnB,CACF,CAEAJ,EAAOlkB,EAAAA,CACT,CAEA,OAAO,IAAIkkB,EAAKxgD,EAAMzI,EACxB,CAMA,SAASspD,EAAMjxC,GACb,MAAO,IAAMA,EAAG4J,aAClB,CAMA,SAASmnC,EAAU/wC,GACjB,OAAOA,EAAG5X,OAAO,GAAGqZ,aACtB,qEC1DO,IAAMyvC,EAAc,CACzBpT,QAAS,UACToD,SAAU,WACVrM,OAAQ,SACR6P,gBAAiB,kBACjBC,iBAAkB,mBAClBC,cAAe,gBACfC,eAAgB,iBAChBC,iBAAkB,mBAClBjsC,OAAQ,SACRk0B,aAAc,eACdC,aAAc,eACdC,UAAW,YACXC,UAAW,YACXC,UAAW,YACXC,WAAY,aACZC,UAAW,YACXS,WAAY,iDCtBP,SAASlL,EAAUj7B,GACxB,OAAOA,EAAMiiB,aACf,6KCDM+e,EAASlhC,OAAOu5B,KAAKmwB,GAEdzkB,EAAW,0CAQtB,WAAYn8B,EAAUs7B,EAAWmf,EAAMze,GAAO,sBAC5C,IAAIhzB,GAAS,EAMb,GAJA,cAAMhJ,EAAUs7B,GAEhBulB,GAAK,UAAM,QAAS7kB,GAEA,kBAATye,EACT,OAASzxC,EAAQovB,EAAOjjC,QAAQ,CAC9B,IAAMwoB,EAAQya,EAAOpvB,GACrB63C,GAAK,UAAMzoB,EAAOpvB,IAASyxC,EAAOmG,EAAMjjC,MAAYijC,EAAMjjC,GAC5D,CACD,QACH,CAAC,iBArBqB,CAAS2iC,EAAAA,GA+BjC,SAASO,EAAKxvC,EAAQpV,EAAK7E,GACrBA,IAEFia,EAAOpV,GAAO7E,EAElB,CAZA+kC,EAAYpnC,UAAUgrB,SAAU,6FC/BnBugC,GAAI,QAMf,WAAYtgD,EAAUs7B,IAAW,eAE/B5mC,KAAKsL,SAAWA,EAEhBtL,KAAK4mC,UAAYA,CACnB,IAIFglB,EAAKvrD,UAAUinC,MAAQ,KACvBskB,EAAKvrD,UAAU4kC,SAAU,EACzB2mB,EAAKvrD,UAAU4oC,YAAa,EAC5B2iB,EAAKvrD,UAAU6kC,mBAAoB,EACnC0mB,EAAKvrD,UAAUyN,QAAS,EACxB89C,EAAKvrD,UAAUskC,gBAAiB,EAChCinB,EAAKvrD,UAAUokC,gBAAiB,EAChCmnB,EAAKvrD,UAAUwkC,uBAAwB,EACvC+mB,EAAKvrD,UAAUunC,iBAAkB,EACjCgkB,EAAKvrD,UAAUgrB,SAAU,wSCxBzB,IAAI+gC,EAAS,EAEAnnB,EAAUonB,IACVpjB,EAAaojB,IACbnnB,EAAoBmnB,IACpBv+C,EAASu+C,IACT5nB,EAAiB4nB,IACjB1nB,EAAiB0nB,IACjBxnB,EAAwBwnB,IAErC,SAASA,IACP,OAAO,KAAP,IAAO,IAAOD,EAChB,gdCEO,SAAS5oC,EAAkB9gB,GAEhC,OAAKA,GAA0B,kBAAVA,EAKjB,aAAcA,GAAS,SAAUA,EAC5BiH,EAASjH,EAAMiH,UAIpB,UAAWjH,GAAS,QAASA,EACxBiH,EAASjH,GAId,SAAUA,GAAS,WAAYA,EAC1B+gB,EAAM/gB,GAIR,GAnBE,EAoBX,CAMA,SAAS+gB,EAAMA,GACb,OAAOnP,EAAMmP,GAASA,EAAM5Z,MAAQ,IAAMyK,EAAMmP,GAASA,EAAMna,OACjE,CAMA,SAASK,EAAS/G,GAChB,OAAO6gB,EAAM7gB,GAAOA,EAAIgH,OAAS,IAAM6Z,EAAM7gB,GAAOA,EAAIqH,IAC1D,CAMA,SAASqK,EAAM5R,GACb,OAAOA,GAA0B,kBAAVA,EAAqBA,EAAQ,CACtD,CCpDO,IAAM4pD,EAAY,0CAcvB,WAAY9hD,EAAQ+hD,EAAOnwB,GAAQ,sBAEjC,IAAM12B,EAAQ,CAAC,KAAM,MAEjBiE,EAAW,CAEbC,MAAO,CAACC,KAAM,KAAMP,OAAQ,MAE5BW,IAAK,CAACJ,KAAM,KAAMP,OAAQ,OAU5B,GAPA,eAEqB,kBAAVijD,IACTnwB,EAASmwB,EACTA,OAAQlpD,GAGY,kBAAX+4B,EAAqB,CAC9B,IAAM9nB,EAAQ8nB,EAAOpwB,QAAQ,MAEd,IAAXsI,EACF5O,EAAM,GAAK02B,GAEX12B,EAAM,GAAK02B,EAAOtxB,MAAM,EAAGwJ,GAC3B5O,EAAM,GAAK02B,EAAOtxB,MAAMwJ,EAAQ,GAEpC,CAiIA,OA/HIi4C,IAEE,SAAUA,GAAS,aAAcA,EAC/BA,EAAM5iD,WAERA,EAAW4iD,EAAM5iD,UAIZ,UAAW4iD,GAAS,QAASA,EAEpC5iD,EAAW4iD,GAGJ,SAAUA,GAAS,WAAYA,KACtC5iD,EAASC,MAAQ2iD,IAKrB,EAAKtnD,KAAOue,EAAkB+oC,IAAU,MAExC,EAAKhwB,QAA4B,kBAAX/xB,EAAsBA,EAAO+xB,QAAU/xB,EAE7D,EAAK+K,MAAQ,GAES,kBAAX/K,GAAuBA,EAAO+K,QACvC,EAAKA,MAAQ/K,EAAO+K,OAQtB,EAAK/K,OAAS,EAAK+xB,QAanB,EAAKE,MAOL,EAAK5yB,KAAOF,EAASC,MAAMC,KAO3B,EAAKP,OAASK,EAASC,MAAMN,OAS7B,EAAKK,SAAWA,EAOhB,EAAKO,OAASxE,EAAM,GAOpB,EAAK82B,OAAS92B,EAAM,GAOpB,EAAKi1B,KAYL,EAAK6xB,OAQL,EAAKn4C,SAOL,EAAKzI,IAOL,EAAK6gD,KACL,CACF,CAAC,iBA3KsB,EA2KtB,aA3K+B5oD,QA8KlCyoD,EAAajsD,UAAUs6B,KAAO,GAC9B2xB,EAAajsD,UAAU4E,KAAO,GAC9BqnD,EAAajsD,UAAUmK,OAAS,GAChC8hD,EAAajsD,UAAUk8B,QAAU,GACjC+vB,EAAajsD,UAAUkV,MAAQ,GAC/B+2C,EAAajsD,UAAUo8B,MAAQ,KAC/B6vB,EAAajsD,UAAUiJ,OAAS,KAChCgjD,EAAajsD,UAAUwJ,KAAO,KAC9ByiD,EAAajsD,UAAU6J,OAAS,KAChCoiD,EAAajsD,UAAUm8B,OAAS,KAChC8vB,EAAajsD,UAAUsJ,SAAW,KC9I3B,IAAMtH,EAAO,CAACk7B,SASrB,SAAkBl7B,EAAM+7B,GACtB,QAAY/6B,IAAR+6B,GAAoC,kBAARA,EAC9B,MAAM,IAAIh1B,UAAU,mCAGtB+zB,EAAW96B,GACX,IAIIi8B,EAJA10B,EAAQ,EACRK,GAAO,EACPqK,EAAQjS,EAAK5B,OAIjB,QAAY4C,IAAR+6B,GAAoC,IAAfA,EAAI39B,QAAgB29B,EAAI39B,OAAS4B,EAAK5B,OAAQ,CACrE,KAAO6T,KACL,GAA+B,KAA3BjS,EAAKgE,WAAWiO,IAGlB,GAAIgqB,EAAc,CAChB10B,EAAQ0K,EAAQ,EAChB,KACF,OACSrK,EAAM,IAGfq0B,GAAe,EACfr0B,EAAMqK,EAAQ,GAIlB,OAAOrK,EAAM,EAAI,GAAK5H,EAAKyI,MAAMlB,EAAOK,EAC1C,CAEA,GAAIm0B,IAAQ/7B,EACV,MAAO,GAGT,IAAIg8B,GAAoB,EACpBE,EAAWH,EAAI39B,OAAS,EAE5B,KAAO6T,KACL,GAA+B,KAA3BjS,EAAKgE,WAAWiO,IAGlB,GAAIgqB,EAAc,CAChB10B,EAAQ0K,EAAQ,EAChB,KACF,OAEI+pB,EAAmB,IAGrBC,GAAe,EACfD,EAAmB/pB,EAAQ,GAGzBiqB,GAAY,IAEVl8B,EAAKgE,WAAWiO,KAAW8pB,EAAI/3B,WAAWk4B,KACxCA,EAAW,IAGbt0B,EAAMqK,IAKRiqB,GAAY,EACZt0B,EAAMo0B,IAMVz0B,IAAUK,EACZA,EAAMo0B,EACGp0B,EAAM,IACfA,EAAM5H,EAAK5B,QAGb,OAAO4B,EAAKyI,MAAMlB,EAAOK,EAC3B,EAzF+BqzB,QA+F/B,SAAiBj7B,GAGf,GAFA86B,EAAW96B,GAES,IAAhBA,EAAK5B,OACP,MAAO,IAGT,IAGI+9B,EAHAv0B,GAAO,EACPqK,EAAQjS,EAAK5B,OAKjB,OAAS6T,GACP,GAA+B,KAA3BjS,EAAKgE,WAAWiO,IAClB,GAAIkqB,EAAgB,CAClBv0B,EAAMqK,EACN,KACF,OACUkqB,IAEVA,GAAiB,GAIrB,OAAOv0B,EAAM,EACc,KAAvB5H,EAAKgE,WAAW,GACd,IACA,IACM,IAAR4D,GAAoC,KAAvB5H,EAAKgE,WAAW,GAC7B,KACAhE,EAAKyI,MAAM,EAAGb,EACpB,EA/HwCuzB,QAqIxC,SAAiBn7B,GACf86B,EAAW96B,GAEX,IASIm8B,EATAlqB,EAAQjS,EAAK5B,OAEbwJ,GAAO,EACPy0B,EAAY,EACZD,GAAY,EAGZE,EAAc,EAIlB,KAAOrqB,KAAS,CACd,IAAM1D,EAAOvO,EAAKgE,WAAWiO,GAE7B,GAAa,KAAT1D,EAWA3G,EAAM,IAGRu0B,GAAiB,EACjBv0B,EAAMqK,EAAQ,GAGH,KAAT1D,EAEE6tB,EAAW,EACbA,EAAWnqB,EACc,IAAhBqqB,IACTA,EAAc,GAEPF,GAAY,IAGrBE,GAAe,QAzBf,GAAIH,EAAgB,CAClBE,EAAYpqB,EAAQ,EACpB,KACF,CAwBJ,CAEA,GACEmqB,EAAW,GACXx0B,EAAM,GAEU,IAAhB00B,GAEiB,IAAhBA,GAAqBF,IAAax0B,EAAM,GAAKw0B,IAAaC,EAAY,EAEvE,MAAO,GAGT,OAAOr8B,EAAKyI,MAAM2zB,EAAUx0B,EAC9B,EAlMiDtE,KAwMjD,WAGY,IAFV,IAEIi5B,EAFAtqB,GAAS,EAEH,mBAHKo4C,EAAQ,yBAARA,EAAQ,gBAKvB,OAASp4C,EAAQo4C,EAASjsD,QACxB08B,EAAWuvB,EAASp4C,IAEhBo4C,EAASp4C,KACXsqB,OACav7B,IAAXu7B,EAAuB8tB,EAASp4C,GAASsqB,EAAS,IAAM8tB,EAASp4C,IAIvE,YAAkBjR,IAAXu7B,EAAuB,IAAMjB,EAAUiB,EAChD,EAvNuDnyB,IAAK,KAgO5D,SAASkxB,EAAUt7B,GACjB86B,EAAW96B,GAEX,IAAMu7B,EAAkC,KAAvBv7B,EAAKgE,WAAW,GAG7B3D,EAoBN,SAAyBL,EAAMw7B,GAC7B,IAMIjtB,EAEAktB,EARA56B,EAAS,GACT66B,EAAoB,EACpBC,GAAa,EACbC,EAAO,EACP3pB,GAAS,EAMb,OAASA,GAASjS,EAAK5B,QAAQ,CAC7B,GAAI6T,EAAQjS,EAAK5B,OACfmQ,EAAOvO,EAAKgE,WAAWiO,OAClB,IAAa,KAAT1D,EACT,MAEAA,EAAO,EACT,CAEA,GAAa,KAATA,EAAuB,CACzB,GAAIotB,IAAc1pB,EAAQ,GAAc,IAAT2pB,QAExB,GAAID,IAAc1pB,EAAQ,GAAc,IAAT2pB,EAAY,CAChD,GACE/6B,EAAOzC,OAAS,GACM,IAAtBs9B,GACyC,KAAzC76B,EAAOmD,WAAWnD,EAAOzC,OAAS,IACO,KAAzCyC,EAAOmD,WAAWnD,EAAOzC,OAAS,GAElC,GAAIyC,EAAOzC,OAAS,GAGlB,IAFAq9B,EAAiB56B,EAAOwG,YAAY,QAEbxG,EAAOzC,OAAS,EAAG,CACpCq9B,EAAiB,GACnB56B,EAAS,GACT66B,EAAoB,GAGpBA,GADA76B,EAASA,EAAO4H,MAAM,EAAGgzB,IACEr9B,OAAS,EAAIyC,EAAOwG,YAAY,KAG7Ds0B,EAAY1pB,EACZ2pB,EAAO,EACP,QACF,OACK,GAAI/6B,EAAOzC,OAAS,EAAG,CAC5ByC,EAAS,GACT66B,EAAoB,EACpBC,EAAY1pB,EACZ2pB,EAAO,EACP,QACF,CAGEJ,IACF36B,EAASA,EAAOzC,OAAS,EAAIyC,EAAS,MAAQ,KAC9C66B,EAAoB,EAExB,MACM76B,EAAOzC,OAAS,EAClByC,GAAU,IAAMb,EAAKyI,MAAMkzB,EAAY,EAAG1pB,GAE1CpR,EAASb,EAAKyI,MAAMkzB,EAAY,EAAG1pB,GAGrCypB,EAAoBzpB,EAAQ0pB,EAAY,EAG1CA,EAAY1pB,EACZ2pB,EAAO,CACT,MAAoB,KAATrtB,GAAyBqtB,GAAQ,EAC1CA,IAEAA,GAAQ,CAEZ,CAEA,OAAO/6B,CACT,CAnGcg7B,CAAgB77B,GAAOu7B,GAUnC,OARqB,IAAjBl7B,EAAMjC,QAAiBm9B,IACzBl7B,EAAQ,KAGNA,EAAMjC,OAAS,GAA0C,KAArC4B,EAAKgE,WAAWhE,EAAK5B,OAAS,KACpDiC,GAAS,KAGJk7B,EAAW,IAAMl7B,EAAQA,CAClC,CA6FA,SAASy6B,EAAW96B,GAClB,GAAoB,kBAATA,EACT,MAAM,IAAI+G,UACR,mCAAqC+0B,KAAK1gB,UAAUpb,GAG1D,CCpYO,IAAMq6B,EAAO,CAACK,IAErB,WACE,MAAO,GACT,GCgBO,SAAS4vB,EAAMC,GACpB,OACoB,OAAlBA,GACyB,kBAAlBA,GAEPA,EAAc1d,MAEd0d,EAAcxwB,MAElB,CCvBO,SAASywB,EAAUxqD,GACxB,GAAoB,kBAATA,EACTA,EAAO,IAAIyqD,IAAIzqD,QACV,IAAKsqD,EAAMtqD,GAAO,CAEvB,IAAMgI,EAAQ,IAAIjB,UAChB,+EACE/G,EACA,KAGJ,MADAgI,EAAMuG,KAAO,uBACPvG,CACR,CAEA,GAAsB,UAAlBhI,EAAK0qD,SAAsB,CAE7B,IAAM1iD,EAAQ,IAAIjB,UAAU,kCAE5B,MADAiB,EAAMuG,KAAO,yBACPvG,CACR,CAEA,OAMF,SAA6BuB,GAC3B,GAAqB,KAAjBA,EAAIohD,SAAiB,CAEvB,IAAM3iD,EAAQ,IAAIjB,UAChB,wDAGF,MADAiB,EAAMuG,KAAO,4BACPvG,CACR,CAEA,IAAM4iD,EAAWrhD,EAAIqhD,SACjB34C,GAAS,EAEb,OAASA,EAAQ24C,EAASxsD,QACxB,GACiC,KAA/BwsD,EAAS5mD,WAAWiO,IACe,KAAnC24C,EAAS5mD,WAAWiO,EAAQ,GAC5B,CACA,IAAM44C,EAAQD,EAAS5mD,WAAWiO,EAAQ,GAC1C,GAAc,KAAV44C,GAAoC,MAAVA,EAAyB,CAErD,IAAM7iD,EAAQ,IAAIjB,UAChB,uDAGF,MADAiB,EAAMuG,KAAO,4BACPvG,CACR,CACF,CAGF,OAAO8iD,mBAAmBF,EAC5B,CArCSG,CAAoB/qD,EAC7B,CC0BA,IAAMu6B,EAAQ,CAAC,UAAW,OAAQ,WAAY,OAAQ,UAAW,WAEpDD,EAAK,WAkBhB,WAAYj6B,GAEV,IAAImF,GAFa,eAQfA,EAJGnF,EAEuB,kBAAVA,GAAsBgc,EAAOhc,GAEnC,CAACA,MAAAA,GACFiqD,EAAMjqD,GACL,CAACL,KAAMK,GAGPA,EARA,CAAC,EAiBb1C,KAAKkU,KAAO,CAAC,EAMblU,KAAK68B,SAAW,GAOhB78B,KAAK88B,QAAU,GAMf98B,KAAK+8B,IAAML,EAAKK,MAOhB/8B,KAAK0C,MAUL1C,KAAKqtD,OASLrtD,KAAKkD,OASLlD,KAAK4F,IAML,IAFA,IAcIuF,EAdAmJ,GAAS,IAEJA,EAAQsoB,EAAMn8B,QAAQ,CAC7B,IAAM0K,EAAOyxB,EAAMtoB,GAIfnJ,KAAQtD,QAA6BxE,IAAlBwE,EAAQsD,KAE7BnL,KAAKmL,GAAiB,YAATA,GAAqB,OAAItD,EAAQsD,IAAStD,EAAQsD,GAEnE,CAMA,IAAKA,KAAQtD,EAEN+0B,EAAMxwB,SAASjB,KAAOnL,KAAKmL,GAAQtD,EAAQsD,GAEpD,CAuMC,OArMD,0BAIA,WACE,OAAOnL,KAAK88B,QAAQ98B,KAAK88B,QAAQr8B,OAAS,EAC5C,EAEA,IAOA,SAAS4B,GACHsqD,EAAMtqD,KACRA,EAAOwqD,EAAUxqD,IAGnB66B,EAAe76B,EAAM,QAEjBrC,KAAKqC,OAASA,GAChBrC,KAAK88B,QAAQx4B,KAAKjC,EAEtB,GAEA,mBAGA,WACE,MAA4B,kBAAdrC,KAAKqC,KAAoBA,EAAKi7B,QAAQt9B,KAAKqC,WAAQgB,CACnE,EAEA,IAIA,SAAYi6B,GACVH,EAAWn9B,KAAKu9B,SAAU,WAC1Bv9B,KAAKqC,KAAOA,EAAKsD,KAAK23B,GAAW,GAAIt9B,KAAKu9B,SAC5C,GAEA,oBAGA,WACE,MAA4B,kBAAdv9B,KAAKqC,KAAoBA,EAAKk7B,SAASv9B,KAAKqC,WAAQgB,CACpE,EAEA,IAMA,SAAak6B,GACXL,EAAeK,EAAU,YACzBP,EAAWO,EAAU,YACrBv9B,KAAKqC,KAAOA,EAAKsD,KAAK3F,KAAKs9B,SAAW,GAAIC,EAC5C,GAEA,mBAGA,WACE,MAA4B,kBAAdv9B,KAAKqC,KAAoBA,EAAKm7B,QAAQx9B,KAAKqC,WAAQgB,CACnE,EAEA,IAMA,SAAYm6B,GAIV,GAHAR,EAAWQ,EAAS,WACpBL,EAAWn9B,KAAKs9B,QAAS,WAErBE,EAAS,CACX,GAA8B,KAA1BA,EAAQn3B,WAAW,GACrB,MAAM,IAAIxC,MAAM,iCAGlB,GAAI25B,EAAQpxB,SAAS,IAAK,GACxB,MAAM,IAAIvI,MAAM,yCAEpB,CAEA7D,KAAKqC,KAAOA,EAAKsD,KAAK3F,KAAKs9B,QAASt9B,KAAKy9B,MAAQD,GAAW,IAC9D,GAEA,gBAGA,WACE,MAA4B,kBAAdx9B,KAAKqC,KACfA,EAAKk7B,SAASv9B,KAAKqC,KAAMrC,KAAKw9B,cAC9Bn6B,CACN,EAEA,IAMA,SAASo6B,GACPP,EAAeO,EAAM,QACrBT,EAAWS,EAAM,QACjBz9B,KAAKqC,KAAOA,EAAKsD,KAAK3F,KAAKs9B,SAAW,GAAIG,GAAQz9B,KAAKw9B,SAAW,IACpE,GAEA,sBASA,SAAS3f,GACP,OAAQ7d,KAAK0C,OAAS,IAAI6D,SAASsX,EACrC,GAEA,qBAcA,SAAQrT,EAAQ+hD,EAAOnwB,GACrB,IAAMG,EAAU,IAAI+vB,EAAa9hD,EAAQ+hD,EAAOnwB,GAWhD,OATIp8B,KAAKqC,OACPk6B,EAAQt3B,KAAOjF,KAAKqC,KAAO,IAAMk6B,EAAQt3B,KACzCs3B,EAAQ5B,KAAO36B,KAAKqC,MAGtBk6B,EAAQE,OAAQ,EAEhBz8B,KAAK68B,SAASv4B,KAAKi4B,GAEZA,CACT,GAEA,kBAaA,SAAK/xB,EAAQ+hD,EAAOnwB,GAClB,IAAMG,EAAUv8B,KAAKu8B,QAAQ/xB,EAAQ+hD,EAAOnwB,GAI5C,OAFAG,EAAQE,MAAQ,KAETF,CACT,GAEA,kBAeA,SAAK/xB,EAAQ+hD,EAAOnwB,GAClB,IAAMG,EAAUv8B,KAAKu8B,QAAQ/xB,EAAQ+hD,EAAOnwB,GAI5C,MAFAG,EAAQE,OAAQ,EAEVF,CACR,KAAC,EA9Te,GAwUlB,SAASS,EAAWC,EAAMh4B,GACxB,GAAIg4B,GAAQA,EAAK7wB,SAAS/J,EAAKoK,KAC7B,MAAM,IAAI5I,MACR,IAAMoB,EAAO,uCAAyC5C,EAAKoK,IAAM,IAGvE,CASA,SAASywB,EAAeD,EAAMh4B,GAC5B,IAAKg4B,EACH,MAAM,IAAIp5B,MAAM,IAAMoB,EAAO,oBAEjC,CASA,SAASk4B,EAAW96B,EAAM4C,GACxB,IAAK5C,EACH,MAAM,IAAIwB,MAAM,YAAcoB,EAAO,kCAEzC,6CC/Ze,SAASqoD,EAASnmD,GAC/B,OAAO,EAAAi7B,EAAA,GAAej7B,KAAQ,EAAAomD,EAAA,GAAgBpmD,KAAQ,EAAA04B,EAAA,GAA2B14B,KAAQ,EAAAm7B,EAAA,IAC3F,CCCO,SAAS5I,EAAKrvB,GACnB,GAAIA,EACF,MAAMA,CAEV,eCXe,SAAShD,EAAc3E,GACrC,GAAqB,kBAAVA,GAAgC,OAAVA,EAChC,OAAO,EAGR,IAAMrC,EAAYmC,OAAOob,eAAelb,GACxC,OAAsB,OAAdrC,GAAsBA,IAAcmC,OAAOnC,WAAkD,OAArCmC,OAAOob,eAAevd,OAA0BkR,OAAOi8C,eAAe9qD,MAAY6O,OAAOytB,YAAYt8B,EACtK,CCqFO,SAASw2B,EAAKG,EAAYE,GAE/B,IAAI/B,EAEJ,OAQA,WAAgC,2BAAZlC,EAAU,yBAAVA,EAAU,gBAC5B,IAEIpyB,EAFEuqD,EAAoBp0B,EAAW54B,OAAS60B,EAAW70B,OAIrDgtD,GACFn4B,EAAWhxB,KAAK6tB,GAGlB,IACEjvB,EAASm2B,EAAW/b,MAAMtd,KAAMs1B,EAalC,CAZE,MAAOjrB,GACP,IAAMqjD,EAAkCrjD,EAMxC,GAAIojD,GAAqBj2B,EACvB,MAAMk2B,EAGR,OAAOv7B,EAAKu7B,EACd,CAEKD,IACCvqD,aAAkBu4B,QACpBv4B,EAAOu2B,KAAKA,EAAMtH,GACTjvB,aAAkBW,MAC3BsuB,EAAKjvB,GAELu2B,EAAKv2B,GAGX,EAMA,SAASivB,EAAK9nB,GACZ,IAAKmtB,EAAQ,CACXA,GAAS,EAAI,2BAFOyH,EAAM,iCAANA,EAAM,kBAG1B1F,EAAQ,cAAClvB,GAAK,OAAK40B,GACrB,CACF,CAOA,SAASxF,EAAK/2B,GACZyvB,EAAK,KAAMzvB,EACb,CACF,CCnIO,IAAM8a,EAQb,SAAS9I,IACP,IAMImlB,EANEE,EDpBD,WAEL,IAAMX,EAAM,GAENwC,EAAW,CAACZ,IAKlB,WAAwB,2BAARre,EAAM,yBAANA,EAAM,gBACpB,IAAIgxC,GAAmB,EAEjBp0B,EAAW5c,EAAOhD,MAExB,GAAwB,oBAAb4f,EACT,MAAM,IAAInwB,UAAU,2CAA6CmwB,GAWnE,SAAS/R,EAAKnd,GACZ,IAAM8S,EAAKic,IAAMu0B,GACbr5C,GAAS,EAEb,GAAIjK,EACFkvB,EAASlvB,OADX,CAKA,2BATsB40B,EAAM,iCAANA,EAAM,kBAU5B,OAAS3qB,EAAQqI,EAAOlc,QACA,OAAlBw+B,EAAO3qB,SAAqCjR,IAAlB47B,EAAO3qB,KACnC2qB,EAAO3qB,GAASqI,EAAOrI,IAK3BqI,EAASsiB,EAGL9hB,EACF+b,EAAK/b,EAAIqK,GAAK,aAAIyX,GAElB1F,EAAQ,cAAC,MAAI,OAAK0F,GAhBpB,CAkBF,CAjCAzX,EAAI,cAAC,MAAI,eAAK7K,IAkChB,EAhDuBe,IAmDvB,SAAakwC,GACX,GAA0B,oBAAfA,EACT,MAAM,IAAIxkD,UACR,+CAAiDwkD,GAKrD,OADAx0B,EAAI90B,KAAKspD,GACFhyB,CACT,GA1DA,OAAOA,CA2DT,CC7CuBzC,GAEfW,EAAY,GAEdE,EAAY,CAAC,EAGbC,GAAe,EA2BnB,OAvBAC,EAAUhmB,KA6CV,SAAc3M,EAAK7E,GACjB,GAAmB,kBAAR6E,EAET,OAAyB,IAArB/G,UAAUC,QACZ05B,EAAe,OAAQN,GACvBG,EAAUzyB,GAAO7E,EACVw3B,GAID9c,EAAIhW,KAAK4yB,EAAWzyB,IAAQyyB,EAAUzyB,IAAS,KAIzD,GAAIA,EAGF,OAFA4yB,EAAe,OAAQN,GACvBG,EAAYzyB,EACL2yB,EAIT,OAAOF,CACT,EAlEAE,EAAUnB,YAAS11B,EACnB62B,EAAUpmB,cAAWzQ,EAGrB62B,EAAUvc,OAiEV,WACE,GAAIkc,EACF,OAAOK,EAGT,OAASD,EAAcH,EAAUr5B,QAAQ,CACvC,QAA+Bq5B,EAAUG,IAAlC4zB,EAAQ,KAAKhmD,EAAO,WAE3B,IAAmB,IAAfA,EAAQ,GAAZ,EAImB,IAAfA,EAAQ,KACVA,EAAQ,QAAKxE,GAIf,IAAMk4B,EAAcsyB,EAASzmD,KAAI,MAAbymD,EAAQ,CAAM3zB,GAAS,eAAKryB,KAErB,oBAAhB0zB,GACTxB,EAAarc,IAAI6d,EAVnB,CAYF,CAKA,OAHA1B,GAAS,EACTI,EAAc1e,OAAO8nB,kBAEdnJ,CACT,EA1FAA,EAAUJ,UAAYA,EAEtBI,EAAUxc,IA+FV,SAAahb,GAAmB,2BAATmF,EAAO,iCAAPA,EAAO,kBAE5B,IAAI6R,EAIJ,GAFAygB,EAAe,MAAON,GAER,OAAVn3B,QAA4BW,IAAVX,QAEf,GAAqB,oBAAVA,EAChB03B,EAAS,cAAC13B,GAAK,OAAKmF,QACf,IAAqB,kBAAVnF,EAOhB,MAAM,IAAI0G,UAAU,+BAAiC1G,EAAQ,KANzDvD,MAAMC,QAAQsD,GAChB23B,EAAQ33B,GAER43B,EAAU53B,EAId,CAEIgX,IACFsgB,EAAUtgB,SAAWlX,OAAOyR,OAAO+lB,EAAUtgB,UAAY,CAAC,EAAGA,IAG/D,OAAOwgB,EAMP,SAASvE,EAAIjzB,GACX,GAAqB,oBAAVA,EACT03B,EAAU13B,OACL,IAAqB,kBAAVA,EAQhB,MAAM,IAAI0G,UAAU,+BAAiC1G,EAAQ,KAP7D,GAAIvD,MAAMC,QAAQsD,GAAQ,CACxB,QAA6BA,GAAtB83B,EAAM,KAAK3yB,EAAO,WACzBuyB,EAAS,cAACI,GAAM,eAAK3yB,IACvB,MACEyyB,EAAU53B,EAId,CACF,CAMA,SAAS43B,EAAUp3B,GACjBm3B,EAAQn3B,EAAOq3B,SAEXr3B,EAAOwW,WACTA,EAAWlX,OAAOyR,OAAOyF,GAAY,CAAC,EAAGxW,EAAOwW,UAEpD,CAMA,SAAS2gB,EAAQE,GACf,IAAIjmB,GAAS,EAEb,GAAgB,OAAZimB,QAAgCl3B,IAAZk3B,OAEjB,KAAIp7B,MAAMC,QAAQm7B,GAMvB,MAAM,IAAInxB,UAAU,oCAAsCmxB,EAAU,KALpE,OAASjmB,EAAQimB,EAAQ95B,QAAQ,CAE/Bk1B,EADc4E,EAAQjmB,GAExB,CAGF,CACF,CAOA,SAAS8lB,EAAUI,EAAQ93B,GAKzB,IAJA,IAEI+3B,EAFAnmB,GAAS,IAIJA,EAAQwlB,EAAUr5B,QACzB,GAAIq5B,EAAUxlB,GAAO,KAAOkmB,EAAQ,CAClCC,EAAQX,EAAUxlB,GAClB,KACF,CAGEmmB,GACEqzB,EAAWrzB,EAAM,KAAOqzB,EAAWprD,KACrCA,EAAQyF,GAAO,EAAMsyB,EAAM,GAAI/3B,IAGjC+3B,EAAM,GAAK/3B,GAGXo3B,EAAUx1B,KAAK,MAAD,qBAAK9D,WAEvB,CACF,EApMA05B,EAAUj4B,MAuMV,SAAe+2B,GACbkB,EAAUvc,SACV,IAAMgd,EAAOf,EAAMZ,GACbD,EAASmB,EAAUnB,OAGzB,GAFA6B,EAAa,QAAS7B,GAElB8B,EAAQ9B,EAAQ,SAElB,OAAO,IAAIA,EAAOv1B,OAAOm3B,GAAOA,GAAM14B,QAIxC,OAAO82B,EAAOv1B,OAAOm3B,GAAOA,EAC9B,EAnNAT,EAAUzc,UAsNV,SAAmB3T,EAAMkvB,GACvBkB,EAAUvc,SACV,IAAMgd,EAAOf,EAAMZ,GACbllB,EAAWomB,EAAUpmB,SAI3B,GAHAgnB,EAAe,YAAahnB,GAC5BinB,EAAWjxB,GAEP+wB,EAAQ/mB,EAAU,WAEpB,OAAO,IAAIA,EAAShK,EAAM6wB,GAAM7X,UAIlC,OAAOhP,EAAShK,EAAM6wB,EACxB,EAlOAT,EAAUc,IA0OV,SAAalxB,EAAMkvB,EAAKO,GACtBwB,EAAWjxB,GACXowB,EAAUvc,SAEL4b,GAA2B,oBAARP,IACtBO,EAAWP,EACXA,OAAM31B,GAGR,IAAKk2B,EACH,OAAO,IAAIkC,QAAQC,GAUrB,SAASA,EAASpN,EAASqN,GAUzB,SAASxJ,EAAK9nB,EAAO0J,EAAM4mB,GACzB5mB,EAAOA,GAAQjK,EACXO,EACFsxB,EAAOtxB,GACEikB,EACTA,EAAQva,GAGRwlB,EAAS,KAAMxlB,EAAM4mB,EAEzB,CAlBAZ,EAAaiB,IAAIlxB,EAAM8vB,EAAMZ,GAAM7G,EAmBrC,CA5BAuJ,EAAS,KAAMnC,EA6BjB,EAnRAW,EAAUe,QAsRV,SAAiBnxB,EAAM6wB,GAErB,IAAIz3B,EAEAg4B,EAOJ,OALAhB,EAAUc,IAAIlxB,EAAM6wB,EAAMxI,GAE1BgJ,EAAW,UAAW,MAAOD,GAGtBh4B,EAOP,SAASivB,EAAK9nB,EAAO0J,GACnB2lB,EAAKrvB,GACLnH,EAAS6Q,EACTmnB,GAAW,CACb,CACF,EA3SAhB,EAAUkB,QAkTV,SAAiBpC,EAAKO,GAKpB,GAJAW,EAAUvc,SACVid,EAAa,UAAWV,EAAUnB,QAClC+B,EAAe,UAAWZ,EAAUpmB,WAE/BylB,EACH,OAAO,IAAIkC,QAAQC,GAUrB,SAASA,EAASpN,EAASqN,GACzB,IAAMhB,EAAOf,EAAMZ,GA0BnB,SAAS7G,EAAK9nB,EAAOswB,GACftwB,IAAUswB,EACZgB,EAAOtxB,GACEikB,EACTA,EAAQqM,GAGRpB,EAAS,KAAMoB,EAEnB,CAjCAT,EAAUc,IAAId,EAAUj4B,MAAM04B,GAAOA,GAAM,SAACtwB,EAAO0J,EAAM4mB,GACvD,IAAItwB,GAAU0J,GAAS4mB,EAEhB,CAEL,IAAMz3B,EAASg3B,EAAUzc,UAAU1J,EAAM4mB,QAE1Bt3B,IAAXH,GAAmC,OAAXA,IAsMZ,kBADIR,EAnMYQ,IAoMJwI,EAAShJ,GAnMnCi4B,EAAKj4B,MAAQQ,EAEby3B,EAAKz3B,OAASA,GAGhBivB,EAAK9nB,EAAOswB,EACd,MAdExI,EAAK9nB,GA0Mf,IAA8B3H,CA3LxB,GAiBF,CA5CAg5B,EAAS,KAAMnC,EA6CjB,EAvWAW,EAAUmB,YA0WV,SAAqBrC,GAEnB,IAAIkC,EAEJhB,EAAUvc,SACVid,EAAa,cAAeV,EAAUnB,QACtC+B,EAAe,cAAeZ,EAAUpmB,UAExC,IAAM6mB,EAAOf,EAAMZ,GAMnB,OAJAkB,EAAUkB,QAAQT,EAAMxI,GAExBgJ,EAAW,cAAe,UAAWD,GAE9BP,EAMP,SAASxI,EAAK9nB,GACZ6wB,GAAW,EACXxB,EAAKrvB,EACP,CACF,EA/XO6vB,EAIP,SAASA,IAIP,IAHA,IAAMoB,EAAc5mB,IAChBJ,GAAS,IAEJA,EAAQwlB,EAAUr5B,QACzB66B,EAAY5d,IAAG,MAAf4d,GAAW,OAAQxB,EAAUxlB,KAK/B,OAFAgnB,EAAYpnB,KAAK/L,GAAO,EAAM,CAAC,EAAG6xB,IAE3BsB,CACT,CAiXF,CA3auB5mB,GAAOiJ,SAExBP,EAAM,CAAC,EAAErW,eAkbf,SAAS8zB,EAAQn4B,EAAOuC,GACtB,MACmB,oBAAVvC,GAGPA,EAAMrC,YAeV,SAAcqC,GAEZ,IAAI6E,EAEJ,IAAKA,KAAO7E,EACV,GAAI0a,EAAIhW,KAAK1E,EAAO6E,GAClB,OAAO,EAIX,OAAO,CACT,CArBKw0B,CAAKr5B,EAAMrC,YAAc4E,KAAQvC,EAAMrC,UAE5C,CA4BA,SAASu6B,EAAa31B,EAAMvC,GAC1B,GAAqB,oBAAVA,EACT,MAAM,IAAI0G,UAAU,WAAanE,EAAO,qBAE5C,CASA,SAAS61B,EAAe71B,EAAMvC,GAC5B,GAAqB,oBAAVA,EACT,MAAM,IAAI0G,UAAU,WAAanE,EAAO,uBAE5C,CASA,SAASk1B,EAAel1B,EAAM40B,GAC5B,GAAIA,EACF,MAAM,IAAIh2B,MACR,gBACEoB,EACA,mHAGR,CAQA,SAAS81B,EAAWjxB,GAGlB,IAAKgkD,EAAWhkD,IAA8B,kBAAdA,EAAK1F,KACnC,MAAM,IAAIgF,UAAU,uBAAyBU,EAAO,IAGxD,CAUA,SAASqxB,EAAWl2B,EAAM+2B,EAAWd,GACnC,IAAKA,EACH,MAAM,IAAIr3B,MACR,IAAMoB,EAAO,0BAA4B+2B,EAAY,YAG3D,CAMA,SAASpC,EAAMl3B,GACb,OAOF,SAAyBA,GACvB,OAAOwO,QACLxO,GACmB,kBAAVA,GACP,YAAaA,GACb,aAAcA,EAEpB,CAdSqrD,CAAgBrrD,GAASA,EAAQ,IAAIi6B,EAAMj6B,EACpD,CCnjBO,SAAS6D,EAASuD,EAAMjC,GAC7B,IAA4C,GAAbA,GAAW,CAAC,GAAtCmmD,gBACL,OAAOpyC,EAAI9R,OADS,IAAG,GAAI,EAE7B,CAOA,SAAS8R,EAAI9R,EAAMkkD,GACjB,OACGlkD,GACiB,kBAATA,IAENA,EAAKpH,QAEHsrD,EAAkBlkD,EAAKyN,IAAM,KAE7B,aAAczN,GAAQ4S,EAAI5S,EAAKmF,SAAU++C,IACzC7uD,MAAMC,QAAQ0K,IAAS4S,EAAI5S,EAAMkkD,KACtC,EAEJ,CAOA,SAAStxC,EAAIC,EAAQqxC,GAKnB,IAHA,IAAI9qD,EAAS,GACToR,GAAS,IAEJA,EAAQqI,EAAOlc,QACtByC,EAAOoR,GAASsH,EAAIe,EAAOrI,GAAQ05C,GAGrC,OAAO9qD,EAAOyC,KAAK,GACrB,mCC5CawE,EAAU,CACrB4c,SAIF,SAA2BC,GACzB,IAOIC,EAPEC,EAAeF,EAAQG,QAC3BnnB,KAAKmlB,OAAOiC,WAAWb,gBAUzB,SAAoC3V,GAClC,GAAa,OAATA,EAEF,YADAoW,EAAQK,QAAQzW,GAOlB,OAHAoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,eACN+R,EAAAA,EAAAA,GAAaE,EAASE,EAAc,aAC7C,IAGA,SAA0BtW,GAExB,OADAoW,EAAQhS,MAAM,aACPsS,EAAU1W,EACnB,IAnBA,OAAOsW,EAsBP,SAASI,EAAU1W,GACjB,IAAM4T,EAAQwC,EAAQhS,MAAM,YAAa,CACvCuS,YAAa,OACbN,SAAAA,IAQF,OALIA,IACFA,EAASO,KAAOhD,GAGlByC,EAAWzC,EACJtQ,EAAKtD,EACd,CAGA,SAASsD,EAAKtD,GACZ,OAAa,OAATA,GACFoW,EAAQjS,KAAK,aACbiS,EAAQjS,KAAK,kBACbiS,EAAQK,QAAQzW,KAIdiW,EAAAA,EAAAA,IAAmBjW,IACrBoW,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,aACNuS,IAGTN,EAAQK,QAAQzW,GACTsD,EACT,CACF,iBC1Da6I,GAAW,CACtBgK,SASF,SAA4BC,GAC1B,IAOIW,EAGAC,EAGAqmC,EAbEp6C,EAAO7T,KAGPuV,EAAQ,GACVsS,EAAY,EAUhB,OAAOje,EAGP,SAASA,EAAMgH,GAWb,GAAIiX,EAAYtS,EAAM9U,OAAQ,CAC5B,IAAMytD,EAAO34C,EAAMsS,GAEnB,OADAhU,EAAKqU,eAAiBgmC,EAAK,GACpBlnC,EAAQG,QACb+mC,EAAK,GAAG/lC,aACRkB,EACA8kC,EAHKnnC,CAILpW,EACJ,CAEA,OAAOu9C,EAAmBv9C,EAC5B,CAGA,SAASyY,EAAiBzY,GAKxB,GAJAiX,IAIIhU,EAAKqU,eAAeY,WAAY,CAClCjV,EAAKqU,eAAeY,gBAAazlB,EAE7BskB,GACFymC,IAUF,IANA,IAII3qC,EAJE4qC,EAAmBx6C,EAAKkP,OAAOtiB,OACjC6tD,EAAkBD,EAKfC,KACL,GACsC,SAApCz6C,EAAKkP,OAAOurC,GAAiB,IACY,cAAzCz6C,EAAKkP,OAAOurC,GAAiB,GAAGlqD,KAChC,CACAqf,EAAQ5P,EAAKkP,OAAOurC,GAAiB,GAAGrkD,IACxC,KACF,CAGFwf,EAAe5B,GAIf,IAFA,IAAIvT,EAAQ+5C,EAEL/5C,EAAQT,EAAKkP,OAAOtiB,QACzBoT,EAAKkP,OAAOzO,GAAO,GAAGrK,IAAMzH,OAAOyR,OAAO,CAAC,EAAGwP,GAC9CnP,IAWF,OARA8P,EAAAA,EAAAA,GACEvQ,EAAKkP,OACLurC,EAAkB,EAClB,EACAz6C,EAAKkP,OAAOjY,MAAMujD,IAGpBx6C,EAAKkP,OAAOtiB,OAAS6T,EACd65C,EAAmBv9C,EAC5B,CAEA,OAAOhH,EAAMgH,EACf,CAGA,SAASu9C,EAAmBv9C,GAM1B,GAAIiX,IAActS,EAAM9U,OAAQ,CAI9B,IAAKknB,EACH,OAAO2B,EAAkB1Y,GAK3B,GAAI+W,EAAUW,kBAAoBX,EAAUW,iBAAiBC,SAC3D,OAAOgB,EAAU3Y,GAKnBiD,EAAK6U,UAAYxX,QACfyW,EAAUW,mBAAqBX,EAAU4mC,8BAE7C,CAGA,OADA16C,EAAKqU,eAAiB,CAAC,EAChBlB,EAAQiC,MACbL,GACA4lC,EACAC,EAHKznC,CAILpW,EACJ,CAGA,SAAS49C,EAAqB59C,GAG5B,OAFI+W,GAAWymC,IACf3kC,EAAe5B,GACRyB,EAAkB1Y,EAC3B,CAGA,SAAS69C,EAAsB79C,GAG7B,OAFAiD,EAAKsR,OAAO4D,KAAKlV,EAAK6V,MAAM7f,MAAQge,IAActS,EAAM9U,OACxDwtD,EAAkBp6C,EAAK6V,MAAMhG,OACtB6F,EAAU3Y,EACnB,CAGA,SAAS0Y,EAAkB1Y,GAGzB,OADAiD,EAAKqU,eAAiB,CAAC,EAChBlB,EAAQG,QACbyB,GACAY,EACAD,EAHKvC,CAILpW,EACJ,CAGA,SAAS4Y,EAAkB5Y,GAIzB,OAHAiX,IACAtS,EAAMjR,KAAK,CAACuP,EAAKyU,iBAAkBzU,EAAKqU,iBAEjCoB,EAAkB1Y,EAC3B,CAGA,SAAS2Y,EAAU3Y,GACjB,OAAa,OAATA,GACE+W,GAAWymC,IACf3kC,EAAe,QACfzC,EAAQK,QAAQzW,KAIlB+W,EAAYA,GAAa9T,EAAKsR,OAAOjQ,KAAKrB,EAAK6V,OAC/C1C,EAAQhS,MAAM,YAAa,CACzBuS,YAAa,OACbN,SAAUW,EACV+B,WAAYhC,IAEPa,EAAa5X,GACtB,CAGA,SAAS4X,EAAa5X,GACpB,OAAa,OAATA,GACF89C,EAAa1nC,EAAQjS,KAAK,cAAc,GACxC0U,EAAe,QACfzC,EAAQK,QAAQzW,KAIdiW,EAAAA,EAAAA,IAAmBjW,IACrBoW,EAAQK,QAAQzW,GAChB89C,EAAa1nC,EAAQjS,KAAK,cAE1B8S,EAAY,EACZhU,EAAK6U,eAAYrlB,EACVuG,IAGTod,EAAQK,QAAQzW,GACT4X,EACT,CAOA,SAASkmC,EAAalqC,EAAOmqC,GAC3B,IAAM32B,EAASnkB,EAAKkW,YAAYvF,GAwChC,GAvCImqC,GAAK32B,EAAO1zB,KAAK,MACrBkgB,EAAMyC,SAAWW,EACbA,IAAYA,EAAWJ,KAAOhD,GAClCoD,EAAapD,EACbmD,EAAUmC,WAAWtF,EAAM5a,OAC3B+d,EAAUvC,MAAM4S,GAkCZnkB,EAAKsR,OAAO4D,KAAKvE,EAAM5a,MAAMC,MAAO,CAGtC,IAFA,IAAIyK,EAAQqT,EAAU5E,OAAOtiB,OAEtB6T,KACL,GAEEqT,EAAU5E,OAAOzO,GAAO,GAAG1K,MAAM8Z,OAASuqC,KACxCtmC,EAAU5E,OAAOzO,GAAO,GAAGrK,KAC3B0d,EAAU5E,OAAOzO,GAAO,GAAGrK,IAAIyZ,OAASuqC,GAI1C,OAcJ,IATA,IAII59B,EAGA5M,EAPE4qC,EAAmBx6C,EAAKkP,OAAOtiB,OACjC6tD,EAAkBD,EAQfC,KACL,GACsC,SAApCz6C,EAAKkP,OAAOurC,GAAiB,IACY,cAAzCz6C,EAAKkP,OAAOurC,GAAiB,GAAGlqD,KAChC,CACA,GAAIisB,EAAM,CACR5M,EAAQ5P,EAAKkP,OAAOurC,GAAiB,GAAGrkD,IACxC,KACF,CAEAomB,GAAO,CACT,CAOF,IAJA5G,EAAe5B,GAEfvT,EAAQ+5C,EAED/5C,EAAQT,EAAKkP,OAAOtiB,QACzBoT,EAAKkP,OAAOzO,GAAO,GAAGrK,IAAMzH,OAAOyR,OAAO,CAAC,EAAGwP,GAC9CnP,KAGF8P,EAAAA,EAAAA,GACEvQ,EAAKkP,OACLurC,EAAkB,EAClB,EACAz6C,EAAKkP,OAAOjY,MAAMujD,IAGpBx6C,EAAKkP,OAAOtiB,OAAS6T,CACvB,CACF,CAMA,SAASmV,EAAe7Q,GAGtB,IAFA,IAAItE,EAAQiB,EAAM9U,OAEX6T,KAAUsE,GAAM,CACrB,IAAM6hB,EAAQllB,EAAMjB,GACpBT,EAAKqU,eAAiBuS,EAAM,GAC5BA,EAAM,GAAG1lB,KAAK3N,KAAKyM,EAAMmT,EAC3B,CAEAzR,EAAM9U,OAASmY,CACjB,CAEA,SAASw1C,IACPzmC,EAAUvC,MAAM,CAAC,OACjBwC,OAAavkB,EACbskB,OAAYtkB,EACZwQ,EAAKqU,eAAeY,gBAAazlB,CACnC,CACF,GAjVMulB,GAAqB,CACzB7B,SAmVF,SAA2BC,EAASe,EAAIiC,GACtC,OAAOlD,EAAAA,EAAAA,GACLE,EACAA,EAAQG,QAAQnnB,KAAKmlB,OAAOiC,WAAWrK,SAAUgL,EAAIiC,GACrD,aACAhqB,KAAKmlB,OAAOiC,WAAWR,QAAQF,KAAKta,SAAS,qBAAkB/I,EAAY,EAE/E,kBCvWO,SAASmoB,GAAYzI,GA0B1B,IAxBA,IAIIe,EAGAF,EAGA8U,EAGAC,EAGArD,EAGAsD,EAGAC,EAtBEP,EAAQ,CAAC,EACXhkB,GAAS,IAuBJA,EAAQyO,EAAOtiB,QAAQ,CAC9B,KAAO6T,KAASgkB,GACdhkB,EAAQgkB,EAAMhkB,GAMhB,GAHAwP,EAAQf,EAAOzO,GAIbA,GACkB,cAAlBwP,EAAM,GAAG1f,MACqB,mBAA9B2e,EAAOzO,EAAQ,GAAG,GAAGlQ,QAGrBs0B,EAAa,IADbE,EAAY9U,EAAM,GAAG6F,WAAW5G,QAIPtiB,QACW,oBAAlCm4B,EAAUF,GAAY,GAAGt0B,OAEzBs0B,GAAc,GAIdA,EAAaE,EAAUn4B,QACW,YAAlCm4B,EAAUF,GAAY,GAAGt0B,MAEzB,OAASs0B,EAAaE,EAAUn4B,QACQ,YAAlCm4B,EAAUF,GAAY,GAAGt0B,MAIS,cAAlCw0B,EAAUF,GAAY,GAAGt0B,OAC3Bw0B,EAAUF,GAAY,GAAGk2B,6BAA8B,EACvDl2B,KAMR,GAAiB,UAAb5U,EAAM,GACJA,EAAM,GAAGyD,cACX/kB,OAAOyR,OAAOqkB,EAAOP,GAAWhV,EAAQzO,IACxCA,EAAQgkB,EAAMhkB,GACdukB,GAAO,QAGN,GAAI/U,EAAM,GAAGmJ,WAAY,CAI5B,IAHAyL,EAAapkB,EACbsP,OAAYvgB,EAELq1B,MAIoB,gBAHzBC,EAAa5V,EAAO2V,IAGP,GAAGt0B,MACS,oBAAvBu0B,EAAW,GAAGv0B,OAEQ,UAAlBu0B,EAAW,KACT/U,IACFb,EAAOa,GAAW,GAAGxf,KAAO,mBAG9Bu0B,EAAW,GAAGv0B,KAAO,aACrBwf,EAAY8U,GAOd9U,IAEFE,EAAM,GAAG7Z,IAAMzH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOa,GAAW,GAAGha,QAEtD0rB,EAAavS,EAAOjY,MAAM8Y,EAAWtP,IAC1BkhB,QAAQ1R,IACnBM,EAAAA,EAAAA,GAAOrB,EAAQa,EAAWtP,EAAQsP,EAAY,EAAG0R,GAErD,CACF,CAEA,OAAQuD,CACV,CASA,SAASd,GAAWhV,EAAQgI,GA+B1B,IA9BA,IAiBIiN,EAGA/Q,EApBEzC,EAAQzB,EAAOgI,GAAY,GAC3BjW,EAAUiO,EAAOgI,GAAY,GAC/BY,EAAgBZ,EAAa,EAG3BoN,EAAiB,GACjBC,EACJ5T,EAAMmF,YAAc7U,EAAQqQ,OAAOX,EAAM+C,aAAa/C,EAAM5a,OACxDyuB,EAAcD,EAAUrV,OAGxBuV,EAAQ,GAGRC,EAAO,CAAC,EAOVjkB,GAAS,EAGTu6C,EAAUrqC,EACV0T,EAAS,EACTtuB,EAAQ,EACNklD,EAAS,CAACllD,GAGTilD,GAAS,CAEd,KAAO9rC,IAAS4I,GAAe,KAAOkjC,IAItC12B,EAAe7zB,KAAKqnB,GAEfkjC,EAAQllC,aACXqO,EAASljB,EAAQiV,YAAY8kC,GAExBA,EAAQrnC,MACXwQ,EAAO1zB,KAAK,MAGV2iB,GACFmR,EAAUtO,WAAW+kC,EAAQjlD,OAG3BilD,EAAQD,8BACVx2B,EAAUK,oCAAqC,GAGjDL,EAAUhT,MAAM4S,GAEZ62B,EAAQD,8BACVx2B,EAAUK,wCAAqCp1B,IAInD4jB,EAAW4nC,EACXA,EAAUA,EAAQrnC,IACpB,CAKA,IAFAqnC,EAAUrqC,IAEDlQ,EAAQ+jB,EAAY53B,QAGC,SAA1B43B,EAAY/jB,GAAO,IACW,UAA9B+jB,EAAY/jB,EAAQ,GAAG,IACvB+jB,EAAY/jB,GAAO,GAAGlQ,OAASi0B,EAAY/jB,EAAQ,GAAG,GAAGlQ,MACzDi0B,EAAY/jB,GAAO,GAAG1K,MAAMC,OAASwuB,EAAY/jB,GAAO,GAAGrK,IAAIJ,OAE/DD,EAAQ0K,EAAQ,EAChBw6C,EAAOxqD,KAAKsF,GAEZilD,EAAQllC,gBAAatmB,EACrBwrD,EAAQ5nC,cAAW5jB,EACnBwrD,EAAUA,EAAQrnC,MAmBtB,IAfA4Q,EAAUrV,OAAS,GAIf8rC,GAEFA,EAAQllC,gBAAatmB,EACrBwrD,EAAQ5nC,cAAW5jB,GAEnByrD,EAAOn1C,MAITrF,EAAQw6C,EAAOruD,OAER6T,KAAS,CACd,IAAMxJ,EAAQutB,EAAYvtB,MAAMgkD,EAAOx6C,GAAQw6C,EAAOx6C,EAAQ,IACxD1K,EAAQuuB,EAAexe,MAC7B2e,EAAM9C,QAAQ,CAAC5rB,EAAOA,EAAQkB,EAAMrK,OAAS,KAC7C2jB,EAAAA,EAAAA,GAAOrB,EAAQnZ,EAAO,EAAGkB,EAC3B,CAIA,IAFAwJ,GAAS,IAEAA,EAAQgkB,EAAM73B,QACrB83B,EAAKL,EAASI,EAAMhkB,GAAO,IAAM4jB,EAASI,EAAMhkB,GAAO,GACvD4jB,GAAUI,EAAMhkB,GAAO,GAAKgkB,EAAMhkB,GAAO,GAAK,EAGhD,OAAOikB,CACT,CCvOO,IAAMpuB,GAAU,CACrB4c,SAsBF,SAAyBC,EAASe,GAEhC,IAAId,EACJ,OAGA,SAAerW,GAKb,OAJAoW,EAAQhS,MAAM,WACdiS,EAAWD,EAAQhS,MAAM,eAAgB,CACvCuS,YAAa,YAERrT,EAAKtD,EACd,EAGA,SAASsD,EAAKtD,GACZ,OAAa,OAATA,EACK8d,EAAW9d,IAGhBiW,EAAAA,EAAAA,IAAmBjW,GACdoW,EAAQiC,MACb0F,GACAR,EACAO,EAHK1H,CAILpW,IAGJoW,EAAQK,QAAQzW,GACTsD,EACT,CAGA,SAASwa,EAAW9d,GAGlB,OAFAoW,EAAQjS,KAAK,gBACbiS,EAAQjS,KAAK,WACNgT,EAAGnX,EACZ,CAGA,SAASud,EAAgBvd,GAQvB,OAPAoW,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,gBACbkS,EAASO,KAAOR,EAAQhS,MAAM,eAAgB,CAC5CuS,YAAa,UACbN,SAAAA,IAEFA,EAAWA,EAASO,KACbtT,CACT,CACF,EAvEEoa,QAeF,SAAwBvL,GAEtB,OADAyI,GAAYzI,GACLA,CACT,GAdM4L,GAAwB,CAC5B5H,SAqEF,SAA8BC,EAASe,EAAIiC,GACzC,IAAMnW,EAAO7T,KACb,OAGA,SAAwB4Q,GAKtB,OAJAoW,EAAQjS,KAAK,gBACbiS,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,eACN+R,EAAAA,EAAAA,GAAaE,EAAS4H,EAAU,aACzC,EAGA,SAASA,EAAShe,GAChB,GAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,GACtC,OAAOoZ,EAAIpZ,GAGb,IAAMiU,EAAOhR,EAAKkP,OAAOlP,EAAKkP,OAAOtiB,OAAS,GAE9C,OACGoT,EAAKsR,OAAOiC,WAAWR,QAAQF,KAAKta,SAAS,iBAC9CyY,GACiB,eAAjBA,EAAK,GAAGzgB,MACRygB,EAAK,GAAGtB,eAAesB,EAAK,IAAI,GAAMpkB,QAAU,EAEzCsnB,EAAGnX,GAGLoW,EAAQ0B,UAAU7U,EAAKsR,OAAOiC,WAAWlS,KAAM8U,EAAKjC,EAApDf,CAAwDpW,EACjE,CACF,EApGEwY,SAAS,GCbJ,IAAMlU,GAAO,CAClB6R,SAIF,SAAwBC,GACtB,IAAMnT,EAAO7T,KACPiqB,EAAUjD,EAAQG,QAEtBge,GAAAA,GAmBF,SAAuBv0B,GACrB,GAAa,OAATA,EAEF,YADAoW,EAAQK,QAAQzW,GAQlB,OAJAoW,EAAQhS,MAAM,mBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,mBACblB,EAAKyU,sBAAmBjlB,EACjB4mB,CACT,GA5BEjD,EAAQG,QACNnnB,KAAKmlB,OAAOiC,WAAWZ,YACvB0D,GACApD,EAAAA,EAAAA,GACEE,EACAA,EAAQG,QACNnnB,KAAKmlB,OAAOiC,WAAWlS,KACvBgV,EACAlD,EAAQG,QAAQhd,GAAS+f,IAE3B,gBAIN,OAAOD,EAiBP,SAASC,EAAetZ,GACtB,GAAa,OAATA,EASJ,OAJAoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,cACblB,EAAKyU,sBAAmBjlB,EACjB4mB,EARLjD,EAAQK,QAAQzW,EASpB,CACF,GCxDO,IAAM+V,GAAW,CACtB0D,WAAYC,MAEDhe,GAAS8d,GAAkB,UAC3Bxa,GAAOwa,GAAkB,QAMtC,SAASA,GAAkBG,GACzB,MAAO,CACLxD,SAOF,SAAwBC,GACtB,IAAMnT,EAAO7T,KACPonB,EAAapnB,KAAKmlB,OAAOiC,WAAWmD,GACpC3a,EAAOoX,EAAQG,QAAQC,EAAYxd,EAAO4gB,GAChD,OAAO5gB,EAGP,SAASA,EAAMgH,GACb,OAAO8H,EAAQ9H,GAAQhB,EAAKgB,GAAQ4Z,EAAQ5Z,EAC9C,CAGA,SAAS4Z,EAAQ5Z,GACf,GAAa,OAATA,EAOJ,OAFAoW,EAAQhS,MAAM,QACdgS,EAAQK,QAAQzW,GACTsD,EANL8S,EAAQK,QAAQzW,EAOpB,CAGA,SAASsD,EAAKtD,GACZ,OAAI8H,EAAQ9H,IACVoW,EAAQjS,KAAK,QACNnF,EAAKgB,KAGdoW,EAAQK,QAAQzW,GACTsD,EACT,CAMA,SAASwE,EAAQ9H,GACf,GAAa,OAATA,EACF,OAAO,EAGT,IAAMoH,EAAOoP,EAAWxW,GACpB0D,GAAS,EAEb,GAAI0D,EACF,OAAS1D,EAAQ0D,EAAKvX,QAAQ,CAC5B,IAAMytD,EAAOl2C,EAAK1D,GAElB,IAAK45C,EAAKjnC,UAAYinC,EAAKjnC,SAAS7f,KAAKyM,EAAMA,EAAKoT,UAClD,OAAO,CAEX,CAGF,OAAO,CACT,CACF,EAhEEoD,WAAYC,GACA,SAAVC,EAAmBE,QAAyBpnB,GAgElD,CAMA,SAASinB,GAAeI,GACtB,OAGA,SAAwB3H,EAAQjO,GAC9B,IAGIE,EAHAV,GAAS,EAMb,OAASA,GAASyO,EAAOtiB,aACT4C,IAAV2R,EACE+N,EAAOzO,IAAoC,SAA1ByO,EAAOzO,GAAO,GAAGlQ,OACpC4Q,EAAQV,EACRA,KAEQyO,EAAOzO,IAAoC,SAA1ByO,EAAOzO,GAAO,GAAGlQ,OAExCkQ,IAAUU,EAAQ,IACpB+N,EAAO/N,GAAO,GAAG/K,IAAM8Y,EAAOzO,EAAQ,GAAG,GAAGrK,IAC5C8Y,EAAOqB,OAAOpP,EAAQ,EAAGV,EAAQU,EAAQ,GACzCV,EAAQU,EAAQ,GAGlBA,OAAQ3R,GAIZ,OAAOqnB,EAAgBA,EAAc3H,EAAQjO,GAAWiO,CAC1D,CACF,CAaA,SAAS0H,GAAuB1H,EAAQjO,GAGtC,IAFA,IAAIiW,EAAa,IAERA,GAAchI,EAAOtiB,QAC5B,IACGsqB,IAAehI,EAAOtiB,QACU,eAA/BsiB,EAAOgI,GAAY,GAAG3mB,OACW,SAAnC2e,EAAOgI,EAAa,GAAG,GAAG3mB,KAC1B,CAUA,IATA,IAAM8P,EAAO6O,EAAOgI,EAAa,GAAG,GAC9BJ,EAAS7V,EAAQiV,YAAY7V,GAC/BI,EAAQqW,EAAOlqB,OACfoqB,GAAe,EACfjS,EAAO,EAGPkS,OAAI,EAEDxW,KAAS,CACd,IAAMsW,EAAQD,EAAOrW,GAErB,GAAqB,kBAAVsW,EAAoB,CAG7B,IAFAC,EAAcD,EAAMnqB,OAEyB,KAAtCmqB,EAAMvkB,WAAWwkB,EAAc,IACpCjS,IACAiS,IAGF,GAAIA,EAAa,MACjBA,GAAe,CACjB,MACK,IAAe,IAAXD,EACPE,GAAO,EACPlS,SACK,IAAe,IAAXgS,EAEJ,CAELtW,IACA,KACF,CACF,CAEA,GAAIsE,EAAM,CACR,IAAM4L,EAAQ,CACZpgB,KACE2mB,IAAehI,EAAOtiB,QAAUqqB,GAAQlS,EAAO,EAC3C,aACA,oBACNhP,MAAO,CACLC,KAAMqK,EAAKjK,IAAIJ,KACfP,OAAQ4K,EAAKjK,IAAIX,OAASsP,EAC1B8K,OAAQxP,EAAKjK,IAAIyZ,OAAS9K,EAC1BoS,OAAQ9W,EAAKtK,MAAMohB,OAAS1W,EAC5B2W,aAAc3W,EACVuW,EACA3W,EAAKtK,MAAMqhB,aAAeJ,GAEhC5gB,IAAKzH,OAAOyR,OAAO,CAAC,EAAGC,EAAKjK,MAE9BiK,EAAKjK,IAAMzH,OAAOyR,OAAO,CAAC,EAAGuQ,EAAM5a,OAE/BsK,EAAKtK,MAAM8Z,SAAWxP,EAAKjK,IAAIyZ,OACjClhB,OAAOyR,OAAOC,EAAMsQ,IAEpBzB,EAAOqB,OACL2G,EACA,EACA,CAAC,QAASvG,EAAO1P,GACjB,CAAC,OAAQ0P,EAAO1P,IAElBiW,GAAc,EAElB,CAEAA,GACF,CAGF,OAAOhI,CACT,gBC9KO,SAASoI,GAAgBhG,EAAQ2Q,EAAYvK,GAElD,IAAI9H,EAAQjhB,OAAOyR,OACjBsX,EACI/oB,OAAOyR,OAAO,CAAC,EAAGsX,GAClB,CACE1hB,KAAM,EACNP,OAAQ,EACRoa,OAAQ,GAEd,CACEsH,OAAQ,EACRC,cAAe,IAKb8K,EAAc,CAAC,EAGfC,EAAuB,GAGzBrL,EAAS,GAGTpV,EAAQ,GAUNyR,EAAU,CACdK,QA2IF,SAAiBzW,IACXiW,EAAAA,EAAAA,IAAmBjW,IACrB6S,EAAM5Z,OACN4Z,EAAMna,OAAS,EACfma,EAAMC,SAAoB,IAAV9S,EAAc,EAAI,EAClCqlB,MACmB,IAAVrlB,IACT6S,EAAMna,SACNma,EAAMC,UAGJD,EAAMwH,aAAe,EACvBxH,EAAMuH,UAENvH,EAAMwH,eAIFxH,EAAMwH,eAAiBN,EAAOlH,EAAMuH,QAAQvqB,SAC9CgjB,EAAMwH,cAAgB,EACtBxH,EAAMuH,WAIVlW,EAAQmS,SAAWrW,GAER,CACb,EArKEoE,MAwKF,SAAe5Q,EAAM8xB,GAGnB,IAAM1R,EAAQ0R,GAAU,CAAC,EAKzB,OAJA1R,EAAMpgB,KAAOA,EACbogB,EAAM5a,MAAQ8f,IACd5U,EAAQiO,OAAOze,KAAK,CAAC,QAASkgB,EAAO1P,IACrCS,EAAMjR,KAAKkgB,GACJA,CACT,EAhLEzP,KAmLF,SAAc3Q,GACZ,IAAMogB,EAAQjP,EAAMoE,MAGpB,OAFA6K,EAAMva,IAAMyf,IACZ5U,EAAQiO,OAAOze,KAAK,CAAC,OAAQkgB,EAAO1P,IAC7B0P,CACT,EAvLE2C,QAASgP,GA8LX,SAA+BC,EAAWnI,GACxCoI,EAAUD,EAAWnI,EAAK1C,KAC5B,IA/LEtC,MAAOkN,EAAiBG,GACxB5N,UAAWyN,EAAiBG,EAAmB,CAC7C5N,WAAW,KAST5T,EAAU,CACdmS,SAAU,KACVrW,KAAM,KACNsX,eAAgB,CAAC,EACjBnF,OAAQ,GACRoC,OAAAA,EACA4E,YAAAA,EACAxG,eA6CF,SAAwBiB,EAAOuqC,GAC7B,OAsYJ,SAAyBpkC,EAAQokC,GAC/B,IAMIt3B,EANAnjB,GAAS,EAGPpR,EAAS,GAKf,OAASoR,EAAQqW,EAAOlqB,QAAQ,CAC9B,IAAMmqB,EAAQD,EAAOrW,GAGjB5R,OAAK,EAET,GAAqB,kBAAVkoB,EACTloB,EAAQkoB,OAER,OAAQA,GACN,KAAM,EACJloB,EAAQ,KACR,MAGF,KAAM,EACJA,EAAQ,KACR,MAGF,KAAM,EACJA,EAAQ,OACR,MAGF,KAAM,EACJA,EAAQqsD,EAAa,IAAM,KAC3B,MAGF,KAAM,EACJ,IAAKA,GAAct3B,EAAO,SAC1B/0B,EAAQ,IACR,MAGF,QAEEA,EAAQc,OAAOC,aAAamnB,GAIlC6M,GAAmB,IAAX7M,EACR1nB,EAAOoB,KAAK5B,EACd,CAEA,OAAOQ,EAAOyC,KAAK,GACrB,CA9bWiwB,CAAgB7L,EAAYvF,GAAQuqC,EAC7C,EA9CErlC,IAAAA,EACAI,WA0DF,SAAoBpnB,GAClBqzB,EAAYrzB,EAAMmH,MAAQnH,EAAM4G,OAChC2sB,GACF,EA5DE7Q,MAwBF,SAAeta,GAIb,GAHA6f,GAASrmB,EAAAA,EAAAA,GAAKqmB,EAAQ7f,GACtByrB,IAEkC,OAA9B5L,EAAOA,EAAOlqB,OAAS,GACzB,MAAO,GAMT,OAHA41B,EAAUP,EAAY,GAEtBhhB,EAAQiO,QAASsH,EAAAA,GAAAA,GAAW2L,EAAsBlhB,EAAQiO,OAAQjO,GAC3DA,EAAQiO,MACjB,GA5BIyT,EAAQV,EAAW/O,SAAS3f,KAAK0N,EAASkS,GAa9C,OAJI8O,EAAWzL,YACb2L,EAAqB1xB,KAAKwxB,GAGrBhhB,EA0BP,SAASiV,EAAYvF,GACnB,OA6VJ,SAAqBmG,EAAQnG,GAC3B,IAMIkT,EANEC,EAAanT,EAAM5a,MAAMohB,OACzB4M,EAAmBpT,EAAM5a,MAAMqhB,aAC/B4M,EAAWrT,EAAMva,IAAI+gB,OACrB8M,EAAiBtT,EAAMva,IAAIghB,aAK7B0M,IAAeE,EAEjBH,EAAO,CAAC/M,EAAOgN,GAAY7sB,MAAM8sB,EAAkBE,KAEnDJ,EAAO/M,EAAO7f,MAAM6sB,EAAYE,GAE5BD,GAAoB,IAEtBF,EAAK,GAAKA,EAAK,GAAG5sB,MAAM8sB,IAGtBE,EAAiB,GAEnBJ,EAAKpzB,KAAKqmB,EAAOkN,GAAU/sB,MAAM,EAAGgtB,KAIxC,OAAOJ,CACT,CAxXW7B,CAAYlL,EAAQnG,EAC7B,CAGA,SAASkF,IACP,OAAOlnB,OAAOyR,OAAO,CAAC,EAAGwP,EAC3B,CAqBA,SAAS8S,IAIP,IAFA,IAAIE,EAEGhT,EAAMuH,OAASL,EAAOlqB,QAAQ,CACnC,IAAMmqB,EAAQD,EAAOlH,EAAMuH,QAE3B,GAAqB,kBAAVJ,EAOT,IANA6L,EAAahT,EAAMuH,OAEfvH,EAAMwH,aAAe,IACvBxH,EAAMwH,aAAe,GAIrBxH,EAAMuH,SAAWyL,GACjBhT,EAAMwH,aAAeL,EAAMnqB,QAE3Bi2B,EAAG9L,EAAMvkB,WAAWod,EAAMwH,oBAG5ByL,EAAG9L,EAEP,CACF,CAQA,SAAS8L,EAAG9lB,QACCvN,EACIuN,EACf4lB,EAAQA,EAAM5lB,EAChB,CAkEA,SAAS0lB,EAAkBzhB,EAAGoZ,GAC5BA,EAAK0I,SACP,CAQA,SAASR,EAAiBS,EAAUV,GAClC,OAWA,SAAc9O,EAAYkL,EAAauE,GAErC,IAAIC,EAGAC,EAGAzO,EAGA2F,EACJ,OAAO9uB,MAAMC,QAAQgoB,GAEjB4P,EAAuB5P,GACvB,aAAcA,EACd4P,EAAuB,CAAC5P,IAS5B,SAA+BxhB,GAC7B,OAAOgE,EAGP,SAASA,EAAMgH,GACb,IAAMo+C,EAAe,OAATp+C,GAAiBhL,EAAIgL,GAC3B8L,EAAe,OAAT9L,GAAiBhL,EAAI8gB,KAQjC,OAAOsQ,EAPM,GAAH,eAIJ73B,MAAMC,QAAQ4vD,GAAOA,EAAMA,EAAM,CAACA,GAAO,KAAE,OAC3C7vD,MAAMC,QAAQsd,GAAOA,EAAMA,EAAM,CAACA,GAAO,KAExCsa,CAA6BpmB,EACtC,CACF,CAxBIq+C,CAAsB7nC,GAgC1B,SAAS4P,EAAuBhf,GAI9B,OAHA8e,EAAmB9e,EACnB+e,EAAiB,EAEG,IAAhB/e,EAAKvX,OACAo2B,EAGFI,EAAgBjf,EAAK+e,GAC9B,CAQA,SAASE,EAAgBb,GACvB,OAGA,SAAexlB,GAKbqd,EA4ER,WACE,IAAMiJ,EAAaxN,IACbyN,EAAgBriB,EAAQmS,SACxBmQ,EAAwBtiB,EAAQwT,iBAChC+O,EAAmBviB,EAAQiO,OAAOtiB,OAClC62B,EAAan4B,MAAMosB,KAAKhW,GAC9B,MAAO,CACLohB,QAAAA,EACApL,KAAM8L,GAQR,SAASV,IACPlT,EAAQyT,EACRpiB,EAAQmS,SAAWkQ,EACnBriB,EAAQwT,iBAAmB8O,EAC3BtiB,EAAQiO,OAAOtiB,OAAS42B,EACxB9hB,EAAQ+hB,EACRrB,GACF,CACF,CApGesB,GACPjP,EAAmB8N,EAEdA,EAAUhN,UACbtU,EAAQwT,iBAAmB8N,GAG7B,GACEA,EAAUnxB,MACV6P,EAAQqQ,OAAOiC,WAAWR,QAAQF,KAAKta,SAASgqB,EAAUnxB,MAE1D,OAAO+kB,EAAIpZ,GAGb,OAAOwlB,EAAUrP,SAAS3f,KAIxB8uB,EAAS1zB,OAAOyR,OAAOzR,OAAO6hB,OAAOvP,GAAUohB,GAAUphB,EACzDkS,EACAe,EACAiC,EAPKoM,CAQLxlB,EACJ,CACF,CAGA,SAASmX,EAAGnX,GAGV,OAFW,EACXgmB,EAAStO,EAAkB2F,GACpBqE,CACT,CAGA,SAAStI,EAAIpZ,GAIX,OAHW,EACXqd,EAAK0I,YAECI,EAAiBD,EAAiBr2B,OAC/Bw2B,EAAgBH,EAAiBC,IAGnCF,CACT,CACF,CACF,CAOA,SAASR,EAAUD,EAAW7K,GACxB6K,EAAU/L,aAAe2L,EAAqB5pB,SAASgqB,IACzDJ,EAAqB1xB,KAAK8xB,GAGxBA,EAAU9H,UACZlK,EAAAA,EAAAA,GACEtP,EAAQiO,OACRwI,EACAzW,EAAQiO,OAAOtiB,OAAS8qB,EACxB6K,EAAU9H,QAAQxZ,EAAQiO,OAAOjY,MAAMygB,GAAOzW,IAI9CshB,EAAU/D,YACZvd,EAAQiO,OAASqT,EAAU/D,UAAUvd,EAAQiO,OAAQjO,GAEzD,CAuCA,SAASmhB,IACHxS,EAAM5Z,QAAQksB,GAAetS,EAAMna,OAAS,IAC9Cma,EAAMna,OAASysB,EAAYtS,EAAM5Z,MACjC4Z,EAAMC,QAAUqS,EAAYtS,EAAM5Z,MAAQ,EAE9C,CACF,gBCneawO,GAAgB,CAC3BpT,KAAM,gBACN8hB,SAIF,SAA+BC,EAASe,EAAIiC,GAC1C,IAGIrU,EAHAiD,EAAO,EAIX,OAGA,SAAehI,GAGb,OAFAoW,EAAQhS,MAAM,iBACdW,EAAS/E,EACF8H,EAAQ9H,EACjB,EAGA,SAAS8H,EAAQ9H,GACf,OAAIA,IAAS+E,GACXqR,EAAQhS,MAAM,yBACPS,EAAS7E,KAGdoc,EAAAA,EAAAA,IAAcpc,IACTkW,EAAAA,EAAAA,GAAaE,EAAStO,EAAS,aAA/BoO,CAA6ClW,GAGlDgI,EAAO,GAAe,OAAThI,KAAkBiW,EAAAA,EAAAA,IAAmBjW,GAC7CoZ,EAAIpZ,IAGboW,EAAQjS,KAAK,iBACNgT,EAAGnX,GACZ,CAGA,SAAS6E,EAAS7E,GAChB,OAAIA,IAAS+E,GACXqR,EAAQK,QAAQzW,GAChBgI,IACOnD,IAGTuR,EAAQjS,KAAK,yBACN2D,EAAQ9H,GACjB,CACF,GCzCO,IAAMoH,GAAO,CAClB/S,KAAM,OACN8hB,SAuBF,SAA2BC,EAASe,EAAIiC,GACtC,IAAMnW,EAAO7T,KACP6kB,EAAOhR,EAAKkP,OAAOlP,EAAKkP,OAAOtiB,OAAS,GAC1Ci0B,EACF7P,GAAyB,eAAjBA,EAAK,GAAGzgB,KACZygB,EAAK,GAAGtB,eAAesB,EAAK,IAAI,GAAMpkB,OACtC,EACFmY,EAAO,EACX,OAGA,SAAehI,GACb,IAAM8f,EACJ7c,EAAKqU,eAAe9jB,OACV,KAATwM,GAAwB,KAATA,GAAwB,KAATA,EAC3B,gBACA,eAEN,GACW,kBAAT8f,GACK7c,EAAKqU,eAAevS,QAAU/E,IAASiD,EAAKqU,eAAevS,QAC5D+P,EAAAA,EAAAA,IAAW9U,GACf,CAQA,GAPKiD,EAAKqU,eAAe9jB,OACvByP,EAAKqU,eAAe9jB,KAAOssB,EAC3B1J,EAAQhS,MAAM0b,EAAM,CAClBzD,YAAY,KAIH,kBAATyD,EAEF,OADA1J,EAAQhS,MAAM,kBACE,KAATpE,GAAwB,KAATA,EAClBoW,EAAQiC,MAAM5Q,GAAe2R,EAAKhG,EAAlCgD,CAA4CpW,GAC5CoT,EAASpT,GAGf,IAAKiD,EAAK6U,WAAsB,KAAT9X,EAGrB,OAFAoW,EAAQhS,MAAM,kBACdgS,EAAQhS,MAAM,iBACP2f,EAAO/jB,EAElB,CAEA,OAAOoZ,EAAIpZ,EACb,EAGA,SAAS+jB,EAAO/jB,GACd,OAAI8U,EAAAA,EAAAA,IAAW9U,MAAWgI,EAAO,IAC/BoO,EAAQK,QAAQzW,GACT+jB,KAIL9gB,EAAK6U,WAAa9P,EAAO,KAC1B/E,EAAKqU,eAAevS,OACjB/E,IAASiD,EAAKqU,eAAevS,OACpB,KAAT/E,GAAwB,KAATA,IAEnBoW,EAAQjS,KAAK,iBACNiP,EAASpT,IAGXoZ,EAAIpZ,EACb,CAKA,SAASoT,EAASpT,GAKhB,OAJAoW,EAAQhS,MAAM,kBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,kBACblB,EAAKqU,eAAevS,OAAS9B,EAAKqU,eAAevS,QAAU/E,EACpDoW,EAAQiC,MACbkc,GAAAA,EACAtxB,EAAK6U,UAAYsB,EAAM4K,EACvB5N,EAAQG,QACN0N,GACAC,EACAC,GAGN,CAGA,SAASH,EAAQhkB,GAGf,OAFAiD,EAAKqU,eAAe8M,kBAAmB,EACvCN,IACOI,EAAYlkB,EACrB,CAGA,SAASmkB,EAAYnkB,GACnB,OAAIoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQhS,MAAM,4BACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,4BACN+f,GAGF9K,EAAIpZ,EACb,CAGA,SAASkkB,EAAYlkB,GAInB,OAHAiD,EAAKqU,eAAetP,KAClB8b,EACA7gB,EAAK0P,eAAeyD,EAAQjS,KAAK,mBAAmB,GAAMtU,OACrDsnB,EAAGnX,EACZ,CACF,EAtIEuX,aAAc,CACZpB,SA2IJ,SAAkCC,EAASe,EAAIiC,GAC7C,IAAMnW,EAAO7T,KAEb,OADA6T,EAAKqU,eAAeY,gBAAazlB,EAC1B2jB,EAAQiC,MAAMkc,GAAAA,GAGrB,SAAiBv0B,GAMf,OALAiD,EAAKqU,eAAe+M,kBAClBphB,EAAKqU,eAAe+M,mBACpBphB,EAAKqU,eAAe8M,kBAGflO,EAAAA,EAAAA,GACLE,EACAe,EACA,iBACAlU,EAAKqU,eAAetP,KAAO,EAJtBkO,CAKLlW,EACJ,IAGA,SAAkBA,GAChB,GAAIiD,EAAKqU,eAAe+M,qBAAsBjI,EAAAA,EAAAA,IAAcpc,GAG1D,OAFAiD,EAAKqU,eAAe+M,uBAAoB5xB,EACxCwQ,EAAKqU,eAAe8M,sBAAmB3xB,EAChC6xB,EAAiBtkB,GAK1B,OAFAiD,EAAKqU,eAAe+M,uBAAoB5xB,EACxCwQ,EAAKqU,eAAe8M,sBAAmB3xB,EAChC2jB,EAAQG,QAAQgO,GAAiBpN,EAAImN,EAArClO,CAAuDpW,EAChE,IAGA,SAASskB,EAAiBtkB,GAKxB,OAHAiD,EAAKqU,eAAeY,YAAa,EAEjCjV,EAAK6U,eAAYrlB,GACVyjB,EAAAA,EAAAA,GACLE,EACAA,EAAQG,QAAQnP,GAAM+P,EAAIiC,GAC1B,aACAnW,EAAKsR,OAAOiC,WAAWR,QAAQF,KAAKta,SAAS,qBACzC/I,EACA,EANCyjB,CAOLlW,EACJ,CACF,GAzLEmE,KAuNF,SAAyBiS,GACvBA,EAAQjS,KAAK/U,KAAKkoB,eAAe9jB,KACnC,GArNMywB,GAAoC,CACxC9N,SA0NF,SAA0CC,EAASe,EAAIiC,GACrD,IAAMnW,EAAO7T,KACb,OAAO8mB,EAAAA,EAAAA,GACLE,GASF,SAAqBpW,GACnB,IAAMiU,EAAOhR,EAAKkP,OAAOlP,EAAKkP,OAAOtiB,OAAS,GAC9C,QAAQusB,EAAAA,EAAAA,IAAcpc,IACpBiU,GACiB,6BAAjBA,EAAK,GAAGzgB,KACN2jB,EAAGnX,GACHoZ,EAAIpZ,EACV,GAdE,2BACAiD,EAAKsR,OAAOiC,WAAWR,QAAQF,KAAKta,SAAS,qBACzC/I,EACA,EAYR,EA7OE+lB,SAAS,GAIL+L,GAAkB,CACtBpO,SAoLF,SAAwBC,EAASe,EAAIiC,GACnC,IAAMnW,EAAO7T,KACb,OAAO8mB,EAAAA,EAAAA,GACLE,GAOF,SAAqBpW,GACnB,IAAMiU,EAAOhR,EAAKkP,OAAOlP,EAAKkP,OAAOtiB,OAAS,GAC9C,OAAOokB,GACY,mBAAjBA,EAAK,GAAGzgB,MACRygB,EAAK,GAAGtB,eAAesB,EAAK,IAAI,GAAMpkB,SAAWoT,EAAKqU,eAAetP,KACnEmP,EAAGnX,GACHoZ,EAAIpZ,EACV,GAZE,iBACAiD,EAAKqU,eAAetP,KAAO,EAY/B,EArMEwQ,SAAS,GC3BJ,IAAM9K,GAAa,CACxBrZ,KAAM,aACN8hB,SAQF,SAAiCC,EAASe,EAAIiC,GAC5C,IAAMnW,EAAO7T,KACb,OAGA,SAAe4Q,GACb,GAAa,KAATA,EAAa,CACf,IAAM4lB,EAAQ3iB,EAAKqU,eAanB,OAXKsO,EAAMjS,OACTyC,EAAQhS,MAAM,aAAc,CAC1BiY,YAAY,IAEduJ,EAAMjS,MAAO,GAGfyC,EAAQhS,MAAM,oBACdgS,EAAQhS,MAAM,oBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,oBACNsB,CACT,CAEA,OAAO2T,EAAIpZ,EACb,EAGA,SAASyF,EAAMzF,GACb,OAAIoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQhS,MAAM,8BACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,8BACbiS,EAAQjS,KAAK,oBACNgT,IAGTf,EAAQjS,KAAK,oBACNgT,EAAGnX,GACZ,CACF,EA9CEuX,aAAc,CACZpB,SAgDJ,SAAwCC,EAASe,EAAIiC,GACnD,OAAOlD,EAAAA,EAAAA,GACLE,EACAA,EAAQG,QAAQ7I,GAAYyJ,EAAIiC,GAChC,aACAhqB,KAAKmlB,OAAOiC,WAAWR,QAAQF,KAAKta,SAAS,qBAAkB/I,EAAY,EAE/E,GArDE0R,KAwDF,SAAciS,GACZA,EAAQjS,KAAK,aACf,GCnDO,SAAS8Z,GACd7H,EACAe,EACAiC,EACA5lB,EACA+qB,EACAC,EACAC,EACAC,EACApZ,GAEA,IAAMqZ,EAAQrZ,GAAOqF,OAAO8nB,kBACxB5T,EAAU,EACd,OAGA,SAAe7e,GACb,GAAa,KAATA,EAMF,OALAoW,EAAQhS,MAAM5Q,GACd4iB,EAAQhS,MAAMma,GACdnI,EAAQhS,MAAMoa,GACdpI,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAKqa,GACNM,EAGT,GAAa,OAAT9e,GAA0B,KAATA,IAAe4b,EAAAA,EAAAA,IAAa5b,GAC/C,OAAOoZ,EAAIpZ,GASb,OANAoW,EAAQhS,MAAM5Q,GACd4iB,EAAQhS,MAAMqa,GACdrI,EAAQhS,MAAMsa,GACdtI,EAAQhS,MAAM,cAAe,CAC3BuS,YAAa,WAERoI,EAAe/e,EACxB,EAGA,SAAS8e,EAA0B9e,GACjC,OAAa,KAATA,GACFoW,EAAQhS,MAAMoa,GACdpI,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAKqa,GACbpI,EAAQjS,KAAKoa,GACbnI,EAAQjS,KAAK3Q,GACN2jB,IAGTf,EAAQhS,MAAMsa,GACdtI,EAAQhS,MAAM,cAAe,CAC3BuS,YAAa,WAERqI,EAAoBhf,GAC7B,CAGA,SAASgf,EAAoBhf,GAC3B,OAAa,KAATA,GACFoW,EAAQjS,KAAK,eACbiS,EAAQjS,KAAKua,GACNI,EAA0B9e,IAGtB,OAATA,GAA0B,KAATA,IAAeiW,EAAAA,EAAAA,IAAmBjW,GAC9CoZ,EAAIpZ,IAGboW,EAAQK,QAAQzW,GACA,KAATA,EAAcif,EAA4BD,EACnD,CAGA,SAASC,EAA0Bjf,GACjC,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCoW,EAAQK,QAAQzW,GACTgf,GAGFA,EAAoBhf,EAC7B,CAGA,SAAS+e,EAAe/e,GACtB,OAAa,KAATA,IACI6e,EAAUF,EAAcvF,EAAIpZ,IAClCoW,EAAQK,QAAQzW,GACT+e,GAGI,KAAT/e,EACG6e,KAQLzI,EAAQK,QAAQzW,GACT+e,IARL3I,EAAQjS,KAAK,eACbiS,EAAQjS,KAAKua,GACbtI,EAAQjS,KAAKsa,GACbrI,EAAQjS,KAAK3Q,GACN2jB,EAAGnX,IAOD,OAATA,IAAiB2c,EAAAA,EAAAA,IAA0B3c,GACzC6e,EAAgBzF,EAAIpZ,IACxBoW,EAAQjS,KAAK,eACbiS,EAAQjS,KAAKua,GACbtI,EAAQjS,KAAKsa,GACbrI,EAAQjS,KAAK3Q,GACN2jB,EAAGnX,KAGR4b,EAAAA,EAAAA,IAAa5b,GAAcoZ,EAAIpZ,IACnCoW,EAAQK,QAAQzW,GACA,KAATA,EAAckf,EAAuBH,EAC9C,CAGA,SAASG,EAAqBlf,GAC5B,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCoW,EAAQK,QAAQzW,GACT+e,GAGFA,EAAe/e,EACxB,CACF,CCpIO,SAASke,GAAa9H,EAASe,EAAIiC,EAAK5lB,EAAM2rB,EAAYT,GAC/D,IAIIpb,EAJEL,EAAO7T,KACT4Y,EAAO,EAIX,OAGA,SAAehI,GAMb,OALAoW,EAAQhS,MAAM5Q,GACd4iB,EAAQhS,MAAM+a,GACd/I,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAKgb,GACb/I,EAAQhS,MAAMsa,GACP5W,CACT,EAGA,SAASA,EAAQ9H,GACf,OACW,OAATA,GACS,KAATA,GACU,KAATA,IAAgBsD,GAQP,KAATtD,IACEgI,GACD,2BAA4B/E,EAAKsR,OAAOiC,YAC1CxO,EAAO,IAEAoR,EAAIpZ,GAGA,KAATA,GACFoW,EAAQjS,KAAKua,GACbtI,EAAQhS,MAAM+a,GACd/I,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAKgb,GACb/I,EAAQjS,KAAK3Q,GACN2jB,IAGLlB,EAAAA,EAAAA,IAAmBjW,IACrBoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,cACN2D,IAGTsO,EAAQhS,MAAM,cAAe,CAC3BuS,YAAa,WAER9M,EAAM7J,GACf,CAGA,SAAS6J,EAAM7J,GACb,OACW,OAATA,GACS,KAATA,GACS,KAATA,IACAiW,EAAAA,EAAAA,IAAmBjW,IACnBgI,IAAS,KAEToO,EAAQjS,KAAK,eACN2D,EAAQ9H,KAGjBoW,EAAQK,QAAQzW,GAChBsD,EAAOA,KAAS8Y,EAAAA,EAAAA,IAAcpc,GACd,KAATA,EAAcof,EAAcvV,EACrC,CAGA,SAASuV,EAAYpf,GACnB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCoW,EAAQK,QAAQzW,GAChBgI,IACO6B,GAGFA,EAAM7J,EACf,CACF,CCzFO,SAASoe,GAAahI,EAASe,EAAIiC,EAAK5lB,EAAM2rB,EAAYT,GAE/D,IAAI3Z,EACJ,OAGA,SAAe/E,GAMb,OALAoW,EAAQhS,MAAM5Q,GACd4iB,EAAQhS,MAAM+a,GACd/I,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAKgb,GACbpa,EAAkB,KAAT/E,EAAc,GAAKA,EACrBsf,CACT,EAGA,SAASA,EAAkBtf,GACzB,OAAIA,IAAS+E,GACXqR,EAAQhS,MAAM+a,GACd/I,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAKgb,GACb/I,EAAQjS,KAAK3Q,GACN2jB,IAGTf,EAAQhS,MAAMsa,GACPa,EAAavf,GACtB,CAGA,SAASuf,EAAavf,GACpB,OAAIA,IAAS+E,GACXqR,EAAQjS,KAAKua,GACNY,EAAkBva,IAGd,OAAT/E,EACKoZ,EAAIpZ,IAGTiW,EAAAA,EAAAA,IAAmBjW,IACrBoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,eACN+R,EAAAA,EAAAA,GAAaE,EAASmJ,EAAc,gBAG7CnJ,EAAQhS,MAAM,cAAe,CAC3BuS,YAAa,WAER9Q,EAAM7F,GACf,CAGA,SAAS6F,EAAM7F,GACb,OAAIA,IAAS+E,GAAmB,OAAT/E,IAAiBiW,EAAAA,EAAAA,IAAmBjW,IACzDoW,EAAQjS,KAAK,eACNob,EAAavf,KAGtBoW,EAAQK,QAAQzW,GACA,KAATA,EAAcwf,EAAc3Z,EACrC,CAGA,SAAS2Z,EAAYxf,GACnB,OAAIA,IAAS+E,GAAmB,KAAT/E,GACrBoW,EAAQK,QAAQzW,GACT6F,GAGFA,EAAM7F,EACf,CACF,CChFO,SAASme,GAAkB/H,EAASe,GAEzC,IAAIsI,EACJ,OAGA,SAASzmB,EAAMgH,GACb,IAAIiW,EAAAA,EAAAA,IAAmBjW,GAKrB,OAJAoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,cACbsb,GAAO,EACAzmB,EAGT,IAAIojB,EAAAA,EAAAA,IAAcpc,GAChB,OAAOkW,EAAAA,EAAAA,GACLE,EACApd,EACAymB,EAAO,aAAe,aAHjBvJ,CAILlW,GAGJ,OAAOmX,EAAGnX,EACZ,CACF,gBCnBa8G,GAAa,CACxBzS,KAAM,aACN8hB,SAUF,SAA4BC,EAASe,EAAIiC,GACvC,IAGItP,EAHE7G,EAAO7T,KAIb,OAGA,SAAe4Q,GAEb,OADAoW,EAAQhS,MAAM,cACP8Z,GAAa1nB,KAClByM,EACAmT,EACAiI,EACAjF,EACA,kBACA,wBACA,wBAPK8E,CAQLle,EACJ,EAGA,SAASqe,EAAWre,GAKlB,OAJA8J,GAAagK,EAAAA,GAAAA,GACX7Q,EAAK0P,eAAe1P,EAAKkP,OAAOlP,EAAKkP,OAAOtiB,OAAS,GAAG,IAAIqK,MAAM,GAAI,IAG3D,KAAT8F,GACFoW,EAAQhS,MAAM,oBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,oBAENga,GACL/H,EACA6H,GACE7H,EACAA,EAAQG,QACN+H,IACApI,EAAAA,EAAAA,GAAaE,EAAS3Q,EAAO,eAC7ByQ,EAAAA,EAAAA,GAAaE,EAAS3Q,EAAO,eAE/B2T,EACA,wBACA,+BACA,qCACA,2BACA,iCAKCA,EAAIpZ,EACb,CAGA,SAASyF,EAAMzF,GACb,OAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,IACtCoW,EAAQjS,KAAK,cAERlB,EAAKsR,OAAOkG,QAAQjf,SAASsO,IAChC7G,EAAKsR,OAAOkG,QAAQ/mB,KAAKoW,GAGpBqN,EAAGnX,IAGLoZ,EAAIpZ,EACb,CACF,GA1EMse,GAAiB,CACrBnI,SA4EF,SAAuBC,EAASe,EAAIiC,GAClC,OAGA,SAAepZ,GACb,OAAO2c,EAAAA,EAAAA,IAA0B3c,GAC7Bme,GAAkB/H,EAASxR,EAA3BuZ,CAAmCne,GACnCoZ,EAAIpZ,EACV,EAGA,SAAS4E,EAAO5E,GACd,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzBoe,GACLhI,GACAF,EAAAA,EAAAA,GAAaE,EAAS3Q,EAAO,cAC7B2T,EACA,kBACA,wBACA,wBANKgF,CAOLpe,GAGGoZ,EAAIpZ,EACb,CAGA,SAASyF,EAAMzF,GACb,OAAgB,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,GAAQmX,EAAGnX,GAAQoZ,EAAIpZ,EACpE,CACF,EAzGEwY,SAAS,GCdJ,IAAMxK,GAAe,CAC1B3Z,KAAM,eACN8hB,SAUF,SAA8BC,EAASe,EAAIiC,GACzC,IAAMnW,EAAO7T,KACb,OAGA,SAAe4Q,GAEb,OADAoW,EAAQhS,MAAM,iBACP8R,EAAAA,EAAAA,GAAaE,EAASkoC,EAAkB,aAAc,EAAtDpoC,CAA6DlW,EACtE,EAGA,SAASs+C,EAAiBt+C,GACxB,IAAMiU,EAAOhR,EAAKkP,OAAOlP,EAAKkP,OAAOtiB,OAAS,GAC9C,OAAOokB,GACY,eAAjBA,EAAK,GAAGzgB,MACRygB,EAAK,GAAGtB,eAAesB,EAAK,IAAI,GAAMpkB,QAAU,EAC9C4tB,EAAYzd,GACZoZ,EAAIpZ,EACV,CAGA,SAASyd,EAAYzd,GACnB,OAAa,OAATA,EACKyF,EAAMzF,IAGXiW,EAAAA,EAAAA,IAAmBjW,GACdoW,EAAQG,QAAQgoC,GAAiB9gC,EAAahY,EAA9C2Q,CAAqDpW,IAG9DoW,EAAQhS,MAAM,iBACP7K,EAAQyG,GACjB,CAGA,SAASzG,EAAQyG,GACf,OAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,IACtCoW,EAAQjS,KAAK,iBACNsZ,EAAYzd,KAGrBoW,EAAQK,QAAQzW,GACTzG,EACT,CAGA,SAASkM,EAAMzF,GAEb,OADAoW,EAAQjS,KAAK,gBACNgT,EAAGnX,EACZ,CACF,GAxDMu+C,GAAkB,CACtBpoC,SA0DF,SAAiCC,EAASe,EAAIiC,GAC5C,IAAMnW,EAAO7T,KACb,OAAO4J,EAGP,SAASA,EAAMgH,GAEb,OAAIiD,EAAKsR,OAAO4D,KAAKlV,EAAK6V,MAAM7f,MACvBmgB,EAAIpZ,IAGTiW,EAAAA,EAAAA,IAAmBjW,IACrBoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,cACNnL,IAGFkd,EAAAA,EAAAA,GAAaE,EAASqH,EAAa,aAAc,EAAjDvH,CAAwDlW,EACjE,CAGA,SAASyd,EAAYzd,GACnB,IAAMiU,EAAOhR,EAAKkP,OAAOlP,EAAKkP,OAAOtiB,OAAS,GAC9C,OAAOokB,GACY,eAAjBA,EAAK,GAAGzgB,MACRygB,EAAK,GAAGtB,eAAesB,EAAK,IAAI,GAAMpkB,QAAU,EAC9CsnB,EAAGnX,IACHiW,EAAAA,EAAAA,IAAmBjW,GACnBhH,EAAMgH,GACNoZ,EAAIpZ,EACV,CACF,EAzFEwY,SAAS,GCHJ,IAAMlD,GAAa,CACxBjhB,KAAM,aACN8hB,SA4DF,SAA4BC,EAASe,EAAIiC,GACvC,IAAMnW,EAAO7T,KACT4Y,EAAO,EACX,OAGA,SAAehI,GAGb,OAFAoW,EAAQhS,MAAM,cACdgS,EAAQhS,MAAM,sBACPsb,EAAgB1f,EACzB,EAGA,SAAS0f,EAAgB1f,GACvB,OAAa,KAATA,GAAegI,IAAS,GAC1BoO,EAAQK,QAAQzW,GACT0f,GAGI,OAAT1f,IAAiB2c,EAAAA,EAAAA,IAA0B3c,IAC7CoW,EAAQjS,KAAK,sBACNlB,EAAK6U,UAAYX,EAAGnX,GAAQ2f,EAAa3f,IAG3CoZ,EAAIpZ,EACb,CAGA,SAAS2f,EAAa3f,GACpB,OAAa,KAATA,GACFoW,EAAQhS,MAAM,sBACPS,EAAS7E,IAGL,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,IACtCoW,EAAQjS,KAAK,cACNgT,EAAGnX,KAGRoc,EAAAA,EAAAA,IAAcpc,IACTkW,EAAAA,EAAAA,GAAaE,EAASuJ,EAAc,aAApCzJ,CAAkDlW,IAG3DoW,EAAQhS,MAAM,kBACPd,EAAKtD,GACd,CAGA,SAAS6E,EAAS7E,GAChB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACT6E,IAGTuR,EAAQjS,KAAK,sBACNwb,EAAa3f,GACtB,CAGA,SAASsD,EAAKtD,GACZ,OAAa,OAATA,GAA0B,KAATA,IAAe2c,EAAAA,EAAAA,IAA0B3c,IAC5DoW,EAAQjS,KAAK,kBACNwb,EAAa3f,KAGtBoW,EAAQK,QAAQzW,GACTsD,EACT,CACF,EA/HEoa,QAIF,SAA2BvL,EAAQjO,GACjC,IAII3K,EAGAyF,EAPA8e,EAAa3L,EAAOtiB,OAAS,EAC7BymB,EAAe,EAQkB,eAAjCnE,EAAOmE,GAAc,GAAG9iB,OAC1B8iB,GAAgB,GAIhBwH,EAAa,EAAIxH,GACc,eAA/BnE,EAAO2L,GAAY,GAAGtqB,OAEtBsqB,GAAc,GAIiB,uBAA/B3L,EAAO2L,GAAY,GAAGtqB,OACrB8iB,IAAiBwH,EAAa,GAC5BA,EAAa,EAAIxH,GACmB,eAAnCnE,EAAO2L,EAAa,GAAG,GAAGtqB,QAE9BsqB,GAAcxH,EAAe,IAAMwH,EAAa,EAAI,GAGlDA,EAAaxH,IACf/c,EAAU,CACR/F,KAAM,iBACNwF,MAAOmZ,EAAOmE,GAAc,GAAGtd,MAC/BK,IAAK8Y,EAAO2L,GAAY,GAAGzkB,KAE7B2F,EAAO,CACLxL,KAAM,YACNwF,MAAOmZ,EAAOmE,GAAc,GAAGtd,MAC/BK,IAAK8Y,EAAO2L,GAAY,GAAGzkB,IAE3Bsd,YAAa,SAEfnD,EAAAA,EAAAA,GAAOrB,EAAQmE,EAAcwH,EAAaxH,EAAe,EAAG,CAC1D,CAAC,QAAS/c,EAAS2K,GACnB,CAAC,QAASlF,EAAMkF,GAChB,CAAC,OAAQlF,EAAMkF,GACf,CAAC,OAAQ3K,EAAS2K,MAItB,OAAOiO,CACT,GChEO,IAAMuD,GAAkB,CAC7BrhB,KAAM,kBACN8hB,SA+DF,SAAiCC,EAASe,EAAIiC,GAC5C,IAIIrU,EAGAuC,EAPErE,EAAO7T,KACTsU,EAAQT,EAAKkP,OAAOtiB,OAQxB,KAAO6T,KAGL,GACiC,eAA/BT,EAAKkP,OAAOzO,GAAO,GAAGlQ,MACS,eAA/ByP,EAAKkP,OAAOzO,GAAO,GAAGlQ,MACS,YAA/ByP,EAAKkP,OAAOzO,GAAO,GAAGlQ,KACtB,CACA8T,EAA2C,cAA/BrE,EAAKkP,OAAOzO,GAAO,GAAGlQ,KAClC,KACF,CAGF,OAGA,SAAewM,GACb,IAAKiD,EAAKsR,OAAO4D,KAAKlV,EAAK6V,MAAM7f,QAAUgK,EAAK6U,WAAaxQ,GAI3D,OAHA8O,EAAQhS,MAAM,qBACdgS,EAAQhS,MAAM,6BACdW,EAAS/E,EACF0b,EAAgB1b,GAGzB,OAAOoZ,EAAIpZ,EACb,EAGA,SAAS0b,EAAgB1b,GACvB,OAAIA,IAAS+E,GACXqR,EAAQK,QAAQzW,GACT0b,IAGTtF,EAAQjS,KAAK,8BACN+R,EAAAA,EAAAA,GAAaE,EAAS4G,EAAoB,aAA1C9G,CAAwDlW,GACjE,CAGA,SAASgd,EAAmBhd,GAC1B,OAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,IACtCoW,EAAQjS,KAAK,qBACNgT,EAAGnX,IAGLoZ,EAAIpZ,EACb,CACF,EAvHEyhB,UAIF,SAAkCtP,EAAQjO,GACxC,IAGI3K,EAGAyF,EAGA8H,EATApD,EAAQyO,EAAOtiB,OAYnB,KAAO6T,KACL,GAAyB,UAArByO,EAAOzO,GAAO,GAAgB,CAChC,GAA8B,YAA1ByO,EAAOzO,GAAO,GAAGlQ,KAAoB,CACvC+F,EAAUmK,EACV,KACF,CAE8B,cAA1ByO,EAAOzO,GAAO,GAAGlQ,OACnBwL,EAAO0E,EAEX,KAEgC,YAA1ByO,EAAOzO,GAAO,GAAGlQ,MAEnB2e,EAAOqB,OAAO9P,EAAO,GAGlBoD,GAAwC,eAA1BqL,EAAOzO,GAAO,GAAGlQ,OAClCsT,EAAapD,GAKnB,IAAMsD,EAAU,CACdxT,KAAM,gBACNwF,MAAOpH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOnT,GAAM,GAAGhG,OACzCK,IAAKzH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOA,EAAOtiB,OAAS,GAAG,GAAGwJ,MAGtD8Y,EAAOnT,GAAM,GAAGxL,KAAO,oBAGnBsT,GACFqL,EAAOqB,OAAOxU,EAAM,EAAG,CAAC,QAASgI,EAAS9C,IAC1CiO,EAAOqB,OAAO1M,EAAa,EAAG,EAAG,CAAC,OAAQqL,EAAO5Y,GAAS,GAAI2K,IAC9DiO,EAAO5Y,GAAS,GAAGF,IAAMzH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOrL,GAAY,GAAGzN,MAEjE8Y,EAAO5Y,GAAS,GAAKyN,EAIvB,OADAmL,EAAOze,KAAK,CAAC,OAAQsT,EAAS9C,IACvBiO,CACT,GC/DO,IAAMyN,GAAiB,CAC5B,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,UACA,UACA,QACA,QACA,KACA,QACA,KACA,QACA,QACA,KACA,QACA,MAaWC,GAAe,CAAC,MAAO,SAAU,QAAS,YClE1CpR,GAAW,CACtBpa,KAAM,WACN8hB,SAkCF,SAA0BC,EAASe,EAAIiC,GACrC,IAGI0G,EAGAC,EAGAjS,EAGApK,EAGAqB,EAfE9B,EAAO7T,KAgBb,OAGA,SAAe4Q,GAIb,OAHAoW,EAAQhS,MAAM,YACdgS,EAAQhS,MAAM,gBACdgS,EAAQK,QAAQzW,GACT2T,CACT,EAGA,SAASA,EAAK3T,GACZ,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTggB,GAGI,KAAThgB,GACFoW,EAAQK,QAAQzW,GACTigB,GAGI,KAATjgB,GACFoW,EAAQK,QAAQzW,GAChB8f,EAAO,EAGA7c,EAAK6U,UAAYX,EAAK+I,IAG3BxL,EAAAA,EAAAA,IAAW1U,IACboW,EAAQK,QAAQzW,GAChB8N,EAASlb,OAAOC,aAAamN,GAC7B+f,GAAW,EACJ/rB,GAGFolB,EAAIpZ,EACb,CAGA,SAASggB,EAAiBhgB,GACxB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GAChB8f,EAAO,EACAK,GAGI,KAATngB,GACFoW,EAAQK,QAAQzW,GAChB8f,EAAO,EACPhS,EAAS,SACTpK,EAAQ,EACD0c,IAGL1L,EAAAA,EAAAA,IAAW1U,IACboW,EAAQK,QAAQzW,GAChB8f,EAAO,EACA7c,EAAK6U,UAAYX,EAAK+I,GAGxB9G,EAAIpZ,EACb,CAGA,SAASmgB,EAAkBngB,GACzB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTiD,EAAK6U,UAAYX,EAAK+I,GAGxB9G,EAAIpZ,EACb,CAGA,SAASogB,EAAgBpgB,GACvB,OAAIA,IAAS8N,EAAOrY,WAAWiO,MAC7B0S,EAAQK,QAAQzW,GACT0D,IAAUoK,EAAOje,OACpBoT,EAAK6U,UACHX,EACAI,EACF6I,GAGChH,EAAIpZ,EACb,CAGA,SAASigB,EAAcjgB,GACrB,OAAI0U,EAAAA,EAAAA,IAAW1U,IACboW,EAAQK,QAAQzW,GAChB8N,EAASlb,OAAOC,aAAamN,GACtBhM,GAGFolB,EAAIpZ,EACb,CAGA,SAAShM,EAAQgM,GACf,OACW,OAATA,GACS,KAATA,GACS,KAATA,IACA2c,EAAAA,EAAAA,IAA0B3c,GAGf,KAATA,GACA+f,GACAF,GAAarkB,SAASsS,EAAOiG,gBAE7B+L,EAAO,EACA7c,EAAK6U,UAAYX,EAAGnX,GAAQuX,EAAavX,IAG9C4f,GAAepkB,SAASsS,EAAOiG,gBACjC+L,EAAO,EAEM,KAAT9f,GACFoW,EAAQK,QAAQzW,GACTqgB,GAGFpd,EAAK6U,UAAYX,EAAGnX,GAAQuX,EAAavX,KAGlD8f,EAAO,EAEA7c,EAAK6U,YAAc7U,EAAKsR,OAAO4D,KAAKlV,EAAK6V,MAAM7f,MAClDmgB,EAAIpZ,GACJ+f,EACAO,EAA4BtgB,GAC5BugB,EAAwBvgB,IAGjB,KAATA,IAAe4U,EAAAA,EAAAA,IAAkB5U,IACnCoW,EAAQK,QAAQzW,GAChB8N,GAAUlb,OAAOC,aAAamN,GACvBhM,GAGFolB,EAAIpZ,EACb,CAGA,SAASqgB,EAAiBrgB,GACxB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTiD,EAAK6U,UAAYX,EAAKI,GAGxB6B,EAAIpZ,EACb,CAGA,SAASugB,EAAwBvgB,GAC/B,OAAIoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQK,QAAQzW,GACTugB,GAGFC,EAAYxgB,EACrB,CAGA,SAASsgB,EAA4BtgB,GACnC,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTwgB,GAGI,KAATxgB,GAAwB,KAATA,IAAe0U,EAAAA,EAAAA,IAAW1U,IAC3CoW,EAAQK,QAAQzW,GACTygB,IAGLrE,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQK,QAAQzW,GACTsgB,GAGFE,EAAYxgB,EACrB,CAGA,SAASygB,EAAsBzgB,GAC7B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,IACA4U,EAAAA,EAAAA,IAAkB5U,IAElBoW,EAAQK,QAAQzW,GACTygB,GAGFC,EAA2B1gB,EACpC,CAGA,SAAS0gB,EAA2B1gB,GAClC,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACT2gB,IAGLvE,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQK,QAAQzW,GACT0gB,GAGFJ,EAA4BtgB,EACrC,CAGA,SAAS2gB,EAA6B3gB,GACpC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOoZ,EAAIpZ,GAGA,KAATA,GAAwB,KAATA,GACjBoW,EAAQK,QAAQzW,GAChB+E,EAAS/E,EACF4gB,IAGLxE,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQK,QAAQzW,GACT2gB,IAGT5b,EAAS,KACF8b,EAA+B7gB,GACxC,CAGA,SAAS4gB,EAA6B5gB,GACpC,OAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,GAC/BoZ,EAAIpZ,GAGTA,IAAS+E,GACXqR,EAAQK,QAAQzW,GACT8gB,IAGT1K,EAAQK,QAAQzW,GACT4gB,EACT,CAGA,SAASC,EAA+B7gB,GACtC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,IACA2c,EAAAA,EAAAA,IAA0B3c,GAEnB0gB,EAA2B1gB,IAGpCoW,EAAQK,QAAQzW,GACT6gB,EACT,CAGA,SAASC,EAAkC9gB,GACzC,OAAa,KAATA,GAAwB,KAATA,IAAeoc,EAAAA,EAAAA,IAAcpc,GACvCsgB,EAA4BtgB,GAG9BoZ,EAAIpZ,EACb,CAGA,SAASwgB,EAAYxgB,GACnB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACT+gB,GAGF3H,EAAIpZ,EACb,CAGA,SAAS+gB,EAAc/gB,GACrB,OAAIoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQK,QAAQzW,GACT+gB,GAGO,OAAT/gB,IAAiBiW,EAAAA,EAAAA,IAAmBjW,GACvCuX,EAAavX,GACboZ,EAAIpZ,EACV,CAGA,SAASuX,EAAavX,GACpB,OAAa,KAATA,GAAwB,IAAT8f,GACjB1J,EAAQK,QAAQzW,GACTghB,GAGI,KAAThhB,GAAwB,IAAT8f,GACjB1J,EAAQK,QAAQzW,GACTihB,GAGI,KAATjhB,GAAwB,IAAT8f,GACjB1J,EAAQK,QAAQzW,GACTkhB,GAGI,KAATlhB,GAAwB,IAAT8f,GACjB1J,EAAQK,QAAQzW,GACTkgB,GAGI,KAATlgB,GAAwB,IAAT8f,GACjB1J,EAAQK,QAAQzW,GACTmhB,KAGLlL,EAAAA,EAAAA,IAAmBjW,IAAmB,IAAT8f,GAAuB,IAATA,EAQlC,OAAT9f,IAAiBiW,EAAAA,EAAAA,IAAmBjW,GAC/BohB,EAAyBphB,IAGlCoW,EAAQK,QAAQzW,GACTuX,GAZEnB,EAAQiC,MACbgJ,GACAH,EACAE,EAHKhL,CAILpW,EASN,CAGA,SAASohB,EAAyBphB,GAEhC,OADAoW,EAAQjS,KAAK,gBACNmd,EAAkBthB,EAC3B,CAGA,SAASshB,EAAkBthB,GACzB,OAAa,OAATA,EACKuhB,EAAKvhB,IAGViW,EAAAA,EAAAA,IAAmBjW,GACdoW,EAAQG,QACb,CACEJ,SAAUqoC,EACVhmC,SAAS,GAEX8I,EACAC,EANKnL,CAOLpW,IAGJoW,EAAQhS,MAAM,gBACPmT,EAAavX,GACtB,CAGA,SAASw+C,EAAYpoC,EAASe,EAAIiC,GAChC,OAGA,SAAepZ,GAIb,OAHAoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,cACNuS,CACT,EAGA,SAASA,EAAU1W,GACjB,OAAOiD,EAAKsR,OAAO4D,KAAKlV,EAAK6V,MAAM7f,MAAQmgB,EAAIpZ,GAAQmX,EAAGnX,EAC5D,CACF,CAGA,SAASghB,EAA0BhhB,GACjC,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTkgB,GAGF3I,EAAavX,EACtB,CAGA,SAASihB,EAAuBjhB,GAC9B,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GAChB8N,EAAS,GACF0T,GAGFjK,EAAavX,EACtB,CAGA,SAASwhB,EAAsBxhB,GAC7B,OAAa,KAATA,GAAe6f,GAAarkB,SAASsS,EAAOiG,gBAC9CqC,EAAQK,QAAQzW,GACTkhB,IAGLxM,EAAAA,EAAAA,IAAW1U,IAAS8N,EAAOje,OAAS,GACtCumB,EAAQK,QAAQzW,GAChB8N,GAAUlb,OAAOC,aAAamN,GACvBwhB,GAGFjK,EAAavX,EACtB,CAGA,SAASmhB,EAAgCnhB,GACvC,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTkgB,GAGF3I,EAAavX,EACtB,CAGA,SAASkgB,EAA8BlgB,GACrC,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTkhB,GAGI,KAATlhB,GAAwB,IAAT8f,GACjB1J,EAAQK,QAAQzW,GACTkgB,GAGF3I,EAAavX,EACtB,CAGA,SAASkhB,EAAkBlhB,GACzB,OAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,IACtCoW,EAAQjS,KAAK,gBACNod,EAAKvhB,KAGdoW,EAAQK,QAAQzW,GACTkhB,EACT,CAGA,SAASK,EAAKvhB,GAEZ,OADAoW,EAAQjS,KAAK,YACNgT,EAAGnX,EACZ,CACF,EA7gBEyhB,UAWF,SAA2BtP,GACzB,IAAIzO,EAAQyO,EAAOtiB,OAEnB,KAAO6T,MACoB,UAArByO,EAAOzO,GAAO,IAA4C,aAA1ByO,EAAOzO,GAAO,GAAGlQ,QAKnDkQ,EAAQ,GAAmC,eAA9ByO,EAAOzO,EAAQ,GAAG,GAAGlQ,OAEpC2e,EAAOzO,GAAO,GAAG1K,MAAQmZ,EAAOzO,EAAQ,GAAG,GAAG1K,MAE9CmZ,EAAOzO,EAAQ,GAAG,GAAG1K,MAAQmZ,EAAOzO,EAAQ,GAAG,GAAG1K,MAElDmZ,EAAOqB,OAAO9P,EAAQ,EAAG,IAG3B,OAAOyO,CACT,EA7BEwF,UAAU,GAIN0J,GAAqB,CACzBlL,SA0gBF,SAA2BC,EAASe,EAAIiC,GACtC,OAGA,SAAepZ,GAKb,OAJAoW,EAAQjS,KAAK,gBACbiS,EAAQhS,MAAM,mBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,mBACNiS,EAAQG,QAAQge,GAAAA,EAAWpd,EAAIiC,EACxC,CACF,EAphBEZ,SAAS,GCfJ,IAAM7K,GAAa,CACxBtZ,KAAM,aACN8hB,SAKF,SAA4BC,EAASe,EAAIiC,GACvC,IAqBIrU,EArBE9B,EAAO7T,KAGPytB,EAAwB,CAC5B1G,SAuKF,SAA8BC,EAASe,EAAIiC,GACzC,IAAIpR,EAAO,EACX,OAAOkO,EAAAA,EAAAA,GACLE,EACA0G,EACA,aACA1tB,KAAKmlB,OAAOiC,WAAWR,QAAQF,KAAKta,SAAS,qBACzC/I,EACA,GAIN,SAASqqB,EAAqB9c,GAG5B,OAFAoW,EAAQhS,MAAM,mBACdgS,EAAQhS,MAAM,2BACPsX,EAAgB1b,EACzB,CAGA,SAAS0b,EAAgB1b,GACvB,OAAIA,IAAS+E,GACXqR,EAAQK,QAAQzW,GAChBgI,IACO0T,GAGL1T,EAAO+U,EAAiB3D,EAAIpZ,IAChCoW,EAAQjS,KAAK,4BACN+R,EAAAA,EAAAA,GAAaE,EAAS4G,EAAoB,aAA1C9G,CAAwDlW,GACjE,CAGA,SAASgd,EAAmBhd,GAC1B,OAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,IACtCoW,EAAQjS,KAAK,mBACNgT,EAAGnX,IAGLoZ,EAAIpZ,EACb,CACF,EA9MEwY,SAAS,GAILimC,EAAc,CAClBtoC,SA8IF,SAA6BC,EAASe,EAAIiC,GACxC,IAAMnW,EAAO7T,KACb,OAAO4J,EAGP,SAASA,EAAMgH,GAIb,OAHAoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,cACNuS,CACT,CAGA,SAASA,EAAU1W,GACjB,OAAOiD,EAAKsR,OAAO4D,KAAKlV,EAAK6V,MAAM7f,MAAQmgB,EAAIpZ,GAAQmX,EAAGnX,EAC5D,CACF,EA7JEwY,SAAS,GAELvE,EAAO7kB,KAAK+iB,OAAO/iB,KAAK+iB,OAAOtiB,OAAS,GACxCotB,EACJhJ,GAAyB,eAAjBA,EAAK,GAAGzgB,KACZygB,EAAK,GAAGtB,eAAesB,EAAK,IAAI,GAAMpkB,OACtC,EACFktB,EAAW,EAIf,OAGA,SAAe/c,GAKb,OAJAoW,EAAQhS,MAAM,cACdgS,EAAQhS,MAAM,mBACdgS,EAAQhS,MAAM,2BACdW,EAAS/E,EACFkd,EAAald,EACtB,EAGA,SAASkd,EAAald,GACpB,OAAIA,IAAS+E,GACXqR,EAAQK,QAAQzW,GAChB+c,IACOG,IAGT9G,EAAQjS,KAAK,2BACN4Y,EAAW,EACd3D,EAAIpZ,IACJkW,EAAAA,EAAAA,GAAaE,EAAS+G,EAAU,aAAhCjH,CAA8ClW,GACpD,CAGA,SAASmd,EAASnd,GAChB,OAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,GAC/Bod,EAAUpd,IAGnBoW,EAAQhS,MAAM,uBACdgS,EAAQhS,MAAM,cAAe,CAC3BuS,YAAa,WAER0G,EAAKrd,GACd,CAGA,SAASqd,EAAKrd,GACZ,OAAa,OAATA,IAAiB2c,EAAAA,EAAAA,IAA0B3c,IAC7CoW,EAAQjS,KAAK,eACbiS,EAAQjS,KAAK,wBACN+R,EAAAA,EAAAA,GAAaE,EAASkH,EAAW,aAAjCpH,CAA+ClW,IAG3C,KAATA,GAAeA,IAAS+E,EAAeqU,EAAIpZ,IAC/CoW,EAAQK,QAAQzW,GACTqd,EACT,CAGA,SAASC,EAAUtd,GACjB,OAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,GAC/Bod,EAAUpd,IAGnBoW,EAAQhS,MAAM,uBACdgS,EAAQhS,MAAM,cAAe,CAC3BuS,YAAa,WAERrb,EAAK0E,GACd,CAGA,SAAS1E,EAAK0E,GACZ,OAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,IACtCoW,EAAQjS,KAAK,eACbiS,EAAQjS,KAAK,uBACNiZ,EAAUpd,IAGN,KAATA,GAAeA,IAAS+E,EAAeqU,EAAIpZ,IAC/CoW,EAAQK,QAAQzW,GACT1E,EACT,CAGA,SAAS8hB,EAAUpd,GAEjB,OADAoW,EAAQjS,KAAK,mBACNlB,EAAK6U,UAAYX,EAAGnX,GAAQsW,EAAatW,EAClD,CAGA,SAASsW,EAAatW,GACpB,OAAa,OAATA,EACKyF,EAAMzF,IAGXiW,EAAAA,EAAAA,IAAmBjW,GACdoW,EAAQG,QACbkoC,EACAroC,EAAQG,QACNsG,EACApX,EACAwX,GACI/G,EAAAA,EAAAA,GACEE,EACAE,EACA,aACA2G,EAAgB,GAElB3G,GAEN7Q,EAdK2Q,CAeLpW,IAGJoW,EAAQhS,MAAM,iBACPmZ,EAAgBvd,GACzB,CAGA,SAASud,EAAgBvd,GACvB,OAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,IACtCoW,EAAQjS,KAAK,iBACNmS,EAAatW,KAGtBoW,EAAQK,QAAQzW,GACTud,EACT,CAGA,SAAS9X,EAAMzF,GAEb,OADAoW,EAAQjS,KAAK,cACNgT,EAAGnX,EACZ,CA+DF,EAzNE2X,UAAU,kBCDC3N,GAAqB,CAChC3V,KAAM,qBACN8hB,SAIF,SAAoCC,EAASe,EAAIiC,GAC/C,IAII9T,EAGAhX,EAPE2U,EAAO7T,KACT4Y,EAAO,EAOX,OAGA,SAAehI,GAKb,OAJAoW,EAAQhS,MAAM,sBACdgS,EAAQhS,MAAM,4BACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,4BACNwP,CACT,EAGA,SAASA,EAAK3T,GACZ,OAAa,KAATA,GACFoW,EAAQhS,MAAM,mCACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,mCACNuY,IAGTtG,EAAQhS,MAAM,2BACdkB,EAAM,GACNhX,EAAOsmB,EAAAA,GACA9iB,EAAMkO,GACf,CAGA,SAAS0c,EAAQ1c,GACf,OAAa,KAATA,GAAwB,MAATA,GACjBoW,EAAQhS,MAAM,uCACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,uCACbiS,EAAQhS,MAAM,2BACdkB,EAAM,EACNhX,EAAOymB,EAAAA,GACAjjB,IAGTskB,EAAQhS,MAAM,2BACdkB,EAAM,EACNhX,EAAOwmB,EAAAA,GACAhjB,EAAMkO,GACf,CAGA,SAASlO,EAAMkO,GAEb,IAAI4T,EAEJ,OAAa,KAAT5T,GAAegI,GACjB4L,EAAQwC,EAAQjS,KAAK,2BAGnB7V,IAASsmB,EAAAA,KACRwd,EAAAA,GAAAA,GAA8BnvB,EAAK0P,eAAeiB,KAKrDwC,EAAQhS,MAAM,4BACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,4BACbiS,EAAQjS,KAAK,sBACNgT,GAPEiC,EAAIpZ,IAUX1R,EAAK0R,IAASgI,IAAS1C,GACzB8Q,EAAQK,QAAQzW,GACTlO,GAGFsnB,EAAIpZ,EACb,CACF,GC/FO,IAAM+J,GAAkB,CAC7B1V,KAAM,kBACN8hB,SAIF,SAAiCC,EAASe,EAAIiC,GAC5C,OAGA,SAAepZ,GAKb,OAJAoW,EAAQhS,MAAM,mBACdgS,EAAQhS,MAAM,gBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,gBACNwP,CACT,EAGA,SAASA,EAAK3T,GACZ,OAAIgV,EAAAA,EAAAA,IAAiBhV,IACnBoW,EAAQhS,MAAM,wBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,wBACbiS,EAAQjS,KAAK,mBACNgT,GAGFiC,EAAIpZ,EACb,CACF,GC7BO,IAAMoR,GAAa,CACxB/c,KAAM,aACN8hB,SAIF,SAA4BC,EAASe,GACnC,OAGA,SAAenX,GAIb,OAHAoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,eACN+R,EAAAA,EAAAA,GAAaE,EAASe,EAAI,aACnC,CACF,GCNO,IAAM5B,GAAW,CACtBlhB,KAAM,WACN8hB,SAgJF,SAA0BC,EAASe,EAAIiC,GACrC,IAII6J,EAGAxI,EAPExX,EAAO7T,KACTsU,EAAQT,EAAKkP,OAAOtiB,OAQxB,KAAO6T,KACL,IACkC,eAA/BT,EAAKkP,OAAOzO,GAAO,GAAGlQ,MACU,cAA/ByP,EAAKkP,OAAOzO,GAAO,GAAGlQ,QACvByP,EAAKkP,OAAOzO,GAAO,GAAGwf,UACvB,CACAD,EAAahgB,EAAKkP,OAAOzO,GAAO,GAChC,KACF,CAGF,OAGA,SAAe1D,GACb,IAAKijB,EACH,OAAO7J,EAAIpZ,GAGb,OAAIijB,EAAWE,UAAkBC,EAASpjB,IAC1Cya,EAAUxX,EAAKsR,OAAOkG,QAAQjf,UAC5BsY,EAAAA,GAAAA,GACE7Q,EAAK0P,eAAe,CAClB3Z,MAAOiqB,EAAW5pB,IAClBA,IAAK4J,EAAK6V,UAIhB1C,EAAQhS,MAAM,YACdgS,EAAQhS,MAAM,eACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,eACbiS,EAAQjS,KAAK,YACNkf,EACT,EAGA,SAASA,EAAcrjB,GAErB,OAAa,KAATA,EACKoW,EAAQG,QACb+M,GACAnM,EACAsD,EAAUtD,EAAKiM,EAHVhN,CAILpW,GAGS,KAATA,EACKoW,EAAQG,QACbgN,GACApM,EACAsD,EACIrE,EAAQG,QAAQiN,GAA6BrM,EAAIiM,GACjDA,EALChN,CAMLpW,GAGGya,EAAUtD,EAAGnX,GAAQojB,EAASpjB,EACvC,CAGA,SAASojB,EAASpjB,GAEhB,OADAijB,EAAWC,WAAY,EAChB9J,EAAIpZ,EACb,CACF,EA1NEyhB,UA6CF,SAA2BtP,EAAQjO,GACjC,IAII0P,EAGAD,EAGAE,EAGA4P,EAbA/f,EAAQyO,EAAOtiB,OACfijB,EAAS,EAcb,KAAOpP,KAGL,GAFAkQ,EAAQzB,EAAOzO,GAAO,GAElBiQ,EAAM,CAER,GACiB,SAAfC,EAAMpgB,MACU,cAAfogB,EAAMpgB,MAAwBogB,EAAMuP,UAErC,MAIuB,UAArBhR,EAAOzO,GAAO,IAAiC,cAAfkQ,EAAMpgB,OACxCogB,EAAMuP,WAAY,EAEtB,MAAO,GAAItP,GACT,GACuB,UAArB1B,EAAOzO,GAAO,KACE,eAAfkQ,EAAMpgB,MAAwC,cAAfogB,EAAMpgB,QACrCogB,EAAMsP,YAEPvP,EAAOjQ,EAEY,cAAfkQ,EAAMpgB,MAAsB,CAC9Bsf,EAAS,EACT,KACF,MAEsB,aAAfc,EAAMpgB,OACfqgB,EAAQnQ,GAIZ,IAAM8X,EAAQ,CACZhoB,KAA+B,cAAzB2e,EAAOwB,GAAM,GAAGngB,KAAuB,OAAS,QACtDwF,MAAOpH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOwB,GAAM,GAAG3a,OACzCK,IAAKzH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOA,EAAOtiB,OAAS,GAAG,GAAGwJ,MAEhDwQ,EAAQ,CACZrW,KAAM,QACNwF,MAAOpH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOwB,GAAM,GAAG3a,OACzCK,IAAKzH,OAAOyR,OAAO,CAAC,EAAG8O,EAAO0B,GAAO,GAAGxa,MAEpC2F,EAAO,CACXxL,KAAM,YACNwF,MAAOpH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOwB,EAAOb,EAAS,GAAG,GAAGzZ,KACtDA,IAAKzH,OAAOyR,OAAO,CAAC,EAAG8O,EAAO0B,EAAQ,GAAG,GAAG7a,QA+B9C,OA7BAyqB,EAAQ,CACN,CAAC,QAASjI,EAAOtX,GACjB,CAAC,QAAS2F,EAAO3F,IAGnBuf,GAAQ/vB,EAAAA,EAAAA,GAAK+vB,EAAOtR,EAAOjY,MAAMyZ,EAAO,EAAGA,EAAOb,EAAS,IAE3D2Q,GAAQ/vB,EAAAA,EAAAA,GAAK+vB,EAAO,CAAC,CAAC,QAASzkB,EAAMkF,KAErCuf,GAAQ/vB,EAAAA,EAAAA,GACN+vB,GACAhK,EAAAA,GAAAA,GACEvV,EAAQqQ,OAAOiC,WAAWX,WAAWC,KACrC3D,EAAOjY,MAAMyZ,EAAOb,EAAS,EAAGe,EAAQ,GACxC3P,IAIJuf,GAAQ/vB,EAAAA,EAAAA,GAAK+vB,EAAO,CAClB,CAAC,OAAQzkB,EAAMkF,GACfiO,EAAO0B,EAAQ,GACf1B,EAAO0B,EAAQ,GACf,CAAC,OAAQhK,EAAO3F,KAGlBuf,GAAQ/vB,EAAAA,EAAAA,GAAK+vB,EAAOtR,EAAOjY,MAAM2Z,EAAQ,IAEzC4P,GAAQ/vB,EAAAA,EAAAA,GAAK+vB,EAAO,CAAC,CAAC,OAAQjI,EAAOtX,MACrCsP,EAAAA,EAAAA,GAAOrB,EAAQwB,EAAMxB,EAAOtiB,OAAQ4zB,GAC7BtR,CACT,EA3IEsH,WAmBF,SAA4BtH,GAC1B,IAGIyB,EAHAlQ,GAAS,EAKb,OAASA,EAAQyO,EAAOtiB,QAIL,gBAHjB+jB,EAAQzB,EAAOzO,GAAO,IAGdlQ,MACS,cAAfogB,EAAMpgB,MACS,aAAfogB,EAAMpgB,OAGN2e,EAAOqB,OAAO9P,EAAQ,EAAkB,eAAfkQ,EAAMpgB,KAAwB,EAAI,GAC3DogB,EAAMpgB,KAAO,OACbkQ,KAIJ,OAAOyO,CACT,GArCMmR,GAAoB,CACxBnN,SAuNF,SAA0BC,EAASe,EAAIiC,GACrC,OAGA,SAAepZ,GAKb,OAJAoW,EAAQhS,MAAM,YACdgS,EAAQhS,MAAM,kBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,kBACNga,GAAkB/H,EAASzC,EACpC,EAGA,SAASA,EAAK3T,GACZ,OAAa,KAATA,EACK3G,EAAI2G,GAGNie,GACL7H,EACAuN,EACAvK,EACA,sBACA,6BACA,mCACA,yBACA,4BACA,GATK6E,CAULje,EACJ,CAGA,SAAS2jB,EAAiB3jB,GACxB,OAAO2c,EAAAA,EAAAA,IAA0B3c,GAC7Bme,GAAkB/H,EAAS1L,EAA3ByT,CAAoCne,GACpC3G,EAAI2G,EACV,CAGA,SAAS0K,EAAQ1K,GACf,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,EACzBoe,GACLhI,EACA+H,GAAkB/H,EAAS/c,GAC3B+f,EACA,gBACA,sBACA,sBANKgF,CAOLpe,GAGG3G,EAAI2G,EACb,CAGA,SAAS3G,EAAI2G,GACX,OAAa,KAATA,GACFoW,EAAQhS,MAAM,kBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,kBACbiS,EAAQjS,KAAK,YACNgT,GAGFiC,EAAIpZ,EACb,CACF,GArRMujB,GAAyB,CAC7BpN,SAuRF,SAA+BC,EAASe,EAAIiC,GAC1C,IAAMnW,EAAO7T,KACb,OAGA,SAAe4Q,GACb,OAAOke,GAAa1nB,KAClByM,EACAmT,EACAwN,EACAxK,EACA,YACA,kBACA,kBAPK8E,CAQLle,EACJ,EAGA,SAAS4jB,EAAW5jB,GAClB,OAAOiD,EAAKsR,OAAOkG,QAAQjf,UACzBsY,EAAAA,GAAAA,GACE7Q,EAAK0P,eAAe1P,EAAKkP,OAAOlP,EAAKkP,OAAOtiB,OAAS,GAAG,IAAIqK,MAAM,GAAI,KAGtEid,EAAGnX,GACHoZ,EAAIpZ,EACV,CACF,GA9SMwjB,GAA8B,CAClCrN,SAgTF,SAAoCC,EAASe,EAAIiC,GAC/C,OAGA,SAAepZ,GAKb,OAJAoW,EAAQhS,MAAM,aACdgS,EAAQhS,MAAM,mBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,mBACNwP,CACT,EAGA,SAASA,EAAK3T,GACZ,OAAa,KAATA,GACFoW,EAAQhS,MAAM,mBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,mBACbiS,EAAQjS,KAAK,aACNgT,GAGFiC,EAAIpZ,EACb,CACF,GCtWO,IAAMwV,GAAkB,CAC7BnhB,KAAM,kBACN8hB,SAKF,SAAiCC,EAASe,EAAIiC,GAC5C,IAAMnW,EAAO7T,KACb,OAGA,SAAe4Q,GAKb,OAJAoW,EAAQhS,MAAM,cACdgS,EAAQhS,MAAM,oBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,oBACNwP,CACT,EAGA,SAASA,EAAK3T,GACZ,OAAa,KAATA,GACFoW,EAAQhS,MAAM,eACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,eACbiS,EAAQjS,KAAK,cACNsB,GAGF2T,EAAIpZ,EACb,CAGA,SAASyF,EAAMzF,GAQb,OAAgB,KAATA,GAAe,2BAA4BiD,EAAKsR,OAAOiC,WAC1D4C,EAAIpZ,GACJmX,EAAGnX,EACT,CACF,EA3CEyZ,WAAYlE,GAASkE,2BCIVpE,GAAY,CACvBhhB,KAAM,YACN8hB,SAwKF,SAA2BC,EAASe,GAClC,IAKIpS,EALE25C,EAAmBtvD,KAAKmlB,OAAOiC,WAAWkoC,iBAAiB5oC,KAC3DO,EAAWjnB,KAAKinB,SAChBzR,GAASwW,EAAAA,GAAAA,GAAkB/E,GAIjC,OAGA,SAAerW,GAGb,OAFAoW,EAAQhS,MAAM,qBACdW,EAAS/E,EACF6E,EAAS7E,EAClB,EAGA,SAAS6E,EAAS7E,GAChB,GAAIA,IAAS+E,EAEX,OADAqR,EAAQK,QAAQzW,GACT6E,EAGT,IAAM+O,EAAQwC,EAAQjS,KAAK,qBACrBsB,GAAQ2V,EAAAA,GAAAA,GAAkBpb,GAC1B2T,GACHlO,GAAoB,IAAVA,GAAeb,GAAW85C,EAAiBljD,SAASwE,GAC3D6T,GACHjP,GAAsB,IAAXA,GAAgBa,GAAUi5C,EAAiBljD,SAAS6a,GAGlE,OAFAzC,EAAM0H,MAAQhb,QAAmB,KAAXyE,EAAgB4O,EAAOA,IAAS/O,IAAWiP,IACjED,EAAM2H,OAASjb,QAAmB,KAAXyE,EAAgB8O,EAAQA,IAAUpO,IAAUkO,IAC5DwD,EAAGnX,EACZ,CACF,EAxMEyZ,WAQF,SAA6BtH,EAAQjO,GACnC,IAGIyP,EAGA6H,EAGAxc,EAGAyc,EAGAC,EAGA5O,EAGA6O,EAGA7I,EAxBApP,GAAS,EA6Bb,OAASA,EAAQyO,EAAOtiB,QAEtB,GACuB,UAArBsiB,EAAOzO,GAAO,IACY,sBAA1ByO,EAAOzO,GAAO,GAAGlQ,MACjB2e,EAAOzO,GAAO,GAAG6X,OAIjB,IAFA5H,EAAOjQ,EAEAiQ,KAEL,GACsB,SAApBxB,EAAOwB,GAAM,IACY,sBAAzBxB,EAAOwB,GAAM,GAAGngB,MAChB2e,EAAOwB,GAAM,GAAG2H,OAChBpX,EAAQyO,eAAeR,EAAOwB,GAAM,IAAIle,WAAW,KACjDyO,EAAQyO,eAAeR,EAAOzO,GAAO,IAAIjO,WAAW,GACtD,CAKA,IACG0c,EAAOwB,GAAM,GAAG4H,QAAUpJ,EAAOzO,GAAO,GAAG4X,SAC3CnJ,EAAOzO,GAAO,GAAGrK,IAAIyZ,OAASX,EAAOzO,GAAO,GAAG1K,MAAM8Z,QAAU,MAE7DX,EAAOwB,GAAM,GAAGta,IAAIyZ,OACnBX,EAAOwB,GAAM,GAAG3a,MAAM8Z,OACtBX,EAAOzO,GAAO,GAAGrK,IAAIyZ,OACrBX,EAAOzO,GAAO,GAAG1K,MAAM8Z,QACzB,GAGF,SAGFhG,EACEqF,EAAOwB,GAAM,GAAGta,IAAIyZ,OAASX,EAAOwB,GAAM,GAAG3a,MAAM8Z,OAAS,GAC5DX,EAAOzO,GAAO,GAAGrK,IAAIyZ,OAASX,EAAOzO,GAAO,GAAG1K,MAAM8Z,OAAS,EAC1D,EACA,EACN,IAAM9Z,EAAQpH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOwB,GAAM,GAAGta,KAC1CA,EAAMzH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOzO,GAAO,GAAG1K,OAC/CqiB,GAAUriB,GAAQ8T,GAClBuO,GAAUhiB,EAAKyT,GACf2O,EAAkB,CAChBjoB,KAAMsZ,EAAM,EAAI,iBAAmB,mBACnC9T,MAAAA,EACAK,IAAKzH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOwB,GAAM,GAAGta,MAEzCqiB,EAAkB,CAChBloB,KAAMsZ,EAAM,EAAI,iBAAmB,mBACnC9T,MAAOpH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOzO,GAAO,GAAG1K,OAC1CK,IAAAA,GAEF2F,EAAO,CACLxL,KAAMsZ,EAAM,EAAI,aAAe,eAC/B9T,MAAOpH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOwB,GAAM,GAAGta,KACzCA,IAAKzH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOzO,GAAO,GAAG1K,QAE1CwiB,EAAQ,CACNhoB,KAAMsZ,EAAM,EAAI,SAAW,WAC3B9T,MAAOpH,OAAOyR,OAAO,CAAC,EAAGoY,EAAgBziB,OACzCK,IAAKzH,OAAOyR,OAAO,CAAC,EAAGqY,EAAgBriB,MAEzC8Y,EAAOwB,GAAM,GAAGta,IAAMzH,OAAOyR,OAAO,CAAC,EAAGoY,EAAgBziB,OACxDmZ,EAAOzO,GAAO,GAAG1K,MAAQpH,OAAOyR,OAAO,CAAC,EAAGqY,EAAgBriB,KAC3DsiB,EAAa,GAETxJ,EAAOwB,GAAM,GAAGta,IAAIyZ,OAASX,EAAOwB,GAAM,GAAG3a,MAAM8Z,SACrD6I,GAAajoB,EAAAA,EAAAA,GAAKioB,EAAY,CAC5B,CAAC,QAASxJ,EAAOwB,GAAM,GAAIzP,GAC3B,CAAC,OAAQiO,EAAOwB,GAAM,GAAIzP,MAI9ByX,GAAajoB,EAAAA,EAAAA,GAAKioB,EAAY,CAC5B,CAAC,QAASH,EAAOtX,GACjB,CAAC,QAASuX,EAAiBvX,GAC3B,CAAC,OAAQuX,EAAiBvX,GAC1B,CAAC,QAASlF,EAAMkF,KAGlByX,GAAajoB,EAAAA,EAAAA,GACXioB,GACAlC,EAAAA,GAAAA,GACEvV,EAAQqQ,OAAOiC,WAAWX,WAAWC,KACrC3D,EAAOjY,MAAMyZ,EAAO,EAAGjQ,GACvBQ,IAIJyX,GAAajoB,EAAAA,EAAAA,GAAKioB,EAAY,CAC5B,CAAC,OAAQ3c,EAAMkF,GACf,CAAC,QAASwX,EAAiBxX,GAC3B,CAAC,OAAQwX,EAAiBxX,GAC1B,CAAC,OAAQsX,EAAOtX,KAGdiO,EAAOzO,GAAO,GAAGrK,IAAIyZ,OAASX,EAAOzO,GAAO,GAAG1K,MAAM8Z,QACvDA,EAAS,EACT6I,GAAajoB,EAAAA,EAAAA,GAAKioB,EAAY,CAC5B,CAAC,QAASxJ,EAAOzO,GAAO,GAAIQ,GAC5B,CAAC,OAAQiO,EAAOzO,GAAO,GAAIQ,MAG7B4O,EAAS,GAGXU,EAAAA,EAAAA,GAAOrB,EAAQwB,EAAO,EAAGjQ,EAAQiQ,EAAO,EAAGgI,GAC3CjY,EAAQiQ,EAAOgI,EAAW9rB,OAASijB,EAAS,EAC5C,KACF,CAKNpP,GAAS,EAET,OAASA,EAAQyO,EAAOtiB,QACQ,sBAA1BsiB,EAAOzO,GAAO,GAAGlQ,OACnB2e,EAAOzO,GAAO,GAAGlQ,KAAO,QAI5B,OAAO2e,CACT,GAgDA,SAASkJ,GAAUxI,EAAOC,GACxBD,EAAMna,QAAUoa,EAChBD,EAAMC,QAAUA,EAChBD,EAAMwH,cAAgBvH,CACxB,CC7NO,IAAM1F,GAAW,CACtB/Y,KAAM,WACN8hB,SAIF,SAA0BC,EAASe,EAAIiC,GACrC,IAAIpR,EAAO,EACX,OAGA,SAAehI,GAMb,OALAoW,EAAQhS,MAAM,YACdgS,EAAQhS,MAAM,kBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,kBACbiS,EAAQhS,MAAM,oBACPuP,CACT,EAGA,SAASA,EAAK3T,GACZ,OAAI0U,EAAAA,EAAAA,IAAW1U,IACboW,EAAQK,QAAQzW,GACT6b,IAGFhH,EAAAA,EAAAA,IAAW7U,GAAQ8b,EAAW9b,GAAQoZ,EAAIpZ,EACnD,CAGA,SAAS6b,EAAmB7b,GAC1B,OAAgB,KAATA,GAAwB,KAATA,GAAwB,KAATA,IAAe4U,EAAAA,EAAAA,IAAkB5U,GAClE+b,EAAyB/b,GACzB8b,EAAW9b,EACjB,CAGA,SAAS+b,EAAyB/b,GAChC,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTgc,IAIG,KAAThc,GAAwB,KAATA,GAAwB,KAATA,IAAe4U,EAAAA,EAAAA,IAAkB5U,KAChEgI,IAAS,IAEToO,EAAQK,QAAQzW,GACT+b,GAGFD,EAAW9b,EACpB,CAGA,SAASgc,EAAUhc,GACjB,OAAa,KAATA,GACFoW,EAAQjS,KAAK,oBACN9K,EAAI2G,IAGA,OAATA,GAA0B,KAATA,GAAwB,KAATA,IAAe4b,EAAAA,EAAAA,IAAa5b,GACvDoZ,EAAIpZ,IAGboW,EAAQK,QAAQzW,GACTgc,EACT,CAGA,SAASF,EAAW9b,GAClB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GAChBgI,EAAO,EACAiU,IAGLpH,EAAAA,EAAAA,IAAW7U,IACboW,EAAQK,QAAQzW,GACT8b,GAGF1C,EAAIpZ,EACb,CAGA,SAASic,EAAiBjc,GACxB,OAAO4U,EAAAA,EAAAA,IAAkB5U,GAAQkc,EAAWlc,GAAQoZ,EAAIpZ,EAC1D,CAGA,SAASkc,EAAWlc,GAClB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GAChBgI,EAAO,EACAiU,GAGI,KAATjc,GAEFoW,EAAQjS,KAAK,oBAAoB3Q,KAAO,gBACjC6F,EAAI2G,IAGNmc,EAAWnc,EACpB,CAGA,SAASmc,EAAWnc,GAClB,OAAc,KAATA,IAAe4U,EAAAA,EAAAA,IAAkB5U,KAAUgI,IAAS,IACvDoO,EAAQK,QAAQzW,GACA,KAATA,EAAcmc,EAAaD,GAG7B9C,EAAIpZ,EACb,CAGA,SAAS3G,EAAI2G,GAKX,OAJAoW,EAAQhS,MAAM,kBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,kBACbiS,EAAQjS,KAAK,YACNgT,CACT,CACF,GC3HO,IAAMxI,GAAW,CACtBta,KAAM,WACN8hB,SAIF,SAA0BC,EAASe,EAAIiC,GACrC,IAGIrU,EAGA+I,EAGApK,EAGAge,EAZEze,EAAO7T,KAab,OAGA,SAAe4Q,GAIb,OAHAoW,EAAQhS,MAAM,YACdgS,EAAQhS,MAAM,gBACdgS,EAAQK,QAAQzW,GACT2T,CACT,EAGA,SAASA,EAAK3T,GACZ,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACT2hB,GAGI,KAAT3hB,GACFoW,EAAQK,QAAQzW,GACTigB,GAGI,KAATjgB,GACFoW,EAAQK,QAAQzW,GACT4hB,IAGLlN,EAAAA,EAAAA,IAAW1U,IACboW,EAAQK,QAAQzW,GACT6hB,GAGFzI,EAAIpZ,EACb,CAGA,SAAS2hB,EAAgB3hB,GACvB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACT8hB,GAGI,KAAT9hB,GACFoW,EAAQK,QAAQzW,GAChB8N,EAAS,SACTpK,EAAQ,EACDqe,IAGLrN,EAAAA,EAAAA,IAAW1U,IACboW,EAAQK,QAAQzW,GACT1F,GAGF8e,EAAIpZ,EACb,CAGA,SAAS8hB,EAAY9hB,GACnB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTgiB,GAGF5I,EAAIpZ,EACb,CAGA,SAASgiB,EAAahiB,GACpB,OAAa,OAATA,GAA0B,KAATA,EACZoZ,EAAIpZ,GAGA,KAATA,GACFoW,EAAQK,QAAQzW,GACTiiB,GAGF5nB,EAAQ2F,EACjB,CAGA,SAASiiB,EAAiBjiB,GACxB,OAAa,OAATA,GAA0B,KAATA,EACZoZ,EAAIpZ,GAGN3F,EAAQ2F,EACjB,CAGA,SAAS3F,EAAQ2F,GACf,OAAa,OAATA,EACKoZ,EAAIpZ,GAGA,KAATA,GACFoW,EAAQK,QAAQzW,GACTkiB,IAGLjM,EAAAA,EAAAA,IAAmBjW,IACrB0hB,EAAcrnB,EACP8nB,EAAaniB,KAGtBoW,EAAQK,QAAQzW,GACT3F,EACT,CAGA,SAAS6nB,EAAaliB,GACpB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACT3G,GAGFgB,EAAQ2F,EACjB,CAGA,SAAS+hB,EAAU/hB,GACjB,OAAIA,IAAS8N,EAAOrY,WAAWiO,MAC7B0S,EAAQK,QAAQzW,GACT0D,IAAUoK,EAAOje,OAASuyB,EAAQL,GAGpC3I,EAAIpZ,EACb,CAGA,SAASoiB,EAAMpiB,GACb,OAAa,OAATA,EACKoZ,EAAIpZ,GAGA,KAATA,GACFoW,EAAQK,QAAQzW,GACTqiB,IAGLpM,EAAAA,EAAAA,IAAmBjW,IACrB0hB,EAAcU,EACPD,EAAaniB,KAGtBoW,EAAQK,QAAQzW,GACToiB,EACT,CAGA,SAASC,EAAWriB,GAClB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTsiB,GAGFF,EAAMpiB,EACf,CAGA,SAASsiB,EAAStiB,GAChB,OAAa,KAATA,EACK3G,EAAI2G,GAGA,KAATA,GACFoW,EAAQK,QAAQzW,GACTsiB,GAGFF,EAAMpiB,EACf,CAGA,SAAS1F,EAAY0F,GACnB,OAAa,OAATA,GAA0B,KAATA,EACZ3G,EAAI2G,IAGTiW,EAAAA,EAAAA,IAAmBjW,IACrB0hB,EAAcpnB,EACP6nB,EAAaniB,KAGtBoW,EAAQK,QAAQzW,GACT1F,EACT,CAGA,SAASsnB,EAAY5hB,GACnB,OAAa,OAATA,EACKoZ,EAAIpZ,GAGA,KAATA,GACFoW,EAAQK,QAAQzW,GACTuiB,IAGLtM,EAAAA,EAAAA,IAAmBjW,IACrB0hB,EAAcE,EACPO,EAAaniB,KAGtBoW,EAAQK,QAAQzW,GACT4hB,EACT,CAGA,SAASW,EAAiBviB,GACxB,OAAgB,KAATA,EAAc3G,EAAI2G,GAAQ4hB,EAAY5hB,EAC/C,CAGA,SAASigB,EAAcjgB,GACrB,OAAI0U,EAAAA,EAAAA,IAAW1U,IACboW,EAAQK,QAAQzW,GACTwiB,GAGFpJ,EAAIpZ,EACb,CAGA,SAASwiB,EAASxiB,GAChB,OAAa,KAATA,IAAe4U,EAAAA,EAAAA,IAAkB5U,IACnCoW,EAAQK,QAAQzW,GACTwiB,GAGFC,EAAgBziB,EACzB,CAGA,SAASyiB,EAAgBziB,GACvB,OAAIiW,EAAAA,EAAAA,IAAmBjW,IACrB0hB,EAAce,EACPN,EAAaniB,KAGlBoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQK,QAAQzW,GACTyiB,GAGFppB,EAAI2G,EACb,CAGA,SAAS6hB,EAAQ7hB,GACf,OAAa,KAATA,IAAe4U,EAAAA,EAAAA,IAAkB5U,IACnCoW,EAAQK,QAAQzW,GACT6hB,GAGI,KAAT7hB,GAAwB,KAATA,IAAe2c,EAAAA,EAAAA,IAA0B3c,GACnD0iB,EAAe1iB,GAGjBoZ,EAAIpZ,EACb,CAGA,SAAS0iB,EAAe1iB,GACtB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACT3G,GAGI,KAAT2G,GAAwB,KAATA,IAAe0U,EAAAA,EAAAA,IAAW1U,IAC3CoW,EAAQK,QAAQzW,GACT2iB,IAGL1M,EAAAA,EAAAA,IAAmBjW,IACrB0hB,EAAcgB,EACPP,EAAaniB,KAGlBoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQK,QAAQzW,GACT0iB,GAGFrpB,EAAI2G,EACb,CAGA,SAAS2iB,EAAqB3iB,GAC5B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,IACA4U,EAAAA,EAAAA,IAAkB5U,IAElBoW,EAAQK,QAAQzW,GACT2iB,GAGFC,EAA0B5iB,EACnC,CAGA,SAAS4iB,EAA0B5iB,GACjC,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACT6iB,IAGL5M,EAAAA,EAAAA,IAAmBjW,IACrB0hB,EAAckB,EACPT,EAAaniB,KAGlBoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQK,QAAQzW,GACT4iB,GAGFF,EAAe1iB,EACxB,CAGA,SAAS6iB,EAA4B7iB,GACnC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOoZ,EAAIpZ,GAGA,KAATA,GAAwB,KAATA,GACjBoW,EAAQK,QAAQzW,GAChB+E,EAAS/E,EACF8iB,IAGL7M,EAAAA,EAAAA,IAAmBjW,IACrB0hB,EAAcmB,EACPV,EAAaniB,KAGlBoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQK,QAAQzW,GACT6iB,IAGTzM,EAAQK,QAAQzW,GAChB+E,OAAStS,EACFswB,EACT,CAGA,SAASD,EAA4B9iB,GACnC,OAAIA,IAAS+E,GACXqR,EAAQK,QAAQzW,GACTgjB,GAGI,OAAThjB,EACKoZ,EAAIpZ,IAGTiW,EAAAA,EAAAA,IAAmBjW,IACrB0hB,EAAcoB,EACPX,EAAaniB,KAGtBoW,EAAQK,QAAQzW,GACT8iB,EACT,CAGA,SAASE,EAAiChjB,GACxC,OAAa,KAATA,GAAwB,KAATA,IAAe2c,EAAAA,EAAAA,IAA0B3c,GACnD0iB,EAAe1iB,GAGjBoZ,EAAIpZ,EACb,CAGA,SAAS+iB,EAA8B/iB,GACrC,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,EAEOoZ,EAAIpZ,GAGA,KAATA,IAAe2c,EAAAA,EAAAA,IAA0B3c,GACpC0iB,EAAe1iB,IAGxBoW,EAAQK,QAAQzW,GACT+iB,EACT,CAKA,SAASZ,EAAaniB,GAKpB,OAJAoW,EAAQjS,KAAK,gBACbiS,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,eACN+R,EAAAA,EAAAA,GACLE,EACAqH,EACA,aACAxa,EAAKsR,OAAOiC,WAAWR,QAAQF,KAAKta,SAAS,qBACzC/I,EACA,EAER,CAGA,SAASgrB,EAAYzd,GAEnB,OADAoW,EAAQhS,MAAM,gBACPsd,EAAY1hB,EACrB,CAGA,SAAS3G,EAAI2G,GACX,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,gBACbiS,EAAQjS,KAAK,YACNgT,GAGFiC,EAAIpZ,EACb,CACF,GCtdO,IAAMyV,GAAiB,CAC5BphB,KAAM,iBACN8hB,SAKF,SAAgCC,EAASe,EAAIiC,GAC3C,IAAMnW,EAAO7T,KACb,OAGA,SAAe4Q,GAMb,OALAoW,EAAQhS,MAAM,aACdgS,EAAQhS,MAAM,eACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,eACbiS,EAAQjS,KAAK,aACNsB,CACT,EAGA,SAASA,EAAMzF,GAQb,OAAgB,KAATA,GAAe,2BAA4BiD,EAAKsR,OAAOiC,WAC1D4C,EAAIpZ,GACJmX,EAAGnX,EACT,CACF,EA/BEyZ,WAAYlE,GAASkE,YCHhB,IAAMlL,GAAkB,CAC7Bla,KAAM,kBACN8hB,SAIF,SAAiCC,EAASe,EAAIiC,GAC5C,OAGA,SAAepZ,GAIb,OAHAoW,EAAQhS,MAAM,mBACdgS,EAAQhS,MAAM,gBACdgS,EAAQK,QAAQzW,GACT2T,CACT,EAGA,SAASA,EAAK3T,GACZ,OAAIiW,EAAAA,EAAAA,IAAmBjW,IACrBoW,EAAQjS,KAAK,gBACbiS,EAAQjS,KAAK,mBACNgT,EAAGnX,IAGLoZ,EAAIpZ,EACb,CACF,GCxBO,mBAAMiO,GAAW,CACtB5Z,KAAM,WACN8hB,SA0EF,SAA0BC,EAASe,EAAIiC,GACrC,IAIIpR,EAGA4L,EANAmJ,EAAW,EAOf,OAGA,SAAe/c,GAGb,OAFAoW,EAAQhS,MAAM,YACdgS,EAAQhS,MAAM,oBACPqX,EAAgBzb,EACzB,EAGA,SAASyb,EAAgBzb,GACvB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GAChB+c,IACOtB,IAGTrF,EAAQjS,KAAK,oBACNwZ,EAAI3d,GACb,CAGA,SAAS2d,EAAI3d,GAEX,OAAa,OAATA,EACKoZ,EAAIpZ,GAIA,KAATA,GACF4T,EAAQwC,EAAQhS,MAAM,oBACtB4D,EAAO,EACA0T,EAAgB1b,IAGZ,KAATA,GACFoW,EAAQhS,MAAM,SACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,SACNwZ,IAGL1H,EAAAA,EAAAA,IAAmBjW,IACrBoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,cACNwZ,IAGTvH,EAAQhS,MAAM,gBACPd,EAAKtD,GACd,CAIA,SAASsD,EAAKtD,GACZ,OACW,OAATA,GACS,KAATA,GACS,KAATA,IACAiW,EAAAA,EAAAA,IAAmBjW,IAEnBoW,EAAQjS,KAAK,gBACNwZ,EAAI3d,KAGboW,EAAQK,QAAQzW,GACTsD,EACT,CAIA,SAASoY,EAAgB1b,GAEvB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GAChBgI,IACO0T,GAGL1T,IAAS+U,GACX3G,EAAQjS,KAAK,oBACbiS,EAAQjS,KAAK,YACNgT,EAAGnX,KAGZ4T,EAAMpgB,KAAO,eACN8P,EAAKtD,GACd,CACF,EA3KE0d,QAKF,SAAyBvL,GACvB,IAIIzO,EAGAU,EAPAwZ,EAAgBzL,EAAOtiB,OAAS,EAChCguB,EAAiB,EAQrB,IACsC,eAAnC1L,EAAO0L,GAAgB,GAAGrqB,MACU,UAAnC2e,EAAO0L,GAAgB,GAAGrqB,QACO,eAAlC2e,EAAOyL,GAAe,GAAGpqB,MACU,UAAlC2e,EAAOyL,GAAe,GAAGpqB,MAI3B,IAFAkQ,EAAQma,IAECna,EAAQka,GACf,GAA8B,iBAA1BzL,EAAOzO,GAAO,GAAGlQ,KAAyB,CAE5C2e,EAAO0L,GAAgB,GAAGrqB,KAAO,kBACjC2e,EAAOyL,GAAe,GAAGpqB,KAAO,kBAChCqqB,GAAkB,EAClBD,GAAiB,EACjB,KACF,CAIJla,EAAQma,EAAiB,EACzBD,IAEA,OAASla,GAASka,QACFnrB,IAAV2R,EACEV,IAAUka,GAA2C,eAA1BzL,EAAOzO,GAAO,GAAGlQ,OAC9C4Q,EAAQV,GAGVA,IAAUka,GACgB,eAA1BzL,EAAOzO,GAAO,GAAGlQ,OAEjB2e,EAAO/N,GAAO,GAAG5Q,KAAO,eAEpBkQ,IAAUU,EAAQ,IACpB+N,EAAO/N,GAAO,GAAG/K,IAAM8Y,EAAOzO,EAAQ,GAAG,GAAGrK,IAC5C8Y,EAAOqB,OAAOpP,EAAQ,EAAGV,EAAQU,EAAQ,GACzCwZ,GAAiBla,EAAQU,EAAQ,EACjCV,EAAQU,EAAQ,GAGlBA,OAAQ3R,GAIZ,OAAO0f,CACT,EA5DEkE,SA+DF,SAAkBrW,GAEhB,OACW,KAATA,GACgD,oBAAhD5Q,KAAK+iB,OAAO/iB,KAAK+iB,OAAOtiB,OAAS,GAAG,GAAG2D,IAE3C,GCxDO,IAAM2Y,IAAQ,kBAClB,GAAK/E,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKA,KAAI,WACT,GAAKsG,IAAU,IAILiI,IAAiB,WAC3B,GAAK7O,IAIK8O,IAAW,mBACpB,EAAI5H,KAAY,YAChB,EAAIA,KAAY,WACjB,GAAKA,IAAY,IAIP1J,IAAI,kBACd,GAAKgR,KAAU,WACf,GAAK7N,KAAa,WAClB,GAAK,CAACiO,GAAiBjO,MAAc,WACrC,GAAKgH,KAAQ,WACb,GAAKiH,KAAe,WACpB,GAAKjO,KAAa,WAClB,GAAKkG,KAAU,WACf,IAAMA,IAAU,IAINjS,IAAM,kBAChB,GAAKsO,KAAkB,WACvB,GAAKD,IAAe,IAIV/K,IAAI,mBACb,EAAIoS,KAAU,YACd,EAAIA,KAAU,YACd,EAAIA,KAAU,WACf,GAAKoE,KAAe,WACpB,GAAKxL,KAAkB,WACvB,GAAKqL,KAAS,WACd,GAAK,CAACjI,GAAUuB,MAAS,WACzB,GAAK8G,KAAc,WACnB,GAAK,CAAClH,GAAiBxE,MAAgB,WACvC,GAAKwL,KAAQ,WACb,GAAKF,KAAS,WACd,GAAKpH,IAAQ,IAIH4H,GAAa,CACxBC,KAAM,CAACT,GAAWspC,KAIPD,GAAmB,CAC9B5oC,KAAM,CAAC,GAAI,KAIAE,GAAU,CACrBF,KAAM,ICzFR,IAAM+E,GAAS,wCC8ETrO,GAAM,CAAC,EAAErW,eAOFkyB,GAcX,SAAUv2B,EAAOmb,EAAUhW,GAMzB,MALwB,kBAAbgW,IACThW,EAAUgW,EACVA,OAAWxa,GAejB,WAAgC,IAAdwE,EAAU,UAAH,6CAAG,CAAC,EAGrBqU,EAASzH,GACb,CACEqJ,WAAY,GACZC,eAAgB,CACd,WACA,WACA,UACA,YACA,UAEF/I,MAAO,CACLgJ,SAAUC,EAAOnG,IACjBoG,iBAAkBC,EAClBC,cAAeD,EACfE,WAAYJ,EAAOrG,IACnB0G,WAAYL,EAAOK,GACnB3D,gBAAiBwD,EACjBvD,mBAAoBuD,EACpBI,WAAYN,EAAOO,GACnBC,oBAAqBC,EACrBC,oBAAqBD,EACrBE,aAAcX,EAAOO,EAAUE,GAC/BG,SAAUZ,EAAOY,EAAUH,GAC3BI,aAAcX,EACdjK,KAAMiK,EACNY,cAAeZ,EACfzG,WAAYuG,EAAOvG,GACnBsH,4BAA6BN,EAC7BO,sBAAuBP,EACvBQ,sBAAuBR,EACvBhI,SAAUuH,EAAOvH,IACjByI,gBAAiBlB,EAAOtG,IACxByH,kBAAmBnB,EAAOtG,IAC1B0H,SAAUpB,EAAO9G,GAAMuH,GACvBY,aAAcnB,EACdoB,SAAUtB,EAAO9G,GAAMuH,GACvBc,aAAcrB,EACd3G,MAAOyG,EAAOzG,IACdiD,MAAOiE,EACP5G,KAAMmG,EAAOnG,IACbG,SAAUgG,EAAOhG,IACjBwH,cAAeC,EACfC,YAAa1B,EAAOjG,GAAM4H,GAC1BC,cAAe5B,EAAOjG,IACtBE,UAAW+F,EAAO/F,IAClBb,UAAWyI,EACXC,gBAAiBrB,EACjBsB,0BAA2BtB,EAC3BuB,oBAAqBvB,EACrBwB,cAAejC,EAAOrG,IACtBQ,OAAQ6F,EAAO7F,IACfC,cAAe4F,EAAO5F,KAExBtD,KAAM,CACJsJ,WAAY8B,IACZC,mBAAoBC,EACpBrC,SAAUmC,IACV/B,cAAekC,EACfpC,iBAAkBqC,EAClBjC,WAAY6B,IACZK,qBAAsBC,EACtBC,oCAAqCC,EACrCC,gCAAiCD,EACjCE,wBAAyBC,EACzBvC,WAAY4B,EAAOY,GACnBC,gBAAiBC,EACjBxC,oBAAqByC,EACrBvC,oBAAqBwC,EACrBpC,cAAe0B,EACf7B,aAAcuB,EAAOiB,GACrBvC,SAAUsB,EAAOkB,GACjBvC,aAAc2B,EACdvM,KAAMuM,EACN/I,WAAYyI,IACZnB,4BAA6BsC,EAC7BrC,sBAAuBsC,EACvBrC,sBAAuBsC,EACvB9K,SAAUyJ,IACVhB,gBAAiBgB,EAAOsB,GACxBrC,kBAAmBe,EAAOsB,GAC1BpC,SAAUc,EAAOuB,GACjBpC,aAAcmB,EACdlB,SAAUY,EAAOwB,GACjBnC,aAAciB,EACdjJ,MAAO2I,EAAOyB,GACdnH,MAAOoH,EACPC,UAAWC,EACXC,WAAYC,EACZnK,KAAMqI,EAAO+B,GACbjK,SAAUkI,IACVR,YAAaQ,IACbN,cAAeM,IACfjI,UAAWiI,IACXJ,gBAAiBoC,EACjBnC,0BAA2BoC,EAC3BnC,oBAAqBoC,EACrBC,SAAUC,EACVrC,cAAeC,EAAOqC,GACtBC,0BAA2BC,EAC3BC,kBAAmBC,EACnBxK,OAAQ+H,IACR9H,cAAe8H,MAGnBtY,EAAQgb,iBAAmB,IAIvB3O,EAAO,CAAC,EACd,OAAO4O,EAMP,SAASA,EAAQC,GA8Bf,IA5BA,IAAIhP,EAAO,CACT3P,KAAM,OACN6K,SAAU,IAONgU,EAAa,GAGbC,EAAY,GAGZpO,EAAU,CACdS,MAVY,CAACxB,GAWbkP,WAAAA,EACA/G,OAAAA,EACAlH,MAAAA,EACAD,KAAAA,EACA2J,OAAAA,EACAyE,OAAAA,EACAC,QAAAA,EACAC,QAAAA,GAEE/O,GAAS,IAEJA,EAAQyO,EAAOtiB,QAAQ,CAG9B,GAC4B,gBAA1BsiB,EAAOzO,GAAO,GAAGlQ,MACS,kBAA1B2e,EAAOzO,GAAO,GAAGlQ,KAEjB,GAAyB,UAArB2e,EAAOzO,GAAO,GAChB4O,EAAU5e,KAAKgQ,QAGfA,EAAQgP,EAAYP,EADPG,EAAUvJ,MACWrF,EAGxC,CAIA,IAFAA,GAAS,IAEAA,EAAQyO,EAAOtiB,QAAQ,CAC9B,IAAMuiB,EAAU9G,EAAO6G,EAAOzO,GAAO,IAEjC8I,GAAIhW,KAAK4b,EAASD,EAAOzO,GAAO,GAAGlQ,OACrC4e,EAAQD,EAAOzO,GAAO,GAAGlQ,MAAMgD,KAC7B5E,OAAOyR,OACL,CACEsP,eAAgBR,EAAOzO,GAAO,GAAGiP,gBAEnCzO,GAEFiO,EAAOzO,GAAO,GAGpB,CAEA,GAAI2O,EAAWxiB,OAAS,EAAG,CACzB,IAAMokB,EAAO5B,EAAWA,EAAWxiB,OAAS,IAC5BokB,EAAK,IAAM2qC,IACnBpoD,KAAK0N,OAASzR,EAAWwhB,EAAK,GACxC,CAwBA,IAtBA9Q,EAAKpK,SAAW,CACdC,MAAO6Z,EACLV,EAAOtiB,OAAS,EACZsiB,EAAO,GAAG,GAAGnZ,MACb,CACEC,KAAM,EACNP,OAAQ,EACRoa,OAAQ,IAGhBzZ,IAAKwZ,EACHV,EAAOtiB,OAAS,EACZsiB,EAAOA,EAAOtiB,OAAS,GAAG,GAAGwJ,IAC7B,CACEJ,KAAM,EACNP,OAAQ,EACRoa,OAAQ,KAIlBpP,GAAS,IAEAA,EAAQ4H,EAAO4B,WAAWrd,QACjCsT,EAAOmI,EAAO4B,WAAWxJ,GAAOP,IAASA,EAG3C,OAAOA,CACT,CAQA,SAASuP,EAAYP,EAAQnZ,EAAOnJ,GAiBlC,IAhBA,IAKIwX,EAGA2L,EAGAG,EAGAC,EAdA1P,EAAQ1K,EAAQ,EAChBqa,GAAoB,EACpBC,GAAa,IAcR5P,GAAS7T,GAAQ,CACxB,IAAMqjB,EAAQf,EAAOzO,GAuCrB,GApCoB,kBAAlBwP,EAAM,GAAG1f,MACS,gBAAlB0f,EAAM,GAAG1f,MACS,eAAlB0f,EAAM,GAAG1f,MAEQ,UAAb0f,EAAM,GACRG,IAEAA,IAGFD,OAAW3gB,GACgB,oBAAlBygB,EAAM,GAAG1f,KACD,UAAb0f,EAAM,MAEN7L,GACC+L,GACAC,GACAF,IAEDA,EAAsBzP,GAGxB0P,OAAW3gB,GAGK,eAAlBygB,EAAM,GAAG1f,MACS,kBAAlB0f,EAAM,GAAG1f,MACS,mBAAlB0f,EAAM,GAAG1f,MACS,mBAAlB0f,EAAM,GAAG1f,MACS,6BAAlB0f,EAAM,GAAG1f,OAIT4f,OAAW3gB,IAIT4gB,GACa,UAAbH,EAAM,IACY,mBAAlBA,EAAM,GAAG1f,OACY,IAAtB6f,GACc,SAAbH,EAAM,KACa,kBAAlBA,EAAM,GAAG1f,MACU,gBAAlB0f,EAAM,GAAG1f,MACb,CACA,GAAI6T,EAAU,CACZ,IAAI0L,EAAYrP,EAGhB,IAFAsP,OAAYvgB,EAELsgB,KAAa,CAClB,IAAME,EAAYd,EAAOY,GAEzB,GACwB,eAAtBE,EAAU,GAAGzf,MACS,oBAAtByf,EAAU,GAAGzf,KACb,CACA,GAAqB,SAAjByf,EAAU,GAAe,SAEzBD,IACFb,EAAOa,GAAW,GAAGxf,KAAO,kBAC5B8f,GAAa,GAGfL,EAAU,GAAGzf,KAAO,aACpBwf,EAAYD,CACd,MAAO,GACiB,eAAtBE,EAAU,GAAGzf,MACS,qBAAtByf,EAAU,GAAGzf,MACS,+BAAtByf,EAAU,GAAGzf,MACS,qBAAtByf,EAAU,GAAGzf,MACS,mBAAtByf,EAAU,GAAGzf,KAIb,KAEJ,CAGE2f,KACEH,GAAaG,EAAsBH,KAGrC3L,EAASkM,SAAU,GAGrBlM,EAAShO,IAAMzH,OAAOyR,OACpB,CAAC,EACD2P,EAAYb,EAAOa,GAAW,GAAGha,MAAQka,EAAM,GAAG7Z,KAEpD8Y,EAAOqB,OAAOR,GAAatP,EAAO,EAAG,CAAC,OAAQ2D,EAAU6L,EAAM,KAC9DxP,IACA7T,GACF,CAEsB,mBAAlBqjB,EAAM,GAAG1f,OACX6T,EAAW,CACT7T,KAAM,WAEN+f,SAAS,EACTva,MAAOpH,OAAOyR,OAAO,CAAC,EAAG6P,EAAM,GAAGla,QAGpCmZ,EAAOqB,OAAO9P,EAAO,EAAG,CAAC,QAAS2D,EAAU6L,EAAM,KAClDxP,IACA7T,IACAsjB,OAAsB1gB,EACtB2gB,GAAW,EAEf,CACF,CAGA,OADAjB,EAAOnZ,GAAO,GAAGua,QAAUD,EACpBzjB,CACT,CAMA,SAAS2iB,EAAQ7b,EAAK7E,GACpBwR,EAAK3M,GAAO7E,CACd,CAQA,SAAS2gB,EAAQ9b,GACf,OAAO2M,EAAK3M,EACd,CAMA,SAASkc,EAAMvU,GACb,MAAO,CACLrF,KAAMqF,EAAErF,KACRP,OAAQ4F,EAAE5F,OACVoa,OAAQxU,EAAEwU,OAEd,CAOA,SAASzF,EAAOoG,EAAQC,GACtB,OAAOC,EAOP,SAASA,EAAKC,GACZxP,EAAM5N,KAAKpH,KAAMqkB,EAAOG,GAAQA,GAC5BF,GAAKA,EAAIld,KAAKpH,KAAMwkB,EAC1B,CACF,CAGA,SAAS9F,IACP1e,KAAKuV,MAAMjR,KAAK,CACdF,KAAM,WACN6K,SAAU,IAEd,CAWA,SAAS+F,EAAMlL,EAAM0a,EAAOirC,GAU1B,OATezvD,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAEvCwO,SAAS3K,KAAKwF,GACrB9J,KAAKuV,MAAMjR,KAAKwF,GAChB9J,KAAKijB,WAAW3e,KAAK,CAACkgB,EAAOirC,IAE7B3lD,EAAKH,SAAW,CACdC,MAAO6Z,EAAMe,EAAM5a,QAEdE,CACT,CAMA,SAASqW,EAAOmE,GACd,OAAOG,EAOP,SAASA,EAAMD,GACTF,GAAKA,EAAIld,KAAKpH,KAAMwkB,GACxBzP,EAAK3N,KAAKpH,KAAMwkB,EAClB,CACF,CASA,SAASzP,EAAKyP,EAAOkrC,GACnB,IAAM5lD,EAAO9J,KAAKuV,MAAMoE,MAClB4K,EAAOvkB,KAAKijB,WAAWtJ,MAE7B,IAAK4K,EACH,MAAM,IAAI1gB,MACR,iBACE2gB,EAAMpgB,KACN,MACAof,EAAkB,CAChB5Z,MAAO4a,EAAM5a,MACbK,IAAKua,EAAMva,MAEb,yBAYN,OAVWsa,EAAK,GAAGngB,OAASogB,EAAMpgB,OAC5BsrD,EACFA,EAAYtoD,KAAKpH,KAAMwkB,EAAOD,EAAK,KAEnBA,EAAK,IAAMirC,IACnBpoD,KAAKpH,KAAMwkB,EAAOD,EAAK,KAInCza,EAAKH,SAASM,IAAMwZ,EAAMe,EAAMva,KACzBH,CACT,CAMA,SAASqZ,IACP,OAAO5c,EAASvG,KAAKuV,MAAMoE,MAC7B,CAMA,SAASiG,IACPwD,EAAQ,+BAA+B,EACzC,CAGA,SAAS1D,EAAqB8E,GACxBnB,EAAQ,iCAGRrjB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GACxBmJ,MAAQ2R,OAAO7X,SAAS1D,KAAKujB,eAAeiB,GAAQ,IAC7DpB,EAAQ,+BAEZ,CAGA,SAASlC,IACP,IAAMhN,EAAOlU,KAAKmjB,SAGhBnjB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5B2V,KAAOlC,CACd,CAGA,SAASiN,IACP,IAAMjN,EAAOlU,KAAKmjB,SAGhBnjB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5ByL,KAAOgI,CACd,CAGA,SAAS+M,IAEHoC,EAAQ,oBACZrjB,KAAK0e,SACL0E,EAAQ,kBAAkB,GAC5B,CAGA,SAASrC,IACP,IAAM7M,EAAOlU,KAAKmjB,SAGhBnjB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5BiC,MAAQwR,EAAKhL,QAAQ,2BAA4B,IACtDka,EAAQ,iBACV,CAGA,SAAShC,IACP,IAAMlN,EAAOlU,KAAKmjB,SAGhBnjB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5BiC,MAAQwR,EAAKhL,QAAQ,eAAgB,GAC5C,CAGA,SAASqY,EAA4BiD,GAEnC,IAAM/J,EAAQza,KAAKmjB,SACbrZ,EAEJ9J,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GACjCqJ,EAAK2Q,MAAQA,EACb3Q,EAAK4Q,YAAagK,EAAAA,GAAAA,GAChB1kB,KAAKujB,eAAeiB,IACpBG,aACJ,CAGA,SAASnD,IACP,IAAMtN,EAAOlU,KAAKmjB,SAGhBnjB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5BgW,MAAQvC,CACf,CAGA,SAASoN,IACP,IAAMpN,EAAOlU,KAAKmjB,SAGhBnjB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5BmL,IAAMsI,CACb,CAGA,SAASmM,EAAyBmE,GAChC,IAAM1a,EAEJ9J,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAEjC,IAAKqJ,EAAKkN,MAAO,CACf,IAAMA,EAAQhX,KAAKujB,eAAeiB,GAAO/jB,OACzCqJ,EAAKkN,MAAQA,CACf,CACF,CAGA,SAAS4L,IACPQ,EAAQ,gCAAgC,EAC1C,CAGA,SAASV,EAAgC8B,GAGrCxkB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5BuW,MAAqD,KAA7ChX,KAAKujB,eAAeiB,GAAOne,WAAW,GAAY,EAAI,CACrE,CAGA,SAASmc,IACPY,EAAQ,+BACV,CAGA,SAASjF,EAAYqG,GACnB,IAAMjM,EAEJvY,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAG7BokB,EAAOtM,EAAOtJ,SAASsJ,EAAOtJ,SAASxO,OAAS,GAE/CokB,GAAsB,SAAdA,EAAKzgB,QAEhBygB,EAAOjV,MAEFjG,SAAW,CACdC,MAAO6Z,EAAMe,EAAM5a,QAGrB2O,EAAOtJ,SAAS3K,KAAKugB,IAGvB7kB,KAAKuV,MAAMjR,KAAKugB,EAClB,CAGA,SAASpE,EAAW+D,GAClB,IAAMK,EAAO7kB,KAAKuV,MAAMoE,MACxBkL,EAAKniB,OAAS1C,KAAKujB,eAAeiB,GAClCK,EAAKlb,SAASM,IAAMwZ,EAAMe,EAAMva,IAClC,CAGA,SAASgY,EAAiBuC,GACxB,IAAM1P,EAAU9U,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAG/C,GAAI4iB,EAAQ,eAIV,OAHavO,EAAQ7F,SAAS6F,EAAQ7F,SAASxO,OAAS,GACnDkJ,SAASM,IAAMwZ,EAAMe,EAAMva,UAChCmZ,EAAQ,gBAKPC,EAAQ,iCACTnH,EAAO6B,eAAe3R,SAAS0I,EAAQ1Q,QAEvC+Z,EAAY/W,KAAKpH,KAAMwkB,GACvB/D,EAAWrZ,KAAKpH,KAAMwkB,GAE1B,CAGA,SAAS/C,IACP2B,EAAQ,eAAe,EACzB,CAGA,SAAS1B,IACP,IAAMxN,EAAOlU,KAAKmjB,SAGhBnjB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5BiC,MAAQwR,CACf,CAGA,SAASyN,IACP,IAAMzN,EAAOlU,KAAKmjB,SAGhBnjB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5BiC,MAAQwR,CACf,CAGA,SAASmN,IACP,IAAMnN,EAAOlU,KAAKmjB,SAGhBnjB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5BiC,MAAQwR,CACf,CAGA,SAASgO,IACP,IAAMpN,EAEJ9U,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAE7B4iB,EAAQ,gBACVvO,EAAQ1Q,MAAQ,YAEhB0Q,EAAQwC,cAAgB+L,EAAQ,kBAAoB,kBAE7CvO,EAAQlJ,WACRkJ,EAAQ2B,eAGR3B,EAAQ4F,kBAER5F,EAAQ2F,OAGjB2I,EAAQ,gBACV,CAGA,SAASxB,IACP,IAAM9M,EAEJ9U,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAE7B4iB,EAAQ,gBACVvO,EAAQ1Q,MAAQ,YAEhB0Q,EAAQwC,cAAgB+L,EAAQ,kBAAoB,kBAE7CvO,EAAQlJ,WACRkJ,EAAQ2B,eAGR3B,EAAQ4F,kBAER5F,EAAQ2F,OAGjB2I,EAAQ,gBACV,CAGA,SAASrB,EAAgByC,GACvB,IAAMmrC,EAEJ3vD,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC3B6L,EAAStM,KAAKujB,eAAeiB,GACnCmrC,EAASl1C,OAAQ8qB,EAAAA,GAAAA,GAAaj5B,GAC9BqjD,EAASj1C,YAAagK,EAAAA,GAAAA,GAAoBpY,GAAQqY,aACpD,CAGA,SAAS9C,IACP,IAAMiD,EAEJ9kB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC3BiC,EAAQ1C,KAAKmjB,SACbrZ,EAEJ9J,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAEjC2iB,EAAQ,eAAe,GAEL,SAAdtZ,EAAK1F,KAEP0F,EAAKmF,SAAW6V,EAAS7V,SAEzBnF,EAAKyN,IAAM7U,CAEf,CAGA,SAAS0f,IACP,IAAMlO,EAAOlU,KAAKmjB,SAGhBnjB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5BmL,IAAMsI,CACb,CAGA,SAASmO,IACP,IAAMnO,EAAOlU,KAAKmjB,SAGhBnjB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5BgW,MAAQvC,CACf,CAGA,SAASqO,IACPa,EAAQ,cACV,CAGA,SAAStD,IACPsD,EAAQ,gBAAiB,YAC3B,CAGA,SAASjB,EAAsBqC,GAC7B,IAAM/J,EAAQza,KAAKmjB,SACbrZ,EAEJ9J,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GACjCqJ,EAAK2Q,MAAQA,EACb3Q,EAAK4Q,YAAagK,EAAAA,GAAAA,GAChB1kB,KAAKujB,eAAeiB,IACpBG,cACFvB,EAAQ,gBAAiB,OAC3B,CAGA,SAASzC,EAA+B6D,GACtCpB,EAAQ,yBAA0BoB,EAAMpgB,KAC1C,CAGA,SAAS0c,EAA8B0D,GACrC,IAII9hB,EAJEwR,EAAOlU,KAAKujB,eAAeiB,GAC3BpgB,EAAOif,EAAQ,0BAKjBjf,GACF1B,GAAQ2iC,EAAAA,GAAAA,GACNnxB,EACS,oCAAT9P,EAA6C,GAAK,IAEpDgf,EAAQ,2BAKR1gB,GAAQsgC,EAAAA,GAAAA,GAA8B9uB,GAGxC,IAAM2Q,EAAO7kB,KAAKuV,MAAMoE,MACxBkL,EAAKniB,OAASA,EACdmiB,EAAKlb,SAASM,IAAMwZ,EAAMe,EAAMva,IAClC,CAGA,SAASsW,EAAuBiE,GAC9B/D,EAAWrZ,KAAKpH,KAAMwkB,GAGpBxkB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5BmL,IAAM5L,KAAKujB,eAAeiB,EACjC,CAGA,SAASlE,EAAoBkE,GAC3B/D,EAAWrZ,KAAKpH,KAAMwkB,GAGpBxkB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5BmL,IAAM,UAAY5L,KAAKujB,eAAeiB,EAC7C,CAMA,SAASlG,IACP,MAAO,CACLla,KAAM,aACN6K,SAAU,GAEd,CAGA,SAASuP,IACP,MAAO,CACLpa,KAAM,OACNgS,KAAM,KACNlK,KAAM,KACNxJ,MAAO,GAEX,CAGA,SAASmc,IACP,MAAO,CACLza,KAAM,aACN1B,MAAO,GAEX,CAGA,SAASgV,IACP,MAAO,CACLtT,KAAM,aACNsW,WAAY,GACZD,MAAO,KACPhE,MAAO,KACP7K,IAAK,GAET,CAGA,SAAS8K,KACP,MAAO,CACLtS,KAAM,WACN6K,SAAU,GAEd,CAGA,SAAS2I,KAEP,MAAO,CACLxT,KAAM,UACN4S,WAAO3T,EACP4L,SAAU,GAEd,CAGA,SAAS0I,KACP,MAAO,CACLvT,KAAM,QAEV,CAGA,SAAS+S,KACP,MAAO,CACL/S,KAAM,OACN1B,MAAO,GAEX,CAGA,SAAS8U,KACP,MAAO,CACLpT,KAAM,QACNqS,MAAO,KACP7K,IAAK,GACL2L,IAAK,KAET,CAGA,SAASO,KACP,MAAO,CACL1T,KAAM,OACNqS,MAAO,KACP7K,IAAK,GACLqD,SAAU,GAEd,CAMA,SAAS+I,GAAKwM,GACZ,MAAO,CACLpgB,KAAM,OACN6U,QAAwB,gBAAfuL,EAAMpgB,KACfwF,MAAO,KAEPuP,OAAQqL,EAAML,QACdlV,SAAU,GAEd,CAMA,SAASgJ,GAASuM,GAChB,MAAO,CACLpgB,KAAM,WAEN+U,OAAQqL,EAAML,QACda,QAAS,KACT/V,SAAU,GAEd,CAGA,SAASiJ,KACP,MAAO,CACL9T,KAAM,YACN6K,SAAU,GAEd,CAGA,SAASmJ,KACP,MAAO,CACLhU,KAAM,SACN6K,SAAU,GAEd,CAGA,SAASW,KACP,MAAO,CACLxL,KAAM,OACN1B,MAAO,GAEX,CAGA,SAAS2V,KACP,MAAO,CACLjU,KAAM,gBAEV,CACF,CA9gCW6gB,CAASpd,EAATod,CC9GJ,SAAqBlC,GAC1B,MAAQyI,GAAYzI,KAIpB,OAAOA,CACT,CDyGMmC,CErGC,WAA6B,IAAdrd,EAAU,UAAH,6CAAG,CAAC,EAGzBuf,GAAa8D,EAAAA,EAAAA,GAEjB,CAAC0kC,GAAmBh7C,OAAO/M,EAAQsM,YAAc,KAI7CgR,EAAS,CACbkG,QAAS,GACTtC,KAAM,CAAC,EACP3B,WAAAA,EACAjd,QAASka,EAAOla,GAChB4S,SAAUsH,EAAOtH,IACjB7H,KAAMmP,EAAOnP,IACb5I,OAAQ+X,EAAO/X,IACfsD,KAAMyU,EAAOzU,KAEf,OAAOuV,EAKP,SAASd,EAAO4F,GACd,OAGA,SAAiBsB,GACf,OAAOJ,GAAgBhG,EAAQ8E,EAASsB,EAC1C,CACF,CACF,CFsEQtpB,CAAM4F,GAASkV,WAAWqI,MDtG3B,WACL,IAOIsG,EAPApiB,EAAS,EACToV,EAAS,GAGT9U,GAAQ,EAIZ,OAGA,SAAsBlH,EAAOmb,EAAU5T,GAErC,IAGIR,EAGA+d,EAGAmE,EAGAC,EAGAhb,EAfE+Z,EAAS,GA6Bf,IAZAjoB,EAAQgc,EAAShc,EAAM6D,SAASsX,GAChC8N,EAAgB,EAChBjN,EAAS,GAEL9U,IAC0B,QAAxBlH,EAAM2D,WAAW,IACnBslB,IAGF/hB,OAAQvG,GAGHsoB,EAAgBjpB,EAAMjC,QAAQ,CAOnC,GANAgrB,GAAOI,UAAYF,EAEnBC,GADAniB,EAAQgiB,GAAO5gB,KAAKnI,UAEOW,IAAhBoG,EAAM6K,MAAsB7K,EAAM6K,MAAQ5R,EAAMjC,OAC3DmQ,EAAOlO,EAAM2D,WAAWulB,IAEnBniB,EAAO,CACViV,EAAShc,EAAMoI,MAAM6gB,GACrB,KACF,CAEA,GAAa,KAAT/a,GAAe+a,IAAkBC,GAAeF,EAClDf,EAAOrmB,MAAM,GACbonB,OAAmBroB,OAYnB,OAVIqoB,IACFf,EAAOrmB,MAAM,GACbonB,OAAmBroB,GAGjBsoB,EAAgBC,IAClBjB,EAAOrmB,KAAK5B,EAAMoI,MAAM6gB,EAAeC,IACvCtiB,GAAUsiB,EAAcD,GAGlB/a,GACN,KAAK,EACH+Z,EAAOrmB,KAAK,OACZgF,IACA,MAGF,KAAK,EAIH,IAHAke,EAA+B,EAAxBvR,KAAKmD,KAAK9P,EAAS,GAC1BqhB,EAAOrmB,MAAM,GAENgF,IAAWke,GAAMmD,EAAOrmB,MAAM,GAErC,MAGF,KAAK,GACHqmB,EAAOrmB,MAAM,GACbgF,EAAS,EACT,MAGF,QACEoiB,GAAmB,EACnBpiB,EAAS,EAKfqiB,EAAgBC,EAAc,CAChC,CAQA,OANI3hB,IACEyhB,GAAkBf,EAAOrmB,MAAM,GAC/Boa,GAAQiM,EAAOrmB,KAAKoa,GACxBiM,EAAOrmB,KAAK,OAGPqmB,CACT,CACF,CCPwCklC,GAAantD,EAAOmb,GAAU,KAGpE,EAghCF,SAASpJ,GAAUq7C,EAAU37C,GAG3B,IAFA,IAAIG,GAAS,IAEJA,EAAQH,EAAW1T,QAAQ,CAClC,IAAMiC,EAAQyR,EAAWG,GAErBnV,MAAMC,QAAQsD,GAChB+R,GAAUq7C,EAAUptD,GAEpBiS,GAAUm7C,EAAUptD,EAExB,CAEA,OAAOotD,CACT,CAOA,SAASn7C,GAAUm7C,EAAUn7C,GAE3B,IAAIpN,EAEJ,IAAKA,KAAOoN,EACV,GAAIyI,GAAIhW,KAAKuN,EAAWpN,GAAM,CAC5B,IAAMyQ,EAAe,mBAARzQ,GAAoC,eAARA,EAInC+S,GAHQ8C,GAAIhW,KAAK0oD,EAAUvoD,GAAOuoD,EAASvoD,QAAOlE,KAGjCysD,EAASvoD,GAAOyQ,EAAO,GAAK,CAAC,GAC9CuC,EAAQ5F,EAAUpN,GAEpBgT,IACEvC,EAEF83C,EAASvoD,GAAO,GAAH,eAAO+S,IAAI,OAAKC,IAE7B/X,OAAOyR,OAAOqG,EAAMC,GAG1B,CAEJ,CAGA,SAASi1C,GAAel1C,EAAMC,GAC5B,MAAID,EACI,IAAIzW,MACR,iBACEyW,EAAKlW,KACL,MACAof,EAAkB,CAChB5Z,MAAO0Q,EAAK1Q,MACZK,IAAKqQ,EAAKrQ,MAEZ,0BACAsQ,EAAMnW,KACN,MACAof,EAAkB,CAChB5Z,MAAO2Q,EAAM3Q,MACbK,IAAKsQ,EAAMtQ,MAEb,aAGE,IAAIpG,MACR,oCACE0W,EAAMnW,KACN,MACAof,EAAkB,CAChB5Z,MAAO2Q,EAAM3Q,MACbK,IAAKsQ,EAAMtQ,MAEb,kBAGR,CGxtCA,OCMe,SAAqBpC,GAAS,WAkB3CrF,OAAOyR,OAAOjU,KAAM,CAAC+4B,OAhBN,SAACC,GAEd,IAAMtf,EAAmC,EAAKxF,KAAK,YAEnD,OAAO+kB,GACLD,EACAx2B,OAAOyR,OAAO,CAAC,EAAGyF,EAAU7R,EAAS,CAInCsM,WAAY,EAAKD,KAAK,wBAA0B,GAChD2O,gBAAiB,EAAK3O,KAAK,2BAA6B,KAG9D,GAGF,ECZW7C,GAST,SAAUjN,EAAM6I,EAAOvK,GAErB,IAAIoH,EAAO,CAAC1F,KAAMZ,OAAOY,IAiBzB,YAdaf,IAAVX,GAAiC,OAAVA,GACN,kBAAVuK,IAAsB9N,MAAMC,QAAQ6N,GAI5CzK,OAAOyR,OAAOnK,EAAMmD,GAFpBvK,EAAQuK,EAKN9N,MAAMC,QAAQsD,GAChBoH,EAAKmF,SAAWvM,OACGW,IAAVX,GAAiC,OAAVA,IAChCoH,EAAKpH,MAAQc,OAAOd,IAGfoH,CACT,uBCrCF,IAAMsT,GAAM,CAAC,EAAErW,eA0Cf,SAASgpD,GAAMrtD,GACb,OAAOc,OAAOd,GAAS,IAAI8Z,aAC7B,CC1CA,IAAMY,GAAM,CAAC,EAAErW,eAOf,SAASsT,GAAQ1I,EAAG7H,GAClB,IAAMoK,EAAOpK,EAAKoK,MAAQ,CAAC,EAE3B,MACE,UAAWpK,KAETsT,GAAIhW,KAAK8M,EAAM,UACfkJ,GAAIhW,KAAK8M,EAAM,gBACfkJ,GAAIhW,KAAK8M,EAAM,cAGVvC,EAAEq+C,QAAQlmD,EAAMuH,GAAE,OAAQvH,EAAKpH,QAGjCiP,EAAE7H,EAAM,MAAO4S,GAAI/K,EAAG7H,GAC/B,CAMO,SAAS8R,GAAIjK,EAAG7H,EAAMyO,GAC3B,IAEI4E,EAFE/Y,EAAO0F,GAAQA,EAAK1F,KAK1B,IAAKA,EACH,MAAM,IAAIP,MAAM,uBAAyBiG,EAAO,KAWlD,OAAsB,oBAPpBqT,EADEC,GAAIhW,KAAKuK,EAAEiI,SAAUxV,GAClBuN,EAAEiI,SAASxV,GACPuN,EAAEs+C,aAAet+C,EAAEs+C,YAAY7jD,SAAShI,GAC5C8rD,GAEAv+C,EAAEw+C,gBAG0BhzC,EAAK9C,IAAS1I,EAAG7H,EAAMyO,EAC5D,CAMA,SAAS23C,GAAWv+C,EAAG7H,GAErB,MAAO,aAAcA,GAAO,kBAAIA,GAAI,IAAEmF,SAAUyN,GAAI/K,EAAG7H,KAASA,CAClE,CAMO,SAAS4S,GAAI/K,EAAG4G,GAErB,IAAMoE,EAAS,GAEf,GAAI,aAAcpE,EAIhB,IAHA,IAAMysB,EAAQzsB,EAAOtJ,SACjBqF,GAAS,IAEJA,EAAQ0wB,EAAMvkC,QAAQ,CAC7B,IAAMyC,EAAS0Y,GAAIjK,EAAGqzB,EAAM1wB,GAAQiE,GAEpC,GAAIrV,EAAQ,CACV,GAAIoR,GAAmC,UAA1B0wB,EAAM1wB,EAAQ,GAAGlQ,OACvBjF,MAAMC,QAAQ8D,IAA2B,SAAhBA,EAAOkB,OACnClB,EAAOR,MAAQQ,EAAOR,MAAMwG,QAAQ,OAAQ,MAGzC/J,MAAMC,QAAQ8D,IAA2B,YAAhBA,EAAOkB,MAAoB,CACvD,IAAMqhC,EAAOviC,EAAO+L,SAAS,GAEzBw2B,GAAsB,SAAdA,EAAKrhC,OACfqhC,EAAK/iC,MAAQ+iC,EAAK/iC,MAAMwG,QAAQ,OAAQ,IAE5C,CAGE/J,MAAMC,QAAQ8D,GAChByZ,EAAOrY,KAAI,MAAXqY,GAAM,OAASzZ,IAEfyZ,EAAOrY,KAAKpB,EAEhB,CACF,CAGF,OAAOyZ,CACT,CClDO,SAASyzC,GAAa1tD,GAO3B,IALA,IAAMQ,EAAS,GACXoR,GAAS,EACT1K,EAAQ,EACRymD,EAAO,IAEF/7C,EAAQ5R,EAAMjC,QAAQ,CAC7B,IAAMmQ,EAAOlO,EAAM2D,WAAWiO,GAG1BpL,EAAU,GAEd,GACW,KAAT0H,IACA4U,EAAAA,EAAAA,IAAkB9iB,EAAM2D,WAAWiO,EAAQ,MAC3CkR,EAAAA,EAAAA,IAAkB9iB,EAAM2D,WAAWiO,EAAQ,IAE3C+7C,EAAO,OAEJ,GAAIz/C,EAAO,IACT,oBAAoB1R,KAAKsE,OAAOC,aAAamN,MAChD1H,EAAU1F,OAAOC,aAAamN,SAG7B,GAAIA,EAAO,OAASA,EAAO,MAAO,CACrC,IAAM4W,EAAO9kB,EAAM2D,WAAWiO,EAAQ,GAElC1D,EAAO,OAAS4W,EAAO,OAASA,EAAO,OACzCte,EAAU1F,OAAOC,aAAamN,EAAM4W,GACpC6oC,EAAO,GAGPnnD,EAAU,QAEd,MAEEA,EAAU1F,OAAOC,aAAamN,GAG5B1H,IACFhG,EAAOoB,KAAK5B,EAAMoI,MAAMlB,EAAO0K,GAAQg8C,mBAAmBpnD,IAC1DU,EAAQ0K,EAAQ+7C,EAAO,EACvBnnD,EAAU,IAGRmnD,IACF/7C,GAAS+7C,EACTA,EAAO,EAEX,CAEA,OAAOntD,EAAOyC,KAAK,IAAMjD,EAAMoI,MAAMlB,EACvC,CChGO,SAASsvB,GAAK8L,EAAOurB,GAE1B,IAAMrtD,EAAS,GACXoR,GAAS,EAMb,IAJIi8C,GACFrtD,EAAOoB,KAAK+M,GAAE,OAAQ,SAGfiD,EAAQ0wB,EAAMvkC,QACjB6T,GAAOpR,EAAOoB,KAAK+M,GAAE,OAAQ,OACjCnO,EAAOoB,KAAK0gC,EAAM1wB,IAOpB,OAJIi8C,GAASvrB,EAAMvkC,OAAS,GAC1ByC,EAAOoB,KAAK+M,GAAE,OAAQ,OAGjBnO,CACT,CCrBO,SAASstD,GAAkB7+C,EAAG7H,GACnC,IAII2mD,EAJE1rD,EAAKvB,OAAOsG,EAAK4Q,YACjBg2C,EAASN,GAAarrD,EAAG4f,eACzBrQ,EAAQ3C,EAAEg/C,cAAc3kD,QAAQjH,IAIvB,IAAXuP,GACF3C,EAAEg/C,cAAcrsD,KAAKS,GACrB4M,EAAEi/C,eAAe7rD,GAAM,EACvB0rD,EAAU9+C,EAAEg/C,cAAclwD,SAE1BkR,EAAEi/C,eAAe7rD,KACjB0rD,EAAUn8C,EAAQ,GAGpB,IAAMu8C,EAAel/C,EAAEi/C,eAAe7rD,GAEtC,OAAO4M,EAAE7H,EAAM,MAAO,CACpB6H,EACE7H,EAAKH,SACL,IACA,CACEulC,KAAM,IAAMv9B,EAAEm/C,cAAgB,MAAQJ,EACtC3rD,GACE4M,EAAEm/C,cACF,SACAJ,GACCG,EAAe,EAAI,IAAMA,EAAe,IAC3CE,iBAAiB,EACjBrnB,gBAAiB,kBAEnB,CAACr4B,GAAE,OAAQ7N,OAAOitD,OAGxB,CC9BO,SAASO,GAAOr/C,EAAG7H,GACxB,IAAMmnD,EAAUnnD,EAAKwN,cACjBxB,EAAS,IAQb,GANgB,cAAZm7C,EACFn7C,GAAU,KACW,SAAZm7C,IACTn7C,GAAU,KAAOhM,EAAK2Q,OAAS3Q,EAAK4Q,YAAc,KAGlC,mBAAd5Q,EAAK1F,KACP,OAAOiN,GAAE,OAAQ,KAAOvH,EAAKyN,IAAMzB,GAGrC,IAAMgmB,EAAWpf,GAAI/K,EAAG7H,GAClB27B,EAAO3J,EAAS,GAElB2J,GAAsB,SAAdA,EAAKrhC,KACfqhC,EAAK/iC,MAAQ,IAAM+iC,EAAK/iC,MAExBo5B,EAAStG,QAAQnkB,GAAE,OAAQ,MAG7B,IAAMwT,EAAOiX,EAASA,EAASr7B,OAAS,GAQxC,OANIokB,GAAsB,SAAdA,EAAKzgB,KACfygB,EAAKniB,OAASoT,EAEdgmB,EAASx3B,KAAK+M,GAAE,OAAQyE,IAGnBgmB,CACT,CC4DA,SAASo1B,GAAcpnD,GACrB,IAAMqP,EAASrP,EAAKqP,OAEpB,YAAkB9V,IAAX8V,GAAmC,OAAXA,EAC3BrP,EAAKmF,SAASxO,OAAS,EACvB0Y,CACN,CCtEA,SAASg4C,GAASzuD,EAAOkH,EAAOK,GAC9B,IAAI0tB,EAAa,EACbE,EAAWn1B,EAAMjC,OAErB,GAAImJ,EAGF,IAFA,IAAIgH,EAAOlO,EAAM0uD,YAAYz5B,GAlDrB,IAoDD/mB,GAnDG,KAmDaA,GACrB+mB,IACA/mB,EAAOlO,EAAM0uD,YAAYz5B,GAI7B,GAAI1tB,EAGF,IAFA,IAAI2G,EAAOlO,EAAM0uD,YAAYv5B,EAAW,GA3DhC,IA6DDjnB,GA5DG,KA4DaA,GACrBinB,IACAjnB,EAAOlO,EAAM0uD,YAAYv5B,EAAW,GAIxC,OAAOA,EAAWF,EAAaj1B,EAAMoI,MAAM6sB,EAAYE,GAAY,EACrE,CC7CO,IAAMje,GAAW,CACtBnC,WCZK,SAAoB9F,EAAG7H,GAC5B,OAAO6H,EAAE7H,EAAM,aAAcovB,GAAKxc,GAAI/K,EAAG7H,IAAO,GAClD,EDWEunD,MEXK,SAAmB1/C,EAAG7H,GAC3B,MAAO,CAAC6H,EAAE7H,EAAM,MAAOuH,GAAE,OAAQ,MACnC,EFUET,KGdK,SAAce,EAAG7H,GACtB,IAAMpH,EAAQoH,EAAKpH,MAAQoH,EAAKpH,MAAQ,KAAO,GAGzC0T,EAAOtM,EAAKsM,MAAQtM,EAAKsM,KAAK3M,MAAM,uBAEpCwD,EAAQ,CAAC,EAEXmJ,IACFnJ,EAAM6D,UAAY,CAAC,YAAcsF,IAGnC,IAAMxF,EAAOe,EAAE7H,EAAM,OAAQmD,EAAO,CAACoE,GAAE,OAAQ3O,KAM/C,OAJIoH,EAAKoC,OACP0E,EAAKsD,KAAO,CAAChI,KAAMpC,EAAKoC,OAGnByF,EAAE7H,EAAKH,SAAU,MAAO,CAACiH,GAClC,EHJE0gD,OIhBK,SAAuB3/C,EAAG7H,GAC/B,OAAO6H,EAAE7H,EAAM,MAAO4S,GAAI/K,EAAG7H,GAC/B,EJeE4M,SKjBK,SAAkB/E,EAAG7H,GAC1B,OAAO6H,EAAE7H,EAAM,KAAM4S,GAAI/K,EAAG7H,GAC9B,ELgBE0mD,kBAAAA,GACAe,SMZK,SAAkB5/C,EAAG7H,GAI1B,IAHA,IAAM0nD,EAAe7/C,EAAE6/C,aACnBC,EAAK,EAEFA,KAAMD,GAAcC,IAE3B,IAAM/2C,EAAalX,OAAOiuD,GAS1B,OAPAD,EAAa92C,GAAc,CACzBtW,KAAM,qBACNsW,WAAAA,EACAzL,SAAU,CAAC,CAAC7K,KAAM,YAAa6K,SAAUnF,EAAKmF,WAC9CtF,SAAUG,EAAKH,UAGV6mD,GAAkB7+C,EAAG,CAC1BvN,KAAM,oBACNsW,WAAAA,EACA/Q,SAAUG,EAAKH,UAEnB,ENPEiO,QOpBK,SAAiBjG,EAAG7H,GACzB,OAAO6H,EAAE7H,EAAM,IAAMA,EAAKkN,MAAO0F,GAAI/K,EAAG7H,GAC1C,EPmBEqN,KQnBK,SAAcxF,EAAG7H,GACtB,OAAO6H,EAAE+/C,UAAY//C,EAAEq+C,QAAQlmD,EAAMuH,GAAE,MAAOvH,EAAKpH,QAAU,IAC/D,ERkBE0U,eSpBK,SAAwBzF,EAAG7H,GAChC,IAAMklD,EAAMr9C,EAAE+F,WAAW5N,EAAK4Q,YAE9B,IAAKs0C,EACH,OAAOgC,GAAOr/C,EAAG7H,GAInB,IAAMmD,EAAQ,CAAC7E,IAAKgoD,GAAapB,EAAIpjD,KAAO,IAAK2L,IAAKzN,EAAKyN,KAM3D,OAJkB,OAAdy3C,EAAIv4C,YAAgCpT,IAAd2rD,EAAIv4C,QAC5BxJ,EAAMwJ,MAAQu4C,EAAIv4C,OAGb9E,EAAE7H,EAAM,MAAOmD,EACxB,ETMEuK,MUtBK,SAAe7F,EAAG7H,GAEvB,IAAMmD,EAAQ,CAAC7E,IAAKgoD,GAAatmD,EAAK8B,KAAM2L,IAAKzN,EAAKyN,KAMtD,OAJmB,OAAfzN,EAAK2M,YAAiCpT,IAAfyG,EAAK2M,QAC9BxJ,EAAMwJ,MAAQ3M,EAAK2M,OAGd9E,EAAE7H,EAAM,MAAOmD,EACxB,EVcE4K,WWxBK,SAAoBlG,EAAG7H,GAC5B,OAAO6H,EAAE7H,EAAM,OAAQ,CAACuH,GAAE,OAAQvH,EAAKpH,MAAMwG,QAAQ,YAAa,OACpE,EXuBE6O,cYtBK,SAAuBpG,EAAG7H,GAC/B,IAAMklD,EAAMr9C,EAAE+F,WAAW5N,EAAK4Q,YAE9B,IAAKs0C,EACH,OAAOgC,GAAOr/C,EAAG7H,GAInB,IAAMmD,EAAQ,CAACiiC,KAAMkhB,GAAapB,EAAIpjD,KAAO,KAM7C,OAJkB,OAAdojD,EAAIv4C,YAAgCpT,IAAd2rD,EAAIv4C,QAC5BxJ,EAAMwJ,MAAQu4C,EAAIv4C,OAGb9E,EAAE7H,EAAM,IAAKmD,EAAOyP,GAAI/K,EAAG7H,GACpC,EZQEgO,KaxBK,SAAcnG,EAAG7H,GAEtB,IAAMmD,EAAQ,CAACiiC,KAAMkhB,GAAatmD,EAAK8B,MAMvC,OAJmB,OAAf9B,EAAK2M,YAAiCpT,IAAfyG,EAAK2M,QAC9BxJ,EAAMwJ,MAAQ3M,EAAK2M,OAGd9E,EAAE7H,EAAM,IAAKmD,EAAOyP,GAAI/K,EAAG7H,GACpC,EbgBEmO,SFrBK,SAAkBtG,EAAG7H,EAAMyO,GAChC,IASML,EATAhV,EAASwZ,GAAI/K,EAAG7H,GAChBymD,EAAQh4C,EA0EhB,SAAmBzO,GACjB,IAAIymD,EAAQzmD,EAAKqP,OACXlK,EAAWnF,EAAKmF,SAClBqF,GAAS,EAEb,MAAQi8C,KAAWj8C,EAAQrF,EAASxO,QAClC8vD,EAAQW,GAAcjiD,EAASqF,IAGjC,OAAOpD,QAAQq/C,EACjB,CApFyBoB,CAAUp5C,GAAU24C,GAAcpnD,GAEnDmD,EAAQ,CAAC,EAET2kD,EAAU,GAEY,mBAAjB9nD,EAAKkb,UAKZ9hB,EAAO,IACY,YAAnBA,EAAO,GAAGkB,MACY,MAAtBlB,EAAO,GAAG0B,QAEVsT,EAAYhV,EAAO,IAEnBgV,EAAYvG,EAAE,KAAM,IAAK,IACzBzO,EAAOsyB,QAAQtd,IAGbA,EAAUjJ,SAASxO,OAAS,GAC9ByX,EAAUjJ,SAASumB,QAAQnkB,GAAE,OAAQ,MAGvC6G,EAAUjJ,SAASumB,QACjB7jB,EAAE,KAAM,QAAS,CACfvN,KAAM,WACN4gB,QAASlb,EAAKkb,QACdmpB,UAAU,KAMdlhC,EAAM6D,UAAY,CAAC,mBAKrB,IAFA,IAAIwD,GAAS,IAEJA,EAAQpR,EAAOzC,QAAQ,CAC9B,IAAM2a,EAAQlY,EAAOoR,IAInBi8C,GACU,IAAVj8C,GACe,YAAf8G,EAAMhX,MACY,MAAlBgX,EAAMxW,UAENgtD,EAAQttD,KAAK+M,GAAE,OAAQ,OAGN,YAAf+J,EAAMhX,MAAwC,MAAlBgX,EAAMxW,SAAoB2rD,EAGxDqB,EAAQttD,KAAK8W,GAFbw2C,EAAQttD,KAAI,MAAZstD,GAAO,OAASx2C,EAAMnM,UAI1B,CAEA,IAAM4V,EAAO3hB,EAAOA,EAAOzC,OAAS,GAOpC,OAJIokB,IAAS0rC,GAAW,YAAa1rC,GAA0B,MAAjBA,EAAKjgB,SACjDgtD,EAAQttD,KAAK+M,GAAE,OAAQ,OAGlBM,EAAE7H,EAAM,KAAMmD,EAAO2kD,EAC9B,EEhDE55C,KcxBK,SAAcrG,EAAG7H,GAEtB,IAAMmD,EAAQ,CAAC,EACThI,EAAO6E,EAAKmP,QAAU,KAAO,KAC7Bmc,EAAQ1Y,GAAI/K,EAAG7H,GACjBwK,GAAS,EAOb,IAL0B,kBAAfxK,EAAKF,OAAqC,IAAfE,EAAKF,QACzCqD,EAAMrD,MAAQE,EAAKF,SAIZ0K,EAAQ8gB,EAAM30B,QAAQ,CAC7B,IAAMytD,EAAO94B,EAAM9gB,GAEnB,GACgB,YAAd45C,EAAK9pD,MACY,OAAjB8pD,EAAKtpD,SACLspD,EAAKhrB,YACL/jC,MAAMC,QAAQ8uD,EAAKhrB,WAAWpyB,YAC9Bo9C,EAAKhrB,WAAWpyB,UAAU1E,SAAS,kBACnC,CACAa,EAAM6D,UAAY,CAAC,sBACnB,KACF,CACF,CAEA,OAAOa,EAAE7H,EAAM7E,EAAMgI,EAAOisB,GAAK9D,GAAO,GAC1C,EdHEld,Ue7BK,SAAmBvG,EAAG7H,GAC3B,OAAO6H,EAAE7H,EAAM,IAAK4S,GAAI/K,EAAG7H,GAC7B,Ef4BEqO,KgB5BK,SAAcxG,EAAG7H,GAEtB,OAAO6H,EAAEq+C,QAAQlmD,EAAMuH,GAAE,OAAQ6nB,GAAKxc,GAAI/K,EAAG7H,KAC/C,EhB0BEsO,OiB/BK,SAAgBzG,EAAG7H,GACxB,OAAO6H,EAAE7H,EAAM,SAAU4S,GAAI/K,EAAG7H,GAClC,EjB8BE+nD,MkB5BK,SAAelgD,EAAG7H,GAOvB,IANA,IAAMitC,EAAOjtC,EAAKmF,SACdqF,GAAS,EACP4jC,EAAQpuC,EAAKouC,OAAS,GAEtBh1C,EAAS,KAENoR,EAAQyiC,EAAKt2C,QAAQ,CAQ5B,IAPA,IAAMqxD,EAAM/a,EAAKziC,GAAOrF,SAClBhK,EAAiB,IAAVqP,EAAc,KAAO,KAE5By9C,EAAM,GACRC,GAAa,EACXvxD,EAASqJ,EAAKouC,MAAQA,EAAMz3C,OAASqxD,EAAIrxD,SAEtCuxD,EAAYvxD,GAAQ,CAC3B,IAAMwxD,EAAOH,EAAIE,GACjBD,EAAIztD,KACFqN,EAAEsgD,EAAMhtD,EAAM,CAACizC,MAAOA,EAAM8Z,IAAaC,EAAOv1C,GAAI/K,EAAGsgD,GAAQ,IAEnE,CAEA/uD,EAAOoR,GAAS3C,EAAEolC,EAAKziC,GAAQ,KAAM4kB,GAAK64B,GAAK,GACjD,CAEA,OAAOpgD,EACL7H,EACA,QACAovB,GACE,CAACvnB,EAAEzO,EAAO,GAAGyG,SAAU,QAASuvB,GAAK,CAACh2B,EAAO,KAAK,KAAQ0R,OACxD1R,EAAO,GACHyO,EACE,CACE/H,OAAOsoD,EAAAA,GAAAA,IAAWhvD,EAAO,IACzB+G,KAAKkoD,EAAAA,GAAAA,IAASjvD,EAAOA,EAAOzC,OAAS,KAEvC,QACAy4B,GAAKh2B,EAAO4H,MAAM,IAAI,IAExB,KAEN,GAGN,ElBfE8E,KmBhCK,SAAc+B,EAAG7H,GACtB,OAAO6H,EAAEq+C,QAAQlmD,EAAMuH,GAAE,OpBDpB,SAAmB3O,GAQxB,IAPA,IAAMwH,EAAS1G,OAAOd,GAChB+oB,EAAS,YACXhiB,EAAQgiB,EAAO5gB,KAAKX,GACpBkoD,EAAO,EAEL5oD,EAAQ,GAEPC,GACLD,EAAMlF,KACJ6sD,GAASjnD,EAAOY,MAAMsnD,EAAM3oD,EAAM6K,OAAQ89C,EAAO,GAAG,GACpD3oD,EAAM,IAGR2oD,EAAO3oD,EAAM6K,MAAQ7K,EAAM,GAAGhJ,OAC9BgJ,EAAQgiB,EAAO5gB,KAAKX,GAKtB,OAFAV,EAAMlF,KAAK6sD,GAASjnD,EAAOY,MAAMsnD,GAAOA,EAAO,GAAG,IAE3C5oD,EAAM7D,KAAK,GACpB,CoBpBmC0sD,CAAU7uD,OAAOsG,EAAKpH,SACzD,EnB+BE2V,coBlCK,SAAuB1G,EAAG7H,GAC/B,OAAO6H,EAAE7H,EAAM,KACjB,EpBiCEwoD,KAAMC,GACNC,KAAMD,GACN76C,WAAY66C,GACZE,mBAAoBF,IAItB,SAASA,KACP,OAAO,IACT,CqBsFA,IAAMn1C,GAAM,CAAC,EAAErW,eAYf,SAAS2rD,GAAQ3+C,EAAMlM,GACrB,IAAM6R,EAAW7R,GAAW,CAAC,EACvB6pD,EAAYh4C,EAASi5C,qBAAsB,EAE3CnB,EAAe,CAAC,EAmCtB,OAjCA7/C,EAAE+/C,UAAYA,EACd//C,EAAEm/C,mBAC2BztD,IAA3BqW,EAASo3C,eAA0D,OAA3Bp3C,EAASo3C,cAC7C,gBACAp3C,EAASo3C,cACfn/C,EAAEihD,cAAgBl5C,EAASk5C,eAAiB,YAC5CjhD,EAAEkhD,qBAAuBn5C,EAASm5C,sBAAwB,KAC1DlhD,EAAEmhD,wBAA0Bp5C,EAASo5C,yBAA2B,CAC9DhiD,UAAW,CAAC,YAEda,EAAEohD,kBAAoBr5C,EAASq5C,mBAAqB,kBACpDphD,EAAE+F,W7B1JG,SAAqB5N,GAE1B,IAAM+0B,EAAQr8B,OAAO6hB,OAAO,MAE5B,IAAKva,IAASA,EAAK1F,KACjB,MAAM,IAAIP,MAAM,wCAUlB,OAPAmvD,EAAAA,GAAAA,IAAMlpD,EAAM,cAAc,SAAC4N,GACzB,IAAM3S,EAAKgrD,GAAMr4C,EAAWgD,YACxB3V,IAAOqY,GAAIhW,KAAKy3B,EAAO95B,KACzB85B,EAAM95B,GAAM2S,EAEhB,IAUA,SAAoBgD,GAClB,IAAM3V,EAAKgrD,GAAMr1C,GACjB,OAAO3V,GAAMqY,GAAIhW,KAAKy3B,EAAO95B,GAAM85B,EAAM95B,GAAM,IACjD,CACF,C6B+HiByiC,CAAYzzB,GAC3BpC,EAAE6/C,aAAeA,EAEjB7/C,EAAEg/C,cAAgB,GAElBh/C,EAAEi/C,eAAiB,CAAC,EACpBj/C,EAAEq+C,QAAUA,EACZr+C,EAAEiI,UAAW,kBAAIA,IAAaF,EAASE,UACvCjI,EAAEw+C,eAAiBz2C,EAASy2C,eAC5Bx+C,EAAEs+C,YAAcv2C,EAASu2C,aAEzB+C,EAAAA,GAAAA,IAAMj/C,EAAM,sBAAsB,SAAC2D,GACjC,IAAM3S,EAAKvB,OAAOkU,EAAWgD,YAAY8B,cAIpCY,GAAIhW,KAAKoqD,EAAczsD,KAC1BysD,EAAazsD,GAAM2S,EAEvB,IAGO/F,EASP,SAASq+C,EAAQ11C,EAAMC,GAErB,GAAID,GAAQ,SAAUA,GAAQA,EAAKpG,KAAM,CAEvC,IAAMA,EAAOoG,EAAKpG,KAEdA,EAAK++C,QACY,YAAf14C,EAAMnW,OACRmW,EAAQ,CACNnW,KAAM,UACNQ,QAAS,GACTs+B,WAAY,CAAC,EACbj0B,SAAU,KAIdsL,EAAM3V,QAAUsP,EAAK++C,OAGJ,YAAf14C,EAAMnW,MAAsB8P,EAAKg/C,cACnC34C,EAAM2oB,YAAa,kBAAI3oB,EAAM2oB,YAAehvB,EAAKg/C,cAG/C,aAAc34C,GAASA,EAAMtL,UAAYiF,EAAKi/C,YAChD54C,EAAMtL,SAAWiF,EAAKi/C,UAE1B,CAEA,GAAI74C,EAAM,CACR,IAAMuhB,EAAM,SAAUvhB,EAAOA,EAAO,CAAC3Q,SAAU2Q,IClN3BxQ,EDoNL+xB,ICjNhB/xB,EAAKH,UACLG,EAAKH,SAASC,OACdE,EAAKH,SAASC,MAAMC,MACpBC,EAAKH,SAASC,MAAMN,QACpBQ,EAAKH,SAASM,KACdH,EAAKH,SAASM,IAAIJ,MAClBC,EAAKH,SAASM,IAAIX,SD6MfiR,EAAM5Q,SAAW,CAACC,OAAOsoD,EAAAA,GAAAA,IAAWr2B,GAAM5xB,KAAKkoD,EAAAA,GAAAA,IAASt2B,IAE5D,CCxNG,IAAmB/xB,ED0NtB,OAAOyQ,CACT,CAOA,SAAS5I,EAAE7H,EAAMlF,EAASqI,EAAOgC,GAO/B,OANI9P,MAAMC,QAAQ6N,KAChBgC,EAAWhC,EACXA,EAAQ,CAAC,GAIJ+iD,EAAQlmD,EAAM,CACnB1F,KAAM,UACNQ,QAAAA,EACAs+B,WAAYj2B,GAAS,CAAC,EACtBgC,SAAUA,GAAY,IAE1B,CACF,CASO,SAASmkD,GAAOr/C,EAAMlM,GAC3B,IAAM8J,EAAI+gD,GAAQ3+C,EAAMlM,GAClBiC,EAAO8R,GAAIjK,EAAGoC,EAAM,MACpBs/C,EEjQD,SAAgB1hD,GAKrB,IAJA,IAAI2C,GAAS,EAEPg/C,EAAY,KAETh/C,EAAQ3C,EAAEg/C,cAAclwD,QAAQ,CACvC,IAAMuuD,EAAMr9C,EAAE6/C,aAAa7/C,EAAEg/C,cAAcr8C,GAAOkI,eAElD,GAAKwyC,EAAL,CAWA,IAPA,IAAM7kD,EAAUuS,GAAI/K,EAAGq9C,GACjBjqD,EAAKvB,OAAOwrD,EAAIt0C,YAChBg2C,EAASN,GAAarrD,EAAG4f,eAC3B4uC,EAAiB,EAEfC,EAAiB,KAEdD,GAAkB5hD,EAAEi/C,eAAe7rD,IAAK,CAE/C,IAAM0uD,EAAgB,CACpBrvD,KAAM,UACNQ,QAAS,IACTs+B,WAAY,CACVgM,KACE,IACAv9B,EAAEm/C,cACF,SACAJ,GACC6C,EAAiB,EAAI,IAAMA,EAAiB,IAC/CG,qBAAqB,EACrB5iD,UAAW,CAAC,yBACZw5B,UAAW34B,EAAEohD,mBAEf9jD,SAAU,CAAC,CAAC7K,KAAM,OAAQ1B,MAAO,YAG/B6wD,EAAiB,GACnBE,EAAcxkD,SAAS3K,KAAK,CAC1BF,KAAM,UACNQ,QAAS,MACTqK,SAAU,CAAC,CAAC7K,KAAM,OAAQ1B,MAAOc,OAAO+vD,OAIxCC,EAAe/yD,OAAS,GAC1B+yD,EAAelvD,KAAK,CAACF,KAAM,OAAQ1B,MAAO,MAG5C8wD,EAAelvD,KAAKmvD,EACtB,CAEA,IAAM5uC,EAAO1a,EAAQA,EAAQ1J,OAAS,GAEtC,GAAIokB,GAAsB,YAAdA,EAAKzgB,MAAuC,MAAjBygB,EAAKjgB,QAAiB,OACrD+uD,EAAW9uC,EAAK5V,SAAS4V,EAAK5V,SAASxO,OAAS,GAClDkzD,GAA8B,SAAlBA,EAASvvD,KACvBuvD,EAASjxD,OAAS,IAElBmiB,EAAK5V,SAAS3K,KAAK,CAACF,KAAM,OAAQ1B,MAAO,OAG3C,EAAAmiB,EAAK5V,UAAS3K,KAAI,QAAIkvD,EACxB,MACErpD,EAAQ7F,KAAI,MAAZ6F,EAAgBqpD,GAIlB,IAAMv7C,EAAW,CACf7T,KAAM,UACNQ,QAAS,KACTs+B,WAAY,CAACn+B,GAAI4M,EAAEm/C,cAAgB,MAAQJ,GAC3CzhD,SAAUiqB,GAAK/uB,GAAS,IAGtB6kD,EAAIrlD,WACNsO,EAAStO,SAAWqlD,EAAIrlD,UAG1B2pD,EAAUhvD,KAAK2T,EAtEf,CAuEF,CAEA,OAAyB,IAArBq7C,EAAU7yD,OACL,KAGF,CACL2D,KAAM,UACNQ,QAAS,UACTs+B,WAAY,CAAC0wB,eAAe,EAAM9iD,UAAW,CAAC,cAC9C7B,SAAU,CACR,CACE7K,KAAM,UACNQ,QAAS+M,EAAEkhD,qBACX3vB,YAAY,kBACP/E,KAAKl8B,MAAMk8B,KAAK1gB,UAAU9L,EAAEmhD,2BAAyB,IACxD/tD,GAAI,mBAENkK,SAAU,CAACoC,GAAE,OAAQM,EAAEihD,iBAEzB,CAACxuD,KAAM,OAAQ1B,MAAO,MACtB,CACE0B,KAAM,UACNQ,QAAS,KACTs+B,WAAY,CAAC,EACbj0B,SAAUiqB,GAAKo6B,GAAW,IAE5B,CAAClvD,KAAM,OAAQ1B,MAAO,OAG5B,CFkJemxD,CAAOliD,GASpB,OAPI0hD,GAIFvpD,EAAKmF,SAAS3K,KAAK+M,GAAE,OAAQ,MAAOgiD,GAG/Bl0D,MAAMC,QAAQ0K,GAAQ,CAAC1F,KAAM,OAAQ6K,SAAUnF,GAAQA,CAChE,CGvPA,IAUA,GAPI,SAAUwxB,EAAazzB,GACrB,OAAOyzB,GAAe,QAASA,EAcrC,SAAgBA,EAAazzB,GAC3B,OAAO,SAACiC,EAAM6wB,EAAMnT,GAClB8T,EAAYN,IAAIo4B,GAAOtpD,EAAMjC,GAAU8yB,GAAM,SAACtwB,GAC5Cmd,EAAKnd,EACP,GACF,CACF,CAnBUypD,CAAOx4B,EAAazzB,GA2B9B,SAAgBA,GAEd,OAAO,SAACiC,GAAI,OAAKspD,GAAOtpD,EAAMjC,EAAQ,CACxC,CA7BUksD,CAAOz4B,GAAezzB,EAC5B,4BCnBW,SAASmsD,GAAansD,GACnC,GAAIA,EAAQosD,iBAAmBpsD,EAAQqsD,mBACrC,MAAM,IAAI9qD,UACR,4EAIJ,GACEvB,EAAQosD,iBACRpsD,EAAQqsD,oBACRrsD,EAAQssD,aAER,OAAO,SAACpgD,IACNi/C,EAAAA,GAAAA,IAAMj/C,EAAM,WAAW,SAACjK,EAAMwK,EAAO8/C,GACnC,IAEI/+B,EAFE9c,EAAsC67C,EAc5C,GAVIvsD,EAAQosD,gBACV5+B,GAAUxtB,EAAQosD,gBAAgB7nD,SAAStC,EAAKlF,SACvCiD,EAAQqsD,qBACjB7+B,EAASxtB,EAAQqsD,mBAAmB9nD,SAAStC,EAAKlF,WAG/CywB,GAAUxtB,EAAQssD,cAAiC,kBAAV7/C,IAC5C+gB,GAAUxtB,EAAQssD,aAAarqD,EAAMwK,EAAOiE,IAG1C8c,GAA2B,kBAAV/gB,EAAoB,CACQ,MAA/C,GAAIzM,EAAQwsD,kBAAoBvqD,EAAKmF,UACnC,EAAAsJ,EAAOtJ,UAASmV,OAAM,SAAC9P,EAAO,GAAC,eAAKxK,EAAKmF,iBAEzCsJ,EAAOtJ,SAASmV,OAAO9P,EAAO,GAGhC,OAAOA,CACT,CAGF,GACF,CAEJ,CCjEA,IAAMggD,GAAY,CAAC,OAAQ,QAAS,SAAU,wFC8GxCl3C,GAAM,CAAC,EAAErW,eAITwtD,GAAgB,IAAIxwB,IAAI,CAAC,QAAS,QAAS,QAAS,QAAS,OAM5D,SAASywB,GAAgB1/C,EAAShL,GAOvC,IALA,IAGIsR,EAHEnM,EAAW,GACbwlD,GAAc,IAITA,EAAa3qD,EAAKmF,SAASxO,QAGf,aAFnB2a,EAAQtR,EAAKmF,SAASwlD,IAEZrwD,KACR6K,EAAS3K,KAAKowD,GAAQ5/C,EAASsG,EAAOq5C,EAAY3qD,IAC1B,SAAfsR,EAAMhX,KASC,YAAd0F,EAAK1F,MACJmwD,GAAchwB,IAAIz6B,EAAKlF,WACvBoF,EAAAA,GAAAA,GAAWoR,IAEZnM,EAAS3K,KAAK8W,EAAM1Y,OAEE,QAAf0Y,EAAMhX,MAAmB0Q,EAAQjN,QAAQ8sD,UAElD1lD,EAAS3K,KAAK8W,EAAM1Y,OAIxB,OAAOuM,CACT,CAQA,SAASylD,GAAQ5/C,EAAShL,EAAMwK,EAAOiE,GACrC,IASIjN,EATEzD,EAAUiN,EAAQjN,QAClB+sD,EAAe9/C,EAAQmvB,OAGvBh/B,EAAO6E,EAAKlF,QAEZs+B,EAAa,CAAC,EAChBe,EAAS2wB,EASb,GAL2B,SAAvBA,EAAattB,OAA6B,QAATriC,IACnCg/B,EAASoX,GAAAA,GACTvmC,EAAQmvB,OAASA,GAGfn6B,EAAKo5B,WACP,IAAK53B,KAAYxB,EAAKo5B,WAChB9lB,GAAIhW,KAAK0C,EAAKo5B,WAAY53B,IAC5B+4B,GAAYnB,EAAY53B,EAAUxB,EAAKo5B,WAAW53B,GAAWwJ,GAKtD,OAAT7P,GAA0B,OAATA,GACnB6P,EAAQ+/C,YAGV,IAAM5lD,EAAWulD,GAAgB1/C,EAAShL,GAE7B,OAAT7E,GAA0B,OAATA,GACnB6P,EAAQ+/C,YAIV//C,EAAQmvB,OAAS2wB,EAIjB,IA4OuBhyD,EA5OjB+G,EAAWG,EAAKH,UAAY,CAChCC,MAAO,CAACC,KAAM,KAAMP,OAAQ,KAAMoa,OAAQ,MAC1CzZ,IAAK,CAACJ,KAAM,KAAMP,OAAQ,KAAMoa,OAAQ,OAEpCoxC,EACJjtD,EAAQktD,YAAc33C,GAAIhW,KAAKS,EAAQktD,WAAY9vD,GAC/C4C,EAAQktD,WAAW9vD,GACnBA,EACA+vD,EAA6B,kBAAdF,GAA0BA,IAAcG,EAAAA,SAE7D,IAAKC,GAAAA,mBAA2BJ,GAC9B,MAAM,IAAI1rD,UAAU,uBAAD,OACOnE,EAAI,uCA2DhC,GAvDAi+B,EAAW37B,IAAM,CACftC,EACA0E,EAASC,MAAMC,KACfF,EAASC,MAAMN,OACfgL,GACA3O,KAAK,KAEM,MAATV,GAAgB4C,EAAQstD,aAC1BjyB,EAAWt7B,OACqB,oBAAvBC,EAAQstD,WACXttD,EAAQstD,WACN3xD,OAAO0/B,EAAWgM,MAAQ,IAC1BplC,EAAKmF,SACuB,kBAArBi0B,EAAWzsB,MAAqBysB,EAAWzsB,MAAQ,MAE5D5O,EAAQstD,YAGH,MAATlwD,GAAgB4C,EAAQutD,mBAC1BlyB,EAAWgM,KAAOrnC,EAAQutD,iBACxB5xD,OAAO0/B,EAAWgM,MAAQ,IAC1BplC,EAAKmF,SACuB,kBAArBi0B,EAAWzsB,MAAqBysB,EAAWzsB,MAAQ,OAK3Du+C,GACQ,SAAT/vD,GACgB,YAAhBsT,EAAOnU,MACY,QAAnBmU,EAAO3T,UAEPs+B,EAAWmyB,QAAS,GAInBL,GACS,OAAT/vD,GACU,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,GACS,OAATA,IAEFi+B,EAAWoyB,MAAQ/5C,OAAO7X,SAASuB,EAAK9B,OAAO,GAAI,KAGxC,QAAT8B,GAAkB4C,EAAQ0tD,oBAC5BryB,EAAW96B,IAAMP,EAAQ0tD,kBACvB/xD,OAAO0/B,EAAW96B,KAAO,IACzB5E,OAAO0/B,EAAW3rB,KAAO,IACG,kBAArB2rB,EAAWzsB,MAAqBysB,EAAWzsB,MAAQ,QAIzDu+C,GAAkB,OAAT/vD,GAAiC,YAAhBsT,EAAOnU,KAAoB,CACxD,IAAM6X,EA0DV,SAAyBnS,GACvB,IAAIwK,GAAS,EAEb,OAASA,EAAQxK,EAAKmF,SAASxO,QAAQ,CACrC,IAAM2a,EAAQtR,EAAKmF,SAASqF,GAE5B,GAAmB,YAAf8G,EAAMhX,MAAwC,UAAlBgX,EAAMxW,QACpC,OAAOwW,CAEX,CAEA,OAAO,IACT,CAtEkBo6C,CAAgB1rD,GAC9Bo5B,EAAWle,QACT/I,GAASA,EAAMinB,WAAahyB,QAAQ+K,EAAMinB,WAAWle,SAAW,KAClEke,EAAW5uB,MAAQmhD,GAAuBl9C,EAAQzO,GAClDo5B,EAAWjqB,QAA6B,OAAnBV,EAAO3T,OAC9B,CA4CA,OA1CKowD,GAAmB,OAAT/vD,GAA0B,OAATA,IAC9Bi+B,EAAWjqB,QAAmB,OAAThU,EACrBi+B,EAAWlsB,MAAQlC,EAAQ+/C,WAGhB,OAAT5vD,GAA0B,OAATA,IACfi+B,EAAWgV,QACRhV,EAAW/5B,QAAO+5B,EAAW/5B,MAAQ,CAAC,GAE3C+5B,EAAW/5B,MAAMusD,UAAYxyB,EAAWgV,aACjChV,EAAWgV,OAGf8c,IACH9xB,EAAWyyB,SAAoB,OAAT1wD,IAIrB+vD,GAAkB,OAAT/vD,GAAiC,YAAhBsT,EAAOnU,OACpC8+B,EAAWyyB,SAAWzkD,QAA2B,UAAnBqH,EAAO3T,UAInCiD,EAAQ+tD,YACV1yB,EAAW,kBAsIN,EADgBtgC,EArI0B+G,GAuI3CC,MAAMC,KACV,IACAjH,EAAIgH,MAAMN,OACV,IACA1G,EAAIqH,IAAIJ,KACR,IACAjH,EAAIqH,IAAIX,QAEP1D,IAAIpC,QACJmC,KAAK,MA7IHqvD,GAASntD,EAAQguD,eACpB3yB,EAAW4yB,eAAiBhsD,EAAKH,WAI9BqrD,GAASntD,EAAQkuD,sBACpB7yB,EAAW5uB,MAAQmhD,GAAuBl9C,EAAQzO,GAClDo5B,EAAW8yB,aAAeP,GAAuBl9C,IAG9Cy8C,IACH9xB,EAAWp5B,KAAOA,GAIbmF,EAASxO,OAAS,EACrBw0D,EAAAA,cAAoBH,EAAW5xB,EAAYj0B,GAC3CgmD,EAAAA,cAAoBH,EAAW5xB,EACrC,CAyBA,SAASuyB,GAAuBl9C,EAAQzO,GAItC,IAHA,IAAIwK,GAAS,EACTC,EAAQ,IAEHD,EAAQiE,EAAOtJ,SAASxO,QAC3B8X,EAAOtJ,SAASqF,KAAWxK,GACK,YAAhCyO,EAAOtJ,SAASqF,GAAOlQ,MAAoBmQ,IAGjD,OAAOA,CACT,CAQA,SAAS8vB,GAAYp3B,EAAO9B,EAAMzI,EAAOm5B,GACvC,IAAM5N,GAAOyM,EAAAA,GAAAA,GAAKmB,EAAIoI,OAAQ94B,GAC1BjI,EAASR,EAIE,OAAXQ,QAA8BG,IAAXH,GAAwBA,IAAWA,IAMtD/D,MAAMC,QAAQ8D,KAChBA,EAAS+qB,EAAK0W,gBAAiBC,EAAAA,GAAAA,GAAO1hC,IAAUwhC,EAAAA,GAAAA,GAAOxhC,IAGnC,UAAlB+qB,EAAK3iB,UAA0C,kBAAXpI,IACtCA,EAkBJ,SAAoBR,GAElB,IAAMQ,EAAS,CAAC,EAEhB,IACEiG,GAAMzG,EAAOs8B,EAEb,CADA,SACA,CAGF,OAAO97B,EAMP,SAAS87B,EAAS/5B,EAAM8G,GACtB,IAAM6F,EAAyB,SAArB3M,EAAK6F,MAAM,EAAG,GAAgB,MAAH,OAAS7F,EAAK6F,MAAM,IAAO7F,EAChE/B,EAAO0O,EAAE1I,QAAQ,YAAa+sD,KAAkBlqD,CAClD,CACF,CAtCamqD,CAAWhzD,IAGlB+qB,EAAKqZ,OAASrZ,EAAK3iB,SACrB2B,EACEmQ,GAAIhW,KAAK6kD,GAAAA,EAAah+B,EAAK3iB,UACvB2gD,GAAAA,EAAYh+B,EAAK3iB,UACjB2iB,EAAK3iB,UACPpI,EACK+qB,EAAK2Y,YACd35B,EAAMghB,EAAK2Y,WAAa1jC,GAE5B,CAgCA,SAAS+yD,GAAcphD,EAAGmG,GACxB,OAAOA,EAAGwB,aACZ,CC3YA,IAAMY,GAAM,CAAC,EAAErW,eAKTovD,GAAa,CACjB57B,QAAS,CAAC8vB,GAAI,UAAWtlD,GAAI,mCAC7BqxD,UAAW,CAAC/L,GAAI,aAActlD,GAAI,kCAClCsxD,WAAY,CAACtxD,GAAI,wCACjB4tD,mBAAoB,CAAC5tD,GAAI,wCACzBuxD,WAAY,CAACvxD,GAAI,wCACjBmF,OAAQ,CAACmgD,GAAI,WAAYtlD,GAAI,6BAC7BwxD,UAAW,CACTlM,GAAI,eACJtlD,GAAI,sDAENyxD,aAAc,CACZnM,GAAI,kBACJtlD,GAAI,sDAEN0xD,gBAAiB,CACfpM,GAAI,qBACJtlD,GAAI,sDAEN2xD,iBAAkB,CAChBrM,GAAI,sBACJtlD,GAAI,mDAUD,SAAS4xD,GAAc9uD,GAC5B,IAAK,IAAMN,KAAO4uD,GAChB,GAAI/4C,GAAIhW,KAAK+uD,GAAY5uD,IAAQ6V,GAAIhW,KAAKS,EAASN,GAAM,CACvD,IAAMqvD,EAAcT,GAAW5uD,GAC/BsvD,QAAQC,KAAK,oCAAD,OAERF,EAAYvM,GAAK,QAAH,OAAYuM,EAAYvM,GAAE,gBAAkB,SAAQ,aAC9D9iD,EAAG,mBAzCf,oEAyCoC,YAAIqvD,EAAY7xD,GAAE,4BAE3CoxD,GAAW5uD,EACpB,CAGF,IAAM2yB,EAAY1c,IACfE,IAAIq5C,IACJr5C,IAAI7V,EAAQmvD,eAAiB,IAC7Bt5C,IAAIu5C,IAAc,kBACdpvD,EAAQqvD,qBAAmB,IAC9BvE,oBAAoB,KAErBj1C,IAAI7V,EAAQsvD,eAAiB,IAC7Bz5C,IAAIs2C,GAAcnsD,GAEf8yB,EAAO,IAAIgC,EAEe,kBAArB90B,EAAQoH,SACjB0rB,EAAKj4B,MAAQmF,EAAQoH,cACS5L,IAArBwE,EAAQoH,UAA+C,OAArBpH,EAAQoH,UACnD4nD,QAAQC,KAAK,uEAAD,OACgEjvD,EAAQoH,SAAQ,OAI9F,IAAMmoD,EAAWl9B,EAAUe,QAAQf,EAAUj4B,MAAM04B,GAAOA,GAE1D,GAAsB,SAAlBy8B,EAAShzD,KACX,MAAM,IAAIgF,UAAU,0BAItB,IAAIlG,EAAS+xD,EAAAA,cACXA,EAAAA,SACA,CAAC,EACDT,GAAgB,CAAC3sD,QAAAA,EAASo8B,OAAQ9sB,GAAAA,GAAM09C,UAAW,GAAIuC,IAOzD,OAJIvvD,EAAQiJ,YACV5N,EAAS+xD,EAAAA,cAAoB,MAAO,CAACnkD,UAAWjJ,EAAQiJ,WAAY5N,IAG/DA,CACT,CAEAyzD,GAAcU,aAAe,CAACjC,iBFxHvB,SAAwBkC,GAC7B,IAAM1rD,GAAO0rD,GAAO,IAAI/0D,OAClBg1D,EAAQ3rD,EAAIzI,OAAO,GAEzB,GAAc,MAAVo0D,GAA2B,MAAVA,EACnB,OAAO3rD,EAGT,IAAM4rD,EAAQ5rD,EAAII,QAAQ,KAC1B,IAAe,IAAXwrD,EACF,OAAO5rD,EAKT,IAFA,IAAI0I,GAAS,IAEJA,EAAQggD,GAAU7zD,QAAQ,CACjC,IAAMssD,EAAWuH,GAAUhgD,GAE3B,GACEkjD,IAAUzK,EAAStsD,QACnBmL,EAAId,MAAM,EAAGiiD,EAAStsD,QAAQkkB,gBAAkBooC,EAEhD,OAAOnhD,CAEX,CAGA,OAAe,KADf0I,EAAQ1I,EAAII,QAAQ,OACAwrD,EAAQljD,IAKb,KADfA,EAAQ1I,EAAII,QAAQ,OACAwrD,EAAQljD,EAJnB1I,EASF,oBACT,GEoFA+qD,GAAcc,UAAY,CAExBxoD,SAAUL,GAAAA,OAEVkC,UAAWlC,GAAAA,OAEXulD,aAAcvlD,GAAAA,KACdqlD,gBAAiBrlD,GAAAA,QAAkBA,GAAAA,QACnCslD,mBAAoBtlD,GAAAA,QAAkBA,GAAAA,QACtCylD,iBAAkBzlD,GAAAA,KAElBooD,cAAepoD,GAAAA,QACbA,GAAAA,UAAoB,CAClBA,GAAAA,OACAA,GAAAA,KACAA,GAAAA,QACEA,GAAAA,UAAoB,CAClBA,GAAAA,KACAA,GAAAA,OACAA,GAAAA,OACAA,GAAAA,KACAA,GAAAA,QAGEA,GAAAA,WAMVuoD,cAAevoD,GAAAA,QACbA,GAAAA,UAAoB,CAClBA,GAAAA,OACAA,GAAAA,KACAA,GAAAA,QACEA,GAAAA,UAAoB,CAClBA,GAAAA,KACAA,GAAAA,OACAA,GAAAA,OACAA,GAAAA,KACAA,GAAAA,QAGEA,GAAAA,WAOVgnD,UAAWhnD,GAAAA,KACXinD,aAAcjnD,GAAAA,KACd+lD,SAAU/lD,GAAAA,KACVmnD,oBAAqBnnD,GAAAA,KACrBwmD,iBAAkBxmD,GAAAA,UAAoB,CAACA,GAAAA,KAAgBA,GAAAA,OACvDumD,WAAYvmD,GAAAA,UAAoB,CAACA,GAAAA,KAAgBA,GAAAA,SACjD2mD,kBAAmB3mD,GAAAA,KACnBmmD,WAAYnmD,GAAAA,kGC9KD8oD,EAAY,WAEvB,IAFoF,IAA5DxjD,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkB,GAAII,EAAa,uCACvDnO,EAAImO,EACDnO,GAAK,GAAG,CAEb,IAAK+N,IADL/N,GACc,OACd,GAAK+N,EAAK/N,IAAM+N,EAAK/N,GAAGzD,OAA+D,KAArDwR,EAAK/N,GAAGzD,MAAiBwG,QAAQ,WAAY,KAAgC,SAAjBgL,EAAK/N,GAAG/B,KAAiB,CACrH,IAAK,WAAWlF,KAAKgV,EAAK/N,GAAGzD,QAAiD,YAA5BwR,EAAK/N,GAAG/B,KAA+B,OACzF,OAAO8P,EAAK/N,IAIlB,EAEawxD,EAAY,SAAZA,IAEX,IAFgK,IAAxIzjD,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAyC,GAAII,EAAa,uCAAE1P,EAAgB,uCAAEgzD,EAA0B,uCAC5HzxD,EAAImO,EACDnO,EAAI+N,EAAKzT,QAEd,GADA0F,IACIvB,EAAS,CACX,IAAMuJ,EAAU+F,EAAK/N,GACrB,GAAIgI,GAAWA,EAAQzL,OAA+D,KAArDyL,EAAQzL,MAAiBwG,QAAQ,WAAY,KAAcgL,EAAK/N,IAAmC,YAA5B+N,EAAK/N,GAAG/B,KAC9G,OAAO+J,EAAQvJ,UAAYA,EAAUuJ,OAAU9K,MAE5C,CACL,IAAM8K,EAAU+F,EAAK/N,GACrB,IAAKgI,GAA4B,YAAjBA,EAAQ/J,KAAoB,OAC5C,GAAqB,SAAjB+J,EAAQ/J,MAA6D,KAA1C+J,EAAQzL,MAAMwG,QAAQ,WAAY,IAAY,OAC7E,GAAI,oBAAoBhK,KAAY,OAAPiP,QAAO,IAAPA,OAAO,EAAPA,EAAS/J,MAAO,OASpC,EARP,IAAK,WAAWlF,MAAkB,QAAb,IAAQwD,aAAK,aAAb,EAAewG,QAAQ,sBAAuB,QAAS,IAC1E,OAEF,GAAI0uD,EAAkB,OACdC,EAAWF,EAAUzjD,EAAM/N,EAAG,MAAOyxD,GAC3C,GAAIC,EAAU,OAEd,OADA1pD,EAAQzL,MAAqB,QAAhB,EAAGyL,EAAQzL,aAAK,aAAb,EAAewG,QAAQ,YAAa,IAC7CiF,EAGP,OADAA,EAAQzL,MAAqB,QAAhB,EAAGyL,EAAQzL,aAAK,aAAb,EAAewG,QAAQ,YAAa,IAC7CiF,GAMjB,EAQa2pD,EAAmB,SAAH,GAA2C,QAArCp1D,MAC3Bq1D,SADgC,IAAG,KAAE,GACN7uD,QAAQ,gBAAiB,MAAMA,QAAQ,WAAY,IA3DrFO,MAAM,yBAA2B,IAAIoC,QACxC,SAACC,EAAoCC,GAAS,OAC3CD,EAAEC,EAAEjB,MAAM,EAAGiB,EAAEC,QAAQ,OAASD,EAAEjB,MAAMiB,EAAEC,QAAQ,KAAO,GAAKF,CAAC,GAElE,CAAC,GAmED,OAXAtJ,OAAOu5B,KAAKg8B,GAAOC,SAAQ,SAACC,GACH,SAAnBF,EAAME,KACRF,EAAME,IAAW,GAEI,UAAnBF,EAAME,KACRF,EAAME,IAAW,GAEW,kBAAnBF,EAAME,IAA0B,KAAK/4D,KAAK64D,EAAME,KAAwBzzB,OAAOuzB,EAAME,MAC9FF,EAAME,IAAYF,EAAME,GAE5B,IACOF,CACT,EAMaG,EAAmB,SAACC,EAAkC7yD,EAAoBlB,GACrF,MAAa,WAATA,GACK,kBAAK+zD,GAAY,IAAE,cAAeh6B,KAAK1gB,WAAU,kBAAKnY,GAAK,IAAE8yD,OAAO,OACzD,SAATh0D,GACF,kBAAK+zD,GAAiB7yD,IAExB,kBAAK6yD,GAAY,IAAE,eAAe,kBAAK7yD,GAAK,IAAE8yD,OAAO,KAC9D,ECPA,EAhCyD,WAAiB,IAAhBvwD,EAAU,UAAH,6CAAG,CAAC,EACnE,EAAyDA,EAAjDq7B,WAAAA,OAAU,IAAG,SAAM,IAA8Br7B,EAA5B+vD,iBAAAA,OAAgB,IAAG,GAAI,EACpD,OAAO,SAAC7jD,IACNi/C,EAAAA,EAAAA,IAAMj/C,EAAM,WAAW,SAACjK,EAAMwK,EAAOiE,GACnC,GAAIq/C,GAAqC,QAAjB9tD,EAAKlF,SAAqBkF,GAAQ3K,MAAMC,QAAQ0K,EAAKmF,WAAasJ,GAAUpZ,MAAMC,QAAQmZ,EAAOtJ,WAAasJ,EAAOtJ,SAASxO,OAAS,EAAG,CAChK,IAAM43D,EAAavuD,EAAKmF,SAAS,GACjC,GAAIopD,GAAqC,SAAvBA,EAAWzzD,SAAuC,kBAAV0P,EAAoB,CAC5E,IAAM8G,EAAQs8C,EAAUn/C,EAAOtJ,SAAuBqF,GACtD,GAAI8G,EAAO,CACT,IAAMpW,EAAO8yD,EAAiB18C,GAC1B5Y,OAAOu5B,KAAK/2B,GAAMvE,OAAS,IAC7BqJ,EAAKo5B,YAAa,kBAAKp5B,EAAKo5B,YAAe,CAAE,YAAa,UAC1Dm1B,EAAWn1B,WAAag1B,EAAiBG,EAAWn1B,WAAYl+B,EAAMk+B,MAM9E,GAAI,mFAAmFhkC,KAAK4K,EAAKlF,UAAY2T,GAAUpZ,MAAMC,QAAQmZ,EAAOtJ,WAA8B,kBAAVqF,EAAoB,CAClL,IAAM8G,EAAQu8C,EAAUp/C,EAAOtJ,SAAUqF,EAAO,GAAIsjD,GACpD,GAAIx8C,EAAO,CACT,IAAMpW,EAAO8yD,EAAiB18C,GAC1B5Y,OAAOu5B,KAAK/2B,GAAMvE,OAAS,IAC7BqJ,EAAKo5B,WAAag1B,EAAiBpuD,EAAKo5B,WAAYl+B,EAAMk+B,KAIlE,GACF,CACF,8ICnCMo1B,EAAkB,CACtBl0D,KAAM,UACNQ,QAAS,OACTs+B,WAAY,CAACpyB,UAAW,CAAC,OAAQ,cACjC7B,SAAU,IAQG,SAASspD,IAAqC,IAQvDhoB,EARyC1oC,EAAU,UAAH,6CAAG,CAAC,EACpDoF,EAAQpF,EAAQq7B,WACds1B,EAAW3wD,EAAQ4wD,WAAa5wD,EAAQ2wD,UAAY,UACpDruD,EAAUtC,EAAQsC,SAAWmuD,EAC7BlsC,EAAQvkB,EAAQukB,MAChBsjB,GAAKtM,EAAAA,EAAAA,GAAev7B,EAAQ3I,MAiBlC,MAZiB,SAAbs5D,EACFjoB,EAASrX,EACa,WAAbs/B,GAAsC,UAAbA,EAClCjoB,EAASmoB,GAEJzrD,IACHA,EAAQ,CAACk9B,WAAY,OAAQ0N,UAAW,IAG1CtH,EAASooB,GAGJ,SAAC5kD,IACNi/C,EAAAA,EAAAA,IAAMj/C,EAAM,WAAW,SAACjK,EAAMwK,EAAOiE,GACnC,IACE4qB,EAAAA,EAAAA,GAAYr5B,KACZm5B,EAAAA,EAAAA,GAAYn5B,EAAM,OAClB4lC,EAAG5lC,EAAMwK,EAAOiE,GAEhB,OAAOg4B,EAAOzmC,EAAMwK,EAAOiE,EAE/B,GACF,EAGA,SAASogD,EAAO7uD,GAKd,OAJAA,EAAKmF,SAAsB,YAAbupD,EAAyB,UAAY,QACjDn0C,EAAOva,EAAM3B,GAAO,EAAM,CAAC,EAAG8E,GAAQ2rD,EAAWzuD,EAASL,KAGrD,CAAC+uD,EAAAA,GACV,CAGA,SAASH,EAAO5uD,EAAMwK,EAAOiE,GAAQ,MAGnC,GAAqB,kBAAVjE,GAAuBiE,EAAlC,CAEA,IAAMT,EAAOuM,EACXva,EACA3B,GAAO,EAAM,CAAC,EAAG8E,GACjB2rD,EAAWzuD,EAASL,IAElBk7B,EAAqB,WAAbwzB,EAAwB,CAAC1gD,EAAMhO,GAAQ,CAACA,EAAMgO,GAE1D,GAAIsU,EAAO,CACT,IAAM0sC,EAAWC,EAAO3sC,EAAOtiB,GAE3BgvD,IAAa35D,MAAMC,QAAQ05D,IAA+B,YAAlBA,EAAS10D,OACnD00D,EAAS7pD,SAAW+1B,EACpBA,EAAQ,CAAC8zB,GAEb,CAIA,OAFA,EAAAvgD,EAAOtJ,UAASmV,OAAM,SAAC9P,EAAO,GAAC,eAAK0wB,KAE7B,CAAC6zB,EAAAA,GAAMvkD,EAAQ0wB,EAAMvkC,OApBoB,CAqBlD,CAGA,SAASy4B,EAAKpvB,GAEZ,OADAA,EAAKmF,SAAW,CAACoV,EAAOva,EAAM3B,GAAO,EAAM,CAAC,EAAG8E,GAAQnD,EAAKmF,WACrD,CAAC4pD,EAAAA,GACV,CAOA,SAASD,EAAWl2D,EAAOoH,GACzB,IAAM5G,EAAS61D,EAAOr2D,EAAOoH,GAC7B,OAAO3K,MAAMC,QAAQ8D,GAAUA,EAAS,CAACA,EAC3C,CAOA,SAAS61D,EAAOr2D,EAAOoH,GACrB,MAAqB,oBAAVpH,EAA6BA,EAAMoH,GACvC3B,GAAO,EAAMhJ,MAAMC,QAAQsD,GAAS,GAAK,CAAC,EAAGA,EACtD,CAQA,SAAS2hB,EAAOva,EAAMmD,EAAOgC,GAC3B,MAAO,CACL7K,KAAM,UACNQ,QAAS,IACTs+B,WAAY1gC,OAAOyR,OAAO,CAAC,EAAGhH,EAAO,CAGnCiiC,KAAM,KAAOplC,EAAKo5B,YAAc,CAAC,GAAGn+B,KAEtCkK,SAAAA,EAEJ,CACF,mDC3HA,IAhC2D,WAAiB,IAAhBpH,EAAU,UAAH,6CAAG,CAAC,EACrE,EAAwFA,EAAhFmxD,cAAAA,OAAa,IAAG,wBAAqB,IAA2CnxD,EAAzCoxD,eAAAA,OAAc,IAAG,sBAAmB,EACnF,OAAO,SAACllD,IACNi/C,EAAAA,EAAAA,IAAMj/C,GAAM,SAACjK,EAA0BwK,EAAOiE,GAC5C,GAAkB,YAAdzO,EAAK1F,MAAoC,SAAd0F,EAAK1F,KAAiB,CAMnD,IAAIwF,GAAQ,EACZE,EAAKmF,SAAWnF,EAAKmF,SAASgC,QAAO,SAACi9C,GACpC,GAAkB,QAAdA,EAAK9pD,MAAgC,YAAd8pD,EAAK9pD,KAAoB,OAC9ClC,EAAiB,QAAd,EAAIgsD,EAAKxrD,aAAK,aAAV,EAAYH,OAEvB,IADAL,EAAMA,EAAIgH,QAAQ,gBAAiB,SACvB8vD,EAER,OADApvD,GAAQ,GACD,EAEX,GAAI1H,IAAQ+2D,EAER,OADArvD,GAAQ,GACD,EAIb,OAAQA,CACV,IAEJ,GACF,CACF,wGC9BMwT,EAAM,CAAC,EAAErW,giECKf,IA8IMmyD,EAAuB,SAACC,GAC5B,OAAO,SAACtxD,GACN,YAAO,IADDA,IAAAA,EAAU,CAAC,GAAD,SACRkM,IACNi/C,EAAAA,EAAAA,IAAMj/C,EAAM,UAAWqlD,EAAAA,EAQzB,SAASA,EAAQtvD,EAAMwK,EAAOiE,GAC5B,GAAKA,GAA6B,QAAnBA,EAAO3T,SAAsC,SAAjBkF,EAAKlF,QAAhD,CAIA,IAAIsH,EAAOpC,EAAKoK,MAAQpK,EAAKoK,KAAKhI,KAA8BpC,EAAKoK,KAAKhI,KAAQ,GAE9EpC,EAAKo5B,WAAWpyB,UACuB,kBAA9BhH,EAAKo5B,WAAWpyB,UACzBhH,EAAKo5B,WAAWpyB,UAAY,GAClB3R,MAAMC,QAAQ0K,EAAKo5B,WAAWpyB,aACxChH,EAAKo5B,WAAWpyB,UAAY,CAAChH,EAAKo5B,WAAWpyB,YAG/ChH,EAAKo5B,WAAWpyB,UAAY,GAE9BhH,EAAKo5B,WAAWpyB,UAAUxM,KAAK,kBAC/B,IAGI+0D,EA/FJC,EA4FMljD,EA1KQ,SAACtM,GAGnB,IAFA,QAAA9D,EAAkB8D,EAAKo5B,WAAWpyB,aAAAA,EAAAA,KAAAA,MAEK,KAA5ByoD,EAAAA,EAAAA,MACT,GAAkC,cAA9BA,EAAczuD,MAAM,EAAG,GACzB,OAAOyuD,EAAczuD,MAAM,GAAG6Z,aAAAA,CAGlC,OAAO,IAAP,CARkB,CA0KW7a,GAMzB,GAAIsM,EACF,IACE,IAAIojD,EAEFA,EAAAA,MADEpjD,GAAAA,EAAMhK,SAAS,SACRgK,EAAK7J,MAAM,KAAK,GAEhB6J,EAGXijD,EAAgBF,EAAUM,WAAUlzD,EAAAA,EAAAA,GAASuD,GAAO0vD,GAEpDjhD,EAAO2qB,WAAWpyB,WAAayH,EAAO2qB,WAAWpyB,WAAa,IAAI8D,OAChE,YAAc4kD,EAIE1vD,CAFlB,MAAOS,GACP,IAAI1C,EAAQ6xD,gBAAiB,mBAAmBx6D,KAAKqL,EAAIgyB,SAGvD,MAAMhyB,EAFN8uD,EAAgBvvD,CAAAA,MAMpBuvD,EAAgBvvD,EAGlBuvD,EAAcpqD,UA3HdqqD,EAAe,EAKK,SAAlBK,EAAmBC,GACvB,OAAOA,EAAI/tD,QAAO,SAAC3I,EAAQ4G,GACzB,GAAkB,SAAdA,EAAK1F,KAAiB,CACxB,IAAM1B,EAA+BoH,EAAKpH,MACpCm3D,GAAYn3D,EAAM+G,MAAM,QAAU,IAAIhJ,OAC5C,GAAiB,IAAbo5D,EACF/vD,EAAKH,SAAW,CAGdC,MAAO,CAAEC,KAAMyvD,EAAchwD,OAAQ,GACrCW,IAAK,CAAEJ,KAAMyvD,EAAchwD,OAAQ,IAErCpG,EAAOoB,KAAKwF,QAGZ,IADA,MAAMN,EAAQ9G,EAAM6J,MAAM,UACF/C,EAAMswD,aAAAA,EAAAA,KAAAA,MAAW,eAA7B3zD,EAAAA,EAAAA,GAAG0D,EAAAA,EAAAA,GACb3G,EAAOoB,KAAK,CACVF,KAAM,OACN1B,MAAOyD,IAAMqD,EAAM/I,OAAS,EAAIoJ,EAAOA,EAAO,KAC9CF,SAAU,CACRC,MAAO,CAAEC,KAAMyvD,EAAenzD,EAAGmD,OAAQ,GACzCW,IAAK,CAAEJ,KAAMyvD,EAAenzD,EAAGmD,OAAQ,MAO/C,OAFAgwD,GAA8BO,EAEvB32D,CAAAA,CAGT,GAAIV,OAAOnC,UAAU0G,eAAeK,KAAK0C,EAAM,YAAa,CAC1D,IAAMiwD,EAAiBT,EAQvB,OANAxvD,EAAKmF,SAAW0qD,EAAgB7vD,EAAKmF,UACrC/L,EAAOoB,KAAKwF,GACZA,EAAKH,SAAW,CACdC,MAAO,CAAEC,KAAMkwD,EAAgBzwD,OAAQ,GACvCW,IAAK,CAAEJ,KAAMyvD,EAAchwD,OAAQ,IAE9BpG,CAAAA,CAIT,OADAA,EAAOoB,KAAKwF,GACL5G,CAAAA,GACN,MAyEiDm2D,EAAcpqD,UAI9DoqD,EAAc1vD,SADZ0vD,EAAcpqD,SAASxO,OAAS,EACT,CACvBmJ,MAAO,CAAEC,KAAMwvD,EAAcpqD,SAAS,GAAGtF,SAASC,MAAMC,KAAMP,OAAQ,GACtEW,IAAK,CACHJ,KAAMwvD,EAAcpqD,SAASoqD,EAAcpqD,SAASxO,OAAS,GAAGkJ,SAASM,IAAIJ,KAC7EP,OAAQ,IAIa,CACvBM,MAAO,CAAEC,KAAM,EAAGP,OAAQ,GAC1BW,IAAK,CAAEJ,KAAM,EAAGP,OAAQ,IAa5B,IATA,MAAM0wD,EA1MsB,SAAC9tD,GACjC,IAAM+tD,EAAK,cAELC,EAAahuD,EAChBK,MAAM,KACN3G,KAAI,SAAC1D,GAAAA,OAAQA,EAAIK,MAAAA,IACjBoD,OACH,GAAIs0D,EAAG/6D,KAAKg7D,GAAa,CACvB,IAAMC,EAAiBF,EAAGpvD,KAAKqvD,GAAY,GACrCE,EAAcC,EAAYF,GAChC,OAAO,SAAC7lD,GAAAA,OAAU8lD,EAAYhuD,SAASkI,EAAQ,IAE/C,OAAO,WAAP,OAAO,CAAP,EAZ8B,CA0M0BpI,GAChDouD,EArLkB,SAACpuD,GAC7B,IAAM+tD,EAAAA,EAAK,6BAAAzwD,MAAAA,IAEX,GAAIywD,EAAG/6D,KAAKgN,GAAO,CACjB,MAEI+tD,EAAGpvD,KAAKqB,GACZ,OAAOqP,OAAO,EAFZg/C,OAAU/wD,MAAAA,CAId,OAAO,CAAP,CAT4B,CAqLyB0C,GAC3CsuD,EApKY,SAAC1sD,GAEvB,IADA,IAAMhC,EAAI,IAAI3M,MAAM2O,GACX3H,EAAI,EAAGA,EAAI2H,EAAQ3H,IAC1B2F,EAAE3F,GAAK,CACL/B,KAAM,UACNQ,QAAS,OACTs+B,WAAY,CAAEpyB,UAAW,IACzB7B,SAAU,IAGd,OAAOnD,CAAAA,CAVe,CAoKoButD,EAAc1vD,SAASM,IAAIJ,MAE3D4wD,EAA0B,CAC9B,wBACA,0BACA,sDAEUt0D,EAAAA,EAAAA,GAAG0D,EAAAA,EAAAA,GAEbA,EAAKq5B,WAAWpyB,UAAY,CAAC,aAG7B,IAAM4pD,EDpNV,SAAU3mD,EAAMlM,EAAS3I,GACvB,IAAMwwC,GAAKirB,EAAAA,EAAAA,GAAQz7D,GAAQ2I,GACrB+yD,OACgBv3D,IAApBwE,EAAQ+yD,SAA6C,OAApB/yD,EAAQ+yD,SAErC/yD,EAAQ+yD,QAEd,OAQA,SAASC,EAAS/wD,EAAMwK,EAAOiE,GAE7B,IAEIk8C,EAEAvxD,EAEAqE,EANE0H,EAAW,GAQjB,IAAKygC,EAAG5lC,EAAMwK,EAAOiE,GAAS,OAAO,KAGrC,GAAIzO,EAAKmF,SAAU,CAIjB,IAHAwlD,GAAc,IAGLA,EAAa3qD,EAAKmF,SAASxO,SAElCyC,EAAS23D,EAAS/wD,EAAKmF,SAASwlD,GAAaA,EAAY3qD,KAGvDmF,EAAS3K,KAAKpB,GAKlB,GAAI03D,GAAW9wD,EAAKmF,SAASxO,OAAS,GAAyB,IAApBwO,EAASxO,OAClD,OAAO,IACX,CAKA,IAAM+mB,EAAO,CAAC,EAEd,IAAKjgB,KAAOuC,EACNsT,EAAIhW,KAAK0C,EAAMvC,KAEjBigB,EAAKjgB,GAAe,aAARA,EAAqB0H,EAAWnF,EAAKvC,IAIrD,OAAOigB,CACT,CApDOqzC,CAAS9mD,EAqDlB,CCwJwB9C,CAClBooD,GACA,SAACvvD,GAAAA,OAASA,EAAKH,SAASC,MAAMC,MAAQ1D,EAAI,GAAK2D,EAAKH,SAASM,IAAIJ,MAAQ1D,EAAI,KAE/E0D,EAAKoF,SAAWyrD,EAAYzrD,UAIzB/C,EAAKyY,cAAcvY,SAAS,kBAAkBuY,iBAC7C9c,EAAQizD,iBACTL,EAAwBp7D,MAAK,SAAC6C,GAAAA,OAAQgK,EAAKyY,cAAcvY,SAASlK,EAAAA,MAEnE2H,EAAKq5B,WAAWr5B,KAAO,EAAE1D,EAAIm0D,GAAoB/zD,YACjDsD,EAAKq5B,WAAWpyB,UAAUxM,KAAK,gBAI7B01D,EAAoB7zD,IACtB0D,EAAKq5B,WAAWpyB,UAAUxM,KAAK,mBAInB,SAAT8R,GAAAA,MAAmBA,GAAAA,EAAMhK,SAAS,WAAgD,OAAnC7F,EAAAA,EAAAA,GAASsD,GAAMkxD,UAAU,EAAG,GAC9ElxD,EAAKq5B,WAAWpyB,UAAUxM,KAAK,YACZ,SAAT8R,GAAAA,MAAmBA,GAAAA,EAAMhK,SAAS,WAAgD,OAAnC7F,EAAAA,EAAAA,GAASsD,GAAMkxD,UAAU,EAAG,IACrFlxD,EAAKq5B,WAAWpyB,UAAUxM,KAAK,iBA9BXk2D,EAAcV,aAAAA,EAAAA,KAAAA,MAAAA,IAoCpCU,EAAc/5D,OAAS,GACsC,MAA7D8F,EAAAA,EAAAA,GAASi0D,EAAcA,EAAc/5D,OAAS,IAAI8B,QAElDi4D,EAAc7gD,MAGhB7P,EAAKmF,SAAWurD,CAAAA,CAAAA,CAAAA,CAAAA,ECxRhBQ,GCAoB9B,EAAqB+B,EAAAA,GDAxB/B,EAAqBgC,EAAAA,2HEI/Bj1D,GAAI+9B,SAAAA,GAAKqX,EAAAA,GAAK,ICda,CACtC,WACA,cACA,eACA,eACA,gBACA,mBACA,WACA,UACA,gBACA,sBACA,cACA,mBACA,oBACA,oBACA,iBACA,eACA,UACA,UACA,UACA,UACA,UACA,iBACA,UACA,UACA,cACA,eACA,WACA,eACA,qBACA,cACA,SACA,eACA,gBACA,WACA,iBACA,iBACA,aACA,WACA,iCClCK,IAAM8f,EAAgB,CAC3BhkD,KAAM,+BACNikD,OAAQ,qCACR/f,IAAK,6BACLxT,MAAO,+BACPQ,IAAK,uCACLM,MAAO,iCCsCHvrB,EAAM,CAAC,EAAErW,eAGTnB,EAAM,CACV,YAAauS,EACb,qBAAsBA,EACtB,QAgJF,SAActD,EAAG+kD,GACf,MAAO,CAACx1D,KAAM,OAAQ1B,MAAOk3D,EAAIl3D,MACnC,EAjJE,WA0JF,SAAiBmS,EAAG+kD,GAClB,MAAO,CAACx1D,KAAM,UAAW1B,MAAOk3D,EAAI1lD,KACtC,EA3JE,gBAkIF,WAEE,MAAO,CAAC9P,KAAM,UAChB,GA5FA,SAASsjC,EAAU7L,EAAK+9B,GACtB,IAKI3qD,EALEg1B,EAASpI,EAAIoI,OAGb9mB,EAAKC,EAAIhW,KAAKxB,EAAKg0D,EAAIyB,UAAYz1D,EAAIg0D,EAAIyB,UAAYltD,EAKzD,YAAayrD,IACf/9B,EAAIoI,OAAS21B,EAAI0B,eAAiBH,EAAc9f,IAAMA,EAAAA,GAAMlkC,EAAAA,IAG1D,eAAgByiD,IAClB3qD,EA2BJ,SAAe4sB,EAAK5sB,GAClB,IAAIqF,GAAS,EAEPpR,EAAS,GAEf,OAASoR,EAAQrF,EAASxO,QAExByC,EAAOoR,GAASozB,EAAU7L,EAAK5sB,EAASqF,IAG1C,OAAOpR,CACT,CAtCe8hC,CAAMnJ,EAAK+9B,EAAI2B,aAG5B,IAAMr4D,EAASia,EAAG0e,EAAK+9B,EAAK3qD,GAE5B,GAAI,uBAAwB2qD,GAAOA,EAAI4B,oBAAsB3/B,EAAIlB,KAAM,CAErE,IAAMhxB,EAgJV,SAAwBkyB,EAAK/xB,EAAMsD,GACjC,IAAMlK,EAASyG,EAASyD,GAExB,GAAkB,YAAdtD,EAAK1F,KAAoB,CAC3B,IAAMygB,EAAO/a,EAAKmF,SAASnF,EAAKmF,SAASxO,OAAS,GAclD,GATEyC,IACCkK,EAASquD,QACV52C,GACAA,EAAKlb,UACLkb,EAAKlb,SAASM,MAEd/G,EAAO+G,IAAMzH,OAAOyR,OAAO,CAAC,EAAG4Q,EAAKlb,SAASM,MAG3C4xB,EAAI6/B,QAAS,CAEf,IAEIn0D,EAFE0F,EAAQ,CAAC,EAIf,IAAK1F,KAAO6F,EAAS9H,MACf8X,EAAIhW,KAAKgG,EAAS9H,MAAOiC,KAC3B0F,GAAMytB,EAAAA,EAAAA,GAAKmB,EAAIoI,OAAQ18B,GAAK+D,UAAY3B,EAASyD,EAAS9H,MAAMiC,KAIpEuC,EAAKoK,KAAO,CACVvK,SAAU,CACRgyD,QAAShyD,EAASyD,EAASujB,UAC3BirC,QAASxuD,EAASquD,OAAS9xD,EAASyD,EAASquD,QAAU,KACvDv4B,WAAYj2B,GAGlB,CACF,CAEA,OAAO/J,CACT,CAzLqB24D,CAAehgC,EAAK34B,EAAQ02D,EAAI4B,oBAE7C7xD,IACFkyB,EAAIzuB,UAAW,EACflK,EAAOyG,SAAWA,EAEtB,CAIA,OAFAkyB,EAAIoI,OAASA,EAEN/gC,CACT,CA+BA,SAASiV,EAAK0jB,EAAK+9B,EAAK3qD,GAEtB,IAAM/L,EAAS,CACbkB,KAAM,OACN6K,SAAAA,EACAiF,KAAM,CAAC4nD,WAAyB,WAAblC,EAAIrT,MAAkC,mBAAbqT,EAAIrT,OAGlD,GAAI1qB,EAAIlB,MAAQkB,EAAIzuB,SAAU,CAC5B,IAAM4rB,EAAMx1B,OAAOq4B,EAAIlB,MACjBohC,EC7JH,SAAkBphC,GAMvB,IALA,IAAIj4B,EAAQc,OAAOm3B,GAEfqhC,EAAU,GACVvwC,EAAS,YAENA,EAAOvsB,KAAKwD,IACjBs5D,EAAQ13D,KAAKmnB,EAAOI,WAKtB,OAFAmwC,EAAQ13D,KAAK5B,EAAMjC,OAAS,GAErB,CAACw7D,QAUR,SAAiBv4C,GACf,IAAIpP,GAAS,EAEb,GAAIoP,GAAU,GAAKA,EAASs4C,EAAQA,EAAQv7D,OAAS,GACnD,OAAS6T,EAAQ0nD,EAAQv7D,QACvB,GAAIu7D,EAAQ1nD,GAASoP,EACnB,MAAO,CACL7Z,KAAMyK,EAAQ,EACdhL,OAAQoa,GAAUs4C,EAAQ1nD,EAAQ,IAAM,GAAK,EAC7CoP,OAAAA,GAMR,MAAO,CAAC7Z,UAAMxG,EAAWiG,YAAQjG,EAAWqgB,YAAQrgB,EACtD,EA1BiB64D,SAmCjB,SAAkBz4C,GAChB,IAGIC,EAHA7Z,EAAO4Z,GAASA,EAAM5Z,KACtBP,EAASma,GAASA,EAAMna,OAc5B,MATkB,kBAATO,GACW,kBAAXP,GACNiS,OAAOipB,MAAM36B,IACb0R,OAAOipB,MAAMl7B,MACdO,EAAO,KAAKmyD,KAEZt4C,GAAUs4C,EAAQnyD,EAAO,IAAM,GAAKP,EAAS,GAAK,GAG7Coa,GAAU,GAAKA,EAASs4C,EAAQA,EAAQv7D,OAAS,GAAKijB,GAAU,CACzE,EACF,CD4FgBtW,CAAS4rB,GACrB91B,EAAOyG,SAAW,CAChBC,MAAOmyD,EAAIE,QAAQ,GACnBhyD,IAAK8xD,EAAIE,QAAQjjC,EAAIv4B,QAEzB,CAEA,OAAOyC,CACT,CA2CA,SAASiL,EAAQ0tB,EAAK+9B,EAAK3qD,GAMzB,IALA,IAAMkO,EAA0B,QAArB0e,EAAIoI,OAAOqD,MAAkBrhC,EAAI0L,EAAAA,EACxC2C,GAAS,EAEPrH,EAAQ,CAAC,IAENqH,EAAQslD,EAAIt0D,MAAM7E,QAAQ,CACjC,IAAMmmC,EAAYgzB,EAAIt0D,MAAMgP,GAC5BrH,GAAO25B,EAAU3W,OAAS2W,EAAU3W,OAAS,IAAM,IAAM2W,EAAU3hC,MACjE2hC,EAAUlkC,KACd,CAEA,IAAMQ,EAASia,EAAGy8C,EAAIh1D,QAASqI,EAAOgC,GAEtC,GAAuB,aAAnB/L,EAAO0B,SAA0B,YAAag1D,EAAK,CACrD,IAAMh3D,EAAMg3D,EAAI4B,mBACV7qC,EAAW/tB,GAAOA,EAAI+tB,UAAYhnB,EAAS/G,EAAI+tB,UAC/C8qC,EAAS74D,GAAOA,EAAI64D,QAAU9xD,EAAS/G,EAAI64D,QAI3CtxD,EAAUu9B,EAAU7L,EAAK+9B,EAAIzvD,SAE/BwmB,GAAY8qC,GAAU5/B,EAAIlB,OAC5BxwB,EAAQR,SAAW,CAACC,MAAO+mB,EAAS1mB,IAAKA,IAAKwxD,EAAO7xD,QAGvD1G,EAAOiH,QAAUA,CACnB,CAEA,OAAOjH,CACT,CAyDA,SAASyG,EAASoyD,GAChB,IAAMnyD,EAAQ6Z,EAAM,CAClB5Z,KAAMkyD,EAAII,UACV7yD,OAAQyyD,EAAIK,SACZ14C,OAAQq4C,EAAI5S,cAERl/C,EAAMwZ,EAAM,CAChB5Z,KAAMkyD,EAAIM,QACV/yD,OAAQyyD,EAAIO,OACZ54C,OAAQq4C,EAAIQ,YAGd,OAAO3yD,GAASK,EAAM,CAACL,MAAAA,EAAOK,IAAAA,GAAO,IACvC,CAMA,SAASwZ,EAAMA,GACb,OAAOA,EAAM5Z,MAAQ4Z,EAAMna,OAASma,EAAQ,IAC9C,CAMA,SAAS+4C,EAAO95D,GACd,MAAO,aAAcA,CACvB,iEE/SM+5D,EAA4CtB,EAC5CzG,EAAiDzI,EAAAA,EAEjD7uC,EAAM,CAAC,EAAErW,eAIToR,GAAOwiD,EAAAA,EAAAA,GAAQ,QAGfxsD,GAAUwsD,EAAAA,EAAAA,GAAQ,WAGlB/qD,GAAO+qD,EAAAA,EAAAA,GAAQ,QASd,SAAS+B,EAAI/qD,EAAGoC,EAAMlM,GAC3B,GAAiB,oBAAN8J,EACT,MAAM,IAAIvI,UAAU,uBAGtB,IAII6mB,EAEAnmB,EANEnD,EAkMR,SAAegL,GAEb,IAAM7H,EAAO6H,EAAE,MAAO,CAAC,GACvB,OAAOT,QACLpH,IAEG,WAAYA,GAAQ,WAAYA,UAEnBzG,IAAbyG,EAAKvC,KAAkC,OAAbuC,EAAKvC,KAEtC,CA5MYo1D,CAAMhrD,GACV5F,EA0OR,SAAa4F,GAEX,IAAM7H,EAAO6H,EAAE,MAAO,CAAC,GAEvB,OAAOT,QAAQpH,GAAQA,EAAKgL,SAAWhL,EAAKgL,QAAQ8nD,OACtD,CA/OYC,CAAIlrD,GACRmrD,EA4NR,SAAcnrD,GAEZ,IAAM7H,EAAO6H,EAAE,MAAO,CAAC,GAEvB,MAAqB,gBAAd7H,EAAK1F,IACd,CAjOa24D,CAAKprD,GAchB,GARuB,kBAAZ9J,GAA2C,mBAAZA,GACxCooB,EAASpoB,EACTA,EAAU,CAAC,IAENA,IAASA,EAAU,CAAC,GACzBooB,EAASpoB,EAAQooB,QAGf9X,EAAKpE,GAEPjK,EAC2B,IAAzBiK,EAAK9E,SAASxO,QAAgB0N,EAAQ4F,EAAK9E,SAAS,IAChD8E,EAAK9E,SAAS,GACd,CACE7K,KAAM,UACNQ,QAAS,MACTs+B,WAAY,CAAC,EACbj0B,SAAU8E,EAAK9E,cAElB,KAAId,EAAQ4F,GAGjB,MAAM,IAAIlQ,MAER,mCAAsCkQ,GAAQA,EAAK3P,MAAS2P,GAAQ,KAJtEjK,EAAOiK,CAMT,CAEA,OAAO2zB,EAAU/1B,EAAG7H,EAAM,CACxBm6B,OAA0B,QAAlBp8B,EAAQy/B,MAAkB+T,EAAAA,GAAMlkC,EAAAA,GACxC8Y,YACa5sB,IAAX4sB,GAAmC,OAAXA,EACpBtpB,GAAKoF,GAAK+wD,EACR,KACA,KACgB,kBAAX7sC,EACPA,EACAA,EACA,KACA,KACN1oB,IAAK,EACLo1D,MAAOh2D,EACPk2D,IAAK9wD,EACLgxD,KAAMD,EACNE,YAAaA,EAAYrrD,IAE7B,CAUA,SAAS+1B,EAAU/1B,EAAG7H,EAAM+xB,GAC1B,IASIt0B,EATEqtD,EAAe/4B,EAAIoI,OACrBA,EAAS2wB,EACT3vD,EAAO6E,EAAKlF,QAEV+iC,EAAa,CAAC,EAEd3C,EAAQ,GACV1wB,GAAS,EASb,IAAK/M,IALsB,SAAvBqtD,EAAattB,OAA2C,QAAvBriC,EAAK0f,gBACxCsf,EAASoX,EAAAA,GACTxf,EAAIoI,OAASA,GAGHn6B,EAAKo5B,WACXp5B,EAAKo5B,YAAc9lB,EAAIhW,KAAK0C,EAAKo5B,WAAY37B,IAC/C01D,EAAat1B,EAAYpgC,EAAKuC,EAAKo5B,WAAW37B,GAAMs0B,EAAK52B,GAiB7D,GAbI42B,EAAIkhC,OACe,SAAjB94B,EAAOqD,MACTriC,EAAOA,EAAKuX,cACHynB,EAAOqD,QAChBK,EAAW3N,UAAYyiC,EAAGx4B,EAAOqD,SAIjCzL,EAAI5L,SACN4L,EAAIt0B,MACJogC,EAAWpgC,IAAMs0B,EAAI5L,OAAS4L,EAAIt0B,KAGhCuC,EAAKmF,SACP,OAASqF,EAAQxK,EAAKmF,SAASxO,QAAQ,CACrC,IAAMiC,EAAQoH,EAAKmF,SAASqF,GAExBnG,EAAQzL,GACVsiC,EAAM1gC,KAAKojC,EAAU/1B,EAAGjP,EAAOm5B,IACtBjsB,EAAKlN,IACdsiC,EAAM1gC,KAAK5B,EAAMA,MAErB,CAQF,OAJAm5B,EAAIoI,OAAS2wB,EAIN5vB,EAAMvkC,OAAS,EAClBkR,EAAEvK,KAAK0C,EAAM7E,EAAM0iC,EAAY3C,GAC/BrzB,EAAEvK,KAAK0C,EAAM7E,EAAM0iC,EACzB,CAUA,SAASs1B,EAAahwD,EAAO9B,EAAMzI,EAAOm5B,EAAK52B,GAC7C,IAEIi4D,EAFEjvC,GAAOyM,EAAAA,EAAAA,GAAKmB,EAAIoI,OAAQ94B,QAOlB9H,IAAVX,GACU,OAAVA,GACkB,kBAAVA,GAAsB6Y,OAAOipB,MAAM9hC,KAChC,IAAVA,IAAoBm5B,EAAIghC,KAAOhhC,EAAIkhC,MAAQlhC,EAAImhC,eAC9Ct6D,GAASurB,EAAKgX,UAAYpJ,EAAIghC,KAAOhhC,EAAIkhC,MAAQlhC,EAAImhC,eAKrD79D,MAAMC,QAAQsD,KAGhBA,EAAQurB,EAAK0W,gBAAiBC,EAAAA,EAAAA,GAAOliC,IAASgiC,EAAAA,EAAAA,GAAOhiC,IAInDurB,EAAKgX,SAAWpJ,EAAImhC,cACtBt6D,EAAQ,IAKU,UAAlBurB,EAAK3iB,UACY,kBAAV5I,IACNm5B,EAAI8gC,OAAS9gC,EAAIghC,KAAOhhC,EAAIkhC,QAE7Br6D,EAmFJ,SAAoBA,EAAOkC,GAEzB,IAAM1B,EAAS,CAAC,EAEhB,IACEiG,EAAMzG,GAAO,SAACuC,EAAMvC,GACO,SAArBuC,EAAK6F,MAAM,EAAG,KAAe7F,EAAO,MAAQA,EAAK6F,MAAM,IAE3D5H,EACE+B,EAAKiE,QACH,aAKI,SAAC2L,EAAGmG,GAAE,OAAKA,EAAGwB,aAAa,KAE/B9Z,CACN,GAKF,CAJE,MAAO2H,GAGP,MAFAA,EAAMkyB,QACJ33B,EAAU,UAAYyF,EAAMkyB,QAAQzxB,MAAM,YAAYrK,QAClD4J,CACR,CAEA,OAAOnH,CACT,CA7GYgzD,CAAWxzD,EAAOuC,IAGxB42B,EAAIghC,IACgB,UAAlB5uC,EAAK3iB,WAAsB4xD,EAAU,SAC/BjvC,EAAK2Z,kBACX/L,EAAIkhC,KACgB,UAAlB9uC,EAAK3iB,WAAsB4xD,EAAU,cAChCrhC,EAAImhC,cACbE,EAAU,UAIVA,EACFjwD,EAAMiwD,GAAW16D,OAAOyR,OAAOhH,EAAMiwD,IAAY,CAAC,GAAG,UAClDjvC,EAAK2Y,UAAYlkC,IAEXurB,EAAKqZ,OAASzL,EAAI8gC,MAC3B1vD,EAAMynD,EAAQzmC,EAAK3iB,WAAa2iB,EAAK3iB,UAAY5I,EAEjDuK,EAAMghB,EAAK2Y,WAAalkC,EAE5B,CA0BA,SAASs6D,EAAYrrD,GACnB,MAAO,YAAaA,GAAK,YAAaA,CACxC,eCnPIyL,EAAM,CAAC,EAAErW,eAET6U,GAAMzB,EAAAA,EAAAA,GAAO,OAAQ,CAACP,SAAU,CAACzB,KAmBrC,SAAcrO,EAAMm6B,GAElB,IAAIk5B,EAAK,CACP9B,SAAU,YACV9U,MAAOz8C,EAAKoK,MAAQ,CAAC,GAAG4nD,WAAa,SAAW,YAChDP,WAAY,IAId,OADA4B,EAAG5B,WAAa7+C,EAAI5S,EAAKmF,SAAUkuD,EAAIl5B,GAChCm5B,EAAMtzD,EAAMqzD,EACrB,EA7B2ChvD,QA0F3C,SAAiBrE,EAAMm6B,GAGrB,IAAIqD,EAAQrD,EAAOqD,MACnB,OAAOo1B,GAMP,SAAWz3D,EAAMK,GAEf,IAEI2oB,EAEAvrB,EAEA6E,EAEA+M,EAEA6oD,EAVAxgD,EAAS,GAYb,IAAKpV,KAAOjC,EACL8X,EAAIhW,KAAK9B,EAAOiC,KAAuB,IAAfjC,EAAMiC,MAInC0mB,GAAOyM,EAAAA,EAAAA,GAAKuJ,EAAQ18B,IAEX09B,UAAY3/B,EAAMiC,KAI3B7E,EAAQ,CAACuC,KAAMsC,EAAK7E,OAAsB,IAAf4C,EAAMiC,GAAgB,GAAK/D,OAAO8B,EAAMiC,KAE/D0mB,EAAKqZ,OAAwB,SAAfrZ,EAAKqZ,OAAmC,QAAfrZ,EAAKqZ,SAC9ChzB,EAAQ/M,EAAIyE,QAAQ,MAER,EACVtJ,EAAMutB,OAAS,IAEfvtB,EAAMuC,KAAOsC,EAAIuD,MAAMwJ,EAAQ,GAC/B5R,EAAMutB,OAAS1oB,EAAIuD,MAAM,EAAGwJ,IAG9B5R,EAAMs3B,UAAYmhC,EAAcltC,EAAKqZ,QAGvC3qB,EAAOrY,KAAK5B,KAGO,SAAjBuhC,EAAOqD,OAAqC,QAAjBx9B,EAAKlF,UAAmBq/B,EAASoX,EAAAA,KAEhE8hB,EAAKC,EAAMtzD,EAAM,CACfuxD,SAAUp2D,EACVL,QAASK,EACTK,MAAOqX,EACP2+C,aAAcH,EAAcl3B,EAAOqD,OACnCi0B,WAAY,GACZ8B,gBAAYh6D,KAIXk4D,WAAa7+C,EAAI5S,EAAKmF,SAAUkuD,EAAIl5B,GAG1B,aAATh/B,IAAqBk4D,EAAGhzD,QA1HhC,SAAkBL,EAAMm6B,GAEtB,IAAIk5B,EAAK,CAAC9B,SAAU,qBAAsBE,WAAY,IAGtD,OADA4B,EAAG5B,WAAa7+C,EAAI5S,EAAKmF,SAAUkuD,EAAIl5B,GAChCm5B,EAAMtzD,EAAMqzD,EACrB,CAoH0Cr4C,CAAShb,EAAKK,QAAS85B,IAE7D,OAAOk5B,CACT,GAnEc36D,OAAOyR,OAAO,CAAC,EAAGnK,EAAM,CAACmF,SAAU,KAAM,CAACq4B,MAAAA,GAoE1D,EAlKoD13B,KAgEpD,SAAc9F,GACZ,OAAOszD,EAAMtzD,EAAM,CACjBuxD,SAAU,QACV34D,MAAOoH,EAAKpH,MACZ26D,gBAAYh6D,GAEhB,EAtE0D4H,QA6E1D,SAAiBnB,GACf,OAAOszD,EAAMtzD,EAAM,CACjBuxD,SAAU,WACVnnD,KAAMpK,EAAKpH,MACX26D,gBAAYh6D,GAEhB,EAnFmEi6D,QAiDnE,SAAiBxzD,GACf,OAAOszD,EAAMtzD,EAAM,CACjBuxD,SAAU,gBACVp2D,KAAM,OACNs4D,SAAU,GACVC,SAAU,GACVH,gBAAYh6D,GAEhB,KAiHA,SAASqZ,EAAIzN,EAAUkuD,EAAIl5B,GACzB,IAII7oB,EAJA9G,GAAS,EAETpR,EAAS,GAIb,GAAI+L,EACF,OAASqF,EAAQrF,EAASxO,SAExB2a,EAAQQ,EAAI3M,EAASqF,GAAQ2vB,IAGvBo5B,WAAaF,EAEnBj6D,EAAOoB,KAAK8W,GAIhB,OAAOlY,CACT,CAUA,SAASk6D,EAAMtzD,EAAMqzD,GACnB,IAAIxzD,EAAWG,EAAKH,SAcpB,OAZIA,GAAYA,EAASC,OAASD,EAASM,MAEzCkzD,EAAG3B,mBAAqB,CACtBW,UAAWxyD,EAASC,MAAMC,KAC1BuyD,SAAUzyD,EAASC,MAAMN,OACzB6/C,YAAax/C,EAASC,MAAM8Z,OAC5B24C,QAAS1yD,EAASM,IAAIJ,KACtByyD,OAAQ3yD,EAASM,IAAIX,OACrBizD,UAAW5yD,EAASM,IAAIyZ,SAIrBy5C,CACT,CCvPO,IAAMM,EAAmB,CAC9B,OACA,OACA,WACA,UACA,KACA,MACA,UACA,QACA,QACA,KACA,QACA,MACA,QACA,UACA,SACA,OACA,WACA,OACA,SACA,QACA,SACA,QACA,OC0DIC,EAAc,gBAKdC,EAAe,CAACC,wBAAwB,EAAMC,kBAAkB,GAazDhoD,EAaT,SAbSA,EAaC9B,EAAM4mB,EAAM9yB,GACpB,IASIi2D,EAEA1lC,EAEA/S,EAEA04C,EAEAC,EA8ZSt7D,EA/aT4R,GAAS,EACP6Q,EAAS,IAAI4T,EAAO4kC,GACpB/hD,GAAMzB,EAAAA,EAAAA,GAAO,OAAQ,CAEzBP,SAAU,CAACzB,KA6Ib,SAAcrO,GACZ4S,EAAI5S,EAAKmF,SACX,EA/ImBd,QAqJnB,SAAiBrE,GACfm0D,IACA94C,EAAO+4C,cAAcvtC,EAAS7mB,GAAOqxD,EAAchkD,MAEnDuF,EAAI5S,EAAKmF,UAEJwuD,EAAiBrxD,SAAStC,EAAKlF,WAClCq5D,IACA94C,EAAO+4C,cAqNjB,SAAgBp0D,GAEd,IAAMsD,EAAW5K,OAAOyR,OAAOkqD,EAAqBr0D,IAKpD,OAHAsD,EAASujB,SAAWnuB,OAAOyR,OAAO,CAAC,EAAG7G,GAG/B,CACLhJ,KAAMs5D,EACN94D,QAASkF,EAAKlF,QACdU,MAAO,GACP8H,SAAAA,EAEJ,CAlO+BquD,CAAO3xD,IAEhC,EA/J4B8F,KAqK5B,SAAc9F,GACZm0D,IACA94C,EAAO+4C,cAAc,CACnB95D,KA9Ma,kBA+Mbg6D,MAAOt0D,EAAKpH,MACZ0K,SAAU+wD,EAAqBr0D,IAEnC,EA5KkCmB,QAAAA,EAASqyD,QAkL3C,SAAiBxzD,GACfm0D,IACA94C,EAAO+4C,cAAc,CACnB95D,KAvNW,gBAwNXa,KAAM,OACNo5D,aAAa,EACbd,SAAU,GACVC,SAAU,GACVpwD,SAAU+wD,EAAqBr0D,IAEnC,EA5LoD+L,IA+MpD,SAAmB/L,GACjB,IAAMF,GAAQsoD,EAAAA,EAAAA,IAAWpoD,GACnBD,EAAOD,EAAMC,MAAQ,EACrBP,EAASM,EAAMN,QAAU,EACzBoa,EAAS9Z,EAAM8Z,QAAU,EAG/B,IAAK2B,EAAc,MAAM,IAAIxhB,MAAM,2BACnC,IAAKu0B,EAAW,MAAM,IAAIv0B,MAAM,wBAChC,IAAKk6D,EAAY,MAAM,IAAIl6D,MAAM,yBACjC,IAAKm6D,EAAiB,MAAM,IAAIn6D,MAAM,8BAItCwhB,EAAalO,UAAO9T,EACpBgiB,EAAaziB,KAAO,EACpByiB,EAAai5C,YAAc,EAC3Bj5C,EAAak5C,aAAe,EAC5Bl5C,EAAam5C,SAAW,GACxBn5C,EAAao5C,iBAAkB,EAC/Bp5C,EAAaq5C,kBAAmB,EAChCr5C,EAAas5C,eAAgB,EAI7BZ,EAAWa,OAAQ,EACnBb,EAAWc,aAAyB,EAATv1D,EAC3By0D,EAAWe,kBAAoBp7C,EAC/Bq6C,EAAWr6C,OAAS,EACpBq6C,EAAWgB,IAAM,EACjBhB,EAAWl0D,KAAOA,EAIlBm0D,EAAgBgB,yBAAsB37D,EACtC26D,EAAgBiB,MAAQd,EAAqBr0D,GAI7CsuB,EAAUhT,MAAMtb,EAAKpH,OACrByiB,EAAO+5C,gBAAgB,OAQD,oCAApB9mC,EAAU5B,OACU,0CAApB4B,EAAU5B,SAEVnR,EAAaq5C,kBAAmB,EAChCtmC,EAAUA,EAAU5B,OAAO4B,EAAU+mC,YAEzC,GAnQE9kD,QAAAA,IAkBF,GAuZa3X,EA5ZCi4B,EA6ZXzpB,QAAQxO,KAAW,YAAaA,GAAS,aAAcA,MA5ZxDmF,EAAU8yB,EACVA,OAAOt3B,GAGLwE,GAAWA,EAAQooD,YACrB,OAAS37C,EAAQzM,EAAQooD,YAAYxvD,QAEnCmb,EAAIhC,SAAS/R,EAAQooD,YAAY37C,IAAU8qD,EAI/C,IAAMl8D,ELnFL,SAAoB02D,GAAmB,IAExClgD,EAEAihB,EAJ0B9yB,EAAU,UAAH,6CAAG,CAAC,EAczC,OARI20D,EAAO30D,IACT8yB,EAAO9yB,EACP6R,EAAW,CAAC,IAEZihB,EAAO9yB,EAAQ8yB,KACfjhB,EAAW7R,GAGN6/B,EACL,CACEzD,OAA2B,QAAnBvqB,EAAS4tB,MAAkB+T,EAAAA,GAAMlkC,EAAAA,GACzCwjB,KAAAA,EACA+gC,QAAShiD,EAASgiD,QAClBtuD,UAAU,GAEZwsD,EAEJ,CK4DqByF,CAiXrB,SAAsBv1D,GACpB,IAAM27B,EAAqB,SAAd37B,EAAK1F,KAAkB0F,EAAKmF,SAAS,GAAKnF,EACvD,OAAOoH,QACLu0B,IACiB,YAAdA,EAAKrhC,MACW,YAAdqhC,EAAKrhC,MAAuC,SAAjBqhC,EAAK7gC,SAEzC,CAvXQ06D,CAAavrD,GA2Ef,WAEE,IAAMilB,EAAM7T,EAAOo6C,YAAYC,iBAK/B,GAHAr6C,EAAOs6C,WAAWzmC,OAAK31B,KACvB+0B,EAAYjT,EAAOiT,WAEH,MAAM,IAAIv0B,MAAM,wBAShC,OARAwhB,EAAe+S,EAAU/S,aACzB24C,EAAkB5lC,EAAUsnC,SAAS,GACrC3B,EAAaC,EAAgBD,WAE7BniD,EAAI7H,GAEJkqD,IAEOjlC,CACT,CA5FuBjc,GA6BvB,WAEE,IAAMjI,EAAU,CACdumD,SAAU,WACVz2D,QAAS,WACTU,MAAO,GACPg2D,aAAcH,EAAchkD,KAC5BokD,WAAY,IAGRoE,EAAO,CACXtE,SAAU,eACVz2D,QAAS,eACTU,MAAO,GACPg2D,aAAcH,EAAchkD,KAC5BokD,WAAY,IAGRviC,EAAM,CAACqiC,SAAU,qBAAsBE,WAAY,IAWzD,GATAp2C,EAAOs6C,WAAWE,EAAM7qD,GACxBqQ,EAAOy6C,uBAtHQ,oBAuHfz6C,EAAO06C,mCACP16C,EAAO26C,yBACP36C,EAAO46C,sBACP56C,EAAO66C,+BAEP5nC,EAAYjT,EAAOiT,WAEH,MAAM,IAAIv0B,MAAM,wBAWhC,OAVAwhB,EAAe+S,EAAU/S,aACzB24C,EAAkB5lC,EAAUsnC,SAAS,GACrC3B,EAAaC,EAAgBD,WAE7BniD,EAAI7H,GAEJkqD,IAEA94C,EAAO86C,YAAYN,EAAKpE,WAAW,GAAIviC,GAEhCA,CACT,CAtEoClU,GAClC6V,GAeF,OAZImjC,IACF9K,EAAAA,EAAAA,IAAM9vD,EAAQ,WAAW,SAAC4G,EAAMwK,EAAOiE,GACrC,IAAM6mD,EAAwDt1D,EAC9D,GAAIs1D,EAAO18D,MAAM08D,QAAqB,OAAX7mD,GAA6B,OAAVjE,EAG5C,OADAiE,EAAOtJ,SAASqF,GAAS8qD,EAAO18D,MAAM08D,OAC/B9qD,CAEX,IAKc,SAAdP,EAAK3P,MACW,SAAhBlB,EAAOkB,MACoB,IAA3BlB,EAAO+L,SAASxO,OAETyC,EAAO+L,SAAS,GAGlB/L,EA0EP,SAASwZ,EAAIsoB,GACX,IAAI1wB,GAAS,EAGb,GAAI0wB,EACF,OAAS1wB,EAAQ0wB,EAAMvkC,QACrBmb,EAAIopB,EAAM1wB,GAGhB,CA2DA,SAASrJ,EAAQnB,GACfm0D,IACA94C,EAAO+4C,cAAc,CACnB95D,KAxOW,gBAyOX8P,KAAMpK,EAAKpH,MACX0K,SAAU+wD,EAAqBr0D,IAEnC,CAiEA,SAASs1D,EAAOt1D,GACdg0D,GAAW,EAwBX7yD,EAAQ,CAAC7G,KAAM,UAAW1B,MAAO,CAAC08D,OAjB9B,aAAct1D,GACR,kBACHA,GAAI,IACPmF,SAAU4G,EACR,CAACzR,KAAM,OAAQ6K,SAAUnF,EAAKmF,UAC9B0rB,EACA9yB,GAEAoH,YAGI,UAAInF,KAOhB,CAEA,SAASm0D,IAEP,IAAK7lC,EAAW,MAAM,IAAIv0B,MAAM,wBAChC,IAAKk6D,EAAY,MAAM,IAAIl6D,MAAM,yBAKjC,IAAM2gB,EAAQ4T,EAAU8nC,sBAEpB17C,IACFA,EAAMpX,SAASivD,QAAU0B,EAAWl0D,KACpC2a,EAAMpX,SAASkvD,OAASyB,EAAWgB,IAAM,EACzCv6C,EAAMpX,SAASmvD,UAAYwB,EAAWr6C,OAAS,EAC/CyB,EAAO+4C,cAAc15C,IAUvB4T,EAAU+nC,WAAa,GACvB/nC,EAAU5B,MAtWA,aAuWV4B,EAAU9F,YAAc,GACxB8F,EAAUgoC,aAAe,EACzBhoC,EAAUioC,SAAW,GACrBjoC,EAAUkoC,iBAAmB,GAC7BloC,EAAUmoC,uBAAyB,EACnCnoC,EAAUooC,QAAS,EACnBpoC,EAAU8nC,2BAAwB78D,EAClC+0B,EAAUqoC,kBAAep9D,EACzB+0B,EAAUsoC,iBAAcr9D,CAC1B,CACF,EAMJ,SAASstB,EAAS7mB,GAEhB,IAAMsD,EAAW5K,OAAOyR,OAAOkqD,EAAqBr0D,IAKpD,OAHAsD,EAASujB,SAAWnuB,OAAOyR,OAAO,CAAC,EAAG7G,GAG/B,CACLhJ,KA7XkB,kBA8XlBQ,QAASkF,EAAKlF,QACd+7D,aAAa,EACbr7D,MAAOqiC,EAAW79B,GAClBsD,SAAAA,EAEJ,CAMA,SAASu6B,EAAW79B,GAClB,OFlbuBiK,EEkbP,CACdnP,QAASkF,EAAKlF,QACdR,KAAM,UACN8+B,WAAYp5B,EAAKo5B,WACjBj0B,SAAU,IFpbL2M,EAAI7H,EAAgB,QAAVuzB,EAAkB+T,EAAAA,GAAMlkC,EAAAA,KEsbtC7R,MFxbE,IAAkByO,EAAMuzB,CEyb/B,CAwBA,SAASjtB,EAAQvQ,GACf,MAAM,IAAIjG,MAAM,mBAAqBiG,EAAK1F,KAAO,SACnD,CAmBA,SAAS+5D,EAAqBr0D,GAC5B,IAAMF,GAAQsoD,EAAAA,EAAAA,IAAWpoD,GACnBG,GAAMkoD,EAAAA,EAAAA,IAASroD,GAErB,MAAO,CACLqyD,UAAWvyD,EAAMC,KACjBuyD,SAAUxyD,EAAMN,OAChB6/C,YAAav/C,EAAM8Z,OACnB24C,QAASpyD,EAAIJ,KACbyyD,OAAQryD,EAAIX,OACZizD,UAAWtyD,EAAIyZ,OAEnB,CCjhBe,SAASk9C,IAAwB,IAAd/4D,EAAU,UAAH,6CAAG,CAAC,EAC3C,OAAO,SAACkM,EAAM4mB,GAGZ,OADoC9kB,EAAI9B,EAAM4mB,EAAM9yB,EAEtD,CACF,oJCpBMg5D,EAAW,0CACXC,EACJ,6GAKIC,EAAM,IAAIxhE,OAAO,MAAQuhE,EAAW,MAAQD,EAAW,KACvDG,EAAM,IAAIzhE,OAAO,MAAQshE,EAAW,MAAQC,EAAW,uCCYtD,IAAM3yD,GAAUi1B,EAAAA,EAAAA,KCChB,SAAS69B,EAAWzqC,EAAO1sB,GAChC,IAKIo3D,EAEAC,EAPEl9B,EAASzN,EAAMyN,OACfgM,EAAWzZ,EAAMyZ,SACjBmxB,EAAmB5qC,EAAMusB,UACzBse,EAAwB7qC,EAAM6qC,sBAMpC,GAAIlzD,EAAQrE,IAASA,EAAKo5B,WAAY,CACpC,IAAM9sB,EAAOtM,EAAKo5B,WAAWoF,SAAWx+B,EAAKo5B,WAAW9sB,KAClDhS,EAAO0F,EAAKo5B,WAAW9+B,MAAQ,OAC/B6pC,EAAMqzB,EAAYx3D,QAEXzG,IAAT+S,GAA+B,OAATA,IACxBogB,EAAMyZ,SAAWzsC,OAAO4S,GACxB+qD,GAAQ,GAGNl9B,GAA2B,SAAjBA,EAAOqD,OACqB,SAApCx9B,EAAKo5B,WAAWuK,kBAClBjX,EAAM6qC,uBAAwB,EAC9BF,GAAQ,IAGNnuD,EAAAA,EAAAA,GAAUlJ,EAAM,SAClB0sB,EAAMyN,OAASoX,EAAAA,GACf8lB,GAAQ,GAKE,QAARlzB,EACFizB,EAAcjzB,EAGN,QAARA,GAES,SAARA,IAAkBj7B,EAAAA,EAAAA,GAAUlJ,EAAM,SAE1B,SAARmkC,IAAkBj7B,EAAAA,EAAAA,GAAUlJ,EAAM,UAAqB,QAAT1F,EAE/C88D,EAAc,OAEG,SAARjzB,IAAkBj7B,EAAAA,EAAAA,GAAUlJ,EAAM,WACvCkJ,EAAAA,EAAAA,GAAUlJ,EAAM,YAElBo3D,EAAcK,GAAQh7D,EAAAA,EAAAA,GAASuD,MAE/BkJ,EAAAA,EAAAA,GAAUlJ,EAAM,UACN,UAAT1F,GACU,WAATA,GACS,QAATA,GACS,SAATA,GAUF4uD,EAAAA,EAAAA,IAAMlpD,GA0Bd,SAA6BsR,GAC3B,GAAmB,SAAfA,EAAMhX,KAER,OADA88D,EAAcK,EAAQnmD,EAAM1Y,QACP8+D,EAAAA,GAAO,KAG9B,GACEpmD,IAAUtR,KACTkJ,EAAAA,EAAAA,GAAUoI,EAAO,CAAC,MAAO,SAAU,QAAS,aAC3CkmD,EAAYlmD,IAEd,OAAOy9C,EAAAA,EAEX,IA7CQqI,EAAcp3D,EAAKo5B,WAAWxgC,MAE1B6+D,EAAQz3D,EAAKo5B,WAAWxgC,OACxB,OAOJw+D,IACF1qC,EAAMusB,UAAYme,EAClBC,GAAQ,IAIH3qC,EAAM6qC,wBACb7qC,EAAM6qC,uBAAwB,EAC9BF,GAAQ,EAEZ,CAEA,OAAOA,EAEP,WACE3qC,EAAMyN,OAASA,EACfzN,EAAMyZ,SAAWA,EACjBzZ,EAAMusB,UAAYqe,EAClB5qC,EAAM6qC,sBAAwBA,CAChC,EAPuBhkD,CAwBzB,CAMA,SAASkkD,EAAQ7+D,GACf,IAAMQ,EFnHD,SAAmBR,GACxB,IAAMwH,EAAS1G,OAAOd,GAAS,IAC/B,OAAOq+D,EAAI7hE,KAAKgL,GAAU,MAAQ82D,EAAI9hE,KAAKgL,GAAU,MAAQ,SAC/D,CEgHiB64C,CAAUrgD,GACzB,MAAkB,YAAXQ,OAAuBG,EAAYH,CAC5C,CAMA,SAASo+D,EAAYx3D,GACnB,IAAMpH,EACJyL,EAAQrE,IAASA,EAAKo5B,YAA6C,kBAAxBp5B,EAAKo5B,WAAW+K,IACvDnkC,EAAKo5B,WAAW+K,IAAItpB,mBACpBthB,EAEN,MAAiB,SAAVX,GAA8B,QAAVA,GAA6B,QAAVA,EAC1CA,OACAW,CACN,CAEA,SAASga,IAAQ,CCzIjB,IAAMD,EAAM,CAAC,EAAErW,eAETmT,GAASC,EAAAA,EAAAA,GAAO,kBAAmB,CAEvCE,QAyBF,SAAwBonD,GACtB,MAAM,IAAI59D,MAAM,uBAAyB49D,EAAM98D,gBAAkB,IACnE,EAzBEyV,QA4BF,SAAiBqnD,EAAO33D,EAAMwK,EAAOiE,EAAQie,GAG3C,GAAIje,GAAoB,OAAVjE,EACZ,MAAM,IAAIzQ,MAAM,uDAKlB,IAAK2yB,EAAMwI,SACT,MAAM,IAAIn7B,MAAM,uBAGlB2yB,EAAMwI,SAASyiC,EAAO33D,EAAMwK,EAAOiE,EAAQie,GACtCA,EAAMrM,SAASu3C,EAAWD,EAAO33D,EAAMwK,EAAOiE,EAAQie,EAC7D,EA1CE5c,SAAU,CAER8M,KAAMg7C,EAEN,IAAKtmD,EAEL,IAuEJ,SAAyBqmD,EAAO5sD,EAAGP,EAAOiE,EAAQie,GAGhD,IAAKje,GAAoB,OAAVjE,EAAgB,OAC/BqtD,EAAcF,EAAOlpD,EAAQie,EAAOliB,EAAQ,GAAG,EACjD,EA1EI,IA6EJ,SAAwBmtD,EAAO5sD,EAAGP,EAAOiE,EAAQie,GAG/C,IAAKje,GAAoB,OAAVjE,EAAgB,OAC/BqtD,EAAcF,EAAOlpD,EAAQie,EAAOliB,EAAQ,EAC9C,KA7EO,SAASstD,EAAKH,EAAO33D,EAAMwK,EAAOiE,EAAQie,GAC/Ctc,EAAOunD,EAAO33D,EAAMwK,EAAOiE,EAAQie,EACrC,CA8BA,SAASkrC,EAAWD,EAAO33D,EAAMwK,EAAOiE,EAAQie,GAC9C,IAAMvP,EAAWuP,EAAMwI,SAEvBxI,EAAMwI,SAIN,SAASA,EAASyiC,EAAO33D,EAAMwK,EAAOiE,EAAQie,GAG5C,IAAKvP,EACH,MAAM,IAAIpjB,MAAM,uBAOlB,GAJA2yB,EAAMwI,SAAW/X,EACjBA,EAASw6C,EAAO33D,EAAMwK,EAAOiE,EAAQie,GACrCA,EAAMwI,SAAWA,EAEbxI,EAAM5a,KAAO4a,EAAM2qC,MAAO,OAE9B/lD,EAAMqmD,EAAO33D,EAAMwK,EAAOiE,EAAQie,EACpC,EAjBApb,EAAMqmD,EAAO33D,EAAMwK,EAAOiE,EAAQie,EAkBpC,CAGA,SAASpb,EAAMqmD,EAAO33D,EAAM+3D,EAAIC,EAAItrC,IF9E7B,SAAgB1sB,GAErB,OAAO3K,MAAMC,QAAQ0K,EAAKmF,SAC5B,EE4EOsJ,CAAOzO,IACiB,IAAzBA,EAAKmF,SAASxO,QAClBkhE,EAAcF,EAAO33D,EAAM0sB,EAC7B,CA2BA,SAASmrC,EAAcF,EAAOlpD,EAAQie,EAAOjL,EAAMw2C,GACjD,IAAM7nD,EAASsc,EAAMliB,MAmDrB,SAAexK,EAAM2qD,GACnB,IAAMuN,EAAiBC,EACjBC,EAAuB9kD,EAAIhW,KAAK8kD,EAAOpiD,EAAKlF,SAC9CsnD,EAAMpiD,EAAKlF,SACX,EAEJ2P,EAAMzK,EAAKlF,SAEXu9D,EAAQ79D,MAER,WAEEkyB,EAAM4rC,aAAeJ,EACrBxrC,EAAM6rC,UAAYH,EAGlB1rC,EAAM8rC,aAAeL,EACrBzrC,EAAM+rC,UAAYrW,EAAMpiD,EAAKlF,SAE7B+wB,EAAI7rB,EAAM2qD,EACZ,GACF,EAxEqC9+B,EAC/B1mB,EAAWsJ,EAAOtJ,SACpBgzD,EAAW,EACX3tD,GAAS,EAEP43C,EAAQ,CAAC,EAETiW,EAAU,GAMhB,QAHa9+D,IAATkoB,GAA+B,OAATA,IAAeA,EAAO,KAG5CA,GAAQtc,EAASxO,QAArB,CAGA,GAAI+1B,EAAMliB,MACR,OAASA,EAAQiX,GAAM,CACrB,IAAMnQ,EAAQnM,EAASqF,GACnBnG,EAAQiN,IAAQ7G,EAAM6G,EAAMxW,QAClC,CAKF,IAFA0P,EAAQiX,EAAO,IAENjX,EAAQrF,EAASxO,QAAQ,CAChC,IAAM2a,EAAQnM,EAASqF,GAGvB,GAAInG,EAAQiN,GAAQ,CAIlB,GAHAlB,EAAOkB,EAAO9G,GAGVkiB,EAAM5a,KAAO4a,EAAM2qC,MAAO,OAC9B,GAAIY,EAAkB,KACxB,CACF,CAEA,GAAIvrC,EAAMliB,MAGR,IAFAA,GAAS,IAEAA,EAAQ6tD,EAAQ1hE,QAEvB,GADA0hE,EAAQ7tD,KACJkiB,EAAM5a,KAAO4a,EAAM2qC,MAAO,MA9BC,CAiEnC,SAASxrC,EAAI7rB,EAAM2qD,GACjB,IAAM1/C,EAAOksD,EAAWzqC,EAAO1sB,GAI/B,IAAK0sB,EAAMwI,SACT,MAAM,IAAIn7B,MAAM,uBAGlB2yB,EAAMwI,SAASyiC,EAAO33D,EAAM2qD,EAAYl8C,EAAQie,GAChDzhB,GACF,CAKA,SAASR,EAAMtP,GACRmY,EAAIhW,KAAK8kD,EAAOjnD,KAAOinD,EAAMjnD,GAAQ,GAC1Cg9D,IACA/V,EAAMjnD,IACR,CACF,CCjKA,SAASytD,EAAQzpC,EAAOhY,GAStB,OAAO,SAAUuxD,EAAMC,GAUrB,IATA,IAAInoD,EAAOooD,EAAKF,EAAM,OAChBjoD,EAAQmoD,EACD,OAAXD,QAA8Bp/D,IAAXo/D,EAAuB,IAAMA,EAChD,SAGIE,EAAU,GACZC,GAAc,IAETA,EAAaroD,EAAM9Z,QAAQ,CAClC,IAAM47B,EAAQ9hB,EAAMqoD,GAAYj+C,cAGhC,GAAK1T,GAAoB,MAAVorB,EAAf,CAMA,IAJA,IAAIwmC,GAAa,EAEXr7C,EAAO,KAEJq7C,EAAYvoD,EAAK7Z,QACxB,GAAIwoB,EAAM3O,EAAKuoD,GAAWl+C,cAAe0X,GAAQ,CAE/C,IAAKprB,EACH,OACEqJ,EAAKuoD,GAITF,EAAQr+D,KAAKgW,EAAKuoD,GACpB,MACEr7C,EAAKljB,KAAKgW,EAAKuoD,IAInBvoD,EAAOkN,CArB+B,CAsBxC,CAIA,OACEvW,EAAS0xD,OAAUt/D,CAEvB,CACF,CAa2BqvD,GAAQ,SAAUoQ,EAAKzmC,GAChD,MAAiB,MAAVA,GAAiBymC,IAAQzmC,GAASymC,EAAI12D,SAASiwB,EAAQ,IAChE,IAAG,GAFI,IAgBM0mC,EAAiBrQ,GAAQ,SAAUoQ,EAAKzmC,GAEnD,IAAM/hB,EAAOwoD,EAAIv2D,MAAM,KACjBgO,EAAQ8hB,EAAM9vB,MAAM,KACtBs2D,EAAY,EACZD,EAAa,EAGjB,GAA0B,MAAtBroD,EAAMqoD,IAAuBtoD,EAAKuoD,KAAetoD,EAAMqoD,GACzD,OAAO,EAOT,IAJAC,IACAD,IAGOA,EAAaroD,EAAM9Z,QAExB,GAA0B,MAAtB8Z,EAAMqoD,GAAV,CAMA,IAAKtoD,EAAKuoD,GAAY,OAAO,EAG7B,GAAIvoD,EAAKuoD,KAAetoD,EAAMqoD,GAA9B,CAOA,GAA+B,IAA3BtoD,EAAKuoD,GAAWpiE,OAAc,OAAO,EAGzCoiE,GANA,MAHEA,IACAD,GARF,MAFEA,IAsBJ,OAAO,CACT,IAAG,GAcmBlQ,GAAQ,SAAUoQ,EAAKzmC,GAI3C,IAHA,IAAI9hB,EAAQ8hB,IAGC,CACX,GAAc,MAAV9hB,GAAiBuoD,IAAQvoD,EAAO,OAAO,EAE3C,IAAIjG,EAAQiG,EAAM7Q,YAAY,KAE9B,GAAI4K,EAAQ,EAAG,OAAO,EAEU,MAA5BiG,EAAMpX,OAAOmR,EAAQ,KAAYA,GAAS,GAE9CiG,EAAQA,EAAMzP,MAAM,EAAGwJ,EACzB,CACF,IAAG,GASH,SAASouD,EAAK/lD,EAAQ1X,GACpB,IAAMvC,EAAQia,GAA4B,kBAAXA,EAAsB,CAACA,GAAUA,EAEhE,IAAKja,GAA0B,kBAAVA,KAAwB,WAAYA,GACvD,MAAM,IAAImB,MACR,WAAaoB,EAAO,KAAOvC,EAAQ,gCAIvC,OAAOA,CACT,mCCpNMwX,GAASC,EAAAA,EAAAA,GAAO,OAAQ,CAE5BE,QA4fF,SAAuBonD,GACrB,GAAIA,EAAMx8D,KACR,MAAM,IAAIpB,MAAM,4BAA8B49D,EAAMx8D,KAAO,KAG7D,MAAM,IAAIpB,MAAM,kDAClB,EAjgBEuW,QAofF,WACE,MAAM,IAAIvW,MAAM,0BAClB,EArfE+V,SAAU,CAER3L,IAAK00D,EAEL,WAgIJ,SAAiB9tD,EAAG1G,GAClB,OACE6E,EAAAA,EAAAA,GAAU7E,EAAS,CAAC,IAAK,OAAQ,WAAY80B,EAAAA,EAAAA,GAAY90B,EAAS,OAEtE,EAlIIgH,MAySJ,SAAeN,EAAG1G,GAChB,OAAQ60D,EAAa70D,GAMrB,SAAeiN,GACb,MACiB,YAAfA,EAAMhX,MAAsC,SAAfgX,EAAMhX,QAAoB4F,EAAAA,EAAAA,GAAWoR,EAEtE,GACF,EAnTI4J,QAuIJ,SAAiBnQ,EAAG1G,GAClB,IAAI6E,EAAAA,EAAAA,GAAU7E,EAAS,CAAC,QAAS,aAC/B,OAAO+C,QACL/C,EAAQ+0B,aACuB,aAA5B/0B,EAAQ+0B,WAAW9+B,MACU,UAA5B+J,EAAQ+0B,WAAW9+B,QACrB6+B,EAAAA,EAAAA,GAAY90B,EAAS,YAI3B,IAAI6E,EAAAA,EAAAA,GAAU7E,EAAS,UACrB,OAAO80B,EAAAA,EAAAA,GAAY90B,EAAS,YAG9B,OAAO,CACT,EApJI8/B,IA8JJ,SAAawzB,EAAOI,EAAIC,EAAImB,EAAIzsC,GAC9B,OAAOA,EAAMusB,YAAc0e,EAAM/+D,KACnC,EA9JIyrC,SAAAA,EAEA+0B,MAgRJ,SAAeruD,EAAG1G,GAChB,OAAQ60D,EAAa70D,GAMrB,SAAeiN,GACb,MAAsB,YAAfA,EAAMhX,MAAqC,SAAfgX,EAAMhX,IAC3C,GACF,EAxRI++D,QAqLJ,SAAiB1B,EAAOtzD,GACtB,OAAQggC,EAASszB,EAAOtzD,EAC1B,EArLI,cAmTJ,SAAoBszD,EAAOI,EAAIC,EAAImB,EAAIzsC,GAErC,OADA4sC,EAAW5sC,EAAOirC,GACY,IAAvBjrC,EAAM4rC,YACf,EApTI,gBA0aJ,SAAqBX,EAAOI,EAAIC,EAAImB,EAAIzsC,GAEtC,OADA4sC,EAAW5sC,EAAOirC,GACS,IAApBjrC,EAAM6rC,SACf,EA3aI99B,IA8fJ,SAAak9B,EAAOtzD,EAAS2zD,EAAImB,EAAIzsC,GACnC,IAAMrM,EAAUqM,EAAMrM,QAChBvO,EAAM4a,EAAM5a,IACZynD,EAAgB7sC,EAAM6sC,cACtB3gE,EAmBR,SAAqBA,GAEnB,IAAMuB,EACW,YAAfvB,EAAM0B,KAAqB,CAACA,KAAM,YAAaC,UAAW,CAAC3B,IAAUA,EACnE4R,GAAS,EAEb,OAASA,EAAQrQ,EAASI,UAAU5D,QAAQ,CAC1C,IAAM8D,EAAON,EAASI,UAAUiQ,GAAO/P,KACvCA,EAAKI,gBAAkB,KAGpBJ,EAAKtE,SACkB,IAAxBsE,EAAKtE,QAAQQ,QACY,UAAzB8D,EAAKtE,QAAQ,GAAGgF,OAEhBhB,EAASI,UAAUiQ,GAAS,CAC1BlQ,KAAM,UAENG,KAAM,CAACH,KAAM,OAAQG,KAAAA,EAAMtE,QAAS,CAAC,CAACgF,KAAM,YAGlD,CAEA,OAAOhB,CACT,CA3CgBq/D,CAAY7B,EAAM/+D,OAEhC8zB,EAAMrM,SAAU,EAChBqM,EAAM5a,KAAM,EACZ4a,EAAM6sC,cAAgB,CAACl1D,GAEvB,IAAMjL,EAAS+K,EAAIvL,EAAOyL,EAASqoB,GAAO/1B,OAAS,EAMnD,OAJA+1B,EAAMrM,QAAUA,EAChBqM,EAAM5a,IAAMA,EACZ4a,EAAM6sC,cAAgBA,EAEfngE,CACT,EA7gBIkT,KA0TJ,SAAcqrD,EAAOI,EAAIC,EAAImB,EAAIzsC,GAC/B,MACqB,KAAnBA,EAAMyZ,eACa5sC,IAAnBmzB,EAAMyZ,UACa,OAAnBzZ,EAAMyZ,UAEN8yB,EAAevsC,EAAMyZ,UAAUrL,EAAAA,EAAAA,GAAO68B,EAAM/+D,QAAQjC,OAAS,CAEjE,EAhUI,aA0UJ,SAAmBghE,EAAOI,EAAIC,EAAImB,EAAIzsC,GAEpC,OADA4sC,EAAW5sC,EAAOirC,GACXvwD,QACLslB,EAAM8rC,cAAgB9rC,EAAM4rC,eAAiB5rC,EAAM8rC,aAAe,EAEtE,EA7UI,eA+aJ,SAAoBb,EAAOI,EAAIC,EAAImB,EAAIzsC,GAErC,OADA4sC,EAAW5sC,EAAOirC,GAEW,kBAApBjrC,EAAM6rC,WACc,kBAApB7rC,EAAM+rC,WACb/rC,EAAM6rC,YAAc7rC,EAAM+rC,UAAY,CAE1C,EApbII,QAAAA,EAEAY,IA2FJ,SAAa9B,EAAOtzD,EAASmG,EAAOiE,EAAQie,GAC1C,OAAQmsC,EAAQlB,EAAOtzD,EAASmG,EAAOiE,EAAQie,EACjD,EA3FI,YA8VJ,SAAkBirC,EAAOI,EAAIC,EAAImB,EAAIzsC,GAEnC,OADA4sC,EAAW5sC,EAAOirC,GAEc,kBAAvBjrC,EAAM4rC,cAA6BX,EAAM/+D,MAAM8zB,EAAM4rC,aAEhE,EAjWI,iBA2WJ,SAAsBX,EAAOI,EAAIC,EAAImB,EAAIzsC,GAEvC,OADA4sC,EAAW5sC,EAAOirC,GACXvwD,QACyB,kBAAvBslB,EAAM8rC,cACmB,kBAAvB9rC,EAAM4rC,cACbX,EAAM/+D,MAAM8zB,EAAM8rC,aAAe9rC,EAAM4rC,aAAe,GAE5D,EAhXI,cA0XJ,SAAmBX,EAAOI,EAAIC,EAAImB,EAAIzsC,GAEpC,OADA4sC,EAAW5sC,EAAOirC,GACgB,kBAApBjrC,EAAM6rC,WAA0BZ,EAAM/+D,MAAM8zB,EAAM6rC,UAClE,EA3XI,mBAqYJ,SAAuBZ,EAAOI,EAAIC,EAAImB,EAAIzsC,GAExC,OADA4sC,EAAW5sC,EAAOirC,GAEW,kBAApBjrC,EAAM+rC,WACc,kBAApB/rC,EAAM6rC,WACbZ,EAAM/+D,MAAM8zB,EAAM+rC,UAAY,EAAI/rC,EAAM6rC,UAE5C,EA1YI,aAyUJ,SAAmBZ,EAAOI,EAAIC,EAAImB,EAAIzsC,GAEpC,OADA4sC,EAAW5sC,EAAOirC,GACY,IAAvBjrC,EAAM8rC,YACf,EA1UI,eAgbJ,SAAoBb,EAAOI,EAAIC,EAAImB,EAAIzsC,GAErC,OADA4sC,EAAW5sC,EAAOirC,GACS,IAApBjrC,EAAM+rC,SACf,EAjbIiB,SA4KJ,SAAkB/B,EAAOtzD,GACvB,OAAQ0oC,EAAS4qB,EAAOtzD,EAC1B,EA5KI,YAoMJ,SAAkBszD,EAAOtzD,EAASmG,EAAOiE,EAAQie,GAC/C,OAAQitC,EAAUhC,EAAOtzD,EAASmG,EAAOiE,EAAQie,EACnD,EApMI,aAAcitC,EAEd5sB,SAAAA,EAEA1+B,KA0MJ,SAActD,EAAG1G,EAAS0zD,EAAItpD,EAAQie,GACpC,OAAOtlB,UACHqH,GAA0B,SAAhBA,EAAOnU,OACjBoyB,EAAMyN,SACkB,SAAvBzN,EAAMyN,OAAOqD,OAA2C,QAAvB9Q,EAAMyN,OAAOqD,SAC/Ct0B,EAAAA,EAAAA,GAAU7E,EAAS,CAAC,OAAQ,QAElC,EA/MI+oC,MAyNJ,SAAeriC,EAAG1G,EAAS0zD,EAAIC,EAAItrC,GACjC,OAAOtlB,SACL8B,EAAAA,EAAAA,GAAU7E,IACRqoB,EAAM6sC,eACN7sC,EAAM6sC,cAAcj3D,SAAS+B,GAEnC,KAtMO,SAASvN,EAAO6gE,EAAOtzD,EAASmG,EAAOiE,EAAQie,GAIpD,IAHA,IAAMv2B,EAAUwhE,EAAMxhE,QAClByjB,GAAU,IAELA,EAASzjB,EAAQQ,QACxB,IAAKyZ,EAAOja,EAAQyjB,GAASvV,EAASmG,EAAOiE,EAAQie,GAAQ,OAAO,EAGtE,OAAO,CACT,CAUA,SAASmsC,EAAQlB,EAAOtzD,EAAS0zD,EAAIC,EAAItrC,GACvC,IAAMrM,EAAUqM,EAAMrM,QAChBvO,EAAM4a,EAAM5a,IAElB4a,EAAMrM,SAAU,EAChBqM,EAAM5a,KAAM,EAEZ,IAAM1Y,EAAS+K,EAAIwzD,EAAM/+D,MAAOyL,EAASqoB,GAAO,KAAOroB,EAKvD,OAHAqoB,EAAMrM,QAAUA,EAChBqM,EAAM5a,IAAMA,EAEL1Y,CACT,CAgEA,SAASirC,EAASt5B,EAAG1G,GACnB,OACE6E,EAAAA,EAAAA,GAAU7E,EAAS,CACjB,SACA,QACA,SACA,WACA,WACA,SACA,WACA,eACI80B,EAAAA,EAAAA,GAAY90B,EAAS,WAE/B,CAgBA,SAAS0oC,EAAShiC,EAAG1G,GACnB,OACE6E,EAAAA,EAAAA,GAAU7E,EAAS,CAAC,QAAS,WAAY,aACzC80B,EAAAA,EAAAA,GAAY90B,EAAS,WAEzB,CAmBA,SAASs1D,EAAU5uD,EAAG1G,EAAS0zD,EAAIC,EAAItrC,GACrC,OAAOxjB,EAAAA,EAAAA,GAAU7E,EAAS,CAAC,QAAS,eAC/B80B,EAAAA,EAAAA,GAAY90B,EAAS,eAAgB80B,EAAAA,EAAAA,GAAY90B,EAAS,YAC3D+C,QAAQslB,EAAM6qC,sBACpB,CA4PA,SAAS2B,EAAa70D,EAAS8a,GAI7B,IAHA,IAAMha,EAAWd,EAAQc,SACrBqF,GAAS,IAEJA,EAAQrF,EAASxO,QACxB,GAAIwoB,EAAMha,EAASqF,IAAS,OAAO,EAGrC,OAAO,CACT,CAuBA,SAAS8uD,EAAW5sC,EAAOirC,GACzB,GAAIjrC,EAAMrM,QACR,MAAM,IAAItmB,MAAM,gBAAkB49D,EAAMx8D,KAAO,mBAEnD,CA9cArE,EAAO8iE,WAAa,CAClB,cACA,gBACA,aACA,eACA,YACA,iBACA,cACA,mBACA,aACA,wCChFIxpD,GAASC,EAAAA,EAAAA,GAAO,WAAY,CAEhCE,QAmLF,SAAyBonD,GACvB,MAAM,IAAI59D,MAAM,qBAAuB49D,EAAMngE,SAAW,IAC1D,EAnLE8Y,QA4CF,SAAgBvF,EAAG1G,EAAS8f,GAC1B,OAAOgV,EAAAA,EAAAA,GAAY90B,EAAS8f,EAAK3iB,SACnC,EA7CEsO,SAAU,CAER,IAqDJ,SAAe6nD,EAAOtzD,EAAS8f,GAC7B,OAAO/c,SACL+xB,EAAAA,EAAAA,GAAY90B,EAAS8f,EAAK3iB,WACxB6C,EAAQ+0B,YACRygC,EAAex1D,EAAQ+0B,WAAWjV,EAAK3iB,UAAW2iB,KAAUwzC,EAAM/+D,MAExE,EAzDI,KAmEJ,SAA4B++D,EAAOtzD,EAAS8f,GAC1C,IAAMvrB,EAAQyL,EAAQ+0B,YAAc/0B,EAAQ+0B,WAAWjV,EAAK3iB,UAE5D,OAGI2iB,EAAK0W,gBACLjiC,GACiB,kBAAVA,GACP++D,EAAM/+D,OACNA,EAAM0J,SAASq1D,EAAM/+D,SAGtBugC,EAAAA,EAAAA,GAAY90B,EAAS8f,EAAK3iB,WACzBq4D,EAAejhE,EAAOurB,KAAUwzC,EAAM/+D,KAE5C,EAjFI,KA2FJ,SAAuB++D,EAAOtzD,EAAS8f,GACrC,IAAMvrB,EAAQihE,EACZx1D,EAAQ+0B,YAAc/0B,EAAQ+0B,WAAWjV,EAAK3iB,UAC9C2iB,GAGF,OAAO/c,SACL+xB,EAAAA,EAAAA,GAAY90B,EAAS8f,EAAK3iB,WACxBm2D,EAAM/+D,QACLA,IAAU++D,EAAM/+D,OACdA,EAAMoI,MAAM,EAAG22D,EAAM/+D,MAAMjC,UAAYghE,EAAM/+D,OACP,MAArCA,EAAMS,OAAOs+D,EAAM/+D,MAAMjC,SAEnC,EAtGI,KAgHJ,SAAgBghE,EAAOtzD,EAAS8f,GAC9B,OAAO/c,SACL+xB,EAAAA,EAAAA,GAAY90B,EAAS8f,EAAK3iB,WACxB6C,EAAQ+0B,YACRu+B,EAAM/+D,OACNihE,EAAex1D,EAAQ+0B,WAAWjV,EAAK3iB,UAAW2iB,GAAMnjB,MACtD,EACA22D,EAAM/+D,MAAMjC,UACRghE,EAAM/+D,MAElB,EAxHI,KAkIJ,SAAc++D,EAAOtzD,EAAS8f,GAC5B,OAAO/c,SACL+xB,EAAAA,EAAAA,GAAY90B,EAAS8f,EAAK3iB,WACxB6C,EAAQ+0B,YACRu+B,EAAM/+D,OACNihE,EAAex1D,EAAQ+0B,WAAWjV,EAAK3iB,UAAW2iB,GAAMnjB,OACrD22D,EAAM/+D,MAAMjC,UACTghE,EAAM/+D,MAElB,EAzII,KAmJJ,SAAkB++D,EAAOtzD,EAAS8f,GAChC,OAAO/c,SACL+xB,EAAAA,EAAAA,GAAY90B,EAAS8f,EAAK3iB,WACxB6C,EAAQ+0B,YACRu+B,EAAM/+D,OACNihE,EAAex1D,EAAQ+0B,WAAWjV,EAAK3iB,UAAW2iB,GAAM7hB,SACtDq1D,EAAM/+D,OAGd,KAmBA,SAASihE,EAAejhE,EAAOurB,GAC7B,MAAqB,mBAAVvrB,EACFurB,EAAK2Y,UAGVznC,MAAMC,QAAQsD,IACRurB,EAAK0W,eAAiBC,EAAAA,EAASF,EAAAA,GAAQhiC,GAG1Cc,OAAOd,EAChB,CCjMO,SAASxD,EAAKuiE,EAAO33D,EAAMwK,EAAOiE,EAAQie,GAC/C,OAAOtlB,QACL/C,EAAQrE,IACN0sB,EAAMyN,UACJw9B,EAAM78D,SClBP,SAAc68D,EAAOtzD,GAC1B,MAAyB,MAAlBszD,EAAM78D,SAAmB68D,EAAM78D,UAAYuJ,EAAQvJ,OAC5D,CDgByBK,CAAKw8D,EAAO33D,OAC7B23D,EAAM38D,YEnBP,SAAmB28D,EAAOtzD,GAG/B,IAAMzL,EAAQyL,EAAQ+0B,WAAWpyB,WAAa,GAC1CwD,GAAS,EAEb,GAAImtD,EAAM38D,WACR,OAASwP,EAAQmtD,EAAM38D,WAAWrE,QAChC,IAAKiC,EAAM0J,SAASq1D,EAAM38D,WAAWwP,IAAS,OAAO,EAIzD,OAAO,CACT,CFM4BxD,CAAU2wD,EAAO33D,OACrC23D,EAAM18D,IGpBP,SAAY08D,EAAOtzD,GACxB,OAAO+C,QAAQ/C,EAAQ+0B,YAAc/0B,EAAQ+0B,WAAWn+B,KAAO08D,EAAM18D,GACvE,CHkBoBA,CAAG08D,EAAO33D,OACtB23D,EAAMn8D,ODWP,SAAmBm8D,EAAOtzD,EAAS81B,GAIxC,IAHA,IAAM3+B,EAAQm8D,EAAMn8D,MAChBgP,GAAS,IAEJA,EAAQhP,EAAM7E,QACrB,IAAKyZ,EAAO5U,EAAMgP,GAAQnG,GAASusB,EAAAA,EAAAA,GAAKuJ,EAAQ3+B,EAAMgP,GAAOrP,OAC3D,OAAO,EAIX,OAAO,CACT,CCtBuB2hC,CAAU66B,EAAO33D,EAAM0sB,EAAMyN,YAC5Cw9B,EAAMxhE,SAAWW,EAAO6gE,EAAO33D,EAAMwK,EAAOiE,EAAQie,IAE5D,CIjBA,IAAMpyB,GAAO+V,EAAAA,EAAAA,GAAO,OAAQ,CAE1BE,QAwHF,SAAqBonD,GACnB,MAAM,IAAI59D,MAAM,iBAAmB49D,EAAMr9D,KAAO,IAClD,EAzHEgW,QA6HF,WACE,MAAM,IAAIvW,MAAM,eAClB,EA7HE+V,SAAU,CAACvV,UAoBb,SAAmBo9D,EAAO33D,EAAM0sB,GAC9B,IAAMotC,EAAY,IAAIC,EAAUrtC,EAAM5a,KAClCtH,GAAS,EAEb,OAASA,EAAQmtD,EAAMp9D,UAAU5D,QAC/BmjE,EAAUE,WAAWC,EAAQtC,EAAMp9D,UAAUiQ,GAAQxK,EAAM0sB,IAG7D,OAAOotC,EAAU1gE,MACnB,EA7BwB6gE,QAAAA,EAASx/D,KAAAA,KAS1B,SAAS0J,EAAIwzD,EAAO33D,EAAM0sB,GAE/B,OAAOirC,GAAS33D,EAAO1F,EAAKq9D,EAAO33D,EAAM0sB,GAAS,EACpD,CAyBA,SAASutC,EAAQtC,EAAO33D,EAAM0sB,GAC5B,OAAOjyB,EAAKk9D,EAAMl9D,KAAMuF,EAAM0sB,EAChC,CAQA,SAASjyB,EAAKk9D,EAAO1tD,EAAMyiB,GACzB,IAAMotC,EAAY,IAAIC,EAAUrtC,EAAM5a,KAEtC,GAAI4a,EAAMrM,SAAWs3C,EAAMl9D,KACzB,MAAM,IAAIV,MAAM,qCAqBlB,OAlBA+9D,EACEH,EACA1tD,EACA,EACA,KACAU,EAAUgtD,EAAO,CACfx9B,OAAwB,QAAhBzN,EAAM8Q,MAAkB+T,EAAAA,GAAMlkC,EAAAA,GACtC84B,cAAU5sC,EACV0/C,UAAW,MACXse,uBAAuB,EAEvBgC,cAA6B,SAAdtvD,EAAK3P,KAAkB2P,EAAK9E,SAAW,CAAC8E,GACvDirB,SASJ,SAAkByiC,EAAO33D,EAAMwK,EAAOiE,EAAQie,GAC5C,IAAMzhB,EAAOksD,EAAWzqC,EAAO1sB,GAE3B5K,EAAKuiE,EAAO33D,EAAMwK,EAAOiE,EAAQie,KAC/BirC,EAAMl9D,KACRq9D,EAAKH,EAAMl9D,KAAMuF,EAAMwK,EAAOiE,EAAQ9D,EAAUgtD,EAAMl9D,KAAMiyB,KAG5DotC,EAAUI,QAAQl6D,GAClB0sB,EAAM2qC,OAAQ,IAIlBpsD,GACF,EAtBI6G,IAAK4a,EAAM5a,IACXuO,QAASqM,EAAMrM,WAIZy5C,EAAU1gE,OAyBjB,SAASuR,EAAUgtD,EAAOjrC,GAIxB,IAHA,IAAMv2B,EAAUwhE,EAAMxhE,SAAW,GAC7BqU,GAAS,IAEJA,EAAQrU,EAAQQ,QACvB,GAAIG,EAAO8iE,WAAWt3D,SAASnM,EAAQqU,GAAOrP,MAAO,CACnDuxB,EAAMliB,OAAQ,EACd,KACF,CAGF,OAAOkiB,CACT,CACF,CAeC,IAEKqtC,EAAS,WAIb,WAAYjoD,IAAK,eAEf5b,KAAKkD,OAAS,GAEdlD,KAAK4b,IAAMA,EAEX5b,KAAKmhE,OAAQ,CACf,CA6BC,OA3BD,kCAKA,SAAWc,GAGT,IAFA,IAAI3tD,GAAS,IAEJA,EAAQ2tD,EAASxhE,QACxBT,KAAKgkE,QAAQ/B,EAAS3tD,GAE1B,GAEA,qBAKA,SAAQnG,GACN,GAAInO,KAAK4b,IAAK,CAGZ,GAAI5b,KAAKmhE,MAAO,OAChBnhE,KAAKmhE,OAAQ,CACf,CAEKnhE,KAAKkD,OAAOkJ,SAAS+B,IAAUnO,KAAKkD,OAAOoB,KAAK6J,EACvD,KAAC,EAxCY,aClJTnE,EAAa,IAAI+5B,IAAI,CAAC,EAAG,GAAI,GAAI,GAAI,KACrCkgC,EAAO,IAAI59D,WAAW,GACtB69D,EAAO,IAAI79D,WAAW,kBCuBd,SAAU89D,GAASC,GAC7B,OCPE,SACFC,GAEA,IAAMv4D,EAAIu4D,EAAO,GAEX/yD,EAAI+yD,EAAO,GAAK,EAStB,GAAI/yD,EAAI,GAAKxF,GAAK,EAAG,OAAOw4D,GAAAA,UAG5B,IAAW,IAAPx4D,EAAU,OAAO,SAACwI,GAAK,OAAKA,GAAShD,CAAC,EAC1C,GAAU,IAANxF,EAAS,OAAO,SAACwI,GAAK,OAAKA,IAAUhD,CAAC,EAE1C,GAAU,IAANxF,EAAS,OAAOwF,EAAI,EAAIgzD,GAAAA,SAAoB,SAAChwD,GAAK,OAAKA,GAAShD,CAAC,EAOrE,IAAMizD,EAAOtuD,KAAKuuD,IAAI14D,GAEhB24D,GAASnzD,EAAIizD,EAAQA,GAAQA,EAEnC,OAAOz4D,EAAI,EACL,SAACwI,GAAK,OAAKA,GAAShD,GAAKgD,EAAQiwD,IAASE,CAAI,EAC9C,SAACnwD,GAAK,OAAKA,GAAShD,GAAKgD,EAAQiwD,IAASE,CAAI,CACxD,CD3BW3hD,CDfL,SAAgBshD,GAGlB,GAAgB,UAFhBA,EAAUA,EAAQ7hE,OAAOoiB,eAGrB,MAAO,CAAC,EAAG,GACR,GAAgB,QAAZy/C,EACP,MAAO,CAAC,EAAG,GAKf,IAAIM,EAAM,EAEN54D,EAAI,EACJ64D,EAAOC,IACP92D,EAAS+2D,IAkBb,GAhBIH,EAAMN,EAAQ3jE,QAAkC,MAAxB2jE,EAAQjhE,OAAOuhE,KACvCA,IACA54D,EAAI64D,GAAc,OAAN72D,QAAM,IAANA,EAAAA,EAAU,GAEtB/J,IAEI2gE,EAAMN,EAAQ3jE,QACdkkE,EAAOC,IACP7gE,IACA+J,EAAS+2D,KAETF,EAAO72D,EAAS,GAKT,OAAXA,GAAmB42D,EAAMN,EAAQ3jE,OACjC,MAAM,IAAIoD,MAAK,yCAAmCugE,EAAO,OAG7D,MAAO,CAACt4D,EAAG64D,EAAO72D,GAElB,SAAS82D,IACL,MAA4B,MAAxBR,EAAQjhE,OAAOuhE,IACfA,KACQ,IAGgB,MAAxBN,EAAQjhE,OAAOuhE,IACfA,IAGG,EACX,CAEA,SAASG,IAIL,IAHA,IAAMj7D,EAAQ86D,EACVhiE,EAAQ,EAGRgiE,EAAMN,EAAQ3jE,QACd2jE,EAAQ/9D,WAAWq+D,IAAQT,GAC3BG,EAAQ/9D,WAAWq+D,IAAQR,GAE3BxhE,EAAgB,GAARA,GAAc0hE,EAAQ/9D,WAAWq+D,GAAOT,GAChDS,IAIJ,OAAOA,IAAQ96D,EAAQ,KAAOlH,CAClC,CAEA,SAASqB,IACL,KACI2gE,EAAMN,EAAQ3jE,QACduJ,EAAWu6B,IAAI6/B,EAAQ/9D,WAAWq+D,KAElCA,GAER,CACJ,CC9DmBziE,CAAMmiE,GACzB,CEfA,IAAMD,GAAWW,GAAAA,SAA2BA,GAEtCC,GAAM,IAAIhhC,IAAI,CAClB,YACA,iBACA,cACA,qBAGI5e,GAAS,IAAIplB,EAAAA,EAGb+iB,IAAU3I,EAAAA,EAAAA,GAAO,OAAQ,CAACP,SAAU,CAACvV,UAuB3C,SAAmBo9D,GACjB,IAAIntD,GAAS,EAEb,OAASA,EAAQmtD,EAAMp9D,UAAU5D,QAC/BqiB,GAAQ2+C,EAAMp9D,UAAUiQ,IAG1B,OAAOmtD,CACT,EA/BsDsC,QAqCtD,SAAiBtC,GACf,OAAOl9D,GAAKk9D,EAAMl9D,KACpB,EAvC+DA,KAAAA,MA6C/D,SAASA,GAAKk9D,GAIZ,IAHA,IAAMxhE,EAAUwhE,EAAMxhE,SAAW,GAC7BqU,GAAS,IAEJA,EAAQrU,EAAQQ,QAAQ,CAC/B,IAAMG,EAASX,EAAQqU,GAEnBywD,GAAIxgC,IAAI3jC,EAAOqE,QAEjBrE,EAAO8B,MAAQyhE,GAASvjE,EAAO8B,OAE/B9B,EAAOuE,UAAY,WAEvB,CAIA,OAFA2d,GAAQ2+C,EAAMl9D,MAEPk9D,CACT,CCrDO,SAASuD,GAAU/gE,EAAU6F,EAAMw9B,GACxC,OAAOr5B,EDDF,SAAehK,GACpB,GAAwB,kBAAbA,EACT,MAAM,IAAImF,UAAU,uCAAyCnF,EAAW,KAI1E,OAAO6e,GAAQqC,GAAOljB,MAAMgC,GAC9B,CCNahC,CAAMgC,GAAW6F,EAAM,CAACw9B,MAAAA,GACrC,CDVAniB,GAAO1jB,yBAAyB,IAAK,IAAK,IAAK,IAAK,KACpD0jB,GAAO7kB,wBAAwB,MAAO,UAAW,MAAO,OACxD6kB,GAAOhkB,yBAAyB,IAAK,IAAK,KExBnC,IAAM8jE,GAAgB,SAAhBA,IAAmE,IAAlD/wD,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAyB,GAAItD,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAe,GAQxE,OAPAsD,EAAK8jD,SAAQ,SAACluD,GACM,SAAdA,EAAK1F,KACPwM,GAAQ9G,EAAKpH,MACU,YAAdoH,EAAK1F,MAAsB0F,EAAKmF,UAAY9P,MAAMC,QAAQ0K,EAAKmF,YACxE2B,GAAQq0D,EAAcn7D,EAAKmF,UAE/B,IACO2B,CACT,EAgCA,GApB6D,SAAC/I,GAC5D,MAA8BA,GAAW,CAAC,EAAlC5D,EAAQ,EAARA,SAAUihE,EAAO,EAAPA,QAClB,OAAO,SAACnxD,GACN,GAAKmxD,GAA8B,oBAAZA,EACvB,GAAIjhE,GAAgC,kBAAbA,EAAvB,CACE,IAAMozC,EAAW2tB,GAAU/gE,EAAU8P,GACjCsjC,GAAYA,EAAS52C,OAAS,IAChCuyD,EAAAA,EAAAA,IAAMj/C,EAAMsjC,GAA6B,SAACvtC,EAAewK,EAAOiE,GAC9D2sD,EAAQp7D,EAAMwK,EAAOiE,EACvB,SAKJy6C,EAAAA,EAAAA,IAAMj/C,GAAM,SAACjK,EAA0BwK,EAAOiE,GAC5C2sD,EAAQp7D,EAAMwK,EAAOiE,EACvB,GACF,CACF,6FC5CajZ,EAAQ,0+PCAf8d,EAAM5a,OAAOuE,eAKEo+D,EAAU,WAI7B,cAAe,eAGbnlE,KAAKolE,YAELplE,KAAKqlE,OACP,CAsCC,OApCD,4BAcA,SAAM3iE,EAAO4iE,GAKX,IAJA,IAAMzxD,EAAO7T,KACTkD,EAqCD,SAAeR,EAAO4iE,GAC3B,GAAqB,kBAAV5iE,EAAoB,MAAO,GACjC4iE,IAAc5iE,EAAQA,EAAMiiB,eACjC,OAAOjiB,EAAMwG,QAAQ5J,EAAO,IAAI4J,QAAQ,KAAM,IAChD,CAzCiBq8D,CAAK7iE,GAAwB,IAAjB4iE,GACnBE,EAAetiE,EAEdka,EAAIhW,KAAKyM,EAAKuxD,YAAaliE,IAChC2Q,EAAKuxD,YAAYI,KACjBtiE,EAASsiE,EAAe,IAAM3xD,EAAKuxD,YAAYI,GAKjD,OAFA3xD,EAAKuxD,YAAYliE,GAAU,EAEpBA,CACT,GAEA,mBAKA,WACElD,KAAKolE,YAAc5iE,OAAO6hB,OAAO,KACnC,KAAC,EAhD4B,+CCUzBohD,EAAQ,IAAIC,EAOH,SAASC,IAAyB,IAAd99D,EAAU,UAAH,6CAAG,CAAC,EACtCooB,EAASpoB,EAAQooB,QAAU,GAEjC,OAAO,SAAClc,GACN0xD,EAAMJ,SAENrS,EAAAA,EAAAA,IAAMj/C,EAAM,WAAW,SAACjK,IAClBq5B,EAAAA,EAAAA,GAAYr5B,IAASA,EAAKo5B,cAAeD,EAAAA,EAAAA,GAAYn5B,EAAM,QAC7DA,EAAKo5B,WAAWn+B,GAAKkrB,EAASw1C,EAAMF,MAAKh/D,EAAAA,EAAAA,GAASuD,IAEtD,GACF,CACF,oECyBA,4BA1CM87D,EAAM,CACV7+C,SA4SF,SAAqBC,EAASe,EAAIiC,GAChC,OAGA,SAAepZ,GAEb,OADAoW,EAAQK,QAAQzW,GACTi1D,CACT,EAGA,SAASA,EAAGj1D,GACV,OAAa,KAATA,GAAwB,MAATA,GACjBoW,EAAQK,QAAQzW,GACTk1D,GAGF97C,EAAIpZ,EACb,CAGA,SAASk1D,EAAGl1D,GACV,OAAa,KAATA,GAAwB,MAATA,GACjBoW,EAAQK,QAAQzW,GACTm1D,GAGF/7C,EAAIpZ,EACb,CAGA,SAASm1D,EAAIn1D,GACX,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTyF,GAGF2T,EAAIpZ,EACb,CAGA,SAASyF,EAAMzF,GACb,OAAgB,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,GAAQoZ,EAAIpZ,GAAQmX,EAAGnX,EACpE,CACF,EAtVEwY,SAAS,GAEL48C,EAAS,CACbj/C,SAsVF,SAAwBC,EAASe,EAAIiC,GAEnC,IAAIi8C,EAGAC,EACJ,OAAOF,EAGP,SAASA,EAAOp1D,GACd,OAAa,KAATA,EACKoW,EAAQiC,MACbk9C,EACAh0C,EACAi0C,EAHKp/C,CAILpW,GAGS,KAATA,GAAwB,KAATA,EACVoW,EAAQiC,MAAMo9C,EAAal0C,EAAMi0C,EAAjCp/C,CAA0DpW,GAQxD,OAATA,IACA4b,EAAAA,EAAAA,IAAa5b,KACbmV,EAAAA,EAAAA,IAAkBnV,IACR,KAATA,IAAekV,EAAAA,EAAAA,IAAmBlV,GAE5BuhB,EAAKvhB,IAGdoW,EAAQK,QAAQzW,GACTo1D,EACT,CAGA,SAASI,EAAwBx1D,GAC/B,OAAa,KAATA,GACFs1D,EAAiCD,EACjCA,OAA6B5iE,EAC7B2jB,EAAQK,QAAQzW,GACTo1D,IAGI,KAATp1D,IAAaq1D,GAA6B,GAC9Cj/C,EAAQK,QAAQzW,GACTo1D,EACT,CAGA,SAAS7zC,EAAKvhB,GACZ,OAAKs1D,GAAmCD,EAIjCj8C,EAAIpZ,GAHFmX,EAAGnX,EAId,CACF,EAlZEwY,SAAS,GAEL/mB,EAAO,CACX0kB,SAkZF,SAAsBC,EAASe,GAC7B,IAAI0H,EAAU,EACd,OAAO62C,EAGP,SAASA,EAAO11D,GACd,OAAa,KAATA,EACKoW,EAAQiC,MACbk9C,EACAp+C,EACAw+C,EAHKv/C,CAILpW,IAGS,KAATA,GACF6e,IAGW,KAAT7e,EACKoW,EAAQiC,MACbo9C,EACAG,EACAD,EAHKv/C,CAILpW,GAGA61D,EAAQ71D,GACHmX,EAAGnX,GAGR81D,EAAoB91D,GACfoW,EAAQiC,MAAMo9C,EAAat+C,EAAIw+C,EAA/Bv/C,CAAqDpW,IAG9DoW,EAAQK,QAAQzW,GACT01D,GACT,CAGA,SAASC,EAAqB31D,GAE5B,OADAoW,EAAQK,QAAQzW,GACT01D,CACT,CAGA,SAASE,EAAe51D,GAEtB,QADA6e,EACiB,EAAI1H,EAAGnX,GAAQ21D,EAAqB31D,EACvD,CACF,EAlcEwY,SAAS,GAELi9C,EAAc,CAClBt/C,SAmeF,SAA6BC,EAASe,EAAIiC,GACxC,OAGA,SAAepZ,GAEb,OADAoW,EAAQK,QAAQzW,GACTyF,CACT,EAGA,SAASA,EAAMzF,GAEb,OAAI81D,EAAoB91D,IACtBoW,EAAQK,QAAQzW,GACTyF,GAIFowD,EAAQ71D,GAAQmX,EAAGnX,GAAQoZ,EAAIpZ,EACxC,CACF,EAtfEwY,SAAS,GAEL+8C,EAA0B,CAC9Bp/C,SA8bF,SAAyCC,EAASe,EAAIiC,GACpD,OAGA,SAAepZ,GAEb,OADAoW,EAAQK,QAAQzW,GACT+jB,CACT,EAGA,SAASA,EAAO/jB,GACd,OAAI0U,EAAAA,EAAAA,IAAW1U,IACboW,EAAQK,QAAQzW,GACT+jB,GAGI,KAAT/jB,GACFoW,EAAQK,QAAQzW,GACTyF,GAGF2T,EAAIpZ,EACb,CAGA,SAASyF,EAAMzF,GAGb,OAAO61D,EAAQ71D,GAAQmX,EAAGnX,GAAQoZ,EAAIpZ,EACxC,CACF,EA3dEwY,SAAS,GAELu9C,EAAc,CAClB5/C,SAwIF,SAA6BC,EAASe,EAAIiC,GACxC,IAAMnW,EAAO7T,KACb,OAGA,SAAe4Q,GACb,GACY,KAATA,GAAwB,MAATA,IACfg2D,EAAY/yD,EAAKoT,WAClB4/C,EAAmBhzD,EAAKkP,QAExB,OAAOiH,EAAIpZ,GAQb,OALAoW,EAAQhS,MAAM,mBACdgS,EAAQhS,MAAM,sBAIPgS,EAAQiC,MACb28C,EACA5+C,EAAQG,QAAQ6+C,EAAQh/C,EAAQG,QAAQ9kB,EAAM8vB,GAAOnI,GACrDA,EAHKhD,CAILpW,EACJ,EAGA,SAASuhB,EAAKvhB,GAGZ,OAFAoW,EAAQjS,KAAK,sBACbiS,EAAQjS,KAAK,mBACNgT,EAAGnX,EACZ,CACF,EAvKEqW,SAAU2/C,GAENE,EAAe,CACnB//C,SAuKF,SAA8BC,EAASe,EAAIiC,GACzC,IAAMnW,EAAO7T,KACb,OAGA,SAAe4Q,GACb,GACY,KAATA,GAAwB,MAATA,IACfm2D,EAAalzD,EAAKoT,WACnB4/C,EAAmBhzD,EAAKkP,QAExB,OAAOiH,EAAIpZ,GAMb,OAHAoW,EAAQhS,MAAM,mBACdgS,EAAQhS,MAAM,uBACdgS,EAAQK,QAAQzW,GACTo2D,CACT,EAGA,SAASA,EAAGp2D,GACV,OAAa,KAATA,GAAwB,MAATA,GACjBoW,EAAQK,QAAQzW,GACTq2D,GAGFj9C,EAAIpZ,EACb,CAGA,SAASq2D,EAAGr2D,GACV,OAAa,KAATA,GAAwB,MAATA,GACjBoW,EAAQK,QAAQzW,GACTiB,GAGFmY,EAAIpZ,EACb,CAGA,SAASiB,EAAEjB,GACT,OAAa,KAATA,GAAwB,MAATA,GACjBoW,EAAQK,QAAQzW,GACT3K,GAGF+jB,EAAIpZ,EACb,CAGA,SAAS3K,EAAE2K,GACT,OAAa,KAATA,GAAwB,MAATA,GACjBoW,EAAQK,QAAQzW,GACT4mD,GAGFA,EAAM5mD,EACf,CAGA,SAAS4mD,EAAM5mD,GACb,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTs2D,GAGFl9C,EAAIpZ,EACb,CAGA,SAASs2D,EAAOt2D,GACd,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTu2D,GAGFn9C,EAAIpZ,EACb,CAGA,SAASu2D,EAAOv2D,GACd,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTyF,GAGF2T,EAAIpZ,EACb,CAGA,SAASyF,EAAMzF,GACb,OAAgB,OAATA,IACL4b,EAAAA,EAAAA,IAAa5b,KACbmV,EAAAA,EAAAA,IAAkBnV,KAClBkV,EAAAA,EAAAA,IAAmBlV,GACjBoZ,EAAIpZ,GACJoW,EAAQG,QAAQ6+C,EAAQh/C,EAAQG,QAAQ9kB,EAAM8vB,GAAOnI,EAArDhD,CAA0DpW,EAChE,CAGA,SAASuhB,EAAKvhB,GAGZ,OAFAoW,EAAQjS,KAAK,uBACbiS,EAAQjS,KAAK,mBACNgT,EAAGnX,EACZ,CACF,EAhREqW,SAAU8/C,GAENK,EAAgB,CACpBrgD,SA8BF,SAA+BC,EAASe,EAAIiC,GAC1C,IAGIq9C,EAGAC,EANEzzD,EAAO7T,KAOb,OAGA,SAAe4Q,GACb,IACG22D,EAAS32D,KACT42D,EAAc3zD,EAAKoT,WACpB4/C,EAAmBhzD,EAAKkP,QAExB,OAAOiH,EAAIpZ,GAKb,OAFAoW,EAAQhS,MAAM,mBACdgS,EAAQhS,MAAM,wBACPyyD,EAAM72D,EACf,EAGA,SAAS62D,EAAM72D,GACb,OAAI22D,EAAS32D,IACXoW,EAAQK,QAAQzW,GACT62D,GAGI,KAAT72D,GACFoW,EAAQK,QAAQzW,GACT6J,GAGFuP,EAAIpZ,EACb,CAGA,SAAS6J,EAAM7J,GACb,OAAa,KAATA,EACKoW,EAAQiC,MAAMo9C,EAAal0C,EAAMu1C,EAAjC1gD,CAAkDpW,GAG9C,KAATA,GAAwB,KAATA,EACVoW,EAAQiC,MAAMo9C,EAAar8C,EAAK29C,EAAhC3gD,CAA8DpW,IAGnE4U,EAAAA,EAAAA,IAAkB5U,KACf02D,IAAyB5hD,EAAAA,EAAAA,IAAW9U,KACvC02D,GAAwB,GAG1BtgD,EAAQK,QAAQzW,GACT6J,GAGF0X,EAAKvhB,EACd,CAGA,SAAS82D,EAAgB92D,GAIvB,OAHAoW,EAAQK,QAAQzW,GAChBy2D,GAAS,EACTC,OAAwBjkE,EACjBoX,CACT,CAGA,SAASktD,EAA6B/2D,GAEpC,OADAoW,EAAQK,QAAQzW,GACTg3D,CACT,CAGA,SAASA,EAAsBh3D,GAC7B,OAAa,KAATA,EACKoW,EAAQiC,MAAMo9C,EAAar8C,EAAK09C,EAAhC1gD,CAAiDpW,GAGnD6J,EAAM7J,EACf,CAGA,SAASuhB,EAAKvhB,GACZ,OAAIy2D,IAAWC,GACbtgD,EAAQjS,KAAK,wBACbiS,EAAQjS,KAAK,mBACNgT,EAAGnX,IAGLoZ,EAAIpZ,EACb,CACF,EA5HEqW,SAAUugD,GAIN53D,EAAO,CAAC,EAGDi4D,EAAqB,CAChCj4D,KAAAA,GAEEgB,EAAO,GAEJA,EAAO,KACZhB,EAAKgB,GAAQw2D,EAEA,OADbx2D,EACiBA,EAAO,GACN,KAATA,IAAaA,EAAO,IA4d/B,SAAS81D,EAAoB91D,GAC3B,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,MAATA,CAEJ,CAMA,SAAS61D,EAAQ71D,GACf,OAAgB,OAATA,GAA0B,KAATA,IAAe2c,EAAAA,EAAAA,IAA0B3c,EACnE,CAMA,SAAS22D,EAAS32D,GAChB,OACW,KAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,IACA4U,EAAAA,EAAAA,IAAkB5U,EAEtB,CAGA,SAASg2D,EAAYh2D,GACnB,OACW,OAATA,GACS,KAATA,GACS,KAATA,GACS,KAATA,GACS,MAATA,IACA2c,EAAAA,EAAAA,IAA0B3c,EAE9B,CAGA,SAASm2D,EAAan2D,GACpB,OAAgB,OAATA,KAAkB0U,EAAAA,EAAAA,IAAW1U,EACtC,CAGA,SAAS42D,EAAc52D,GACrB,OAAgB,KAATA,GAAem2D,EAAan2D,EACrC,CAMA,SAASi2D,EAAmB9jD,GAI1B,IAHA,IAAIzO,EAAQyO,EAAOtiB,OACfyC,GAAS,EAENoR,KAAS,CACd,IAAMkQ,EAAQzB,EAAOzO,GAAO,GAE5B,IACkB,cAAfkQ,EAAMpgB,MAAuC,eAAfogB,EAAMpgB,QACpCogB,EAAMsP,UACP,CACA5wB,GAAS,EACT,KACF,CAGA,GAAIshB,EAAMsjD,8BAA+B,CACvC5kE,GAAS,EACT,KACF,CACF,CAQA,OANI6f,EAAOtiB,OAAS,IAAMyC,IAGxB6f,EAAOA,EAAOtiB,OAAS,GAAG,GAAGqnE,+BAAgC,GAGxD5kE,CACT,CAxjBA0M,EAAK,IAAMw3D,EACXx3D,EAAK,IAAMw3D,EACXx3D,EAAK,IAAMw3D,EACXx3D,EAAK,IAAMw3D,EACXx3D,EAAK,IAAM,CAACw3D,EAAeN,GAC3Bl3D,EAAK,KAAO,CAACw3D,EAAeN,GAC5Bl3D,EAAK,IAAM,CAACw3D,EAAeT,GAC3B/2D,EAAK,KAAO,CAACw3D,EAAeT,+CC3DtB1gC,EAAS,CACblf,SAmYF,SAAwBC,EAASe,EAAIiC,GACnC,IAAMnW,EAAO7T,KACb,OAAO8mB,EAAAA,EAAAA,GACLE,GAOF,SAAqBpW,GACnB,IAAMiU,EAAOhR,EAAKkP,OAAOlP,EAAKkP,OAAOtiB,OAAS,GAC9C,OAAOokB,GACY,gCAAjBA,EAAK,GAAGzgB,MACyC,IAAjDygB,EAAK,GAAGtB,eAAesB,EAAK,IAAI,GAAMpkB,OACpCsnB,EAAGnX,GACHoZ,EAAIpZ,EACV,GAZE,8BACA,EAYJ,EApZEwY,SAAS,GAMJ,SAAS2+C,IAAc,MAE5B,MAAO,CACLhrD,UAAU,UACP,GAAK,CACJgK,SAAUihD,EACV7/C,aAAc,CACZpB,SAAUkhD,GAEZlzD,KAAMmzD,IAGVt4D,MAAI,eACD,GAAK,CACJmX,SAAUohD,KACX,SACA,GAAK,CACJxyC,IAAK,QACL5O,SAAUqhD,EACV/1C,UAAWg2C,IACZ,GAGP,CAGA,SAASD,EAAiCphD,EAASe,EAAIiC,GAWrD,IAVA,IAQI6J,EAREhgB,EAAO7T,KACTsU,EAAQT,EAAKkP,OAAOtiB,OAIlB4qB,EAAUxX,EAAKsR,OAAOmjD,eAAiBz0D,EAAKsR,OAAOmjD,aAAe,IAKjEh0D,KAAS,CACd,IAAMkQ,EAAQ3Q,EAAKkP,OAAOzO,GAAO,GAEjC,GAAmB,eAAfkQ,EAAMpgB,KAAuB,CAC/ByvB,EAAarP,EACb,KACF,CAEA,GACiB,oBAAfA,EAAMpgB,MACS,cAAfogB,EAAMpgB,MACS,UAAfogB,EAAMpgB,MACS,UAAfogB,EAAMpgB,MACS,SAAfogB,EAAMpgB,KAEN,KAEJ,CAEA,OAGA,SAAewM,GACb,IAAKijB,IAAeA,EAAWC,UAC7B,OAAO9J,EAAIpZ,GAGb,IAAM7L,GAAK2f,EAAAA,EAAAA,GACT7Q,EAAK0P,eAAe,CAClB3Z,MAAOiqB,EAAW5pB,IAClBA,IAAK4J,EAAK6V,SAId,GAAyB,KAArB3kB,EAAGsB,WAAW,KAAcglB,EAAQjf,SAASrH,EAAG+F,MAAM,IACxD,OAAOkf,EAAIpZ,GAMb,OAHAoW,EAAQhS,MAAM,8BACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,8BACNgT,EAAGnX,EACZ,CACF,CAGA,SAASy3D,EAAkCtlD,EAAQjO,GAMjD,IALA,IAAIR,EAAQyO,EAAOtiB,OAKZ6T,KACL,GAC4B,eAA1ByO,EAAOzO,GAAO,GAAGlQ,MACI,UAArB2e,EAAOzO,GAAO,GACd,CACayO,EAAOzO,GAAO,GAC3B,KACF,CAIFyO,EAAOzO,EAAQ,GAAG,GAAGlQ,KAAO,OAC5B2e,EAAOzO,EAAQ,GAAG,GAAGlQ,KAAO,6BAE5B,IAAMgD,EAAO,CACXhD,KAAM,kBACNwF,MAAOpH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOzO,EAAQ,GAAG,GAAG1K,OAC9CK,IAAKzH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOA,EAAOtiB,OAAS,GAAG,GAAGwJ,MAGhD0L,EAAS,CACbvR,KAAM,wBACNwF,MAAOpH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOzO,EAAQ,GAAG,GAAGrK,KAC9CA,IAAKzH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOzO,EAAQ,GAAG,GAAGrK,MAG9C0L,EAAO1L,IAAIX,SACXqM,EAAO1L,IAAIyZ,SACX/N,EAAO1L,IAAIghB,eACX,IAAM3e,EAAS,CACblI,KAAM,wBACNwF,MAAOpH,OAAOyR,OAAO,CAAC,EAAG0B,EAAO1L,KAChCA,IAAKzH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOA,EAAOtiB,OAAS,GAAG,GAAGmJ,QAEhDghB,EAAQ,CACZxmB,KAAM,cACNmjB,YAAa,SACb3d,MAAOpH,OAAOyR,OAAO,CAAC,EAAG3H,EAAO1C,OAChCK,IAAKzH,OAAOyR,OAAO,CAAC,EAAG3H,EAAOrC,MAI1BzD,EAAc,CAElBuc,EAAOzO,EAAQ,GACfyO,EAAOzO,EAAQ,GACf,CAAC,QAASlN,EAAM0N,GAChBiO,EAAOzO,EAAQ,GACfyO,EAAOzO,EAAQ,GACf,CAAC,QAASqB,EAAQb,GAClB,CAAC,OAAQa,EAAQb,GACjB,CAAC,QAASxI,EAAQwI,GAClB,CAAC,QAAS8V,EAAO9V,GACjB,CAAC,OAAQ8V,EAAO9V,GAChB,CAAC,OAAQxI,EAAQwI,GACjBiO,EAAOA,EAAOtiB,OAAS,GACvBsiB,EAAOA,EAAOtiB,OAAS,GACvB,CAAC,OAAQ2G,EAAM0N,IAGjB,OADAiO,EAAOqB,OAAM,MAAbrB,EAAM,CAAQzO,EAAOyO,EAAOtiB,OAAS6T,EAAQ,GAAC,OAAK9N,IAC5Cuc,CACT,CAGA,SAASolD,EAAwBnhD,EAASe,EAAIiC,GAC5C,IAQI9V,EAREL,EAAO7T,KAIPqrB,EAAUxX,EAAKsR,OAAOmjD,eAAiBz0D,EAAKsR,OAAOmjD,aAAe,IACpE1vD,EAAO,EAIX,OAGA,SAAehI,GAKb,OAJAoW,EAAQhS,MAAM,mBACdgS,EAAQhS,MAAM,8BACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,8BACNwzD,CACT,EAGA,SAASA,EAAU33D,GACjB,OAAa,KAATA,EAAoBoZ,EAAIpZ,IAC5BoW,EAAQhS,MAAM,yBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,yBACbiS,EAAQhS,MAAM,yBACdgS,EAAQhS,MAAM,eAAeuS,YAAc,SACpCihD,EACT,CAGA,SAASA,EAAS53D,GAEhB,IAAI4T,EAEJ,OAAa,OAAT5T,GAA0B,KAATA,GAAegI,IAAS,IACpCoR,EAAIpZ,GAGA,KAATA,EACGsD,GAIL8S,EAAQjS,KAAK,eACbyP,EAAQwC,EAAQjS,KAAK,yBACdsW,EAAQjf,UAASsY,EAAAA,EAAAA,GAAoB7Q,EAAK0P,eAAeiB,KA0BpE,SAAa5T,GAKX,OAJAoW,EAAQhS,MAAM,8BACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,8BACbiS,EAAQjS,KAAK,mBACNgT,CACT,CA/BQ9d,CAAI2G,GACJoZ,EAAIpZ,IAPCoZ,EAAIpZ,IAUfoW,EAAQK,QAAQzW,IAEX2c,EAAAA,EAAAA,IAA0B3c,KAC7BsD,GAAO,GAGO,KAATtD,EAAc63D,EAAaD,EACpC,CAGA,SAASC,EAAW73D,GAClB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCoW,EAAQK,QAAQzW,GAChBgI,IACO4vD,GAGFA,EAAS53D,EAClB,CAUF,CAGA,SAASo3D,EAAwBhhD,EAASe,EAAIiC,GAC5C,IAOItP,EAIAxG,EAXEL,EAAO7T,KAIPqrB,EAAUxX,EAAKsR,OAAOmjD,eAAiBz0D,EAAKsR,OAAOmjD,aAAe,IAIpE1vD,EAAO,EAIX,OAGA,SAAehI,GAMb,OALAoW,EAAQhS,MAAM,yBAAyBiY,YAAa,EACpDjG,EAAQhS,MAAM,8BACdgS,EAAQhS,MAAM,oCACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,oCACN8e,CACT,EAGA,SAASA,EAAWjjB,GAClB,OAAa,KAATA,GACFoW,EAAQhS,MAAM,+BACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,+BACbiS,EAAQhS,MAAM,oCACP0D,GAGFsR,EAAIpZ,EACb,CAGA,SAAS8H,EAAQ9H,GAEf,IAAI4T,EAEJ,OAAa,OAAT5T,GAA0B,KAATA,GAAegI,EAAO,IAClCoR,EAAIpZ,GAGA,KAATA,EACGsD,GAILsQ,EAAQwC,EAAQjS,KAAK,oCACrB2F,GAAagK,EAAAA,EAAAA,GAAoB7Q,EAAK0P,eAAeiB,IACrDwC,EAAQhS,MAAM,oCACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,oCACbiS,EAAQjS,KAAK,8BACNka,GATEjF,EAAIpZ,IAYXiW,EAAAA,EAAAA,IAAmBjW,IACrBoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,cACb6D,IACOF,IAGTsO,EAAQhS,MAAM,eAAeuS,YAAc,SACpC9M,EAAM7J,GACf,CAGA,SAAS6J,EAAM7J,GACb,OACW,OAATA,IACAiW,EAAAA,EAAAA,IAAmBjW,IACV,KAATA,GACS,KAATA,GACAgI,EAAO,KAEPoO,EAAQjS,KAAK,eACN2D,EAAQ9H,MAGZ2c,EAAAA,EAAAA,IAA0B3c,KAC7BsD,GAAO,GAGT0E,IACAoO,EAAQK,QAAQzW,GACA,KAATA,EAAcof,EAAcvV,EACrC,CAGA,SAASuV,EAAYpf,GACnB,OAAa,KAATA,GAAwB,KAATA,GAAwB,KAATA,GAChCoW,EAAQK,QAAQzW,GAChBgI,IACO6B,GAGFA,EAAM7J,EACf,CAGA,SAASqe,EAAWre,GAClB,OAAa,KAATA,GACFoW,EAAQhS,MAAM,oBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,qBAIN+R,EAAAA,EAAAA,GAAaE,EAASmL,EAAM,oCAG9BnI,EAAIpZ,EACb,CAGA,SAASuhB,EAAKvhB,GAKZ,OAJKya,EAAQjf,SAASsO,IACpB2Q,EAAQ/mB,KAAKoW,GAGRqN,EAAGnX,EACZ,CACF,CAGA,SAASq3D,EAA+BjhD,EAASe,EAAIiC,GAEnD,OAAOhD,EAAQiC,MAAMkc,EAAAA,EAAWpd,EAAIf,EAAQG,QAAQ8e,EAAQle,EAAIiC,GAClE,CAGA,SAASk+C,EAAyBlhD,GAChCA,EAAQjS,KAAK,wBACf,mCCvXO,SAAS2zD,IAA+B,IAAd7gE,EAAU,UAAH,6CAAG,CAAC,EACtC8gE,EAAS9gE,EAAQ+gE,YACfxwC,EAAY,CAChBrR,SAAU8hD,EACVx+C,WAAYy+C,GAOd,OAJe,OAAXH,QAA8BtlE,IAAXslE,IACrBA,GAAS,GAGJ,CACL/4D,MAAM,UACH,IAAMwoB,GAET3R,WAAY,CACVC,KAAM,CAAC0R,IAETk3B,iBAAkB,CAChB5oC,KAAM,CAAC,OASX,SAASoiD,EAAwB/lD,EAAQjO,GAGvC,IAFA,IAAIR,GAAS,IAEJA,EAAQyO,EAAOtiB,QAEtB,GACuB,UAArBsiB,EAAOzO,GAAO,IACY,mCAA1ByO,EAAOzO,GAAO,GAAGlQ,MACjB2e,EAAOzO,GAAO,GAAG6X,OAIjB,IAFA,IAAI5H,EAAOjQ,EAEJiQ,KAEL,GACsB,SAApBxB,EAAOwB,GAAM,IACY,mCAAzBxB,EAAOwB,GAAM,GAAGngB,MAChB2e,EAAOwB,GAAM,GAAG2H,OAChBnJ,EAAOzO,GAAO,GAAGrK,IAAIyZ,OAASX,EAAOzO,GAAO,GAAG1K,MAAM8Z,SACnDX,EAAOwB,GAAM,GAAGta,IAAIyZ,OAASX,EAAOwB,GAAM,GAAG3a,MAAM8Z,OACrD,CACAX,EAAOzO,GAAO,GAAGlQ,KAAO,wBACxB2e,EAAOwB,GAAM,GAAGngB,KAAO,wBACvB,IAAM2kE,EAAgB,CACpB3kE,KAAM,gBACNwF,MAAOpH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOwB,GAAM,GAAG3a,OACzCK,IAAKzH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOzO,GAAO,GAAGrK,MAEpC2F,EAAO,CACXxL,KAAM,oBACNwF,MAAOpH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOwB,GAAM,GAAGta,KACzCA,IAAKzH,OAAOyR,OAAO,CAAC,EAAG8O,EAAOzO,GAAO,GAAG1K,QAGpC2iB,EAAa,CACjB,CAAC,QAASw8C,EAAej0D,GACzB,CAAC,QAASiO,EAAOwB,GAAM,GAAIzP,GAC3B,CAAC,OAAQiO,EAAOwB,GAAM,GAAIzP,GAC1B,CAAC,QAASlF,EAAMkF,KAGlBsP,EAAAA,EAAAA,GACEmI,EACAA,EAAW9rB,OACX,GACA4pB,EAAAA,EAAAA,GACEvV,EAAQqQ,OAAOiC,WAAWX,WAAWC,KACrC3D,EAAOjY,MAAMyZ,EAAO,EAAGjQ,GACvBQ,KAIJsP,EAAAA,EAAAA,GAAOmI,EAAYA,EAAW9rB,OAAQ,EAAG,CACvC,CAAC,OAAQmP,EAAMkF,GACf,CAAC,QAASiO,EAAOzO,GAAO,GAAIQ,GAC5B,CAAC,OAAQiO,EAAOzO,GAAO,GAAIQ,GAC3B,CAAC,OAAQi0D,EAAej0D,MAE1BsP,EAAAA,EAAAA,GAAOrB,EAAQwB,EAAO,EAAGjQ,EAAQiQ,EAAO,EAAGgI,GAC3CjY,EAAQiQ,EAAOgI,EAAW9rB,OAAS,EACnC,KACF,CAON,IAFA6T,GAAS,IAEAA,EAAQyO,EAAOtiB,QACQ,mCAA1BsiB,EAAOzO,GAAO,GAAGlQ,OACnB2e,EAAOzO,GAAO,GAAGlQ,KAAO,QAI5B,OAAO2e,CACT,CAGA,SAAS8lD,EAAsB7hD,EAASe,EAAIiC,GAC1C,IAAM/C,EAAWjnB,KAAKinB,SAChBlE,EAAS/iB,KAAK+iB,OAChBnK,EAAO,EACX,OAGA,SAAehI,GACb,GACe,MAAbqW,GACsC,oBAAtClE,EAAOA,EAAOtiB,OAAS,GAAG,GAAG2D,KAE7B,OAAO4lB,EAAIpZ,GAIb,OADAoW,EAAQhS,MAAM,kCACP6jB,EAAKjoB,EACd,EAGA,SAASioB,EAAKjoB,GACZ,IAAM4E,GAASwW,EAAAA,EAAAA,GAAkB/E,GAEjC,GAAa,MAATrW,EAEF,OAAIgI,EAAO,EAAUoR,EAAIpZ,IACzBoW,EAAQK,QAAQzW,GAChBgI,IACOigB,GAGT,GAAIjgB,EAAO,IAAM+vD,EAAQ,OAAO3+C,EAAIpZ,GACpC,IAAM4T,EAAQwC,EAAQjS,KAAK,kCACrBsB,GAAQ2V,EAAAA,EAAAA,GAAkBpb,GAGhC,OAFA4T,EAAM0H,OAAS7V,GAAoB,IAAVA,GAAenF,QAAQsE,GAChDgP,EAAM2H,QAAU3W,GAAsB,IAAXA,GAAgBtE,QAAQmF,GAC5C0R,EAAGnX,EACZ,CACF,CACF,CCxJO,IAAMo4D,EAAW,CACtB9zD,KAAM,CACJwR,KAAM,CACJK,SAqIN,SAAuBC,EAASe,EAAIiC,GAClC,IAOIi/C,EAGAC,EAVEr1D,EAAO7T,KAGPk4C,EAAQ,GACVixB,EAAmB,EAOvB,OAGA,SAAev4D,GAMb,GAJAoW,EAAQhS,MAAM,SAASo0D,OAASlxB,EAChClxB,EAAQhS,MAAM,aACdgS,EAAQhS,MAAM,YAED,MAATpE,EACF,OAAOy4D,EAAgBz4D,GAMzB,OAHAu4D,IACAniD,EAAQhS,MAAM,6BAEPs0D,EAAkB14D,EAC3B,EAGA,SAASy4D,EAAgBz4D,GAKvB,OAJAoW,EAAQhS,MAAM,oBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,oBACbk0D,GAAgB,EACTM,CACT,CAGA,SAASA,EAAc34D,GACrB,OAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,GAyD1C,SAAsBA,GACpB,GAAa,OAATA,EACF,OAAOoZ,EAAIpZ,GAGboW,EAAQjS,KAAK,YACbiS,EAAQjS,KAAK,aACb,IAAMy0D,EAAoB31D,EAAK6U,UAE/B,OADA7U,EAAK6U,WAAY,EACV1B,EAAQG,QACb,CACEJ,SAAU0iD,EACVrgD,SAAS,IAEX,SAAUxY,GAGR,OAFAiD,EAAK6U,UAAY8gD,EACjBxiD,EAAQhS,MAAM,qBACP00D,EAAoB94D,EAC7B,IACA,SAAUA,GAER,OADAiD,EAAK6U,UAAY8gD,EACVx/C,EAAIpZ,EACb,GAbKoW,CAcLpW,EACJ,CAhFW+4D,CAAa/4D,IAGlBoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GACTg5D,IAGLX,IACFA,OAAgB5lE,EAChB8lE,KAGW,MAATv4D,EACKy4D,EAAgBz4D,IAGzBoW,EAAQhS,MAAM,6BACPs0D,EAAkB14D,IAC3B,CAGA,SAASg5D,EAAiBh5D,GACxB,OAAIoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQK,QAAQzW,GACTg5D,IAGT5iD,EAAQjS,KAAK,cACNw0D,EAAc34D,GACvB,CAGA,SAAS04D,EAAkB14D,GAEzB,OAAa,OAATA,GAA0B,MAATA,IAAgB2c,EAAAA,EAAAA,IAA0B3c,IAC7DoW,EAAQjS,KAAK,6BACNw0D,EAAc34D,KAGvBoW,EAAQK,QAAQzW,GACA,KAATA,EAAci5D,EAA0BP,EACjD,CAGA,SAASO,EAAwBj5D,GAC/B,OAAa,KAATA,GAAwB,MAATA,GACjBoW,EAAQK,QAAQzW,GACT04D,GAGFA,EAAkB14D,EAC3B,CA8BA,SAAS84D,EAAoB94D,GAC3B,OAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,GAC/Bk5D,EAAgBl5D,IAGrBoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GACTm5D,GAGI,KAATn5D,GACFoW,EAAQhS,MAAM,wBACdgS,EAAQK,QAAQzW,GAChBs4D,GAAU,EACVhxB,EAAM5zC,KAAK,QACJ0lE,GAGI,KAATp5D,GACFoW,EAAQhS,MAAM,2BACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,2BACbmjC,EAAM5zC,KAAK,QACJ2lE,GAGI,MAATr5D,GACFoW,EAAQhS,MAAM,oBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,oBACN20D,GAGF1/C,EAAIpZ,EACb,CAGA,SAASm5D,EAAsBn5D,GAC7B,OAAIoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQK,QAAQzW,GACTm5D,IAGT/iD,EAAQjS,KAAK,cACN20D,EAAoB94D,GAC7B,CAGA,SAASo5D,EAAkBp5D,GACzB,OAAa,KAATA,GACFoW,EAAQK,QAAQzW,GACTo5D,IAGThjD,EAAQjS,KAAK,wBAEA,KAATnE,GACFoW,EAAQhS,MAAM,2BACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,2BACbmjC,EAAMA,EAAMz3C,OAAS,GACS,SAA5By3C,EAAMA,EAAMz3C,OAAS,GAAgB,SAAW,QAC3CypE,GAGFR,EAAoB94D,GAC7B,CAGA,SAASq5D,EAAmBr5D,GAC1B,OAAa,KAATA,GACFoW,EAAQhS,MAAM,wBACdgS,EAAQK,QAAQzW,GAChBs4D,GAAU,EACHc,GAGFhgD,EAAIpZ,EACb,CAGA,SAASs5D,EAAoBt5D,GAC3B,OAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,GAC/Bk5D,EAAgBl5D,IAGrBoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GACTm5D,GAGI,MAATn5D,GACFoW,EAAQhS,MAAM,oBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,oBACN20D,GAGF1/C,EAAIpZ,EACb,CAGA,SAASk5D,EAAgBl5D,GAIvB,OAHAoW,EAAQjS,KAAK,qBAGRm0D,GAAWC,IAAqBjxB,EAAMz3C,OAI9B,OAATmQ,EACKu5D,EAAWv5D,GAGboW,EAAQiC,MACbmhD,EACAD,EACAnjD,EAAQG,QACN,CACEJ,SAAU0iD,EACVrgD,SAAS,IAEXtC,EAAAA,EAAAA,GAAaE,EAASqjD,EAAW,aAAc,GAC/CF,GATGnjD,CAWLpW,GAlBOoZ,EAAIpZ,EAmBf,CAGA,SAASu5D,EAAWv5D,GAElB,OADAoW,EAAQjS,KAAK,SACNgT,EAAGnX,EACZ,CAGA,SAASy5D,EAAUz5D,GAEjB,OADAoW,EAAQhS,MAAM,aACPs1D,EAAa15D,EACtB,CAGA,SAAS05D,EAAa15D,GAGpB,OAFAoW,EAAQhS,MAAM,YAED,MAATpE,EACK25D,EAAgB35D,IAGzBoW,EAAQhS,MAAM,6BAEPw1D,EAAkB55D,GAC3B,CAGA,SAAS25D,EAAgB35D,GAIvB,OAHAoW,EAAQhS,MAAM,oBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,oBACN01D,CACT,CAGA,SAASA,EAAc75D,GACrB,OAAa,OAATA,IAAiBiW,EAAAA,EAAAA,IAAmBjW,GAoD1C,SAAsBA,GAGpB,GAFAoW,EAAQjS,KAAK,YAEA,OAATnE,EACF,OAAO85D,EAAe95D,GAGxB,OAAOoW,EAAQiC,MACbmhD,EACAM,EACA1jD,EAAQG,QACN,CACEJ,SAAU0iD,EACVrgD,SAAS,IAEXtC,EAAAA,EAAAA,GAAaE,EAASsjD,EAAc,aAAc,GAClDI,GATG1jD,CAWLpW,EACJ,CAtEW+5D,CAAa/5D,IAGlBoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GACTg6D,GAGI,MAATh6D,EACK25D,EAAgB35D,IAGzBoW,EAAQhS,MAAM,6BACPw1D,EAAkB55D,GAC3B,CAGA,SAASg6D,EAAiBh6D,GACxB,OAAIoc,EAAAA,EAAAA,IAAcpc,IAChBoW,EAAQK,QAAQzW,GACTg6D,IAGT5jD,EAAQjS,KAAK,cACN01D,EAAc75D,GACvB,CAGA,SAAS45D,EAAkB55D,GAEzB,OAAa,OAATA,GAA0B,MAATA,IAAgB2c,EAAAA,EAAAA,IAA0B3c,IAC7DoW,EAAQjS,KAAK,6BACN01D,EAAc75D,KAGvBoW,EAAQK,QAAQzW,GACA,KAATA,EAAci6D,EAA0BL,EACjD,CAGA,SAASK,EAAwBj6D,GAC/B,OAAa,KAATA,GAAwB,MAATA,GACjBoW,EAAQK,QAAQzW,GACT45D,GAGFA,EAAkB55D,EAC3B,CAyBA,SAAS85D,EAAe95D,GAEtB,OADAoW,EAAQjS,KAAK,aACNo1D,EAAWv5D,EACpB,CAGA,SAAS64D,EAAeziD,EAASe,EAAIiC,GACnC,OAGA,SAAepZ,GAIb,OAHAoW,EAAQhS,MAAM,cACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,eACN+R,EAAAA,EAAAA,GAAaE,EAAS4H,EAAU,aACzC,EAGA,SAASA,EAAShe,GAEhB,GACEiD,EAAKsR,OAAO4D,KAAKlV,EAAK6V,MAAM7f,OACnB,OAAT+G,IACAiW,EAAAA,EAAAA,IAAmBjW,GAEnB,OAAOoZ,EAAIpZ,GAGb,IAAMiU,EAAOhR,EAAKkP,OAAOlP,EAAKkP,OAAOtiB,OAAS,GAE9C,OACGoT,EAAKsR,OAAOiC,WAAWR,QAAQF,KAAKta,SAAS,iBAC9CyY,GACiB,eAAjBA,EAAK,GAAGzgB,MACRygB,EAAK,GAAGtB,eAAesB,EAAK,IAAI,GAAMpkB,QAAU,EAEzCupB,EAAIpZ,IAGbiD,EAAK06C,+BAAgC,EAC9BvnC,EAAQiC,MACbpV,EAAKsR,OAAOiC,WAAWlS,MACvB,SAAUtE,GAER,OADAiD,EAAK06C,+BAAgC,EAC9BvkC,EAAIpZ,EACb,IACA,SAAUA,GAER,OADAiD,EAAK06C,+BAAgC,EAC9BxmC,EAAGnX,EACZ,GATKoW,CAULpW,GACJ,CACF,CACF,EAtiBM0d,QAUN,SAAsBvL,EAAQjO,GAC5B,IAGIg2D,EAGAC,EAGAC,EAGA9jD,EAGAwH,EAGAu8C,EAGAC,EArBA52D,GAAS,EAuBb,OAASA,EAAQyO,EAAOtiB,QAAQ,CAC9B,IAAM+jB,EAAQzB,EAAOzO,GAAO,GAE5B,GAAI02D,IACiB,8BAAfxmD,EAAMpgB,OACR8iB,EAAeA,GAAgB5S,EAC/Boa,EAAapa,IAKG,qBAAfkQ,EAAMpgB,MAA8C,aAAfogB,EAAMpgB,OAC5CsqB,GACA,CACA,IAAMvkB,EAAU,CACd/F,KAAM,eACNwF,MAAOmZ,EAAOmE,GAAc,GAAGtd,MAC/BK,IAAK8Y,EAAO2L,GAAY,GAAGzkB,KAIvB2F,EAAO,CACXxL,KAAM,YACNwF,MAAOO,EAAQP,MACfK,IAAKE,EAAQF,IAEbsd,YAAa,QAEfxE,EAAOqB,OACL8C,EACAwH,EAAaxH,EAAe,EAC5B,CAAC,QAAS/c,EAAS2K,GACnB,CAAC,QAASlF,EAAMkF,GAChB,CAAC,OAAQlF,EAAMkF,GACf,CAAC,OAAQ3K,EAAS2K,IAEpBR,GAASoa,EAAaxH,EAAe,EACrCA,OAAe7jB,EACfqrB,OAAarrB,CACf,CAGF,GACuB,SAArB0f,EAAOzO,GAAO,SACAjR,IAAd4nE,GACAA,GAAaC,EAAgB,EAAI,GAAK52D,IACtB,qBAAfkQ,EAAMpgB,MACW,aAAfogB,EAAMpgB,OACJ6mE,EAAY,EAAI32D,GACe,eAA9ByO,EAAOkoD,GAAW,GAAG7mE,OAC3B,CACA,IAAM6tD,EAAO,CACX7tD,KAAM2mE,EACF,iBACAD,EACA,cACA,YACJlhE,MAAOmZ,EAAOkoD,GAAW,GAAGrhE,MAC5BK,IAAK8Y,EAAOzO,GAAO,GAAGrK,KAExB8Y,EAAOqB,OAAO9P,GAAwB,qBAAfkQ,EAAMpgB,KAA8B,EAAI,GAAI,EAAG,CACpE,OACA6tD,EACAn9C,IAEFiO,EAAOqB,OAAO6mD,EAAW,EAAG,CAAC,QAAShZ,EAAMn9C,IAE5Cm2D,GADA32D,GAAS,GACW,EACpB42D,GAAgB,CAClB,CAEmB,aAAf1mD,EAAMpgB,OACR4mE,EAA6B,UAArBjoD,EAAOzO,GAAO,MAGpB22D,EAAY32D,EAAQ,EACpB42D,GAAgB,GAID,sBAAf1mD,EAAMpgB,OACR2mE,EAAsC,UAArBhoD,EAAOzO,GAAO,MAG7B22D,EAAY32D,EAAQ,EACpB42D,GAAgB,GAID,cAAf1mD,EAAMpgB,OACR0mE,EAA8B,UAArB/nD,EAAOzO,GAAO,GAE3B,CAEA,OAAOyO,CACT,KA7HMqnD,EAAsB,CAC1BrjD,SAoiBF,SAAqCC,EAASe,EAAIiC,GAChD,IAAIpR,EAAO,EACX,OAGA,SAAehI,GAMb,OAHAoW,EAAQhS,MAAM,SAEdgS,EAAQK,QAAQzW,GACT5G,CACT,EAGA,SAASA,EAAW4G,GAClB,OAAc,IAAVA,GAAwB,KAATA,GACjBoW,EAAQK,QAAQzW,GAEA,MADhBgI,EACoBmP,EAAK/d,GAGd,OAAT4G,IAAiB2c,EAAAA,EAAAA,IAA0B3c,GACtCmX,EAAGnX,GAGLoZ,EAAIpZ,EACb,CACF,EA/jBEwY,SAAS,GCfX,IAAM+hD,EAAgB,CACpBpkD,SASF,SAA+BC,EAASe,EAAIiC,GAC1C,IAAMnW,EAAO7T,KACb,OAGA,SAAc4Q,GACZ,GAEoB,OAAlBiD,EAAKoT,WAEJpT,EAAK4kB,mCAEN,OAAOzO,EAAIpZ,GAOb,OAJAoW,EAAQhS,MAAM,iBACdgS,EAAQhS,MAAM,uBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,uBACN4f,CACT,EAGA,SAASA,EAAO/jB,GAGd,OAAI2c,EAAAA,EAAAA,IAA0B3c,IAC5BoW,EAAQhS,MAAM,+BACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,+BACN0P,GAGI,KAAT7T,GAAwB,MAATA,GACjBoW,EAAQhS,MAAM,6BACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,6BACN0P,GAGFuF,EAAIpZ,EACb,CAGA,SAAS6T,EAAM7T,GACb,OAAa,KAATA,GACFoW,EAAQhS,MAAM,uBACdgS,EAAQK,QAAQzW,GAChBoW,EAAQjS,KAAK,uBACbiS,EAAQjS,KAAK,iBACNiS,EAAQiC,MACb,CACElC,SAAUqkD,GAEZrjD,EACAiC,IAIGA,EAAIpZ,EACb,CACF,GApEay6D,EAAkB,CAC7Bz7D,MAAM,UACH,GAAKu7D,IAqEV,SAASC,EAAkBpkD,EAASe,EAAIiC,GACtC,IAAMnW,EAAO7T,KACb,OAAO8mB,EAAAA,EAAAA,GAAaE,GAGpB,SAAepW,GACb,IAAMiU,EAAOhR,EAAKkP,OAAOlP,EAAKkP,OAAOtiB,OAAS,GAC9C,OAEIokB,GAAyB,eAAjBA,EAAK,GAAGzgB,OAGhByiB,EAAAA,EAAAA,IAAmBjW,KACV,OAATA,EACEmX,EAAGnX,GACHoZ,EAAIpZ,EAEZ,GAfoC,aAgBtC,CCzEO,SAAS06D,EAAIzjE,GAClB,OAAOqjB,EAAAA,EAAAA,GAAkB,CACvB28C,EACAE,IACAW,EAAiB7gE,GACjBmhE,EACAqC,GAEJ,CC/BO,SAASE,EAAO7oE,EAAO0R,GAC5B,IAAMlK,EAAS1G,OAAOd,GAEtB,GAAyB,kBAAd0R,EACT,MAAM,IAAIhL,UAAU,sBAMtB,IAHA,IAAImL,EAAQ,EACRD,EAAQpK,EAAO8B,QAAQoI,IAET,IAAXE,GACLC,IACAD,EAAQpK,EAAO8B,QAAQoI,EAAWE,EAAQF,EAAU3T,QAGtD,OAAO8T,CACT,sCCgBM6I,EAAM,CAAC,EAAErW,eAYFykE,EAcT,SAAUz3D,EAAM2mB,EAAMxxB,EAASrB,GAE7B,IAAI6R,EAEAuqB,EAEgB,kBAATvJ,GAAqBA,aAAgBn7B,QAE9C0kC,EAAS,CAAC,CAACvJ,EAAMxxB,IACjBwQ,EAAW7R,IAEXo8B,EAASvJ,EAEThhB,EAAWxQ,GAGRwQ,IACHA,EAAW,CAAC,GAOd,IAJA,IAAM+xD,GAAU9Q,EAAAA,EAAAA,GAAQjhD,EAAS64C,QAAU,IACrCmZ,EAsHZ,SAAiBznC,GAEf,IAAM/gC,EAAS,GAEf,GAAsB,kBAAX+gC,EACT,MAAM,IAAI76B,UAAU,sCAGtB,GAAIjK,MAAMC,QAAQ6kC,GAGhB,IAFA,IAAI3vB,GAAS,IAEJA,EAAQ2vB,EAAOxjC,QACtByC,EAAOoB,KAAK,CACVqnE,EAAa1nC,EAAO3vB,GAAO,IAC3Bs3D,EAAW3nC,EAAO3vB,GAAO,UAGxB,CAEL,IAAI/M,EAEJ,IAAKA,KAAO08B,EACN7mB,EAAIhW,KAAK68B,EAAQ18B,IACnBrE,EAAOoB,KAAK,CAACqnE,EAAapkE,GAAMqkE,EAAW3nC,EAAO18B,KAGxD,CAEA,OAAOrE,CACT,CAnJoB2oE,CAAQ5nC,GAClB6nC,GAAa,IAERA,EAAYJ,EAAMjrE,SACzBsrE,EAAAA,EAAAA,IAAah4D,EAAM,OAAQqlD,GAG7B,OAAOrlD,EAGP,SAASqlD,EAAQtvD,EAAMkiE,GAKrB,IAJA,IAEIC,EAFA33D,GAAS,IAIJA,EAAQ03D,EAAQvrE,QAAQ,CAC/B,IAAM8X,EAAgCyzD,EAAQ13D,GAE9C,GACEm3D,EACElzD,EAEA0zD,EAAcA,EAAYh9D,SAASjD,QAAQuM,QAAUlV,EACrD4oE,GAGF,OAGFA,EAAc1zD,CAChB,CAEA,GAAI0zD,EAEF,OASJ,SAAiBniE,EAAMkiE,GACrB,IAUIriE,EAVE4O,EAASyzD,EAAQA,EAAQvrE,OAAS,GAClCi6B,EAAOgxC,EAAMI,GAAW,GACxB5iE,EAAUwiE,EAAMI,GAAW,GAC7BliE,EAAQ,EAEN0K,EAAQiE,EAAOtJ,SAASjD,QAAQlC,GAClCoiE,GAAS,EAETlnC,EAAQ,GAIZtK,EAAK7O,UAAY,EAEjB,IAAIpiB,EAAQixB,EAAK7vB,KAAKf,EAAKpH,OAE3B,KAAO+G,GAAO,CACZE,EAAWF,EAAM6K,MAEjB,IAAM63D,EAAc,CAClB73D,MAAO7K,EAAM6K,MACb2H,MAAOxS,EAAMwS,MACb1G,MAAO,GAAF,eAAMy2D,GAAO,CAAEliE,KAElBpH,EAAQwG,EAAO,qBAAIO,GAAK,QAAE0iE,KAM9B,GAJqB,kBAAVzpE,IACTA,EAAQA,EAAMjC,OAAS,EAAI,CAAC2D,KAAM,OAAQ1B,MAAAA,QAASW,IAGvC,IAAVX,EAAiB,CAQO,MAA1B,GAPIkH,IAAUD,GACZq7B,EAAM1gC,KAAK,CACTF,KAAM,OACN1B,MAAOoH,EAAKpH,MAAMoI,MAAMlB,EAAOD,KAI/BxK,MAAMC,QAAQsD,IAChB,EAAAsiC,GAAM1gC,KAAI,gBAAI5B,SACLA,GACTsiC,EAAM1gC,KAAK5B,GAGbkH,EAAQD,EAAWF,EAAM,GAAGhJ,OAC5ByrE,GAAS,CACX,CAEA,IAAKxxC,EAAK0xC,OACR,MAGF3iE,EAAQixB,EAAK7vB,KAAKf,EAAKpH,MACzB,CAEA,GAAIwpE,EAAQ,OACNtiE,EAAQE,EAAKpH,MAAMjC,QACrBukC,EAAM1gC,KAAK,CAACF,KAAM,OAAQ1B,MAAOoH,EAAKpH,MAAMoI,MAAMlB,MAGpD,EAAA2O,EAAOtJ,UAASmV,OAAM,SAAC9P,EAAO,GAAC,eAAK0wB,IACtC,MACEA,EAAQ,CAACl7B,GAGX,OAAOwK,EAAQ0wB,EAAMvkC,MACvB,CA5EWuiB,CAAQlZ,EAAMkiE,EAEzB,CA2EF,EA0CJ,SAASL,EAAajxC,GACpB,MAAuB,kBAATA,EAAoB,IAAIn7B,OCnPzB,SAA4B+M,GAC1C,GAAsB,kBAAXA,EACV,MAAM,IAAIlD,UAAU,qBAKrB,OAAOkD,EACLpD,QAAQ,sBAAuB,QAC/BA,QAAQ,KAAM,QACjB,CDyO+CmjE,CAAO3xC,GAAO,KAAOA,CACpE,CAMA,SAASkxC,EAAW1iE,GAClB,MAA0B,oBAAZA,EAAyBA,EAAU,kBAAMA,CAAO,CAChE,CE7OA,IAAMsR,EAAc,WACdwB,GAAiB,CAAC,WAAY,OAAQ,QAAS,SAGxCswD,GAAiC,CAC5CxuD,WAAY,CAqEd,SAAsC/J,GACpCy3D,EACEz3D,EACA,CACE,CAAC,kDAAmDw4D,IACpD,CAAC,oCAAqCC,KAExC,CAACja,OAAQ,CAAC,OAAQ,kBAEtB,GA7EEv9C,MAAO,CACLy3D,gBAmCJ,SAA8BjoD,GAC5BxkB,KAAKgV,MAAM,CAAC5Q,KAAM,OAAQqS,MAAO,KAAM7K,IAAK,GAAIqD,SAAU,IAAKuV,EACjE,EApCIkoD,qBAAsBC,GACtBC,oBAAqBD,GACrBE,mBAAoBF,IAEtB53D,KAAM,CACJ03D,gBAwDJ,SAA6BjoD,GAC3BxkB,KAAK+U,KAAKyP,EACZ,EAzDIkoD,qBAkDJ,SAAkCloD,GAChCxkB,KAAKkc,OAAOnH,KAAKqJ,cAAchX,KAAKpH,KAAMwkB,EAC5C,EAnDIooD,oBAqCJ,SAAiCpoD,GAC/BxkB,KAAKkc,OAAOnH,KAAKmJ,iBAAiB9W,KAAKpH,KAAMwkB,EAC/C,EAtCIqoD,mBAyCJ,SAAgCroD,GAC9BxkB,KAAKkc,OAAOnH,KAAKb,KAAK9M,KAAKpH,KAAMwkB,GACCxkB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC5DmL,IAAM,UAAY5L,KAAKujB,eAAeiB,EAC7C,IAxCasoD,GAA+B,CAC1Cz3D,OAAQ,CACN,CACEjB,UAAW,IACXoB,OAAQ,aACRa,MAAO,YACPmE,YAAAA,EACAwB,eAAAA,IAEF,CACE5H,UAAW,IACXoB,OAAQ,OACRa,MAAO,YACPmE,YAAAA,EACAwB,eAAAA,IAEF,CAAC5H,UAAW,IAAKoB,OAAQ,OAAQa,MAAO,MAAOmE,YAAAA,EAAawB,eAAAA,MAUhE,SAAS2wD,GAA0BnoD,GACjCxkB,KAAKkc,OAAOlH,MAAMkJ,iBAAiB9W,KAAKpH,KAAMwkB,EAChD,CA6CA,SAAS+nD,GAAQ13D,EAAGk4C,EAAUiZ,EAAQ3jE,EAAMoH,GAC1C,IAAIwmB,EAAS,GAGb,IAAKhJ,GAASxd,GACZ,OAAO,EAUT,GANI,MAAMvK,KAAK6tD,KACbiZ,EAASjZ,EAAWiZ,EACpBjZ,EAAW,GACX98B,EAAS,YAuDb,SAAyB+1C,GACvB,IAAMtgE,EAAQsgE,EAAOz5D,MAAM,KAE3B,GACE7G,EAAMjF,OAAS,GACdiF,EAAMA,EAAMjF,OAAS,KACnB,IAAIvB,KAAKwG,EAAMA,EAAMjF,OAAS,MAC5B,aAAavB,KAAKwG,EAAMA,EAAMjF,OAAS,MAC3CiF,EAAMA,EAAMjF,OAAS,KACnB,IAAIvB,KAAKwG,EAAMA,EAAMjF,OAAS,MAC5B,aAAavB,KAAKwG,EAAMA,EAAMjF,OAAS,KAE5C,OAAO,EAGT,OAAO,CACT,CApEOssE,CAAgB/G,GACnB,OAAO,EAGT,IAAMtgE,EAsER,SAAkBkG,GAChB,IAEIohE,EAEAC,EAEAC,EAEAC,EAREC,EAAY,sBAAsBviE,KAAKe,GAU7C,GAAIwhE,EAOF,IANAxhE,EAAMA,EAAId,MAAM,EAAGsiE,EAAU94D,OAE7B04D,GADAG,EAAQC,EAAU,IACQphE,QAAQ,KAClCihE,EAAgB1B,EAAO3/D,EAAK,KAC5BshE,EAAgB3B,EAAO3/D,EAAK,MAEE,IAAvBohE,GAA4BC,EAAgBC,GACjDthE,GAAOuhE,EAAMriE,MAAM,EAAGkiE,EAAoB,GAE1CA,GADAG,EAAQA,EAAMriE,MAAMkiE,EAAoB,IACdhhE,QAAQ,KAClCkhE,IAIJ,MAAO,CAACthE,EAAKuhE,EACf,CAjGgBE,CAASrH,EAAS3jE,GAEhC,IAAKqD,EAAM,GAAI,OAAO,EAGtB,IAAMxC,EAAS,CACbkB,KAAM,OACNqS,MAAO,KACP7K,IAAKqkB,EAAS88B,EAAWrnD,EAAM,GAC/BuJ,SAAU,CAAC,CAAC7K,KAAM,OAAQ1B,MAAOqqD,EAAWrnD,EAAM,MAGpD,OAAIA,EAAM,GACD,CAACxC,EAAQ,CAACkB,KAAM,OAAQ1B,MAAOgD,EAAM,KAGvCxC,CACT,CASA,SAASspE,GAAU33D,EAAG4yD,EAAOhtD,EAAOhR,GAClC,SAEGwd,GAASxd,GAAO,IAEjB,UAAUvK,KAAKub,KAKV,CACLrW,KAAM,OACNqS,MAAO,KACP7K,IAAK,UAAY67D,EAAQ,IAAMhtD,EAC/BxL,SAAU,CAAC,CAAC7K,KAAM,OAAQ1B,MAAO+kE,EAAQ,IAAMhtD,IAEnD,CA8DA,SAASwM,GAASxd,EAAO6jE,GACvB,IAAM18D,EAAOnH,EAAMwS,MAAM5V,WAAWoD,EAAM6K,MAAQ,GAElD,OACmB,IAAhB7K,EAAM6K,QACLyR,EAAAA,EAAAA,IAAkBnV,KAClBkV,EAAAA,EAAAA,IAAmBlV,OACnB08D,GAAkB,KAAT18D,EAEf,0BC5NO,SAAS4F,GAAY1M,GAC1B,OAAIA,EAAK2Q,QAAU3Q,EAAK4Q,WACf5Q,EAAK2Q,OAAS,IAGhB8qB,EAAAA,GAAAA,GAAaz7B,EAAK4Q,WAC3B,CCfO,SAAS6yD,GAAMC,GAIpB,IAAM3lE,EAAU2lE,GAAY,CAAC,EACvB9jD,EAAM7hB,EAAQ6hB,KAAO,CAAC,EACxB+jD,EAAY5lE,EAAQ4lE,WAAa,EACjC5jE,EAAO6f,EAAI7f,MAAQ,EACnBP,EAASogB,EAAIpgB,QAAU,EAE3B,MAAO,CAACokE,KA0BR,WAA0B,IAAZhrE,EAAQ,UAAH,6CAAG,GACdioB,EAASjoB,EAAM6J,MAAM,aACrBsY,EAAO8F,EAAOA,EAAOlqB,OAAS,GAIpC,OAHAoJ,GAAQ8gB,EAAOlqB,OAAS,EACxB6I,EACoB,IAAlBqhB,EAAOlqB,OAAe6I,EAASub,EAAKpkB,OAAS,EAAIokB,EAAKpkB,OAASgtE,EAC1D/qE,CACT,EAjCcmsD,QAOd,WACE,MAAO,CAACnlC,IAAK,CAAC7f,KAAAA,EAAMP,OAAAA,GAASmkE,UAAAA,EAC/B,EATuBE,MAgBvB,SAAejrE,GACb+qE,GAAa/qE,CACf,EAgBF,CCxCO,SAASkrE,GAAcr1D,EAAQzD,EAASwE,GAC7C,IAAMu0D,EAAa/4D,EAAQ+4D,WACrB5+D,EAAWsJ,EAAOtJ,UAAY,GAC9B6+D,EAAUP,GAAMj0D,GAEhB+B,EAAU,GACZ/G,GAAS,EAIb,IAFAu5D,EAAWvpE,MAAM,KAERgQ,EAAQrF,EAASxO,QAAQ,CAChC,IAAM2a,EAAQnM,EAASqF,GAEvBu5D,EAAWA,EAAWptE,OAAS,GAAK6T,EAEpC+G,EAAQ/W,KACNwpE,EAAQJ,KACN54D,EAAQoF,OAAOkB,EAAO7C,EAAQzD,GAAS,SACrCU,OAAQ,KACRa,MAAO,MACJy3D,EAAQjf,cAKE,SAAfzzC,EAAMhX,OACR0Q,EAAQi5D,oBAAiB1qE,GAGvBiR,EAAQrF,EAASxO,OAAS,GAC5B4a,EAAQ/W,KAAKwpE,EAAQJ,KAAKpyD,EAAQF,EAAOnM,EAASqF,EAAQ,KAE9D,CAIA,OAFAu5D,EAAWl0D,MAEJ0B,EAAQ1V,KAAK,IAOpB,SAAS2V,EAAQhB,EAAMC,GAGrB,IAFA,IAAIjG,EAAQQ,EAAQnP,KAAKlF,OAElB6T,KAAS,CACd,IAAMpR,EAAS4R,EAAQnP,KAAK2O,GAAOgG,EAAMC,EAAOhC,EAAQzD,GAExD,IAAe,IAAX5R,GAA8B,IAAXA,EACrB,MAGF,GAAsB,kBAAXA,EACT,MAAO,KAAK8S,OAAO,EAAI9S,GAGzB,IAAe,IAAXA,EACF,MAAO,uBAEX,CAEA,MAAO,MACT,CACF,CCxEA,IAAMyY,GAAM,YAOL,SAAS1G,GAAYvS,EAAOkD,GAQjC,IANA,IAII6D,EAJEvG,EAAS,GACX0G,EAAQ,EACRC,EAAO,EAIHJ,EAAQkS,GAAI9Q,KAAKnI,IACvBkZ,EAAIlZ,EAAMoI,MAAMlB,EAAOH,EAAM6K,QAC7BpR,EAAOoB,KAAKmF,EAAM,IAClBG,EAAQH,EAAM6K,MAAQ7K,EAAM,GAAGhJ,OAC/BoJ,IAKF,OAFA+R,EAAIlZ,EAAMoI,MAAMlB,IAET1G,EAAOyC,KAAK,IAKnB,SAASiW,EAAIlZ,GACXQ,EAAOoB,KAAKsB,EAAIlD,EAAOmH,GAAOnH,GAChC,CACF,CChCO,SAAS4V,GAAeE,GAC7B,IAAKA,EAAQqD,UAAW,CACtB,IAAMrG,GACHgD,EAAQE,QAAU,kBAAoB,KACtCF,EAAQhD,OAAS,MAAQgD,EAAQhD,OAAS,IAAM,IAEnDgD,EAAQqD,UAAY,IAAItc,QACrBiW,EAAS,IAAMA,EAAS,IAAM,KAC5B,sBAAsBtW,KAAKsZ,EAAQpE,WAAa,KAAO,IACxDoE,EAAQpE,WACPoE,EAAQnC,MAAQ,MAAQmC,EAAQnC,MAAQ,IAAM,IACjD,IAEJ,CAEA,OAAOmC,EAAQqD,SACjB,CCfO,SAASvG,GAAeC,EAAOiD,GACpC,OACEsD,GAAYvG,EAAOiD,EAAQgC,aAAa,KACvCsB,GAAYvG,EAAOiD,EAAQwD,gBAAgB,EAEhD,CAQA,SAASF,GAAYvG,EAAOyC,EAAM+D,GAChC,IAAK/D,EACH,OAAO+D,EAGW,kBAAT/D,IACTA,EAAO,CAACA,IAKV,IAFA,IAAI1D,GAAS,IAEJA,EAAQ0D,EAAKvX,QACpB,GAAI8U,EAAMnJ,SAAS4L,EAAK1D,IACtB,OAAO,EAIX,OAAO,CACT,CC1BO,SAASc,GAAKN,EAASmH,EAAOC,GAUnC,IATA,IAAMxZ,GAASwZ,EAAO1G,QAAU,KAAOyG,GAAS,KAAOC,EAAO7F,OAAS,IAEjE8F,EAAY,GAEZjZ,EAAS,GAETkZ,EAAQ,CAAC,EACX9H,GAAS,IAEJA,EAAQQ,EAAQO,OAAO5U,QAAQ,CACtC,IAAM+X,EAAU1D,EAAQO,OAAOf,GAE/B,GAAKgB,GAAeR,EAAQS,MAAOiD,GAQnC,IAJA,IAAMC,EAAaH,GAAeE,GAE9B/O,OAAK,EAEDA,EAAQgP,EAAW5N,KAAKnI,IAAS,CACvC,IAAM8S,EAAS,WAAYgD,GAAWtH,QAAQsH,EAAQE,SAChDrC,EAAQ,UAAWmC,EACnB7O,EAAWF,EAAM6K,OAASkB,EAAS/L,EAAM,GAAGhJ,OAAS,GAEvD0b,EAAU/P,SAASzC,IACjByS,EAAMzS,GAAU6L,SAAWA,IAC7B4G,EAAMzS,GAAU6L,QAAS,GAGvB4G,EAAMzS,GAAU0M,QAAUA,IAC5B+F,EAAMzS,GAAU0M,OAAQ,KAG1B8F,EAAU7X,KAAKqF,GACfyS,EAAMzS,GAAY,CAAC6L,OAAAA,EAAQa,MAAAA,GAE/B,CACF,CAEA8F,EAAUE,KAAKC,IAEf,IAAI1S,EAAQsS,EAAO1G,OAAS0G,EAAO1G,OAAO/U,OAAS,EAC7CwJ,EAAMvH,EAAMjC,QAAUyb,EAAO7F,MAAQ6F,EAAO7F,MAAM5V,OAAS,GAGjE,IAFA6T,GAAS,IAEAA,EAAQ6H,EAAU1b,QAAQ,CACjC,IAAMkJ,EAAWwS,EAAU7H,GAGvB3K,EAAWC,GAASD,GAAYM,IAQjCN,EAAW,EAAIM,GACdkS,EAAU7H,EAAQ,KAAO3K,EAAW,GACpCyS,EAAMzS,GAAU0M,QACf+F,EAAMzS,EAAW,GAAG6L,SACpB4G,EAAMzS,EAAW,GAAG0M,OACtB8F,EAAU7H,EAAQ,KAAO3K,EAAW,GACnCyS,EAAMzS,GAAU6L,SACf4G,EAAMzS,EAAW,GAAG6L,SACpB4G,EAAMzS,EAAW,GAAG0M,QAKrBzM,IAAUD,GAIZzG,EAAOoB,KAAKiY,GAAkB7Z,EAAMoI,MAAMlB,EAAOD,GAAW,OAG9DC,EAAQD,GAGN,iBAAiBzK,KAAKwD,EAAMS,OAAOwG,KACjCuS,EAAO5F,QAAW4F,EAAO5F,OAAOlK,SAAS1J,EAAMS,OAAOwG,KAMxDzG,EAAOoB,KACL,MAAQ5B,EAAM2D,WAAWsD,GAAUpD,SAAS,IAAIiW,cAAgB,KAElE5S,KANA1G,EAAOoB,KAAK,OAQhB,CAIA,OAFApB,EAAOoB,KAAKiY,GAAkB7Z,EAAMoI,MAAMlB,EAAOK,GAAMiS,EAAO7F,QAEvDnT,EAAOyC,KAAK,GACrB,CAOA,SAAS2W,GAAUxQ,EAAGwF,GACpB,OAAOxF,EAAIwF,CACb,CAOA,SAASiL,GAAkB7Z,EAAO2T,GAYhC,IAXA,IASI5M,EATEgP,EAAa,wBAEb0D,EAAY,GAEZd,EAAU,GACVoB,EAAQ/Z,EAAQ2T,EAClB/B,GAAS,EACT1K,EAAQ,EAIJH,EAAQgP,EAAW5N,KAAK4R,IAC9BN,EAAU7X,KAAKmF,EAAM6K,OAGvB,OAASA,EAAQ6H,EAAU1b,QACrBmJ,IAAUuS,EAAU7H,IACtB+G,EAAQ/W,KAAK5B,EAAMoI,MAAMlB,EAAOuS,EAAU7H,KAG5C+G,EAAQ/W,KAAK,MACbsF,EAAQuS,EAAU7H,GAKpB,OAFA+G,EAAQ/W,KAAK5B,EAAMoI,MAAMlB,IAElByR,EAAQ1V,KAAK,GACtB,CC5DO,SAASqoE,KAGd,OAFAxd,EAAkB75C,KA+BlB,WACE,MAAO,GACT,EA/BO,CAELtB,OAAQ,CAAC,CAACjB,UAAW,IAAKoG,YAAa,CAAC,WAAY,QAAS,eAC7DZ,SAAU,CAAC64C,mBAkCb,SAA4B3oD,EAAM+K,EAAGC,EAASwE,GAC5C,IAAMw0D,EAAUP,GAAMj0D,GAClB5W,EAAQorE,EAAQJ,KAAK,MACnB34D,EAAOD,EAAQE,MAAM,sBACrBU,EAAUZ,EAAQE,MAAM,SAkB9B,OAjBAtS,GAASorE,EAAQJ,KACft4D,GAAKN,EAAS0B,GAAY1M,IAAO,oBAC5BgkE,EAAQjf,WAAS,IACpBr5C,OAAQ9S,EACR2T,MAAO,QAGXX,IACAhT,GAASorE,EAAQJ,KACf,MAAQ5jE,EAAKmF,UAAYnF,EAAKmF,SAASxO,OAAS,EAAI,IAAM,KAE5DqtE,EAAQH,MAAM,GACdjrE,GAASorE,EAAQJ,KACfz4D,GAAY24D,GAAc9jE,EAAMgL,EAASg5D,EAAQjf,YAOnD,SAAahlD,EAAMyK,EAAOa,GACxB,GAAIb,EACF,OAAQa,EAAQ,GAAK,QAAUtL,EAGjC,OAAOA,CACT,KAXAkL,IAEOrS,CAUT,EAlEiC8tD,kBAAAA,IAOjC,SAASA,EAAkB1mD,EAAM+K,EAAGC,EAASwE,GAC3C,IAAMw0D,EAAUP,GAAMj0D,GAClB5W,EAAQorE,EAAQJ,KAAK,MACnB34D,EAAOD,EAAQE,MAAM,qBACrBU,EAAUZ,EAAQE,MAAM,aAW9B,OAVAtS,GAASorE,EAAQJ,KACft4D,GAAKN,EAAS0B,GAAY1M,IAAO,oBAC5BgkE,EAAQjf,WAAS,IACpBr5C,OAAQ9S,EACR2T,MAAO,QAGXX,IACAX,IACArS,GAASorE,EAAQJ,KAAK,IAExB,CA4CF,CC3JO,SAASO,GAAkB11D,EAAQzD,EAASwE,GACjD,IAAMu0D,EAAa/4D,EAAQ+4D,WACrB5+D,EAAWsJ,EAAOtJ,UAAY,GAE9BoM,EAAU,GACZ/G,GAAS,EACTkB,EAAS8D,EAAY9D,OAEzBq4D,EAAWvpE,MAAM,GAGjB,IAFA,IAAIwpE,EAAUP,GAAMj0D,KAEXhF,EAAQrF,EAASxO,QAAQ,CAChC,IAAM2a,EAAQnM,EAASqF,GAEnB+B,OAAK,EAIT,GAFAw3D,EAAWA,EAAWptE,OAAS,GAAK6T,EAEhCA,EAAQ,EAAIrF,EAASxO,OAAQ,CAE/B,IAAIyZ,EAASpF,EAAQoF,OAAON,SAAS3K,EAASqF,EAAQ,GAAGlQ,MACrD8V,GAAUA,EAAOvD,OAAMuD,EAASA,EAAOvD,MAC3CN,EAAQ6D,EACJA,EAAOjL,EAASqF,EAAQ,GAAIiE,EAAQzD,GAAS,SAC3CU,OAAQ,GACRa,MAAO,IACJy3D,EAAQjf,YACV1rD,OAAO,GACV,EACN,MACEkT,EAAQiD,EAAYjD,MAUpBgF,EAAQ5a,OAAS,IACL,OAAX+U,GAA8B,OAAXA,IACL,SAAf4F,EAAMhX,OAENiX,EAAQA,EAAQ5a,OAAS,GAAK4a,EAAQA,EAAQ5a,OAAS,GAAGyI,QACxD,cACA,KAEFsM,EAAS,KAGTs4D,EAAUP,GAAMj0D,IACRo0D,KAAKryD,EAAQ1V,KAAK,MAG5B0V,EAAQ/W,KACNwpE,EAAQJ,KACN54D,EAAQoF,OAAOkB,EAAO7C,EAAQzD,GAAS,oBAClCg5D,EAAQjf,WAAS,IACpBr5C,OAAAA,EACAa,MAAAA,OAKNb,EAAS6F,EAAQA,EAAQ5a,OAAS,GAAGqK,OAAO,EAC9C,CAIA,OAFA+iE,EAAWl0D,MAEJ0B,EAAQ1V,KAAK,GACtB,CC1EO,IAAMuoE,GAA+B,CAC1CnwD,eAAgB,CAAC,UACjB/I,MAAO,CAAC+zD,cAkCV,SAA4BvkD,GAC1BxkB,KAAKgV,MAAM,CAAC5Q,KAAM,SAAU6K,SAAU,IAAKuV,EAC7C,GAnCEzP,KAAM,CAACg0D,cAsCT,SAA2BvkD,GACzBxkB,KAAK+U,KAAKyP,EACZ,IArBa2pD,GAA6B,CACxC94D,OAAQ,CACN,CACEjB,UAAW,IACXoG,YAAa,WACbwB,eAfiC,CACrC,WACA,qBACA,iBACA,YACA,aACA,qBAYApC,SAAU,CAAC03C,OAAQ8c,KAmBrB,SAASA,GAAatkE,EAAM+K,EAAGC,EAASwE,GACtC,IAAMw0D,EAAUP,GAAMj0D,GAChBvE,EAAOD,EAAQE,MAAM,YACvBtS,EAAQorE,EAAQJ,KAAK,MAQzB,OAPAhrE,GAASurE,GAAkBnkE,EAAMgL,GAAS,oBACrCg5D,EAAQjf,WAAS,IACpBr5C,OAAQ9S,EACR2T,MAAO,OAET3T,GAASorE,EAAQJ,KAAK,MACtB34D,IACOrS,CACT,CC5DO,SAASmV,GAAW/N,EAAM+K,EAAGC,GAQlC,IAPA,IAAIpS,EAAQoH,EAAKpH,OAAS,GACtB+S,EAAW,IACXnB,GAAS,EAKN,IAAI/U,OAAO,WAAakW,EAAW,YAAYvW,KAAKwD,IACzD+S,GAAY,IAmBd,IAbE,WAAWvW,KAAKwD,KACd,WAAWxD,KAAKwD,IAAU,WAAWxD,KAAKwD,IAAW,QAAQxD,KAAKwD,MAEpEA,EAAQ,IAAMA,EAAQ,OAUf4R,EAAQQ,EAAQO,OAAO5U,QAAQ,CACtC,IAAM+X,EAAU1D,EAAQO,OAAOf,GACzBmE,EAAaH,GAAeE,GAE9B/O,OAAK,EAKT,GAAK+O,EAAQE,QAEb,KAAQjP,EAAQgP,EAAW5N,KAAKnI,IAAS,CACvC,IAAIiH,EAAWF,EAAM6K,MAIY,KAA/B5R,EAAM2D,WAAWsD,IACkB,KAAnCjH,EAAM2D,WAAWsD,EAAW,IAE5BA,IAGFjH,EAAQA,EAAMoI,MAAM,EAAGnB,GAAY,IAAMjH,EAAMoI,MAAMrB,EAAM6K,MAAQ,EACrE,CACF,CAEA,OAAOmB,EAAW/S,EAAQ+S,CAC5B,CC6RA,SAAS44D,GAAU3rE,GACjB,OAAiB,OAAVA,QAA4BW,IAAVX,EAAsB,GAAKc,OAAOd,EAC7D,CAMA,SAAS4rE,GAAoB5rE,GAC3B,OAAOA,EAAMjC,MACf,CAMA,SAAS8tE,GAAY7rE,GACnB,IAAMkO,EAAwB,kBAAVlO,EAAqBA,EAAM0uD,YAAY,GAAK,EAEhE,OAAgB,KAATxgD,GAAkC,KAATA,EAC5B,GACS,KAATA,GAAkC,MAATA,EACzB,IACS,KAATA,GAAkC,MAATA,EACzB,IACA,CACN,CF9UAw9D,GAAaz3D,KA+Bb,WACE,MAAO,GACT,ECvEAkB,GAAWlB,KAkEX,WACE,MAAO,GACT,EElDO,IAAM63D,GAAuB,CAClCx5D,MAAO,CACL68C,MAeJ,SAAoBrtC,GAGlB,IAAM0zB,EAAQ1zB,EAAM4kD,OACpBppE,KAAKgV,MACH,CACE5Q,KAAM,QACN8zC,MAAOA,EAAMtyC,KAAI,SAACsJ,GAAC,MAAY,SAANA,EAAe,KAAOA,CAAC,IAChDD,SAAU,IAEZuV,GAEFxkB,KAAKojB,QAAQ,WAAW,EAC1B,EA3BIqrD,UAAWC,GACXC,YAAaD,GACbE,SAkCJ,SAAkBpqD,GAChBxkB,KAAKgV,MAAM,CAAC5Q,KAAM,WAAY6K,SAAU,IAAKuV,EAC/C,GAlCEzP,KAAM,CACJ8J,SAgDJ,SAAsB2F,GACpB,IAAI9hB,EAAQ1C,KAAKmjB,SAEbnjB,KAAKqjB,QAAQ,aACf3gB,EAAQA,EAAMwG,QAAQ,aAAcA,KAGElJ,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAClEiC,MAAQA,EACb1C,KAAK+U,KAAKyP,EACZ,EAzDIqtC,MAwBJ,SAAmBrtC,GACjBxkB,KAAK+U,KAAKyP,GACVxkB,KAAKojB,QAAQ,UACf,EA1BIqrD,UAAW15D,GACX45D,YAAa55D,GACb65D,SAAU75D,KAgCd,SAASA,GAAKyP,GACZxkB,KAAK+U,KAAKyP,EACZ,CAGA,SAASkqD,GAAUlqD,GACjBxkB,KAAKgV,MAAM,CAAC5Q,KAAM,YAAa6K,SAAU,IAAKuV,EAChD,CAsBA,SAAStb,GAAQ6R,EAAIC,GAEnB,MAAc,MAAPA,EAAaA,EAAKD,CAC3B,CAMO,SAAS8zD,GAAmBhnE,GACjC,IAAM6R,EAAW7R,GAAW,CAAC,EACvBinE,EAAUp1D,EAASq1D,iBACnBC,EAAkBt1D,EAASu1D,eAC3BC,EAAex1D,EAASw1D,aACxBxW,EAASoW,EAAU,IAAM,IAE/B,MAAO,CACLz5D,OAAQ,CACN,CAACjB,UAAW,KAAMoG,YAAa,aAC/B,CAACpG,UAAW,KAAMoG,YAAa,aAG/B,CAAC9B,SAAS,EAAMtE,UAAW,IAAKiC,MAAO,WAEvC,CAACjC,UAAW,IAAKoG,YAAa,aAG9B,CAAC9B,SAAS,EAAMtE,UAAW,IAAKiC,MAAO,KAMvC,CAACqC,SAAS,EAAMtE,UAAW,IAAKiC,MAAO,UAEzCuD,SAAU,CACRi4C,MAWJ,SAAqB/nD,EAAM+K,EAAGC,EAASwE,GACrC,OAAO61D,EAyDT,SAA2BrlE,EAAMgL,EAASwE,GACxC,IAAMrK,EAAWnF,EAAKmF,SAClBqF,GAAS,EAEPpR,EAAS,GACTwS,EAAUZ,EAAQE,MAAM,SAE9B,OAASV,EAAQrF,EAASxO,QACxByC,EAAOoR,GAAS86D,EACdngE,EAASqF,GACTQ,EACAwE,GAMJ,OAFA5D,IAEOxS,CACT,CA1EImsE,CAAkBvlE,EAAMgL,EAASwE,GAEjCxP,EAAKouC,MAET,EAhBI02B,SA0BJ,SAAwB9kE,EAAM+K,EAAGC,EAASwE,GACxC,IAEM5W,EAAQysE,EAAc,CAFhBC,EAAqBtlE,EAAMgL,EAASwE,KAGhD,OAAO5W,EAAMoI,MAAM,EAAGpI,EAAMsJ,QAAQ,MACtC,EA9BIsjE,UAAWC,EACX13D,WAuHJ,SAA6B/N,EAAMyO,EAAQzD,GACzC,IAAIpS,EAAQmV,GAAW/N,EAAMyO,EAAQzD,GAEjCA,EAAQS,MAAMnJ,SAAS,eACzB1J,EAAQA,EAAMwG,QAAQ,MAAO,SAG/B,OAAOxG,CACT,IA5FA,SAAS6sE,EAAgBzlE,EAAM+K,EAAGC,EAASwE,GACzC,IAAMvE,EAAOD,EAAQE,MAAM,aACrBU,EAAUZ,EAAQE,MAAM,YACxBtS,EAAQurE,GAAkBnkE,EAAMgL,GAAS,oBAC1CwE,GAAW,IACd9D,OAAQkjD,EACRriD,MAAOqiD,KAIT,OAFAhjD,IACAX,IACOrS,CACT,CAMA,SAASysE,EAAcK,EAAQt3B,GAC7B,ODpCG,SAAuB2Z,GAgB5B,IAhBiD,IAAdhqD,EAAU,UAAH,6CAAG,CAAC,EACxCqwC,GAASrwC,EAAQqwC,OAAS,IAAItjC,SAC9Bs6D,EAAernE,EAAQqnE,cAAgBZ,GAEvCmB,EAAa,GAEbC,EAAa,GAEbC,EAAa,GAEbC,EAAsB,GACxBC,EAAkB,EAClBC,GAAY,IAIPA,EAAWje,EAAMpxD,QAAQ,CAEhC,IAAMqxD,EAAM,GAENxa,EAAQ,GACVy4B,GAAe,EAMnB,IAJIle,EAAMie,GAAUrvE,OAASovE,IAC3BA,EAAkBhe,EAAMie,GAAUrvE,UAG3BsvE,EAAcle,EAAMie,GAAUrvE,QAAQ,CAC7C,IAAMwxD,EAAOoc,GAAUxc,EAAMie,GAAUC,IAEvC,IAAgC,IAA5BloE,EAAQmnE,gBAA2B,CACrC,IAAMp2D,EAAOs2D,EAAajd,GAC1B3a,EAAMy4B,GAAen3D,QAGkBvV,IAArCusE,EAAoBG,IACpBn3D,EAAOg3D,EAAoBG,MAE3BH,EAAoBG,GAAen3D,EAEvC,CAEAk5C,EAAIxtD,KAAK2tD,EACX,CAEAyd,EAAWI,GAAYhe,EACvB6d,EAAWG,GAAYx4B,CACzB,CAGA,IAAIy4B,GAAe,EAEnB,GAAqB,kBAAV73B,GAAsB,WAAYA,EAC3C,OAAS63B,EAAcF,GACrBJ,EAAWM,GAAexB,GAAYr2B,EAAM63B,SAK9C,IAFA,IAAMn/D,EAAO29D,GAAYr2B,KAEhB63B,EAAcF,GACrBJ,EAAWM,GAAen/D,EAK9Bm/D,GAAe,EAMf,IAJA,IAAMje,EAAM,GAENxa,EAAQ,KAELy4B,EAAcF,GAAiB,CACtC,IAAMj/D,EAAO6+D,EAAWM,GACpBv6D,EAAS,GACTa,EAAQ,GAEC,KAATzF,GACF4E,EAAS,IACTa,EAAQ,KACU,MAATzF,EACT4E,EAAS,IACS,MAAT5E,IACTyF,EAAQ,KAIV,IAAIuC,GAC0B,IAA5B/Q,EAAQmnE,gBACJ,EACA/4D,KAAKC,IACH,EACA05D,EAAoBG,GAAev6D,EAAO/U,OAAS4V,EAAM5V,QAG3DwxD,EAAOz8C,EAAS,IAAIQ,OAAO4C,GAAQvC,GAET,IAA5BxO,EAAQmnE,mBACVp2D,EAAOpD,EAAO/U,OAASmY,EAAOvC,EAAM5V,QAEzBmvE,EAAoBG,KAC7BH,EAAoBG,GAAen3D,GAGrC0+B,EAAMy4B,GAAen3D,GAGvBk5C,EAAIie,GAAe9d,CACrB,CAGAyd,EAAWtrD,OAAO,EAAG,EAAG0tC,GACxB6d,EAAWvrD,OAAO,EAAG,EAAGkzB,GAExBw4B,GAAY,EAIZ,IAFA,IAAMtmE,EAAQ,KAELsmE,EAAWJ,EAAWjvE,QAAQ,CACrC,IAAMqxD,EAAM4d,EAAWI,GACjBx4B,EAAQq4B,EAAWG,GACzBC,GAAe,EAIf,IAFA,IAAMlmE,EAAO,KAEJkmE,EAAcF,GAAiB,CACtC,IAAM5d,EAAOH,EAAIie,IAAgB,GAC7Bv6D,EAAS,GACTa,EAAQ,GAEZ,IAAgC,IAA5BxO,EAAQmnE,gBAA2B,CACrC,IAAMp2D,EACJg3D,EAAoBG,IAAgBz4B,EAAMy4B,IAAgB,GACtDn/D,EAAO6+D,EAAWM,GAEX,MAATn/D,EACF4E,EAAS,IAAIQ,OAAO4C,GACF,KAAThI,EACLgI,EAAO,GACTpD,EAAS,IAAIQ,OAAO4C,EAAO,EAAI,IAC/BvC,EAAQ,IAAIL,OAAO4C,EAAO,EAAI,KAG9BvC,EADAb,EAAS,IAAIQ,OAAO4C,EAAO,GAI7BvC,EAAQ,IAAIL,OAAO4C,EAEvB,EAE+B,IAA3B/Q,EAAQmoE,gBAA6BD,GACvClmE,EAAKvF,KAAK,MAIU,IAApBuD,EAAQinE,UAGsB,IAA5BjnE,EAAQmnE,iBAAsC,KAAT/c,IACX,IAA3BpqD,EAAQmoE,iBAA4BD,GAErClmE,EAAKvF,KAAK,MAGoB,IAA5BuD,EAAQmnE,iBACVnlE,EAAKvF,KAAKkR,GAGZ3L,EAAKvF,KAAK2tD,IAEsB,IAA5BpqD,EAAQmnE,iBACVnlE,EAAKvF,KAAK+R,IAGY,IAApBxO,EAAQinE,SACVjlE,EAAKvF,KAAK,MAIe,IAAzBuD,EAAQooE,cACRF,IAAgBF,EAAkB,GAElChmE,EAAKvF,KAAK,IAEd,CAEAkF,EAAMlF,MACqB,IAAzBuD,EAAQooE,aACJpmE,EAAKlE,KAAK,IAAIuD,QAAQ,MAAO,IAC7BW,EAAKlE,KAAK,IAElB,CAEA,OAAO6D,EAAM7D,KAAK,KACpB,CC7JWuqE,CAAcV,EAAQ,CAC3Bt3B,MAAAA,EACA82B,gBAAAA,EACAF,QAAAA,EACAI,aAAAA,GAEJ,CAgCA,SAASE,EAAqBtlE,EAAMgL,EAASwE,GAO3C,IANA,IAAMrK,EAAWnF,EAAKmF,SAClBqF,GAAS,EAEPpR,EAAS,GACTwS,EAAUZ,EAAQE,MAAM,cAErBV,EAAQrF,EAASxO,QAIxByC,EAAOoR,GAASi7D,EACdtgE,EAASqF,GACTxK,EACAgL,EACAwE,GAMJ,OAFA5D,IAEOxS,CACT,CAeF,CCvPO,SAAS+U,GAASnO,EAAMyO,EAAQzD,EAASwE,GAC9C,IAAMP,ECVD,SAA6BjE,GAClC,IAAM3L,EAAQ2L,EAAQjN,QAAQkR,gBAAkB,MAIhD,GAAc,IAAV5P,GAAyB,MAAVA,EACjB,MAAO,MAGT,GAAc,QAAVA,GAA6B,QAAVA,GAA6B,UAAVA,EACxC,MAAM,IAAItF,MACR,gCACEsF,EACA,qEAIN,OAAOA,CACT,CDRyB6P,CAAoBlE,GACvC+D,EAAS/D,EAAQq7D,eEXhB,SAAqBr7D,GAC1B,IAAMa,EAASb,EAAQjN,QAAQgR,QAAU,IAEzC,GAAe,MAAXlD,GAA6B,MAAXA,GAA6B,MAAXA,EACtC,MAAM,IAAI9R,MACR,gCACE8R,EACA,qDAIN,OAAOA,CACT,CFDwCmD,CAAYhE,GAG9CyD,GAA0B,SAAhBA,EAAOnU,MAAmBmU,EAAOU,UAC7CJ,GAC2B,kBAAjBN,EAAO3O,OAAsB2O,EAAO3O,OAAS,EACjD2O,EAAO3O,MACP,KACqC,IAAxCkL,EAAQjN,QAAQqR,oBACb,EACAX,EAAOtJ,SAASjD,QAAQlC,IAC5B+O,GAGJ,IAAID,EAAOC,EAAOpY,OAAS,GAGN,QAAnBsY,GACoB,UAAnBA,IACGR,GAA0B,SAAhBA,EAAOnU,MAAmBmU,EAAOY,QAAWrP,EAAKqP,WAE/DP,EAA6B,EAAtB3C,KAAKmD,KAAKR,EAAO,IAG1B,IAAMk1D,EAAUP,GAAMj0D,GACtBw0D,EAAQJ,KAAK70D,EAAS,IAAI7C,OAAO4C,EAAOC,EAAOpY,SAC/CqtE,EAAQH,MAAM/0D,GACd,IAAM7D,EAAOD,EAAQE,MAAM,YACrBtS,EAAQuS,GACZ24D,GAAc9jE,EAAMgL,EAASg5D,EAAQjf,YAQvC,SAAahlD,EAAMyK,EAAOa,GACxB,GAAIb,EACF,OAAQa,EAAQ,GAAK,IAAIa,OAAO4C,IAAS/O,EAG3C,OAAQsL,EAAQ0D,EAASA,EAAS,IAAI7C,OAAO4C,EAAOC,EAAOpY,SAAWoJ,CACxE,IATA,OAFAkL,IAEOrS,CAUT,CGjDO,IAAM0tE,GAA8B,CACzCr7D,KAAM,CACJs7D,0BAA2BC,GAC3BC,4BAA6BD,GAC7Bp4D,UAkBJ,SAAuCsM,GACrC,IAMIgsD,EANEj4D,EAAgCvY,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAC/DqJ,EAAiC9J,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAChEmkB,EAAWrM,EAAOtJ,SAClBw2B,EAAO37B,EAAKmF,SAAS,GACvBqF,GAAS,EAIb,GACEiE,GACgB,aAAhBA,EAAOnU,MACmB,mBAAnBmU,EAAOyM,SACdygB,GACc,SAAdA,EAAKrhC,KACL,CACA,OAASkQ,EAAQsQ,EAASnkB,QAAQ,CAChC,IAAMgwE,EAAU7rD,EAAStQ,GACzB,GAAqB,cAAjBm8D,EAAQrsE,KAAsB,CAChCosE,EAAkBC,EAClB,KACF,CACF,CAEID,IAAoB1mE,IAEtB27B,EAAK/iC,MAAQ+iC,EAAK/iC,MAAMoI,MAAM,GAEJ,IAAtB26B,EAAK/iC,MAAMjC,OACbqJ,EAAKmF,SAAS0+D,QAEd7jE,EAAKH,UACL87B,EAAK97B,UACiC,kBAA/B87B,EAAK97B,SAASC,MAAM8Z,SAE3B+hB,EAAK97B,SAASC,MAAMN,SACpBm8B,EAAK97B,SAASC,MAAM8Z,SACpB5Z,EAAKH,SAASC,MAAQpH,OAAOyR,OAAO,CAAC,EAAGwxB,EAAK97B,SAASC,QAG5D,CAEA5J,KAAK+U,KAAKyP,EACZ,IAxDaksD,GAA4B,CACvCr7D,OAAQ,CAAC,CAACqD,SAAS,EAAMtE,UAAW,IAAKiC,MAAO,UAChDuD,SAAU,CAAC3B,SA4Db,SAAkCnO,EAAMyO,EAAQzD,EAASwE,GACvD,IAAMmsB,EAAO37B,EAAKmF,SAAS,GACrB0hE,EACoB,mBAAjB7mE,EAAKkb,SAAyBygB,GAAsB,cAAdA,EAAKrhC,KAC9CwsE,EAAW,KAAO9mE,EAAKkb,QAAU,IAAM,KAAO,KAC9C8oD,EAAUP,GAAMj0D,GAElBq3D,GACF7C,EAAQJ,KAAKkD,GAGf,IAAIluE,EAAQuV,GAASnO,EAAMyO,EAAQzD,GAAS,oBACvCwE,GACAw0D,EAAQjf,YAGT8hB,IACFjuE,EAAQA,EAAMwG,QAAQ,mCASxB,SAAe6R,GACb,OAAOA,EAAK61D,CACd,KARA,OAAOluE,CAST,IArFA,SAAS4tE,GAAU9rD,GACqBxkB,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAEhEukB,QAAyB,8BAAfR,EAAMpgB,IACvB,CCNO,SAASysE,KACd,MAAO,CACLvE,GVTK,CACLt3D,MAAO,CACL87D,sBAcJ,SAAiCtsD,GAC/BxkB,KAAKgV,MACH,CAAC5Q,KAAM,qBAAsBsW,WAAY,GAAID,MAAO,GAAIxL,SAAU,IAClEuV,EAEJ,EAlBIusD,iCAqBJ,WACE/wE,KAAK0e,QACP,EAtBIsyD,gBA0CJ,SAA2BxsD,GACzBxkB,KAAKgV,MAAM,CAAC5Q,KAAM,oBAAqBsW,WAAY,GAAID,MAAO,IAAK+J,EACrE,EA3CIysD,sBA8CJ,WACEjxE,KAAK0e,QACP,GA9CE3J,KAAM,CACJ+7D,sBAiCJ,SAAgCtsD,GAC9BxkB,KAAK+U,KAAKyP,EACZ,EAlCIusD,iCAoBJ,SAA2CvsD,GACzC,IAAM/J,EAAQza,KAAKmjB,SACbrZ,EACJ9J,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAEjCqJ,EAAK2Q,MAAQA,EACb3Q,EAAK4Q,YAAagK,EAAAA,EAAAA,GAChB1kB,KAAKujB,eAAeiB,IACpBG,aACJ,EA5BIqsD,gBA0DJ,SAA0BxsD,GACxBxkB,KAAK+U,KAAKyP,EACZ,EA3DIysD,sBA6CJ,SAAgCzsD,GAC9B,IAAM/J,EAAQza,KAAKmjB,SACbrZ,EACJ9J,KAAKuV,MAAMvV,KAAKuV,MAAM9U,OAAS,GAEjCqJ,EAAK2Q,MAAQA,EACb3Q,EAAK4Q,YAAagK,EAAAA,EAAAA,GAChB1kB,KAAKujB,eAAeiB,IACpBG,aACJ,IUtDEupD,GACAM,GACA4B,GAEJ,CAMO,SAASc,GAAcrpE,GAC5B,MAAO,CACLsM,WAAY,CACV24D,GACAkB,KACAG,GACAU,GAAmBhnE,GACnB6oE,IAGN,CCvCe,SAASS,KAAwB,IAAdtpE,EAAU,UAAH,6CAAG,CAAC,EACrCqM,EAAOlU,KAAKkU,OAUlB,SAASyhB,EAAIpL,EAAO7nB,IAIhBwR,EAAKqW,GAASrW,EAAKqW,GAAUrW,EAAKqW,GAAS,IAGxCjmB,KAAK5B,EACZ,CAhBAizB,EAAI,sBAAuB21C,EAAIzjE,IAC/B8tB,EAAI,yBAA0Bk7C,MAC9Bl7C,EAAI,uBAAwBu7C,GAAcrpE,GAe5C,qCCzBO,SAAS5F,EAAMS,GACpB,IAAMuZ,EAAQzY,OAAOd,GAAS,IAAIH,OAClC,OAAO0Z,EAAQA,EAAM1P,MAAM,iBAAmB,EAChD,CAUO,SAASkR,EAAUd,GACxB,OAAOA,EAAOhX,KAAK,KAAKpD,MAC1B,2HC2BO,IA+DMo4D,EAkBT,SAAUz7D,GACR,QAAamE,IAATnE,GAA+B,OAATA,EACxB,OAAO6oB,EAGT,GAAoB,kBAAT7oB,EACT,OA+ER,SAAqB+pB,GACnB,OAAOua,EAAYp/B,GAKnB,SAASA,EAAK0F,GACZ,OAAOA,GAAQA,EAAK1F,OAAS6kB,CAC/B,CACF,CAxFemoD,CAAYlyE,GAGrB,GAAoB,kBAATA,EACT,OAAOC,MAAMC,QAAQF,GAAQqkC,EAAWrkC,GAgDhD,SAAsB+pB,GACpB,OAAOua,EAAY9mB,GAMnB,SAASA,EAAI5S,GAEX,IAAIvC,EAEJ,IAAKA,KAAO0hB,EAEV,GAAInf,EAAKvC,KAAS0hB,EAAM1hB,GAAM,OAAO,EAGvC,OAAO,CACT,CACF,CAlEwD8pE,CAAanyE,GAG/D,GAAoB,oBAATA,EACT,OAAOskC,EAAYtkC,GAGrB,MAAM,IAAI2E,MAAM,+CAClB,EAMJ,SAAS0/B,EAAWE,GAKlB,IAHA,IAAMC,EAAS,GACXpvB,GAAS,IAEJA,EAAQmvB,EAAMhjC,QACrBijC,EAAOpvB,GAASqmD,EAAQl3B,EAAMnvB,IAGhC,OAAOkvB,GAOP,WACgB,IAAd,IAAIlvB,GAAS,EAAC,mBADAghB,EAAU,yBAAVA,EAAU,gBAGxB,OAAShhB,EAAQovB,EAAOjjC,QAAQ,OAC9B,IAAI,EAAAijC,EAAOpvB,IAAOlN,KAAI,SAACpH,MAAI,OAAKs1B,IAAa,OAAO,CACtD,CAEA,OAAO,CACT,GACF,CAqDA,SAASkO,EAAYva,GACnB,OAOA,WAAkC,2BAAZqM,EAAU,yBAAVA,EAAU,gBAE9B,OAAOpkB,QAAQ+X,EAAM7hB,KAAI,MAAV6hB,EAAK,CAAMjpB,MAAI,OAAKs1B,IACrC,CACF,CAGA,SAASvN,IACP,OAAO,CACT,6FC7OO,IAAMmqC,EAAazuC,EAAM,SACnB0uC,EAAW1uC,EAAM,OAiB9B,SAASA,EAAMrf,GACb,OAQA,SAAe0F,GACb,IAAM2Z,EAAS3Z,GAAQA,EAAKH,UAAYG,EAAKH,SAASvF,IAAU,CAAC,EAEjE,MAAO,CACLyF,KAAM4Z,EAAM5Z,MAAQ,KACpBP,OAAQma,EAAMna,QAAU,KACxBoa,OAAQD,EAAMC,QAAU,EAAID,EAAMC,OAAS,KAE/C,CACF,oIChCO,IAIMm1C,EAAO,OAIP2I,GAAO,EAcPuK,EAcT,SAAUh4D,EAAM7U,EAAMk6D,EAASkY,GACT,oBAATpyE,GAA0C,oBAAZk6D,IACvCkY,EAAUlY,EAEVA,EAAUl6D,EACVA,EAAO,MAGT,IAAMwwC,GAAKirB,EAAAA,EAAAA,GAAQz7D,GACbmhC,EAAOixC,GAAW,EAAI,GAS5B,SAAS5e,EAAQ5oD,EAAMwK,EAAO03D,GAG5B,IAEI/mE,EAFEvC,EAAwB,kBAAToH,GAA8B,OAATA,EAAgBA,EAAO,CAAC,EAIxC,kBAAfpH,EAAM0B,OACfa,EAC2B,kBAAlBvC,EAAMkC,QACTlC,EAAMkC,QACgB,kBAAflC,EAAMuC,KACbvC,EAAMuC,UACN5B,EAENb,OAAOC,eAAeuwD,EAAO,OAAQ,CACnCtwD,MACE,SACMA,EAAM0B,MAAQa,EAAO,IAAMA,EAAO,IAAM,IAC9C,OAIN,OAAO+tD,EAEP,SAASA,IAEP,IAEIue,EAEA7tD,EAEA8tD,EANAtuE,EAAS,GAQb,KAAKhE,GAAQwwC,EAAG5lC,EAAMwK,EAAO03D,EAAQA,EAAQvrE,OAAS,IAAM,SAC1DyC,EAsCZ,SAAkBR,GAChB,GAAIvD,MAAMC,QAAQsD,GAChB,OAAOA,EAGT,GAAqB,kBAAVA,EACT,MAAO,CAtIa,KAsIFA,GAGpB,MAAO,CAACA,EACV,CAhDqB+uE,CAASrY,EAAQtvD,EAAMkiE,IAE5B9oE,EAAO,KAAOs+D,GAChB,OAAOt+D,EAKX,GAAI4G,EAAKmF,UAAY/L,EAAO,KAAO21D,EAOjC,IALAn1C,GAAU4tD,EAAUxnE,EAAKmF,SAASxO,QAAU,GAAK4/B,EAEjDmxC,EAAexF,EAAQp3D,OAAO9K,GAGvB4Z,GAAU,GAAKA,EAAS5Z,EAAKmF,SAASxO,QAAQ,CAInD,IAFA8wE,EAAY7e,EAAQ5oD,EAAKmF,SAASyU,GAASA,EAAQ8tD,EAAvC9e,IAEE,KAAO8O,EACnB,OAAO+P,EAGT7tD,EAC0B,kBAAjB6tD,EAAU,GAAkBA,EAAU,GAAK7tD,EAAS2c,CAC/D,CAGF,OAAOn9B,CACT,CACF,CAzEAwvD,CAAQ3+C,EAAM,KAAM,GAApB2+C,EA0EF,oFCpHSM,EAcT,SAAUj/C,EAAM7U,EAAMk6D,EAASkY,GACT,oBAATpyE,GAA0C,oBAAZk6D,IACvCkY,EAAUlY,EACVA,EAAUl6D,EACVA,EAAO,OAGT6sE,EAAAA,EAAAA,IAAah4D,EAAM7U,GAMnB,SAAkB4K,EAAMkiE,GACtB,IAAMzzD,EAASyzD,EAAQA,EAAQvrE,OAAS,GACxC,OAAO24D,EACLtvD,EACAyO,EAASA,EAAOtJ,SAASjD,QAAQlC,GAAQ,KACzCyO,EAEJ,GAbmC+4D,EAcrC,qECRJ,IAAMl0D,EAAM,CAAC,EAAErW,eAcR,SAASoT,EAAO5S,EAAKM,GAC1B,IAAM6R,EAAW7R,GAAW,CAAC,EA8B7B,SAAS+T,EAAIlZ,GAEX,IAAIya,EAAKvB,EAAIxB,QACPR,EAAWgC,EAAIhC,SAErB,GAAIlX,GAAS0a,EAAIhW,KAAK1E,EAAO6E,GAAM,CAEjC,IAAMxC,EAAKvB,OAAOd,EAAM6E,IAExB4V,EAAKC,EAAIhW,KAAKwS,EAAU7U,GAAM6U,EAAS7U,GAAM6W,EAAIvB,OACnD,CAEA,GAAI8C,EAAI,8BAZamY,EAAU,iCAAVA,EAAU,kBAa7B,OAAO,EAAAnY,GAAG/V,KAAI,SAACpH,KAAM0C,GAAK,OAAK4yB,GACjC,CACF,CAOA,OALA1Z,EAAIhC,SAAWF,EAASE,UAAY,CAAC,EACrCgC,EAAIxB,QAAUV,EAASU,QACvBwB,EAAIvB,QAAUX,EAASW,QAGhBuB,CACT","sources":["../../node_modules/babel-plugin-transform-remove-imports/lib/index.js","../../node_modules/boolbase/index.js","../../node_modules/css-selector-parser/lib/index.js","../../node_modules/css-selector-parser/lib/parser-context.js","../../node_modules/css-selector-parser/lib/render.js","../../node_modules/css-selector-parser/lib/utils.js","../../node_modules/extend/index.js","../../node_modules/inline-style-parser/index.js","../../node_modules/is-buffer/index.js","../../node_modules/markdown-react-code-preview-loader/src/utils/index.ts","../../node_modules/parse-numeric-range/index.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/react-code-preview-layout/src/icons.tsx","../../node_modules/react-code-preview-layout/src/Copied.tsx","../../node_modules/react-code-preview-layout/src/index.tsx","../../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/react-markdown/node_modules/react-is/index.js","../../node_modules/remark-stringify/index.js","../../node_modules/remark-stringify/node_modules/longest-streak/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/configure.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/break.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/code.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/definition.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/heading.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/html.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/image.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/link.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/list.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/root.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/strong.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/text.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/join.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/unsafe.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-rule-repeat.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-string/index.js","../../node_modules/remark-stringify/node_modules/parse-entities/decode-entity.browser.js","../../node_modules/remark-stringify/node_modules/zwitch/index.js","../../node_modules/remark/index.js","../../node_modules/remark/node_modules/bail/index.js","../../node_modules/remark/node_modules/is-plain-obj/index.js","../../node_modules/remark/node_modules/mdast-util-from-markdown/dist/index.js","../../node_modules/remark/node_modules/mdast-util-from-markdown/index.js","../../node_modules/remark/node_modules/mdast-util-to-string/index.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-alpha.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-alphanumeric.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-atext.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-control.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-digit.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-hex-digit.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-punctuation.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-line-ending-or-space.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-line-ending.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-space.js","../../node_modules/remark/node_modules/micromark/dist/character/unicode-punctuation.js","../../node_modules/remark/node_modules/micromark/dist/character/unicode-whitespace.js","../../node_modules/remark/node_modules/micromark/dist/constant/assign.js","../../node_modules/remark/node_modules/micromark/dist/constant/from-char-code.js","../../node_modules/remark/node_modules/micromark/dist/constant/has-own-property.js","../../node_modules/remark/node_modules/micromark/dist/constant/html-block-names.js","../../node_modules/remark/node_modules/micromark/dist/constant/html-raw-names.js","../../node_modules/remark/node_modules/micromark/dist/constant/splice.js","../../node_modules/remark/node_modules/micromark/dist/constant/unicode-punctuation-regex.js","../../node_modules/remark/node_modules/micromark/dist/constructs.js","../../node_modules/remark/node_modules/micromark/dist/initialize/content.js","../../node_modules/remark/node_modules/micromark/dist/initialize/document.js","../../node_modules/remark/node_modules/micromark/dist/initialize/flow.js","../../node_modules/remark/node_modules/micromark/dist/initialize/text.js","../../node_modules/remark/node_modules/micromark/dist/parse.js","../../node_modules/remark/node_modules/micromark/dist/postprocess.js","../../node_modules/remark/node_modules/micromark/dist/preprocess.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/attention.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/autolink.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/block-quote.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/character-escape.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/character-reference.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-fenced.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-indented.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-text.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/content.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/definition.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-destination.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-label.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-space.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-title.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-whitespace.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/hard-break-escape.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/heading-atx.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/html-flow.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/html-text.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-end.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-start-image.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-start-link.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/line-ending.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/list.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/partial-blank-line.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/setext-underline.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/thematic-break.js","../../node_modules/remark/node_modules/micromark/dist/util/chunked-push.js","../../node_modules/remark/node_modules/micromark/dist/util/chunked-splice.js","../../node_modules/remark/node_modules/micromark/dist/util/classify-character.js","../../node_modules/remark/node_modules/micromark/dist/util/combine-extensions.js","../../node_modules/remark/node_modules/micromark/dist/util/create-tokenizer.js","../../node_modules/remark/node_modules/micromark/dist/util/miniflat.js","../../node_modules/remark/node_modules/micromark/dist/util/move-point.js","../../node_modules/remark/node_modules/micromark/dist/util/normalize-identifier.js","../../node_modules/remark/node_modules/micromark/dist/util/prefix-size.js","../../node_modules/remark/node_modules/micromark/dist/util/regex-check.js","../../node_modules/remark/node_modules/micromark/dist/util/resolve-all.js","../../node_modules/remark/node_modules/micromark/dist/util/safe-from-int.js","../../node_modules/remark/node_modules/micromark/dist/util/serialize-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/shallow.js","../../node_modules/remark/node_modules/micromark/dist/util/size-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/slice-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/subtokenize.js","../../node_modules/remark/node_modules/parse-entities/decode-entity.browser.js","../../node_modules/remark/node_modules/remark-parse/index.js","../../node_modules/remark/node_modules/trough/index.js","../../node_modules/remark/node_modules/trough/wrap.js","../../node_modules/remark/node_modules/unified/index.js","../../node_modules/remark/node_modules/unist-util-stringify-position/index.js","../../node_modules/remark/node_modules/vfile-message/index.js","../../node_modules/remark/node_modules/vfile/index.js","../../node_modules/remark/node_modules/vfile/lib/core.js","../../node_modules/remark/node_modules/vfile/lib/index.js","../../node_modules/remark/node_modules/vfile/lib/minpath.browser.js","../../node_modules/remark/node_modules/vfile/lib/minproc.browser.js","../../node_modules/repeat-string/index.js","../../node_modules/style-to-object/index.js","../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../../node_modules/@babel/runtime/helpers/classCallCheck.js","../../node_modules/@babel/runtime/helpers/createClass.js","../../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../../node_modules/@babel/runtime/helpers/createSuper.js","../../node_modules/@babel/runtime/helpers/defineProperty.js","../../node_modules/@babel/runtime/helpers/get.js","../../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../../node_modules/@babel/runtime/helpers/inherits.js","../../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../../node_modules/@babel/runtime/helpers/nonIterableRest.js","../../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../../node_modules/@babel/runtime/helpers/slicedToArray.js","../../node_modules/@babel/runtime/helpers/superPropBase.js","../../node_modules/@babel/runtime/helpers/toPrimitive.js","../../node_modules/@babel/runtime/helpers/toPropertyKey.js","../../node_modules/@babel/runtime/helpers/typeof.js","../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../../node_modules/comma-separated-tokens/index.js","../../node_modules/decode-named-character-reference/index.dom.js","../../node_modules/hast-util-has-property/index.js","../../node_modules/hast-util-heading-rank/index.js","../../node_modules/hast-util-is-element/index.js","../../node_modules/hast-util-to-string/index.js","../../node_modules/hast-util-whitespace/index.js","../../node_modules/hast-util-parse-selector/index.js","../../node_modules/hastscript/lib/core.js","../../node_modules/hastscript/lib/html.js","../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../node_modules/micromark-factory-space/index.js","../../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../../node_modules/micromark-util-character/index.js","../../node_modules/micromark-util-chunked/index.js","../../node_modules/micromark-util-classify-character/index.js","../../node_modules/micromark-util-combine-extensions/index.js","../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../node_modules/micromark-util-decode-string/index.js","../../node_modules/micromark-util-normalize-identifier/index.js","../../node_modules/micromark-util-resolve-all/index.js","../../node_modules/character-entities-legacy/index.js","../../node_modules/character-reference-invalid/index.js","../../node_modules/is-decimal/index.js","../../node_modules/is-hexadecimal/index.js","../../node_modules/is-alphanumerical/index.js","../../node_modules/is-alphabetical/index.js","../../node_modules/parse-entities/lib/index.js","../../node_modules/property-information/lib/util/schema.js","../../node_modules/property-information/lib/util/merge.js","../../node_modules/property-information/lib/util/create.js","../../node_modules/property-information/lib/xlink.js","../../node_modules/property-information/lib/xml.js","../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/property-information/lib/xmlns.js","../../node_modules/property-information/lib/aria.js","../../node_modules/property-information/lib/html.js","../../node_modules/property-information/lib/svg.js","../../node_modules/property-information/index.js","../../node_modules/property-information/lib/find.js","../../node_modules/property-information/lib/hast-to-react.js","../../node_modules/property-information/lib/normalize.js","../../node_modules/property-information/lib/util/defined-info.js","../../node_modules/property-information/lib/util/info.js","../../node_modules/property-information/lib/util/types.js","../../node_modules/unist-util-stringify-position/index.js","../../node_modules/vfile-message/index.js","../../node_modules/vfile/lib/minpath.browser.js","../../node_modules/vfile/lib/minproc.browser.js","../../node_modules/vfile/lib/minurl.shared.js","../../node_modules/vfile/lib/minurl.browser.js","../../node_modules/vfile/lib/index.js","../../node_modules/@babel/runtime/helpers/esm/toArray.js","../../node_modules/bail/index.js","../../node_modules/unified/node_modules/is-plain-obj/index.js","../../node_modules/trough/index.js","../../node_modules/unified/lib/index.js","../../node_modules/mdast-util-to-string/index.js","../../node_modules/micromark/lib/initialize/content.js","../../node_modules/micromark/lib/initialize/document.js","../../node_modules/micromark-util-subtokenize/index.js","../../node_modules/micromark-core-commonmark/lib/content.js","../../node_modules/micromark/lib/initialize/flow.js","../../node_modules/micromark/lib/initialize/text.js","../../node_modules/micromark/lib/create-tokenizer.js","../../node_modules/micromark-core-commonmark/lib/thematic-break.js","../../node_modules/micromark-core-commonmark/lib/list.js","../../node_modules/micromark-core-commonmark/lib/block-quote.js","../../node_modules/micromark-factory-destination/index.js","../../node_modules/micromark-factory-label/index.js","../../node_modules/micromark-factory-title/index.js","../../node_modules/micromark-factory-whitespace/index.js","../../node_modules/micromark-core-commonmark/lib/definition.js","../../node_modules/micromark-core-commonmark/lib/code-indented.js","../../node_modules/micromark-core-commonmark/lib/heading-atx.js","../../node_modules/micromark-core-commonmark/lib/setext-underline.js","../../node_modules/micromark-util-html-tag-name/index.js","../../node_modules/micromark-core-commonmark/lib/html-flow.js","../../node_modules/micromark-core-commonmark/lib/code-fenced.js","../../node_modules/micromark-core-commonmark/lib/character-reference.js","../../node_modules/micromark-core-commonmark/lib/character-escape.js","../../node_modules/micromark-core-commonmark/lib/line-ending.js","../../node_modules/micromark-core-commonmark/lib/label-end.js","../../node_modules/micromark-core-commonmark/lib/label-start-image.js","../../node_modules/micromark-core-commonmark/lib/attention.js","../../node_modules/micromark-core-commonmark/lib/autolink.js","../../node_modules/micromark-core-commonmark/lib/html-text.js","../../node_modules/micromark-core-commonmark/lib/label-start-link.js","../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../node_modules/micromark-core-commonmark/lib/code-text.js","../../node_modules/micromark/lib/constructs.js","../../node_modules/micromark/lib/preprocess.js","../../node_modules/mdast-util-from-markdown/lib/index.js","../../node_modules/micromark/lib/postprocess.js","../../node_modules/micromark/lib/parse.js","../../node_modules/remark-parse/index.js","../../node_modules/remark-parse/lib/index.js","../../node_modules/unist-builder/index.js","../../node_modules/mdast-util-definitions/index.js","../../node_modules/mdast-util-to-hast/lib/traverse.js","../../node_modules/micromark-util-sanitize-uri/index.js","../../node_modules/mdast-util-to-hast/lib/wrap.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../node_modules/mdast-util-to-hast/lib/revert.js","../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../node_modules/trim-lines/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../node_modules/mdast-util-to-hast/lib/handlers/break.js","../../node_modules/mdast-util-to-hast/lib/handlers/code.js","../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../node_modules/mdast-util-to-hast/lib/handlers/html.js","../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/image.js","../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/link.js","../../node_modules/mdast-util-to-hast/lib/handlers/list.js","../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../node_modules/mdast-util-to-hast/lib/handlers/root.js","../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../node_modules/mdast-util-to-hast/lib/handlers/table.js","../../node_modules/mdast-util-to-hast/lib/handlers/text.js","../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../node_modules/mdast-util-to-hast/lib/index.js","../../node_modules/unist-util-generated/index.js","../../node_modules/mdast-util-to-hast/lib/footer.js","../../node_modules/remark-rehype/lib/index.js","../../node_modules/react-markdown/lib/rehype-filter.js","../../node_modules/react-markdown/lib/uri-transformer.js","../../node_modules/react-markdown/lib/ast-to-react.js","../../node_modules/react-markdown/lib/react-markdown.js","../../node_modules/rehype-attr/src/utils.ts","../../node_modules/rehype-attr/src/index.ts","../../node_modules/rehype-autolink-headings/lib/index.js","../../node_modules/rehype-ignore/src/index.ts","../../node_modules/unist-util-filter/index.js","../../src/generator.js","../../src/all.js","../../src/common.js","../../node_modules/hastscript/lib/svg.js","../../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../../node_modules/web-namespaces/index.js","../../node_modules/hast-util-from-parse5/lib/index.js","../../node_modules/vfile-location/index.js","../../node_modules/hast-to-hyperscript/index.js","../../node_modules/hast-util-to-parse5/lib/index.js","../../node_modules/html-void-elements/index.js","../../node_modules/hast-util-raw/lib/index.js","../../node_modules/rehype-raw/index.js","../../node_modules/direction/index.js","../../node_modules/hast-util-select/lib/util.js","../../node_modules/hast-util-select/lib/enter-state.js","../../node_modules/hast-util-select/lib/nest.js","../../node_modules/bcp-47-match/index.js","../../node_modules/hast-util-select/lib/pseudo.js","../../node_modules/hast-util-select/lib/attribute.js","../../node_modules/hast-util-select/lib/test.js","../../node_modules/hast-util-select/lib/name.js","../../node_modules/hast-util-select/lib/class-name.js","../../node_modules/hast-util-select/lib/id.js","../../node_modules/hast-util-select/lib/any.js","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/parse.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/compile.ts","../../node_modules/hast-util-select/lib/parse.js","../../node_modules/hast-util-select/index.js","../../node_modules/rehype-rewrite/src/index.ts","../../node_modules/github-slugger/regex.js","../../node_modules/github-slugger/index.js","../../node_modules/rehype-slug/index.js","../../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../../node_modules/micromark-extension-gfm-table/lib/syntax.js","../../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../../node_modules/micromark-extension-gfm/index.js","../../node_modules/ccount/index.js","../../node_modules/mdast-util-find-and-replace/lib/index.js","../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../../node_modules/mdast-util-gfm-autolink-literal/index.js","../../node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/mdast-util-to-markdown/lib/util/track.js","../../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/mdast-util-gfm-footnote/index.js","../../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/mdast-util-gfm-strikethrough/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/markdown-table/index.js","../../node_modules/mdast-util-gfm-table/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/mdast-util-gfm-task-list-item/index.js","../../node_modules/mdast-util-gfm/lib/index.js","../../node_modules/remark-gfm/index.js","../../node_modules/space-separated-tokens/index.js","../../node_modules/unist-util-is/index.js","../../node_modules/unist-util-position/index.js","../../node_modules/unist-util-visit-parents/index.js","../../node_modules/unist-util-visit/index.js","../../node_modules/zwitch/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nfunction _default() {\n  return {\n    name: 'transform-remove-imports',\n    visitor: {\n      // https://babeljs.io/docs/en/babel-types#callexpression\n      CallExpression: function CallExpression(path, state) {\n        var node = path.node;\n\n        if (node.callee.name !== 'require') {\n          return;\n        }\n\n        var argument = node.arguments[0];\n        var moduleId = argument.value;\n        var options = state.opts;\n\n        if (options.test && !testMatches(moduleId, options.test)) {\n          return;\n        }\n\n        var parentType = path.parentPath.node.type; // In remove effects mode we should delete only requires that are\n        // simple expression statements\n\n        if (options.remove === 'effects' && parentType !== 'ExpressionStatement') {\n          return;\n        }\n\n        path.remove();\n      },\n      // https://babeljs.io/docs/en/babel-types#importdeclaration\n      ImportDeclaration: function ImportDeclaration(path, state) {\n        var node = path.node;\n        var source = node.source;\n        var opts = state.opts;\n\n        if (opts.removeAll) {\n          path.remove();\n          return;\n        }\n\n        if (!opts.test) {\n          console.warn('transform-remove-imports: \"test\" option should be specified');\n          return;\n        }\n        /** @var {string} importName */\n\n\n        var importName = source && source.value ? source.value : undefined;\n        var isMatch = testMatches(importName, opts.test); // https://github.com/uiwjs/babel-plugin-transform-remove-imports/issues/3\n\n        if (opts.remove === 'effects') {\n          if (node.specifiers && node.specifiers.length === 0 && importName && isMatch) {\n            path.remove();\n          }\n\n          return;\n        }\n\n        if (importName && isMatch) {\n          path.remove();\n        }\n      }\n    }\n  };\n}\n/**\n * Determines if the import matches the specified tests.\n *\n * @param {string} importName\n * @param {RegExp|RegExp[]|string|string[]} test\n * @returns {Boolean}\n */\n\n\nfunction testMatches(importName, test) {\n  // Normalizing tests\n  var tests = Array.isArray(test) ? test : [test]; // Finding out if at least one test matches\n\n  return tests.some(function (regex) {\n    if (typeof regex === 'string') {\n      regex = new RegExp(regex);\n    }\n\n    return regex.test(importName || '');\n  });\n}","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_context_1 = require(\"./parser-context\");\nvar render_1 = require(\"./render\");\nvar CssSelectorParser = /** @class */ (function () {\n    function CssSelectorParser() {\n        this.pseudos = {};\n        this.attrEqualityMods = {};\n        this.ruleNestingOperators = {};\n        this.substitutesEnabled = false;\n    }\n    CssSelectorParser.prototype.registerSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_1 = pseudos; _a < pseudos_1.length; _a++) {\n            var pseudo = pseudos_1[_a];\n            this.pseudos[pseudo] = 'selector';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_2 = pseudos; _a < pseudos_2.length; _a++) {\n            var pseudo = pseudos_2[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_3 = pseudos; _a < pseudos_3.length; _a++) {\n            var pseudo = pseudos_3[_a];\n            this.pseudos[pseudo] = 'numeric';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_4 = pseudos; _a < pseudos_4.length; _a++) {\n            var pseudo = pseudos_4[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_1 = operators; _a < operators_1.length; _a++) {\n            var operator = operators_1[_a];\n            this.ruleNestingOperators[operator] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_2 = operators; _a < operators_2.length; _a++) {\n            var operator = operators_2[_a];\n            delete this.ruleNestingOperators[operator];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_1 = mods; _a < mods_1.length; _a++) {\n            var mod = mods_1[_a];\n            this.attrEqualityMods[mod] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_2 = mods; _a < mods_2.length; _a++) {\n            var mod = mods_2[_a];\n            delete this.attrEqualityMods[mod];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.enableSubstitutes = function () {\n        this.substitutesEnabled = true;\n        return this;\n    };\n    CssSelectorParser.prototype.disableSubstitutes = function () {\n        this.substitutesEnabled = false;\n        return this;\n    };\n    CssSelectorParser.prototype.parse = function (str) {\n        return parser_context_1.parseCssSelector(str, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);\n    };\n    CssSelectorParser.prototype.render = function (path) {\n        return render_1.renderEntity(path).trim();\n    };\n    return CssSelectorParser;\n}());\nexports.CssSelectorParser = CssSelectorParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction parseCssSelector(str, pos, pseudos, attrEqualityMods, ruleNestingOperators, substitutesEnabled) {\n    var l = str.length;\n    var chr = '';\n    function getStr(quote, escapeTable) {\n        var result = '';\n        pos++;\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (chr === quote) {\n                pos++;\n                return result;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                chr = str.charAt(pos);\n                var esc = void 0;\n                if (chr === quote) {\n                    result += quote;\n                }\n                else if ((esc = escapeTable[chr]) !== undefined) {\n                    result += esc;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                result += chr;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function getIdent() {\n        var result = '';\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (utils_1.isIdent(chr)) {\n                result += chr;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                if (pos >= l) {\n                    throw Error('Expected symbol but end of file reached.');\n                }\n                chr = str.charAt(pos);\n                if (utils_1.identSpecialChars[chr]) {\n                    result += chr;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                return result;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function skipWhitespace() {\n        chr = str.charAt(pos);\n        var result = false;\n        while (chr === ' ' || chr === \"\\t\" || chr === \"\\n\" || chr === \"\\r\" || chr === \"\\f\") {\n            result = true;\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function parse() {\n        var res = parseSelector();\n        if (pos < l) {\n            throw Error('Rule expected but \"' + str.charAt(pos) + '\" found.');\n        }\n        return res;\n    }\n    function parseSelector() {\n        var selector = parseSingleSelector();\n        if (!selector) {\n            return null;\n        }\n        var res = selector;\n        chr = str.charAt(pos);\n        while (chr === ',') {\n            pos++;\n            skipWhitespace();\n            if (res.type !== 'selectors') {\n                res = {\n                    type: 'selectors',\n                    selectors: [selector]\n                };\n            }\n            selector = parseSingleSelector();\n            if (!selector) {\n                throw Error('Rule expected after \",\".');\n            }\n            res.selectors.push(selector);\n        }\n        return res;\n    }\n    function parseSingleSelector() {\n        skipWhitespace();\n        var selector = {\n            type: 'ruleSet'\n        };\n        var rule = parseRule();\n        if (!rule) {\n            return null;\n        }\n        var currentRule = selector;\n        while (rule) {\n            rule.type = 'rule';\n            currentRule.rule = rule;\n            currentRule = rule;\n            skipWhitespace();\n            chr = str.charAt(pos);\n            if (pos >= l || chr === ',' || chr === ')') {\n                break;\n            }\n            if (ruleNestingOperators[chr]) {\n                var op = chr;\n                pos++;\n                skipWhitespace();\n                rule = parseRule();\n                if (!rule) {\n                    throw Error('Rule expected after \"' + op + '\".');\n                }\n                rule.nestingOperator = op;\n            }\n            else {\n                rule = parseRule();\n                if (rule) {\n                    rule.nestingOperator = null;\n                }\n            }\n        }\n        return selector;\n    }\n    // @ts-ignore no-overlap\n    function parseRule() {\n        var rule = null;\n        while (pos < l) {\n            chr = str.charAt(pos);\n            if (chr === '*') {\n                pos++;\n                (rule = rule || {}).tagName = '*';\n            }\n            else if (utils_1.isIdentStart(chr) || chr === '\\\\') {\n                (rule = rule || {}).tagName = getIdent();\n            }\n            else if (chr === '.') {\n                pos++;\n                rule = rule || {};\n                (rule.classNames = rule.classNames || []).push(getIdent());\n            }\n            else if (chr === '#') {\n                pos++;\n                (rule = rule || {}).id = getIdent();\n            }\n            else if (chr === '[') {\n                pos++;\n                skipWhitespace();\n                var attr = {\n                    name: getIdent()\n                };\n                skipWhitespace();\n                // @ts-ignore\n                if (chr === ']') {\n                    pos++;\n                }\n                else {\n                    var operator = '';\n                    if (attrEqualityMods[chr]) {\n                        operator = chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \"=\" but end of file reached.');\n                    }\n                    if (chr !== '=') {\n                        throw Error('Expected \"=\" but \"' + chr + '\" found.');\n                    }\n                    attr.operator = operator + '=';\n                    pos++;\n                    skipWhitespace();\n                    var attrValue = '';\n                    attr.valueType = 'string';\n                    // @ts-ignore\n                    if (chr === '\"') {\n                        attrValue = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (chr === '\\'') {\n                        attrValue = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (substitutesEnabled && chr === '$') {\n                        pos++;\n                        attrValue = getIdent();\n                        attr.valueType = 'substitute';\n                    }\n                    else {\n                        while (pos < l) {\n                            if (chr === ']') {\n                                break;\n                            }\n                            attrValue += chr;\n                            pos++;\n                            chr = str.charAt(pos);\n                        }\n                        attrValue = attrValue.trim();\n                    }\n                    skipWhitespace();\n                    if (pos >= l) {\n                        throw Error('Expected \"]\" but end of file reached.');\n                    }\n                    if (chr !== ']') {\n                        throw Error('Expected \"]\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    attr.value = attrValue;\n                }\n                rule = rule || {};\n                (rule.attrs = rule.attrs || []).push(attr);\n            }\n            else if (chr === ':') {\n                pos++;\n                var pseudoName = getIdent();\n                var pseudo = {\n                    name: pseudoName\n                };\n                // @ts-ignore\n                if (chr === '(') {\n                    pos++;\n                    var value = '';\n                    skipWhitespace();\n                    if (pseudos[pseudoName] === 'selector') {\n                        pseudo.valueType = 'selector';\n                        value = parseSelector();\n                    }\n                    else {\n                        pseudo.valueType = pseudos[pseudoName] || 'string';\n                        // @ts-ignore\n                        if (chr === '\"') {\n                            value = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (chr === '\\'') {\n                            value = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (substitutesEnabled && chr === '$') {\n                            pos++;\n                            value = getIdent();\n                            pseudo.valueType = 'substitute';\n                        }\n                        else {\n                            while (pos < l) {\n                                if (chr === ')') {\n                                    break;\n                                }\n                                value += chr;\n                                pos++;\n                                chr = str.charAt(pos);\n                            }\n                            value = value.trim();\n                        }\n                        skipWhitespace();\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \")\" but end of file reached.');\n                    }\n                    if (chr !== ')') {\n                        throw Error('Expected \")\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    pseudo.value = value;\n                }\n                rule = rule || {};\n                (rule.pseudos = rule.pseudos || []).push(pseudo);\n            }\n            else {\n                break;\n            }\n        }\n        return rule;\n    }\n    return parse();\n}\nexports.parseCssSelector = parseCssSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction renderEntity(entity) {\n    var res = '';\n    switch (entity.type) {\n        case 'ruleSet':\n            var currentEntity = entity.rule;\n            var parts = [];\n            while (currentEntity) {\n                if (currentEntity.nestingOperator) {\n                    parts.push(currentEntity.nestingOperator);\n                }\n                parts.push(renderEntity(currentEntity));\n                currentEntity = currentEntity.rule;\n            }\n            res = parts.join(' ');\n            break;\n        case 'selectors':\n            res = entity.selectors.map(renderEntity).join(', ');\n            break;\n        case 'rule':\n            if (entity.tagName) {\n                if (entity.tagName === '*') {\n                    res = '*';\n                }\n                else {\n                    res = utils_1.escapeIdentifier(entity.tagName);\n                }\n            }\n            if (entity.id) {\n                res += \"#\" + utils_1.escapeIdentifier(entity.id);\n            }\n            if (entity.classNames) {\n                res += entity.classNames.map(function (cn) {\n                    return \".\" + (utils_1.escapeIdentifier(cn));\n                }).join('');\n            }\n            if (entity.attrs) {\n                res += entity.attrs.map(function (attr) {\n                    if ('operator' in attr) {\n                        if (attr.valueType === 'substitute') {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + \"$\" + attr.value + \"]\";\n                        }\n                        else {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + utils_1.escapeStr(attr.value) + \"]\";\n                        }\n                    }\n                    else {\n                        return \"[\" + utils_1.escapeIdentifier(attr.name) + \"]\";\n                    }\n                }).join('');\n            }\n            if (entity.pseudos) {\n                res += entity.pseudos.map(function (pseudo) {\n                    if (pseudo.valueType) {\n                        if (pseudo.valueType === 'selector') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + renderEntity(pseudo.value) + \")\";\n                        }\n                        else if (pseudo.valueType === 'substitute') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"($\" + pseudo.value + \")\";\n                        }\n                        else if (pseudo.valueType === 'numeric') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + pseudo.value + \")\";\n                        }\n                        else {\n                            return (\":\" + utils_1.escapeIdentifier(pseudo.name) +\n                                \"(\" + utils_1.escapeIdentifier(pseudo.value) + \")\");\n                        }\n                    }\n                    else {\n                        return \":\" + utils_1.escapeIdentifier(pseudo.name);\n                    }\n                }).join('');\n            }\n            break;\n        default:\n            throw Error('Unknown entity type: \"' + entity.type + '\".');\n    }\n    return res;\n}\nexports.renderEntity = renderEntity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c === '-') || (c === '_');\n}\nexports.isIdentStart = isIdentStart;\nfunction isIdent(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '-' || c === '_';\n}\nexports.isIdent = isIdent;\nfunction isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexports.isHex = isHex;\nfunction escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (exports.identSpecialChars[chr]) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (!(chr === '_' || chr === '-' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (i !== 0 && chr >= '0' && chr <= '9'))) {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xF800) === 0xD800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xFC00) !== 0xD800 || (extraCharCode & 0xFC00) !== 0xDC00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3FF) << 10) + (extraCharCode & 0x3FF) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n            else {\n                result += chr;\n            }\n        }\n        i++;\n    }\n    return result;\n}\nexports.escapeIdentifier = escapeIdentifier;\nfunction escapeStr(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    var replacement;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if ((replacement = exports.strReplacementsRev[chr]) !== undefined) {\n            chr = replacement;\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\" + result + \"\\\"\";\n}\nexports.escapeStr = escapeStr;\nexports.identSpecialChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    '$': true,\n    '%': true,\n    '&': true,\n    '\\'': true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexports.strReplacementsRev = {\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t',\n    '\\f': '\\\\f',\n    '\\v': '\\\\v'\n};\nexports.singleQuoteEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\\'': '\\''\n};\nexports.doubleQuotesEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\"': '\"'\n};\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","import { Parent, Node } from 'unist';\nimport webpack from 'webpack';\nimport remark from 'remark';\nimport { getTransformValue } from './transform';\nimport { Options, FUNNAME_PREFIX, CodeBlockItem, CodeBlockData } from '../';\n\n/**\n * Creates an object containing the parameters of the current URL.\n *\n * ```js\n * getURLParameters('name=Adam&surname=Smith');\n * // 👉 {name: 'Adam', surname: 'Smith'}\n * ```\n * @param url `name=Adam&surname=Smith`\n * @returns\n */\nexport const getURLParameters = (url: string): Record<string, string> =>\n  (url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce(\n    (a: Record<string, string>, v: string) => ((a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a),\n    {},\n  );\n\nexport interface MarkdownDataChild extends Node {\n  lang: string;\n  meta: string;\n  value: string;\n}\n\nexport interface MarkdownParseData extends Parent<MarkdownDataChild> {}\n\n/** 转换 代码*/\nexport const getProcessor = (source: string) => {\n  try {\n    const child = remark.parse(source) as MarkdownParseData;\n    return child.children;\n  } catch (err) {\n    console.warn(err);\n  }\n};\n\n/**\n * ```js\n * 'mdx:preview' => ''  // Empty\n * 'mdx:preview:demo12' => 'demo12' // return meta id => 'demo12'\n * ```\n * @param meta string\n * @returns string?\n */\nexport const getMetaId = (meta: string = '') => {\n  const [metaRaw = ''] = /mdx:(.[\\w|:]+)/i.exec(meta) || [];\n  return metaRaw.replace(/^mdx:preview:?/, '');\n};\n\n/**\n * ```js\n * isMeta('mdx:preview') => true\n * isMeta('mdx:preview:demo12') => true\n * isMeta('mdx:preview--demo12') => false\n * ```\n * @param meta\n * @returns boolean\n */\nexport const isMeta = (meta: string = '') => meta && meta.includes('mdx:preview');\n\n/** 获取需要渲染的代码块 **/\nexport function getCodeBlock(\n  child: MarkdownParseData['children'],\n  opts: Options = {},\n  resourcePath?: string,\n): CodeBlockData['data'] {\n  const { lang = ['jsx', 'tsx'] } = opts;\n  // 获取渲染部分\n  const codeBlock: Record<string | number, CodeBlockItem> = {};\n  child.forEach((item) => {\n    if (item && item.type === 'code' && lang.includes(item.lang)) {\n      const line = item.position.start.line;\n      const metaId = getMetaId(item.meta);\n      if (isMeta(item.meta)) {\n        let name = metaId || line;\n        const funName = `${resourcePath}.${FUNNAME_PREFIX}${name}`;\n        const returnCode = getTransformValue(item.value, `${funName}.${item.lang}`, opts);\n        codeBlock[name] = {\n          name,\n          meta: getURLParameters(item.meta),\n          code: returnCode,\n          language: item.lang,\n          value: item.value,\n        };\n      }\n    }\n  });\n  return codeBlock;\n}\n\n/**\n * `mdCodeModulesLoader` method for adding `markdown-react-code-preview-loader` to webpack config.\n * @param {webpack.Configuration} config webpack config\n * @param {string[]} lang Parsing language\n * @param {Options} option Loader Options\n * @returns {webpack.Configuration}\n */\nexport const mdCodeModulesLoader = (\n  config: webpack.Configuration,\n  lang?: string[],\n  option: Options = {},\n): webpack.Configuration => {\n  config.module.rules.forEach((ruleItem) => {\n    if (typeof ruleItem === 'object') {\n      if (ruleItem.oneOf) {\n        ruleItem.oneOf.unshift({\n          test: /.md$/,\n          use: [\n            {\n              loader: 'markdown-react-code-preview-loader',\n              options: { lang, ...option },\n            },\n          ],\n        });\n      }\n    }\n  });\n  return config;\n};\n","/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React from 'react';\n\nexport const ExpandIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path\n        d=\"M8.64 5.23a1 1 0 0 0-1.41.13l-5 6a1 1 0 0 0 0 1.27l4.83 6a1 1 0 0 0 .78.37 1 1 0 0 0 .78-1.63L4.29 12l4.48-5.36a1 1 0 0 0-.13-1.41zm13.14 6.14-4.78-6a1 1 0 0 0-1.41-.15 1 1 0 0 0-.15 1.41L19.71 12l-4.48 5.37a1 1 0 0 0 .13 1.41A1 1 0 0 0 16 19a1 1 0 0 0 .77-.36l5-6a1 1 0 0 0 .01-1.27z\"\n        data-name=\"code\"\n      />\n    </svg>\n  );\n};\nexport const CopyIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M18 21h-6a3 3 0 0 1-3-3v-6a3 3 0 0 1 3-3h6a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3zm-6-10a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1z\" />\n      <path d=\"M9.73 15H5.67A2.68 2.68 0 0 1 3 12.33V5.67A2.68 2.68 0 0 1 5.67 3h6.66A2.68 2.68 0 0 1 15 5.67V9.4h-2V5.67a.67.67 0 0 0-.67-.67H5.67a.67.67 0 0 0-.67.67v6.66a.67.67 0 0 0 .67.67h4.06z\" />\n    </svg>\n  );\n};\nexport const CopySuccessIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"green\">\n      <path d=\"M9.71 11.29a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 16a1 1 0 0 0 .72-.34l7-8a1 1 0 0 0-1.5-1.32L12 13.54z\" />\n      <path d=\"M21 11a1 1 0 0 0-1 1 8 8 0 0 1-8 8A8 8 0 0 1 6.33 6.36 7.93 7.93 0 0 1 12 4a8.79 8.79 0 0 1 1.9.22 1 1 0 1 0 .47-1.94A10.54 10.54 0 0 0 12 2a10 10 0 0 0-7 17.09A9.93 9.93 0 0 0 12 22a10 10 0 0 0 10-10 1 1 0 0 0-1-1z\" />\n    </svg>\n  );\n};\n","import { useState } from 'react';\nimport copyTextToClipboard from '@uiw/copy-to-clipboard';\nimport { CopyIcon, CopySuccessIcon } from './icons';\n\nexport const Copied = (props: { text?: string }) => {\n  const [copied, setCopied] = useState(false);\n  const handle = () => {\n    setCopied(true);\n    copyTextToClipboard(props.text || '', () => {\n      const timer = setTimeout(() => {\n        setCopied(false);\n        clearTimeout(timer);\n      }, 2000);\n    });\n  };\n  return <button onClick={handle}>{copied ? <CopySuccessIcon /> : <CopyIcon />}</button>;\n};\n","import { forwardRef, useState } from 'react';\nimport { Copied } from './Copied';\nimport { ExpandIcon } from './icons';\nimport './styles.css';\n\nexport interface CodeLayoutProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  prefixCls?: string;\n  /** 原始 代码块 渲染 **/\n  code?: React.ReactNode;\n  text?: string;\n  /** Title section, you can also place buttons **/\n  toolbar?: React.ReactNode;\n  /** 额外内容，展示 toolbar 右侧内容 */\n  toolbarExtra?: React.ReactNode;\n  disableToolbar?: boolean;\n  disableCode?: boolean;\n  disablePreview?: boolean;\n  /** 禁用方格背景 */\n  disableCheckered?: boolean;\n  /** Configure the preview background color. */\n  background?: string;\n  /**\n   * 是否需要边框\n   * @default true\n   */\n  bordered?: boolean;\n  /**\n   * 是否显示复制按钮\n   * @default true\n   */\n  copied?: boolean;\n}\n\n/** react-code-preview-layout 缩写 */\nconst PRE_FIX = 'w-rcpl';\n\nconst CodeLayout = forwardRef<HTMLDivElement, CodeLayoutProps>((props, ref) => {\n  const [showCode, setShowCode] = useState(false);\n  const {\n    children,\n    toolbar,\n    bordered = true,\n    disableCheckered = false,\n    disablePreview = false,\n    disableCode = false,\n    disableToolbar = false,\n    text = '',\n    background = '',\n    copied = true,\n    toolbarExtra,\n    code,\n    prefixCls = PRE_FIX,\n    className,\n    ...other\n  } = props;\n  const cls = [prefixCls, className, bordered ? `w-bordered` : null, disableCheckered ? `w-disable-checkered` : null]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n\n  const style: React.CSSProperties = !background\n    ? {}\n    : {\n        backgroundColor: background,\n        backgroundImage: 'none',\n      };\n  return (\n    <div ref={ref} {...other} className={cls}>\n      {!disablePreview && (\n        <div className={`${prefixCls}-preview`} style={style}>\n          {children}\n        </div>\n      )}\n      {!disableToolbar && (\n        <div className={`${prefixCls}-toolbar`}>\n          <div className={`${prefixCls}-title`}>{toolbar}</div>\n          <div className={`${prefixCls}-extra`}>\n            {toolbarExtra}\n            {copied && <Copied text={text} />}\n            {!disableCode && (\n              <button onClick={() => setShowCode(!showCode)}>\n                <ExpandIcon />\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n      {!disableCode && !disableToolbar && (\n        <div className={`${prefixCls}-code ${showCode ? 'w-display' : 'w-hidden'}`}>{code}</div>\n      )}\n    </div>\n  );\n});\n\nexport default CodeLayout;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use strict'\n\nmodule.exports = stringify\n\nvar toMarkdown = require('mdast-util-to-markdown')\n\nfunction stringify(options) {\n  var self = this\n\n  this.Compiler = compile\n\n  function compile(tree) {\n    return toMarkdown(\n      tree,\n      Object.assign({}, self.data('settings'), options, {\n        // Note: this option is not in the readme.\n        // The goal is for it to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: self.data('toMarkdownExtensions') || []\n      })\n    )\n  }\n}\n","'use strict'\n\nmodule.exports = longestStreak\n\n// Get the count of the longest repeating streak of `character` in `value`.\nfunction longestStreak(value, character) {\n  var count = 0\n  var maximum = 0\n  var expected\n  var index\n\n  if (typeof character !== 'string' || character.length !== 1) {\n    throw new Error('Expected character')\n  }\n\n  value = String(value)\n  index = value.indexOf(character)\n  expected = index\n\n  while (index !== -1) {\n    count++\n\n    if (index === expected) {\n      if (count > maximum) {\n        maximum = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + 1\n    index = value.indexOf(character, expected)\n  }\n\n  return maximum\n}\n","module.exports = require('./lib')\n","module.exports = configure\n\nfunction configure(base, extension) {\n  var index = -1\n  var key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      base[key] = base[key].concat(extension[key] || [])\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","module.exports = blockquote\n\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction blockquote(node, _, context) {\n  var exit = context.enter('blockquote')\n  var value = indentLines(flow(node, context), map)\n  exit()\n  return value\n}\n\nfunction map(line, index, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","module.exports = hardBreak\n\nvar patternInScope = require('../util/pattern-in-scope')\n\nfunction hardBreak(node, _, context, safe) {\n  var index = -1\n\n  while (++index < context.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      context.unsafe[index].character === '\\n' &&\n      patternInScope(context.stack, context.unsafe[index])\n    ) {\n      return /[ \\t]/.test(safe.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","module.exports = code\n\nvar repeat = require('repeat-string')\nvar streak = require('longest-streak')\nvar formatCodeAsIndented = require('../util/format-code-as-indented')\nvar checkFence = require('../util/check-fence')\nvar indentLines = require('../util/indent-lines')\nvar safe = require('../util/safe')\n\nfunction code(node, _, context) {\n  var marker = checkFence(context)\n  var raw = node.value || ''\n  var suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n  var value\n  var sequence\n  var exit\n  var subexit\n\n  if (formatCodeAsIndented(node, context)) {\n    exit = context.enter('codeIndented')\n    value = indentLines(raw, map)\n  } else {\n    sequence = repeat(marker, Math.max(streak(raw, marker) + 1, 3))\n    exit = context.enter('codeFenced')\n    value = sequence\n\n    if (node.lang) {\n      subexit = context.enter('codeFencedLang' + suffix)\n      value += safe(context, node.lang, {\n        before: '`',\n        after: ' ',\n        encode: ['`']\n      })\n      subexit()\n    }\n\n    if (node.lang && node.meta) {\n      subexit = context.enter('codeFencedMeta' + suffix)\n      value +=\n        ' ' +\n        safe(context, node.meta, {\n          before: ' ',\n          after: '\\n',\n          encode: ['`']\n        })\n      subexit()\n    }\n\n    value += '\\n'\n\n    if (raw) {\n      value += raw + '\\n'\n    }\n\n    value += sequence\n  }\n\n  exit()\n  return value\n}\n\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","module.exports = definition\n\nvar association = require('../util/association')\nvar checkQuote = require('../util/check-quote')\nvar safe = require('../util/safe')\n\nfunction definition(node, _, context) {\n  var marker = checkQuote(context)\n  var suffix = marker === '\"' ? 'Quote' : 'Apostrophe'\n  var exit = context.enter('definition')\n  var subexit = context.enter('label')\n  var value =\n    '[' + safe(context, association(node), {before: '[', after: ']'}) + ']: '\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there’s whitespace, enclosed is prettier.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {before: ' ', after: ' '})\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      marker +\n      safe(context, node.title, {before: marker, after: marker}) +\n      marker\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","module.exports = emphasis\nemphasis.peek = emphasisPeek\n\nvar checkEmphasis = require('../util/check-emphasis')\nvar phrasing = require('../util/container-phrasing')\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\nfunction emphasis(node, _, context) {\n  var marker = checkEmphasis(context)\n  var exit = context.enter('emphasis')\n  var value = phrasing(node, context, {before: marker, after: marker})\n  exit()\n  return marker + value + marker\n}\n\nfunction emphasisPeek(node, _, context) {\n  return context.options.emphasis || '*'\n}\n","module.exports = heading\n\nvar repeat = require('repeat-string')\nvar formatHeadingAsSetext = require('../util/format-heading-as-setext')\nvar phrasing = require('../util/container-phrasing')\n\nfunction heading(node, _, context) {\n  var rank = Math.max(Math.min(6, node.depth || 1), 1)\n  var exit\n  var subexit\n  var value\n  var sequence\n\n  if (formatHeadingAsSetext(node, context)) {\n    exit = context.enter('headingSetext')\n    subexit = context.enter('phrasing')\n    value = phrasing(node, context, {before: '\\n', after: '\\n'})\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      repeat(\n        rank === 1 ? '=' : '-',\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  sequence = repeat('#', rank)\n  exit = context.enter('headingAtx')\n  subexit = context.enter('phrasing')\n  value = phrasing(node, context, {before: '# ', after: '\\n'})\n  value = value ? sequence + ' ' + value : sequence\n  if (context.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","module.exports = html\nhtml.peek = htmlPeek\n\nfunction html(node) {\n  return node.value || ''\n}\n\nfunction htmlPeek() {\n  return '<'\n}\n","module.exports = imageReference\nimageReference.peek = imageReferencePeek\n\nvar association = require('../util/association')\nvar safe = require('../util/safe')\n\nfunction imageReference(node, _, context) {\n  var type = node.referenceType\n  var exit = context.enter('imageReference')\n  var subexit = context.enter('label')\n  var alt = safe(context, node.alt, {before: '[', after: ']'})\n  var value = '![' + alt + ']'\n  var reference\n  var stack\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  reference = safe(context, association(node), {before: '[', after: ']'})\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += '[' + reference + ']'\n  } else if (type !== 'shortcut') {\n    value += '[]'\n  }\n\n  return value\n}\n\nfunction imageReferencePeek() {\n  return '!'\n}\n","module.exports = image\nimage.peek = imagePeek\n\nvar checkQuote = require('../util/check-quote')\nvar safe = require('../util/safe')\n\nfunction image(node, _, context) {\n  var quote = checkQuote(context)\n  var suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  var exit = context.enter('image')\n  var subexit = context.enter('label')\n  var value = '![' + safe(context, node.alt, {before: '[', after: ']'}) + ']('\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // Or if there’s markdown whitespace or an eol, enclose.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {\n      before: '(',\n      after: node.title ? ' ' : ')'\n    })\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      quote +\n      safe(context, node.title, {before: quote, after: quote}) +\n      quote\n    subexit()\n  }\n\n  value += ')'\n  exit()\n\n  return value\n}\n\nfunction imagePeek() {\n  return '!'\n}\n","exports.blockquote = require('./blockquote')\nexports.break = require('./break')\nexports.code = require('./code')\nexports.definition = require('./definition')\nexports.emphasis = require('./emphasis')\nexports.hardBreak = require('./break')\nexports.heading = require('./heading')\nexports.html = require('./html')\nexports.image = require('./image')\nexports.imageReference = require('./image-reference')\nexports.inlineCode = require('./inline-code')\nexports.link = require('./link')\nexports.linkReference = require('./link-reference')\nexports.list = require('./list')\nexports.listItem = require('./list-item')\nexports.paragraph = require('./paragraph')\nexports.root = require('./root')\nexports.strong = require('./strong')\nexports.text = require('./text')\nexports.thematicBreak = require('./thematic-break')\n","module.exports = inlineCode\ninlineCode.peek = inlineCodePeek\n\nvar patternCompile = require('../util/pattern-compile')\n\nfunction inlineCode(node, parent, context) {\n  var value = node.value || ''\n  var sequence = '`'\n  var index = -1\n  var pattern\n  var expression\n  var match\n  var position\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    (/[ \\r\\n`]/.test(value.charAt(0)) ||\n      /[ \\r\\n`]/.test(value.charAt(value.length - 1)))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\nfunction inlineCodePeek() {\n  return '`'\n}\n","module.exports = linkReference\nlinkReference.peek = linkReferencePeek\n\nvar association = require('../util/association')\nvar phrasing = require('../util/container-phrasing')\nvar safe = require('../util/safe')\n\nfunction linkReference(node, _, context) {\n  var type = node.referenceType\n  var exit = context.enter('linkReference')\n  var subexit = context.enter('label')\n  var text = phrasing(node, context, {before: '[', after: ']'})\n  var value = '[' + text + ']'\n  var reference\n  var stack\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  reference = safe(context, association(node), {before: '[', after: ']'})\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += '[' + reference + ']'\n  } else if (type !== 'shortcut') {\n    value += '[]'\n  }\n\n  return value\n}\n\nfunction linkReferencePeek() {\n  return '['\n}\n","module.exports = link\nlink.peek = linkPeek\n\nvar checkQuote = require('../util/check-quote')\nvar formatLinkAsAutolink = require('../util/format-link-as-autolink')\nvar phrasing = require('../util/container-phrasing')\nvar safe = require('../util/safe')\n\nfunction link(node, _, context) {\n  var quote = checkQuote(context)\n  var suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  var exit\n  var subexit\n  var value\n  var stack\n\n  if (formatLinkAsAutolink(node, context)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    stack = context.stack\n    context.stack = []\n    exit = context.enter('autolink')\n    value = '<' + phrasing(node, context, {before: '<', after: '>'}) + '>'\n    exit()\n    context.stack = stack\n    return value\n  }\n\n  exit = context.enter('link')\n  subexit = context.enter('label')\n  value = '[' + phrasing(node, context, {before: '[', after: ']'}) + ']('\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // Or if there’s markdown whitespace or an eol, enclose.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {\n      before: '(',\n      after: node.title ? ' ' : ')'\n    })\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      quote +\n      safe(context, node.title, {before: quote, after: quote}) +\n      quote\n    subexit()\n  }\n\n  value += ')'\n\n  exit()\n  return value\n}\n\nfunction linkPeek(node, _, context) {\n  return formatLinkAsAutolink(node, context) ? '<' : '['\n}\n","module.exports = listItem\n\nvar repeat = require('repeat-string')\nvar checkBullet = require('../util/check-bullet')\nvar checkListItemIndent = require('../util/check-list-item-indent')\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction listItem(node, parent, context) {\n  var bullet = checkBullet(context)\n  var listItemIndent = checkListItemIndent(context)\n  var size\n  var value\n  var exit\n\n  if (parent && parent.ordered) {\n    bullet =\n      (parent.start > -1 ? parent.start : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      '.'\n  }\n\n  size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' && ((parent && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  exit = context.enter('listItem')\n  value = indentLines(flow(node, context), map)\n  exit()\n\n  return value\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : repeat(' ', size)) + line\n    }\n\n    return (blank ? bullet : bullet + repeat(' ', size - bullet.length)) + line\n  }\n}\n","module.exports = list\n\nvar flow = require('../util/container-flow')\n\nfunction list(node, _, context) {\n  var exit = context.enter('list')\n  var value = flow(node, context)\n  exit()\n  return value\n}\n","module.exports = paragraph\n\nvar phrasing = require('../util/container-phrasing')\n\nfunction paragraph(node, _, context) {\n  var exit = context.enter('paragraph')\n  var subexit = context.enter('phrasing')\n  var value = phrasing(node, context, {before: '\\n', after: '\\n'})\n  subexit()\n  exit()\n  return value\n}\n","module.exports = root\n\nvar flow = require('../util/container-flow')\n\nfunction root(node, _, context) {\n  return flow(node, context)\n}\n","module.exports = strong\nstrong.peek = strongPeek\n\nvar checkStrong = require('../util/check-strong')\nvar phrasing = require('../util/container-phrasing')\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\nfunction strong(node, _, context) {\n  var marker = checkStrong(context)\n  var exit = context.enter('strong')\n  var value = phrasing(node, context, {before: marker, after: marker})\n  exit()\n  return marker + marker + value + marker + marker\n}\n\nfunction strongPeek(node, _, context) {\n  return context.options.strong || '*'\n}\n","module.exports = text\n\nvar safe = require('../util/safe')\n\nfunction text(node, parent, context, safeOptions) {\n  return safe(context, node.value, safeOptions)\n}\n","module.exports = thematicBreak\n\nvar repeat = require('repeat-string')\nvar checkRepeat = require('../util/check-rule-repeat')\nvar checkRule = require('../util/check-rule')\n\nfunction thematicBreak(node, parent, context) {\n  var value = repeat(\n    checkRule(context) + (context.options.ruleSpaces ? ' ' : ''),\n    checkRepeat(context)\n  )\n\n  return context.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","module.exports = toMarkdown\n\nvar zwitch = require('zwitch')\nvar configure = require('./configure')\nvar defaultHandlers = require('./handle')\nvar defaultJoin = require('./join')\nvar defaultUnsafe = require('./unsafe')\n\nfunction toMarkdown(tree, options) {\n  var settings = options || {}\n  var context = {\n    enter: enter,\n    stack: [],\n    unsafe: [],\n    join: [],\n    handlers: {},\n    options: {}\n  }\n  var result\n\n  configure(context, {\n    unsafe: defaultUnsafe,\n    join: defaultJoin,\n    handlers: defaultHandlers\n  })\n  configure(context, settings)\n\n  if (context.options.tightDefinitions) {\n    context.join = [joinDefinition].concat(context.join)\n  }\n\n  context.handle = zwitch('type', {\n    invalid: invalid,\n    unknown: unknown,\n    handlers: context.handlers\n  })\n\n  result = context.handle(tree, null, context, {before: '\\n', after: '\\n'})\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  function enter(name) {\n    context.stack.push(name)\n    return exit\n\n    function exit() {\n      context.stack.pop()\n    }\n  }\n}\n\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\nfunction unknown(node) {\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n","module.exports = [joinDefaults]\n\nvar formatCodeAsIndented = require('./util/format-code-as-indented')\nvar formatHeadingAsSetext = require('./util/format-heading-as-setext')\n\nfunction joinDefaults(left, right, parent, context) {\n  if (\n    // Two lists with the same marker.\n    (right.type === 'list' &&\n      right.type === left.type &&\n      Boolean(left.ordered) === Boolean(right.ordered)) ||\n    // Indented code after list or another indented code.\n    (right.type === 'code' &&\n      formatCodeAsIndented(right, context) &&\n      (left.type === 'list' ||\n        (left.type === right.type && formatCodeAsIndented(left, context))))\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if (typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, context)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","module.exports = [\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {character: '!', after: '\\\\[', inConstruct: 'phrasing'},\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  {before: '\\\\]', character: '(', inConstruct: 'phrasing'},\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*'},\n  {character: '*', inConstruct: 'phrasing'},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {character: '<', after: '[!/?A-Za-z]', inConstruct: 'phrasing'},\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: ['phrasing', 'label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {\n    character: ']',\n    inConstruct: ['label', 'reference']\n  },\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {before: '[^A-Za-z]', character: '_', inConstruct: 'phrasing'},\n  {character: '_', after: '[^A-Za-z]', inConstruct: 'phrasing'},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedMetaGraveAccent',\n      'phrasing'\n    ]\n  },\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","module.exports = association\n\nvar decode = require('parse-entities/decode-entity')\n\nvar characterEscape = /\\\\([!-/:-@[-`{-~])/g\nvar characterReference = /&(#(\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n// The `label` of an association is the string value: character escapes and\n// references work, and casing is intact.\n// The `identifier` is used to match one association to another: controversially,\n// character escapes and references don’t work in this matching: `&copy;` does\n// not match `©`, and `\\+` does not match `+`.\n// But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n// matches `a b`.\n// So, we do prefer the label when figuring out how we’re going to serialize:\n// it has whitespace, casing, and we can ignore most useless character escapes\n// and all character references.\nfunction association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return node.identifier\n    .replace(characterEscape, '$1')\n    .replace(characterReference, decodeIfPossible)\n}\n\nfunction decodeIfPossible($0, $1) {\n  return decode($1) || $0\n}\n","module.exports = checkBullet\n\nfunction checkBullet(context) {\n  var marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkEmphasis\n\nfunction checkEmphasis(context) {\n  var marker = context.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkFence\n\nfunction checkFence(context) {\n  var marker = context.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkListItemIndent\n\nfunction checkListItemIndent(context) {\n  var style = context.options.listItemIndent || 'tab'\n\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","module.exports = checkQuote\n\nfunction checkQuote(context) {\n  var marker = context.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkRule\n\nfunction checkRule(context) {\n  var repetition = context.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","module.exports = checkRule\n\nfunction checkRule(context) {\n  var marker = context.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkStrong\n\nfunction checkStrong(context) {\n  var marker = context.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = flow\n\nvar repeat = require('repeat-string')\n\nfunction flow(parent, context) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  function between(left, right) {\n    var index = -1\n    var result\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result))\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","module.exports = phrasing\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var before = safeOptions.before\n  var after\n  var handle\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: ''\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n    }\n\n    results.push(\n      context.handle(child, parent, context, {\n        before: before,\n        after: after\n      })\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  return results.join('')\n}\n","module.exports = formatCodeAsIndented\n\nfunction formatCodeAsIndented(node, context) {\n  return (\n    !context.options.fences &&\n    node.value &&\n    // If there’s no info…\n    !node.lang &&\n    // And there’s a non-whitespace character…\n    /[^ \\r\\n]/.test(node.value) &&\n    // And the value doesn’t start or end in a blank…\n    !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","module.exports = formatHeadingAsSetext\n\nvar toString = require('mdast-util-to-string')\n\nfunction formatHeadingAsSetext(node, context) {\n  return (\n    context.options.setext && (!node.depth || node.depth < 3) && toString(node)\n  )\n}\n","module.exports = formatLinkAsAutolink\n\nvar toString = require('mdast-util-to-string')\n\nfunction formatLinkAsAutolink(node, context) {\n  var raw = toString(node)\n\n  return (\n    !context.options.resourceLink &&\n    // If there’s a url…\n    node.url &&\n    // And there’s a no title…\n    !node.title &&\n    // And the content of `node` is a single text node…\n    node.children &&\n    node.children.length === 1 &&\n    node.children[0].type === 'text' &&\n    // And if the url is the same as the content…\n    (raw === node.url || 'mailto:' + raw === node.url) &&\n    // And that starts w/ a protocol…\n    /^[a-z][a-z+.-]+:/i.test(node.url) &&\n    // And that doesn’t contain ASCII control codes (character escapes and\n    // references don’t work) or angle brackets…\n    !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","module.exports = indentLines\n\nvar eol = /\\r?\\n|\\r/g\n\nfunction indentLines(value, map) {\n  var result = []\n  var start = 0\n  var line = 0\n  var match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","module.exports = patternCompile\n\nfunction patternCompile(pattern) {\n  var before\n  var after\n\n  if (!pattern._compiled) {\n    before = pattern.before ? '(?:' + pattern.before + ')' : ''\n    after = pattern.after ? '(?:' + pattern.after + ')' : ''\n\n    if (pattern.atBreak) {\n      before = '[\\\\r\\\\n][\\\\t ]*' + before\n    }\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (after || ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","module.exports = patternInScope\n\nfunction patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct)\n  )\n}\n\nfunction listInScope(stack, list, none) {\n  var index\n\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  index = -1\n\n  while (++index < list.length) {\n    if (stack.indexOf(list[index]) !== -1) {\n      return true\n    }\n  }\n\n  return false\n}\n","module.exports = safe\n\nvar patternCompile = require('./pattern-compile')\nvar patternInScope = require('./pattern-in-scope')\n\nfunction safe(context, input, config) {\n  var value = (config.before || '') + (input || '') + (config.after || '')\n  var positions = []\n  var result = []\n  var infos = {}\n  var index = -1\n  var before\n  var after\n  var position\n  var pattern\n  var expression\n  var match\n  var start\n  var end\n\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      before = 'before' in pattern || pattern.atBreak\n      after = 'after' in pattern\n\n      position = match.index + (before ? match[1].length : 0)\n\n      if (positions.indexOf(position) === -1) {\n        positions.push(position)\n        infos[position] = {before: before, after: after}\n      } else {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  start = config.before ? config.before.length : 0\n  end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    position = positions[index]\n\n    if (\n      // Character before or after matched:\n      position < start ||\n      position >= end\n    ) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      position + 1 < end &&\n      positions[index + 1] === position + 1 &&\n      infos[position].after &&\n      !infos[position + 1].before &&\n      !infos[position + 1].after\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || config.encode.indexOf(value.charAt(position)) === -1)\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\nfunction numerical(a, b) {\n  return a - b\n}\n\nfunction escapeBackslashes(value, after) {\n  var expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  var positions = []\n  var results = []\n  var index = -1\n  var start = 0\n  var whole = value + after\n  var match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.\n// Prefer the node’s plain-text fields, otherwise serialize its children,\n// and if the given value is an array, serialize the nodes in it.\nfunction toString(node) {\n  return (\n    (node &&\n      (node.value ||\n        node.alt ||\n        node.title ||\n        ('children' in node && all(node.children)) ||\n        ('length' in node && all(node)))) ||\n    ''\n  )\n}\n\nfunction all(values) {\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = toString(values[index])\n  }\n\n  return result.join('')\n}\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nmodule.exports = factory\n\nvar noop = Function.prototype\nvar own = {}.hasOwnProperty\n\n// Handle values based on a property.\nfunction factory(key, options) {\n  var settings = options || {}\n\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    return (fn || noop).apply(this, arguments)\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n","'use strict'\n\nvar unified = require('unified')\nvar parse = require('remark-parse')\nvar stringify = require('remark-stringify')\n\nmodule.exports = unified().use(parse).use(stringify).freeze()\n","'use strict'\n\nmodule.exports = bail\n\nfunction bail(err) {\n  if (err) {\n    throw err\n  }\n}\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict'\n\nmodule.exports = fromMarkdown\n\n// These three are compiled away in the `dist/`\n\nvar toString = require('mdast-util-to-string')\nvar assign = require('micromark/dist/constant/assign')\nvar own = require('micromark/dist/constant/has-own-property')\nvar normalizeIdentifier = require('micromark/dist/util/normalize-identifier')\nvar safeFromInt = require('micromark/dist/util/safe-from-int')\nvar parser = require('micromark/dist/parse')\nvar preprocessor = require('micromark/dist/preprocess')\nvar postprocess = require('micromark/dist/postprocess')\nvar decode = require('parse-entities/decode-entity')\nvar stringifyPosition = require('unist-util-stringify-position')\n\nfunction fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n\n  return compiler(options)(\n    postprocess(\n      parser(options).document().write(preprocessor()(value, encoding, true))\n    )\n  )\n}\n\n// Note this compiler only understand complete buffering, not streaming.\nfunction compiler(options) {\n  var settings = options || {}\n  var config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n\n    settings.mdastExtensions || []\n  )\n\n  var data = {}\n\n  return compile\n\n  function compile(events) {\n    var tree = {type: 'root', children: []}\n    var stack = [tree]\n    var tokenStack = []\n    var listStack = []\n    var index = -1\n    var handler\n    var listStart\n\n    var context = {\n      stack: stack,\n      tokenStack: tokenStack,\n      config: config,\n      enter: enter,\n      exit: exit,\n      buffer: buffer,\n      resume: resume,\n      setData: setData,\n      getData: getData\n    }\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          listStart = listStack.pop(index)\n          index = prepareList(events, listStart, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          assign({sliceSerialize: events[index][2].sliceSerialize}, context),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length) {\n      throw new Error(\n        'Cannot close document, a token (`' +\n          tokenStack[tokenStack.length - 1].type +\n          '`, ' +\n          stringifyPosition({\n            start: tokenStack[tokenStack.length - 1].start,\n            end: tokenStack[tokenStack.length - 1].end\n          }) +\n          ') is still open'\n      )\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length ? events[0][1].start : {line: 1, column: 1, offset: 0}\n      ),\n\n      end: point(\n        events.length\n          ? events[events.length - 2][1].end\n          : {line: 1, column: 1, offset: 0}\n      )\n    }\n\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n\n  function prepareList(events, start, length) {\n    var index = start - 1\n    var containerBalance = -1\n    var listSpread = false\n    var listItem\n    var tailIndex\n    var lineIndex\n    var tailEvent\n    var event\n    var firstBlankLineIndex\n    var atMarker\n\n    while (++index <= length) {\n      event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = point(\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: point(event[1].start)\n          }\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  function getData(key) {\n    return data[key]\n  }\n\n  function point(d) {\n    return {line: d.line, column: d.column, offset: d.offset}\n  }\n\n  function opener(create, and) {\n    return open\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  function buffer() {\n    this.stack.push({type: 'fragment', children: []})\n  }\n\n  function enter(node, token) {\n    this.stack[this.stack.length - 1].children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push(token)\n    node.position = {start: point(token.start)}\n    return node\n  }\n\n  function closer(and) {\n    return close\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  function exit(token) {\n    var node = this.stack.pop()\n    var open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): it’s not open'\n      )\n    } else if (open.type !== token.type) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): a different token (`' +\n          open.type +\n          '`, ' +\n          stringifyPosition({start: open.start, end: open.end}) +\n          ') is open'\n      )\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      this.stack[this.stack.length - 2].start = parseInt(\n        this.sliceSerialize(token),\n        10\n      )\n\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  function onexitcodefencedfenceinfo() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].lang = data\n  }\n\n  function onexitcodefencedfencemeta() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].meta = data\n  }\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  function onexitcodefenced() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data.replace(\n      /^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g,\n      ''\n    )\n\n    setData('flowCodeInside')\n  }\n\n  function onexitcodeindented() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitdefinitiontitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitdefinitiondestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitatxheadingsequence(token) {\n    if (!this.stack[this.stack.length - 1].depth) {\n      this.stack[this.stack.length - 1].depth = this.sliceSerialize(\n        token\n      ).length\n    }\n  }\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  function onexitsetextheadinglinesequence(token) {\n    this.stack[this.stack.length - 1].depth =\n      this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  function onenterdata(token) {\n    var siblings = this.stack[this.stack.length - 1].children\n    var tail = siblings[siblings.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {start: point(token.start)}\n      this.stack[this.stack.length - 1].children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n\n  function onexitdata(token) {\n    var tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  function onexitlineending(token) {\n    var context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      context.children[context.children.length - 1].position.end = point(\n        token.end\n      )\n\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.indexOf(context.type) > -1\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  function onexithtmlflow() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexithtmltext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitcodetext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitlink() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitimage() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitlabeltext(token) {\n    this.stack[this.stack.length - 2].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitlabel() {\n    var fragment = this.stack[this.stack.length - 1]\n    var value = this.resume()\n\n    this.stack[this.stack.length - 1].label = value\n\n    // Assume a reference.\n    setData('inReference', true)\n\n    if (this.stack[this.stack.length - 1].type === 'link') {\n      this.stack[this.stack.length - 1].children = fragment.children\n    } else {\n      this.stack[this.stack.length - 1].alt = value\n    }\n  }\n\n  function onexitresourcedestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitresourcetitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  function onexitreferencestring(token) {\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  function onexitcharacterreferencevalue(token) {\n    var data = this.sliceSerialize(token)\n    var type = getData('characterReferenceType')\n    var value\n    var tail\n\n    if (type) {\n      value = safeFromInt(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n\n      setData('characterReferenceType')\n    } else {\n      value = decode(data)\n    }\n\n    tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url = this.sliceSerialize(token)\n  }\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url =\n      'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  function blockQuote() {\n    return {type: 'blockquote', children: []}\n  }\n\n  function codeFlow() {\n    return {type: 'code', lang: null, meta: null, value: ''}\n  }\n\n  function codeText() {\n    return {type: 'inlineCode', value: ''}\n  }\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  function emphasis() {\n    return {type: 'emphasis', children: []}\n  }\n\n  function heading() {\n    return {type: 'heading', depth: undefined, children: []}\n  }\n\n  function hardBreak() {\n    return {type: 'break'}\n  }\n\n  function html() {\n    return {type: 'html', value: ''}\n  }\n\n  function image() {\n    return {type: 'image', title: null, url: '', alt: null}\n  }\n\n  function link() {\n    return {type: 'link', title: null, url: '', children: []}\n  }\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  function paragraph() {\n    return {type: 'paragraph', children: []}\n  }\n\n  function strong() {\n    return {type: 'strong', children: []}\n  }\n\n  function text() {\n    return {type: 'text', value: ''}\n  }\n\n  function thematicBreak() {\n    return {type: 'thematicBreak'}\n  }\n}\n\nfunction configure(config, extensions) {\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(config, extensions[index])\n  }\n\n  return config\n}\n\nfunction extension(config, extension) {\n  var key\n  var left\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : (config[key] = {})\n\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, extension[key])\n    } else {\n      Object.assign(left, extension[key])\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = require('./dist')\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.\n// Prefer the node’s plain-text fields, otherwise serialize its children,\n// and if the given value is an array, serialize the nodes in it.\nfunction toString(node) {\n  return (\n    (node &&\n      (node.value ||\n        node.alt ||\n        node.title ||\n        ('children' in node && all(node.children)) ||\n        ('length' in node && all(node)))) ||\n    ''\n  )\n}\n\nfunction all(values) {\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = toString(values[index])\n  }\n\n  return result.join('')\n}\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlpha = regexCheck(/[A-Za-z]/)\n\nmodule.exports = asciiAlpha\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\nmodule.exports = asciiAlphanumeric\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\nmodule.exports = asciiAtext\n","'use strict'\n\n// Note: EOF is seen as ASCII control here, because `null < 32 == true`.\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code < 32 || code === 127\n  )\n}\n\nmodule.exports = asciiControl\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiDigit = regexCheck(/\\d/)\n\nmodule.exports = asciiDigit\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\nmodule.exports = asciiHexDigit\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\nmodule.exports = asciiPunctuation\n","'use strict'\n\nfunction markdownLineEndingOrSpace(code) {\n  return code < 0 || code === 32\n}\n\nmodule.exports = markdownLineEndingOrSpace\n","'use strict'\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n\nmodule.exports = markdownLineEnding\n","'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n","'use strict'\n\nvar unicodePunctuationRegex = require('../constant/unicode-punctuation-regex.js')\nvar regexCheck = require('../util/regex-check.js')\n\n// In fact adds to the bundle size.\n\nvar unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar unicodeWhitespace = regexCheck(/\\s/)\n\nmodule.exports = unicodeWhitespace\n","'use strict'\n\nvar assign = Object.assign\n\nmodule.exports = assign\n","'use strict'\n\nvar fromCharCode = String.fromCharCode\n\nmodule.exports = fromCharCode\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = own\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar basics = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\nmodule.exports = basics\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar raws = ['pre', 'script', 'style', 'textarea']\n\nmodule.exports = raws\n","'use strict'\n\nvar splice = [].splice\n\nmodule.exports = splice\n","'use strict'\n\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nvar unicodePunctuation = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar text$1 = require('./initialize/text.js')\nvar attention = require('./tokenize/attention.js')\nvar autolink = require('./tokenize/autolink.js')\nvar blockQuote = require('./tokenize/block-quote.js')\nvar characterEscape = require('./tokenize/character-escape.js')\nvar characterReference = require('./tokenize/character-reference.js')\nvar codeFenced = require('./tokenize/code-fenced.js')\nvar codeIndented = require('./tokenize/code-indented.js')\nvar codeText = require('./tokenize/code-text.js')\nvar definition = require('./tokenize/definition.js')\nvar hardBreakEscape = require('./tokenize/hard-break-escape.js')\nvar headingAtx = require('./tokenize/heading-atx.js')\nvar htmlFlow = require('./tokenize/html-flow.js')\nvar htmlText = require('./tokenize/html-text.js')\nvar labelEnd = require('./tokenize/label-end.js')\nvar labelStartImage = require('./tokenize/label-start-image.js')\nvar labelStartLink = require('./tokenize/label-start-link.js')\nvar lineEnding = require('./tokenize/line-ending.js')\nvar list = require('./tokenize/list.js')\nvar setextUnderline = require('./tokenize/setext-underline.js')\nvar thematicBreak = require('./tokenize/thematic-break.js')\n\nvar document = {\n  42: list,\n  // Asterisk\n  43: list,\n  // Plus sign\n  45: list,\n  // Dash\n  48: list,\n  // 0\n  49: list,\n  // 1\n  50: list,\n  // 2\n  51: list,\n  // 3\n  52: list,\n  // 4\n  53: list,\n  // 5\n  54: list,\n  // 6\n  55: list,\n  // 7\n  56: list,\n  // 8\n  57: list,\n  // 9\n  62: blockQuote // Greater than\n}\nvar contentInitial = {\n  91: definition // Left square bracket\n}\nvar flowInitial = {\n  '-2': codeIndented,\n  // Horizontal tab\n  '-1': codeIndented,\n  // Virtual space\n  32: codeIndented // Space\n}\nvar flow = {\n  35: headingAtx,\n  // Number sign\n  42: thematicBreak,\n  // Asterisk\n  45: [setextUnderline, thematicBreak],\n  // Dash\n  60: htmlFlow,\n  // Less than\n  61: setextUnderline,\n  // Equals to\n  95: thematicBreak,\n  // Underscore\n  96: codeFenced,\n  // Grave accent\n  126: codeFenced // Tilde\n}\nvar string = {\n  38: characterReference,\n  // Ampersand\n  92: characterEscape // Backslash\n}\nvar text = {\n  '-5': lineEnding,\n  // Carriage return\n  '-4': lineEnding,\n  // Line feed\n  '-3': lineEnding,\n  // Carriage return + line feed\n  33: labelStartImage,\n  // Exclamation mark\n  38: characterReference,\n  // Ampersand\n  42: attention,\n  // Asterisk\n  60: [autolink, htmlText],\n  // Less than\n  91: labelStartLink,\n  // Left square bracket\n  92: [hardBreakEscape, characterEscape],\n  // Backslash\n  93: labelEnd,\n  // Right square bracket\n  95: attention,\n  // Underscore\n  96: codeText // Grave accent\n}\nvar insideSpan = {\n  null: [attention, text$1.resolver]\n}\nvar disable = {\n  null: []\n}\n\nexports.contentInitial = contentInitial\nexports.disable = disable\nexports.document = document\nexports.flow = flow\nexports.flowInitial = flowInitial\nexports.insideSpan = insideSpan\nexports.string = string\nexports.text = text\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\n\nvar tokenize = initializeContent\n\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  var previous\n  return contentStart\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeDocument\nvar containerConstruct = {\n  tokenize: tokenizeContainer\n}\nvar lazyFlowConstruct = {\n  tokenize: tokenizeLazyFlow\n}\n\nfunction initializeDocument(effects) {\n  var self = this\n  var stack = []\n  var continued = 0\n  var inspectConstruct = {\n    tokenize: tokenizeInspect,\n    partial: true\n  }\n  var inspectResult\n  var childFlow\n  var childToken\n  return start\n\n  function start(code) {\n    if (continued < stack.length) {\n      self.containerState = stack[continued][1]\n      return effects.attempt(\n        stack[continued][0].continuation,\n        documentContinue,\n        documentContinued\n      )(code)\n    }\n\n    return documentContinued(code)\n  }\n\n  function documentContinue(code) {\n    continued++\n    return start(code)\n  }\n\n  function documentContinued(code) {\n    // If we’re in a concrete construct (such as when expecting another line of\n    // HTML, or we resulted in lazy content), we can immediately start flow.\n    if (inspectResult && inspectResult.flowContinue) {\n      return flowStart(code)\n    }\n\n    self.interrupt =\n      childFlow &&\n      childFlow.currentConstruct &&\n      childFlow.currentConstruct.interruptible\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  function containerContinue(code) {\n    stack.push([self.currentConstruct, self.containerState])\n    self.containerState = undefined\n    return documentContinued(code)\n  }\n\n  function flowStart(code) {\n    if (code === null) {\n      exitContainers(0, true)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  function flowContinue(code) {\n    if (code === null) {\n      continueFlow(effects.exit('chunkFlow'))\n      return flowStart(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      continueFlow(effects.exit('chunkFlow'))\n      return effects.check(inspectConstruct, documentAfterPeek)\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  function documentAfterPeek(code) {\n    exitContainers(\n      inspectResult.continued,\n      inspectResult && inspectResult.flowEnd\n    )\n    continued = 0\n    return start(code)\n  }\n\n  function continueFlow(token) {\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.lazy = inspectResult && inspectResult.lazy\n    childFlow.defineSkip(token.start)\n    childFlow.write(self.sliceStream(token))\n  }\n\n  function exitContainers(size, end) {\n    var index = stack.length // Close the flow.\n\n    if (childFlow && end) {\n      childFlow.write([null])\n      childToken = childFlow = undefined\n    } // Exit open containers.\n\n    while (index-- > size) {\n      self.containerState = stack[index][1]\n      stack[index][0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function tokenizeInspect(effects, ok) {\n    var subcontinued = 0\n    inspectResult = {}\n    return inspectStart\n\n    function inspectStart(code) {\n      if (subcontinued < stack.length) {\n        self.containerState = stack[subcontinued][1]\n        return effects.attempt(\n          stack[subcontinued][0].continuation,\n          inspectContinue,\n          inspectLess\n        )(code)\n      } // If we’re continued but in a concrete flow, we can’t have more\n      // containers.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        inspectResult.flowContinue = true\n        return inspectDone(code)\n      }\n\n      self.interrupt =\n        childFlow.currentConstruct && childFlow.currentConstruct.interruptible\n      self.containerState = {}\n      return effects.attempt(\n        containerConstruct,\n        inspectFlowEnd,\n        inspectDone\n      )(code)\n    }\n\n    function inspectContinue(code) {\n      subcontinued++\n      return self.containerState._closeFlow\n        ? inspectFlowEnd(code)\n        : inspectStart(code)\n    }\n\n    function inspectLess(code) {\n      if (childFlow.currentConstruct && childFlow.currentConstruct.lazy) {\n        // Maybe another container?\n        self.containerState = {}\n        return effects.attempt(\n          containerConstruct,\n          inspectFlowEnd, // Maybe flow, or a blank line?\n          effects.attempt(\n            lazyFlowConstruct,\n            inspectFlowEnd,\n            effects.check(partialBlankLine, inspectFlowEnd, inspectLazy)\n          )\n        )(code)\n      } // Otherwise we’re interrupting.\n\n      return inspectFlowEnd(code)\n    }\n\n    function inspectLazy(code) {\n      // Act as if all containers are continued.\n      subcontinued = stack.length\n      inspectResult.lazy = true\n      inspectResult.flowContinue = true\n      return inspectDone(code)\n    } // We’re done with flow if we have more containers, or an interruption.\n\n    function inspectFlowEnd(code) {\n      inspectResult.flowEnd = true\n      return inspectDone(code)\n    }\n\n    function inspectDone(code) {\n      inspectResult.continued = subcontinued\n      self.interrupt = self.containerState = undefined\n      return ok(code)\n    }\n  }\n}\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction tokenizeLazyFlow(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.lazy(this.parser.constructs.flow, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar content = require('../tokenize/content.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar assign = require('../constant/assign.js')\nvar shallow = require('../util/shallow.js')\n\nvar text = initializeFactory('text')\nvar string = initializeFactory('string')\nvar resolver = {\n  resolveAll: createResolver()\n}\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  function initializeText(effects) {\n    var self = this\n    var constructs = this.parser.constructs[field]\n    var text = effects.attempt(constructs, start, notText)\n    return start\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n\n    function atBreak(code) {\n      var list = constructs[code]\n      var index = -1\n\n      if (code === null) {\n        return true\n      }\n\n      if (list) {\n        while (++index < list.length) {\n          if (\n            !list[index].previous ||\n            list[index].previous.call(self, self.previous)\n          ) {\n            return true\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  function resolveAllText(events, context) {\n    var index = -1\n    var enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n} // A rather ugly set of instructions which again looks at chunks in the input\n// stream.\n// The reason to do this here is that it is *much* faster to parse in reverse.\n// And that we can’t hook into `null` to split the line suffix before an EOF.\n// To do: figure out if we can make this into a clean utility, or even in core.\n// As it will be useful for GFMs literal autolink extension (and maybe even\n// tables?)\n\nfunction resolveAllLineSuffixes(events, context) {\n  var eventIndex = -1\n  var chunks\n  var data\n  var chunk\n  var index\n  var bufferIndex\n  var size\n  var tabs\n  var token\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      data = events[eventIndex - 1][1]\n      chunks = context.sliceStream(data)\n      index = chunks.length\n      bufferIndex = -1\n      size = 0\n      tabs = undefined\n\n      while (index--) {\n        chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1);\n        else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: shallow(data.end)\n        }\n        data.end = shallow(token.start)\n\n        if (data.start.offset === data.end.offset) {\n          assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n\nexports.resolver = resolver\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar content = require('./initialize/content.js')\nvar document = require('./initialize/document.js')\nvar flow = require('./initialize/flow.js')\nvar text = require('./initialize/text.js')\nvar combineExtensions = require('./util/combine-extensions.js')\nvar createTokenizer = require('./util/create-tokenizer.js')\nvar miniflat = require('./util/miniflat.js')\nvar constructs = require('./constructs.js')\n\nfunction parse(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  }\n  return parser\n\n  function create(initializer) {\n    return creator\n\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nvar subtokenize = require('./util/subtokenize.js')\n\nfunction postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n\nmodule.exports = postprocess\n","'use strict'\n\nvar search = /[\\0\\t\\n\\r]/g\n\nfunction preprocess() {\n  var start = true\n  var column = 1\n  var buffer = ''\n  var atCarriageReturn\n  return preprocessor\n\n  function preprocessor(value, encoding, end) {\n    var chunks = []\n    var match\n    var next\n    var startPosition\n    var endPosition\n    var code\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition = match ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        if (code === 0) {\n          chunks.push(65533)\n          column++\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4\n          chunks.push(-2)\n\n          while (column++ < next) chunks.push(-1)\n        } else if (code === 10) {\n          chunks.push(-4)\n          column = 1\n        } // Must be carriage return.\n        else {\n          atCarriageReturn = true\n          column = 1\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n\nmodule.exports = preprocess\n","'use strict'\n\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar classifyCharacter = require('../util/classify-character.js')\nvar movePoint = require('../util/move-point.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\n\nvar attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\nfunction resolveAllAttention(events, context) {\n  var index = -1\n  var open\n  var group\n  var text\n  var openingSequence\n  var closingSequence\n  var use\n  var nextEvents\n  var offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: movePoint(shallow(events[open][1].end), -use),\n            end: shallow(events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: shallow(events[index][1].start),\n            end: movePoint(shallow(events[index][1].start), use)\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: shallow(events[open][1].end),\n            end: shallow(events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: shallow(openingSequence.start),\n            end: shallow(closingSequence.end)\n          }\n          events[open][1].end = shallow(openingSequence.start)\n          events[index][1].start = shallow(closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = chunkedPush(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeAttention(effects, ok) {\n  var before = classifyCharacter(this.previous)\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    var token\n    var after\n    var open\n    var close\n\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    token = effects.exit('attentionSequence')\n    after = classifyCharacter(code)\n    open = !after || (after === 2 && before)\n    close = !before || (before === 2 && after)\n    token._open = marker === 42 ? open : open && (before || !close)\n    token._close = marker === 42 ? close : close && (after || !open)\n    return ok(code)\n  }\n}\n\nmodule.exports = attention\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiAtext = require('../character/ascii-atext.js')\nvar asciiControl = require('../character/ascii-control.js')\n\nvar autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 1\n  return start\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n\nmodule.exports = autolink\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit: exit\n}\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    if (code === 62) {\n      if (!self.containerState.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        self.containerState.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n\nmodule.exports = blockQuote\n","'use strict'\n\nvar asciiPunctuation = require('../character/ascii-punctuation.js')\n\nvar characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterEscape\n","'use strict'\n\nvar decodeEntity = require('parse-entities/decode-entity.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar asciiHexDigit = require('../character/ascii-hex-digit.js')\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {default: e}\n}\n\nvar decodeEntity__default = /*#__PURE__*/ _interopDefaultLegacy(decodeEntity)\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity__default['default'](self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterReference\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  var self = this\n  var closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  var initialPrefix = prefixSize(this.events, 'linePrefix')\n  var sizeOpen = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : content(code)\n  }\n\n  function content(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(\n        closingFenceConstruct,\n        after,\n        initialPrefix\n          ? factorySpace(effects, content, 'linePrefix', initialPrefix + 1)\n          : content\n      )\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return content(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    var size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\nmodule.exports = codeFenced\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n}\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok)\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n\nmodule.exports = codeIndented\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous: previous\n}\n\nfunction resolveCodeText(events) {\n  var tailExitIndex = events.length - 4\n  var headEnterIndex = 3\n  var index\n  var enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[tailExitIndex][1].type = events[headEnterIndex][1].type =\n          'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  var sizeOpen = 0\n  var size\n  var token\n  return start\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n\nmodule.exports = codeText\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar subtokenize = require('../util/subtokenize.js')\nvar factorySpace = require('./factory-space.js')\n\n// No name because it must not be turned off.\nvar content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent,\n  interruptible: true,\n  lazy: true\n}\nvar continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n} // Content is transparent: it’s parsed right now. That way, definitions are also\n// parsed right now: before text in paragraphs (specifically, media) are parsed.\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\nfunction tokenizeContent(effects, ok) {\n  var previous\n  return start\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous = previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous: previous\n    })\n    return data\n  }\n}\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  var self = this\n  return startLookahead\n\n  function startLookahead(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1 ||\n      prefixSize(self.events, 'linePrefix') < 4\n    ) {\n      return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = content\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factorySpace = require('./factory-space.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\nvar factoryTitle = require('./factory-title.js')\n\nvar definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\nvar titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this\n  var identifier\n  return start\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = definition\n","'use strict'\n\nvar asciiControl = require('../character/ascii-control.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\n// eslint-disable-next-line max-params\nfunction destinationFactory(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  var limit = max || Infinity\n  var balance = 0\n  return start\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (asciiControl(code) || code === 41) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n\nmodule.exports = destinationFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\n\n// eslint-disable-next-line max-params\nfunction labelFactory(effects, ok, nok, type, markerType, stringType) {\n  var self = this\n  var size = 0\n  var data\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* c8 ignore next */\n      (code === 94 &&\n        /* c8 ignore next */\n        !size &&\n        /* c8 ignore next */\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n\nmodule.exports = labelFactory\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction titleFactory(effects, ok, nok, type, markerType, stringType) {\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n\nmodule.exports = titleFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction whitespaceFactory(effects, ok) {\n  var seen\n  return start\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = whitespaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = hardBreakEscape\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar factorySpace = require('./factory-space.js')\n\nvar headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2\n  var contentStart = 3\n  var content\n  var text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var self = this\n  var size = 0\n  return start\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n\nmodule.exports = headingAtx\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar fromCharCode = require('../constant/from-char-code.js')\nvar htmlBlockNames = require('../constant/html-block-names.js')\nvar htmlRawNames = require('../constant/html-raw-names.js')\nvar partialBlankLine = require('./partial-blank-line.js')\n\nvar htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\nvar nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n\nfunction resolveToHtmlFlow(events) {\n  var index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  var self = this\n  var kind\n  var startTag\n  var buffer\n  var index\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.indexOf(buffer.toLowerCase()) > -1\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.indexOf(buffer.toLowerCase()) > -1) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting.\n\n      return self.interrupt\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = undefined\n    return completeAttributeValueUnquoted(code)\n  }\n\n  function completeAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return htmlContinueStart\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.indexOf(buffer.toLowerCase()) > -1) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(partialBlankLine, ok, nok)\n  }\n}\n\nmodule.exports = htmlFlow\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this\n  var marker\n  var buffer\n  var index\n  var returnState\n  return start\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = htmlText\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factoryTitle = require('./factory-title.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\n\nvar labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\nvar resourceConstruct = {\n  tokenize: tokenizeResource\n}\nvar fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\nvar collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n\nfunction resolveAllLabelEnd(events) {\n  var index = -1\n  var token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      !token._used &&\n      (token.type === 'labelImage' ||\n        token.type === 'labelLink' ||\n        token.type === 'labelEnd')\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length\n  var offset = 0\n  var group\n  var label\n  var text\n  var token\n  var open\n  var close\n  var media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: shallow(events[open][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n  label = {\n    type: 'label',\n    start: shallow(events[open][1].start),\n    end: shallow(events[close][1].end)\n  }\n  text = {\n    type: 'labelText',\n    start: shallow(events[open + offset + 2][1].end),\n    end: shallow(events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = chunkedPush(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = chunkedPush(media, [['enter', text, context]]) // Between.\n\n  media = chunkedPush(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = chunkedPush(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = chunkedPush(media, events.slice(close + 1)) // Media close.\n\n  media = chunkedPush(media, [['exit', group, context]])\n  chunkedSplice(events, open, events.length, media)\n  return events\n}\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var labelStart\n  var defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined =\n      self.parser.defined.indexOf(\n        normalizeIdentifier(\n          self.sliceSerialize({\n            start: labelStart.end,\n            end: self.now()\n          })\n        )\n      ) > -1\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  function afterLabel(code) {\n    return self.parser.defined.indexOf(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    ) < 0\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = labelEnd\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartImage\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartLink\n","'use strict'\n\nvar factorySpace = require('./factory-space.js')\n\nvar lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n\nmodule.exports = lineEnding\n","'use strict'\n\nvar asciiDigit = require('../character/ascii-digit.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar sizeChunks = require('../util/size-chunks.js')\nvar factorySpace = require('./factory-space.js')\nvar partialBlankLine = require('./partial-blank-line.js')\nvar thematicBreak = require('./thematic-break.js')\n\nvar list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\nvar listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\nvar indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\nfunction tokenizeListStart(effects, ok, nok) {\n  var self = this\n  var initialSize = prefixSize(self.events, 'linePrefix')\n  var size = 0\n  return start\n\n  function start(code) {\n    var kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      partialBlankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize + sizeChunks(self.sliceStream(effects.exit('listItemPrefix')))\n    return ok(code)\n  }\n}\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  var self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(partialBlankLine, onBlank, notBlank)\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'listItemIndent') ===\n      self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4 + 1\n  )\n\n  function afterPrefix(code) {\n    return markdownSpace(code) ||\n      !prefixSize(self.events, 'listItemPrefixWhitespace')\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = list\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar shallow = require('../util/shallow.js')\nvar factorySpace = require('./factory-space.js')\n\nvar setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\nfunction resolveToSetextUnderline(events, context) {\n  var index = events.length\n  var content\n  var text\n  var definition\n  var heading // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  heading = {\n    type: 'setextHeading',\n    start: shallow(events[text][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = shallow(events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var marker\n  var paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!self.lazy && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = setextUnderline\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n\nmodule.exports = thematicBreak\n","'use strict'\n\nvar chunkedSplice = require('./chunked-splice.js')\n\nfunction chunkedPush(list, items) {\n  if (list.length) {\n    chunkedSplice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n\nmodule.exports = chunkedPush\n","'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar unicodePunctuation = require('../character/unicode-punctuation.js')\nvar unicodeWhitespace = require('../character/unicode-whitespace.js')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\nmodule.exports = classifyCharacter\n","'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedPush = require('./chunked-push.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\nvar resolveAll = require('./resolve-all.js')\nvar serializeChunks = require('./serialize-chunks.js')\nvar shallow = require('./shallow.js')\nvar sliceChunks = require('./slice-chunks.js')\n\n// Create a tokenizer.\n// Tokenizers deal with one type of data (e.g., containers, flow, text).\n// The parser is the object dealing with it all.\n// `initialize` works like other constructs, except that only its `tokenize`\n// function is used, in which case it doesn’t receive an `ok` or `nok`.\n// `from` can be given to set the point before the first character, although\n// when further lines are indented, they must be set with `defineSkip`.\nfunction createTokenizer(parser, initialize, from) {\n  var point = from\n    ? shallow(from)\n    : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }\n  var columnStart = {}\n  var resolveAllConstructs = []\n  var chunks = []\n  var stack = []\n\n  var effects = {\n    consume: consume,\n    enter: enter,\n    exit: exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    }),\n    lazy: constructFactory(onsuccessfulcheck, {\n      lazy: true\n    })\n  } // State and tools for resolving and serializing.\n\n  var context = {\n    previous: null,\n    events: [],\n    parser: parser,\n    sliceStream: sliceStream,\n    sliceSerialize: sliceSerialize,\n    now: now,\n    defineSkip: skip,\n    write: write\n  } // The state function.\n\n  var state = initialize.tokenize.call(context, effects) // Track which character we expect to be consumed, to catch bugs.\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  } // Store where we are in the input stream.\n\n  point._index = 0\n  point._bufferIndex = -1\n  return context\n\n  function write(slice) {\n    chunks = chunkedPush(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  function sliceSerialize(token) {\n    return serializeChunks(sliceStream(token))\n  }\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  function now() {\n    return shallow(point)\n  }\n\n  function skip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n  // Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n  // `consume`).\n  // Here is where we walk through the chunks, which either include strings of\n  // several characters, or numerical character codes.\n  // The reason to do this in a loop instead of a call is so the stack can\n  // drain.\n\n  function main() {\n    var chunkIndex\n    var chunk\n\n    while (point._index < chunks.length) {\n      chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  } // Deal with one code.\n\n  function go(code) {\n    state = state(code)\n  } // Move a character forward.\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n  } // Start a token.\n\n  function enter(type, fields) {\n    var token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  } // Stop a token.\n\n  function exit(type) {\n    var token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  } // Use results.\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  } // Discard results.\n\n  function onsuccessfulcheck(construct, info) {\n    info.restore()\n  } // Factory to attempt/check/interrupt.\n\n  function constructFactory(onreturn, fields) {\n    return hook // Handle either an object mapping codes to constructs, a list of\n    // constructs, or a single construct.\n\n    function hook(constructs, returnState, bogusState) {\n      var listOfConstructs\n      var constructIndex\n      var currentConstruct\n      var info\n      return constructs.tokenize || 'length' in constructs\n        ? handleListOfConstructs(miniflat(constructs))\n        : handleMapOfConstructs\n\n      function handleMapOfConstructs(code) {\n        if (code in constructs || null in constructs) {\n          return handleListOfConstructs(\n            constructs.null\n              ? /* c8 ignore next */\n                miniflat(constructs[code]).concat(miniflat(constructs.null))\n              : constructs[code]\n          )(code)\n        }\n\n        return bogusState(code)\n      }\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        return handleConstruct(list[constructIndex])\n      }\n\n      function handleConstruct(construct) {\n        return start\n\n        function start(code) {\n          // To do: not nede to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.indexOf(construct.name) > -1\n          ) {\n            return nok()\n          }\n\n          return construct.tokenize.call(\n            fields ? assign({}, context, fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      function ok(code) {\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      function nok(code) {\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && resolveAllConstructs.indexOf(construct) < 0) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      chunkedSplice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  function store() {\n    var startPoint = now()\n    var startPrevious = context.previous\n    var startCurrentConstruct = context.currentConstruct\n    var startEventsIndex = context.events.length\n    var startStack = Array.from(stack)\n    return {\n      restore: restore,\n      from: startEventsIndex\n    }\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\nmodule.exports = createTokenizer\n","'use strict'\n\nfunction miniflat(value) {\n  return value === null || value === undefined\n    ? []\n    : 'length' in value\n    ? value\n    : [value]\n}\n\nmodule.exports = miniflat\n","'use strict'\n\n// chunks (replacement characters, tabs, or line endings).\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n  return point\n}\n\nmodule.exports = movePoint\n","'use strict'\n\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\nmodule.exports = normalizeIdentifier\n","'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction regexCheck(regex) {\n  return check\n\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n\nmodule.exports = regexCheck\n","'use strict'\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\nmodule.exports = resolveAll\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n\nmodule.exports = safeFromInt\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n\nmodule.exports = shallow\n","'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n","'use strict'\n\nfunction sliceChunks(chunks, token) {\n  var startIndex = token.start._index\n  var startBufferIndex = token.start._bufferIndex\n  var endIndex = token.end._index\n  var endBufferIndex = token.end._bufferIndex\n  var view\n\n  if (startIndex === endIndex) {\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\nmodule.exports = sliceChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar shallow = require('./shallow.js')\n\nfunction subtokenize(events) {\n  var jumps = {}\n  var index = -1\n  var event\n  var lineIndex\n  var otherIndex\n  var otherEvent\n  var parameters\n  var subevents\n  var more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1].isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container || event[1]._movePreviousLineEndings) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = shallow(events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        chunkedSplice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\nfunction subcontent(events, eventIndex) {\n  var token = events[eventIndex][1]\n  var context = events[eventIndex][2]\n  var startPosition = eventIndex - 1\n  var startPositions = []\n  var tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  var childEvents = tokenizer.events\n  var jumps = []\n  var gaps = {}\n  var stream\n  var previous\n  var index\n  var entered\n  var end\n  var adjust // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (token) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== token) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!token._tokenizer) {\n      stream = context.sliceStream(token)\n\n      if (!token.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(token.start)\n      }\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = token\n    token = token.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  token = previous\n  index = childEvents.length\n\n  while (index--) {\n    // Make sure we’ve at least seen something (final eol is part of the last\n    // token).\n    if (childEvents[index][0] === 'enter') {\n      entered = true\n    } else if (\n      // Find a void token that includes a break.\n      entered &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      add(childEvents.slice(index + 1, end))\n      // Help GC.\n      token._tokenizer = token.next = undefined\n      token = token.previous\n      end = index + 1\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = token._tokenizer = token.next = undefined // Do head:\n\n  add(childEvents.slice(0, end))\n  index = -1\n  adjust = 0\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n\n  function add(slice) {\n    var start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    chunkedSplice(events, start, 2, slice)\n  }\n}\n\nmodule.exports = subtokenize\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nmodule.exports = parse\n\nvar fromMarkdown = require('mdast-util-from-markdown')\n\nfunction parse(options) {\n  var self = this\n\n  this.Parser = parse\n\n  function parse(doc) {\n    return fromMarkdown(\n      doc,\n      Object.assign({}, self.data('settings'), options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: self.data('micromarkExtensions') || [],\n        mdastExtensions: self.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n}\n","'use strict'\n\nvar wrap = require('./wrap.js')\n\nmodule.exports = trough\n\ntrough.wrap = wrap\n\nvar slice = [].slice\n\n// Create new middleware.\nfunction trough() {\n  var fns = []\n  var middleware = {}\n\n  middleware.run = run\n  middleware.use = use\n\n  return middleware\n\n  // Run `fns`.  Last argument must be a completion handler.\n  function run() {\n    var index = -1\n    var input = slice.call(arguments, 0, -1)\n    var done = arguments[arguments.length - 1]\n\n    if (typeof done !== 'function') {\n      throw new Error('Expected function as last argument, not ' + done)\n    }\n\n    next.apply(null, [null].concat(input))\n\n    // Run the next `fn`, if any.\n    function next(err) {\n      var fn = fns[++index]\n      var params = slice.call(arguments, 0)\n      var values = params.slice(1)\n      var length = input.length\n      var pos = -1\n\n      if (err) {\n        done(err)\n        return\n      }\n\n      // Copy non-nully input into values.\n      while (++pos < length) {\n        if (values[pos] === null || values[pos] === undefined) {\n          values[pos] = input[pos]\n        }\n      }\n\n      input = values\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next).apply(null, input)\n      } else {\n        done.apply(null, [null].concat(input))\n      }\n    }\n  }\n\n  // Add `fn` to the list.\n  function use(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error('Expected `fn` to be a function, not ' + fn)\n    }\n\n    fns.push(fn)\n\n    return middleware\n  }\n}\n","'use strict'\n\nvar slice = [].slice\n\nmodule.exports = wrap\n\n// Wrap `fn`.\n// Can be sync or async; return a promise, receive a completion handler, return\n// new values and errors.\nfunction wrap(fn, callback) {\n  var invoked\n\n  return wrapped\n\n  function wrapped() {\n    var params = slice.call(arguments, 0)\n    var callback = fn.length > params.length\n    var result\n\n    if (callback) {\n      params.push(done)\n    }\n\n    try {\n      result = fn.apply(null, params)\n    } catch (error) {\n      // Well, this is quite the pickle.\n      // `fn` received a callback and invoked it (thus continuing the pipeline),\n      // but later also threw an error.\n      // We’re not about to restart the pipeline again, so the only thing left\n      // to do is to throw the thing instead.\n      if (callback && invoked) {\n        throw error\n      }\n\n      return done(error)\n    }\n\n    if (!callback) {\n      if (result && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  // Invoke `next`, only once.\n  function done() {\n    if (!invoked) {\n      invoked = true\n\n      callback.apply(null, arguments)\n    }\n  }\n\n  // Invoke `done` with one value.\n  // Tracks if an error is passed, too.\n  function then(value) {\n    done(null, value)\n  }\n}\n","'use strict'\n\nvar bail = require('bail')\nvar buffer = require('is-buffer')\nvar extend = require('extend')\nvar plain = require('is-plain-obj')\nvar trough = require('trough')\nvar vfile = require('vfile')\n\n// Expose a frozen processor.\nmodule.exports = unified().freeze()\n\nvar slice = [].slice\nvar own = {}.hasOwnProperty\n\n// Process pipeline.\nvar pipeline = trough()\n  .use(pipelineParse)\n  .use(pipelineRun)\n  .use(pipelineStringify)\n\nfunction pipelineParse(p, ctx) {\n  ctx.tree = p.parse(ctx.file)\n}\n\nfunction pipelineRun(p, ctx, next) {\n  p.run(ctx.tree, ctx.file, done)\n\n  function done(error, tree, file) {\n    if (error) {\n      next(error)\n    } else {\n      ctx.tree = tree\n      ctx.file = file\n      next()\n    }\n  }\n}\n\nfunction pipelineStringify(p, ctx) {\n  var result = p.stringify(ctx.tree, ctx.file)\n\n  if (result === undefined || result === null) {\n    // Empty.\n  } else if (typeof result === 'string' || buffer(result)) {\n    if ('value' in ctx.file) {\n      ctx.file.value = result\n    }\n\n    ctx.file.contents = result\n  } else {\n    ctx.file.result = result\n  }\n}\n\n// Function to create the first processor.\nfunction unified() {\n  var attachers = []\n  var transformers = trough()\n  var namespace = {}\n  var freezeIndex = -1\n  var frozen\n\n  // Data management.\n  processor.data = data\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  processor.run = run\n  processor.runSync = runSync\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  function processor() {\n    var destination = unified()\n    var index = -1\n\n    while (++index < attachers.length) {\n      destination.use.apply(null, attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  // Freeze: used to signal a processor that has finished configuration.\n  //\n  // For example, take unified itself: it’s frozen.\n  // Plugins should not be added to it.\n  // Rather, it should be extended, by invoking it, before modifying it.\n  //\n  // In essence, always invoke this when exporting a processor.\n  function freeze() {\n    var values\n    var transformer\n\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      values = attachers[freezeIndex]\n\n      if (values[1] === false) {\n        continue\n      }\n\n      if (values[1] === true) {\n        values[1] = undefined\n      }\n\n      transformer = values[0].apply(processor, values.slice(1))\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Infinity\n\n    return processor\n  }\n\n  // Data management.\n  // Getter / setter for processor-specific informtion.\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  // Plugin management.\n  //\n  // Pass it:\n  // *   an attacher and options,\n  // *   a preset,\n  // *   a list of presets, attachers, and arguments (list of attachers and\n  //     options).\n  function use(value) {\n    var settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin.apply(null, arguments)\n    } else if (typeof value === 'object') {\n      if ('length' in value) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new Error('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = extend(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = extend(settings || {}, result.settings)\n      }\n    }\n\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if ('length' in value) {\n          addPlugin.apply(null, value)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new Error('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    function addList(plugins) {\n      var index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (typeof plugins === 'object' && 'length' in plugins) {\n        while (++index < plugins.length) {\n          add(plugins[index])\n        }\n      } else {\n        throw new Error('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    function addPlugin(plugin, value) {\n      var entry = find(plugin)\n\n      if (entry) {\n        if (plain(entry[1]) && plain(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        attachers.push(slice.call(arguments))\n      }\n    }\n  }\n\n  function find(plugin) {\n    var index = -1\n\n    while (++index < attachers.length) {\n      if (attachers[index][0] === plugin) {\n        return attachers[index]\n      }\n    }\n  }\n\n  // Parse a file (in string or vfile representation) into a unist node using\n  // the `Parser` on the processor.\n  function parse(doc) {\n    var file = vfile(doc)\n    var Parser\n\n    freeze()\n    Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      return new Parser(String(file), file).parse()\n    }\n\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  // Run transforms on a unist node representation of a file (in string or\n  // vfile representation), async.\n  function run(node, file, cb) {\n    assertNode(node)\n    freeze()\n\n    if (!cb && typeof file === 'function') {\n      cb = file\n      file = null\n    }\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      transformers.run(node, vfile(file), done)\n\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          cb(null, tree, file)\n        }\n      }\n    }\n  }\n\n  // Run transforms on a unist node representation of a file (in string or\n  // vfile representation), sync.\n  function runSync(node, file) {\n    var result\n    var complete\n\n    run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    return result\n\n    function done(error, tree) {\n      complete = true\n      result = tree\n      bail(error)\n    }\n  }\n\n  // Stringify a unist node representation of a file (in string or vfile\n  // representation) into a string using the `Compiler` on the processor.\n  function stringify(node, doc) {\n    var file = vfile(doc)\n    var Compiler\n\n    freeze()\n    Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      return new Compiler(node, file).compile()\n    }\n\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  // Parse a file (in string or vfile representation) into a unist node using\n  // the `Parser` on the processor, then run transforms on that node, and\n  // compile the resulting node using the `Compiler` on the processor, and\n  // store that result on the vfile.\n  function process(doc, cb) {\n    freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      var file = vfile(doc)\n\n      pipeline.run(processor, {file: file}, done)\n\n      function done(error) {\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          cb(null, file)\n        }\n      }\n    }\n  }\n\n  // Process the given document (in string or vfile representation), sync.\n  function processSync(doc) {\n    var file\n    var complete\n\n    freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n    file = vfile(doc)\n\n    process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n// Check if `value` is a constructor.\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n// Check if `value` is an object with keys.\nfunction keys(value) {\n  var key\n  for (key in value) {\n    return true\n  }\n\n  return false\n}\n\n// Assert a parser is available.\nfunction assertParser(name, Parser) {\n  if (typeof Parser !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n// Assert a compiler is available.\nfunction assertCompiler(name, Compiler) {\n  if (typeof Compiler !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n// Assert the processor is not frozen.\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot invoke `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n// Assert `node` is a unist node.\nfunction assertNode(node) {\n  if (!node || typeof node.type !== 'string') {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n}\n\n// Assert that `complete` is `true`.\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = stringify\n\nfunction stringify(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if (own.call(value, 'position') || own.call(value, 'type')) {\n    return position(value.position)\n  }\n\n  // Position.\n  if (own.call(value, 'start') || own.call(value, 'end')) {\n    return position(value)\n  }\n\n  // Point.\n  if (own.call(value, 'line') || own.call(value, 'column')) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\nfunction point(point) {\n  if (!point || typeof point !== 'object') {\n    point = {}\n  }\n\n  return index(point.line) + ':' + index(point.column)\n}\n\nfunction position(pos) {\n  if (!pos || typeof pos !== 'object') {\n    pos = {}\n  }\n\n  return point(pos.start) + '-' + point(pos.end)\n}\n\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","'use strict'\n\nvar stringify = require('unist-util-stringify-position')\n\nmodule.exports = VMessage\n\n// Inherit from `Error#`.\nfunction VMessagePrototype() {}\nVMessagePrototype.prototype = Error.prototype\nVMessage.prototype = new VMessagePrototype()\n\n// Message properties.\nvar proto = VMessage.prototype\n\nproto.file = ''\nproto.name = ''\nproto.reason = ''\nproto.message = ''\nproto.stack = ''\nproto.fatal = null\nproto.column = null\nproto.line = null\n\n// Construct a new VMessage.\n//\n// Note: We cannot invoke `Error` on the created context, as that adds readonly\n// `line` and `column` attributes on Safari 9, thus throwing and failing the\n// data.\nfunction VMessage(reason, position, origin) {\n  var parts\n  var range\n  var location\n\n  if (typeof position === 'string') {\n    origin = position\n    position = null\n  }\n\n  parts = parseOrigin(origin)\n  range = stringify(position) || '1:1'\n\n  location = {\n    start: {line: null, column: null},\n    end: {line: null, column: null}\n  }\n\n  // Node.\n  if (position && position.position) {\n    position = position.position\n  }\n\n  if (position) {\n    // Position.\n    if (position.start) {\n      location = position\n      position = position.start\n    } else {\n      // Point.\n      location.start = position\n    }\n  }\n\n  if (reason.stack) {\n    this.stack = reason.stack\n    reason = reason.message\n  }\n\n  this.message = reason\n  this.name = range\n  this.reason = reason\n  this.line = position ? position.line : null\n  this.column = position ? position.column : null\n  this.location = location\n  this.source = parts[0]\n  this.ruleId = parts[1]\n}\n\nfunction parseOrigin(origin) {\n  var result = [null, null]\n  var index\n\n  if (typeof origin === 'string') {\n    index = origin.indexOf(':')\n\n    if (index === -1) {\n      result[1] = origin\n    } else {\n      result[0] = origin.slice(0, index)\n      result[1] = origin.slice(index + 1)\n    }\n  }\n\n  return result\n}\n","'use strict'\n\nmodule.exports = require('./lib')\n","'use strict'\n\nvar p = require('./minpath')\nvar proc = require('./minproc')\nvar buffer = require('is-buffer')\n\nmodule.exports = VFile\n\nvar own = {}.hasOwnProperty\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nvar order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nVFile.prototype.toString = toString\n\n// Access full path (`~/index.min.js`).\nObject.defineProperty(VFile.prototype, 'path', {get: getPath, set: setPath})\n\n// Access parent path (`~`).\nObject.defineProperty(VFile.prototype, 'dirname', {\n  get: getDirname,\n  set: setDirname\n})\n\n// Access basename (`index.min.js`).\nObject.defineProperty(VFile.prototype, 'basename', {\n  get: getBasename,\n  set: setBasename\n})\n\n// Access extname (`.js`).\nObject.defineProperty(VFile.prototype, 'extname', {\n  get: getExtname,\n  set: setExtname\n})\n\n// Access stem (`index.min`).\nObject.defineProperty(VFile.prototype, 'stem', {get: getStem, set: setStem})\n\n// Construct a new file.\nfunction VFile(options) {\n  var prop\n  var index\n\n  if (!options) {\n    options = {}\n  } else if (typeof options === 'string' || buffer(options)) {\n    options = {contents: options}\n  } else if ('message' in options && 'messages' in options) {\n    return options\n  }\n\n  if (!(this instanceof VFile)) {\n    return new VFile(options)\n  }\n\n  this.data = {}\n  this.messages = []\n  this.history = []\n  this.cwd = proc.cwd()\n\n  // Set path related properties in the correct order.\n  index = -1\n\n  while (++index < order.length) {\n    prop = order[index]\n\n    if (own.call(options, prop)) {\n      this[prop] = options[prop]\n    }\n  }\n\n  // Set non-path related properties.\n  for (prop in options) {\n    if (order.indexOf(prop) < 0) {\n      this[prop] = options[prop]\n    }\n  }\n}\n\nfunction getPath() {\n  return this.history[this.history.length - 1]\n}\n\nfunction setPath(path) {\n  assertNonEmpty(path, 'path')\n\n  if (this.path !== path) {\n    this.history.push(path)\n  }\n}\n\nfunction getDirname() {\n  return typeof this.path === 'string' ? p.dirname(this.path) : undefined\n}\n\nfunction setDirname(dirname) {\n  assertPath(this.path, 'dirname')\n  this.path = p.join(dirname || '', this.basename)\n}\n\nfunction getBasename() {\n  return typeof this.path === 'string' ? p.basename(this.path) : undefined\n}\n\nfunction setBasename(basename) {\n  assertNonEmpty(basename, 'basename')\n  assertPart(basename, 'basename')\n  this.path = p.join(this.dirname || '', basename)\n}\n\nfunction getExtname() {\n  return typeof this.path === 'string' ? p.extname(this.path) : undefined\n}\n\nfunction setExtname(extname) {\n  assertPart(extname, 'extname')\n  assertPath(this.path, 'extname')\n\n  if (extname) {\n    if (extname.charCodeAt(0) !== 46 /* `.` */) {\n      throw new Error('`extname` must start with `.`')\n    }\n\n    if (extname.indexOf('.', 1) > -1) {\n      throw new Error('`extname` cannot contain multiple dots')\n    }\n  }\n\n  this.path = p.join(this.dirname, this.stem + (extname || ''))\n}\n\nfunction getStem() {\n  return typeof this.path === 'string'\n    ? p.basename(this.path, this.extname)\n    : undefined\n}\n\nfunction setStem(stem) {\n  assertNonEmpty(stem, 'stem')\n  assertPart(stem, 'stem')\n  this.path = p.join(this.dirname || '', stem + (this.extname || ''))\n}\n\n// Get the value of the file.\nfunction toString(encoding) {\n  return (this.contents || '').toString(encoding)\n}\n\n// Assert that `part` is not a path (i.e., does not contain `p.sep`).\nfunction assertPart(part, name) {\n  if (part && part.indexOf(p.sep) > -1) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + p.sep + '`'\n    )\n  }\n}\n\n// Assert that `part` is not empty.\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n// Assert `path` exists.\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","'use strict'\n\nvar VMessage = require('vfile-message')\nvar VFile = require('./core.js')\n\nmodule.exports = VFile\n\nVFile.prototype.message = message\nVFile.prototype.info = info\nVFile.prototype.fail = fail\n\n// Create a message with `reason` at `position`.\n// When an error is passed in as `reason`, copies the stack.\nfunction message(reason, position, origin) {\n  var message = new VMessage(reason, position, origin)\n\n  if (this.path) {\n    message.name = this.path + ':' + message.name\n    message.file = this.path\n  }\n\n  message.fatal = false\n\n  this.messages.push(message)\n\n  return message\n}\n\n// Fail: creates a vmessage, associates it with the file, and throws it.\nfunction fail() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = true\n\n  throw message\n}\n\n// Info: creates a vmessage, associates it with the file, and marks the fatality\n// as null.\nfunction info() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = null\n\n  return message\n}\n","'use strict'\n\n// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexports.basename = basename\nexports.dirname = dirname\nexports.extname = extname\nexports.join = join\nexports.sep = '/'\n\nfunction basename(path, ext) {\n  var start = 0\n  var end = -1\n  var index\n  var firstNonSlashEnd\n  var seenNonSlash\n  var extIndex\n\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  index = path.length\n\n  if (ext === undefined || !ext.length || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  firstNonSlashEnd = -1\n  extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\nfunction dirname(path) {\n  var end\n  var unmatchedSlash\n  var index\n\n  assertPath(path)\n\n  if (!path.length) {\n    return '.'\n  }\n\n  end = -1\n  index = path.length\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\nfunction extname(path) {\n  var startDot = -1\n  var startPart = 0\n  var end = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  var preDotState = 0\n  var unmatchedSlash\n  var code\n  var index\n\n  assertPath(path)\n\n  index = path.length\n\n  while (index--) {\n    code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\nfunction join() {\n  var index = -1\n  var joined\n\n  while (++index < arguments.length) {\n    assertPath(arguments[index])\n\n    if (arguments[index]) {\n      joined =\n        joined === undefined\n          ? arguments[index]\n          : joined + '/' + arguments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  var absolute\n  var value\n\n  assertPath(path)\n\n  absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  value = normalizeString(path, !absolute)\n\n  if (!value.length && !absolute) {\n    value = '.'\n  }\n\n  if (value.length && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n// Resolve `.` and `..` elements in a path with directory names.\nfunction normalizeString(path, allowAboveRoot) {\n  var result = ''\n  var lastSegmentLength = 0\n  var lastSlash = -1\n  var dots = 0\n  var index = -1\n  var code\n  var lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            /* istanbul ignore else - No clue how to cover it. */\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n","'use strict'\n\n// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexports.cwd = cwd\n\nfunction cwd() {\n  return '/'\n}\n","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _get.apply(this, arguments);\n}\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) {\n        ;\n      }\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableRest = require(\"./nonIterableRest.js\");\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","var own = {}.hasOwnProperty\n\n/**\n * Check if `node` has a set `name` property.\n *\n * @param {unknown} node\n * @param {string} name\n * @returns {boolean}\n */\nexport function hasProperty(node, name) {\n  /** @type {unknown} */\n  var value =\n    name &&\n    node &&\n    typeof node === 'object' &&\n    // @ts-ignore Looks like a node.\n    node.type === 'element' &&\n    // @ts-ignore Looks like an element.\n    node.properties &&\n    // @ts-ignore Looks like an element.\n    own.call(node.properties, name) &&\n    // @ts-ignore Looks like an element.\n    node.properties[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n","/**\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Parent['children'][number]} Node\n */\n\n/**\n * Rank of a heading: H1 -> 1, H2 -> 2, etc.\n *\n * @param {Node} node\n * @returns {number|null}\n */\nexport function headingRank(node) {\n  var name =\n    (node && node.type === 'element' && node.tagName.toLowerCase()) || ''\n  var code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */ ? code - 48 /* `0` */ : null\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n *\n * @typedef {string} TagName\n * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test\n */\n\n/**\n * @template {Element} T\n * @typedef {null|undefined|T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>} PredicateTest\n */\n\n/**\n * Check if an element passes a test\n *\n * @callback TestFunctionAnything\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if an element passes a certain node test\n *\n * @template {Element} X\n * @callback TestFunctionPredicate\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {element is X}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\n// Check if `node` is an `element` and whether it passes the given test.\nexport const isElement =\n  /**\n   * Check if a node is an element and passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test] When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number} [index] Position of `node` in `parent`\n     * @param {Parent} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * @param {Array.<TagName|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s tag\n * name for said string.\n *\n * @param {TagName} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Utility to return true if this is an element.\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nvar search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @param selector A simple CSS selector.\n *   Can contain a tag-name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param [defaultTagName='div'] Tag name to use if `selector` does not specify one.\n */\nexport const parseSelector =\n  /**\n   * @type {(\n   *  <Selector extends string, DefaultTagName extends string = 'div'>(selector?: Selector, defaultTagName?: DefaultTagName) => Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}\n   * )}\n   */\n  (\n    /**\n     * @param {string} [selector]\n     * @param {string} [defaultTagName='div']\n     * @returns {Element}\n     */\n    function (selector, defaultTagName = 'div') {\n      var value = selector || ''\n      /** @type {Properties} */\n      var props = {}\n      var start = 0\n      /** @type {string} */\n      var subvalue\n      /** @type {string} */\n      var previous\n      /** @type {RegExpMatchArray} */\n      var match\n\n      while (start < value.length) {\n        search.lastIndex = start\n        match = search.exec(value)\n        subvalue = value.slice(start, match ? match.index : value.length)\n\n        if (subvalue) {\n          if (!previous) {\n            defaultTagName = subvalue\n          } else if (previous === '#') {\n            props.id = subvalue\n          } else if (Array.isArray(props.className)) {\n            props.className.push(subvalue)\n          } else {\n            props.className = [subvalue]\n          }\n\n          start += subvalue.length\n        }\n\n        if (match) {\n          previous = match[0]\n          start++\n        }\n      }\n\n      return {\n        type: 'element',\n        tagName: defaultTagName,\n        properties: props,\n        children: []\n      }\n    }\n  )\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {Root['children'][number]} Child\n * @typedef {Child|Root} Node\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {Root|Element} HResult\n * @typedef {string|number} HStyleValue\n * @typedef {Record<string, HStyleValue>} HStyle\n * @typedef {string|number|boolean|null|undefined} HPrimitiveValue\n * @typedef {Array<string|number>} HArrayValue\n * @typedef {HPrimitiveValue|HArrayValue} HPropertyValue\n * @typedef {{[property: string]: HPropertyValue|HStyle}} HProperties\n *   Acceptable properties value.\n *\n * @typedef {string|number|null|undefined} HPrimitiveChild\n * @typedef {Array<Node|HPrimitiveChild>} HArrayChild\n * @typedef {Node|HPrimitiveChild|HArrayChild} HChild\n *   Acceptable child value\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null|undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string|null} [selector]\n       * @param {HProperties|HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties|HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle|HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string|number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Child>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * @param {HStyle} value\n * @returns {string}\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * @param {Array<string>} values\n * @returns {Record<string, string>}\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child Acceptable child value\n * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.\n *\n * @typedef {import('./jsx-classic').Element} h.JSX.Element\n * @typedef {import('./jsx-classic').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {string[]} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {number[]|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      indent = options.position.indent\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Reason for message.\n   *   Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place at which the message occurred in a file.\n   * @param {string} [origin]\n   *   Place in code the message originates from (example `'my-package:my-rule-name'`)\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    /** @type {string} */\n    this.message = typeof reason === 'object' ? reason.message : reason\n    /** @type {string} */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Whether this is a fatal problem that marks an associated file as no\n     * longer processable.\n     * If `true`, marks associated file as no longer processable.\n     * If `false`, necessitates a (potential) change.\n     * The value can also be `null` or `undefined`, for things that might not\n     * need changing.\n     *\n     * @type {boolean?}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number?}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number?}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full range information, when available.\n     * Has `start` and `end` fields, both set to an object with `line` and\n     * `column`, set to `number?`.\n     *\n     * @type {Position?}\n     */\n    this.position = position\n\n    /**\n     * Namespace of warning (example: `'my-package'`).\n     *\n     * @type {string?}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule-name'`).\n     *\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the VFile ecosystem).\n     *\n     * @type {string?}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string?}\n     */\n    this.actual\n\n    /**\n     * Suggest values that should be used instead of `actual`, one or more\n     * values that are deemed as acceptable.\n     *\n     * @type {Array<string>?}\n     */\n    this.expected\n\n    /**\n     * Link to documentation for the message.\n     *\n     * @type {string?}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (supported by `vfile-reporter`).\n     *\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error|VFileMessage} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","import { Element, Comment, Literal, ElementContent, RootContent, Properties } from 'hast';\nimport { RehypeAttrsOptions } from './';\n\nexport const getURLParameters = (url: string): Record<string, string | number | boolean> =>\n(url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce(\n  (a: Record<string, string | number>, v: string) => (\n    (a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a\n  ),\n  {},\n);\n\nexport const prevChild = (data: Literal[] = [], index: number): Comment | undefined => {\n  let i = index;\n  while (i > -1) {\n    i--;\n    if (!data[i]) return\n    if ((data[i] && data[i].value && (data[i].value as string).replace(/(\\n|\\s)/g, '') !== '') || data[i].type !== 'text') {\n      if (!/^rehype:/.test(data[i].value as string) || (data[i].type as string) !== 'comment') return;\n      return data[i] as unknown as Comment;\n    }\n  }\n  return;\n}\n\nexport const nextChild = (data: RootContent[] | ElementContent[] = [], index: number, tagName?: string, codeBlockParames?: boolean): ElementContent | undefined => {\n  let i = index;\n  while (i < data.length) {\n    i++;\n    if (tagName) {\n      const element = data[i] as Literal & Element;\n      if (element && element.value && (element.value as string).replace(/(\\n|\\s)/g, '') !== '' || data[i] && (data[i].type as string) === 'element') {\n        return element.tagName === tagName ? element : undefined\n      }\n    } else {\n      const element = data[i] as ElementContent & Literal;\n      if (!element || element.type === 'element') return;\n      if (element.type === 'text' && element.value.replace(/(\\n|\\s)/g, '') !== '') return;\n      if (/^(comment|raw)$/ig.test(element?.type)) {\n        if (!/^rehype:/.test(element.value?.replace(/^(\\s+)?<!--(.*?)-->/, '$2') || '')) {\n          return\n        };\n        if (codeBlockParames) {\n          const nextNode = nextChild(data, i, 'pre', codeBlockParames)\n          if (nextNode) return;\n          element.value = element.value?.replace(/^(\\n|\\s)+/, '')\n          return element;\n        } else {\n          element.value = element.value?.replace(/^(\\n|\\s)+/, '')\n          return element;\n        }\n      }\n    }\n  }\n  return\n}\n\n/**\n * 获取代码注视的位置\n * @param data 数据\n * @param index 当前数据所在的位置\n * @returns 返回 当前参数数据 Object，`{}`\n */\nexport const getCommentObject = ({ value = '' }: Comment): Properties => {\n  const param = getURLParameters(value.replace(/^<!--(.*?)-->/, '$1').replace(/^rehype:/, ''));\n  Object.keys(param).forEach((keyName: string) => {\n    if (param[keyName] === 'true') {\n      param[keyName] = true;\n    }\n    if (param[keyName] === 'false') {\n      param[keyName] = false;\n    }\n    if (typeof param[keyName] === 'string' && !/^0/.test(param[keyName] as string) && !isNaN(+param[keyName])) {\n      param[keyName] = +param[keyName];\n    }\n  })\n  return param;\n}\n\nexport type DataConfig = {\n  'data-config': Properties\n}\n\nexport const propertiesHandle = (defaultAttrs?: Properties | null, attrs?: Properties, type?: RehypeAttrsOptions['properties']): Properties | DataConfig => {\n  if (type === 'string') {\n    return { ...defaultAttrs, 'data-config': JSON.stringify({ ...attrs, rehyp: true })}\n  } else if (type === 'attr') {\n    return { ...defaultAttrs, ...attrs}\n  }\n  return { ...defaultAttrs, 'data-config': { ...attrs, rehyp: true }}\n}","import { Plugin } from 'unified';\nimport { Root, Element, Comment, Properties, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils';\n\nexport type RehypeAttrsOptions = {\n  /**\n   * ## `data`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs&abc=2-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p data-config=\"data-config='[object Object]'\">text</p>\n   * ```\n   * \n   * ## `string`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * \n   * 👇👇👇👇👇\n   * \n   * ```html\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\n   * ```\n   * \n   * ## attr\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p title=\"Rehype Attrs\">text</p>\n   * ```\n   * @default `data`\n   */\n  properties?: 'data' | 'string' | 'attr';\n  /**\n   * Code block passing parameters\n   */\n  codeBlockParames?: boolean;\n}\n\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options = {}) => {\n  const { properties = 'data', codeBlockParames = true } = options;\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (codeBlockParames && node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0] as Element;\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children as Literal[], index);\n          if (child) {\n            const attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, properties) as Properties\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index, '', codeBlockParames)\n        if (child) {\n          const attr = getCommentObject(child as Comment)\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, properties) as Properties\n          }\n        }\n      }\n    });\n  }\n}\n\n\nexport default rehypeAttrs\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast-util-is-element').Test} Test\n *\n * @typedef {'prepend'|'append'|'wrap'|'before'|'after'} Behavior\n *\n * @callback Build\n * @param {Element} node\n * @returns {ElementChild|ElementChild[]}\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior} [behavior='prepend']\n *   How to create links.\n * @property {Behavior} [behaviour]\n *   Please use `behavior` instead\n * @property {Properties} [properties]\n *   Extra properties to set on the link when injecting.\n *   Defaults to `{ariaHidden: true, tabIndex: -1}` when `'prepend'` or\n *   `'append'`.\n * @property {ElementChild|ElementChild[]|Build} [content={type: 'element', tagName: 'span', properties: {className: ['icon', 'icon-link']}, children: []}]\n *   hast nodes to insert in the link.\n * @property {ElementChild|ElementChild[]|Build} [group]\n *   hast node to wrap the heading and link with, if `behavior` is `'before'` or\n *   `'after'`.\n *   There is no default.\n * @property {Test} [test]\n *   Test to define which heading elements are linked.\n *   Any test that can be given to `hast-util-is-element` is supported.\n *   The default (no test) is to link all headings.\n *   Can be used to link only h1-h3, or for example all except h1.\n */\n\nimport extend from 'extend'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {visit, SKIP} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/**\n * Plugin to automatically add links to headings (h1-h6).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function rehypeAutolinkHeadings(options = {}) {\n  let props = options.properties\n  const behavior = options.behaviour || options.behavior || 'prepend'\n  const content = options.content || contentDefaults\n  const group = options.group\n  const is = convertElement(options.test)\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  let method\n\n  if (behavior === 'wrap') {\n    method = wrap\n  } else if (behavior === 'before' || behavior === 'after') {\n    method = around\n  } else {\n    if (!props) {\n      props = {ariaHidden: 'true', tabIndex: -1}\n    }\n\n    method = inject\n  }\n\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (\n        headingRank(node) &&\n        hasProperty(node, 'id') &&\n        is(node, index, parent)\n      ) {\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function inject(node) {\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, extend(true, {}, props), toChildren(content, node))\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function around(node, index, parent) {\n    // Uncommon.\n    /* c8 ignore next */\n    if (typeof index !== 'number' || !parent) return\n\n    const link = create(\n      node,\n      extend(true, {}, props),\n      toChildren(content, node)\n    )\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function wrap(node) {\n    node.children = [create(node, extend(true, {}, props), node.children)]\n    return [SKIP]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild[]}\n   */\n  function toChildren(value, node) {\n    const result = toNode(value, node)\n    return Array.isArray(result) ? result : [result]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild|ElementChild[]}\n   */\n  function toNode(value, node) {\n    if (typeof value === 'function') return value(node)\n    return extend(true, Array.isArray(value) ? [] : {}, value)\n  }\n\n  /**\n   * @param {Element} node\n   * @param {Properties} props\n   * @param {ElementChild[]} children\n   * @returns {Element}\n   */\n  function create(node, props, children) {\n    return {\n      type: 'element',\n      tagName: 'a',\n      properties: Object.assign({}, props, {\n        // Fix hast types and make them required.\n        /* c8 ignore next */\n        href: '#' + (node.properties || {}).id\n      }),\n      children\n    }\n  }\n}\n","import { Plugin } from 'unified';\nimport { Root, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\n\nexport type RehypeIgnoreOptions = {\n  /**\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\n   */\n  openDelimiter?: string;\n  /**\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\n   */\n  closeDelimiter?: string;\n}\n\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\n  return (tree) => {\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      if (node.type === 'element' || node.type === 'root') {\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\n        // if (start > -1 && end > -1) {\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\n        // }\n        let start = false;\n        node.children = node.children.filter((item) => {\n          if (item.type === 'raw' || item.type === 'comment') {\n            let str =  item.value?.trim();\n            str = str.replace(/^<!--(.*?)-->/, '$1')\n            if (str === openDelimiter) {\n                start = true;\n                return false;\n            }\n            if (str === closeDelimiter) {\n                start = false;\n                return false;\n            }\n          }\n          \n          return !start;\n        })\n      }\n    });\n  }\n}\n\nexport default rehypeIgnore;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * Options for unist util filter\n *\n * @typedef {Object} FilterOptions\n * @property {boolean} [cascade=true] Whether to drop parent nodes if they had children, but all their children were filtered out.\n */\n\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create a new tree consisting of copies of all nodes that pass test.\n * The tree is walked in preorder (NLR), visiting the node itself, then its head, etc.\n *\n * @param tree Tree to filter.\n * @param options Configuration (optional).\n * @param test is-compatible test (such as a type).\n * @returns Given `tree` or `null` if it didn’t pass `test`.\n */\nexport const filter =\n  /**\n   * @type {(\n   *  (<Tree extends Node, Check extends Test>(node: Tree, options: FilterOptions, test: Check) => import('./complex-types').Matches<Tree, Check>) &\n   *  (<Tree extends Node, Check extends Test>(node: Tree, test: Check) => import('./complex-types').Matches<Tree, Check>) &\n   *  (<Tree extends Node>(node: Tree, options?: FilterOptions) => Tree)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {FilterOptions} options\n     * @param {Test} test\n     * @returns {Node|null}\n     */\n    function (tree, options, test) {\n      const is = convert(test || options)\n      const cascade =\n        options.cascade === undefined || options.cascade === null\n          ? true\n          : options.cascade\n\n      return preorder(tree)\n\n      /**\n       * @param {Node} node\n       * @param {number|undefined} [index]\n       * @param {Parent|undefined} [parent]\n       * @returns {Node|null}\n       */\n      function preorder(node, index, parent) {\n        /** @type {Array.<Node>} */\n        const children = []\n        /** @type {number} */\n        let childIndex\n        /** @type {Node} */\n        let result\n        /** @type {string} */\n        let key\n\n        if (!is(node, index, parent)) return null\n\n        // @ts-expect-error: Looks like a parent.\n        if (node.children) {\n          childIndex = -1\n\n          // @ts-expect-error Looks like a parent.\n          while (++childIndex < node.children.length) {\n            // @ts-expect-error Looks like a parent.\n            result = preorder(node.children[childIndex], childIndex, node)\n\n            if (result) {\n              children.push(result)\n            }\n          }\n\n          // @ts-expect-error Looks like a parent.\n          if (cascade && node.children.length > 0 && children.length === 0)\n            return null\n        }\n\n        // Create a shallow clone, using the new children.\n        /** @type {typeof node} */\n        // @ts-expect-error all the fields will be copied over.\n        const next = {}\n\n        for (key in node) {\n          if (own.call(node, key)) {\n            // @ts-expect-error: Looks like a record.\n            next[key] = key === 'children' ? children : node[key]\n          }\n        }\n\n        return next\n      }\n    }\n  )\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef Options options\n *   Configuration.\n * @property {boolean} [showLineNumbers]\n *   Set `showLineNumbers` to `true` to always display line number\n * @property {boolean} [ignoreMissing]\n *   Set `ignoreMissing` to `true` to ignore unsupported languages and line highlighting when no language is specified\n */\n\nimport { visit } from 'unist-util-visit'\nimport { toString } from 'hast-util-to-string'\nimport { filter } from 'unist-util-filter'\nimport rangeParser from 'parse-numeric-range'\n\n/**\n * @param {Element} node\n * @return {string|null}\n */\nconst getLanguage = (node) => {\n  const className = node.properties.className\n  //@ts-ignore\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase()\n    }\n  }\n  return null\n}\n\n/**\n * Create a closure that determines if we have to highlight the given index\n *\n * @param {string} meta\n * @return { (index:number) => boolean }\n */\nconst calculateLinesToHighlight = (meta) => {\n  const RE = /{([\\d,-]+)}/\n  // Remove space between {} e.g. {1, 3}\n  const parsedMeta = meta\n    .split(',')\n    .map((str) => str.trim())\n    .join()\n  if (RE.test(parsedMeta)) {\n    const strlineNumbers = RE.exec(parsedMeta)[1]\n    const lineNumbers = rangeParser(strlineNumbers)\n    return (index) => lineNumbers.includes(index + 1)\n  } else {\n    return () => false\n  }\n}\n\n/**\n * Check if we want to start the line numbering from a given number or 1\n * showLineNumbers=5, will start the numbering from 5\n * @param {string} meta\n * @returns {number}\n */\nconst calculateStartingLine = (meta) => {\n  const RE = /showLineNumbers=(?<lines>\\d+)/i\n  // pick the line number after = using a named capturing group\n  if (RE.test(meta)) {\n    const {\n      groups: { lines },\n    } = RE.exec(meta)\n    return Number(lines)\n  }\n  return 1\n}\n\n/**\n * Create container AST for node lines\n *\n * @param {number} number\n * @return {Element[]}\n */\nconst createLineNodes = (number) => {\n  const a = new Array(number)\n  for (let i = 0; i < number; i++) {\n    a[i] = {\n      type: 'element',\n      tagName: 'span',\n      properties: { className: [] },\n      children: [],\n    }\n  }\n  return a\n}\n\n/**\n * Split multiline text nodes into individual nodes with positioning\n * Add a node start and end line position information for each text node\n *\n * @return { (ast:Element['children']) => Element['children'] }\n *\n */\nconst addNodePositionClosure = () => {\n  let startLineNum = 1\n  /**\n   * @param {Element['children']} ast\n   * @return {Element['children']}\n   */\n  const addNodePosition = (ast) => {\n    return ast.reduce((result, node) => {\n      if (node.type === 'text') {\n        const value = /** @type {string} */ (node.value)\n        const numLines = (value.match(/\\n/g) || '').length\n        if (numLines === 0) {\n          node.position = {\n            // column: 1 is needed to avoid error with @next/mdx\n            // https://github.com/timlrx/rehype-prism-plus/issues/44\n            start: { line: startLineNum, column: 1 },\n            end: { line: startLineNum, column: 1 },\n          }\n          result.push(node)\n        } else {\n          const lines = value.split('\\n')\n          for (const [i, line] of lines.entries()) {\n            result.push({\n              type: 'text',\n              value: i === lines.length - 1 ? line : line + '\\n',\n              position: {\n                start: { line: startLineNum + i, column: 1 },\n                end: { line: startLineNum + i, column: 1 },\n              },\n            })\n          }\n        }\n        startLineNum = startLineNum + numLines\n\n        return result\n      }\n\n      if (Object.prototype.hasOwnProperty.call(node, 'children')) {\n        const initialLineNum = startLineNum\n        // @ts-ignore\n        node.children = addNodePosition(node.children, startLineNum)\n        result.push(node)\n        node.position = {\n          start: { line: initialLineNum, column: 1 },\n          end: { line: startLineNum, column: 1 },\n        }\n        return result\n      }\n\n      result.push(node)\n      return result\n    }, [])\n  }\n  return addNodePosition\n}\n\n/**\n * Rehype prism plugin generator that highlights code blocks with refractor (prismjs)\n *\n * Pass in your own refractor object with the required languages registered:\n * https://github.com/wooorm/refractor#refractorregistersyntax\n *\n * @param {import('refractor/lib/core').Refractor} refractor\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypePrismGenerator = (refractor) => {\n  return (options = {}) => {\n    return (tree) => {\n      visit(tree, 'element', visitor)\n    }\n\n    /**\n     * @param {Element} node\n     * @param {number} index\n     * @param {Element} parent\n     */\n    function visitor(node, index, parent) {\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      let meta = node.data && node.data.meta ? /** @type {string} */ (node.data.meta) : ''\n      // Coerce className to array\n      if (node.properties.className) {\n        if (typeof node.properties.className === 'boolean') {\n          node.properties.className = []\n        } else if (!Array.isArray(node.properties.className)) {\n          node.properties.className = [node.properties.className]\n        }\n      } else {\n        node.properties.className = []\n      }\n      node.properties.className.push('code-highlight')\n      const lang = getLanguage(node)\n\n      /** @type {Element} */\n      let refractorRoot\n\n      // Syntax highlight\n      if (lang) {\n        try {\n          let rootLang\n          if (lang?.includes('diff-')){\n            rootLang=lang.split('-')[1]\n          } else{\n            rootLang=lang\n          }\n          // @ts-ignore\n          refractorRoot = refractor.highlight(toString(node), rootLang)\n          // @ts-ignore className is already an array\n          parent.properties.className = (parent.properties.className || []).concat(\n            'language-' + rootLang\n          )\n        } catch (err) {\n          if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n            refractorRoot = node\n          } else {\n            throw err\n          }\n        }\n      } else {\n        refractorRoot = node\n      }\n\n      refractorRoot.children = addNodePositionClosure()(refractorRoot.children)\n\n      // Add position info to root\n      if (refractorRoot.children.length > 0) {\n        refractorRoot.position = {\n          start: { line: refractorRoot.children[0].position.start.line, column: 0 },\n          end: {\n            line: refractorRoot.children[refractorRoot.children.length - 1].position.end.line,\n            column: 0,\n          },\n        }\n      } else {\n        refractorRoot.position = {\n          start: { line: 0, column: 0 },\n          end: { line: 0, column: 0 },\n        }\n      }\n\n      const shouldHighlightLine = calculateLinesToHighlight(meta)\n      const startingLineNumber = calculateStartingLine(meta)\n      const codeLineArray = createLineNodes(refractorRoot.position.end.line)\n\n      const falseShowLineNumbersStr = [\n        'showlinenumbers=false',\n        'showlinenumbers=\"false\"',\n        'showlinenumbers={false}',\n      ]\n      for (const [i, line] of codeLineArray.entries()) {\n        // Default class name for each line\n        line.properties.className = ['code-line']\n\n        // Syntax highlight\n        const treeExtract = filter(\n          refractorRoot,\n          (node) => node.position.start.line <= i + 1 && node.position.end.line >= i + 1\n        )\n        line.children = treeExtract.children\n\n        // Line number\n        if (\n          (meta.toLowerCase().includes('showLineNumbers'.toLowerCase()) ||\n            options.showLineNumbers) &&\n          !falseShowLineNumbersStr.some((str) => meta.toLowerCase().includes(str))\n        ) {\n          line.properties.line = [(i + startingLineNumber).toString()]\n          line.properties.className.push('line-number')\n        }\n\n        // Line highlight\n        if (shouldHighlightLine(i)) {\n          line.properties.className.push('highlight-line')\n        }\n\n        // Diff classes\n        if ((lang === 'diff' || lang?.includes('diff-')) && toString(line).substring(0, 1) === '-') {\n          line.properties.className.push('deleted')\n        } else if ((lang === 'diff' || lang?.includes('diff-')) && toString(line).substring(0, 1) === '+') {\n          line.properties.className.push('inserted')\n        }\n      }\n\n      // Remove possible trailing line when splitting by \\n which results in empty array\n      if (\n        codeLineArray.length > 0 &&\n        toString(codeLineArray[codeLineArray.length - 1]).trim() === ''\n      ) {\n        codeLineArray.pop()\n      }\n\n      node.children = codeLineArray\n    }\n  }\n}\n\nexport default rehypePrismGenerator\n","import { refractor as refractorAll } from 'refractor/lib/all.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * This supports all the languages and should be used on the server side.\n *\n * Consider using rehypePrismCommon or rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismAll = rehypePrismGenerator(refractorAll)\n\nexport default rehypePrismAll\n","import { refractor as refractorCommon } from 'refractor/lib/common.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * Supported languages: https://github.com/wooorm/refractor#data\n *\n * Consider using rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismCommon = rehypePrismGenerator(refractorCommon)\n\nexport default rehypePrismCommon\n","/**\n * @typedef {import('./core.js').HChild} Child\n * @typedef {import('./core.js').HProperties} Properties\n *\n * @typedef {import('./jsx-classic').Element} s.JSX.Element\n * @typedef {import('./jsx-classic').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {Parent['children'][number]} Child\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {Child|Root} Node\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentType} P5Doctype\n * @typedef {import('parse5').CommentNode} P5Comment\n * @typedef {import('parse5').TextNode} P5Text\n * @typedef {import('parse5').Element} P5Element\n * @typedef {import('parse5').ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Location} P5Location\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {import('parse5').Node} P5Node\n *\n * @typedef {'html'|'svg'} Space\n *\n * @callback Handler\n * @param {Context} ctx\n * @param {P5Node} node\n * @param {Array.<Child>} [children]\n * @returns {Node}\n *\n * @typedef Options\n * @property {Space} [space='html'] Whether the root of the tree is in the `'html'` or `'svg'` space. If an element in with the SVG namespace is found in `ast`, `fromParse5` automatically switches to the SVG space when entering the element, and switches back when leaving\n * @property {VFile} [file] `VFile`, used to add positional information to nodes. If given, the file should have the original HTML source as its contents\n * @property {boolean} [verbose=false] Whether to add extra positional information about starting tags, closing tags, and attributes to elements. Note: not used without `file`\n *\n * @typedef Context\n * @property {Schema} schema\n * @property {VFile|undefined} file\n * @property {boolean|undefined} verbose\n * @property {boolean} location\n */\n\nimport {h, s} from 'hastscript'\nimport {html, svg, find} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n\n// Handlers.\nconst map = {\n  '#document': root,\n  '#document-fragment': root,\n  '#text': text,\n  '#comment': comment,\n  '#documentType': doctype\n}\n\n/**\n * Transform Parse5’s AST to a hast tree.\n *\n * @param {P5Node} ast\n * @param {Options|VFile} [options]\n */\nexport function fromParse5(ast, options = {}) {\n  /** @type {Options} */\n  let settings\n  /** @type {VFile|undefined} */\n  let file\n\n  if (isFile(options)) {\n    file = options\n    settings = {}\n  } else {\n    file = options.file\n    settings = options\n  }\n\n  return transform(\n    {\n      schema: settings.space === 'svg' ? svg : html,\n      file,\n      verbose: settings.verbose,\n      location: false\n    },\n    ast\n  )\n}\n\n/**\n * Transform children.\n *\n * @param {Context} ctx\n * @param {P5Node} ast\n * @returns {Node}\n */\nfunction transform(ctx, ast) {\n  const schema = ctx.schema\n  /** @type {Handler} */\n  // @ts-expect-error: index is fine.\n  const fn = own.call(map, ast.nodeName) ? map[ast.nodeName] : element\n  /** @type {Array.<Child>|undefined} */\n  let children\n\n  // Element.\n  if ('tagName' in ast) {\n    ctx.schema = ast.namespaceURI === webNamespaces.svg ? svg : html\n  }\n\n  if ('childNodes' in ast) {\n    children = nodes(ctx, ast.childNodes)\n  }\n\n  const result = fn(ctx, ast, children)\n\n  if ('sourceCodeLocation' in ast && ast.sourceCodeLocation && ctx.file) {\n    // @ts-expect-error It’s fine.\n    const position = createLocation(ctx, result, ast.sourceCodeLocation)\n\n    if (position) {\n      ctx.location = true\n      result.position = position\n    }\n  }\n\n  ctx.schema = schema\n\n  return result\n}\n\n/**\n * Transform children.\n *\n * @param {Context} ctx\n * @param {Array.<P5Node>} children\n * @returns {Array.<Child>}\n */\nfunction nodes(ctx, children) {\n  let index = -1\n  /** @type {Array.<Child>} */\n  const result = []\n\n  while (++index < children.length) {\n    // @ts-expect-error Assume no roots in children.\n    result[index] = transform(ctx, children[index])\n  }\n\n  return result\n}\n\n/**\n * Transform a document.\n * Stores `ast.quirksMode` in `node.data.quirksMode`.\n *\n * @type {Handler}\n * @param {P5Document} ast\n * @param {Array.<Child>} children\n * @returns {Root}\n */\nfunction root(ctx, ast, children) {\n  /** @type {Root} */\n  const result = {\n    type: 'root',\n    children,\n    data: {quirksMode: ast.mode === 'quirks' || ast.mode === 'limited-quirks'}\n  }\n\n  if (ctx.file && ctx.location) {\n    const doc = String(ctx.file)\n    const loc = location(doc)\n    result.position = {\n      start: loc.toPoint(0),\n      end: loc.toPoint(doc.length)\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform a doctype.\n *\n * @type {Handler}\n * @returns {Doctype}\n */\nfunction doctype() {\n  // @ts-expect-error Types are out of date.\n  return {type: 'doctype'}\n}\n\n/**\n * Transform a text.\n *\n * @type {Handler}\n * @param {P5Text} ast\n * @returns {Text}\n */\nfunction text(_, ast) {\n  return {type: 'text', value: ast.value}\n}\n\n/**\n * Transform a comment.\n *\n * @type {Handler}\n * @param {P5Comment} ast\n * @returns {Comment}\n */\nfunction comment(_, ast) {\n  return {type: 'comment', value: ast.data}\n}\n\n/**\n * Transform an element.\n *\n * @type {Handler}\n * @param {P5Element} ast\n * @param {Array.<ElementChild>} children\n * @returns {Element}\n */\nfunction element(ctx, ast, children) {\n  const fn = ctx.schema.space === 'svg' ? s : h\n  let index = -1\n  /** @type {Object.<string, string>} */\n  const props = {}\n\n  while (++index < ast.attrs.length) {\n    const attribute = ast.attrs[index]\n    props[(attribute.prefix ? attribute.prefix + ':' : '') + attribute.name] =\n      attribute.value\n  }\n\n  const result = fn(ast.tagName, props, children)\n\n  if (result.tagName === 'template' && 'content' in ast) {\n    const pos = ast.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    /** @type {Root} */\n    // @ts-expect-error Types are wrong.\n    const content = transform(ctx, ast.content)\n\n    if (startTag && endTag && ctx.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  return result\n}\n\n/**\n * Create clean positional information.\n *\n * @param {Context} ctx\n * @param {Node} node\n * @param {P5ElementLocation} location\n * @returns {Position|null}\n */\nfunction createLocation(ctx, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (ctx.verbose) {\n      /** @type {Object.<string, Position|null>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      for (key in location.attrs) {\n        if (own.call(location.attrs, key)) {\n          props[find(ctx.schema, key).property] = position(location.attrs[key])\n        }\n      }\n\n      node.data = {\n        position: {\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {P5Location} loc\n * @returns {Position|null}\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n  // @ts-expect-error `null` is fine.\n  return start || end ? {start, end} : null\n}\n\n/**\n * @param {Point} point\n * @returns {Point|null}\n */\nfunction point(point) {\n  return point.line && point.column ? point : null\n}\n\n/**\n * @param {VFile|Options} value\n * @returns {value is VFile}\n */\nfunction isFile(value) {\n  return 'messages' in value\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {Pick<Point, 'line'|'column'>} PositionalPoint\n * @typedef {Required<Point>} FullPoint\n * @typedef {NonNullable<Point['offset']>} Offset\n */\n\n/**\n * Get transform functions for the given `document`.\n *\n * @param {string|Uint8Array|VFile} file\n */\nexport function location(file) {\n  var value = String(file)\n  /** @type {Array.<number>} */\n  var indices = []\n  var search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /**\n   * Get the line and column-based `point` for `offset` in the bound indices.\n   * Returns a point with `undefined` values when given invalid or out of bounds\n   * input.\n   *\n   * @param {Offset} offset\n   * @returns {FullPoint}\n   */\n  function toPoint(offset) {\n    var index = -1\n\n    if (offset > -1 && offset < indices[indices.length - 1]) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (indices[index - 1] || 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /**\n   * Get the `offset` for a line and column-based `point` in the bound indices.\n   * Returns `-1` when given invalid or out of bounds input.\n   *\n   * @param {PositionalPoint} point\n   * @returns {Offset}\n   */\n  function toOffset(point) {\n    var line = point && point.line\n    var column = point && point.column\n    /** @type {number} */\n    var offset\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      offset = (indices[line - 2] || 0) + column - 1 || 0\n    }\n\n    return offset > -1 && offset < indices[indices.length - 1] ? offset : -1\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('unist-util-is').AssertPredicate<Element>} AssertElement\n * @typedef {import('unist-util-is').AssertPredicate<Text>} AssertText\n * @typedef {import('unist-util-is').AssertPredicate<Root>} AssertRoot\n *\n * @callback CreateElementLike\n * @param {string} name\n * @param {any} attributes\n * @param {Array.<string|any>} [children]\n * @returns {any}\n *\n * @typedef Context\n * @property {html|svg} schema\n * @property {string|null} prefix\n * @property {number} key\n * @property {boolean} react\n * @property {boolean} vue\n * @property {boolean} vdom\n * @property {boolean} hyperscript\n *\n * @typedef Options\n * @property {string|null} [prefix]\n * @property {'html'|'svg'} [space]\n */\n\nimport {html, svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {webNamespaces} from 'web-namespaces'\nimport {convert} from 'unist-util-is'\n\nconst ns = /** @type {Record<string, string>} */ (webNamespaces)\nconst toReact = /** @type {Record<string, string>} */ (hastToReact)\n\nconst own = {}.hasOwnProperty\n\n/** @type {AssertRoot} */\n// @ts-expect-error it’s correct.\nconst root = convert('root')\n/** @type {AssertElement} */\n// @ts-expect-error it’s correct.\nconst element = convert('element')\n/** @type {AssertText} */\n// @ts-expect-error it’s correct.\nconst text = convert('text')\n\n/**\n * @template {CreateElementLike} H\n * @param {H} h\n * @param {Element|Root} tree\n * @param {string|boolean|Options} [options]\n * @returns {ReturnType<H>}\n */\nexport function toH(h, tree, options) {\n  if (typeof h !== 'function') {\n    throw new TypeError('h is not a function')\n  }\n\n  const r = react(h)\n  const v = vue(h)\n  const vd = vdom(h)\n  /** @type {string|boolean|null|undefined} */\n  let prefix\n  /** @type {Element} */\n  let node\n\n  if (typeof options === 'string' || typeof options === 'boolean') {\n    prefix = options\n    options = {}\n  } else {\n    if (!options) options = {}\n    prefix = options.prefix\n  }\n\n  if (root(tree)) {\n    // @ts-expect-error Allow `doctypes` in there, we’ll filter them out later.\n    node =\n      tree.children.length === 1 && element(tree.children[0])\n        ? tree.children[0]\n        : {\n            type: 'element',\n            tagName: 'div',\n            properties: {},\n            children: tree.children\n          }\n  } else if (element(tree)) {\n    node = tree\n  } else {\n    throw new Error(\n      // @ts-expect-error runtime.\n      'Expected root or element, not `' + ((tree && tree.type) || tree) + '`'\n    )\n  }\n\n  return transform(h, node, {\n    schema: options.space === 'svg' ? svg : html,\n    prefix:\n      prefix === undefined || prefix === null\n        ? r || v || vd\n          ? 'h-'\n          : null\n        : typeof prefix === 'string'\n        ? prefix\n        : prefix\n        ? 'h-'\n        : null,\n    key: 0,\n    react: r,\n    vue: v,\n    vdom: vd,\n    hyperscript: hyperscript(h)\n  })\n}\n\n/**\n * Transform a hast node through a hyperscript interface to *anything*!\n *\n * @template {CreateElementLike} H\n * @param {H} h\n * @param {Element} node\n * @param {Context} ctx\n */\nfunction transform(h, node, ctx) {\n  const parentSchema = ctx.schema\n  let schema = parentSchema\n  let name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const attributes = {}\n  /** @type {Array.<ReturnType<H>|string>} */\n  const nodes = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (parentSchema.space === 'html' && name.toLowerCase() === 'svg') {\n    schema = svg\n    ctx.schema = schema\n  }\n\n  for (key in node.properties) {\n    if (node.properties && own.call(node.properties, key)) {\n      addAttribute(attributes, key, node.properties[key], ctx, name)\n    }\n  }\n\n  if (ctx.vdom) {\n    if (schema.space === 'html') {\n      name = name.toUpperCase()\n    } else if (schema.space) {\n      attributes.namespace = ns[schema.space]\n    }\n  }\n\n  if (ctx.prefix) {\n    ctx.key++\n    attributes.key = ctx.prefix + ctx.key\n  }\n\n  if (node.children) {\n    while (++index < node.children.length) {\n      const value = node.children[index]\n\n      if (element(value)) {\n        nodes.push(transform(h, value, ctx))\n      } else if (text(value)) {\n        nodes.push(value.value)\n      }\n    }\n  }\n\n  // Restore parent schema.\n  ctx.schema = parentSchema\n\n  // Ensure no React warnings are triggered for void elements having children\n  // passed in.\n  return nodes.length > 0\n    ? h.call(node, name, attributes, nodes)\n    : h.call(node, name, attributes)\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n * @param {string} name\n */\n// eslint-disable-next-line complexity, max-params\nfunction addAttribute(props, prop, value, ctx, name) {\n  const info = find(ctx.schema, prop)\n  /** @type {string|undefined} */\n  let subprop\n\n  // Ignore nullish and `NaN` values.\n  // Ignore `false` and falsey known booleans for hyperlike DSLs.\n  if (\n    value === undefined ||\n    value === null ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (value === false && (ctx.vue || ctx.vdom || ctx.hyperscript)) ||\n    (!value && info.boolean && (ctx.vue || ctx.vdom || ctx.hyperscript))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // Treat `true` and truthy known booleans.\n  if (info.boolean && ctx.hyperscript) {\n    value = ''\n  }\n\n  // VDOM, Vue, and React accept `style` as object.\n  if (\n    info.property === 'style' &&\n    typeof value === 'string' &&\n    (ctx.react || ctx.vue || ctx.vdom)\n  ) {\n    value = parseStyle(value, name)\n  }\n\n  if (ctx.vue) {\n    if (info.property !== 'style') subprop = 'attrs'\n  } else if (!info.mustUseProperty) {\n    if (ctx.vdom) {\n      if (info.property !== 'style') subprop = 'attributes'\n    } else if (ctx.hyperscript) {\n      subprop = 'attrs'\n    }\n  }\n\n  if (subprop) {\n    props[subprop] = Object.assign(props[subprop] || {}, {\n      [info.attribute]: value\n    })\n  } else if (info.space && ctx.react) {\n    props[toReact[info.property] || info.property] = value\n  } else {\n    props[info.attribute] = value\n  }\n}\n\n/**\n * Check if `h` is `react.createElement`.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction react(h) {\n  /** @type {unknown} */\n  const node = h('div', {})\n  return Boolean(\n    node &&\n      // @ts-expect-error Looks like a React node.\n      ('_owner' in node || '_store' in node) &&\n      // @ts-expect-error Looks like a React node.\n      (node.key === undefined || node.key === null)\n  )\n}\n\n/**\n * Check if `h` is `hyperscript`.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction hyperscript(h) {\n  return 'context' in h && 'cleanup' in h\n}\n\n/**\n * Check if `h` is `virtual-dom/h`.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction vdom(h) {\n  /** @type {unknown} */\n  const node = h('div', {})\n  // @ts-expect-error Looks like a vnode.\n  return node.type === 'VirtualNode'\n}\n\n/**\n * Check if `h` is Vue.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction vue(h) {\n  /** @type {unknown} */\n  const node = h('div', {})\n  // @ts-expect-error Looks like a Vue node.\n  return Boolean(node && node.context && node.context._isVue)\n}\n\n/**\n * @param {string} value\n * @param {string} tagName\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value, tagName) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, (name, value) => {\n      if (name.slice(0, 4) === '-ms-') name = 'ms-' + name.slice(4)\n\n      result[\n        name.replace(\n          /-([a-z])/g,\n          /**\n           * @param {string} _\n           * @param {string} $1\n           * @returns {string}\n           */ (_, $1) => $1.toUpperCase()\n        )\n      ] = value\n    })\n  } catch (error) {\n    error.message =\n      tagName + '[style]' + error.message.slice('undefined'.length)\n    throw error\n  }\n\n  return result\n}\n","/**\n * @typedef {import('parse5').Node} P5Node\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentFragment} P5Fragment\n * @typedef {import('parse5').DocumentType} P5Doctype\n * @typedef {import('parse5').CommentNode} P5Comment\n * @typedef {import('parse5').TextNode} P5Text\n * @typedef {import('parse5').Element} P5Element\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {import('parse5').ParentNode} P5Parent\n * @typedef {Exclude<P5Node, P5Document|P5Fragment>} P5Child\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('property-information').Info} Info\n * @typedef {'html'|'svg'} Space\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {Parent['children'][number]} Child\n * @typedef {Child|Root} Node\n *\n * @callback Handle\n * @param {Node} node\n * @param {Schema} schema\n * @returns {P5Node}\n */\n\nimport {html, svg, find} from 'property-information'\nimport {toH} from 'hast-to-hyperscript'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nvar own = {}.hasOwnProperty\n\nvar one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a tree from hast to Parse5’s AST.\n *\n * @param {Node} tree\n * @param {Space} [space='html']\n * @returns {P5Node}\n */\nexport function toParse5(tree, space) {\n  // @ts-ignore Types are wrong.\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @type {Handle}\n * @param {Root} node\n * @returns {P5Document}\n */\nfunction root(node, schema) {\n  /** @type {P5Document} */\n  var p5 = {\n    nodeName: '#document',\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  // @ts-ignore Assume correct children.\n  p5.childNodes = all(node.children, p5, schema)\n  return patch(node, p5)\n}\n\n/**\n * @type {Handle}\n * @param {Root} node\n * @returns {P5Fragment}\n */\nfunction fragment(node, schema) {\n  /** @type {P5Fragment} */\n  var p5 = {nodeName: '#document-fragment', childNodes: []}\n  // @ts-ignore Assume correct children.\n  p5.childNodes = all(node.children, p5, schema)\n  return patch(node, p5)\n}\n\n/**\n * @type {Handle}\n * @param {Doctype} node\n * @returns {P5Doctype}\n */\nfunction doctype(node) {\n  return patch(node, {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: undefined\n  })\n}\n\n/**\n * @type {Handle}\n * @param {Text} node\n * @returns {P5Text}\n */\nfunction text(node) {\n  return patch(node, {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: undefined\n  })\n}\n\n/**\n * @type {Handle}\n * @param {Comment} node\n * @returns {P5Comment}\n */\nfunction comment(node) {\n  return patch(node, {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: undefined\n  })\n}\n\n/**\n * @type {Handle}\n * @param {Element} node\n * @returns {P5Element}\n */\nfunction element(node, schema) {\n  /** @type {Space} */\n  // @ts-ignore Assume space.\n  var space = schema.space\n  return toH(h, Object.assign({}, node, {children: []}), {space})\n\n  /**\n   * @param {string} name\n   * @param {Object.<string, string|boolean|number>} attrs\n   */\n  function h(name, attrs) {\n    /** @type {Array.<P5Attribute>} */\n    var values = []\n    /** @type {Info} */\n    var info\n    /** @type {P5Attribute} */\n    var value\n    /** @type {string} */\n    var key\n    /** @type {number} */\n    var index\n    /** @type {P5Element} */\n    var p5\n\n    for (key in attrs) {\n      if (!own.call(attrs, key) || attrs[key] === false) {\n        continue\n      }\n\n      info = find(schema, key)\n\n      if (info.boolean && !attrs[key]) {\n        continue\n      }\n\n      value = {name: key, value: attrs[key] === true ? '' : String(attrs[key])}\n\n      if (info.space && info.space !== 'html' && info.space !== 'svg') {\n        index = key.indexOf(':')\n\n        if (index < 0) {\n          value.prefix = ''\n        } else {\n          value.name = key.slice(index + 1)\n          value.prefix = key.slice(0, index)\n        }\n\n        value.namespace = webNamespaces[info.space]\n      }\n\n      values.push(value)\n    }\n\n    if (schema.space === 'html' && node.tagName === 'svg') schema = svg\n\n    p5 = patch(node, {\n      nodeName: name,\n      tagName: name,\n      attrs: values,\n      namespaceURI: webNamespaces[schema.space],\n      childNodes: [],\n      parentNode: undefined\n    })\n\n    // @ts-ignore Assume correct children.\n    p5.childNodes = all(node.children, p5, schema)\n\n    // @ts-ignore Types are wrong.\n    if (name === 'template') p5.content = fragment(node.content, schema)\n\n    return p5\n  }\n}\n\n/**\n * @param {Array.<Child>} children\n * @param {P5Parent} p5\n * @param {Schema} schema\n * @returns {Array.<P5Child>}\n */\nfunction all(children, p5, schema) {\n  var index = -1\n  /** @type {Array.<P5Child>} */\n  var result = []\n  /** @type {P5Child} */\n  var child\n\n  if (children) {\n    while (++index < children.length) {\n      // @ts-ignore Assume child.\n      child = one(children[index], schema)\n\n      // @ts-ignore types are wrong.\n      child.parentNode = p5\n\n      result.push(child)\n    }\n  }\n\n  return result\n}\n\n/**\n * Patch specific properties.\n *\n * @template {P5Node} T\n * @param {Node} node\n * @param {T} p5\n * @returns {T}\n */\nfunction patch(node, p5) {\n  var position = node.position\n\n  if (position && position.start && position.end) {\n    // @ts-ignore Types are wrong.\n    p5.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n\n  return p5\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentFragment} P5Fragment\n * @typedef {Omit<import('parse5').Element, 'parentNode'>} P5Element\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {Omit<import('parse5').Location, 'startOffset' | 'endOffset'> & {startOffset: number|undefined, endOffset: number|undefined}} P5Location\n * @typedef {import('parse5').ParserOptions} P5ParserOptions\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {import('../complex-types').Raw} Raw\n *\n * @typedef {Omit<Comment, 'value'> & {value: {stitch: Node}}} Stitch\n *\n * @typedef Options\n * @property {Array<string>} [passThrough]\n *   List of custom hast node types to pass through (keep) in hast.\n *   If the passed through nodes have children, those children are expected to\n *   be hast and will be handled.\n *\n * @typedef HiddenTokenizer\n * @property {Array<HiddenLocationTracker>} __mixins\n *   Way too simple, but works for us.\n * @property {HiddenPreprocessor} preprocessor\n * @property {(value: string) => void} write\n * @property {() => number} _consume\n * @property {Array<HiddenToken>} tokenQueue\n * @property {string} state\n * @property {string} returnState\n * @property {number} charRefCode\n * @property {Array<number>} tempBuff\n * @property {Function} _flushCodePointsConsumedAsCharacterReference\n * @property {string} lastStartTagName\n * @property {number} consumedAfterSnapshot\n * @property {boolean} active\n * @property {HiddenToken|undefined} currentCharacterToken\n * @property {HiddenToken|undefined} currentToken\n * @property {unknown} currentAttr\n * @property {Function} NAMED_CHARACTER_REFERENCE_STATE\n * @property {Function} NUMERIC_CHARACTER_REFERENCE_END_STATE\n *\n * @typedef {Record<string, unknown> & {location: P5Location}} HiddenToken\n *\n * @typedef HiddenPreprocessor\n * @property {string|undefined} html\n * @property {number} pos\n * @property {number} lastGapPos\n * @property {number} lastCharPos\n * @property {Array<number>} gapStack\n * @property {boolean} skipNextNewLine\n * @property {boolean} lastChunkWritten\n * @property {boolean} endOfChunkHit\n *\n * @typedef HiddenLocationTracker\n * @property {P5Location|undefined} currentAttrLocation\n * @property {P5Location} ctLoc\n * @property {HiddenPosTracker} posTracker\n *\n * @typedef HiddenPosTracker\n * @property {boolean} isEol\n * @property {number} lineStartPos\n * @property {number} droppedBufferSize\n * @property {number} offset\n * @property {number} col\n * @property {number} line\n */\n\n// @ts-expect-error: untyped.\nimport Parser from 'parse5/lib/parser/index.js'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst inTemplateMode = 'IN_TEMPLATE_MODE'\nconst dataState = 'DATA_STATE'\nconst characterToken = 'CHARACTER_TOKEN'\nconst startTagToken = 'START_TAG_TOKEN'\nconst endTagToken = 'END_TAG_TOKEN'\nconst commentToken = 'COMMENT_TOKEN'\nconst doctypeToken = 'DOCTYPE_TOKEN'\n\n/** @type {P5ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Given a hast tree and an optional vfile (for positional info), return a new\n * parsed-again hast tree.\n *\n * @param tree\n *   Original hast tree.\n * @param file\n *   Virtual file for positional info, optional.\n * @param options\n *   Configuration.\n */\nexport const raw =\n  /**\n   * @type {(\n   *   ((tree: Node, file: VFile|undefined, options?: Options) => Node) &\n   *   ((tree: Node, options?: Options) => Node)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {VFile} [file]\n     * @param {Options} [options]\n     */\n    function (tree, file, options) {\n      let index = -1\n      const parser = new Parser(parseOptions)\n      const one = zwitch('type', {\n        // @ts-expect-error: hush.\n        handlers: {root, element, text, comment, doctype, raw: handleRaw},\n        // @ts-expect-error: hush.\n        unknown\n      })\n      /** @type {boolean|undefined} */\n      let stitches\n      /** @type {HiddenTokenizer|undefined} */\n      let tokenizer\n      /** @type {HiddenPreprocessor|undefined} */\n      let preprocessor\n      /** @type {HiddenPosTracker|undefined} */\n      let posTracker\n      /** @type {HiddenLocationTracker|undefined} */\n      let locationTracker\n\n      if (isOptions(file)) {\n        options = file\n        file = undefined\n      }\n\n      if (options && options.passThrough) {\n        while (++index < options.passThrough.length) {\n          // @ts-expect-error: hush.\n          one.handlers[options.passThrough[index]] = stitch\n        }\n      }\n\n      const result = fromParse5(\n        documentMode(tree) ? document() : fragment(),\n        file\n      )\n\n      if (stitches) {\n        visit(result, 'comment', (node, index, parent) => {\n          const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n          if (stitch.value.stitch && parent !== null && index !== null) {\n            // @ts-expect-error: assume the stitch is allowed.\n            parent.children[index] = stitch.value.stitch\n            return index\n          }\n        })\n      }\n\n      // Unpack if possible and when not given a `root`.\n      if (\n        tree.type !== 'root' &&\n        result.type === 'root' &&\n        result.children.length === 1\n      ) {\n        return result.children[0]\n      }\n\n      return result\n\n      /**\n       * @returns {P5Fragment}\n       */\n      function fragment() {\n        /** @type {P5Element} */\n        const context = {\n          nodeName: 'template',\n          tagName: 'template',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Element} */\n        const mock = {\n          nodeName: 'documentmock',\n          tagName: 'documentmock',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Fragment} */\n        const doc = {nodeName: '#document-fragment', childNodes: []}\n\n        parser._bootstrap(mock, context)\n        parser._pushTmplInsertionMode(inTemplateMode)\n        parser._initTokenizerForFragmentParsing()\n        parser._insertFakeRootElement()\n        parser._resetInsertionMode()\n        parser._findFormInFragmentContext()\n\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        parser._adoptNodes(mock.childNodes[0], doc)\n\n        return doc\n      }\n\n      /**\n       * @returns {P5Document}\n       */\n      function document() {\n        /** @type {P5Document} */\n        const doc = parser.treeAdapter.createDocument()\n\n        parser._bootstrap(doc, undefined)\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        return doc\n      }\n\n      /**\n       * @param {Array<Content>} nodes\n       * @returns {void}\n       */\n      function all(nodes) {\n        let index = -1\n\n        /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n        if (nodes) {\n          while (++index < nodes.length) {\n            one(nodes[index])\n          }\n        }\n      }\n\n      /**\n       * @param {Root} node\n       * @returns {void}\n       */\n      function root(node) {\n        all(node.children)\n      }\n\n      /**\n       * @param {Element} node\n       * @returns {void}\n       */\n      function element(node) {\n        resetTokenizer()\n        parser._processToken(startTag(node), webNamespaces.html)\n\n        all(node.children)\n\n        if (!htmlVoidElements.includes(node.tagName)) {\n          resetTokenizer()\n          parser._processToken(endTag(node))\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @returns {void}\n       */\n      function text(node) {\n        resetTokenizer()\n        parser._processToken({\n          type: characterToken,\n          chars: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Doctype} node\n       * @returns {void}\n       */\n      function doctype(node) {\n        resetTokenizer()\n        parser._processToken({\n          type: doctypeToken,\n          name: 'html',\n          forceQuirks: false,\n          publicId: '',\n          systemId: '',\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Comment|Stitch} node\n       * @returns {void}\n       */\n      function comment(node) {\n        resetTokenizer()\n        parser._processToken({\n          type: commentToken,\n          data: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Raw} node\n       * @returns {void}\n       */\n      function handleRaw(node) {\n        const start = pointStart(node)\n        const line = start.line || 1\n        const column = start.column || 1\n        const offset = start.offset || 0\n\n        /* c8 ignore next 4 */\n        if (!preprocessor) throw new Error('Expected `preprocessor`')\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n        if (!locationTracker) throw new Error('Expected `locationTracker`')\n\n        // Reset preprocessor:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/preprocessor.js#L17>.\n        preprocessor.html = undefined\n        preprocessor.pos = -1\n        preprocessor.lastGapPos = -1\n        preprocessor.lastCharPos = -1\n        preprocessor.gapStack = []\n        preprocessor.skipNextNewLine = false\n        preprocessor.lastChunkWritten = false\n        preprocessor.endOfChunkHit = false\n\n        // Reset preprocessor mixin:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/position-tracking/preprocessor-mixin.js>.\n        posTracker.isEol = false\n        posTracker.lineStartPos = -column + 1 // Looks weird, but ensures we get correct positional info.\n        posTracker.droppedBufferSize = offset\n        posTracker.offset = 0\n        posTracker.col = 1\n        posTracker.line = line\n\n        // Reset location tracker:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js>.\n        locationTracker.currentAttrLocation = undefined\n        locationTracker.ctLoc = createParse5Location(node)\n\n        // See the code for `parse` and `parseFragment`:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/parser/index.js#L371>.\n        tokenizer.write(node.value)\n        parser._runParsingLoop(null)\n\n        // Character references hang, so if we ended there, we need to flush\n        // those too.\n        // We reset the preprocessor as if the document ends here.\n        // Then one single call to the relevant state does the trick, parse5\n        // consumes the whole token.\n        if (\n          tokenizer.state === 'NAMED_CHARACTER_REFERENCE_STATE' ||\n          tokenizer.state === 'NUMERIC_CHARACTER_REFERENCE_END_STATE'\n        ) {\n          preprocessor.lastChunkWritten = true\n          tokenizer[tokenizer.state](tokenizer._consume())\n        }\n      }\n\n      /**\n       * @param {Node} node\n       */\n      function stitch(node) {\n        stitches = true\n\n        /** @type {Node} */\n        let clone\n\n        // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n        // passed through node).\n        if ('children' in node) {\n          clone = {\n            ...node,\n            children: raw(\n              {type: 'root', children: node.children},\n              file,\n              options\n              // @ts-expect-error Assume a given parent yields a parent.\n            ).children\n          }\n        } else {\n          clone = {...node}\n        }\n\n        // Hack: `value` is supposed to be a string, but as none of the tools\n        // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n        // through.\n        comment({type: 'comment', value: {stitch: clone}})\n      }\n\n      function resetTokenizer() {\n        /* c8 ignore next 2 */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n\n        // Process final characters if they’re still there after hibernating.\n        // Similar to:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js#L95>.\n        const token = tokenizer.currentCharacterToken\n\n        if (token) {\n          token.location.endLine = posTracker.line\n          token.location.endCol = posTracker.col + 1\n          token.location.endOffset = posTracker.offset + 1\n          parser._processToken(token)\n        }\n\n        // Reset tokenizer:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/index.js#L218-L234>.\n        // Especially putting it back in the `data` state is useful: some elements,\n        // like textareas and iframes, change the state.\n        // See GH-7.\n        // But also if broken HTML is in `raw`, and then a correct element is given.\n        // See GH-11.\n        tokenizer.tokenQueue = []\n        tokenizer.state = dataState\n        tokenizer.returnState = ''\n        tokenizer.charRefCode = -1\n        tokenizer.tempBuff = []\n        tokenizer.lastStartTagName = ''\n        tokenizer.consumedAfterSnapshot = -1\n        tokenizer.active = false\n        tokenizer.currentCharacterToken = undefined\n        tokenizer.currentToken = undefined\n        tokenizer.currentAttr = undefined\n      }\n    }\n  )\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction startTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: startTagToken,\n    tagName: node.tagName,\n    selfClosing: false,\n    attrs: attributes(node),\n    location\n  }\n}\n\n/**\n * @param {Element} node\n * @returns {Array<P5Attribute>}\n */\nfunction attributes(node) {\n  return toParse5({\n    tagName: node.tagName,\n    type: 'element',\n    properties: node.properties,\n    children: []\n    // @ts-expect-error Assume element.\n  }).attrs\n}\n\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction endTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: endTagToken,\n    tagName: node.tagName,\n    attrs: [],\n    location\n  }\n}\n\n/**\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot compile `' + node.type + '` node')\n}\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * @param {Node|Stitch} node\n * @returns {P5Location}\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  return {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n}\n\n/**\n * @param {VFile|Options|undefined} value\n * @return {value is Options}\n */\nfunction isOptions(value) {\n  return Boolean(value && !('message' in value && 'messages' in value))\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} Options\n * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Plugin to parse the tree again (and raw nodes).\n * Keeping positional info OK.  🙌\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeRaw(options = {}) {\n  return (tree, file) => {\n    // Assume that when a root was given, it’s also returned.\n    const result = /** @type {Root} */ (raw(tree, file, options))\n    return result\n  }\n}\n","const rtlRange = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nconst ltrRange =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\n/* eslint-disable no-misleading-character-class */\nconst rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']')\nconst ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']')\n/* eslint-enable no-misleading-character-class */\n\n/**\n * Detect the direction of text: left-to-right, right-to-left, or neutral\n *\n * @param {string} value\n * @returns {'rtl'|'ltr'|'neutral'}\n */\nexport function direction(value) {\n  const source = String(value || '')\n  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral'\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement\n */\n\nimport {convertElement} from 'hast-util-is-element'\n\n/**\n * @param {Node} node\n * @returns {node is Parent}\n */\nexport function parent(node) {\n  // @ts-expect-error: hush.\n  return Array.isArray(node.children)\n}\n\n/** @type {IsElement} */\n// @ts-expect-error it works.\nexport const element = convertElement()\n","/**\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').ElementChild} ElementChild\n * @typedef {import('./types.js').Direction} Direction\n * @typedef {import('unist-util-visit/complex-types').Visitor<ElementChild>} Visitor\n */\n\nimport {direction} from 'direction'\nimport {isElement} from 'hast-util-is-element'\nimport {toString} from 'hast-util-to-string'\nimport {svg} from 'property-information'\nimport {visit, EXIT, SKIP} from 'unist-util-visit'\nimport {element} from './util.js'\n\n/**\n * @param {SelectState} state\n * @param {HastNode} node\n * @returns {() => void}\n */\n// eslint-disable-next-line complexity\nexport function enterState(state, node) {\n  const schema = state.schema\n  const language = state.language\n  const currentDirection = state.direction\n  const editableOrEditingHost = state.editableOrEditingHost\n  /** @type {Direction|undefined} */\n  let dirInferred\n  /** @type {boolean|undefined} */\n  let found\n\n  if (element(node) && node.properties) {\n    const lang = node.properties.xmlLang || node.properties.lang\n    const type = node.properties.type || 'text'\n    const dir = dirProperty(node)\n\n    if (lang !== undefined && lang !== null) {\n      state.language = String(lang)\n      found = true\n    }\n\n    if (schema && schema.space === 'html') {\n      if (node.properties.contentEditable === 'true') {\n        state.editableOrEditingHost = true\n        found = true\n      }\n\n      if (isElement(node, 'svg')) {\n        state.schema = svg\n        found = true\n      }\n\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\n      // Explicit `[dir=rtl]`.\n      if (dir === 'rtl') {\n        dirInferred = dir\n      } else if (\n        // Explicit `[dir=ltr]`.\n        dir === 'ltr' ||\n        // HTML with an invalid or no `[dir]`.\n        (dir !== 'auto' && isElement(node, 'html')) ||\n        // `input[type=tel]` with an invalid or no `[dir]`.\n        (dir !== 'auto' && isElement(node, 'input') && type === 'tel')\n      ) {\n        dirInferred = 'ltr'\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n      } else if (dir === 'auto' || isElement(node, 'bdi')) {\n        if (isElement(node, 'textarea')) {\n          // Check contents of `<textarea>`.\n          dirInferred = dirBidi(toString(node))\n        } else if (\n          isElement(node, 'input') &&\n          (type === 'email' ||\n            type === 'search' ||\n            type === 'tel' ||\n            type === 'text')\n        ) {\n          // Check value of `<input>`.\n          // @ts-expect-error something is `never` in types but this is needed.\n          dirInferred = node.properties.value\n            ? // @ts-expect-error Assume string\n              dirBidi(node.properties.value)\n            : 'ltr'\n        } else {\n          // Check text nodes in `node`.\n          visit(node, inferDirectionality)\n        }\n      }\n\n      if (dirInferred) {\n        state.direction = dirInferred\n        found = true\n      }\n    }\n    // Turn off editing mode in non-HTML spaces.\n    else if (state.editableOrEditingHost) {\n      state.editableOrEditingHost = false\n      found = true\n    }\n  }\n\n  return found ? reset : noop\n\n  function reset() {\n    state.schema = schema\n    state.language = language\n    state.direction = currentDirection\n    state.editableOrEditingHost = editableOrEditingHost\n  }\n\n  /** @type {Visitor} */\n  function inferDirectionality(child) {\n    if (child.type === 'text') {\n      dirInferred = dirBidi(child.value)\n      return dirInferred ? EXIT : null\n    }\n\n    if (\n      child !== node &&\n      (isElement(child, ['bdi', 'script', 'style', 'textare']) ||\n        dirProperty(child))\n    ) {\n      return SKIP\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Direction|undefined}\n */\nfunction dirBidi(value) {\n  const result = direction(value)\n  return result === 'neutral' ? undefined : result\n}\n\n/**\n * @param {ElementChild} node\n * @returns {Direction|undefined}\n */\nfunction dirProperty(node) {\n  const value =\n    element(node) && node.properties && typeof node.properties.dir === 'string'\n      ? node.properties.dir.toLowerCase()\n      : undefined\n\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\n    ? value\n    : undefined\n}\n\nfunction noop() {}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').SelectIterator} SelectIterator\n * @typedef {import('./types.js').Handler} Handler\n */\n\nimport {zwitch} from 'zwitch'\nimport {enterState} from './enter-state.js'\nimport {parent, element} from './util.js'\n\nconst own = {}.hasOwnProperty\n\nconst handle = zwitch('nestingOperator', {\n  // @ts-expect-error: hush.\n  unknown: unknownNesting,\n  // @ts-expect-error: hush.\n  invalid: topScan, // `undefined` is the top query selector.\n  handlers: {\n    // @ts-expect-error: hush.\n    null: descendant, // `null` is the descendant combinator.\n    // @ts-expect-error: hush.\n    '>': child,\n    // @ts-expect-error: hush.\n    '+': adjacentSibling,\n    // @ts-expect-error: hush.\n    '~': generalSibling\n  }\n})\n\n/** @type {Handler} */\nexport function nest(query, node, index, parent, state) {\n  handle(query, node, index, parent, state)\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 6 */\n/**\n * @param {{[x: string]: unknown, type: string}} query\n */\nfunction unknownNesting(query) {\n  throw new Error('Unexpected nesting `' + query.nestingOperator + '`')\n}\n\n/** @type {Handler} */\nfunction topScan(query, node, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (parent || index === null) {\n    throw new Error('topScan is supposed to be called from the root node')\n  }\n\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (!state.iterator) {\n    throw new Error('Expected `iterator`')\n  }\n\n  state.iterator(query, node, index, parent, state)\n  if (!state.shallow) descendant(query, node, index, parent, state)\n}\n\n/** @type {Handler} */\nfunction descendant(query, node, index, parent, state) {\n  const previous = state.iterator\n\n  state.iterator = iterator\n  child(query, node, index, parent, state)\n\n  /** @type {SelectIterator} */\n  function iterator(query, node, index, parent, state) {\n    // Shouldn’t happen.\n    /* c8 ignore next 3 */\n    if (!previous) {\n      throw new Error('Expected `iterator`')\n    }\n\n    state.iterator = previous\n    previous(query, node, index, parent, state)\n    state.iterator = iterator\n\n    if (state.one && state.found) return\n\n    child(query, node, index, parent, state)\n  }\n}\n\n/** @type {Handler} */\nfunction child(query, node, _1, _2, state) {\n  if (!parent(node)) return\n  if (node.children.length === 0) return\n  indexedSearch(query, node, state)\n}\n\n/** @type {Handler} */\nfunction adjacentSibling(query, _, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next */\n  if (!parent || index === null) return\n  indexedSearch(query, parent, state, index + 1, true)\n}\n\n/** @type {Handler} */\nfunction generalSibling(query, _, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next */\n  if (!parent || index === null) return\n  indexedSearch(query, parent, state, index + 1)\n}\n\n/**\n * Handles `typeIndex` and `typeCount` properties for every walker.\n *\n * @param {Rule} query\n * @param {Parent} parent\n * @param {SelectState} state\n * @param {number} [from=0]\n * @param {boolean} [firstElementOnly=false]\n */\nfunction indexedSearch(query, parent, state, from, firstElementOnly) {\n  const handle = state.index ? delay : add\n  const children = parent.children\n  let elements = 0\n  let index = -1\n  /** @type {Record<string, number>} */\n  const types = {}\n  /** @type {Array<Function>} */\n  const delayed = []\n\n  // Start looking at `from`\n  if (from === undefined || from === null) from = 0\n\n  // Exit if there are no further nodes.\n  if (from >= children.length) return\n\n  // If we need to index for types, do so for all elements before `from`.\n  if (state.index) {\n    while (++index < from) {\n      const child = children[index]\n      if (element(child)) count(child.tagName)\n    }\n  }\n\n  index = from - 1\n\n  while (++index < children.length) {\n    const child = children[index]\n    // Only check elements.\n    // Check either all elements, or only check the first sibling\n    if (element(child)) {\n      handle(child, index)\n\n      // Stop if we’re looking for one node and it’s already found.\n      if (state.one && state.found) return\n      if (firstElementOnly) break\n    }\n  }\n\n  if (state.index) {\n    index = -1\n\n    while (++index < delayed.length) {\n      delayed[index]()\n      if (state.one && state.found) return\n    }\n  }\n\n  /**\n   * @param {Element} node\n   * @param {number} childIndex\n   */\n  function delay(node, childIndex) {\n    const elementsBefore = elements\n    const elementsByTypeBefore = own.call(types, node.tagName)\n      ? types[node.tagName]\n      : 0\n\n    count(node.tagName)\n\n    delayed.push(fn)\n\n    function fn() {\n      // Before counting further elements:\n      state.elementIndex = elementsBefore\n      state.typeIndex = elementsByTypeBefore\n\n      // After counting all elements.\n      state.elementCount = elements\n      state.typeCount = types[node.tagName]\n\n      add(node, childIndex)\n    }\n  }\n\n  /**\n   * @param {Element} node\n   * @param {number} childIndex\n   */\n  function add(node, childIndex) {\n    const exit = enterState(state, node)\n\n    // Shouldn’t happen.\n    /* c8 ignore next 3 */\n    if (!state.iterator) {\n      throw new Error('Expected `iterator`')\n    }\n\n    state.iterator(query, node, childIndex, parent, state)\n    exit()\n  }\n\n  /**\n   * @param {string} name\n   */\n  function count(name) {\n    if (!own.call(types, name)) types[name] = 0\n    elements++\n    types[name]++\n  }\n}\n","/**\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\n * for more info on the algorithms.\n */\n\n/**\n * @typedef {string} Tag\n *   BCP-47 tag.\n * @typedef {Array<Tag>} Tags\n *   List of BCP-47 tags.\n * @typedef {string} Range\n *   RFC 4647 range.\n * @typedef {Array<Range>} Ranges\n *   List of RFC 4647 range.\n *\n * @callback Check\n *   An internal check.\n * @param {Tag} tag\n *   BCP-47 tag.\n * @param {Range} range\n *   RFC 4647 range.\n * @returns {boolean}\n *   Whether the range matches the tag.\n *\n * @typedef {FilterOrLookup<true>} Filter\n *   Filter: yields all tags that match a range.\n * @typedef {FilterOrLookup<false>} Lookup\n *   Lookup: yields the best tag that matches a range.\n */\n\n/**\n * @template {boolean} IsFilter\n *   Whether to filter or perform a lookup.\n * @callback FilterOrLookup\n *   A check.\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\n *   Result.\n */\n\n/**\n * Factory to perform a filter or a lookup.\n *\n * This factory creates a function that accepts a list of tags and a list of\n * ranges, and contains logic to exit early for lookups.\n * `check` just has to deal with one tag and one range.\n * This match function iterates over ranges, and for each range,\n * iterates over tags.\n * That way, earlier ranges matching any tag have precedence over later ranges.\n *\n * @template {boolean} IsFilter\n * @param {Check} check\n *   A check.\n * @param {IsFilter} filter\n *   Whether to filter or perform a lookup.\n * @returns {FilterOrLookup<IsFilter>}\n *   Filter or lookup.\n */\nfunction factory(check, filter) {\n  /**\n   * @param {Tag|Tags} tags\n   *   One or more BCP-47 tags.\n   * @param {Range|Ranges|undefined} [ranges='*']\n   *   One or more RFC 4647 ranges.\n   * @returns {IsFilter extends true ? Tags : Tag|undefined}\n   *   Result.\n   */\n  return function (tags, ranges) {\n    let left = cast(tags, 'tag')\n    const right = cast(\n      ranges === null || ranges === undefined ? '*' : ranges,\n      'range'\n    )\n    /** @type {Tags} */\n    const matches = []\n    let rightIndex = -1\n\n    while (++rightIndex < right.length) {\n      const range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      let leftIndex = -1\n      /** @type {Tags} */\n      const next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) {\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n              left[leftIndex]\n            )\n          }\n\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n      filter ? matches : undefined\n    )\n  }\n}\n\n/**\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\n * of basic language ranges (Section 2.1) to sets of language tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const basicFilter = factory(function (tag, range) {\n  return range === '*' || tag === range || tag.includes(range + '-')\n}, true)\n\n/**\n * Extended Filtering (Section 3.3.2) matches a language priority list\n * consisting of extended language ranges (Section 2.2) to sets of language\n * tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const extendedFilter = factory(function (tag, range) {\n  // 3.3.2.1\n  const left = tag.split('-')\n  const right = range.split('-')\n  let leftIndex = 0\n  let rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}, true)\n\n/**\n * Lookup (Section 3.4) matches a language priority list consisting of basic\n * language ranges to sets of language tags to find the one exact language tag\n * that best matches the range.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tag|undefined}\n *   BCP-47 tag.\n */\nexport const lookup = factory(function (tag, range) {\n  let right = range\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    let index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}, false)\n\n/**\n * Validate tags or ranges, and cast them to arrays.\n *\n * @param {string|Array<string>} values\n * @param {string} name\n * @returns {Array<string>}\n */\nfunction cast(values, name) {\n  const value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n * @typedef {import('./types.js').RulePseudoSelector} RulePseudoSelector\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').ElementChild} ElementChild\n */\n\nimport {extendedFilter} from 'bcp-47-match'\nimport {parse as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {isElement} from 'hast-util-is-element'\nimport {whitespace} from 'hast-util-whitespace'\nimport {zwitch} from 'zwitch'\nimport {any} from './any.js'\n\nconst handle = zwitch('name', {\n  // @ts-expect-error: hush.\n  unknown: unknownPseudo,\n  invalid: invalidPseudo,\n  handlers: {\n    // @ts-expect-error: hush.\n    any: matches,\n    // @ts-expect-error: hush.\n    'any-link': anyLink,\n    // @ts-expect-error: hush.\n    blank,\n    // @ts-expect-error: hush.\n    checked,\n    // @ts-expect-error: hush.\n    dir,\n    // @ts-expect-error: hush.\n    disabled,\n    // @ts-expect-error: hush.\n    empty,\n    // @ts-expect-error: hush.\n    enabled,\n    // @ts-expect-error: hush.\n    'first-child': firstChild,\n    // @ts-expect-error: hush.\n    'first-of-type': firstOfType,\n    // @ts-expect-error: hush.\n    has,\n    // @ts-expect-error: hush.\n    lang,\n    // @ts-expect-error: hush.\n    'last-child': lastChild,\n    // @ts-expect-error: hush.\n    'last-of-type': lastOfType,\n    // @ts-expect-error: hush.\n    matches,\n    // @ts-expect-error: hush.\n    not,\n    // @ts-expect-error: hush.\n    'nth-child': nthChild,\n    // @ts-expect-error: hush.\n    'nth-last-child': nthLastChild,\n    // @ts-expect-error: hush.\n    'nth-of-type': nthOfType,\n    // @ts-expect-error: hush.\n    'nth-last-of-type': nthLastOfType,\n    // @ts-expect-error: hush.\n    'only-child': onlyChild,\n    // @ts-expect-error: hush.\n    'only-of-type': onlyOfType,\n    // @ts-expect-error: hush.\n    optional,\n    // @ts-expect-error: hush.\n    'read-only': readOnly,\n    // @ts-expect-error: hush.\n    'read-write': readWrite,\n    // @ts-expect-error: hush.\n    required,\n    // @ts-expect-error: hush.\n    root,\n    // @ts-expect-error: hush.\n    scope\n  }\n})\n\npseudo.needsIndex = [\n  'first-child',\n  'first-of-type',\n  'last-child',\n  'last-of-type',\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type',\n  'only-child',\n  'only-of-type'\n]\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function pseudo(query, element, index, parent, state) {\n  const pseudos = query.pseudos\n  let offset = -1\n\n  while (++offset < pseudos.length) {\n    if (!handle(pseudos[offset], element, index, parent, state)) return false\n  }\n\n  return true\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction matches(query, element, _1, _2, state) {\n  const shallow = state.shallow\n  const one = state.one\n\n  state.shallow = true\n  state.one = true\n\n  const result = any(query.value, element, state)[0] === element\n\n  state.shallow = shallow\n  state.one = one\n\n  return result\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction not(query, element, index, parent, state) {\n  return !matches(query, element, index, parent, state)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction anyLink(_, element) {\n  return (\n    isElement(element, ['a', 'area', 'link']) && hasProperty(element, 'href')\n  )\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction checked(_, element) {\n  if (isElement(element, ['input', 'menuitem'])) {\n    return Boolean(\n      element.properties &&\n        (element.properties.type === 'checkbox' ||\n          element.properties.type === 'radio') &&\n        hasProperty(element, 'checked')\n    )\n  }\n\n  if (isElement(element, 'option')) {\n    return hasProperty(element, 'selected')\n  }\n\n  return false\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction dir(query, _1, _2, _3, state) {\n  return state.direction === query.value\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction disabled(_, element) {\n  return (\n    isElement(element, [\n      'button',\n      'input',\n      'select',\n      'textarea',\n      'optgroup',\n      'option',\n      'menuitem',\n      'fieldset'\n    ]) && hasProperty(element, 'disabled')\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction enabled(query, element) {\n  return !disabled(query, element)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction required(_, element) {\n  return (\n    isElement(element, ['input', 'textarea', 'select']) &&\n    hasProperty(element, 'required')\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction optional(query, element) {\n  return !required(query, element)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readWrite(_, element, _1, _2, state) {\n  return isElement(element, ['input', 'textarea'])\n    ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled')\n    : Boolean(state.editableOrEditingHost)\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} element\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readOnly(query, element, index, parent, state) {\n  return !readWrite(query, element, index, parent, state)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction root(_, element, _1, parent, state) {\n  return Boolean(\n    (!parent || parent.type === 'root') &&\n      state.schema &&\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\n      isElement(element, ['html', 'svg'])\n  )\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction scope(_, element, _1, _2, state) {\n  return Boolean(\n    isElement(element) &&\n      state.scopeElements &&\n      state.scopeElements.includes(element)\n  )\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction empty(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return child.type === 'element' || child.type === 'text'\n  }\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction blank(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return (\n      child.type === 'element' || (child.type === 'text' && !whitespace(child))\n    )\n  }\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementIndex === 0\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lang(query, _1, _2, _3, state) {\n  return (\n    state.language !== '' &&\n    state.language !== undefined &&\n    state.language !== null &&\n    // @ts-expect-error never `selectors`.\n    extendedFilter(state.language, commas(query.value)).length > 0\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    state.elementCount && state.elementIndex === state.elementCount - 1\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementCount === 1\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.elementIndex === 'number' && query.value(state.elementIndex)\n  )\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    typeof state.elementCount === 'number' &&\n      typeof state.elementIndex === 'number' &&\n      query.value(state.elementCount - state.elementIndex - 1)\n  )\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && query.value(state.typeIndex)\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    typeof state.typeIndex === 'number' &&\n    query.value(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n/**\n * @param {Element} element\n * @param {(child: ElementChild) => boolean} check\n * @returns {boolean}\n */\nfunction someChildren(element, check) {\n  const children = element.children\n  let index = -1\n\n  while (++index < children.length) {\n    if (check(children[index])) return true\n  }\n\n  return false\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  throw new Error('Invalid pseudo-selector')\n}\n\n/**\n * @param {RulePseudo} query\n */\nfunction unknownPseudo(query) {\n  if (query.name) {\n    throw new Error('Unknown pseudo-selector `' + query.name + '`')\n  }\n\n  throw new Error('Unexpected pseudo-element or empty pseudo-class')\n}\n\n/**\n * @param {SelectState} state\n * @param {RulePseudo|RulePseudoNth} query\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction has(query, element, _2, _3, state) {\n  const shallow = state.shallow\n  const one = state.one\n  const scopeElements = state.scopeElements\n  const value = appendScope(query.value)\n\n  state.shallow = false\n  state.one = true\n  state.scopeElements = [element]\n\n  const result = any(value, element, state).length > 0\n\n  state.shallow = shallow\n  state.one = one\n  state.scopeElements = scopeElements\n\n  return result\n}\n\n/**\n * @param {Selector} value\n * @returns {Selectors}\n */\nfunction appendScope(value) {\n  /** @type {Selectors} */\n  const selector =\n    value.type === 'ruleSet' ? {type: 'selectors', selectors: [value]} : value\n  let index = -1\n\n  while (++index < selector.selectors.length) {\n    const rule = selector.selectors[index].rule\n    rule.nestingOperator = null\n\n    if (\n      !rule.pseudos ||\n      rule.pseudos.length !== 1 ||\n      rule.pseudos[0].name !== 'scope'\n    ) {\n      selector.selectors[index] = {\n        type: 'ruleSet',\n        // @ts-expect-error pseudos are fine w/ just a name!\n        rule: {type: 'rule', rule, pseudos: [{name: 'scope'}]}\n      }\n    }\n  }\n\n  return selector\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleAttr} RuleAttr\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Schema} Schema\n * @typedef {import('./types.js').Info} Info\n * @typedef {import('./types.js').PropertyValue} PropertyValue\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {zwitch} from 'zwitch'\n\nconst handle = zwitch('operator', {\n  // @ts-expect-error: hush.\n  unknown: unknownOperator,\n  // @ts-expect-error: hush.\n  invalid: exists,\n  handlers: {\n    // @ts-expect-error: hush.\n    '=': exact,\n    // @ts-expect-error: hush.\n    '~=': spaceSeparatedList,\n    // @ts-expect-error: hush.\n    '|=': exactOrPrefix,\n    // @ts-expect-error: hush.\n    '^=': begins,\n    // @ts-expect-error: hush.\n    '$=': ends,\n    // @ts-expect-error: hush.\n    '*=': contains\n  }\n})\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @param {Schema} schema\n * @returns {boolean}\n */\nexport function attribute(query, element, schema) {\n  const attrs = query.attrs\n  let index = -1\n\n  while (++index < attrs.length) {\n    if (!handle(attrs[index], element, find(schema, attrs[index].name))) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * `[attr]`\n *\n * @param {RuleAttr} _\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exists(_, element, info) {\n  return hasProperty(element, info.property)\n}\n\n/**\n * `[attr=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exact(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      normalizeValue(element.properties[info.property], info) === query.value\n  )\n}\n\n/**\n * `[attr~=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction spaceSeparatedList(query, element, info) {\n  const value = element.properties && element.properties[info.property]\n\n  return (\n    // If this is a comma-separated list, and the query is contained in it, return\n    // true.\n    (!info.commaSeparated &&\n      value &&\n      typeof value === 'object' &&\n      query.value &&\n      value.includes(query.value)) ||\n    // For all other values (including comma-separated lists), return whether this\n    // is an exact match.\n    (hasProperty(element, info.property) &&\n      normalizeValue(value, info) === query.value)\n  )\n}\n\n/**\n * `[attr|=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exactOrPrefix(query, element, info) {\n  const value = normalizeValue(\n    element.properties && element.properties[info.property],\n    info\n  )\n\n  return Boolean(\n    hasProperty(element, info.property) &&\n      query.value &&\n      (value === query.value ||\n        (value.slice(0, query.value.length) === query.value &&\n          value.charAt(query.value.length) === '-'))\n  )\n}\n\n/**\n * `[attr^=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction begins(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        0,\n        query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * `[attr$=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction ends(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        -query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * `[attr*=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction contains(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).includes(\n        query.value\n      )\n  )\n}\n\n// Shouldn’t be called, Parser throws an error instead.\n/**\n * @param {RuleAttr} query\n * @returns {boolean}\n */\n/* c8 ignore next 3 */\nfunction unknownOperator(query) {\n  throw new Error('Unknown operator `' + query.operator + '`')\n}\n\n/**\n * Stringify a hast value back to its HTML form.\n *\n * @param {PropertyValue} value\n * @param {Info} info\n * @returns {string}\n */\nfunction normalizeValue(value, info) {\n  if (typeof value === 'boolean') {\n    return info.attribute\n  }\n\n  if (Array.isArray(value)) {\n    return (info.commaSeparated ? commas : spaces)(value)\n  }\n\n  return String(value)\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\nimport {element} from './util.js'\n\n/**\n * @param {Rule} query\n * @param {HastNode} node\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function test(query, node, index, parent, state) {\n  return Boolean(\n    element(node) &&\n      state.schema &&\n      (!query.tagName || name(query, node)) &&\n      (!query.classNames || className(query, node)) &&\n      (!query.id || id(query, node)) &&\n      (!query.attrs || attribute(query, node, state.schema)) &&\n      (!query.pseudos || pseudo(query, node, index, parent, state))\n  )\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function name(query, element) {\n  return query.tagName === '*' || query.tagName === element.tagName\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function className(query, element) {\n  /** @type {Array<string>} */\n  // @ts-expect-error Assume array.\n  const value = element.properties.className || []\n  let index = -1\n\n  if (query.classNames) {\n    while (++index < query.classNames.length) {\n      if (!value.includes(query.classNames[index])) return false\n    }\n  }\n\n  return true\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function id(query, element) {\n  return Boolean(element.properties && element.properties.id === query.id)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').SelectIterator} SelectIterator\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {html, svg} from 'property-information'\nimport {zwitch} from 'zwitch'\nimport {enterState} from './enter-state.js'\nimport {nest} from './nest.js'\nimport {pseudo} from './pseudo.js'\nimport {test} from './test.js'\n\nconst type = zwitch('type', {\n  // @ts-expect-error: hush.\n  unknown: unknownType,\n  invalid: invalidType,\n  // @ts-expect-error: hush.\n  handlers: {selectors, ruleSet, rule}\n})\n\n/**\n * @param {Selectors|RuleSet|Rule} query\n * @param {HastNode|undefined} node\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nexport function any(query, node, state) {\n  // @ts-expect-error zwitch types are off.\n  return query && node ? type(query, node, state) : []\n}\n\n/**\n * @param {Selectors} query\n * @param {HastNode} node\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nfunction selectors(query, node, state) {\n  const collector = new Collector(state.one)\n  let index = -1\n\n  while (++index < query.selectors.length) {\n    collector.collectAll(ruleSet(query.selectors[index], node, state))\n  }\n\n  return collector.result\n}\n\n/**\n * @param {RuleSet} query\n * @param {HastNode} node\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nfunction ruleSet(query, node, state) {\n  return rule(query.rule, node, state)\n}\n\n/**\n * @param {Rule} query\n * @param {HastNode} tree\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nfunction rule(query, tree, state) {\n  const collector = new Collector(state.one)\n\n  if (state.shallow && query.rule) {\n    throw new Error('Expected selector without nesting')\n  }\n\n  nest(\n    query,\n    tree,\n    0,\n    null,\n    configure(query, {\n      schema: state.space === 'svg' ? svg : html,\n      language: undefined,\n      direction: 'ltr',\n      editableOrEditingHost: false,\n      // @ts-expect-error assume elements.\n      scopeElements: tree.type === 'root' ? tree.children : [tree],\n      iterator,\n      one: state.one,\n      shallow: state.shallow\n    })\n  )\n\n  return collector.result\n\n  /** @type {SelectIterator} */\n  function iterator(query, node, index, parent, state) {\n    const exit = enterState(state, node)\n\n    if (test(query, node, index, parent, state)) {\n      if (query.rule) {\n        nest(query.rule, node, index, parent, configure(query.rule, state))\n      } else {\n        // @ts-expect-error `test` also asserts `node is Element`\n        collector.collect(node)\n        state.found = true\n      }\n    }\n\n    exit()\n  }\n\n  /**\n   * @template {SelectState} S\n   * @param {Rule} query\n   * @param {S} state\n   * @returns {S}\n   */\n  function configure(query, state) {\n    const pseudos = query.pseudos || []\n    let index = -1\n\n    while (++index < pseudos.length) {\n      if (pseudo.needsIndex.includes(pseudos[index].name)) {\n        state.index = true\n        break\n      }\n    }\n\n    return state\n  }\n}\n\n// Shouldn’t be called, all data is handled.\n/* c8 ignore next 6 */\n/**\n * @param {{[x: string]: unknown, type: string}} query\n */\nfunction unknownType(query) {\n  throw new Error('Unknown type `' + query.type + '`')\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidType() {\n  throw new Error('Invalid type')\n}\n\nclass Collector {\n  /**\n   * @param {boolean|undefined} [one]\n   */\n  constructor(one) {\n    /** @type {Array<Element>} */\n    this.result = []\n    /** @type {boolean|undefined} */\n    this.one = one\n    /** @type {boolean} */\n    this.found = false\n  }\n\n  /**\n   * Append nodes to array, filtering out duplicates.\n   *\n   * @param {Array<Element>} elements\n   */\n  collectAll(elements) {\n    let index = -1\n\n    while (++index < elements.length) {\n      this.collect(elements[index])\n    }\n  }\n\n  /**\n   * Append one node.\n   *\n   * @param {Element} element\n   */\n  collect(element) {\n    if (this.one) {\n      // Shouldn’t happen, safeguards performance problems.\n      /* c8 ignore next */\n      if (this.found) return\n      this.found = true\n    }\n\n    if (!this.result.includes(element)) this.result.push(element)\n  }\n}\n",null,null,null,"/**\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n */\n\nimport {CssSelectorParser} from 'css-selector-parser'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\nconst nth = new Set([\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type'\n])\n\nconst parser = new CssSelectorParser()\n\n// @ts-expect-error: hush.\nconst compile = zwitch('type', {handlers: {selectors, ruleSet, rule}})\n\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*')\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has')\nparser.registerNestingOperators('>', '+', '~')\n\n/**\n * @param {string} selector\n * @returns {Selector}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  // @ts-expect-error types are wrong.\n  return compile(parser.parse(selector))\n}\n\n/**\n * @param {Selectors} query\n * @returns {Selectors}\n */\nfunction selectors(query) {\n  let index = -1\n\n  while (++index < query.selectors.length) {\n    compile(query.selectors[index])\n  }\n\n  return query\n}\n\n/**\n * @param {RuleSet} query\n * @returns {Rule}\n */\nfunction ruleSet(query) {\n  return rule(query.rule)\n}\n\n/**\n * @param {Rule} query\n * @returns {Rule}\n */\nfunction rule(query) {\n  const pseudos = query.pseudos || []\n  let index = -1\n\n  while (++index < pseudos.length) {\n    const pseudo = pseudos[index]\n\n    if (nth.has(pseudo.name)) {\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.value = nthCheck(pseudo.value)\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.valueType = 'function'\n    }\n  }\n\n  compile(query.rule)\n\n  return query\n}\n","/**\n * @typedef {import('./lib/types.js').Element} Element\n * @typedef {import('./lib/types.js').HastNode} HastNode\n * @typedef {import('./lib/types.js').Space} Space\n */\n\nimport {any} from './lib/any.js'\nimport {parse} from './lib/parse.js'\n\n/**\n * @param {string} selector\n * @param {HastNode} [node]\n * @param {Space} [space]\n * @returns {boolean}\n */\nexport function matches(selector, node, space) {\n  return Boolean(\n    any(parse(selector), node, {space, one: true, shallow: true})[0]\n  )\n}\n\n/**\n * @param {string} selector\n * @param {HastNode} [node]\n * @param {Space} [space]\n * @returns {Element|null}\n */\nexport function select(selector, node, space) {\n  return any(parse(selector), node, {space, one: true})[0] || null\n}\n\n/**\n * @param {string} selector\n * @param {HastNode} [node]\n * @param {Space} [space]\n * @returns {Array<Element>}\n */\nexport function selectAll(selector, node, space) {\n  return any(parse(selector), node, {space})\n}\n","import { Plugin } from 'unified';\nimport { Root, Element, ElementContent, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { selectAll } from 'hast-util-select';\nimport { Test } from 'unist-util-is';\n\n/** Get the node tree source code string */\nexport const getCodeString = (data: ElementContent[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\n      code += getCodeString(node.children);\n    }\n  });\n  return code;\n};\n\nexport type RehypeRewriteOptions = {\n  /**\n   * Select an element to be wrapped. Expects a string selector that can be passed to hast-util-select ([supported selectors](https://github.com/syntax-tree/hast-util-select/blob/master/readme.md#support)).\n   * If `selector` is not set then wrap will check for a body all elements.\n   */\n  selector?: string;\n  /** Rewrite Element. */\n  rewrite(node: Root | RootContent, index: number | null, parent: Root | Element | null): void;\n}\n\nconst remarkRewrite: Plugin<[RehypeRewriteOptions?], Root> = (options) => {\n  const { selector, rewrite } = options || {};\n  return (tree) => {\n    if (!rewrite || typeof rewrite !== 'function') return;\n    if (selector && typeof selector === 'string') {\n      const selected = selectAll(selector, tree);\n      if (selected && selected.length > 0) {\n        visit(tree, selected as unknown as Test, (node: Element, index, parent) => {\n          rewrite(node, index, parent);\n        });\n      }\n      return;\n    }\n\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      rewrite(node, index, parent);\n    });\n  }\n}\n\nexport default remarkRewrite;\n","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nexport const regex = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","import { regex } from './regex.js'\n\nconst own = Object.hasOwnProperty\n\n/**\n * Slugger.\n */\nexport default class BananaSlug {\n  /**\n   * Create a new slug class.\n   */\n  constructor () {\n    /** @type {Record<string, number>} */\n    // eslint-disable-next-line no-unused-expressions\n    this.occurrences\n\n    this.reset()\n  }\n\n  /**\n   * Generate a unique slug.\n  *\n  * Tracks previously generated slugs: repeated calls with the same value\n  * will result in different slugs.\n  * Use the `slug` function to get same slugs.\n   *\n   * @param  {string} value\n   *   String of text to slugify\n   * @param  {boolean} [maintainCase=false]\n   *   Keep the current case, otherwise make all lowercase\n   * @return {string}\n   *   A unique slug string\n   */\n  slug (value, maintainCase) {\n    const self = this\n    let result = slug(value, maintainCase === true)\n    const originalSlug = result\n\n    while (own.call(self.occurrences, result)) {\n      self.occurrences[originalSlug]++\n      result = originalSlug + '-' + self.occurrences[originalSlug]\n    }\n\n    self.occurrences[result] = 0\n\n    return result\n  }\n\n  /**\n   * Reset - Forget all previous slugs\n   *\n   * @return void\n   */\n  reset () {\n    this.occurrences = Object.create(null)\n  }\n}\n\n/**\n * Generate a slug.\n *\n * Does not track previously generated slugs: repeated calls with the same value\n * will result in the exact same slug.\n * Use the `GithubSlugger` class to get unique slugs.\n *\n * @param  {string} value\n *   String of text to slugify\n * @param  {boolean} [maintainCase=false]\n *   Keep the current case, otherwise make all lowercase\n * @return {string}\n *   A unique slug string\n */\nexport function slug (value, maintainCase) {\n  if (typeof value !== 'string') return ''\n  if (!maintainCase) value = value.toLowerCase()\n  return value.replace(regex, '').replace(/ /g, '-')\n}\n","/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s.\n */\n\nimport Slugger from 'github-slugger'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\nconst slugs = new Slugger()\n\n/**\n * Plugin to add `id`s to headings.\n *\n * @type {import('unified').Plugin<[Options?]|Array<void>, Root>}\n */\nexport default function rehypeSlug(options = {}) {\n  const prefix = options.prefix || ''\n\n  return (tree) => {\n    slugs.reset()\n\n    visit(tree, 'element', (node) => {\n      if (headingRank(node) && node.properties && !hasProperty(node, 'id')) {\n        node.properties.id = prefix + slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethroughs. So they sort of cancel each other out.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/c47743b/lib/unsafe.js#L11>\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n"],"names":["testMatches","importName","test","Array","isArray","some","regex","RegExp","module","exports","trueFunc","falseFunc","parser_context_1","require","render_1","CssSelectorParser","this","pseudos","attrEqualityMods","ruleNestingOperators","substitutesEnabled","prototype","registerSelectorPseudos","_i","arguments","length","_a","pseudos_1","pseudo","unregisterSelectorPseudos","pseudos_2","registerNumericPseudos","pseudos_3","unregisterNumericPseudos","pseudos_4","registerNestingOperators","operators","operators_1","operator","unregisterNestingOperators","operators_2","registerAttrEqualityMods","mods","mods_1","mod","unregisterAttrEqualityMods","mods_2","enableSubstitutes","disableSubstitutes","parse","str","parseCssSelector","render","path","renderEntity","trim","Object","defineProperty","value","utils_1","pos","l","chr","getStr","quote","escapeTable","result","charAt","esc","undefined","isHex","hex","String","fromCharCode","parseInt","getIdent","isIdent","Error","identSpecialChars","skipWhitespace","parseSelector","selector","parseSingleSelector","res","type","selectors","push","rule","parseRule","currentRule","op","nestingOperator","tagName","isIdentStart","classNames","id","attr","name","attrValue","valueType","doubleQuotesEscapeChars","singleQuoteEscapeChars","attrs","pseudoName","entity","currentEntity","parts","join","map","escapeIdentifier","cn","escapeStr","c","s","len","i","charCode","charCodeAt","extraCharCode","toString","replacement","strReplacementsRev","n","r","t","f","hasOwn","hasOwnProperty","toStr","gOPD","getOwnPropertyDescriptor","arr","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","enumerable","configurable","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","end","source","content","errorsList","error","msg","err","reason","filename","silent","re","m","exec","slice","comments","rules","comment","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","getURLParameters","url","reduce","a","v","indexOf","getMetaId","meta","isMeta","includes","parsePart","string","split","lhs","sep","rhs","incr","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","symbol","any","arrayOf","element","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","ExpandIcon","_jsx","viewBox","fill","children","d","CopyIcon","_jsxs","CopySuccessIcon","Copied","useState","copied","setCopied","onClick","copyTextToClipboard","text","timer","setTimeout","clearTimeout","forwardRef","ref","showCode","setShowCode","toolbar","bordered","disableCheckered","disablePreview","disableCode","disableToolbar","background","toolbarExtra","code","prefixCls","className","other","cls","filter","Boolean","backgroundColor","backgroundImage","u","b","Symbol","for","e","g","h","k","p","q","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","self","Compiler","tree","toMarkdown","assign","data","extensions","character","expected","index","count","maximum","configure","base","extension","concat","_","context","exit","enter","indentLines","flow","blank","safe","unsafe","patternInScope","stack","before","sequence","subexit","marker","checkFence","raw","suffix","formatCodeAsIndented","repeat","Math","max","streak","lang","after","encode","checkQuote","association","title","emphasis","peek","checkEmphasis","phrasing","rank","min","depth","formatHeadingAsSetext","closeAtx","html","imageReference","reference","referenceType","alt","image","blockquote","definition","hardBreak","heading","inlineCode","link","linkReference","list","listItem","paragraph","root","strong","thematicBreak","patternCompile","parent","pattern","expression","atBreak","formatLinkAsAutolink","size","bullet","checkBullet","listItemIndent","checkListItemIndent","ordered","incrementListMarker","spread","ceil","checkStrong","safeOptions","checkRule","ruleSpaces","checkRepeat","settings","pop","handlers","defaultUnsafe","defaultJoin","defaultHandlers","tightDefinitions","joinDefinition","handle","zwitch","invalid","unknown","left","right","inConstruct","label","identifier","characterEscape","characterReference","decodeIfPossible","decode","$0","$1","fence","repetition","ruleRepetition","child","results","between","Number","fences","setext","resourceLink","eol","one","_compiled","listInScope","none","notInConstruct","input","config","positions","infos","sort","numerical","escapeBackslashes","toUpperCase","whole","all","values","el","characters","char","document","createElement","innerHTML","textContent","fn","own","noop","apply","Function","unified","stringify","use","freeze","getPrototypeOf","encoding","transforms","canContainEols","autolink","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","blockQuote","codeFenced","codeFlow","codeFencedFenceInfo","buffer","codeFencedFenceMeta","codeIndented","codeText","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","hardBreakEscape","hardBreakTrailing","htmlFlow","htmlFlowData","htmlText","htmlTextData","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","lineEnding","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","compile","events","handler","tokenStack","listStack","resume","setData","getData","prepareList","sliceSerialize","stringifyPosition","point","offset","tailIndex","lineIndex","tailEvent","event","firstBlankLineIndex","atMarker","containerBalance","listSpread","_spread","splice","create","and","open","token","close","normalizeIdentifier","toLowerCase","siblings","tail","fragment","safeFromInt","checked","compiler","postprocess","parser","write","preprocessor","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiDigit","asciiHexDigit","asciiPunctuation","unicodePunctuationRegex","unicodePunctuation","unicodeWhitespace","text$1","attention","headingAtx","labelEnd","labelStartImage","labelStartLink","setextUnderline","contentInitial","flowInitial","insideSpan","null","resolver","disable","markdownLineEnding","factorySpace","tokenize","effects","previous","contentStart","attempt","constructs","consume","lineStart","contentType","next","partialBlankLine","inspectResult","childFlow","childToken","continued","inspectConstruct","ok","subcontinued","inspectStart","containerState","continuation","inspectContinue","inspectLess","currentConstruct","concrete","flowContinue","inspectDone","interrupt","interruptible","containerConstruct","inspectFlowEnd","_closeFlow","lazy","lazyFlowConstruct","check","inspectLazy","flowEnd","partial","documentContinue","documentContinued","flowStart","containerContinue","exitContainers","now","_tokenizer","continueFlow","documentAfterPeek","defineSkip","sliceStream","nok","initial","afterConstruct","shallow","initializeFactory","resolveAll","createResolver","field","notText","resolveAllLineSuffixes","extraResolver","chunks","chunk","bufferIndex","tabs","eventIndex","_index","_bufferIndex","combineExtensions","createTokenizer","miniflat","defined","initializer","from","subtokenize","search","atCarriageReturn","startPosition","endPosition","lastIndex","chunkedPush","chunkedSplice","classifyCharacter","movePoint","_open","_close","group","openingSequence","closingSequence","nextEvents","asciiControl","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","markdownSpace","_container","decodeEntity","_interopDefaultLegacy","default","decodeEntity__default","numeric","markdownLineEndingOrSpace","prefixSize","closingFenceConstruct","closingSequenceStart","sizeOpen","closingSequenceEnd","initialPrefix","sequenceOpen","infoOpen","openAfter","info","infoAfter","contentContinue","indentedContentConstruct","afterPrefix","resolve","gap","tailExitIndex","headEnterIndex","contentEnd","continuationConstruct","prefixed","factoryDestination","factoryLabel","factoryWhitespace","factoryTitle","labelAfter","titleConstruct","literalType","literalMarkerType","rawType","stringType","limit","Infinity","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","markerType","labelEscape","prefix","atFirstTitleBreak","atTitleBreak","titleEscape","seen","fenceOpenInside","headingBreak","htmlBlockNames","htmlRawNames","kind","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","done","continuationRawEndTag","resolveTo","returnState","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","media","_used","destinationAfter","afterLabel","sizeChunks","initialSize","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","items","remove","parameters","chunkStart","unshift","hook","existing","add","serializeChunks","sliceChunks","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","main","state","chunkIndex","go","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","called","atTab","view","startIndex","startBufferIndex","endIndex","endBufferIndex","subcontent","stream","entered","adjust","startPositions","tokenizer","childEvents","jumps","gaps","isInFirstContentOfListItem","_gfmTasklistFirstContentOfListItem","otherIndex","otherEvent","subevents","more","_movePreviousLineEndings","Parser","doc","fromMarkdown","wrap","trough","fns","middleware","params","callback","invoked","then","bail","plain","vfile","frozen","attachers","transformers","namespace","freezeIndex","processor","assertUnfrozen","addPlugin","addList","addPreset","plugins","plugin","entry","find","file","assertParser","newable","assertCompiler","assertNode","run","runSync","complete","assertDone","process","processSync","destination","transformer","cb","Promise","executor","reject","pipeline","ctx","contents","keys","asyncName","VMessagePrototype","VMessage","proto","origin","range","parseOrigin","message","ruleId","fatal","proc","VFile","order","messages","history","cwd","assertPart","part","assertNonEmpty","assertPath","get","set","dirname","basename","extname","stem","fail","normalize","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","ext","firstNonSlashEnd","seenNonSlash","extIndex","unmatchedSlash","startDot","startPart","preDotState","joined","cache","num","substr","iterator","output","hasIterator","arr2","__esModule","ReferenceError","instance","Constructor","toPropertyKey","_defineProperties","descriptor","protoProps","staticProps","unsupportedIterableToArray","o","allowArrayLike","it","F","_e","normalCompletion","didErr","step","_e2","isNativeReflectConstruct","possibleConstructorReturn","Derived","hasNativeReflectConstruct","Super","NewTarget","Reflect","superPropBase","_get","bind","receiver","desc","_getPrototypeOf","setPrototypeOf","__proto__","subClass","superClass","sham","Proxy","valueOf","_s","_x","_r","_arr","_n","_d","_typeof","assertThisInitialized","_setPrototypeOf","arrayWithHoles","iterableToArrayLimit","nonIterableRest","hint","prim","toPrimitive","arg","arrayLikeToArray","minLen","tokens","padRight","padLeft","decodeNamedCharacterReference","hasProperty","properties","headingRank","convertElement","POSITIVE_INFINITY","tagNameFactory","anyFactory","castFactory","tests","checks","thing","subvalue","defaultTagName","buttonTypes","Set","core","schema","caseSensitive","createAdjustMap","isProperties","addProperty","addChild","has","isNaN","spaceSeparated","spaces","commaSeparated","commas","commaOrSpaceSeparated","parsePrimitive","finalResult","nodes","boolean","overloadedBoolean","blankLine","syntaxExtension","decodeNumericCharacterReference","characterEscapeOrReference","decodeString","$2","head","characterEntitiesLegacy","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","parseEntities","indent","additional","queue","following","begin","characterReferenceCharacters","terminated","namedReference","diff","nonTerminated","warning","attribute","referenceCode","prohibited","disallowed","flush","referenceContext","warningContext","textContext","Schema","normal","space","merge","definitions","DefinedInfo","transform","attributes","mustUseProperty","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","align","aLink","archive","axis","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","Type","Info","rest","camelcase","dashes","kebab","hastToReact","types","mark","powers","increment","VFileMessage","place","actual","note","segments","isUrl","fileURLOrPath","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","stored","_toArray","iterableToArray","toStringTag","fnExpectsCallback","exception","middlewareIndex","middelware","attacher","isPlainObj","looksLikeAVFile","includeImageAlt","lineStartOffset","item","checkNewContainers","closeFlow","indexBeforeExits","indexBeforeFlow","_gfmTableDynamicInterruptHack","thereIsANewContainer","thereIsNoNewContainer","writeToChild","eof","_isInFirstContentOfListItem","current","breaks","expandTabs","def","handleMapOfConstructs","afterStartPrefix","indentedContent","htmlLineEnd","nonLazyLine","attentionMarkers","resolveText","defaultOnError","errorHandler","onExitError","ancestor","defaultConstructs","preprocess","combined","clean","augment","passThrough","returnNode","unknownHandler","normalizeUri","skip","encodeURIComponent","loose","footnoteReference","counter","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","revert","subtype","listItemLoose","trimLine","codePointAt","break","delete","footnote","footnoteById","no","dangerous","listLoose","wrapped","table","row","out","cellIndex","cell","pointStart","pointEnd","last","trimLines","toml","ignore","yaml","footnoteDefinition","factory","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","visit","hName","hProperties","hChildren","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","tailTail","dataFootnotes","footer","bridge","mutate","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","tableElements","childrenToReact","childIndex","toReact","skipHtml","parentSchema","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","uri","first","colon","propTypes","prevChild","nextChild","codeBlockParames","nextNode","getCommentObject","param","forEach","keyName","propertiesHandle","defaultAttrs","rehyp","firstChild","contentDefaults","rehypeAutolinkHeadings","behavior","behaviour","around","inject","toChildren","SKIP","grouping","toNode","openDelimiter","closeDelimiter","rehypePrismGenerator","refractor","visitor","refractorRoot","startLineNum","classListItem","rootLang","highlight","ignoreMissing","addNodePosition","ast","numLines","entries","initialLineNum","shouldHighlightLine","RE","parsedMeta","strlineNumbers","lineNumbers","rangeParser","startingLineNumber","groups","codeLineArray","falseShowLineNumbersStr","treeExtract","convert","cascade","preorder","showLineNumbers","substring","rehypePrismAll","refractorCommon","refractorAll","webNamespaces","mathml","nodeName","namespaceURI","childNodes","sourceCodeLocation","endTag","verbose","opening","closing","createLocation","quirksMode","loc","indices","toPoint","toOffset","startLine","startCol","endLine","endCol","endOffset","isFile","ns","toH","react","_isVue","vue","vd","vdom","hyperscript","addAttribute","subprop","p5","patch","parentNode","doctype","publicId","systemId","htmlVoidElements","endTagToken","parseOptions","sourceCodeLocationInfo","scriptingEnabled","stitches","posTracker","locationTracker","resetTokenizer","_processToken","createParse5Location","chars","forceQuirks","lastGapPos","lastCharPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","isEol","lineStartPos","droppedBufferSize","col","currentAttrLocation","ctLoc","_runParsingLoop","_consume","stitch","fromParse5","documentMode","treeAdapter","createDocument","_bootstrap","__mixins","mock","_pushTmplInsertionMode","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","_adoptNodes","currentCharacterToken","tokenQueue","charRefCode","tempBuff","lastStartTagName","consumedAfterSnapshot","active","currentToken","currentAttr","selfClosing","rehypeRaw","rtlRange","ltrRange","rtl","ltr","enterState","dirInferred","found","currentDirection","editableOrEditingHost","dirProperty","dirBidi","EXIT","query","descendant","indexedSearch","nest","_1","_2","firstElementOnly","elementsBefore","elements","elementsByTypeBefore","delayed","elementIndex","typeIndex","elementCount","typeCount","tags","ranges","cast","matches","rightIndex","leftIndex","tag","extendedFilter","someChildren","_3","empty","enabled","assertDeep","scopeElements","appendScope","not","optional","readWrite","needsIndex","normalizeValue","collector","Collector","collectAll","ruleSet","collect","ZERO","NINE","nthCheck","formula","parsed","boolbase","absA","abs","bMod","idx","sign","readSign","readNumber","fauxEsmNthCheck","nth","selectAll","getCodeString","rewrite","BananaSlug","occurrences","reset","maintainCase","slug","originalSlug","slugs","Slugger","rehypeSlug","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","tokenizeStrikethrough","resolveAllStrikethrough","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","gfm","ccount","findAndReplace","ignored","pairs","toExpression","toFunction","toPairs","pairIndex","visitParents","parents","grandparent","change","matchObject","global","escape","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","isCorrectDomain","closingParenIndex","openingParens","closingParens","trail","trailExec","splitUrl","email","track","options_","lineShift","move","shift","containerFlow","indexStack","tracker","bulletLastUsed","gfmFootnoteToMarkdown","containerPhrasing","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","handleDelete","serialize","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","tableRow","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","serializeData","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","bulletCurrent","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","gfmFromMarkdown","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","remarkGfm","typeFactory","propsFactory","reverse","subresult","grandparents","toResult"],"sourceRoot":""}