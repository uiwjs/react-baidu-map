{"version":3,"sources":["../node_modules/@babel/template/lib/index.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js"],"names":["Object","defineProperty","exports","value","default","program","expression","statements","statement","smart","formatters","require","_builder","_default","assign","bind","undefined","ast","beforeExpr","startsExpr","isLoop","isAssign","prefix","TokenType","label","conf","this","keyword","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","name","options","token","set","createBinop","types$1","num","bigint","decimal","regexp","string","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","slashAssign","moduloAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","setTrailingComments","node","comments","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","i","length","CommentsParser","comment","loc","state","push","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","splice","leadingComments","commentStart","input","charCodeAt","type","properties","arguments","params","specifiers","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","has","plugin","hasPlugin","get","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","keepReasonCodeCompat","reasonCode","syntaxPlugin","messages","templates","keys","forEach","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","offset","match","lineStart","lastIndex","exec","index","getLineInfo","raiseWithData","getLocationForPosition","message","replace","_","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","preserveSpace","types","brace","context","pop","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","SCOPE_PROGRAM","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","add","maybeExportDefined","delete","isRedeclaredInScope","values","next","id","topLevelScope","FlowScope","args","declareFunctions","FlowScopeHandler","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","exprAllowed","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","curPosition","skipArrays","key","val","Array","isArray","slice","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","tokens","init","checkKeywordEscapes","pushToken","nextToken","curContext","old","createLookaheadState","curr","nextTokenStartSince","nextTokenStart","cp","trail","clear","skipSpace","finishToken","readTmplToken","getTokenFromCode","codePointAtPos","indexOf","startSkip","ch","spaceStart","loop","skipBlockComment","addComment","attachComment","skipLineComment","CommentWhitespace","prevType","readToken_interpreter","nextPos","expectPlugin","getPluginOption","readWord1","finishOp","readNumber","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_numberSign","readWord","fromCodePoint","str","escaped","inClass","content","mods","char","includes","pattern","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","invalid","total","e","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseInt","parseFloat","throwOnInvalid","codePos","readHexChar","quote","out","chunkStart","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","substr","octal","n","firstCode","escStart","identifierCheck","esc","kw","_this$state$type$upda","_this$state$type","call","ClassScope","privateNames","loneAccessors","ClassScopeHandler","stack","oldClassScope","current","from","elementType","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","UtilParser","extra","op","isRelational","unexpected","nameStart","nameEnd","nextCh","isUnparsedContextual","isContextual","eat","eatContextual","hasPrecedingLineBreak","canInsertSemicolon","allowAsi","isLineTerminator","messageOrType","missingPlugin","names","some","join","fn","oldState","clone","abortSignal","failState","thrown","aborted","refExpressionErrors","andThrow","shorthandAssign","doubleProto","optionalParameters","isPrivateName","property","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","paramFlags","enter","ExpressionErrors","Node","parser","ranges","range","NodePrototype","prototype","cloneIdentifier","cloned","create","expectedNode","cloneStringLiteral","clonePlaceholder","__clone","newNode","NodeUtils","startNodeAt","finishNodeAt","processComment","locationNode","resetStartLocation","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AbstractPropertyHasInitializer","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","PlaceHolderErrors","ClassNameIsRequired","option","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","regex","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","stmt","expressionValue","raw","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","map","d","directiveToStmt","body","concat","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","isBinding","isAssignable","isLHS","toAssignable","optional","callee","_node$arguments$","attributes","exported","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","jsxReadEntity","jsxReadNewLine","normalizeCRLF","entity","count","jsxParseIdentifier","jsxParseNamespacedName","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","jsxParseElement","lookaheadState","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","lookaheadCharCode","setOptionalParametersError","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","result","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","isIteratorStart","readIterator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","tryParse","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","async","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","file","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","hasOwnProperty","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","element","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","tsParseTypeParameterName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","isOptionalCall","missingParenErrorPos","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","interfaceNode","modifiers","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseIdentifierName","identifier","parseV8Intrinsic","placeholders","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","startsWith","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","unwrapParenthesizedExpression","LValParser","_node$extra3","recordParenthesizedIdentifierError","last","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","arg","raiseTrailingCommaAfterRest","toReferencedListDeep","refNeedsArrowPos","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","_startLoc","_startPos","_left","checkClashes","disallowLetBinding","strictModeChanged","isObjectMethod","elem","invalidHackPipeBodies","ExpressionParser","isRecord","protoRef","used","enterInitialScopes","finalizeRemainingComments","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","parsePrivateName","parseMaybeUnaryOrPrivate","getPrivateNameSV","hasIn","usePrivateName","prec","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","_body$extra","topicReferenceWasUsedInCurrentContext","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","update","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","resetPreviousNodeTrailingComments","parseSuper","parseImportMetaProperty","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","pipeProposal","tokenType","finishTopicReference","lookaheadCh","codePointAt","expectOnePlugin","nodeType","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","pluginTopicToken","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","generator","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","inFunction","recordParameterInitializerError","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","parseProgram","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","StatementParser","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withSmartMixTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","block","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","isString","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","Parser","opts","getOptions","pluginMap","pluginsMap","parseTopLevel","getParser","decoratorsBeforeExport","proposal","proposalList","p","tupleSyntaxIsHash","topicToken","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","merge","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","_excluded","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","traverse","placeholderVisitorHandler","_t","isCallExpression","isExpressionStatement","isFunction","isIdentifier","isJSXIdentifier","isNewExpression","isPlaceholder","isStringLiteral","PATTERN","ancestors","_state$placeholderWhi","parent","resolve","resolveAncestors","isDuplicate","metadata","cloneNode","placeholderName","reverse","stringLiteral","blockStatement","expressionStatement","emptyStatement","applyReplacement","_helperPluginUtils","_helperAnnotateAsPure","_helperFunctionName","_helperSplitExportDeclaration","_core","_globals","_transformClass","getBuiltinClasses","category","builtinClasses","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","setClassMethods","assumption","constantSuper","superIsCallableConstructor","noClassCalls","VISITED","Symbol","visitor","ExportDefaultDeclaration","path","isClassDeclaration","ClassDeclaration","ref","generateUidIdentifier","replaceWith","variableDeclaration","variableDeclarator","toExpression","ClassExpression","inferred","isArrowFunctionExpression","arrowFunctionToExpression","assertExpressionStatement","makeStatementFormatter","unwrap","createTemplateBuilder","defaultOpts","templateFnCache","WeakMap","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","text","toLowerCase","colorize","supportsColor","constructor","enabled","level","matchToToken","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements","isLoose","assumptions","classState","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","dynamicKeys","methods","instance","hasComputed","setState","newState","findThisesVisitor","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","unshiftContainer","classMethod","maybeCreateConstructor","classBodyPaths","buildCodeFrameError","methodPath","objectRef","superRef","refToPreserve","ReturnStatement","getFunctionParent","pushConstructor","pushMethod","pushBody","thisRef","generateDeclaredUidIdentifier","thisPath","parentPath","isMemberExpression","callExpression","addHelper","bareSupers","Super","wrapReturn","guaranteedSuperBeforeFinish","bareSuper","wrapSuperCall","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","isReturnStatement","pushContainer","returnStatement","returnPath","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","desc","obj","objectExpression","objectProperty","arrayExpression","nullLiteral","lastNonNullIndex","isNullLiteral","bareSuperNode","thisExpression","isSpreadElement","memberExpression","_helperOptimiseCallExpression","container","assignmentExpression","classProto","protoDeclaration","insertProtoAliasOnce","methodName","isLiteral","func","functionExpression","toComputedKey","inheritsComments","processMethod","descKey","isNumericLiteral","isBigIntLiteral","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","hasBinding","buildConstructor","isPure","generateUidIdentifierBasedOnNode","extractDynamicKeys","closureParams","closureArgs","setupClosureParamsArgs","isStrict","isInStrictMode","constructorOnly","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration"],"mappings":"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","file":"static/js/vendors-runtime-template.ced28af4.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else if (comments !== undefined) {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        commentWS.trailingNode.leadingComments = comments;\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipeBodyIsTighter: \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: 'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: \"Hack-style pipe body cannot be an unparenthesized %0 expression; please wrap it in parentheses.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction keepReasonCodeCompat(reasonCode, syntaxPlugin) {\n  {\n    if (syntaxPlugin === \"flow\" && reasonCode === \"PatternIsOptional\") {\n      return \"OptionalBindingPattern\";\n    }\n  }\n  return reasonCode;\n}\n\nfunction makeErrorTemplates(messages, code, syntaxPlugin) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode: keepReasonCodeCompat(reasonCode, syntaxPlugin),\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const value = stmt.expression.value;\n    const directive = super.stmtToDirective(stmt);\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n\n    return super.isAssignable(node, isBinding);\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true)\n};\n\ntypes$1.braceR.updateContext = context => {\n  context.pop();\n};\n\ntypes$1.braceL.updateContext = types$1.braceHashL.updateContext = types$1.dollarBraceL.updateContext = context => {\n  context.push(types.brace);\n};\n\ntypes$1.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.strictMode === true ? true : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.slashAssign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? types$1.moduloAssign : types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.braceBarR);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  updateContext(prevType) {\n    var _this$state$type$upda, _this$state$type;\n\n    (_this$state$type$upda = (_this$state$type = this.state.type).updateContext) == null ? void 0 : _this$state$type$upda.call(_this$state$type, this.state.context);\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n\n    if (!andThrow) {\n      return shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0;\n    }\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n}\n\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\n\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n\n  const cloned = Object.create(NodePrototype);\n  cloned.type = \"StringLiteral\";\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError, \"flow\");\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n        node = this.parseExport(node);\n\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(pos, FlowErrors.DeclareClassElement);\n      } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.PatternIsOptional);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (firstIdentIsString) {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.length -= 2;\n      } else if (curContext === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow(params) {\n    return this.match(types$1.colon) || super.shouldParseArrow(params);\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError, \"jsx\");\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = context => {\n  context.push(types.j_expr, types.j_oTag);\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === types$1.slash && prevType === types$1.jsxTagStart) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.exprAllowed = false;\n    } else if (type === types$1.jsxTagEnd) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n        context.pop();\n        this.state.exprAllowed = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.exprAllowed = true;\n      }\n    } else if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AbstractPropertyHasInitializer: \"Property '%0' cannot have an initializer because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError, \"typescript\");\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate, stopOnStartOfClassStaticBlock) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(this.state.start, TSErrors.MissingInterfaceName);\n    }\n\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    let isOptionalCall = false;\n\n    if (this.match(types$1.questionDot) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n\n    if (this.isRelational(\"<\")) {\n      let missingParenErrorPos;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (isOptionalCall && !this.match(types$1.parenL)) {\n            missingParenErrorPos = this.state.pos;\n            this.unexpected();\n          }\n\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n\n      if (missingParenErrorPos) {\n        this.unexpected(missingParenErrorPos, types$1.parenL);\n      }\n\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const interfaceNode = this.startNode();\n      this.next();\n      const result = this.tsParseInterfaceDeclaration(interfaceNode);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(\"static\") && this.lookaheadCharCode() === 123;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers(member, modifiers, undefined, undefined, true);\n\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    if (node.abstract && this.match(types$1.eq)) {\n      const {\n        key\n      } = node;\n      this.raise(this.state.start, TSErrors.AbstractPropertyHasInitializer, key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n\n      case \"TSParameterProperty\":\n        return true;\n\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow(params) {\n    if (this.match(types$1.colon)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n\n    return super.shouldParseArrow(params);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") === \"hash\";\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nconst invalidHackPipeBodies = new Map([[\"ArrowFunctionExpression\", \"arrow function\"], [\"AssignmentExpression\", \"assignment\"], [\"ConditionalExpression\", \"conditional\"], [\"YieldExpression\", \"yield\"]]);\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(types$1.privateName) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      const {\n        start\n      } = left;\n\n      if (minPrec >= types$1._in.binop || !this.prodParam.hasIn || !this.match(types$1._in)) {\n        this.raise(start, ErrorMessages.PrivateInExpectedIn, value);\n      }\n\n      this.classScope.usePrivateName(value, start);\n    }\n\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(\"yield\")) {\n                throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, this.state.value);\n              }\n\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseHackPipeBody() {\n    var _body$extra;\n\n    const {\n      start\n    } = this.state;\n    const body = this.parseMaybeAssign();\n\n    if (invalidHackPipeBodies.has(body.type) && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\n      this.raise(start, ErrorMessages.PipeUnparenthesizedBody, invalidHackPipeBodies.get(body.type));\n    }\n\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(start, ErrorMessages.PipeTopicUnused);\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, ErrorMessages.AwaitNotInAsyncContext);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else {\n      const computed = this.eat(types$1.bracketL);\n\n      if (computed || optional || this.eat(types$1.dot)) {\n        return this.parseMember(base, startPos, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    setInnerComments(node, call.innerComments);\n    setInnerComments(node, call.callee.trailingComments);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case types$1.slash:\n      case types$1.slashAssign:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.state.value);\n          return this.parsePrivateName();\n        }\n\n      case types$1.moduloAssign:\n        if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\" && this.getPluginOption(\"pipelineOperator\", \"topicToken\") === \"%\") {\n          this.state.value = \"%\";\n          this.state.type = types$1.modulo;\n          this.state.pos--;\n          this.state.end--;\n          this.state.endLoc.column--;\n        } else {\n          throw this.unexpected();\n        }\n\n      case types$1.modulo:\n      case types$1.hash:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n          if (pipeProposal) {\n            node = this.startNode();\n            const start = this.state.start;\n            const tokenType = this.state.type;\n            this.next();\n            return this.finishTopicReference(node, start, pipeProposal, tokenType);\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n              this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  finishTopicReference(node, start, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n      let nodeType;\n\n      if (pipeProposal === \"smart\") {\n        nodeType = \"PipelinePrimaryTopicReference\";\n      } else {\n        nodeType = \"TopicReference\";\n      }\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        if (pipeProposal === \"smart\") {\n          this.raise(start, ErrorMessages.PrimaryTopicNotAllowed);\n        } else {\n          this.raise(start, ErrorMessages.PipeTopicUnbound);\n        }\n      }\n\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(start, ErrorMessages.PipeTopicUnconfiguredToken, tokenType.label);\n    }\n  }\n\n  testTopicReferenceConfiguration(pipeProposal, start, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          const pluginTopicToken = this.getPluginOption(\"pipelineOperator\", \"topicToken\");\n          return tokenType.label === pluginTopicToken;\n        }\n\n      case \"smart\":\n        return tokenType === types$1.hash;\n\n      default:\n        throw this.raise(start, ErrorMessages.PipeTopicRequiresHackPipes);\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(types$1.star);\n\n      switch (this.state.type) {\n        case types$1.semi:\n        case types$1.eof:\n        case types$1.braceR:\n        case types$1.parenR:\n        case types$1.bracketR:\n        case types$1.braceBarR:\n        case types$1.colon:\n        case types$1.comma:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  checkHackPipeBodyEarlyErrors(startPos) {\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipeTopicUnused);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  checkSmartPipeTopicBodyEarlyErrors(startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n    }\n  }\n\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSmartMixTopicForbiddingContext(callback) {\n    const proposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (proposal === \"smart\") {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = this.match(types$1.name) && !this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(types$1.star) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      const isString = this.match(types$1.string);\n      const local = this.parseModuleExportName();\n      node.local = local;\n\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n      } else if (isString) {\n        node.exported = cloneStringLiteral(local);\n      } else {\n        node.exported = cloneIdentifier(local);\n      }\n\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = cloneIdentifier(imported);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\nconst _excluded = [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar _t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst {\n  isCallExpression,\n  isExpressionStatement,\n  isFunction,\n  isIdentifier,\n  isJSXIdentifier,\n  isNewExpression,\n  isPlaceholder,\n  isStatement,\n  isStringLiteral,\n  removePropertiesDeep,\n  traverse\n} = _t;\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (isIdentifier(node) || isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (isStringLiteral(node) || isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (isNewExpression(parent) && key === \"arguments\" || isCallExpression(parent) && key === \"arguments\" || isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (isExpressionStatement(parent) && !isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (isStatement(node) && isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  blockStatement,\n  cloneNode,\n  emptyStatement,\n  expressionStatement,\n  identifier,\n  isStatement,\n  isStringLiteral,\n  stringLiteral,\n  validate\n} = _t;\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = stringLiteral(replacement);\n    }\n\n    if (!replacement || !isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = expressionStatement(identifier(replacement));\n      } else if (!isStatement(replacement)) {\n        replacement = expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = identifier(replacement);\n        }\n\n        if (!isStatement(replacement)) {\n          replacement = expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n          const callee = path.get(\"callee\");\n\n          if (callee.isArrowFunctionExpression()) {\n            callee.arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  assertExpressionStatement\n} = _t;\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    dynamicKeys: new Map(),\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments, false);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function extractDynamicKeys() {\n    const {\n      dynamicKeys,\n      node,\n      scope\n    } = classState;\n\n    for (const elem of node.body.body) {\n      if (!_core.types.isClassMethod(elem) || !elem.computed) continue;\n      if (scope.isPure(elem.key, true)) continue;\n      const id = scope.generateUidIdentifierBasedOnNode(elem.key);\n      dynamicKeys.set(id.name, elem.key);\n      elem.key = id;\n    }\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName,\n      dynamicKeys\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    for (const [name, value] of dynamicKeys) {\n      closureParams.push(_core.types.identifier(name));\n      closureArgs.push(value);\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    extractDynamicKeys();\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;"],"sourceRoot":""}