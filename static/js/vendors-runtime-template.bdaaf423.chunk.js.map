{"version":3,"sources":["../node_modules/@babel/template/lib/index.js","../node_modules/@babel/parser/lib/index.js","../node_modules/@babel/code-frame/lib/index.js","../node_modules/@babel/template/lib/options.js","../node_modules/@babel/template/lib/parse.js","../node_modules/@babel/template/lib/populate.js","../node_modules/@babel/plugin-transform-classes/lib/index.js","../node_modules/@babel/template/lib/formatters.js","../node_modules/@babel/template/lib/builder.js","../node_modules/@babel/template/lib/string.js","../node_modules/@babel/highlight/lib/index.js","../node_modules/@babel/template/lib/literal.js","../node_modules/@babel/plugin-transform-classes/lib/transformClass.js","../node_modules/@babel/plugin-transform-classes/lib/inline-createSuper-helpers.js"],"names":["Object","defineProperty","exports","value","default","program","expression","statements","statement","smart","formatters","require","_builder","_default","assign","bind","undefined","ast","beforeExpr","startsExpr","isLoop","isAssign","prefix","TokenType","label","conf","this","keyword","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","name","options","token","set","createBinop","types$1","num","bigint","decimal","regexp","string","privateName","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","slashAssign","moduloAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","setTrailingComments","node","comments","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","i","length","CommentsParser","comment","loc","state","push","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","splice","leadingComments","commentStart","input","charCodeAt","type","properties","arguments","params","specifiers","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","has","plugin","hasPlugin","get","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","messages","templates","keys","forEach","reasonCode","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","offset","match","lineStart","lastIndex","exec","index","getLineInfo","raiseWithData","getLocationForPosition","message","replace","_","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","preserveSpace","types","brace","context","pop","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","SCOPE_PROGRAM","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","add","maybeExportDefined","delete","isRedeclaredInScope","values","next","id","topLevelScope","FlowScope","args","declareFunctions","FlowScopeHandler","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","inPropertyName","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","exprAllowed","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","curPosition","skipArrays","key","val","Array","isArray","slice","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","tokens","init","checkKeywordEscapes","pushToken","nextToken","curContext","old","createLookaheadState","curr","nextTokenStartSince","nextTokenStart","cp","trail","clear","skipSpace","finishToken","readTmplToken","getTokenFromCode","codePointAtPos","indexOf","startSkip","ch","spaceStart","loop","skipBlockComment","addComment","attachComment","skipLineComment","CommentWhitespace","prevType","readToken_interpreter","nextPos","expectPlugin","getPluginOption","readWord1","finishOp","readNumber","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_numberSign","readWord","fromCodePoint","str","escaped","inClass","content","mods","char","includes","pattern","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","invalid","total","e","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseInt","parseFloat","throwOnInvalid","codePos","readHexChar","quote","out","chunkStart","readEscapedChar","containsInvalid","inTemplate","readCodePoint","octalStr","substr","octal","n","firstCode","escStart","identifierCheck","esc","kw","_this$state$type$upda","_this$state$type","call","ClassScope","privateNames","loneAccessors","ClassScopeHandler","stack","oldClassScope","current","from","elementType","classScope","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","UtilParser","extra","op","isRelational","unexpected","nameStart","nameEnd","nextCh","isUnparsedContextual","isContextual","eat","eatContextual","hasPrecedingLineBreak","canInsertSemicolon","allowAsi","isLineTerminator","messageOrType","missingPlugin","names","some","join","fn","oldState","clone","abortSignal","failState","thrown","aborted","refExpressionErrors","andThrow","shorthandAssign","doubleProto","optionalParameters","isPrivateName","property","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","paramFlags","enter","ExpressionErrors","Node","parser","ranges","range","NodePrototype","prototype","cloneIdentifier","cloned","create","expectedNode","cloneStringLiteral","clonePlaceholder","__clone","newNode","NodeUtils","startNodeAt","finishNodeAt","processComment","locationNode","resetStartLocation","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","nonNull","x","assert","TSErrors","AbstractMethodHasImplementation","AbstractPropertyHasInitializer","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","placeholder","PlaceHolderErrors","ClassNameIsRequired","option","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","regex","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","stmt","expressionValue","raw","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","addExtra","directiveStatements","directives","map","d","directiveToStmt","body","concat","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","isBinding","isAssignable","isLHS","toAssignable","optional","callee","_node$arguments$","attributes","exported","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","jsxReadEntity","jsxReadNewLine","normalizeCRLF","entity","count","jsxParseIdentifier","jsxParseNamespacedName","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","jsxParseElement","lookaheadState","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","lookaheadCharCode","setOptionalParametersError","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","result","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","isIteratorStart","readIterator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","isPrivateNameAllowed","left","specifier","contextDescription","local","checkLVal","firstIdentIsString","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","tryParse","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","async","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","file","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","hasOwnProperty","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","element","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","tsParseTypeParameterName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","isOptionalCall","missingParenErrorPos","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","interfaceNode","modifiers","invalidModifersForStaticBlocks","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","v8intrinsic","v8IntrinsicStart","parseIdentifierName","identifier","parseV8Intrinsic","placeholders","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","startsWith","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","unwrapParenthesizedExpression","ExpressionParser","isRecord","protoRef","isObjectMethod","used","enterInitialScopes","finalizeRemainingComments","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","withTopicBindingContext","bodyExpr","parseHackPipeBody","checkHackPipeBodyEarlyErrors","childExpr","parseSmartPipelineBodyInStyle","withSoloAwaitPermittingContext","parseFSharpPipelineBody","parseExprOpBaseRightExpr","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","update","isDelete","arg","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parsePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","toReferencedListDeep","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","elts","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","resetPreviousNodeTrailingComments","parseSuper","parseImportMetaProperty","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseObjectLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","pipeProposal","tokenType","finishTopicReference","lookaheadCh","codePointAt","expectOnePlugin","nodeType","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","pluginTopicToken","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","parseRestBinding","checkCommaAfterRest","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","elem","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","parsePropertyDefinition","checkProto","parseDecorator","parseSpread","maybeAsyncOrAccessorProp","keyName","parseObjPropValue","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","oldInPropertyName","parseMaybePrivateName","generator","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","strictModeChanged","checkClashes","allowEmpty","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","inFunction","recordParameterInitializerError","delegating","delegate","topicReferenceWasUsedInCurrentContext","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","parseProgram","_node$extra3","recordParenthesizedIdentifierError","last","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","raiseTrailingCommaAfterRest","refNeedsArrowPos","parseBindingAtom","closeCharCode","parseAssignableListItem","_startLoc","_startPos","_left","disallowLetBinding","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","Parser","opts","getOptions","pluginMap","pluginsMap","parseTopLevel","hashEndPos","hashEndLoc","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withSmartMixTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithUnescapedName","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","block","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","getPrivateNameSV","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","isString","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","importedIsString","getParser","decoratorsBeforeExport","proposal","proposalList","p","tupleSyntaxIsHash","topicToken","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","tokTypes","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","startColumn","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","merge","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","normalizeReplacements","replacements","reduce","acc","replacement","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","traverse","placeholderVisitorHandler","PATTERN","ancestors","_state$placeholderWhi","isPlaceholder","isIdentifier","isJSXIdentifier","isStringLiteral","parent","isNewExpression","isCallExpression","isFunction","isExpressionStatement","resolve","resolveAncestors","isDuplicate","metadata","cloneNode","placeholderName","reverse","stringLiteral","blockStatement","expressionStatement","emptyStatement","applyReplacement","_helperPluginUtils","_helperAnnotateAsPure","_helperFunctionName","_helperSplitExportDeclaration","_core","_globals","_transformClass","getBuiltinClasses","category","builtinClasses","api","_api$assumption","_api$assumption2","_api$assumption3","_api$assumption4","assertVersion","loose","setClassMethods","assumption","constantSuper","superIsCallableConstructor","noClassCalls","VISITED","Symbol","visitor","ExportDefaultDeclaration","path","isClassDeclaration","ClassDeclaration","ref","generateUidIdentifier","replaceWith","variableDeclaration","variableDeclarator","toExpression","ClassExpression","inferred","isArrowFunctionExpression","arrowFunctionToExpression","makeStatementFormatter","unwrap","assertExpressionStatement","createTemplateBuilder","defaultOpts","templateFnCache","WeakMap","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","text","toLowerCase","colorize","supportsColor","constructor","enabled","level","matchToToken","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements","isLoose","assumptions","classState","classId","classRef","superFnId","superName","superReturns","isDerived","extendsNative","construct","constructorBody","userConstructor","userConstructorPath","hasConstructor","staticPropBody","superThises","pushedConstructor","pushedInherits","protoAlias","methods","instance","hasComputed","setState","newState","findThisesVisitor","visitors","_helperReplaceSupers","environmentVisitor","ThisExpression","buildBody","paths","equals","unshiftContainer","classMethod","maybeCreateConstructor","classBodyPaths","buildCodeFrameError","methodPath","objectRef","superRef","refToPreserve","ReturnStatement","getFunctionParent","pushConstructor","pushMethod","pushBody","thisRef","generateDeclaredUidIdentifier","thisPath","parentPath","isMemberExpression","callExpression","addHelper","bareSupers","Super","wrapReturn","guaranteedSuperBeforeFinish","bareSuper","wrapSuperCall","isConditional","returnArg","thisExpr","logicalExpression","bodyPaths","isReturnStatement","pushContainer","returnStatement","returnPath","verifyConstructor","inherits","pushDescriptors","pushInheritsToBody","props","placement","desc","obj","objectExpression","objectProperty","arrayExpression","nullLiteral","lastNonNullIndex","isNullLiteral","bareSuperNode","thisExpression","isSpreadElement","memberExpression","_helperOptimiseCallExpression","container","assignmentExpression","classProto","protoDeclaration","insertProtoAliasOnce","methodName","isLiteral","func","functionExpression","toComputedKey","inheritsComments","processMethod","descKey","isNumericLiteral","isBigIntLiteral","hasInstanceDescriptors","hasStaticDescriptors","pushConstructorToBody","_inlineCreateSuperHelpers","hasBinding","buildConstructor","closureParams","closureArgs","generateUidIdentifierBasedOnNode","setupClosureParamsArgs","isStrict","isInStrictMode","constructorOnly","arrowFunctionExpression","classTransformer","functionDeclaration","helperIDs","helper","CREATE_SUPER","GET_PROTOTYPE_OF","POSSIBLE_CONSTRUCTOR_RETURN","registerDeclaration"],"mappings":"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","file":"static/js/vendors-runtime-template.bdaaf423.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.program = exports.expression = exports.statements = exports.statement = exports.smart = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass TokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.updateContext = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    this.updateContext = null;\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = new TokenType(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nconst types$1 = {\n  num: new TokenType(\"num\", {\n    startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr\n  }),\n  privateName: new TokenType(\"#name\", {\n    startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: new TokenType(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: new TokenType(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  })\n};\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(name) {\n    return this.plugins.has(name);\n  }\n\n  getPluginOption(plugin, name) {\n    if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else if (comments !== undefined) {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        commentWS.trailingNode.leadingComments = comments;\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipeBodyIsTighter: \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: 'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction makeErrorTemplates(messages, code) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode,\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  stmtToDirective(stmt) {\n    const value = stmt.expression.value;\n    const directive = super.stmtToDirective(stmt);\n    this.addExtra(directive.value, \"expressionValue\", value);\n    return directive;\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parseMaybePrivateName(...args) {\n    const node = super.parseMaybePrivateName(...args);\n\n    if (node.type === \"PrivateName\" && this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return this.convertPrivateNameToPrivateIdentifier(node);\n    }\n\n    return node;\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.isPrivateName(node);\n    }\n\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n      return super.getPrivateNameSV(node);\n    }\n\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n    }\n\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n\n    if (this.getPluginOption(\"estree\", \"classFeatures\")) {\n      propertyNode.type = \"PropertyDefinition\";\n      propertyNode.computed = false;\n    }\n\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n\n    return super.isAssignable(node, isBinding);\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  template: new TokContext(\"`\", true)\n};\n\ntypes$1.braceR.updateContext = context => {\n  context.pop();\n};\n\ntypes$1.braceL.updateContext = types$1.braceHashL.updateContext = types$1.dollarBraceL.updateContext = context => {\n  context.push(types.brace);\n};\n\ntypes$1.backQuote.updateContext = context => {\n  if (context[context.length - 1] === types.template) {\n    context.pop();\n  } else {\n    context.push(types.template);\n  }\n};\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types$1.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init(options) {\n    this.strict = options.strictMode === false ? false : options.strictMode === true ? true : options.sourceType === \"module\";\n    this.curLine = options.startLine;\n    this.startLoc = this.endLoc = this.curPosition();\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(types$1.eof);\n      return;\n    }\n\n    if (curContext === types.template) {\n      this.readTmplToken();\n    } else {\n      this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n    }\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(types$1.braceHashL);\n      } else {\n        this.finishToken(types$1.bracketHashL);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(types$1.privateName, this.readWord1());\n    } else {\n      this.finishOp(types$1.hash, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(types$1.ellipsis);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.dot);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.slashAssign, 2);\n    } else {\n      this.finishOp(types$1.slash, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(types$1.interpreterDirective, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? types$1.star : types$1.modulo;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = types$1.exponent;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? types$1.moduloAssign : types$1.assign;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(types$1.pipeline, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.braceBarR);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(types$1.bracketBarR);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.bitwiseXOR, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(types$1.incDec, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(types$1.assign, 2);\n    } else {\n      this.finishOp(types$1.plusMin, 1);\n    }\n  }\n\n  readToken_lt_gt(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    let size = 1;\n\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(this.state.pos + size) === 61) {\n        this.finishOp(types$1.assign, size + 1);\n        return;\n      }\n\n      this.finishOp(types$1.bitShift, size);\n      return;\n    }\n\n    if (next === 61) {\n      size = 2;\n    }\n\n    this.finishOp(types$1.relational, size);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(types$1.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(types$1.arrow);\n      return;\n    }\n\n    this.finishOp(code === 61 ? types$1.eq : types$1.bang, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(types$1.assign, 3);\n      } else {\n        this.finishOp(types$1.nullishCoalescing, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(types$1.questionDot);\n    } else {\n      ++this.state.pos;\n      this.finishToken(types$1.question);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(types$1.parenL);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(types$1.parenR);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(types$1.semi);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(types$1.comma);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.bracketBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.bracketL);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(types$1.bracketR);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(types$1.braceBarL);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.braceL);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(types$1.braceR);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(types$1.doubleColon, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(types$1.colon);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        ++this.state.pos;\n        this.finishToken(types$1.backQuote);\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n      case 62:\n        this.readToken_lt_gt(code);\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(types$1.tilde, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(types$1.at);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(types$1.regexp, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    this.finishToken(types$1.num, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(types$1.bigint, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(types$1.decimal, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(types$1.num, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(types$1.string, out);\n  }\n\n  readTmplToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        if (this.state.pos === this.state.start && this.match(types$1.template)) {\n          if (ch === 36) {\n            this.state.pos += 2;\n            this.finishToken(types$1.dollarBraceL);\n            return;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types$1.backQuote);\n            return;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(types$1.template, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word) || types$1.name;\n    this.finishToken(type, word);\n  }\n\n  checkKeywordEscapes() {\n    const kw = this.state.type.keyword;\n\n    if (kw && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n    }\n  }\n\n  updateContext(prevType) {\n    var _this$state$type$upda, _this$state$type;\n\n    (_this$state$type$upda = (_this$state$type = this.state.type).updateContext) == null ? void 0 : _this$state$type$upda.call(_this$state$type, this.state.context);\n  }\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const classScope = this.current();\n    let redefined = classScope.privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && classScope.loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) classScope.loneAccessors.delete(name);\n      } else if (!redefined) {\n        classScope.loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    classScope.privateNames.add(name);\n    classScope.undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isRelational(op) {\n    return this.match(types$1.relational) && this.state.value === op;\n  }\n\n  expectRelational(op) {\n    if (this.isRelational(op)) {\n      this.next();\n    } else {\n      this.unexpected(null, types$1.relational);\n    }\n  }\n\n  isContextual(name) {\n    return this.match(types$1.name) && this.state.value === name && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(name) {\n    return this.isContextual(name) && this.eat(types$1.name);\n  }\n\n  expectContextual(name, template) {\n    if (!this.eatContextual(name)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(types$1.eof) || this.match(types$1.braceR) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator() {\n    return this.eat(types$1.semi) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(types$1.semi)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (messageOrType instanceof TokenType) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${messageOrType.label}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  expectPlugin(name, pos) {\n    if (!this.hasPlugin(name)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: [name]\n      }, `This experimental syntax requires enabling the parser plugin: '${name}'`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(names, pos) {\n    if (!names.some(n => this.hasPlugin(n))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: names\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): '${names.join(\", \")}'`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n\n    if (!andThrow) {\n      return shorthandAssign >= 0 || doubleProto >= 0 || optionalParameters >= 0;\n    }\n\n    if (shorthandAssign >= 0) {\n      this.unexpected(shorthandAssign);\n    }\n\n    if (doubleProto >= 0) {\n      this.raise(doubleProto, ErrorMessages.DuplicateProto);\n    }\n\n    if (optionalParameters >= 0) {\n      this.unexpected(optionalParameters);\n    }\n  }\n\n  isLiteralPropertyName() {\n    return this.match(types$1.name) || !!this.state.type.keyword || this.match(types$1.string) || this.match(types$1.num) || this.match(types$1.bigint) || this.match(types$1.decimal);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n}\n\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\n\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n\n  const cloned = Object.create(NodePrototype);\n  cloned.type = \"StringLiteral\";\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError);\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types$1.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== types$1.string && type !== types$1.semi && type !== types$1.interpreterDirective) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || types$1.colon);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(\"checks\");\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(types$1.parenL)) {\n      node.value = this.parseExpression();\n      this.expect(types$1.parenR);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(types$1.colon);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(types$1.modulo)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(types$1.modulo)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.isRelational(\"<\")) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(types$1.parenL);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(types$1.parenR);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(types$1._class)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(types$1._function)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(types$1._var)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(\"module\")) {\n      if (this.match(types$1.dot)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(\"type\")) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(\"opaque\")) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(\"interface\")) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(types$1._export)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(types$1.braceL);\n\n    while (!this.match(types$1.braceR)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(types$1._import)) {\n        this.next();\n\n        if (!this.isContextual(\"type\") && !this.match(types$1._typeof)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(types$1.braceR);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(types$1._export);\n\n    if (this.eat(types$1._default)) {\n      if (this.match(types$1._function) || this.match(types$1._class)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(types$1._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(types$1._var) || this.match(types$1._function) || this.match(types$1._class) || this.isContextual(\"opaque\")) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(types$1.star) || this.match(types$1.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n        node = this.parseExport(node);\n\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(\"exports\");\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"mixins\")) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(types$1.eq);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(\"type\");\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(types$1.colon)) {\n      node.supertype = this.flowParseTypeInitialiser(types$1.colon);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(types$1.eq);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(types$1.eq)) {\n      this.eat(types$1.eq);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    } while (!this.isRelational(\">\"));\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseType());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expectRelational(\"<\");\n\n    while (!this.isRelational(\">\")) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.isRelational(\">\")) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    this.expectRelational(\">\");\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(\"interface\");\n    node.extends = [];\n\n    if (this.eat(types$1._extends)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(types$1.comma));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(types$1.num) || this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === types$1.colon) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(types$1.bracketR);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(types$1.bracketR);\n    this.expect(types$1.bracketR);\n\n    if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(types$1.question)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1._this)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(types$1.parenR);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(types$1.braceBarL)) {\n      this.expect(types$1.braceBarL);\n      endDelim = types$1.braceBarR;\n      exact = true;\n    } else {\n      this.expect(types$1.braceL);\n      endDelim = types$1.braceR;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(\"proto\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(\"static\")) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== types$1.colon && lookahead.type !== types$1.question) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(types$1.bracketL)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(types$1.bracketL)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n          const lookahead = this.lookahead();\n\n          if (lookahead.type === types$1.name || lookahead.type === types$1.string || lookahead.type === types$1.num) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(types$1.ellipsis)) {\n      const isInexactToken = this.match(types$1.comma) || this.match(types$1.semi) || this.match(types$1.braceR) || this.match(types$1.braceBarR);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.isRelational(\"<\") || this.match(types$1.parenL)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(types$1.question)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(types$1.semi) && !this.eat(types$1.comma) && !this.match(types$1.braceR) && !this.match(types$1.braceBarR)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(types$1.dot)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(types$1.bracketL);\n\n    while (this.state.pos < this.length && !this.match(types$1.bracketR)) {\n      node.types.push(this.flowParseType());\n      if (this.match(types$1.bracketR)) break;\n      this.expect(types$1.comma);\n    }\n\n    this.expect(types$1.bracketR);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === types$1._this;\n\n    if (lh.type === types$1.colon || lh.type === types$1.question) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(types$1.question)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(types$1._this)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    while (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(types$1.parenR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    if (this.eat(types$1.ellipsis)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case types$1.name:\n        if (this.isContextual(\"interface\")) {\n          return this.flowParseInterfaceType();\n        }\n\n        return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n      case types$1.braceL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case types$1.braceBarL:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case types$1.bracketL:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case types$1.relational:\n        if (this.state.value === \"<\") {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n          this.expect(types$1.parenL);\n          tmp = this.flowParseFunctionTypeParams();\n          node.params = tmp.params;\n          node.rest = tmp.rest;\n          node.this = tmp._this;\n          this.expect(types$1.parenR);\n          this.expect(types$1.arrow);\n          node.returnType = this.flowParseType();\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        break;\n\n      case types$1.parenL:\n        this.next();\n\n        if (!this.match(types$1.parenR) && !this.match(types$1.ellipsis)) {\n          if (this.match(types$1.name) || this.match(types$1._this)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== types$1.question && token !== types$1.colon;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(types$1.comma) || this.match(types$1.parenR) && this.lookahead().type === types$1.arrow)) {\n            this.expect(types$1.parenR);\n            return type;\n          } else {\n            this.eat(types$1.comma);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(types$1.parenR);\n        this.expect(types$1.arrow);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case types$1.string:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case types$1._true:\n      case types$1._false:\n        node.value = this.match(types$1._true);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(types$1.num)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(types$1.bigint)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case types$1.num:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case types$1.bigint:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case types$1._void:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case types$1._null:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case types$1._this:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case types$1.star:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      default:\n        if (this.state.type.keyword === \"typeof\") {\n          return this.flowParseTypeofType();\n        } else if (this.state.type.keyword) {\n          const label = this.state.type.label;\n          this.next();\n          return super.createIdentifier(node, label);\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(types$1.bracketL) || this.match(types$1.questionDot)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(types$1.questionDot);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(types$1.bracketL);\n\n      if (!optional && this.match(types$1.bracketR)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(types$1.bracketR);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.question)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(types$1.arrow)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseAND);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseAND)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(types$1.bitwiseOR);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(types$1.bitwiseOR)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === types$1.name && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(types$1.colon)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(types$1.plusMin)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.match(types$1.name) && this.state.value === \"interface\") {\n      const lookahead = this.lookahead();\n\n      if (lookahead.type === types$1.name || isKeyword(lookahead.value)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(types$1._class) || this.match(types$1.name) || this.match(types$1._function) || this.match(types$1._var) || this.match(types$1._export)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (this.match(types$1.name)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n      return false;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(types$1.question)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n\n    this.expect(types$1.question);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(types$1.colon);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(types$1.colon);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(\"type\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(types$1.braceL)) {\n        node.specifiers = this.parseExportSpecifiers();\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(\"opaque\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(\"interface\")) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(\"type\") && this.lookahead().type === types$1.star) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(\"declare\")) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(pos, FlowErrors.DeclareClassElement);\n      } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(types$1.name, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(types$1.braceBarL, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(types$1.questionDot, 2);\n      }\n\n      return this.finishOp(types$1.question, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(types$1.colon)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(types$1.colon) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.isRelational(\"<\")) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(\"implements\")) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(types$1.comma));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyName(node, isPrivateNameAllowed) {\n    const variance = this.flowParseVariance();\n    const key = super.parsePropertyName(node, isPrivateNameAllowed);\n    node.variance = variance;\n    return key;\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.isRelational(\"<\") && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(types$1.parenL)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.OptionalBindingPattern);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(types$1.colon)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(types$1.eq) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(types$1._typeof)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(\"type\")) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n\n      if (kind === \"type\" && lh.type === types$1.star) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(lh) || lh.type === types$1.braceL || lh.type === types$1.star) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const firstIdentIsString = this.match(types$1.string);\n    const firstIdent = this.parseModuleExportName();\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !this.match(types$1.name) && !this.state.type.keyword) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && (this.match(types$1.name) || this.state.type.keyword)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (firstIdentIsString) {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n\n    const nodeIsTypeImport = hasTypeImportKind(node);\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (nodeIsTypeImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (nodeIsTypeImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(types$1.colon)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const curContext = context[context.length - 1];\n\n      if (curContext === types.j_oTag) {\n        context.length -= 2;\n      } else if (curContext === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.isRelational(\"<\")) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(types$1.arrow)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow(params) {\n    return this.match(types$1.colon) || super.shouldParseArrow(params);\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(types$1.questionDot) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(types$1.parenL);\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(types$1.parenL);\n        node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(types$1.braceBarR, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(types$1.comma) || this.match(types$1.braceR);\n\n    switch (this.state.type) {\n      case types$1.num:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1.string:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case types$1._true:\n      case types$1._false:\n        {\n          const literal = this.parseBooleanLiteral(this.match(types$1._true));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(types$1.eq) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(types$1.braceR)) {\n      if (this.eat(types$1.ellipsis)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(types$1.braceR)) {\n        this.expect(types$1.comma);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(\"of\")) {\n      if (!this.match(types$1.name)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(types$1.braceL);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(types$1.braceR);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(types$1.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError);\ntypes.j_oTag = new TokContext(\"<tag\");\ntypes.j_cTag = new TokContext(\"</tag\");\ntypes.j_expr = new TokContext(\"<tag>...</tag>\", true);\ntypes$1.jsxName = new TokenType(\"jsxName\");\ntypes$1.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes$1.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes$1.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes$1.jsxTagStart.updateContext = context => {\n  context.push(types.j_expr, types.j_oTag);\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.exprAllowed) {\n              ++this.state.pos;\n              return this.finishToken(types$1.jsxTagStart);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(types$1.jsxText, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(types$1.string, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(types$1.jsxName, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(types$1.jsxName)) {\n      node.name = this.state.value;\n    } else if (this.state.type.keyword) {\n      node.name = this.state.type.keyword;\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(types$1.colon)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(types$1.dot)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case types$1.braceL:\n        node = this.startNode();\n        this.next();\n        node = this.jsxParseExpressionContainer(node);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case types$1.jsxTagStart:\n      case types$1.string:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node) {\n    if (this.match(types$1.braceR)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.eat(types$1.braceL)) {\n      this.expect(types$1.ellipsis);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.braceR);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(types$1.eq) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(types$1.slash) && !this.match(types$1.jsxTagEnd)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(types$1.slash);\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(types$1.jsxTagEnd)) {\n      this.expect(types$1.jsxTagEnd);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(types$1.jsxTagEnd);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case types$1.jsxTagStart:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(types$1.slash)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case types$1.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case types$1.braceL:\n            {\n              const node = this.startNode();\n              this.next();\n\n              if (this.match(types$1.ellipsis)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.isRelational(\"<\")) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(types$1.jsxText)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(types$1.jsxTagStart)) {\n      return this.jsxParseElement();\n    } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.finishToken(types$1.jsxTagStart);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  createLookaheadState(state) {\n    const lookaheadState = super.createLookaheadState(state);\n    lookaheadState.inPropertyName = state.inPropertyName;\n    return lookaheadState;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inPropertyName) return super.getTokenFromCode(code);\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(types$1.jsxTagEnd);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(types$1.jsxTagStart);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    super.updateContext(prevType);\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === types$1.slash && prevType === types$1.jsxTagStart) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.exprAllowed = false;\n    } else if (type === types$1.jsxTagEnd) {\n      const out = context.pop();\n\n      if (out === types.j_oTag && prevType === types$1.slash || out === types.j_cTag) {\n        context.pop();\n        this.state.exprAllowed = context[context.length - 1] === types.j_expr;\n      } else {\n        this.state.exprAllowed = true;\n      }\n    } else if (type.keyword && (prevType === types$1.dot || prevType === types$1.questionDot)) {\n      this.state.exprAllowed = false;\n    } else {\n      this.state.exprAllowed = type.beforeExpr;\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AbstractPropertyHasInitializer: \"Property '%0' cannot have an initializer because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError);\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return this.match(types$1.name);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(types$1.bracketL) || this.match(types$1.braceL) || this.match(types$1.star) || this.match(types$1.ellipsis) || this.match(types$1.privateName) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers) {\n    if (!this.match(types$1.name)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n      return modifier;\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []));\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(types$1.braceR);\n\n      case \"HeritageClauseElement\":\n        return this.match(types$1.braceL);\n\n      case \"TupleElementTypes\":\n        return this.match(types$1.bracketR);\n\n      case \"TypeParametersOrArguments\":\n        return this.isRelational(\">\");\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n    const result = [];\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(types$1.comma)) {\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(types$1.comma);\n      }\n\n      return undefined;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(types$1.bracketL);\n      } else {\n        this.expectRelational(\"<\");\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement);\n\n    if (bracket) {\n      this.expect(types$1.bracketR);\n    } else {\n      this.expectRelational(\">\");\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(types$1._import);\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(types$1.parenR);\n\n    if (this.eat(types$1.dot)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(types$1.dot)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(types$1._typeof);\n\n    if (this.match(types$1._import)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(types$1._extends);\n    node.default = this.tsEatThenParseType(types$1.eq);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.isRelational(\"<\")) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.isRelational(\"<\") || this.match(types$1.jsxTagStart)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === types$1._const) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === types$1.arrow;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(types$1.parenL);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(types$1.parenR, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(types$1.comma) && !this.isLineTerminator()) {\n      this.expect(types$1.semi);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(types$1.colon, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n    return this.eat(types$1.name) && this.match(types$1.colon);\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(types$1.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(types$1.bracketL);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(types$1.bracketR);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(types$1.question)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.isRelational(\"<\")) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(types$1.colon, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(types$1._new)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL) || this.isRelational(\"<\")) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node, false);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node, false);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(types$1.braceL);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(types$1.braceR);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(types$1.plusMin)) {\n      return this.isContextual(\"readonly\");\n    }\n\n    if (this.isContextual(\"readonly\")) {\n      this.next();\n    }\n\n    if (!this.match(types$1.bracketL)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(types$1._in);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(types$1._in);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(types$1.braceL);\n\n    if (this.match(types$1.plusMin)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(\"readonly\");\n    } else if (this.eatContextual(\"readonly\")) {\n      node.readonly = true;\n    }\n\n    this.expect(types$1.bracketL);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n    this.expect(types$1.bracketR);\n\n    if (this.match(types$1.plusMin)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(types$1.question);\n    } else if (this.eat(types$1.question)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(types$1.ellipsis);\n    let type = this.tsParseType();\n    const optional = this.eat(types$1.question);\n    const labeled = this.eat(types$1.colon);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(types$1.parenL);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(types$1.arrow, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case types$1.num:\n        case types$1.bigint:\n        case types$1.string:\n        case types$1._true:\n        case types$1._false:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case types$1.name:\n      case types$1._void:\n      case types$1._null:\n        {\n          const type = this.match(types$1._void) ? \"TSVoidKeyword\" : this.match(types$1._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n          if (type !== undefined && this.lookaheadCharCode() !== 46) {\n            const node = this.startNode();\n            this.next();\n            return this.finishNode(node, type);\n          }\n\n          return this.tsParseTypeReference();\n        }\n\n      case types$1.string:\n      case types$1.num:\n      case types$1.bigint:\n      case types$1._true:\n      case types$1._false:\n        return this.tsParseLiteralTypeNode();\n\n      case types$1.plusMin:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== types$1.num && nextToken.type !== types$1.bigint) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case types$1._this:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case types$1._typeof:\n        return this.tsParseTypeQuery();\n\n      case types$1._import:\n        return this.tsParseImportType();\n\n      case types$1.braceL:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case types$1.bracketL:\n        return this.tsParseTupleType();\n\n      case types$1.parenL:\n        return this.tsParseParenthesizedType();\n\n      case types$1.backQuote:\n        return this.tsParseTemplateLiteralType();\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(types$1.bracketL)) {\n      if (this.match(types$1.bracketR)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(types$1.bracketR);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator(operator) {\n    const node = this.startNode();\n    this.expectContextual(operator);\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(\"infer\");\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const operator = [\"keyof\", \"unique\", \"readonly\"].find(kw => this.isContextual(kw));\n    return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types$1.bitwiseAND);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types$1.bitwiseOR);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.isRelational(\"<\")) {\n      return true;\n    }\n\n    return this.match(types$1.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (this.match(types$1.name) || this.match(types$1._this)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(types$1.braceL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.braceL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.braceR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(types$1.bracketL)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(types$1.bracketL)) {\n          ++braceStackCounter;\n        } else if (this.match(types$1.bracketR)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(types$1.parenR) || this.match(types$1.ellipsis)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(types$1.colon) || this.match(types$1.comma) || this.match(types$1.question) || this.match(types$1.eq)) {\n        return true;\n      }\n\n      if (this.match(types$1.parenR)) {\n        this.next();\n\n        if (this.match(types$1.arrow)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(types$1._this)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types$1.colon) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(types$1.colon) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(types$1.colon);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (!this.match(types$1.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!this.match(types$1.name) && !this.match(types$1._this)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(types$1.colon);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(types$1._extends)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(types$1.question);\n    node.trueType = this.tsParseType();\n    this.expect(types$1.colon);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._new;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(types$1._new)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expectRelational(\">\");\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.isRelational(\"<\")) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(this.state.start, TSErrors.MissingInterfaceName);\n    }\n\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(types$1._extends)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(types$1.eq);\n\n      if (this.isContextual(\"intrinsic\") && this.lookahead().type !== types$1.dot) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(types$1.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(types$1.eq)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(types$1.braceL);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(types$1.braceR);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.braceL);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types$1.braceR);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(types$1.dot)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(\"global\")) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(types$1.string)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(types$1.braceL)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(types$1.eq);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(\"require\");\n    this.expect(types$1.parenL);\n\n    if (!this.match(types$1.string)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(types$1.parenR);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(\"let\")) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case types$1._function:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case types$1._class:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case types$1._const:\n          if (this.match(types$1._const) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(types$1._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case types$1._var:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case types$1.name:\n          {\n            const value = this.state.value;\n\n            if (value === \"global\") {\n              return this.tsParseAmbientExternalModuleDeclaration(nany);\n            } else {\n              return this.tsParseDeclaration(nany, value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(types$1.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(types$1._class) || this.match(types$1.name))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || this.match(types$1.name)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(types$1.string)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (this.match(types$1.name)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && this.match(types$1.name)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.isRelational(\"<\")) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(types$1.arrow);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expectRelational(\"<\");\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expectRelational(\">\");\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    if (this.match(types$1.name)) {\n      switch (this.state.value) {\n        case \"abstract\":\n        case \"declare\":\n        case \"enum\":\n        case \"interface\":\n        case \"module\":\n        case \"namespace\":\n        case \"type\":\n          return true;\n      }\n    }\n\n    return false;\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(types$1.braceL) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(types$1.bang)) {\n      this.state.exprAllowed = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    let isOptionalCall = false;\n\n    if (this.match(types$1.questionDot) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n\n    if (this.isRelational(\"<\")) {\n      let missingParenErrorPos;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (isOptionalCall && !this.match(types$1.parenL)) {\n            missingParenErrorPos = this.state.pos;\n            this.unexpected();\n          }\n\n          if (!noCalls && this.eat(types$1.parenL)) {\n            node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (this.match(types$1.backQuote)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n\n      if (missingParenErrorPos) {\n        this.unexpected(missingParenErrorPos, types$1.parenL);\n      }\n\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.isRelational(\"<\")) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(types$1.parenL)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (nonNull(types$1._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (this.match(types$1.name) || this.match(types$1.star) || this.match(types$1.braceL)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(\"type\") && ahead.type !== types$1.comma && !(ahead.type === types$1.name && ahead.value === \"from\") && ahead.type !== types$1.eq) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (this.match(types$1.name) && ahead.type === types$1.eq) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(types$1._import)) {\n      this.next();\n\n      if (this.isContextual(\"type\") && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(types$1.eq)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(\"as\")) {\n      const decl = node;\n      this.expectContextual(\"namespace\");\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(\"type\") && this.lookahead().type === types$1.braceL) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(\"abstract\") && this.lookahead().type === types$1._class;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.state.value === \"interface\") {\n      const interfaceNode = this.startNode();\n      this.next();\n      const result = this.tsParseInterfaceDeclaration(interfaceNode);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === types$1._const) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === types$1.name && ahead.value === \"enum\") {\n        const node = this.startNode();\n        this.expect(types$1._const);\n        this.expectContextual(\"enum\");\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  parseClassMember(classBody, member, state) {\n    const invalidModifersForStaticBlocks = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\"];\n    this.tsParseModifiers(member, invalidModifersForStaticBlocks.concat([\"static\"]));\n\n    const callParseClassMemberWithIsStatic = () => {\n      const isStatic = !!member.static;\n\n      if (isStatic && this.eat(types$1.braceL)) {\n        if (this.tsHasSomeModifiers(member, invalidModifersForStaticBlocks)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(types$1.question);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(types$1.parenL)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(types$1.question)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(types$1.question)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(types$1.colon)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(\"declare\");\n\n    if (isDeclare && (this.isContextual(\"declare\") || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (this.match(types$1.name)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(types$1.bang)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(types$1.eq)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    if (node.abstract && this.match(types$1.eq)) {\n      const {\n        key\n      } = node;\n      this.raise(this.state.start, TSErrors.AbstractPropertyHasInitializer, key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.isRelational(\"<\")) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(\"implements\")) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(types$1.bang)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(types$1.colon)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(types$1.jsxTagStart) || this.isRelational(\"<\"))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n\n      if (context[context.length - 1] === types.j_oTag) {\n        context.length -= 2;\n      } else if (context[context.length - 1] === types.j_expr) {\n        context.length -= 1;\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.isRelational(\"<\")) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n    if (!arrow.error && !arrow.aborted) return arrow.node;\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(types$1.colon)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(types$1.colon);\n        if (this.canInsertSemicolon() || !this.match(types$1.arrow)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(types$1.question)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n\n      case \"TSParameterProperty\":\n        return true;\n\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1._this:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(types$1.parenL)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, types$1.parenL);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(types$1.comma) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.isRelational(\"<\") || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(types$1.bang) || this.match(types$1.colon) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(types$1.relational, 1);\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  reScan_lt_gt() {\n    if (this.match(types$1.relational)) {\n      const code = this.input.charCodeAt(this.state.start);\n\n      if (code === 60 || code === 62) {\n        this.state.pos -= 1;\n        this.readToken_lt_gt(code);\n      }\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow(params) {\n    if (this.match(types$1.colon)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n\n    return super.shouldParseArrow(params);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.colon) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.isRelational(\"<\")) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(types$1._class)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(\"interface\")) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, types$1._class);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n});\n\ntypes$1.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(types$1.placeholder)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(types$1.placeholder);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(types$1.placeholder, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === types$1.placeholder) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(types$1.colon)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(types$1._extends) || this.match(types$1.placeholder) || this.match(types$1.braceL)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1._default)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(types$1.placeholder.label, this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(\"from\") && !this.match(types$1.comma)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(types$1.comma)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(\"from\");\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(types$1.modulo)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.eat(types$1.modulo);\n\n      if (this.match(types$1.name)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(types$1.parenL)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, \"recordAndTuple\") && getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\") === \"hash\";\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case types$1.bracketL:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(types$1.bracketR, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case types$1.braceL:\n        return this.parseObjectLike(types$1.braceR, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n      }\n\n      if (allowEmpty && this.match(types$1.comma)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(types$1.ellipsis)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(types$1.at) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(types$1.eq)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(types$1.comma)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(types$1.eof)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(types$1.comma)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(types$1.comma)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(\"yield\")) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    if (this.match(types$1.parenL) || this.match(types$1.name)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (this.state.type.isAssign) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n      const leftIsHackPipeExpression = left.type === \"BinaryExpression\" && left.operator === \"|>\" && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\";\n\n      if (leftIsHackPipeExpression) {\n        throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, operator);\n      }\n\n      if (this.match(types$1.eq)) {\n        node.left = this.toAssignable(left, true);\n        refExpressionErrors.doubleProto = -1;\n      } else {\n        node.left = left;\n      }\n\n      if (refExpressionErrors.shorthandAssign >= node.left.start) {\n        refExpressionErrors.shorthandAssign = -1;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(types$1.question)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnary(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    let prec = this.state.type.binop;\n\n    if (prec != null && (this.prodParam.hasIn || !this.match(types$1._in))) {\n      if (prec > minPrec) {\n        const op = this.state.type;\n\n        if (op === types$1.pipeline) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === types$1.logicalOR || op === types$1.logicalAND;\n        const coalesce = op === types$1.nullishCoalescing;\n\n        if (coalesce) {\n          prec = types$1.logicalAND.binop;\n        }\n\n        this.next();\n\n        if (op === types$1.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n          if (this.match(types$1.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === types$1.logicalOR || nextOp === types$1.logicalAND) || logical && nextOp === types$1.nullishCoalescing) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case types$1.pipeline:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              const bodyExpr = this.parseHackPipeBody(op, prec);\n              this.checkHackPipeBodyEarlyErrors(startPos);\n              return bodyExpr;\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              const childExpr = this.parseHackPipeBody(op, prec);\n              return this.parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n  }\n\n  parseHackPipeBody(op, prec) {\n    const bodyIsInGeneratorContext = this.prodParam.hasYield;\n    const bodyIsYieldExpression = bodyIsInGeneratorContext && this.isContextual(\"yield\");\n\n    if (bodyIsYieldExpression) {\n      throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, this.state.value);\n    } else {\n      return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(types$1.exponent)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(\"await\");\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(types$1.incDec);\n    const node = this.startNode();\n\n    if (this.state.type.prefix) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(types$1._throw)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(types$1._delete);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? this.state.type.startsExpr : this.state.type.startsExpr && !this.match(types$1.modulo);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, ErrorMessages.AwaitNotInAsyncContext);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (this.state.type.postfix && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!noCalls && this.eat(types$1.doubleColon)) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (this.match(types$1.backQuote)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (this.match(types$1.questionDot)) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(types$1.parenL)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else if (optional || this.match(types$1.bracketL) || this.eat(types$1.dot)) {\n      return this.parseMember(base, startPos, startLoc, state, optional);\n    } else {\n      state.stop = true;\n      return base;\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const computed = this.eat(types$1.bracketL);\n    node.object = base;\n    node.computed = computed;\n    const privateName = !computed && this.match(types$1.privateName) && this.state.value;\n    const property = computed ? this.parseExpression() : privateName ? this.parsePrivateName() : this.parseIdentifier(true);\n\n    if (privateName !== false) {\n      if (node.object.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(privateName, property.start);\n    }\n\n    node.property = property;\n\n    if (computed) {\n      this.expect(types$1.bracketR);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(types$1.arrow) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n    setInnerComments(node, call.innerComments);\n    setInnerComments(node, call.callee.trailingComments);\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n\n    switch (this.state.type) {\n      case types$1._super:\n        return this.parseSuper();\n\n      case types$1._import:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(types$1.dot)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(types$1.parenL)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case types$1._this:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case types$1.name:\n        {\n          if (this.isContextual(\"module\") && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            if (this.match(types$1._function)) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (this.match(types$1.name)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (this.match(types$1._do)) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(types$1.arrow) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        }\n\n      case types$1._do:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case types$1.slash:\n      case types$1.slashAssign:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case types$1.num:\n        return this.parseNumericLiteral(this.state.value);\n\n      case types$1.bigint:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case types$1.decimal:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case types$1.string:\n        return this.parseStringLiteral(this.state.value);\n\n      case types$1._null:\n        return this.parseNullLiteral();\n\n      case types$1._true:\n        return this.parseBooleanLiteral(true);\n\n      case types$1._false:\n        return this.parseBooleanLiteral(false);\n\n      case types$1.parenL:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case types$1.bracketBarL:\n      case types$1.bracketHashL:\n        {\n          return this.parseArrayLike(this.state.type === types$1.bracketBarL ? types$1.bracketBarR : types$1.bracketR, false, true, refExpressionErrors);\n        }\n\n      case types$1.bracketL:\n        {\n          return this.parseArrayLike(types$1.bracketR, true, false, refExpressionErrors);\n        }\n\n      case types$1.braceBarL:\n      case types$1.braceHashL:\n        {\n          return this.parseObjectLike(this.state.type === types$1.braceBarL ? types$1.braceBarR : types$1.braceR, false, true, refExpressionErrors);\n        }\n\n      case types$1.braceL:\n        {\n          return this.parseObjectLike(types$1.braceR, false, false, refExpressionErrors);\n        }\n\n      case types$1._function:\n        return this.parseFunctionOrFunctionSent();\n\n      case types$1.at:\n        this.parseDecorators();\n\n      case types$1._class:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case types$1._new:\n        return this.parseNewOrNewTarget();\n\n      case types$1.backQuote:\n        return this.parseTemplate(false);\n\n      case types$1.doubleColon:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case types$1.privateName:\n        {\n          const {\n            value,\n            start\n          } = this.state;\n          node = this.parsePrivateName();\n\n          if (this.match(types$1._in)) {\n            this.classScope.usePrivateName(value, start);\n          } else {\n            this.raise(start, ErrorMessages.PrivateInExpectedIn, value);\n          }\n\n          return node;\n        }\n\n      case types$1.moduloAssign:\n        if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"hack\" && this.getPluginOption(\"pipelineOperator\", \"topicToken\") === \"%\") {\n          this.state.value = \"%\";\n          this.state.type = types$1.modulo;\n          this.state.pos--;\n          this.state.end--;\n          this.state.endLoc.column--;\n        } else {\n          throw this.unexpected();\n        }\n\n      case types$1.modulo:\n      case types$1.hash:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n          if (pipeProposal) {\n            node = this.startNode();\n            const start = this.state.start;\n            const tokenType = this.state.type;\n            this.next();\n            return this.finishTopicReference(node, start, pipeProposal, tokenType);\n          }\n        }\n\n      case types$1.relational:\n        {\n          if (this.state.value === \"<\") {\n            const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n            if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n              this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            }\n          }\n        }\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  finishTopicReference(node, start, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n      let nodeType;\n\n      if (pipeProposal === \"smart\") {\n        nodeType = \"PipelinePrimaryTopicReference\";\n      } else {\n        nodeType = \"TopicReference\";\n      }\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        if (pipeProposal === \"smart\") {\n          this.raise(start, ErrorMessages.PrimaryTopicNotAllowed);\n        } else {\n          this.raise(start, ErrorMessages.PipeTopicUnbound);\n        }\n      }\n\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(start, ErrorMessages.PipeTopicUnconfiguredToken, tokenType.label);\n    }\n  }\n\n  testTopicReferenceConfiguration(pipeProposal, start, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          const pluginTopicToken = this.getPluginOption(\"pipelineOperator\", \"topicToken\");\n          return tokenType.label === pluginTopicToken;\n        }\n\n      case \"smart\":\n        return tokenType === types$1.hash;\n\n      default:\n        throw this.raise(start, ErrorMessages.PipeTopicRequiresHackPipes);\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(types$1.arrow);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(types$1.parenL) && !this.match(types$1.bracketL) && !this.match(types$1.dot)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parseMaybePrivateName(isPrivateNameAllowed) {\n    const isPrivate = this.match(types$1.privateName);\n\n    if (isPrivate) {\n      if (!isPrivateNameAllowed) {\n        this.raise(this.state.start + 1, ErrorMessages.UnexpectedPrivateField);\n      }\n\n      return this.parsePrivateName();\n    } else {\n      return this.parseIdentifier(true);\n    }\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n\n    if (meta.name === \"function\" && propertyName === \"sent\") {\n      if (this.isContextual(propertyName)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n    }\n\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(\"meta\")) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(types$1.parenR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(types$1.parenR)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(types$1.ellipsis)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(types$1.parenR);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      val.end = innerEndPos;\n      val.loc.end = innerEndLoc;\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(types$1.arrow)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(types$1.dot)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(types$1.questionDot)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(types$1.parenL)) {\n      const args = this.parseExprList(types$1.parenR);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const elem = this.startNode();\n\n    if (this.state.value === null) {\n      if (!isTagged) {\n        this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    elem.value = {\n      raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.state.value\n    };\n    this.next();\n    elem.tail = this.match(types$1.backQuote);\n    return this.finishNode(elem, \"TemplateElement\");\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    this.next();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      const prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n      if (!isPattern) {\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types$1.bracketL) || this.match(types$1.star));\n  }\n\n  parsePropertyDefinition(isPattern, refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(types$1.at)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isGenerator = false;\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(types$1.ellipsis)) {\n      if (decorators.length) this.unexpected();\n\n      if (isPattern) {\n        this.next();\n        prop.argument = this.parseIdentifier();\n        this.checkCommaAfterRest(125);\n        return this.finishNode(prop, \"RestElement\");\n      }\n\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (isPattern || refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    if (!isPattern) {\n      isGenerator = this.eat(types$1.star);\n    }\n\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop, false);\n\n    if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(types$1.star);\n        this.parsePropertyName(prop, false);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(types$1.star)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop, false);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(types$1.parenL)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(types$1.eq) && refExpressionErrors) {\n        if (refExpressionErrors.shorthandAssign === -1) {\n          refExpressionErrors.shorthandAssign = this.state.start;\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop, isPrivateNameAllowed) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(types$1.bracketR);\n    } else {\n      const oldInPropertyName = this.state.inPropertyName;\n      this.state.inPropertyName = true;\n      const type = this.state.type;\n      prop.key = type === types$1.num || type === types$1.string || type === types$1.bigint || type === types$1.decimal ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n      if (type !== types$1.privateName) {\n        prop.computed = false;\n      }\n\n      this.state.inPropertyName = oldInPropertyName;\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(types$1.bracketL) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(types$1.braceL);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.state.labels = oldLabels;\n    }\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(types$1.comma)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(types$1.ellipsis)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(types$1.question)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (type === types$1.name) {\n      name = this.state.value;\n    } else if (type.keyword) {\n      name = type.keyword;\n    } else {\n      throw this.unexpected();\n    }\n\n    if (liberal) {\n      this.state.type = types$1.name;\n    } else {\n      this.checkReservedWord(name, start, !!type.keyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(types$1.star)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    return this.hasPrecedingLineBreak() || this.match(types$1.plusMin) || this.match(types$1.parenL) || this.match(types$1.bracketL) || this.match(types$1.backQuote) || this.match(types$1.regexp) || this.match(types$1.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types$1.modulo);\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(types$1.star);\n\n      switch (this.state.type) {\n        case types$1.semi:\n        case types$1.eof:\n        case types$1.braceR:\n        case types$1.parenR:\n        case types$1.bracketR:\n        case types$1.braceBarR:\n        case types$1.colon:\n        case types$1.comma:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  checkHackPipeBodyEarlyErrors(startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, types$1.arrow.label);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipeTopicUnused);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  checkSmartPipeTopicBodyEarlyErrors(startPos) {\n    if (this.match(types$1.arrow)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n    }\n  }\n\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSmartMixTopicForbiddingContext(callback) {\n    const proposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (proposal === \"smart\") {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(types$1.braceL);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, types$1.braceR, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(types$1.braceR);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  {\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (token.type === types$1.privateName) {\n        const {\n          loc,\n          start,\n          value,\n          end\n        } = token;\n        const hashEndPos = start + 1;\n        const hashEndLoc = new Position(loc.start.line, loc.start.column + 1);\n        tokens.splice(i, 1, new Token({\n          type: types$1.hash,\n          value: \"#\",\n          start: start,\n          end: hashEndPos,\n          startLoc: loc.start,\n          endLoc: hashEndLoc\n        }), new Token({\n          type: types$1.name,\n          value: value,\n          start: hashEndPos,\n          end: end,\n          startLoc: hashEndLoc,\n          endLoc: loc.end\n        }));\n      }\n    }\n  }\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = types$1.eof, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(types$1.interpreterDirective)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(\"let\")) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(types$1.at)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case types$1._break:\n      case types$1._continue:\n        return this.parseBreakContinueStatement(node, starttype.keyword);\n\n      case types$1._debugger:\n        return this.parseDebuggerStatement(node);\n\n      case types$1._do:\n        return this.parseDoStatement(node);\n\n      case types$1._for:\n        return this.parseForStatement(node);\n\n      case types$1._function:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case types$1._class:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case types$1._if:\n        return this.parseIfStatement(node);\n\n      case types$1._return:\n        return this.parseReturnStatement(node);\n\n      case types$1._switch:\n        return this.parseSwitchStatement(node);\n\n      case types$1._throw:\n        return this.parseThrowStatement(node);\n\n      case types$1._try:\n        return this.parseTryStatement(node);\n\n      case types$1._const:\n      case types$1._var:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case types$1._while:\n        return this.parseWhileStatement(node);\n\n      case types$1._with:\n        return this.parseWithStatement(node);\n\n      case types$1.braceL:\n        return this.parseBlock();\n\n      case types$1.semi:\n        return this.parseEmptyStatement(node);\n\n      case types$1._import:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n\n      case types$1._export:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === types$1._import) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(types$1._class);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(types$1.at)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(types$1._export)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(types$1.parenL)) {\n        expr = this.parseExpression();\n        this.expect(types$1.parenR);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(types$1.dot)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(types$1.parenL)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(types$1.parenR, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, keyword) {\n    const isBreak = keyword === \"break\";\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, keyword);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, keyword) {\n    const isBreak = keyword === \"break\";\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(types$1.parenL);\n    const val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseHeaderExpression();\n    this.eat(types$1.semi);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(types$1.parenL);\n\n    if (this.match(types$1.semi)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(\"let\");\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(types$1._var) || this.match(types$1._const) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(types$1._in) || this.isContextual(\"of\")) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithUnescapedName = this.match(types$1.name) && !this.state.containsEsc;\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(\"of\");\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithUnescapedName && init.type === \"Identifier\" && init.name === \"async\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(types$1._in)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(types$1.braceL);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(types$1.braceR);) {\n      if (this.match(types$1._case) || this.match(types$1._default)) {\n        const isCase = this.match(types$1._case);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(types$1.colon);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(types$1._catch)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(types$1.parenL)) {\n        this.expect(types$1.parenL);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(types$1.parenR);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = this.state.type.isLoop ? \"loop\" : this.match(types$1._switch) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(types$1.braceL);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, types$1.braceR, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(types$1.semi) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(types$1.parenR) ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(types$1._in);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(types$1.parenR);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(types$1.eq)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(types$1._in) || this.isContextual(\"of\"))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types$1._in) || this.isContextual(\"of\")))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(types$1.star) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(types$1.star);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || this.match(types$1.name) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(types$1.parenL);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(types$1.parenR, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(types$1.eq) || this.match(types$1.semi) || this.match(types$1.braceR);\n  }\n\n  isClassMethod() {\n    return this.match(types$1.parenL);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(types$1.braceR)) {\n        if (this.eat(types$1.semi)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(types$1.at)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(\"static\");\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n\n    if (this.eat(types$1.star)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = this.match(types$1.name) && !this.state.containsEsc;\n    const isPrivate = this.match(types$1.privateName);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(types$1.star);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(types$1.star) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(types$1.privateName);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === types$1.name || type === types$1.string) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === types$1.privateName && value === \"constructor\") {\n      this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n    }\n\n    return this.parsePropertyName(member, true);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.expectPlugin(\"classStaticBlock\", member.start);\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, types$1.braceR);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(types$1.eq) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (this.match(types$1.name)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(types$1.comma);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types$1.comma));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, types$1.braceL);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(types$1._default)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, types$1.braceL);\n  }\n\n  eatExportStar(node) {\n    return this.eat(types$1.star);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(\"as\")) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(types$1.braceL)) {\n      if (!node.specifiers) node.specifiers = [];\n      node.specifiers.push(...this.parseExportSpecifiers());\n      node.source = null;\n      node.declaration = null;\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(\"async\")) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(types$1._function) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(types$1._class)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1.at)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(types$1._const) || this.match(types$1._var) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(types$1.name)) {\n      const value = this.state.value;\n\n      if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n        return false;\n      }\n\n      if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n        const l = this.lookahead();\n\n        if (l.type === types$1.name && l.value !== \"from\" || l.type === types$1.braceL) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(types$1._default)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || this.match(types$1.name) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(types$1._default) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(\"from\")) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else {\n      if (expect) {\n        this.unexpected();\n      } else {\n        node.source = null;\n      }\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.match(types$1.at)) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers() {\n    const nodes = [];\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      const node = this.startNode();\n      const isString = this.match(types$1.string);\n      const local = this.parseModuleExportName();\n      node.local = local;\n\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n      } else if (isString) {\n        node.exported = cloneStringLiteral(local);\n      } else {\n        node.exported = cloneIdentifier(local);\n      }\n\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n\n    return nodes;\n  }\n\n  parseModuleExportName() {\n    if (this.match(types$1.string)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(types$1.string)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(types$1.comma);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(\"from\");\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(types$1.string)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return this.match(types$1.name);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(types$1.braceR)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(types$1.string)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(types$1._with) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(types$1.colon);\n\n      if (!this.match(types$1.string)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(types$1.comma));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(types$1.braceL);\n    const attrs = this.parseAssertEntries();\n    this.eat(types$1.braceR);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(types$1.star)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(types$1.braceL);\n\n    while (!this.eat(types$1.braceR)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(types$1.colon)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(types$1.comma);\n        if (this.eat(types$1.braceR)) break;\n      }\n\n      this.parseImportSpecifier(node);\n    }\n  }\n\n  parseImportSpecifier(node) {\n    const specifier = this.startNode();\n    const importedIsString = this.match(types$1.string);\n    specifier.imported = this.parseModuleExportName();\n\n    if (this.eatContextual(\"as\")) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n      specifier.local = cloneIdentifier(imported);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types$1;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.validate = validate;\nexports.normalizeReplacements = normalizeReplacements;\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"]);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  t.removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  t.traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (t.isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (t.isIdentifier(node) || t.isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (t.isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (t.isStringLiteral(node) || t.isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (t.isNewExpression(parent) && key === \"arguments\" || t.isCallExpression(parent) && key === \"arguments\" || t.isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (t.isExpressionStatement(parent) && !t.isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (t.isStatement(node) && t.isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar t = require(\"@babel/types\");\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = t.cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => t.cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = t.cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.stringLiteral(replacement);\n    }\n\n    if (!replacement || !t.isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = t.emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = t.blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = t.expressionStatement(t.identifier(replacement));\n      } else if (!t.isStatement(replacement)) {\n        replacement = t.expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = t.identifier(replacement);\n        }\n\n        if (!t.isStatement(replacement)) {\n          replacement = t.expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = t.identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    t.validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    t.validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperSplitExportDeclaration = require(\"@babel/helper-split-export-declaration\");\n\nvar _core = require(\"@babel/core\");\n\nvar _globals = require(\"globals\");\n\nvar _transformClass = require(\"./transformClass\");\n\nconst getBuiltinClasses = category => Object.keys(_globals[category]).filter(name => /^[A-Z]/.test(name));\n\nconst builtinClasses = new Set([...getBuiltinClasses(\"builtin\"), ...getBuiltinClasses(\"browser\")]);\n\nvar _default = (0, _helperPluginUtils.declare)((api, options) => {\n  var _api$assumption, _api$assumption2, _api$assumption3, _api$assumption4;\n\n  api.assertVersion(7);\n  const {\n    loose\n  } = options;\n  const setClassMethods = (_api$assumption = api.assumption(\"setClassMethods\")) != null ? _api$assumption : options.loose;\n  const constantSuper = (_api$assumption2 = api.assumption(\"constantSuper\")) != null ? _api$assumption2 : options.loose;\n  const superIsCallableConstructor = (_api$assumption3 = api.assumption(\"superIsCallableConstructor\")) != null ? _api$assumption3 : options.loose;\n  const noClassCalls = (_api$assumption4 = api.assumption(\"noClassCalls\")) != null ? _api$assumption4 : options.loose;\n  const VISITED = Symbol();\n  return {\n    name: \"transform-classes\",\n    visitor: {\n      ExportDefaultDeclaration(path) {\n        if (!path.get(\"declaration\").isClassDeclaration()) return;\n        (0, _helperSplitExportDeclaration.default)(path);\n      },\n\n      ClassDeclaration(path) {\n        const {\n          node\n        } = path;\n        const ref = node.id || path.scope.generateUidIdentifier(\"class\");\n        path.replaceWith(_core.types.variableDeclaration(\"let\", [_core.types.variableDeclarator(ref, _core.types.toExpression(node))]));\n      },\n\n      ClassExpression(path, state) {\n        const {\n          node\n        } = path;\n        if (node[VISITED]) return;\n        const inferred = (0, _helperFunctionName.default)(path);\n\n        if (inferred && inferred !== node) {\n          path.replaceWith(inferred);\n          return;\n        }\n\n        node[VISITED] = true;\n        path.replaceWith((0, _transformClass.default)(path, state.file, builtinClasses, loose, {\n          setClassMethods,\n          constantSuper,\n          superIsCallableConstructor,\n          noClassCalls\n        }));\n\n        if (path.isCallExpression()) {\n          (0, _helperAnnotateAsPure.default)(path);\n\n          if (path.get(\"callee\").isArrowFunctionExpression()) {\n            path.get(\"callee\").arrowFunctionToExpression();\n          }\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.program = exports.expression = exports.statement = exports.statements = exports.smart = void 0;\n\nvar t = require(\"@babel/types\");\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    t.assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldHighlight = shouldHighlight;\nexports.getChalk = getChalk;\nexports.default = highlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = transformClass;\n\nvar _helperFunctionName = require(\"@babel/helper-function-name\");\n\nvar _helperReplaceSupers = require(\"@babel/helper-replace-supers\");\n\nvar _helperOptimiseCallExpression = require(\"@babel/helper-optimise-call-expression\");\n\nvar _core = require(\"@babel/core\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _inlineCreateSuperHelpers = require(\"./inline-createSuper-helpers\");\n\nfunction buildConstructor(classRef, constructorBody, node) {\n  const func = _core.types.functionDeclaration(_core.types.cloneNode(classRef), [], constructorBody);\n\n  _core.types.inherits(func, node);\n\n  return func;\n}\n\nfunction transformClass(path, file, builtinClasses, isLoose, assumptions) {\n  const classState = {\n    parent: undefined,\n    scope: undefined,\n    node: undefined,\n    path: undefined,\n    file: undefined,\n    classId: undefined,\n    classRef: undefined,\n    superFnId: undefined,\n    superName: undefined,\n    superReturns: [],\n    isDerived: false,\n    extendsNative: false,\n    construct: undefined,\n    constructorBody: undefined,\n    userConstructor: undefined,\n    userConstructorPath: undefined,\n    hasConstructor: false,\n    staticPropBody: [],\n    body: [],\n    superThises: [],\n    pushedConstructor: false,\n    pushedInherits: false,\n    protoAlias: null,\n    isLoose: false,\n    methods: {\n      instance: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      },\n      static: {\n        hasComputed: false,\n        list: [],\n        map: new Map()\n      }\n    }\n  };\n\n  const setState = newState => {\n    Object.assign(classState, newState);\n  };\n\n  const findThisesVisitor = _core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n    ThisExpression(path) {\n      classState.superThises.push(path);\n    }\n\n  }]);\n\n  function maybeCreateConstructor() {\n    let hasConstructor = false;\n    const paths = classState.path.get(\"body.body\");\n\n    for (const path of paths) {\n      hasConstructor = path.equals(\"kind\", \"constructor\");\n      if (hasConstructor) break;\n    }\n\n    if (hasConstructor) return;\n    let params, body;\n\n    if (classState.isDerived) {\n      const constructor = _core.template.expression.ast`\n        (function () {\n          super(...arguments);\n        })\n      `;\n      params = constructor.params;\n      body = constructor.body;\n    } else {\n      params = [];\n      body = _core.types.blockStatement([]);\n    }\n\n    classState.path.get(\"body\").unshiftContainer(\"body\", _core.types.classMethod(\"constructor\", _core.types.identifier(\"constructor\"), params, body));\n  }\n\n  function buildBody() {\n    maybeCreateConstructor();\n    pushBody();\n    verifyConstructor();\n\n    if (classState.userConstructor) {\n      const {\n        constructorBody,\n        userConstructor,\n        construct\n      } = classState;\n      constructorBody.body = constructorBody.body.concat(userConstructor.body.body);\n\n      _core.types.inherits(construct, userConstructor);\n\n      _core.types.inherits(constructorBody, userConstructor.body);\n    }\n\n    pushDescriptors();\n  }\n\n  function pushBody() {\n    const classBodyPaths = classState.path.get(\"body.body\");\n\n    for (const path of classBodyPaths) {\n      const node = path.node;\n\n      if (path.isClassProperty()) {\n        throw path.buildCodeFrameError(\"Missing class properties transform.\");\n      }\n\n      if (node.decorators) {\n        throw path.buildCodeFrameError(\"Method has decorators, put the decorator plugin before the classes one.\");\n      }\n\n      if (_core.types.isClassMethod(node)) {\n        const isConstructor = node.kind === \"constructor\";\n        const replaceSupers = new _helperReplaceSupers.default({\n          methodPath: path,\n          objectRef: classState.classRef,\n          superRef: classState.superName,\n          constantSuper: assumptions.constantSuper,\n          file: classState.file,\n          refToPreserve: classState.classRef\n        });\n        replaceSupers.replace();\n        const superReturns = [];\n        path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n          ReturnStatement(path) {\n            if (!path.getFunctionParent().isArrowFunctionExpression()) {\n              superReturns.push(path);\n            }\n          }\n\n        }]));\n\n        if (isConstructor) {\n          pushConstructor(superReturns, node, path);\n        } else {\n          pushMethod(node, path);\n        }\n      }\n    }\n  }\n\n  function pushDescriptors() {\n    pushInheritsToBody();\n    const {\n      body\n    } = classState;\n    const props = {\n      instance: null,\n      static: null\n    };\n\n    for (const placement of [\"static\", \"instance\"]) {\n      if (classState.methods[placement].list.length) {\n        props[placement] = classState.methods[placement].list.map(desc => {\n          const obj = _core.types.objectExpression([_core.types.objectProperty(_core.types.identifier(\"key\"), desc.key)]);\n\n          for (const kind of [\"get\", \"set\", \"value\"]) {\n            if (desc[kind] != null) {\n              obj.properties.push(_core.types.objectProperty(_core.types.identifier(kind), desc[kind]));\n            }\n          }\n\n          return obj;\n        });\n      }\n    }\n\n    if (props.instance || props.static) {\n      let args = [_core.types.cloneNode(classState.classRef), props.instance ? _core.types.arrayExpression(props.instance) : _core.types.nullLiteral(), props.static ? _core.types.arrayExpression(props.static) : _core.types.nullLiteral()];\n      let lastNonNullIndex = 0;\n\n      for (let i = 0; i < args.length; i++) {\n        if (!_core.types.isNullLiteral(args[i])) lastNonNullIndex = i;\n      }\n\n      args = args.slice(0, lastNonNullIndex + 1);\n      body.push(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"createClass\"), args)));\n    }\n  }\n\n  function wrapSuperCall(bareSuper, superRef, thisRef, body) {\n    const bareSuperNode = bareSuper.node;\n    let call;\n\n    if (assumptions.superIsCallableConstructor) {\n      bareSuperNode.arguments.unshift(_core.types.thisExpression());\n\n      if (bareSuperNode.arguments.length === 2 && _core.types.isSpreadElement(bareSuperNode.arguments[1]) && _core.types.isIdentifier(bareSuperNode.arguments[1].argument, {\n        name: \"arguments\"\n      })) {\n        bareSuperNode.arguments[1] = bareSuperNode.arguments[1].argument;\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"apply\"));\n      } else {\n        bareSuperNode.callee = _core.types.memberExpression(_core.types.cloneNode(superRef), _core.types.identifier(\"call\"));\n      }\n\n      call = _core.types.logicalExpression(\"||\", bareSuperNode, _core.types.thisExpression());\n    } else {\n      call = (0, _helperOptimiseCallExpression.default)(_core.types.cloneNode(classState.superFnId), _core.types.thisExpression(), bareSuperNode.arguments);\n    }\n\n    if (bareSuper.parentPath.isExpressionStatement() && bareSuper.parentPath.container === body.node.body && body.node.body.length - 1 === bareSuper.parentPath.key) {\n      if (classState.superThises.length) {\n        call = _core.types.assignmentExpression(\"=\", thisRef(), call);\n      }\n\n      bareSuper.parentPath.replaceWith(_core.types.returnStatement(call));\n    } else {\n      bareSuper.replaceWith(_core.types.assignmentExpression(\"=\", thisRef(), call));\n    }\n  }\n\n  function verifyConstructor() {\n    if (!classState.isDerived) return;\n    const path = classState.userConstructorPath;\n    const body = path.get(\"body\");\n    path.traverse(findThisesVisitor);\n\n    let thisRef = function () {\n      const ref = path.scope.generateDeclaredUidIdentifier(\"this\");\n\n      thisRef = () => _core.types.cloneNode(ref);\n\n      return ref;\n    };\n\n    for (const thisPath of classState.superThises) {\n      const {\n        node,\n        parentPath\n      } = thisPath;\n\n      if (parentPath.isMemberExpression({\n        object: node\n      })) {\n        thisPath.replaceWith(thisRef());\n        continue;\n      }\n\n      thisPath.replaceWith(_core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]));\n    }\n\n    const bareSupers = new Set();\n    path.traverse(_core.traverse.visitors.merge([_helperReplaceSupers.environmentVisitor, {\n      Super(path) {\n        const {\n          node,\n          parentPath\n        } = path;\n\n        if (parentPath.isCallExpression({\n          callee: node\n        })) {\n          bareSupers.add(parentPath);\n        }\n      }\n\n    }]));\n    let guaranteedSuperBeforeFinish = !!bareSupers.size;\n\n    for (const bareSuper of bareSupers) {\n      wrapSuperCall(bareSuper, classState.superName, thisRef, body);\n\n      if (guaranteedSuperBeforeFinish) {\n        bareSuper.find(function (parentPath) {\n          if (parentPath === path) {\n            return true;\n          }\n\n          if (parentPath.isLoop() || parentPath.isConditional() || parentPath.isArrowFunctionExpression()) {\n            guaranteedSuperBeforeFinish = false;\n            return true;\n          }\n        });\n      }\n    }\n\n    let wrapReturn;\n\n    if (classState.isLoose) {\n      wrapReturn = returnArg => {\n        const thisExpr = _core.types.callExpression(classState.file.addHelper(\"assertThisInitialized\"), [thisRef()]);\n\n        return returnArg ? _core.types.logicalExpression(\"||\", returnArg, thisExpr) : thisExpr;\n      };\n    } else {\n      wrapReturn = returnArg => _core.types.callExpression(classState.file.addHelper(\"possibleConstructorReturn\"), [thisRef()].concat(returnArg || []));\n    }\n\n    const bodyPaths = body.get(\"body\");\n\n    if (!bodyPaths.length || !bodyPaths.pop().isReturnStatement()) {\n      body.pushContainer(\"body\", _core.types.returnStatement(guaranteedSuperBeforeFinish ? thisRef() : wrapReturn()));\n    }\n\n    for (const returnPath of classState.superReturns) {\n      returnPath.get(\"argument\").replaceWith(wrapReturn(returnPath.node.argument));\n    }\n  }\n\n  function pushMethod(node, path) {\n    const scope = path ? path.scope : classState.scope;\n\n    if (node.kind === \"method\") {\n      if (processMethod(node, scope)) return;\n    }\n\n    const placement = node.static ? \"static\" : \"instance\";\n    const methods = classState.methods[placement];\n    const descKey = node.kind === \"method\" ? \"value\" : node.kind;\n    const key = _core.types.isNumericLiteral(node.key) || _core.types.isBigIntLiteral(node.key) ? _core.types.stringLiteral(String(node.key.value)) : _core.types.toComputedKey(node);\n\n    let fn = _core.types.toExpression(node);\n\n    if (_core.types.isStringLiteral(key)) {\n      if (node.kind === \"method\") {\n        fn = (0, _helperFunctionName.default)({\n          id: key,\n          node: node,\n          scope\n        });\n      }\n    } else {\n      methods.hasComputed = true;\n    }\n\n    let descriptor;\n\n    if (!methods.hasComputed && methods.map.has(key.value)) {\n      descriptor = methods.map.get(key.value);\n      descriptor[descKey] = fn;\n\n      if (descKey === \"value\") {\n        descriptor.get = null;\n        descriptor.set = null;\n      } else {\n        descriptor.value = null;\n      }\n    } else {\n      descriptor = {\n        key: key,\n        [descKey]: fn\n      };\n      methods.list.push(descriptor);\n\n      if (!methods.hasComputed) {\n        methods.map.set(key.value, descriptor);\n      }\n    }\n  }\n\n  function processMethod(node, scope) {\n    if (assumptions.setClassMethods && !node.decorators) {\n      let {\n        classRef\n      } = classState;\n\n      if (!node.static) {\n        insertProtoAliasOnce();\n        classRef = classState.protoAlias;\n      }\n\n      const methodName = _core.types.memberExpression(_core.types.cloneNode(classRef), node.key, node.computed || _core.types.isLiteral(node.key));\n\n      let func = _core.types.functionExpression(null, node.params, node.body, node.generator, node.async);\n\n      _core.types.inherits(func, node);\n\n      const key = _core.types.toComputedKey(node, node.key);\n\n      if (_core.types.isStringLiteral(key)) {\n        func = (0, _helperFunctionName.default)({\n          node: func,\n          id: key,\n          scope\n        });\n      }\n\n      const expr = _core.types.expressionStatement(_core.types.assignmentExpression(\"=\", methodName, func));\n\n      _core.types.inheritsComments(expr, node);\n\n      classState.body.push(expr);\n      return true;\n    }\n\n    return false;\n  }\n\n  function insertProtoAliasOnce() {\n    if (classState.protoAlias === null) {\n      setState({\n        protoAlias: classState.scope.generateUidIdentifier(\"proto\")\n      });\n\n      const classProto = _core.types.memberExpression(classState.classRef, _core.types.identifier(\"prototype\"));\n\n      const protoDeclaration = _core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(classState.protoAlias, classProto)]);\n\n      classState.body.push(protoDeclaration);\n    }\n  }\n\n  function pushConstructor(superReturns, method, path) {\n    setState({\n      userConstructorPath: path,\n      userConstructor: method,\n      hasConstructor: true,\n      superReturns\n    });\n    const {\n      construct\n    } = classState;\n\n    _core.types.inheritsComments(construct, method);\n\n    construct.params = method.params;\n\n    _core.types.inherits(construct.body, method.body);\n\n    construct.body.directives = method.body.directives;\n    pushConstructorToBody();\n  }\n\n  function pushConstructorToBody() {\n    if (classState.pushedConstructor) return;\n    classState.pushedConstructor = true;\n\n    if (classState.hasInstanceDescriptors || classState.hasStaticDescriptors) {\n      pushDescriptors();\n    }\n\n    classState.body.push(classState.construct);\n    pushInheritsToBody();\n  }\n\n  function pushInheritsToBody() {\n    if (!classState.isDerived || classState.pushedInherits) return;\n    const superFnId = path.scope.generateUidIdentifier(\"super\");\n    setState({\n      pushedInherits: true,\n      superFnId\n    });\n\n    if (!assumptions.superIsCallableConstructor) {\n      classState.body.unshift(_core.types.variableDeclaration(\"var\", [_core.types.variableDeclarator(superFnId, _core.types.callExpression((0, _inlineCreateSuperHelpers.default)(classState.file), [_core.types.cloneNode(classState.classRef)]))]));\n    }\n\n    classState.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(classState.isLoose ? \"inheritsLoose\" : \"inherits\"), [_core.types.cloneNode(classState.classRef), _core.types.cloneNode(classState.superName)])));\n  }\n\n  function setupClosureParamsArgs() {\n    const {\n      superName\n    } = classState;\n    const closureParams = [];\n    const closureArgs = [];\n\n    if (classState.isDerived) {\n      let arg = _core.types.cloneNode(superName);\n\n      if (classState.extendsNative) {\n        arg = _core.types.callExpression(classState.file.addHelper(\"wrapNativeSuper\"), [arg]);\n        (0, _helperAnnotateAsPure.default)(arg);\n      }\n\n      const param = classState.scope.generateUidIdentifierBasedOnNode(superName);\n      closureParams.push(param);\n      closureArgs.push(arg);\n      setState({\n        superName: _core.types.cloneNode(param)\n      });\n    }\n\n    return {\n      closureParams,\n      closureArgs\n    };\n  }\n\n  function classTransformer(path, file, builtinClasses, isLoose) {\n    setState({\n      parent: path.parent,\n      scope: path.scope,\n      node: path.node,\n      path,\n      file,\n      isLoose\n    });\n    setState({\n      classId: classState.node.id,\n      classRef: classState.node.id ? _core.types.identifier(classState.node.id.name) : classState.scope.generateUidIdentifier(\"class\"),\n      superName: classState.node.superClass,\n      isDerived: !!classState.node.superClass,\n      constructorBody: _core.types.blockStatement([])\n    });\n    setState({\n      extendsNative: classState.isDerived && builtinClasses.has(classState.superName.name) && !classState.scope.hasBinding(classState.superName.name, true)\n    });\n    const {\n      classRef,\n      node,\n      constructorBody\n    } = classState;\n    setState({\n      construct: buildConstructor(classRef, constructorBody, node)\n    });\n    let {\n      body\n    } = classState;\n    const {\n      closureParams,\n      closureArgs\n    } = setupClosureParamsArgs();\n    buildBody();\n\n    if (!assumptions.noClassCalls) {\n      constructorBody.body.unshift(_core.types.expressionStatement(_core.types.callExpression(classState.file.addHelper(\"classCallCheck\"), [_core.types.thisExpression(), _core.types.cloneNode(classState.classRef)])));\n    }\n\n    body = body.concat(classState.staticPropBody.map(fn => fn(_core.types.cloneNode(classState.classRef))));\n    const isStrict = path.isInStrictMode();\n    let constructorOnly = classState.classId && body.length === 1;\n\n    if (constructorOnly && !isStrict) {\n      for (const param of classState.construct.params) {\n        if (!_core.types.isIdentifier(param)) {\n          constructorOnly = false;\n          break;\n        }\n      }\n    }\n\n    const directives = constructorOnly ? body[0].body.directives : [];\n\n    if (!isStrict) {\n      directives.push(_core.types.directive(_core.types.directiveLiteral(\"use strict\")));\n    }\n\n    if (constructorOnly) {\n      return _core.types.toExpression(body[0]);\n    }\n\n    body.push(_core.types.returnStatement(_core.types.cloneNode(classState.classRef)));\n\n    const container = _core.types.arrowFunctionExpression(closureParams, _core.types.blockStatement(body, directives));\n\n    return _core.types.callExpression(container, closureArgs);\n  }\n\n  return classTransformer(path, file, builtinClasses, isLoose);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addCreateSuperHelper;\n\nvar _core = require(\"@babel/core\");\n\nconst helperIDs = new WeakMap();\n\nfunction addCreateSuperHelper(file) {\n  if (helperIDs.has(file)) {\n    return (_core.types.cloneNode || _core.types.clone)(helperIDs.get(file));\n  }\n\n  try {\n    return file.addHelper(\"createSuper\");\n  } catch (_unused) {}\n\n  const id = file.scope.generateUidIdentifier(\"createSuper\");\n  helperIDs.set(file, id);\n  const fn = helper({\n    CREATE_SUPER: id,\n    GET_PROTOTYPE_OF: file.addHelper(\"getPrototypeOf\"),\n    POSSIBLE_CONSTRUCTOR_RETURN: file.addHelper(\"possibleConstructorReturn\")\n  });\n  file.path.unshiftContainer(\"body\", [fn]);\n  file.scope.registerDeclaration(file.path.get(\"body.0\"));\n  return _core.types.cloneNode(id);\n}\n\nconst helper = _core.template.statement`\n  function CREATE_SUPER(Derived) {\n    function isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n\n      // core-js@3\n      if (Reflect.construct.sham) return false;\n\n      // Proxy can't be polyfilled. Every browser implemented\n      // proxies before or at the same time as Reflect.construct,\n      // so if they support Proxy they also support Reflect.construct.\n      if (typeof Proxy === \"function\") return true;\n\n      // Since Reflect.construct can't be properly polyfilled, some\n      // implementations (e.g. core-js@2) don't set the correct internal slots.\n      // Those polyfills don't allow us to subclass built-ins, so we need to\n      // use our fallback implementation.\n      try {\n        // If the internal slots aren't set, this throws an error similar to\n        //   TypeError: this is not a Date object.\n        Date.prototype.toString.call(Reflect.construct(Date, [], function() {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    return function () {\n      var Super = GET_PROTOTYPE_OF(Derived), result;\n      if (isNativeReflectConstruct()) {\n        // NOTE: This doesn't work if this.__proto__.constructor has been modified.\n        var NewTarget = GET_PROTOTYPE_OF(this).constructor;\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return POSSIBLE_CONSTRUCTOR_RETURN(this, result);\n    }\n  }\n`;"],"sourceRoot":""}