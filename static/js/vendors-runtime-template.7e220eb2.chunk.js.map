{"version":3,"sources":["../../node_modules/@babel/template/lib/index.js","../../node_modules/@babel/parser/lib/index.js","../../node_modules/@babel/code-frame/lib/index.js","../../node_modules/@babel/template/lib/options.js","../../node_modules/@babel/template/lib/parse.js","../../node_modules/@babel/highlight/node_modules/color-convert/conversions.js","../../node_modules/@babel/template/lib/populate.js","../../node_modules/@babel/template/lib/formatters.js","../../node_modules/@babel/template/lib/builder.js","../../node_modules/@babel/template/lib/string.js","../../node_modules/@babel/highlight/lib/index.js","../../node_modules/@babel/highlight/node_modules/chalk/index.js","../../node_modules/@babel/highlight/node_modules/ansi-styles/index.js","../../node_modules/@babel/highlight/node_modules/color-convert/index.js","../../node_modules/@babel/highlight/node_modules/color-name/index.js","../../node_modules/@babel/highlight/node_modules/color-convert/route.js","../../node_modules/@babel/highlight/node_modules/supports-color/browser.js","../../node_modules/@babel/highlight/node_modules/chalk/templates.js","../../node_modules/@babel/template/lib/literal.js"],"names":["Object","defineProperty","exports","value","statements","statement","smart","program","expression","default","formatters","require","_builder","_default","assign","bind","undefined","ast","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","skipWhiteSpaceInLine","skipWhiteSpaceToLineBreak","isWhitespace","Position","line","col","this","column","SourceLocation","start","end","filename","identifierName","createPositionWithColumnOffset","position","columnOffset","setTrailingComments","node","comments","trailingComments","unshift","setInnerComments","innerComments","adjustInnerComments","elements","commentWS","lastElement","i","length","CommentsParser","comment","loc","state","push","commentStack","commentStackLength","lastCommentWS","leadingNode","nodeStart","commentEnd","trailingNode","containingNode","finalizeComment","splice","leadingComments","setLeadingComments","commentStart","input","charCodeAt","type","properties","arguments","params","specifiers","sawUnambiguousESM","ambiguousScriptDifferentAst","pluginConfig","plugins","has","pluginName","pluginOptions","hasPlugin","actualOptions","get","keys","key","plugin","name","_this$plugins$get","ErrorCodes","freeze","SyntaxError","SourceTypeModuleError","ErrorMessages","makeErrorTemplates","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitBindingIdentifierInStaticBlock","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","ForOfAsync","ForOfLet","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","InvalidBigIntLiteral","InvalidCodePoint","InvalidCoverInitializedName","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingSemicolon","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","OverrideOnConstructor","ParamDupe","PatternHasAccessor","PatternHasMethod","PipeBodyIsTighter","PipeTopicRequiresHackPipes","PipeTopicUnbound","PipeTopicUnconfiguredToken","PipeTopicUnused","PipeUnparenthesizedBody","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","SourceTypeModuleErrorMessages","ImportMetaOutsideModule","ImportOutsideModule","keepReasonCodeCompat","reasonCode","syntaxPlugin","messages","templates","forEach","template","ParserError","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","offset","match","lineStart","lastIndex","exec","index","getLineInfo","raiseWithData","getLocationForPosition","message","replace","_","options","errorRecovery","errors","error","_raise","data","errorTemplate","errorContext","err","isLookahead","TokContext","token","preserveSpace","types","brace","j_oTag","j_cTag","j_expr","beforeExpr","startsExpr","isLoop","isAssign","prefix","ExportedTokenType","label","conf","keyword","rightAssociative","postfix","binop","updateContext","keywords$1","Map","createKeyword","createToken","set","createBinop","tokenTypeCounter","tokenTypes","tokenLabels","tokenBinops","tokenBeforeExprs","tokenStartsExprs","tokenPrefixes","_options$binop","_options$beforeExpr","_options$startsExpr","_options$prefix","createKeywordLike","_options$binop2","_options$beforeExpr2","_options$startsExpr2","_options$prefix2","tt","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","ellipsis","backQuote","dollarBraceL","templateTail","templateNonTail","at","hash","interpreterDirective","eq","slashAssign","xorAssign","moduloAssign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","lt","gt","relational","bitShift","plusMin","modulo","star","slash","exponent","_in","_instanceof","_break","_case","_catch","_continue","_debugger","_else","_finally","_function","_if","_return","_switch","_throw","_try","_var","_const","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_typeof","_void","_delete","_do","_for","_while","_as","_assert","_async","_await","_from","_get","_let","_meta","_of","_sent","_set","_static","_yield","_asserts","_checks","_exports","_global","_implements","_intrinsic","_infer","_is","_mixins","_proto","_require","_keyof","_readonly","_unique","_abstract","_declare","_enum","_module","_namespace","_interface","_type","_opaque","string","num","bigint","decimal","regexp","privateName","eof","jsxName","jsxText","jsxTagStart","jsxTagEnd","placeholder","tokenIsIdentifier","tokenIsKeywordOrIdentifier","tokenIsLiteralPropertyName","tokenCanStartExpression","tokenIsFlowInterfaceOrTypeOrOpaque","tokenIsKeyword","tokenLabelName","tokenOperatorPrecedence","tokenIsTemplate","getExportedToken","isTokenType","obj","context","pop","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","reservedWordLikeSet","SCOPE_CLASS","SCOPE_TS_MODULE","SCOPE_VAR","SCOPE_PROGRAM","BIND_FLAGS_CLASS","BIND_FLAGS_TS_ENUM","BIND_FLAGS_TS_CONST_ENUM","BIND_FLAGS_TS_EXPORT_ONLY","BIND_FLAGS_FLOW_DECLARE_FN","BIND_TS_AMBIENT","BIND_NONE","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","currentVarScopeFlags","currentThisScopeFlags","treatFunctionsAsVarInScope","currentScope","createScope","scope","bindingType","checkRedeclarationInScope","add","maybeExportDefined","delete","isRedeclaredInScope","values","next","id","topLevelScope","FlowScope","args","declareFunctions","FlowScopeHandler","State","strict","curLine","potentialArrowAt","noArrowAt","noArrowParamsConversionAt","maybeInArrowParameters","inType","noAnonFunctionType","hasFlowComment","isAmbientContext","inAbstractClass","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","canStartJSXElement","containsEsc","strictErrors","tokensLength","strictMode","sourceType","startLine","startColumn","skipArrays","val","Array","isArray","slice","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","Tokenizer","tokens","init","checkKeywordEscapes","pushToken","nextToken","curContext","old","createLookaheadState","curr","nextTokenStartSince","nextTokenStart","cp","trail","clear","skipSpace","curPosition","finishToken","getTokenFromCode","codePointAtPos","indexOf","startSkip","ch","spaceStart","loop","skipBlockComment","addComment","attachComment","skipLineComment","CommentWhitespace","prevType","readToken_interpreter","nextPos","expectPlugin","getPluginOption","readWord1","finishOp","readNumber","width","size","next2","readToken_dot","readToken_question","readTemplateToken","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt","readToken_gt","readToken_eq_excl","readToken_numberSign","readWord","fromCodePoint","str","escaped","inClass","content","mods","char","includes","pattern","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","invalid","total","e","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","recordStrictModeErrors","underscorePos","parseInt","parseFloat","throwOnInvalid","codePos","readHexChar","quote","out","chunkStart","readEscapedChar","unexpected","containsInvalid","inTemplate","readCodePoint","octalStr","substr","octal","n","firstCode","escStart","identifierCheck","esc","ClassScope","privateNames","loneAccessors","ClassScopeHandler","stack","oldClassScope","current","from","elementType","redefined","CLASS_ELEMENT_KIND_GETTER","accessor","classScope","ExpressionScope","ArrowHeadParsingScope","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","iterateErrors","clearDeclarationError","newExpressionScope","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","UtilParser","extra","nameStart","nameEnd","nextCh","isUnparsedContextual","isContextual","eatContextual","hasPrecedingLineBreak","eat","canInsertSemicolon","allowAsi","isLineTerminator","messageOrType","pluginConfigs","map","c","missingPlugin","getPluginNamesFromConfigs","JSON","stringify","some","join","fn","oldState","clone","abortSignal","failState","thrown","aborted","refExpressionErrors","andThrow","shorthandAssign","doubleProto","optionalParameters","hasErrors","isPrivateName","property","oldLabels","oldExportedIdentifiers","exportedIdentifiers","oldInModule","oldScope","getScopeHandler","oldProdParam","prodParam","oldExpressionScope","expressionScope","paramFlags","enter","ExpressionErrors","Node","parser","ranges","range","NodePrototype","prototype","cloneIdentifier","cloned","create","expectedNode","cloneStringLiteral","clonePlaceholder","raw","__clone","newNode","NodeUtils","startNodeAt","finishNodeAt","processComment","locationNode","resetStartLocation","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","GetterMayNotHaveThisParam","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","PatternIsOptional","SetterMayNotHaveThisParam","SpreadVariance","ThisParamAnnotationRequired","ThisParamBannedInConstructor","ThisParamMayNotBeOptional","ThisParamMustBeFirst","ThisParamNoDefault","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagElement","MissingClosingTagFragment","UnexpectedSequenceExpression","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","Error","TypeScriptScope","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","isConst","wasConst","assert","x","TSErrors","AbstractMethodHasImplementation","AbstractPropertyHasInitializer","AccesorCannotDeclareThisParameter","AccesorCannotHaveTypeParameters","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareAccessor","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateAccessibilityModifier","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","ExpectedAmbientAfterExportDeclare","ImportAliasHasImportType","IncompatibleModifiers","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasDeclare","IndexSignatureHasOverride","IndexSignatureHasStatic","InvalidModifierOnTypeMember","InvalidModifiersOrder","InvalidTupleMemberLabel","MissingInterfaceName","MixedLabeledAndUnlabeledElements","NonAbstractClassHasAbstractMethod","NonClassMethodPropertyHasAbstractModifer","OptionalTypeBeforeRequired","OverrideNotInSubClass","PrivateElementHasAbstract","PrivateElementHasAccessibility","ReadonlyForMethodSignature","ReservedArrowTypeParam","ReservedTypeAssertion","SetAccesorCannotHaveOptionalParameter","SetAccesorCannotHaveRestParameter","SetAccesorCannotHaveReturnType","StaticBlockCannotHaveModifier","TypeAnnotationAfterAssign","TypeImportCannotSpecifyDefaultAndNamed","TypeModifierIsUsedInTypeExports","TypeModifierIsUsedInTypeImports","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","tsIsAccessModifier","modifier","PlaceHolderErrors","ClassNameIsRequired","expectedConfig","expectedName","expectedOptions","expectedKeys","expectedOptionsIsEmpty","p","option","find","PIPELINE_PROPOSALS","TOPIC_TOKENS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","regex","estreeParseLiteral","bigInt","BigInt","_unused","parseLiteral","directive","directiveLiteral","stmt","expressionValue","isObjectProperty","checkDeclaration","method","_stmt$expression$extr","parenthesized","directiveStatements","directives","d","directiveToStmt","body","concat","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","convertPrivateNameToPrivateIdentifier","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","kind","computed","finishNode","propertyNode","isPattern","isAccessor","shorthand","startPos","isBinding","isAssignable","isLHS","toAssignable","optional","callee","_node$arguments$","attributes","exported","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","jsxReadEntity","jsxReadNewLine","normalizeCRLF","entity","count","jsxParseIdentifier","jsxParseNamespacedName","setContext","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","previousContext","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","jsxParseSpreadChild","openingFragment","closingFragment","newContext","jsxParseElement","replaceToken","jsxReadToken","jsxReadWord","jsxReadString","flow","flowPragma","matches","tok","oldInType","flowParseType","moduloPos","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","flowParseTypeAndPredicateInitialiser","returnType","typeAnnotation","resetEndLocation","semicolon","declareName","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","flowParseDeclareModuleExports","flowParseDeclareModule","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","BIND_KIND_VALUE","bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","oldNoAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","first","lh","isThis","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","parseLiteralAtNode","flowParseTypeofType","flowParseInterfaceType","flowIdentToTypeAnnotation","seenOptionalIndexedAccess","objectType","indexType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","forwardNoArrowParamsConversionAt","topLevel","flowParseInterface","shouldParseEnums","flowParseEnumDeclaration","isValidDirective","expr","lookaheadCharCode","setOptionalParametersError","originalNoArrowAt","tryParseConditionalConsequent","consequent","failed","getArrowLikeExpressions","valid","alternate","parseMaybeAssign","disallowInvalid","arrows","finishArrowValidation","list","list1","list2","partition","every","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","result","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","fullWord","isIterator","isIteratorStart","readIterator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","toReferencedList","isThisParam","superTypeParameters","implemented","getObjectOrClassMethodParams","left","specifier","contextDescription","local","checkLVal","importedIsString","isInTypeOnlyImport","isMaybeTypeOnly","firstIdent","imported","specifierTypeKind","isLookaheadContextual","as_ident","specifierIsTypeImport","checkReservedWord","allowModifiers","call","afterLeftParse","_jsx","tryParse","currentContext","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","async","allowDuplicates","isArrowFunction","canBeArrow","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","flowParseTypeParameterInstantiationCallOrNew","targs","parseFunctionParams","parseArrow","parseArrowExpression","file","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","ch2","ch3","enumName","memberName","toUpperCase","suppliedType","explicitType","endOfInit","literal","parseNumericLiteral","parseStringLiteral","parseBooleanLiteral","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","hasUnknownMembers","memberNode","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","flowEnumErrorStringMemberInconsistentlyInitailized","flowEnumErrorInvalidExplicitType","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","flowEnumErrorInconsistentMemberValues","flowEnumBody","afterNext","typescript","isLiteralPropertyName","tsTokenCanFollowModifier","allowedModifiers","stopOnStartOfClassStaticBlock","tsIsStartOfStaticBlocks","tsTryParse","tsNextTokenCanFollowModifier","modified","disallowedModifiers","enforceOrder","before","after","incompatible","mod1","mod2","tsParseModifier","accessibility","hasOwnProperty","parseElement","tsIsListTerminator","refTrailingCommaPos","nonNull","tsParseDelimitedListWorker","expectSuccess","element","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","tsParseTypeParameterName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","addExtra","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","firstParameter","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","tsParseModifiers","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","labeledNode","optionalTypeNode","restNode","abstract","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","tsParseLiteralTypeNode","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","nodeType","keywordTypeFromName","tsParseNonArrayType","operator","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","hasLeadingOperator","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","tsSkipParameterStart","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","typePredicateVariable","tsParseTypePredicatePrefix","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","isAbstractConstructorSignature","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","cb","oldContext","tsDoThenParseType","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","starttype","tsInAmbientContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminator","tsParseAbstractDeclaration","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","hasFollowingLineBreak","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","tsInNoContext","tsIsDeclarationStart","decorators","override","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","items","isInParens","tsCheckForInvalidTypeCasts","nonNullExpression","isOptionalCall","missingParenErrorPos","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","parseTaggedTemplateExpression","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","cls","interfaceNode","modifiers","callParseClassMemberWithIsStatic","tsHasSomeModifiers","parseClassStaticBlock","parseClassMemberWithIsStatic","hadSuperClass","methodOrProp","tsParseExpressionStatement","isDeclare","shouldParseExportDeclaration","tsTryParseExportDeclaration","definite","parseClassPropertyAnnotation","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_typeParameters","reportReservedArrowTypeParam","tsParseTypeAssertion","toAssignableParenthesizedExpression","_expr$extra2","baseCount","firstParam","oldIsAmbientContext","oldInAbstractClass","hasBody","shouldParseAsAmbientContext","isString","isInTypeExport","parseTypeOnlyImportExportSpecifier","isImport","isInTypeOnlyImportExport","rightOfAs","leftOfAsKey","rightOfAsKey","leftOfAs","hasTypeSpecifier","canParseAsKeyword","firstAs","secondAs","parseModuleExportName","v8intrinsic","v8IntrinsicStart","parseIdentifierName","identifier","parseV8Intrinsic","placeholders","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","startsWith","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","defaultOptions","sourceFilename","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","createParenthesizedExpressions","unwrapParenthesizedExpression","LValParser","_node$extra3","recordParenthesizedIdentifierError","last","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","arg","raiseTrailingCommaAfterRest","toReferencedListDeep","refNeedsArrowPos","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","parseBindingRestProperty","parseObjPropValue","_startLoc","_startPos","_left","checkClashes","disallowLetBinding","strictModeChanged","isObjectMethod","elem","invalidHackPipeBodies","ExpressionParser","isRecord","protoRef","used","enterInitialScopes","finalizeRemainingComments","disallowIn","disallowInAnd","parseExpressionBase","allowInAnd","expressions","resultError","_resultError$pos","ownExpressionErrors","hasYield","parseYield","parseMaybeConditional","checkExpressionErrors","parseExprOps","shouldExitDescending","parseConditional","parsePrivateName","parseMaybeUnaryOrPrivate","getPrivateNameSV","hasIn","usePrivateName","op","prec","checkPipelineAtInfixOperator","logical","coalesce","proposal","hasAwait","parseExprOpRightExpr","nextOp","withTopicBindingContext","parseHackPipeBody","parseSmartPipelineBodyInStyle","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","_body$extra","topicReferenceWasUsedInCurrentContext","sawUnary","isAwait","isAwaitAllowed","parseAwait","checkExponentialAfterUnary","update","isDelete","hasPropertyAsPrivateName","parseUpdate","isAmbiguousAwait","raiseOverwrite","parseExprSubscripts","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","tag","quasi","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","resetPreviousNodeTrailingComments","parseSuper","parseImportMetaProperty","parseDo","readRegexp","parseRegExpLiteral","parseBigIntLiteral","parseDecimalLiteral","parseNullLiteral","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseDecorators","parseNewOrNewTarget","parseTopicReferenceThenEqualsSign","pipeProposal","parseTopicReference","lookaheadCh","codePointAt","expectOnePlugin","parseModuleExpression","parseFunction","parseAsyncArrowUnaryFunction","topicTokenType","topicTokenValue","tokenType","finishTopicReference","testTopicReferenceConfiguration","topicReferenceIsAllowedInCurrentContext","registerTopicReference","topicToken","parseBlock","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","takeSurroundingComments","parenExpression","metaProp","inNonArrowFunction","parseNew","isOptionalChain","parseNewArguments","parseExprList","isTagged","elemStart","isTail","endOffset","elemEnd","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","readTemplateContinuation","propHash","parseBindingProperty","parsePropertyDefinition","checkProto","parseSpread","parsePropertyNamePrefixOperator","maybeAsyncOrAccessorProp","keyName","_params","getGetterSetterExpectedParamCount","checkGetterSetterParams","parseObjectMethod","parseObjectProperty","privateKeyPos","generator","initFunction","parseFunctionBodyAndFinish","setArrowFunctionParameters","parseFunctionBody","isExpression","checkParams","hasStrictModeDirective","nonSimple","isSimpleParamList","errorPos","canBeReservedWord","inStaticBlock","recordAsyncArrowParametersError","inClassAndNotInNonArrowFunction","isKeyword","inFunction","recordParameterInitializerError","delegating","delegate","childExpr","isSimpleReference","checkSmartPipeTopicBodyEarlyErrors","callback","outerContextTopicState","outerContextSoloAwaitState","ret","revertScopes","initializeScopes","parseProgram","loopLabel","switchLabel","loneSurrogate","keywordRelationalOperator","StatementParser","hashEndPos","hashEndLoc","backquoteEnd","backquoteEndLoc","startToken","templateValue","templateElementEnd","templateElementEndLoc","endToken","babel7CompatTokens","interpreter","parseInterpreterDirective","parseBlockBody","isLetKeyword","endCh","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","parseMaybeDecoratorArguments","isBreak","verifyBreakContinue","lab","withSmartMixTopicForbiddingContext","parseHeaderExpression","awaitAt","parseFor","startsWithLet","parseVar","declarations","parseForIn","startsWithAsync","isForOf","description","declarationPosition","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","block","handler","clause","parseCatchClauseParam","finalizer","statementStart","allowDirectives","createNewLexicalScope","afterBlockParse","parsedNonDirective","stmtToDirective","setStrict","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","isHangingStatement","requireId","parseFunctionId","registerFunctionStatementId","treatFunctionsAsVar","hadConstructor","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","_member$decorators","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_SETTER","declareClassPrivateMethodInScope","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","isTypeExport","assertions","parseExportDeclaration","FUNC_STATEMENT","nextType","hasFrom","nextAfterFrom","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","exportedName","checkLocalExport","nodes","parseExportSpecifier","surrogate","toString","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","importSpecifier","parseImportSpecifier","Parser","opts","getOptions","pluginMap","pluginsMap","parseTopLevel","tokTypes","internalTokenTypes","generateExportedTokenTypes","getParser","decoratorsBeforeExport","proposalList","tupleSyntaxIsHash","syntaxType","tokenList","missingPlugins","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","moduleError","_unused2","getExpression","codeFrameColumns","rawLines","lineNumber","colNumber","deprecationWarningShown","process","emitWarning","deprecationError","console","warn","location","Math","max","_highlight","getDefs","chalk","gutter","grey","marker","red","bold","NEWLINE","getMarkerLines","linesAbove","linesBelow","endLine","endColumn","min","lineDiff","markerLines","sourceLength","highlighted","highlightCode","forceColor","shouldHighlight","getChalk","defs","maybeHighlight","chalkFn","lines","split","hasColumns","numberMaxWidth","highlightedLines","frame","number","paddedNumber","hasMarker","lastMarkerLine","markerLine","markerSpacing","numberOfMarkers","repeat","reset","merge","a","b","placeholderWhitelist","placeholderPattern","preserveComments","syntacticPlaceholders","normalizeReplacements","replacements","reduce","acc","replacement","validate","_ref","excluded","target","sourceKeys","_objectWithoutPropertiesLoose","_excluded","formatter","parserOpts","_parser","_codeFrame","parseWithCodeFrame","removePropertiesDeep","syntactic","placeholderNames","legacy","isLegacyRef","traverse","placeholderVisitorHandler","_t","isCallExpression","isExpressionStatement","isFunction","isIdentifier","isJSXIdentifier","isNewExpression","isPlaceholder","isStringLiteral","PATTERN","ancestors","_state$placeholderWhi","parent","resolve","resolveAncestors","isDuplicate","cssKeywords","reverseKeywords","convert","module","rgb","channels","hsl","hsv","hwb","cmyk","xyz","lch","ansi16","ansi256","hcg","apple","gray","model","h","l","r","g","rdif","gdif","bdif","s","v","diff","diffc","k","reversed","currentClosestKeyword","y","currentClosestDistance","distance","pow","z","t1","t2","t3","smin","lmin","hi","floor","q","sl","vmin","wh","bl","ratio","m","y2","x2","z2","atan2","PI","sqrt","hr","cos","sin","round","ansi","color","mult","rem","colorString","hue","chroma","mg","pure","w","metadata","cloneNode","placeholderName","reverse","stringLiteral","blockStatement","expressionStatement","emptyStatement","applyReplacement","assertExpressionStatement","makeStatementFormatter","unwrap","createTemplateBuilder","defaultOpts","templateFnCache","WeakMap","templateAstCache","cachedOpts","tpl","extendedTrace","_string","builder","_literal","NO_PLACEHOLDER","rootStack","_parse","_populate","highlightTokens","_jsTokens","_helperValidatorIdentifier","_chalk","sometimesKeywords","cyan","capitalized","yellow","jsxIdentifier","punctuator","magenta","green","white","bgRed","tokenize","BRACKET","JSX_TAG","getTokenType","text","toLowerCase","colorize","supportsColor","constructor","enabled","level","matchToToken","escapeStringRegexp","ansiStyles","stdoutColor","stdout","isSimpleWindowsTerm","platform","TERM","levelMapping","skipModels","styles","applyOptions","scLevel","Chalk","chalkTag","apply","setPrototypeOf","blue","open","closeRe","codes","build","_styles","_empty","visible","bgColor","bgModel","defineProperties","applyStyle","self","enumerable","hasGrey","__proto__","argsLen","originalDim","dim","strings","parts","colorConvert","wrapAnsi16","wrapAnsi256","wrapAnsi16m","italic","underline","inverse","hidden","strikethrough","black","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgBlack","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgBlackBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","groupName","group","styleName","style","ansi2ansi","rgb2rgb","ansi16m","suite","conversions","route","fromModel","routes","toModel","wrappedFn","conversion","wrapRounded","wrapRaw","deriveBFS","graph","models","buildGraph","queue","adjacents","adjacent","link","to","wrapConversion","path","stderr","TEMPLATE_REGEX","STYLE_REGEX","STRING_REGEX","ESCAPE_REGEX","ESCAPES","unescape","parseArguments","results","chunks","trim","chunk","escape","chr","parseStyle","buildStyle","layer","escapeChar","errMsg","names","nameSet","buildTemplateCode","buildLiteralData","defaultReplacements"],"mappings":"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","file":"static/js/vendors-runtime-template.7e220eb2.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.statements = exports.statement = exports.smart = exports.program = exports.expression = exports.default = void 0;\n\nvar formatters = require(\"./formatters\");\n\nvar _builder = require(\"./builder\");\n\nconst smart = (0, _builder.default)(formatters.smart);\nexports.smart = smart;\nconst statement = (0, _builder.default)(formatters.statement);\nexports.statement = statement;\nconst statements = (0, _builder.default)(formatters.statements);\nexports.statements = statements;\nconst expression = (0, _builder.default)(formatters.expression);\nexports.expression = expression;\nconst program = (0, _builder.default)(formatters.program);\nexports.program = program;\n\nvar _default = Object.assign(smart.bind(undefined), {\n  smart,\n  statement,\n  statements,\n  expression,\n  program,\n  ast: smart.ast\n});\n\nexports.default = _default;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nconst lineBreakG = new RegExp(lineBreak.source, \"g\");\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\nconst skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nconst skipWhiteSpaceInLine = /(?:[^\\S\\n\\r\\u2028\\u2029]|\\/\\/.*|\\/\\*.*?\\*\\/)*/y;\nconst skipWhiteSpaceToLineBreak = new RegExp(\"(?=(\" + skipWhiteSpaceInLine.source + \"))\\\\1\" + /(?=[\\n\\r\\u2028\\u2029]|\\/\\*(?!.*?\\*\\/)|$)/.source, \"y\");\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nclass Position {\n  constructor(line, col) {\n    this.line = void 0;\n    this.column = void 0;\n    this.line = line;\n    this.column = col;\n  }\n\n}\nclass SourceLocation {\n  constructor(start, end) {\n    this.start = void 0;\n    this.end = void 0;\n    this.filename = void 0;\n    this.identifierName = void 0;\n    this.start = start;\n    this.end = end;\n  }\n\n}\nfunction getLineInfo(input, offset) {\n  let line = 1;\n  let lineStart = 0;\n  let match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\nfunction createPositionWithColumnOffset(position, columnOffset) {\n  const {\n    line,\n    column\n  } = position;\n  return new Position(line, column + columnOffset);\n}\n\nclass BaseParser {\n  constructor() {\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  hasPlugin(pluginConfig) {\n    if (typeof pluginConfig === \"string\") {\n      return this.plugins.has(pluginConfig);\n    } else {\n      const [pluginName, pluginOptions] = pluginConfig;\n\n      if (!this.hasPlugin(pluginName)) {\n        return false;\n      }\n\n      const actualOptions = this.plugins.get(pluginName);\n\n      for (const key of Object.keys(pluginOptions)) {\n        if ((actualOptions == null ? void 0 : actualOptions[key]) !== pluginOptions[key]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  getPluginOption(plugin, name) {\n    var _this$plugins$get;\n\n    return (_this$plugins$get = this.plugins.get(plugin)) == null ? void 0 : _this$plugins$get[name];\n  }\n\n}\n\nfunction setTrailingComments(node, comments) {\n  if (node.trailingComments === undefined) {\n    node.trailingComments = comments;\n  } else {\n    node.trailingComments.unshift(...comments);\n  }\n}\n\nfunction setLeadingComments(node, comments) {\n  if (node.leadingComments === undefined) {\n    node.leadingComments = comments;\n  } else {\n    node.leadingComments.unshift(...comments);\n  }\n}\n\nfunction setInnerComments(node, comments) {\n  if (node.innerComments === undefined) {\n    node.innerComments = comments;\n  } else {\n    node.innerComments.unshift(...comments);\n  }\n}\n\nfunction adjustInnerComments(node, elements, commentWS) {\n  let lastElement = null;\n  let i = elements.length;\n\n  while (lastElement === null && i > 0) {\n    lastElement = elements[--i];\n  }\n\n  if (lastElement === null || lastElement.start > commentWS.start) {\n    setInnerComments(node, commentWS.comments);\n  } else {\n    setTrailingComments(lastElement, commentWS.comments);\n  }\n}\n\nclass CommentsParser extends BaseParser {\n  addComment(comment) {\n    if (this.filename) comment.loc.filename = this.filename;\n    this.state.comments.push(comment);\n  }\n\n  processComment(node) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n    const lastCommentWS = commentStack[i];\n\n    if (lastCommentWS.start === node.end) {\n      lastCommentWS.leadingNode = node;\n      i--;\n    }\n\n    const {\n      start: nodeStart\n    } = node;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n\n      if (commentEnd > nodeStart) {\n        commentWS.containingNode = node;\n        this.finalizeComment(commentWS);\n        commentStack.splice(i, 1);\n      } else {\n        if (commentEnd === nodeStart) {\n          commentWS.trailingNode = node;\n        }\n\n        break;\n      }\n    }\n  }\n\n  finalizeComment(commentWS) {\n    const {\n      comments\n    } = commentWS;\n\n    if (commentWS.leadingNode !== null || commentWS.trailingNode !== null) {\n      if (commentWS.leadingNode !== null) {\n        setTrailingComments(commentWS.leadingNode, comments);\n      }\n\n      if (commentWS.trailingNode !== null) {\n        setLeadingComments(commentWS.trailingNode, comments);\n      }\n    } else {\n      const {\n        containingNode: node,\n        start: commentStart\n      } = commentWS;\n\n      if (this.input.charCodeAt(commentStart - 1) === 44) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n          case \"ObjectPattern\":\n          case \"RecordExpression\":\n            adjustInnerComments(node, node.properties, commentWS);\n            break;\n\n          case \"CallExpression\":\n          case \"OptionalCallExpression\":\n            adjustInnerComments(node, node.arguments, commentWS);\n            break;\n\n          case \"FunctionDeclaration\":\n          case \"FunctionExpression\":\n          case \"ArrowFunctionExpression\":\n          case \"ObjectMethod\":\n          case \"ClassMethod\":\n          case \"ClassPrivateMethod\":\n            adjustInnerComments(node, node.params, commentWS);\n            break;\n\n          case \"ArrayExpression\":\n          case \"ArrayPattern\":\n          case \"TupleExpression\":\n            adjustInnerComments(node, node.elements, commentWS);\n            break;\n\n          case \"ExportNamedDeclaration\":\n          case \"ImportDeclaration\":\n            adjustInnerComments(node, node.specifiers, commentWS);\n            break;\n\n          default:\n            {\n              setInnerComments(node, comments);\n            }\n        }\n      } else {\n        setInnerComments(node, comments);\n      }\n    }\n  }\n\n  finalizeRemainingComments() {\n    const {\n      commentStack\n    } = this.state;\n\n    for (let i = commentStack.length - 1; i >= 0; i--) {\n      this.finalizeComment(commentStack[i]);\n    }\n\n    this.state.commentStack = [];\n  }\n\n  resetPreviousNodeTrailingComments(node) {\n    const {\n      commentStack\n    } = this.state;\n    const {\n      length\n    } = commentStack;\n    if (length === 0) return;\n    const commentWS = commentStack[length - 1];\n\n    if (commentWS.leadingNode === node) {\n      commentWS.leadingNode = null;\n    }\n  }\n\n  takeSurroundingComments(node, start, end) {\n    const {\n      commentStack\n    } = this.state;\n    const commentStackLength = commentStack.length;\n    if (commentStackLength === 0) return;\n    let i = commentStackLength - 1;\n\n    for (; i >= 0; i--) {\n      const commentWS = commentStack[i];\n      const commentEnd = commentWS.end;\n      const commentStart = commentWS.start;\n\n      if (commentStart === end) {\n        commentWS.leadingNode = node;\n      } else if (commentEnd === start) {\n        commentWS.trailingNode = node;\n      } else if (commentEnd < start) {\n        break;\n      }\n    }\n  }\n\n}\n\nconst ErrorCodes = Object.freeze({\n  SyntaxError: \"BABEL_PARSER_SYNTAX_ERROR\",\n  SourceTypeModuleError: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n});\n\nconst ErrorMessages = makeErrorTemplates({\n  AccessorIsGenerator: \"A %0ter cannot be a generator.\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods.\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block.\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function.\",\n  AwaitBindingIdentifierInStaticBlock: \"Can not use 'await' as identifier inside a static block.\",\n  AwaitExpressionFormalParameter: \"'await' is not allowed in async function parameters.\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules.\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions.\",\n  BadGetterArity: \"A 'get' accesor must not have any formal parameters.\",\n  BadSetterArity: \"A 'set' accesor must have exactly one formal parameter.\",\n  BadSetterRestParameter: \"A 'set' accesor function argument must not be a rest parameter.\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'.\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'.\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor.\",\n  ConstructorIsAsync: \"Constructor can't be an async function.\",\n  ConstructorIsGenerator: \"Constructor can't be a generator.\",\n  DeclarationMissingInitializer: \"'%0' require an initialization value.\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax.\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon.\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block.\",\n  DeletePrivateField: \"Deleting a private field is not allowed.\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class.\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property.\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag.\",\n  ElementAfterRest: \"Rest element must be last element.\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape.\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { '%0' as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'.\",\n  ForInOfLoopInitializer: \"'%0' loop variable declaration may not have an initializer.\",\n  ForOfAsync: \"The left-hand side of a for-of loop may not be 'async'.\",\n  ForOfLet: \"The left-hand side of a for-of loop may not start with 'let'.\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block.\",\n  IllegalBreakContinue: \"Unsyntactic %0.\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list.\",\n  IllegalReturn: \"'return' outside of function.\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments.\",\n  ImportCallArity: \"`import()` requires exactly %0.\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...).\",\n  ImportCallSpreadArgument: \"`...` is not allowed in `import()`.\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral.\",\n  InvalidCodePoint: \"Code point out of bounds.\",\n  InvalidCoverInitializedName: \"Invalid shorthand property initializer.\",\n  InvalidDecimal: \"Invalid decimal.\",\n  InvalidDigit: \"Expected number in radix %0.\",\n  InvalidEscapeSequence: \"Bad character escape sequence.\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template.\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0.\",\n  InvalidIdentifier: \"Invalid identifier %0.\",\n  InvalidLhs: \"Invalid left-hand side in %0.\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0.\",\n  InvalidNumber: \"Invalid number.\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'.\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'.\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern.\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined.\",\n  InvalidPropertyBindingPattern: \"Binding member expression.\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions.\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument.\",\n  LabelRedeclaration: \"Label '%0' is already declared.\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'.\",\n  MalformedRegExpFlags: \"Invalid regular expression flag.\",\n  MissingClassName: \"A class name is required.\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingSemicolon: \"Missing semicolon.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX.\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators.\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`.\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values.\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes.',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'.\",\n  ModuleExportUndefined: \"Export '%0' is not defined.\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses.\",\n  NewlineAfterThrow: \"Illegal newline after throw.\",\n  NoCatchOrFinally: \"Missing catch or finally clause.\",\n  NumberIdentifier: \"Identifier directly after number.\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences.\",\n  ObsoleteAwaitStar: \"'await*' has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"Constructors in/after an Optional Chain are not allowed.\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain.\",\n  OverrideOnConstructor: \"'override' modifier cannot appear on a constructor declaration.\",\n  ParamDupe: \"Argument name clash.\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter.\",\n  PatternHasMethod: \"Object pattern can't contain methods.\",\n  PipeBodyIsTighter: \"Unexpected %0 after pipeline body; any %0 expression acting as Hack-style pipe body must be parenthesized due to its loose operator precedence.\",\n  PipeTopicRequiresHackPipes: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PipeTopicUnbound: \"Topic reference is unbound; it must be inside a pipe body.\",\n  PipeTopicUnconfiguredToken: 'Invalid topic token %0. In order to use %0 as a topic reference, the pipelineOperator plugin must be configured with { \"proposal\": \"hack\", \"topicToken\": \"%0\" }.',\n  PipeTopicUnused: \"Hack-style pipe body does not contain a topic reference; Hack-style pipes must use topic at least once.\",\n  PipeUnparenthesizedBody: \"Hack-style pipe body cannot be an unparenthesized %0 expression; please wrap it in parentheses.\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized.',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression.\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression.\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference.\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding.\",\n  PrimaryTopicRequiresSmartPipeline: 'Topic reference is used, but the pipelineOperator plugin was not passed a \"proposal\": \"hack\" or \"smart\" option.',\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`).\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0.\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions.\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element.\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement.\",\n  StaticPrototype: \"Classes may not have static property named prototype.\",\n  StrictDelete: \"Deleting local variable in strict mode.\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode.\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode.\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block.\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'.\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode.\",\n  StrictWith: \"'with' in strict mode.\",\n  SuperNotAllowed: \"`super()` is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super.\",\n  TrailingDecorator: \"Decorators must be attached to a class element.\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'.\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'.\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder.\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal.',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token.\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level.\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'.\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration.\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context.\",\n  UnexpectedNewTarget: \"`new.target` can only be used in functions or class properties.\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits.\",\n  UnexpectedPrivateField: \"Unexpected private name.\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'.\",\n  UnexpectedSuper: \"'super' is only allowed in object methods and classes.\",\n  UnexpectedToken: \"Unexpected token '%0'.\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration.\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"`import` can only be used in `import()` or `import.meta`.\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1.\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters.\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties.\",\n  UnsupportedSuper: \"'super' can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop]).\",\n  UnterminatedComment: \"Unterminated comment.\",\n  UnterminatedRegExp: \"Unterminated regular expression.\",\n  UnterminatedString: \"Unterminated string constant.\",\n  UnterminatedTemplate: \"Unterminated template.\",\n  VarRedeclaration: \"Identifier '%0' has already been declared.\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator.\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters.\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0.\"\n}, ErrorCodes.SyntaxError);\nconst SourceTypeModuleErrorMessages = makeErrorTemplates({\n  ImportMetaOutsideModule: `import.meta may appear only with 'sourceType: \"module\"'`,\n  ImportOutsideModule: `'import' and 'export' may appear only with 'sourceType: \"module\"'`\n}, ErrorCodes.SourceTypeModuleError);\n\nfunction keepReasonCodeCompat(reasonCode, syntaxPlugin) {\n  {\n    if (syntaxPlugin === \"flow\" && reasonCode === \"PatternIsOptional\") {\n      return \"OptionalBindingPattern\";\n    }\n  }\n  return reasonCode;\n}\n\nfunction makeErrorTemplates(messages, code, syntaxPlugin) {\n  const templates = {};\n  Object.keys(messages).forEach(reasonCode => {\n    templates[reasonCode] = Object.freeze({\n      code,\n      reasonCode: keepReasonCodeCompat(reasonCode, syntaxPlugin),\n      template: messages[reasonCode]\n    });\n  });\n  return Object.freeze(templates);\n}\nclass ParserError extends CommentsParser {\n  getLocationForPosition(pos) {\n    let loc;\n    if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n    return loc;\n  }\n\n  raise(pos, {\n    code,\n    reasonCode,\n    template\n  }, ...params) {\n    return this.raiseWithData(pos, {\n      code,\n      reasonCode\n    }, template, ...params);\n  }\n\n  raiseOverwrite(pos, {\n    code,\n    template\n  }, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = template.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n\n    if (this.options.errorRecovery) {\n      const errors = this.state.errors;\n\n      for (let i = errors.length - 1; i >= 0; i--) {\n        const error = errors[i];\n\n        if (error.pos === pos) {\n          return Object.assign(error, {\n            message\n          });\n        } else if (error.pos < pos) {\n          break;\n        }\n      }\n    }\n\n    return this._raise({\n      code,\n      loc,\n      pos\n    }, message);\n  }\n\n  raiseWithData(pos, data, errorTemplate, ...params) {\n    const loc = this.getLocationForPosition(pos);\n    const message = errorTemplate.replace(/%(\\d+)/g, (_, i) => params[i]) + ` (${loc.line}:${loc.column})`;\n    return this._raise(Object.assign({\n      loc,\n      pos\n    }, data), message);\n  }\n\n  _raise(errorContext, message) {\n    const err = new SyntaxError(message);\n    Object.assign(err, errorContext);\n\n    if (this.options.errorRecovery) {\n      if (!this.isLookahead) this.state.errors.push(err);\n      return err;\n    } else {\n      throw err;\n    }\n  }\n\n}\n\nvar estree = (superClass => class extends superClass {\n  parseRegExpLiteral({\n    pattern,\n    flags\n  }) {\n    let regex = null;\n\n    try {\n      regex = new RegExp(pattern, flags);\n    } catch (e) {}\n\n    const node = this.estreeParseLiteral(regex);\n    node.regex = {\n      pattern,\n      flags\n    };\n    return node;\n  }\n\n  parseBigIntLiteral(value) {\n    let bigInt;\n\n    try {\n      bigInt = BigInt(value);\n    } catch (_unused) {\n      bigInt = null;\n    }\n\n    const node = this.estreeParseLiteral(bigInt);\n    node.bigint = String(node.value || value);\n    return node;\n  }\n\n  parseDecimalLiteral(value) {\n    const decimal = null;\n    const node = this.estreeParseLiteral(decimal);\n    node.decimal = String(node.value || value);\n    return node;\n  }\n\n  estreeParseLiteral(value) {\n    return this.parseLiteral(value, \"Literal\");\n  }\n\n  parseStringLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNumericLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  parseNullLiteral() {\n    return this.estreeParseLiteral(null);\n  }\n\n  parseBooleanLiteral(value) {\n    return this.estreeParseLiteral(value);\n  }\n\n  directiveToStmt(directive) {\n    const directiveLiteral = directive.value;\n    const stmt = this.startNodeAt(directive.start, directive.loc.start);\n    const expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n    expression.value = directiveLiteral.extra.expressionValue;\n    expression.raw = directiveLiteral.extra.raw;\n    stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n    stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n    return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n  }\n\n  initFunction(node, isAsync) {\n    super.initFunction(node, isAsync);\n    node.expression = false;\n  }\n\n  checkDeclaration(node) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.checkDeclaration(node.value);\n    } else {\n      super.checkDeclaration(node);\n    }\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.value.params;\n  }\n\n  isValidDirective(stmt) {\n    var _stmt$expression$extr;\n\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) != null && _stmt$expression$extr.parenthesized);\n  }\n\n  parseBlockBody(node, ...args) {\n    super.parseBlockBody(node, ...args);\n    const directiveStatements = node.directives.map(d => this.directiveToStmt(d));\n    node.body = directiveStatements.concat(node.body);\n    delete node.directives;\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n    if (method.typeParameters) {\n      method.value.typeParameters = method.typeParameters;\n      delete method.typeParameters;\n    }\n\n    classBody.body.push(method);\n  }\n\n  parsePrivateName() {\n    const node = super.parsePrivateName();\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return node;\n      }\n    }\n    return this.convertPrivateNameToPrivateIdentifier(node);\n  }\n\n  convertPrivateNameToPrivateIdentifier(node) {\n    const name = super.getPrivateNameSV(node);\n    node = node;\n    delete node.id;\n    node.name = name;\n    node.type = \"PrivateIdentifier\";\n    return node;\n  }\n\n  isPrivateName(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.isPrivateName(node);\n      }\n    }\n    return node.type === \"PrivateIdentifier\";\n  }\n\n  getPrivateNameSV(node) {\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return super.getPrivateNameSV(node);\n      }\n    }\n    return node.name;\n  }\n\n  parseLiteral(value, type) {\n    const node = super.parseLiteral(value, type);\n    node.raw = node.extra.raw;\n    delete node.extra;\n    return node;\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    super.parseFunctionBody(node, allowExpression, isMethod);\n    node.expression = node.body.type !== \"BlockStatement\";\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    let funcNode = this.startNode();\n    funcNode.kind = node.kind;\n    funcNode = super.parseMethod(funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n    funcNode.type = \"FunctionExpression\";\n    delete funcNode.kind;\n    node.value = funcNode;\n\n    if (type === \"ClassPrivateMethod\") {\n      node.computed = false;\n    }\n\n    type = \"MethodDefinition\";\n    return this.finishNode(node, type);\n  }\n\n  parseClassProperty(...args) {\n    const propertyNode = super.parseClassProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    return propertyNode;\n  }\n\n  parseClassPrivateProperty(...args) {\n    const propertyNode = super.parseClassPrivateProperty(...args);\n    {\n      if (!this.getPluginOption(\"estree\", \"classFeatures\")) {\n        return propertyNode;\n      }\n    }\n    propertyNode.type = \"PropertyDefinition\";\n    propertyNode.computed = false;\n    return propertyNode;\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    const node = super.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor);\n\n    if (node) {\n      node.type = \"Property\";\n      if (node.kind === \"method\") node.kind = \"init\";\n      node.shorthand = false;\n    }\n\n    return node;\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    const node = super.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n    if (node) {\n      node.kind = \"init\";\n      node.type = \"Property\";\n    }\n\n    return node;\n  }\n\n  isAssignable(node, isBinding) {\n    if (node != null && this.isObjectProperty(node)) {\n      return this.isAssignable(node.value, isBinding);\n    }\n\n    return super.isAssignable(node, isBinding);\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node != null && this.isObjectProperty(node)) {\n      this.toAssignable(node.value, isLHS);\n      return node;\n    }\n\n    return super.toAssignable(node, isLHS);\n  }\n\n  toAssignableObjectExpressionProp(prop, ...args) {\n    if (prop.kind === \"get\" || prop.kind === \"set\") {\n      this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n    } else if (prop.method) {\n      this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n    } else {\n      super.toAssignableObjectExpressionProp(prop, ...args);\n    }\n  }\n\n  finishCallExpression(node, optional) {\n    super.finishCallExpression(node, optional);\n\n    if (node.callee.type === \"Import\") {\n      node.type = \"ImportExpression\";\n      node.source = node.arguments[0];\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        var _node$arguments$;\n\n        node.attributes = (_node$arguments$ = node.arguments[1]) != null ? _node$arguments$ : null;\n      }\n\n      delete node.arguments;\n      delete node.callee;\n    }\n\n    return node;\n  }\n\n  toReferencedArguments(node) {\n    if (node.type === \"ImportExpression\") {\n      return;\n    }\n\n    super.toReferencedArguments(node);\n  }\n\n  parseExport(node) {\n    super.parseExport(node);\n\n    switch (node.type) {\n      case \"ExportAllDeclaration\":\n        node.exported = null;\n        break;\n\n      case \"ExportNamedDeclaration\":\n        if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n          node.type = \"ExportAllDeclaration\";\n          node.exported = node.specifiers[0].exported;\n          delete node.specifiers;\n        }\n\n        break;\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const node = super.parseSubscript(base, startPos, startLoc, noCalls, state);\n\n    if (state.optionalChainMember) {\n      if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n        node.type = node.type.substring(8);\n      }\n\n      if (state.stop) {\n        const chain = this.startNodeAtNode(node);\n        chain.expression = node;\n        return this.finishNode(chain, \"ChainExpression\");\n      }\n    } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n      node.optional = false;\n    }\n\n    return node;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    if (node.type === \"ChainExpression\") {\n      node = node.expression;\n    }\n\n    return super.hasPropertyAsPrivateName(node);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"ChainExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"Property\" && node.kind === \"init\" && !node.method;\n  }\n\n  isObjectMethod(node) {\n    return node.method || node.kind === \"get\" || node.kind === \"set\";\n  }\n\n});\n\nclass TokContext {\n  constructor(token, preserveSpace) {\n    this.token = void 0;\n    this.preserveSpace = void 0;\n    this.token = token;\n    this.preserveSpace = !!preserveSpace;\n  }\n\n}\nconst types = {\n  brace: new TokContext(\"{\"),\n  j_oTag: new TokContext(\"<tag\"),\n  j_cTag: new TokContext(\"</tag\"),\n  j_expr: new TokContext(\"<tag>...</tag>\", true)\n};\n{\n  types.template = new TokContext(\"`\", true);\n}\n\nconst beforeExpr = true;\nconst startsExpr = true;\nconst isLoop = true;\nconst isAssign = true;\nconst prefix = true;\nconst postfix = true;\nclass ExportedTokenType {\n  constructor(label, conf = {}) {\n    this.label = void 0;\n    this.keyword = void 0;\n    this.beforeExpr = void 0;\n    this.startsExpr = void 0;\n    this.rightAssociative = void 0;\n    this.isLoop = void 0;\n    this.isAssign = void 0;\n    this.prefix = void 0;\n    this.postfix = void 0;\n    this.binop = void 0;\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.rightAssociative = !!conf.rightAssociative;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop != null ? conf.binop : null;\n    {\n      this.updateContext = null;\n    }\n  }\n\n}\nconst keywords$1 = new Map();\n\nfunction createKeyword(name, options = {}) {\n  options.keyword = name;\n  const token = createToken(name, options);\n  keywords$1.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return createToken(name, {\n    beforeExpr,\n    binop\n  });\n}\n\nlet tokenTypeCounter = -1;\nconst tokenTypes = [];\nconst tokenLabels = [];\nconst tokenBinops = [];\nconst tokenBeforeExprs = [];\nconst tokenStartsExprs = [];\nconst tokenPrefixes = [];\n\nfunction createToken(name, options = {}) {\n  var _options$binop, _options$beforeExpr, _options$startsExpr, _options$prefix;\n\n  ++tokenTypeCounter;\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop = options.binop) != null ? _options$binop : -1);\n  tokenBeforeExprs.push((_options$beforeExpr = options.beforeExpr) != null ? _options$beforeExpr : false);\n  tokenStartsExprs.push((_options$startsExpr = options.startsExpr) != null ? _options$startsExpr : false);\n  tokenPrefixes.push((_options$prefix = options.prefix) != null ? _options$prefix : false);\n  tokenTypes.push(new ExportedTokenType(name, options));\n  return tokenTypeCounter;\n}\n\nfunction createKeywordLike(name, options = {}) {\n  var _options$binop2, _options$beforeExpr2, _options$startsExpr2, _options$prefix2;\n\n  ++tokenTypeCounter;\n  keywords$1.set(name, tokenTypeCounter);\n  tokenLabels.push(name);\n  tokenBinops.push((_options$binop2 = options.binop) != null ? _options$binop2 : -1);\n  tokenBeforeExprs.push((_options$beforeExpr2 = options.beforeExpr) != null ? _options$beforeExpr2 : false);\n  tokenStartsExprs.push((_options$startsExpr2 = options.startsExpr) != null ? _options$startsExpr2 : false);\n  tokenPrefixes.push((_options$prefix2 = options.prefix) != null ? _options$prefix2 : false);\n  tokenTypes.push(new ExportedTokenType(\"name\", options));\n  return tokenTypeCounter;\n}\n\nconst tt = {\n  bracketL: createToken(\"[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketHashL: createToken(\"#[\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketBarL: createToken(\"[|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  bracketR: createToken(\"]\"),\n  bracketBarR: createToken(\"|]\"),\n  braceL: createToken(\"{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceBarL: createToken(\"{|\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceHashL: createToken(\"#{\", {\n    beforeExpr,\n    startsExpr\n  }),\n  braceR: createToken(\"}\", {\n    beforeExpr\n  }),\n  braceBarR: createToken(\"|}\"),\n  parenL: createToken(\"(\", {\n    beforeExpr,\n    startsExpr\n  }),\n  parenR: createToken(\")\"),\n  comma: createToken(\",\", {\n    beforeExpr\n  }),\n  semi: createToken(\";\", {\n    beforeExpr\n  }),\n  colon: createToken(\":\", {\n    beforeExpr\n  }),\n  doubleColon: createToken(\"::\", {\n    beforeExpr\n  }),\n  dot: createToken(\".\"),\n  question: createToken(\"?\", {\n    beforeExpr\n  }),\n  questionDot: createToken(\"?.\"),\n  arrow: createToken(\"=>\", {\n    beforeExpr\n  }),\n  template: createToken(\"template\"),\n  ellipsis: createToken(\"...\", {\n    beforeExpr\n  }),\n  backQuote: createToken(\"`\", {\n    startsExpr\n  }),\n  dollarBraceL: createToken(\"${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  templateTail: createToken(\"...`\", {\n    startsExpr\n  }),\n  templateNonTail: createToken(\"...${\", {\n    beforeExpr,\n    startsExpr\n  }),\n  at: createToken(\"@\"),\n  hash: createToken(\"#\", {\n    startsExpr\n  }),\n  interpreterDirective: createToken(\"#!...\"),\n  eq: createToken(\"=\", {\n    beforeExpr,\n    isAssign\n  }),\n  assign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  slashAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  xorAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  moduloAssign: createToken(\"_=\", {\n    beforeExpr,\n    isAssign\n  }),\n  incDec: createToken(\"++/--\", {\n    prefix,\n    postfix,\n    startsExpr\n  }),\n  bang: createToken(\"!\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  tilde: createToken(\"~\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  lt: createBinop(\"</>/<=/>=\", 7),\n  gt: createBinop(\"</>/<=/>=\", 7),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: createToken(\"+/-\", {\n    beforeExpr,\n    binop: 9,\n    prefix,\n    startsExpr\n  }),\n  modulo: createToken(\"%\", {\n    binop: 10,\n    startsExpr\n  }),\n  star: createToken(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: createToken(\"**\", {\n    beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr,\n    binop: 7\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _function: createKeyword(\"function\", {\n    startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr,\n    startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr,\n    prefix,\n    startsExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop,\n    beforeExpr\n  }),\n  _for: createKeyword(\"for\", {\n    isLoop\n  }),\n  _while: createKeyword(\"while\", {\n    isLoop\n  }),\n  _as: createKeywordLike(\"as\", {\n    startsExpr\n  }),\n  _assert: createKeywordLike(\"assert\", {\n    startsExpr\n  }),\n  _async: createKeywordLike(\"async\", {\n    startsExpr\n  }),\n  _await: createKeywordLike(\"await\", {\n    startsExpr\n  }),\n  _from: createKeywordLike(\"from\", {\n    startsExpr\n  }),\n  _get: createKeywordLike(\"get\", {\n    startsExpr\n  }),\n  _let: createKeywordLike(\"let\", {\n    startsExpr\n  }),\n  _meta: createKeywordLike(\"meta\", {\n    startsExpr\n  }),\n  _of: createKeywordLike(\"of\", {\n    startsExpr\n  }),\n  _sent: createKeywordLike(\"sent\", {\n    startsExpr\n  }),\n  _set: createKeywordLike(\"set\", {\n    startsExpr\n  }),\n  _static: createKeywordLike(\"static\", {\n    startsExpr\n  }),\n  _yield: createKeywordLike(\"yield\", {\n    startsExpr\n  }),\n  _asserts: createKeywordLike(\"asserts\", {\n    startsExpr\n  }),\n  _checks: createKeywordLike(\"checks\", {\n    startsExpr\n  }),\n  _exports: createKeywordLike(\"exports\", {\n    startsExpr\n  }),\n  _global: createKeywordLike(\"global\", {\n    startsExpr\n  }),\n  _implements: createKeywordLike(\"implements\", {\n    startsExpr\n  }),\n  _intrinsic: createKeywordLike(\"intrinsic\", {\n    startsExpr\n  }),\n  _infer: createKeywordLike(\"infer\", {\n    startsExpr\n  }),\n  _is: createKeywordLike(\"is\", {\n    startsExpr\n  }),\n  _mixins: createKeywordLike(\"mixins\", {\n    startsExpr\n  }),\n  _proto: createKeywordLike(\"proto\", {\n    startsExpr\n  }),\n  _require: createKeywordLike(\"require\", {\n    startsExpr\n  }),\n  _keyof: createKeywordLike(\"keyof\", {\n    startsExpr\n  }),\n  _readonly: createKeywordLike(\"readonly\", {\n    startsExpr\n  }),\n  _unique: createKeywordLike(\"unique\", {\n    startsExpr\n  }),\n  _abstract: createKeywordLike(\"abstract\", {\n    startsExpr\n  }),\n  _declare: createKeywordLike(\"declare\", {\n    startsExpr\n  }),\n  _enum: createKeywordLike(\"enum\", {\n    startsExpr\n  }),\n  _module: createKeywordLike(\"module\", {\n    startsExpr\n  }),\n  _namespace: createKeywordLike(\"namespace\", {\n    startsExpr\n  }),\n  _interface: createKeywordLike(\"interface\", {\n    startsExpr\n  }),\n  _type: createKeywordLike(\"type\", {\n    startsExpr\n  }),\n  _opaque: createKeywordLike(\"opaque\", {\n    startsExpr\n  }),\n  name: createToken(\"name\", {\n    startsExpr\n  }),\n  string: createToken(\"string\", {\n    startsExpr\n  }),\n  num: createToken(\"num\", {\n    startsExpr\n  }),\n  bigint: createToken(\"bigint\", {\n    startsExpr\n  }),\n  decimal: createToken(\"decimal\", {\n    startsExpr\n  }),\n  regexp: createToken(\"regexp\", {\n    startsExpr\n  }),\n  privateName: createToken(\"#name\", {\n    startsExpr\n  }),\n  eof: createToken(\"eof\"),\n  jsxName: createToken(\"jsxName\"),\n  jsxText: createToken(\"jsxText\", {\n    beforeExpr: true\n  }),\n  jsxTagStart: createToken(\"jsxTagStart\", {\n    startsExpr: true\n  }),\n  jsxTagEnd: createToken(\"jsxTagEnd\"),\n  placeholder: createToken(\"%%\", {\n    startsExpr: true\n  })\n};\nfunction tokenIsIdentifier(token) {\n  return token >= 89 && token <= 124;\n}\nfunction tokenKeywordOrIdentifierIsKeyword(token) {\n  return token <= 88;\n}\nfunction tokenIsKeywordOrIdentifier(token) {\n  return token >= 54 && token <= 124;\n}\nfunction tokenIsLiteralPropertyName(token) {\n  return token >= 54 && token <= 128;\n}\nfunction tokenComesBeforeExpression(token) {\n  return tokenBeforeExprs[token];\n}\nfunction tokenCanStartExpression(token) {\n  return tokenStartsExprs[token];\n}\nfunction tokenIsAssignment(token) {\n  return token >= 29 && token <= 33;\n}\nfunction tokenIsFlowInterfaceOrTypeOrOpaque(token) {\n  return token >= 121 && token <= 123;\n}\nfunction tokenIsLoop(token) {\n  return token >= 86 && token <= 88;\n}\nfunction tokenIsKeyword(token) {\n  return token >= 54 && token <= 88;\n}\nfunction tokenIsOperator(token) {\n  return token >= 37 && token <= 55;\n}\nfunction tokenIsPostfix(token) {\n  return token === 34;\n}\nfunction tokenIsPrefix(token) {\n  return tokenPrefixes[token];\n}\nfunction tokenIsTSTypeOperator(token) {\n  return token >= 113 && token <= 115;\n}\nfunction tokenIsTSDeclarationStart(token) {\n  return token >= 116 && token <= 122;\n}\nfunction tokenLabelName(token) {\n  return tokenLabels[token];\n}\nfunction tokenOperatorPrecedence(token) {\n  return tokenBinops[token];\n}\nfunction tokenIsRightAssociative(token) {\n  return token === 53;\n}\nfunction tokenIsTemplate(token) {\n  return token >= 24 && token <= 25;\n}\nfunction getExportedToken(token) {\n  return tokenTypes[token];\n}\nfunction isTokenType(obj) {\n  return typeof obj === \"number\";\n}\n{\n  tokenTypes[8].updateContext = context => {\n    context.pop();\n  };\n\n  tokenTypes[5].updateContext = tokenTypes[7].updateContext = tokenTypes[23].updateContext = context => {\n    context.push(types.brace);\n  };\n\n  tokenTypes[22].updateContext = context => {\n    if (context[context.length - 1] === types.template) {\n      context.pop();\n    } else {\n      context.push(types.template);\n    }\n  };\n\n  tokenTypes[134].updateContext = context => {\n    context.push(types.j_expr, types.j_oTag);\n  };\n}\n\nlet nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nlet nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\nconst nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nconst nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nconst astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nconst astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  let pos = 0x10000;\n\n  for (let i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nconst reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nconst keywords = new Set(reservedWords.keyword);\nconst reservedWordsStrictSet = new Set(reservedWords.strict);\nconst reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\nfunction isKeyword(word) {\n  return keywords.has(word);\n}\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\nconst reservedWordLikeSet = new Set([\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"eval\", \"arguments\", \"enum\", \"await\"]);\nfunction canBeReservedWord(word) {\n  return reservedWordLikeSet.has(word);\n}\n\nconst SCOPE_OTHER = 0b000000000,\n      SCOPE_PROGRAM = 0b000000001,\n      SCOPE_FUNCTION = 0b000000010,\n      SCOPE_ARROW = 0b000000100,\n      SCOPE_SIMPLE_CATCH = 0b000001000,\n      SCOPE_SUPER = 0b000010000,\n      SCOPE_DIRECT_SUPER = 0b000100000,\n      SCOPE_CLASS = 0b001000000,\n      SCOPE_STATIC_BLOCK = 0b010000000,\n      SCOPE_TS_MODULE = 0b100000000,\n      SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nconst BIND_KIND_VALUE = 0b000000000001,\n      BIND_KIND_TYPE = 0b000000000010,\n      BIND_SCOPE_VAR = 0b000000000100,\n      BIND_SCOPE_LEXICAL = 0b000000001000,\n      BIND_SCOPE_FUNCTION = 0b000000010000,\n      BIND_FLAGS_NONE = 0b000001000000,\n      BIND_FLAGS_CLASS = 0b000010000000,\n      BIND_FLAGS_TS_ENUM = 0b000100000000,\n      BIND_FLAGS_TS_CONST_ENUM = 0b001000000000,\n      BIND_FLAGS_TS_EXPORT_ONLY = 0b010000000000,\n      BIND_FLAGS_FLOW_DECLARE_FN = 0b100000000000;\nconst BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n      BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n      BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n      BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n      BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n      BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n      BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n      BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n      BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n      BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n      BIND_FLOW_DECLARE_FN = BIND_FLAGS_FLOW_DECLARE_FN;\nconst CLASS_ELEMENT_FLAG_STATIC = 0b100,\n      CLASS_ELEMENT_KIND_GETTER = 0b010,\n      CLASS_ELEMENT_KIND_SETTER = 0b001,\n      CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nconst CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n      CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n      CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n      CLASS_ELEMENT_OTHER = 0;\n\nclass Scope {\n  constructor(flags) {\n    this.var = new Set();\n    this.lexical = new Set();\n    this.functions = new Set();\n    this.flags = flags;\n  }\n\n}\nclass ScopeHandler {\n  constructor(raise, inModule) {\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  get inFunction() {\n    return (this.currentVarScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get allowSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_SUPER) > 0;\n  }\n\n  get allowDirectSuper() {\n    return (this.currentThisScopeFlags() & SCOPE_DIRECT_SUPER) > 0;\n  }\n\n  get inClass() {\n    return (this.currentThisScopeFlags() & SCOPE_CLASS) > 0;\n  }\n\n  get inClassAndNotInNonArrowFunction() {\n    const flags = this.currentThisScopeFlags();\n    return (flags & SCOPE_CLASS) > 0 && (flags & SCOPE_FUNCTION) === 0;\n  }\n\n  get inStaticBlock() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_STATIC_BLOCK) {\n        return true;\n      }\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS)) {\n        return false;\n      }\n    }\n  }\n\n  get inNonArrowFunction() {\n    return (this.currentThisScopeFlags() & SCOPE_FUNCTION) > 0;\n  }\n\n  get treatFunctionsAsVar() {\n    return this.treatFunctionsAsVarInScope(this.currentScope());\n  }\n\n  createScope(flags) {\n    return new Scope(flags);\n  }\n\n  enter(flags) {\n    this.scopeStack.push(this.createScope(flags));\n  }\n\n  exit() {\n    this.scopeStack.pop();\n  }\n\n  treatFunctionsAsVarInScope(scope) {\n    return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n  }\n\n  declareName(name, bindingType, pos) {\n    let scope = this.currentScope();\n\n    if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        scope.functions.add(name);\n      } else {\n        scope.lexical.add(name);\n      }\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        this.maybeExportDefined(scope, name);\n      }\n    } else if (bindingType & BIND_SCOPE_VAR) {\n      for (let i = this.scopeStack.length - 1; i >= 0; --i) {\n        scope = this.scopeStack[i];\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        scope.var.add(name);\n        this.maybeExportDefined(scope, name);\n        if (scope.flags & SCOPE_VAR) break;\n      }\n    }\n\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  maybeExportDefined(scope, name) {\n    if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n      this.undefinedExports.delete(name);\n    }\n  }\n\n  checkRedeclarationInScope(scope, name, bindingType, pos) {\n    if (this.isRedeclaredInScope(scope, name, bindingType)) {\n      this.raise(pos, ErrorMessages.VarRedeclaration, name);\n    }\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n    if (bindingType & BIND_SCOPE_LEXICAL) {\n      return scope.lexical.has(name) || scope.functions.has(name) || scope.var.has(name);\n    }\n\n    if (bindingType & BIND_SCOPE_FUNCTION) {\n      return scope.lexical.has(name) || !this.treatFunctionsAsVarInScope(scope) && scope.var.has(name);\n    }\n\n    return scope.lexical.has(name) && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical.values().next().value === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.has(name);\n  }\n\n  checkLocalExport(id) {\n    const {\n      name\n    } = id;\n    const topLevelScope = this.scopeStack[0];\n\n    if (!topLevelScope.lexical.has(name) && !topLevelScope.var.has(name) && !topLevelScope.functions.has(name)) {\n      this.undefinedExports.set(name, id.start);\n    }\n  }\n\n  currentScope() {\n    return this.scopeStack[this.scopeStack.length - 1];\n  }\n\n  currentVarScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & SCOPE_VAR) {\n        return flags;\n      }\n    }\n  }\n\n  currentThisScopeFlags() {\n    for (let i = this.scopeStack.length - 1;; i--) {\n      const {\n        flags\n      } = this.scopeStack[i];\n\n      if (flags & (SCOPE_VAR | SCOPE_CLASS) && !(flags & SCOPE_ARROW)) {\n        return flags;\n      }\n    }\n  }\n\n}\n\nclass FlowScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.declareFunctions = new Set();\n  }\n\n}\n\nclass FlowScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new FlowScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      this.checkRedeclarationInScope(scope, name, bindingType, pos);\n      this.maybeExportDefined(scope, name);\n      scope.declareFunctions.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (super.isRedeclaredInScope(...arguments)) return true;\n\n    if (bindingType & BIND_FLAGS_FLOW_DECLARE_FN) {\n      return !scope.declareFunctions.has(name) && (scope.lexical.has(name) || scope.functions.has(name));\n    }\n\n    return false;\n  }\n\n  checkLocalExport(id) {\n    if (!this.scopeStack[0].declareFunctions.has(id.name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nclass State {\n  constructor() {\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.lineStart = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.hasFlowComment = false;\n    this.isAmbientContext = false;\n    this.inAbstractClass = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.commentStack = [];\n    this.pos = 0;\n    this.type = 131;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types.brace];\n    this.canStartJSXElement = true;\n    this.containsEsc = false;\n    this.strictErrors = new Map();\n    this.tokensLength = 0;\n  }\n\n  init({\n    strictMode,\n    sourceType,\n    startLine,\n    startColumn\n  }) {\n    this.strict = strictMode === false ? false : strictMode === true ? true : sourceType === \"module\";\n    this.curLine = startLine;\n    this.lineStart = -startColumn;\n    this.startLoc = this.endLoc = new Position(startLine, startColumn);\n  }\n\n  curPosition() {\n    return new Position(this.curLine, this.pos - this.lineStart);\n  }\n\n  clone(skipArrays) {\n    const state = new State();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n      let val = this[key];\n\n      if (!skipArrays && Array.isArray(val)) {\n        val = val.slice();\n      }\n\n      state[key] = val;\n    }\n\n    return state;\n  }\n\n}\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\nconst VALID_REGEX_FLAGS = new Set([103, 109, 115, 105, 121, 117, 100]);\nconst forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nconst allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [...allowedNumericSeparatorSiblings.bin, 50, 51, 52, 53, 54, 55];\nallowedNumericSeparatorSiblings.dec = [...allowedNumericSeparatorSiblings.oct, 56, 57];\nallowedNumericSeparatorSiblings.hex = [...allowedNumericSeparatorSiblings.dec, 65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102];\nclass Token {\n  constructor(state) {\n    this.type = state.type;\n    this.value = state.value;\n    this.start = state.start;\n    this.end = state.end;\n    this.loc = new SourceLocation(state.startLoc, state.endLoc);\n  }\n\n}\nclass Tokenizer extends ParserError {\n  constructor(options, input) {\n    super();\n    this.isLookahead = void 0;\n    this.tokens = [];\n    this.state = new State();\n    this.state.init(options);\n    this.input = input;\n    this.length = input.length;\n    this.isLookahead = false;\n  }\n\n  pushToken(token) {\n    this.tokens.length = this.state.tokensLength;\n    this.tokens.push(token);\n    ++this.state.tokensLength;\n  }\n\n  next() {\n    this.checkKeywordEscapes();\n\n    if (this.options.tokens) {\n      this.pushToken(new Token(this.state));\n    }\n\n    this.state.lastTokEnd = this.state.end;\n    this.state.lastTokStart = this.state.start;\n    this.state.lastTokEndLoc = this.state.endLoc;\n    this.state.lastTokStartLoc = this.state.startLoc;\n    this.nextToken();\n  }\n\n  eat(type) {\n    if (this.match(type)) {\n      this.next();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  match(type) {\n    return this.state.type === type;\n  }\n\n  createLookaheadState(state) {\n    return {\n      pos: state.pos,\n      value: null,\n      type: state.type,\n      start: state.start,\n      end: state.end,\n      lastTokEnd: state.end,\n      context: [this.curContext()],\n      inType: state.inType\n    };\n  }\n\n  lookahead() {\n    const old = this.state;\n    this.state = this.createLookaheadState(old);\n    this.isLookahead = true;\n    this.nextToken();\n    this.isLookahead = false;\n    const curr = this.state;\n    this.state = old;\n    return curr;\n  }\n\n  nextTokenStart() {\n    return this.nextTokenStartSince(this.state.pos);\n  }\n\n  nextTokenStartSince(pos) {\n    skipWhiteSpace.lastIndex = pos;\n    return skipWhiteSpace.test(this.input) ? skipWhiteSpace.lastIndex : pos;\n  }\n\n  lookaheadCharCode() {\n    return this.input.charCodeAt(this.nextTokenStart());\n  }\n\n  codePointAtPos(pos) {\n    let cp = this.input.charCodeAt(pos);\n\n    if ((cp & 0xfc00) === 0xd800 && ++pos < this.input.length) {\n      const trail = this.input.charCodeAt(pos);\n\n      if ((trail & 0xfc00) === 0xdc00) {\n        cp = 0x10000 + ((cp & 0x3ff) << 10) + (trail & 0x3ff);\n      }\n    }\n\n    return cp;\n  }\n\n  setStrict(strict) {\n    this.state.strict = strict;\n\n    if (strict) {\n      this.state.strictErrors.forEach((message, pos) => this.raise(pos, message));\n      this.state.strictErrors.clear();\n    }\n  }\n\n  curContext() {\n    return this.state.context[this.state.context.length - 1];\n  }\n\n  nextToken() {\n    this.skipSpace();\n    this.state.start = this.state.pos;\n    if (!this.isLookahead) this.state.startLoc = this.state.curPosition();\n\n    if (this.state.pos >= this.length) {\n      this.finishToken(131);\n      return;\n    }\n\n    this.getTokenFromCode(this.codePointAtPos(this.state.pos));\n  }\n\n  skipBlockComment() {\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    const start = this.state.pos;\n    const end = this.input.indexOf(\"*/\", start + 2);\n    if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n    this.state.pos = end + 2;\n    lineBreakG.lastIndex = start + 2;\n\n    while (lineBreakG.test(this.input) && lineBreakG.lastIndex <= end) {\n      ++this.state.curLine;\n      this.state.lineStart = lineBreakG.lastIndex;\n    }\n\n    if (this.isLookahead) return;\n    const comment = {\n      type: \"CommentBlock\",\n      value: this.input.slice(start + 2, end),\n      start,\n      end: end + 2,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipLineComment(startSkip) {\n    const start = this.state.pos;\n    let startLoc;\n    if (!this.isLookahead) startLoc = this.state.curPosition();\n    let ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n    if (this.state.pos < this.length) {\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n    }\n\n    if (this.isLookahead) return;\n    const end = this.state.pos;\n    const value = this.input.slice(start + startSkip, end);\n    const comment = {\n      type: \"CommentLine\",\n      value,\n      start,\n      end,\n      loc: new SourceLocation(startLoc, this.state.curPosition())\n    };\n    if (this.options.tokens) this.pushToken(comment);\n    return comment;\n  }\n\n  skipSpace() {\n    const spaceStart = this.state.pos;\n    const comments = [];\n\n    loop: while (this.state.pos < this.length) {\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 32:\n        case 160:\n        case 9:\n          ++this.state.pos;\n          break;\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n        case 8232:\n        case 8233:\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          break;\n\n        case 47:\n          switch (this.input.charCodeAt(this.state.pos + 1)) {\n            case 42:\n              {\n                const comment = this.skipBlockComment();\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            case 47:\n              {\n                const comment = this.skipLineComment(2);\n\n                if (comment !== undefined) {\n                  this.addComment(comment);\n                  if (this.options.attachComment) comments.push(comment);\n                }\n\n                break;\n              }\n\n            default:\n              break loop;\n          }\n\n          break;\n\n        default:\n          if (isWhitespace(ch)) {\n            ++this.state.pos;\n          } else if (ch === 45 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 45 && this.input.charCodeAt(pos + 2) === 62 && (spaceStart === 0 || this.state.lineStart > spaceStart)) {\n              const comment = this.skipLineComment(3);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else if (ch === 60 && !this.inModule) {\n            const pos = this.state.pos;\n\n            if (this.input.charCodeAt(pos + 1) === 33 && this.input.charCodeAt(pos + 2) === 45 && this.input.charCodeAt(pos + 3) === 45) {\n              const comment = this.skipLineComment(4);\n\n              if (comment !== undefined) {\n                this.addComment(comment);\n                if (this.options.attachComment) comments.push(comment);\n              }\n            } else {\n              break loop;\n            }\n          } else {\n            break loop;\n          }\n\n      }\n    }\n\n    if (comments.length > 0) {\n      const end = this.state.pos;\n      const CommentWhitespace = {\n        start: spaceStart,\n        end,\n        comments,\n        leadingNode: null,\n        trailingNode: null,\n        containingNode: null\n      };\n      this.state.commentStack.push(CommentWhitespace);\n    }\n  }\n\n  finishToken(type, val) {\n    this.state.end = this.state.pos;\n    const prevType = this.state.type;\n    this.state.type = type;\n    this.state.value = val;\n\n    if (!this.isLookahead) {\n      this.state.endLoc = this.state.curPosition();\n      this.updateContext(prevType);\n    }\n  }\n\n  replaceToken(type) {\n    this.state.type = type;\n    this.updateContext();\n  }\n\n  readToken_numberSign() {\n    if (this.state.pos === 0 && this.readToken_interpreter()) {\n      return;\n    }\n\n    const nextPos = this.state.pos + 1;\n    const next = this.codePointAtPos(nextPos);\n\n    if (next >= 48 && next <= 57) {\n      throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n    }\n\n    if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n      this.expectPlugin(\"recordAndTuple\");\n\n      if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n        throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n      }\n\n      this.state.pos += 2;\n\n      if (next === 123) {\n        this.finishToken(7);\n      } else {\n        this.finishToken(1);\n      }\n    } else if (isIdentifierStart(next)) {\n      ++this.state.pos;\n      this.finishToken(130, this.readWord1(next));\n    } else if (next === 92) {\n      ++this.state.pos;\n      this.finishToken(130, this.readWord1());\n    } else {\n      this.finishOp(27, 1);\n    }\n  }\n\n  readToken_dot() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next >= 48 && next <= 57) {\n      this.readNumber(true);\n      return;\n    }\n\n    if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n      this.state.pos += 3;\n      this.finishToken(21);\n    } else {\n      ++this.state.pos;\n      this.finishToken(16);\n    }\n  }\n\n  readToken_slash() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(31, 2);\n    } else {\n      this.finishOp(52, 1);\n    }\n  }\n\n  readToken_interpreter() {\n    if (this.state.pos !== 0 || this.length < 2) return false;\n    let ch = this.input.charCodeAt(this.state.pos + 1);\n    if (ch !== 33) return false;\n    const start = this.state.pos;\n    this.state.pos += 1;\n\n    while (!isNewLine(ch) && ++this.state.pos < this.length) {\n      ch = this.input.charCodeAt(this.state.pos);\n    }\n\n    const value = this.input.slice(start + 2, this.state.pos);\n    this.finishToken(28, value);\n    return true;\n  }\n\n  readToken_mult_modulo(code) {\n    let type = code === 42 ? 51 : 50;\n    let width = 1;\n    let next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 42) {\n      width++;\n      next = this.input.charCodeAt(this.state.pos + 2);\n      type = 53;\n    }\n\n    if (next === 61 && !this.state.inType) {\n      width++;\n      type = code === 37 ? 33 : 30;\n    }\n\n    this.finishOp(type, width);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(code === 124 ? 39 : 40, 2);\n      }\n\n      return;\n    }\n\n    if (code === 124) {\n      if (next === 62) {\n        this.finishOp(37, 2);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(9);\n        return;\n      }\n\n      if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n          throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n        }\n\n        this.state.pos += 2;\n        this.finishToken(4);\n        return;\n      }\n    }\n\n    if (next === 61) {\n      this.finishOp(30, 2);\n      return;\n    }\n\n    this.finishOp(code === 124 ? 41 : 43, 1);\n  }\n\n  readToken_caret() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61 && !this.state.inType) {\n      this.finishOp(32, 2);\n    } else {\n      this.finishOp(42, 1);\n    }\n  }\n\n  readToken_plus_min(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === code) {\n      this.finishOp(34, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(30, 2);\n    } else {\n      this.finishOp(49, 1);\n    }\n  }\n\n  readToken_lt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === 60) {\n      if (this.input.charCodeAt(pos + 2) === 61) {\n        this.finishOp(30, 3);\n        return;\n      }\n\n      this.finishOp(48, 2);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(47, 2);\n      return;\n    }\n\n    this.finishOp(45, 1);\n  }\n\n  readToken_gt() {\n    const {\n      pos\n    } = this.state;\n    const next = this.input.charCodeAt(pos + 1);\n\n    if (next === 62) {\n      const size = this.input.charCodeAt(pos + 2) === 62 ? 3 : 2;\n\n      if (this.input.charCodeAt(pos + size) === 61) {\n        this.finishOp(30, size + 1);\n        return;\n      }\n\n      this.finishOp(48, size);\n      return;\n    }\n\n    if (next === 61) {\n      this.finishOp(47, 2);\n      return;\n    }\n\n    this.finishOp(46, 1);\n  }\n\n  readToken_eq_excl(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (next === 61) {\n      this.finishOp(44, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n      return;\n    }\n\n    if (code === 61 && next === 62) {\n      this.state.pos += 2;\n      this.finishToken(19);\n      return;\n    }\n\n    this.finishOp(code === 61 ? 29 : 35, 1);\n  }\n\n  readToken_question() {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n    const next2 = this.input.charCodeAt(this.state.pos + 2);\n\n    if (next === 63) {\n      if (next2 === 61) {\n        this.finishOp(30, 3);\n      } else {\n        this.finishOp(38, 2);\n      }\n    } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n      this.state.pos += 2;\n      this.finishToken(18);\n    } else {\n      ++this.state.pos;\n      this.finishToken(17);\n    }\n  }\n\n  getTokenFromCode(code) {\n    switch (code) {\n      case 46:\n        this.readToken_dot();\n        return;\n\n      case 40:\n        ++this.state.pos;\n        this.finishToken(10);\n        return;\n\n      case 41:\n        ++this.state.pos;\n        this.finishToken(11);\n        return;\n\n      case 59:\n        ++this.state.pos;\n        this.finishToken(13);\n        return;\n\n      case 44:\n        ++this.state.pos;\n        this.finishToken(12);\n        return;\n\n      case 91:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(0);\n        }\n\n        return;\n\n      case 93:\n        ++this.state.pos;\n        this.finishToken(3);\n        return;\n\n      case 123:\n        if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n          }\n\n          this.state.pos += 2;\n          this.finishToken(6);\n        } else {\n          ++this.state.pos;\n          this.finishToken(5);\n        }\n\n        return;\n\n      case 125:\n        ++this.state.pos;\n        this.finishToken(8);\n        return;\n\n      case 58:\n        if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n          this.finishOp(15, 2);\n        } else {\n          ++this.state.pos;\n          this.finishToken(14);\n        }\n\n        return;\n\n      case 63:\n        this.readToken_question();\n        return;\n\n      case 96:\n        this.readTemplateToken();\n        return;\n\n      case 48:\n        {\n          const next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (next === 120 || next === 88) {\n            this.readRadixNumber(16);\n            return;\n          }\n\n          if (next === 111 || next === 79) {\n            this.readRadixNumber(8);\n            return;\n          }\n\n          if (next === 98 || next === 66) {\n            this.readRadixNumber(2);\n            return;\n          }\n        }\n\n      case 49:\n      case 50:\n      case 51:\n      case 52:\n      case 53:\n      case 54:\n      case 55:\n      case 56:\n      case 57:\n        this.readNumber(false);\n        return;\n\n      case 34:\n      case 39:\n        this.readString(code);\n        return;\n\n      case 47:\n        this.readToken_slash();\n        return;\n\n      case 37:\n      case 42:\n        this.readToken_mult_modulo(code);\n        return;\n\n      case 124:\n      case 38:\n        this.readToken_pipe_amp(code);\n        return;\n\n      case 94:\n        this.readToken_caret();\n        return;\n\n      case 43:\n      case 45:\n        this.readToken_plus_min(code);\n        return;\n\n      case 60:\n        this.readToken_lt();\n        return;\n\n      case 62:\n        this.readToken_gt();\n        return;\n\n      case 61:\n      case 33:\n        this.readToken_eq_excl(code);\n        return;\n\n      case 126:\n        this.finishOp(36, 1);\n        return;\n\n      case 64:\n        ++this.state.pos;\n        this.finishToken(26);\n        return;\n\n      case 35:\n        this.readToken_numberSign();\n        return;\n\n      case 92:\n        this.readWord();\n        return;\n\n      default:\n        if (isIdentifierStart(code)) {\n          this.readWord(code);\n          return;\n        }\n\n    }\n\n    throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n  }\n\n  finishOp(type, size) {\n    const str = this.input.slice(this.state.pos, this.state.pos + size);\n    this.state.pos += size;\n    this.finishToken(type, str);\n  }\n\n  readRegexp() {\n    const start = this.state.start + 1;\n    let escaped, inClass;\n    let {\n      pos\n    } = this.state;\n\n    for (;; ++pos) {\n      if (pos >= this.length) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      const ch = this.input.charCodeAt(pos);\n\n      if (isNewLine(ch)) {\n        throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n      }\n\n      if (escaped) {\n        escaped = false;\n      } else {\n        if (ch === 91) {\n          inClass = true;\n        } else if (ch === 93 && inClass) {\n          inClass = false;\n        } else if (ch === 47 && !inClass) {\n          break;\n        }\n\n        escaped = ch === 92;\n      }\n    }\n\n    const content = this.input.slice(start, pos);\n    ++pos;\n    let mods = \"\";\n\n    while (pos < this.length) {\n      const cp = this.codePointAtPos(pos);\n      const char = String.fromCharCode(cp);\n\n      if (VALID_REGEX_FLAGS.has(cp)) {\n        if (mods.includes(char)) {\n          this.raise(pos + 1, ErrorMessages.DuplicateRegExpFlags);\n        }\n      } else if (isIdentifierChar(cp) || cp === 92) {\n        this.raise(pos + 1, ErrorMessages.MalformedRegExpFlags);\n      } else {\n        break;\n      }\n\n      ++pos;\n      mods += char;\n    }\n\n    this.state.pos = pos;\n    this.finishToken(129, {\n      pattern: content,\n      flags: mods\n    });\n  }\n\n  readInt(radix, len, forceLen, allowNumSeparator = true) {\n    const start = this.state.pos;\n    const forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n    const allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n    let invalid = false;\n    let total = 0;\n\n    for (let i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n      const code = this.input.charCodeAt(this.state.pos);\n      let val;\n\n      if (code === 95) {\n        const prev = this.input.charCodeAt(this.state.pos - 1);\n        const next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (allowedSiblings.indexOf(next) === -1) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n        }\n\n        if (!allowNumSeparator) {\n          this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n        }\n\n        ++this.state.pos;\n        continue;\n      }\n\n      if (code >= 97) {\n        val = code - 97 + 10;\n      } else if (code >= 65) {\n        val = code - 65 + 10;\n      } else if (_isDigit(code)) {\n        val = code - 48;\n      } else {\n        val = Infinity;\n      }\n\n      if (val >= radix) {\n        if (this.options.errorRecovery && val <= 9) {\n          val = 0;\n          this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n        } else if (forceLen) {\n          val = 0;\n          invalid = true;\n        } else {\n          break;\n        }\n      }\n\n      ++this.state.pos;\n      total = total * radix + val;\n    }\n\n    if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n      return null;\n    }\n\n    return total;\n  }\n\n  readRadixNumber(radix) {\n    const start = this.state.pos;\n    let isBigInt = false;\n    this.state.pos += 2;\n    const val = this.readInt(radix);\n\n    if (val == null) {\n      this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n    }\n\n    const next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 110) {\n      ++this.state.pos;\n      isBigInt = true;\n    } else if (next === 109) {\n      throw this.raise(start, ErrorMessages.InvalidDecimal);\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    if (isBigInt) {\n      const str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n      this.finishToken(127, str);\n      return;\n    }\n\n    this.finishToken(126, val);\n  }\n\n  readNumber(startsWithDot) {\n    const start = this.state.pos;\n    let isFloat = false;\n    let isBigInt = false;\n    let isDecimal = false;\n    let hasExponent = false;\n    let isOctal = false;\n\n    if (!startsWithDot && this.readInt(10) === null) {\n      this.raise(start, ErrorMessages.InvalidNumber);\n    }\n\n    const hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n    if (hasLeadingZero) {\n      const integer = this.input.slice(start, this.state.pos);\n      this.recordStrictModeErrors(start, ErrorMessages.StrictOctalLiteral);\n\n      if (!this.state.strict) {\n        const underscorePos = integer.indexOf(\"_\");\n\n        if (underscorePos > 0) {\n          this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n        }\n      }\n\n      isOctal = hasLeadingZero && !/[89]/.test(integer);\n    }\n\n    let next = this.input.charCodeAt(this.state.pos);\n\n    if (next === 46 && !isOctal) {\n      ++this.state.pos;\n      this.readInt(10);\n      isFloat = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if ((next === 69 || next === 101) && !isOctal) {\n      next = this.input.charCodeAt(++this.state.pos);\n\n      if (next === 43 || next === 45) {\n        ++this.state.pos;\n      }\n\n      if (this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n      }\n\n      isFloat = true;\n      hasExponent = true;\n      next = this.input.charCodeAt(this.state.pos);\n    }\n\n    if (next === 110) {\n      if (isFloat || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n      }\n\n      ++this.state.pos;\n      isBigInt = true;\n    }\n\n    if (next === 109) {\n      this.expectPlugin(\"decimal\", this.state.pos);\n\n      if (hasExponent || hasLeadingZero) {\n        this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      ++this.state.pos;\n      isDecimal = true;\n    }\n\n    if (isIdentifierStart(this.codePointAtPos(this.state.pos))) {\n      throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n    }\n\n    const str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n    if (isBigInt) {\n      this.finishToken(127, str);\n      return;\n    }\n\n    if (isDecimal) {\n      this.finishToken(128, str);\n      return;\n    }\n\n    const val = isOctal ? parseInt(str, 8) : parseFloat(str);\n    this.finishToken(126, val);\n  }\n\n  readCodePoint(throwOnInvalid) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let code;\n\n    if (ch === 123) {\n      const codePos = ++this.state.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n      ++this.state.pos;\n\n      if (code !== null && code > 0x10ffff) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidCodePoint);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      code = this.readHexChar(4, false, throwOnInvalid);\n    }\n\n    return code;\n  }\n\n  readString(quote) {\n    let out = \"\",\n        chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.state.pos;\n      } else if (ch === 8232 || ch === 8233) {\n        ++this.state.pos;\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    this.finishToken(125, out);\n  }\n\n  readTemplateContinuation() {\n    if (!this.match(8)) {\n      this.unexpected(this.state.start, 8);\n    }\n\n    this.state.pos--;\n    this.readTemplateToken();\n  }\n\n  readTemplateToken() {\n    let out = \"\",\n        chunkStart = this.state.pos,\n        containsInvalid = false;\n    ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start + 1, ErrorMessages.UnterminatedTemplate);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      if (ch === 96) {\n        ++this.state.pos;\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(24, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n        this.state.pos += 2;\n        out += this.input.slice(chunkStart, this.state.pos);\n        this.finishToken(25, containsInvalid ? null : out);\n        return;\n      }\n\n      if (ch === 92) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        const escaped = this.readEscapedChar(true);\n\n        if (escaped === null) {\n          containsInvalid = true;\n        } else {\n          out += escaped;\n        }\n\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        ++this.state.pos;\n\n        switch (ch) {\n          case 13:\n            if (this.input.charCodeAt(this.state.pos) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n            out += \"\\n\";\n            break;\n\n          default:\n            out += String.fromCharCode(ch);\n            break;\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n  }\n\n  recordStrictModeErrors(pos, message) {\n    if (this.state.strict && !this.state.strictErrors.has(pos)) {\n      this.raise(pos, message);\n    } else {\n      this.state.strictErrors.set(pos, message);\n    }\n  }\n\n  readEscapedChar(inTemplate) {\n    const throwOnInvalid = !inTemplate;\n    const ch = this.input.charCodeAt(++this.state.pos);\n    ++this.state.pos;\n\n    switch (ch) {\n      case 110:\n        return \"\\n\";\n\n      case 114:\n        return \"\\r\";\n\n      case 120:\n        {\n          const code = this.readHexChar(2, false, throwOnInvalid);\n          return code === null ? null : String.fromCharCode(code);\n        }\n\n      case 117:\n        {\n          const code = this.readCodePoint(throwOnInvalid);\n          return code === null ? null : String.fromCodePoint(code);\n        }\n\n      case 116:\n        return \"\\t\";\n\n      case 98:\n        return \"\\b\";\n\n      case 118:\n        return \"\\u000b\";\n\n      case 102:\n        return \"\\f\";\n\n      case 13:\n        if (this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n        }\n\n      case 10:\n        this.state.lineStart = this.state.pos;\n        ++this.state.curLine;\n\n      case 8232:\n      case 8233:\n        return \"\";\n\n      case 56:\n      case 57:\n        if (inTemplate) {\n          return null;\n        } else {\n          this.recordStrictModeErrors(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n        }\n\n      default:\n        if (ch >= 48 && ch <= 55) {\n          const codePos = this.state.pos - 1;\n          const match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n          let octalStr = match[0];\n          let octal = parseInt(octalStr, 8);\n\n          if (octal > 255) {\n            octalStr = octalStr.slice(0, -1);\n            octal = parseInt(octalStr, 8);\n          }\n\n          this.state.pos += octalStr.length - 1;\n          const next = this.input.charCodeAt(this.state.pos);\n\n          if (octalStr !== \"0\" || next === 56 || next === 57) {\n            if (inTemplate) {\n              return null;\n            } else {\n              this.recordStrictModeErrors(codePos, ErrorMessages.StrictNumericEscape);\n            }\n          }\n\n          return String.fromCharCode(octal);\n        }\n\n        return String.fromCharCode(ch);\n    }\n  }\n\n  readHexChar(len, forceLen, throwOnInvalid) {\n    const codePos = this.state.pos;\n    const n = this.readInt(16, len, forceLen, false);\n\n    if (n === null) {\n      if (throwOnInvalid) {\n        this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n      } else {\n        this.state.pos = codePos - 1;\n      }\n    }\n\n    return n;\n  }\n\n  readWord1(firstCode) {\n    this.state.containsEsc = false;\n    let word = \"\";\n    const start = this.state.pos;\n    let chunkStart = this.state.pos;\n\n    if (firstCode !== undefined) {\n      this.state.pos += firstCode <= 0xffff ? 1 : 2;\n    }\n\n    while (this.state.pos < this.length) {\n      const ch = this.codePointAtPos(this.state.pos);\n\n      if (isIdentifierChar(ch)) {\n        this.state.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) {\n        this.state.containsEsc = true;\n        word += this.input.slice(chunkStart, this.state.pos);\n        const escStart = this.state.pos;\n        const identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n        if (this.input.charCodeAt(++this.state.pos) !== 117) {\n          this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n          chunkStart = this.state.pos - 1;\n          continue;\n        }\n\n        ++this.state.pos;\n        const esc = this.readCodePoint(true);\n\n        if (esc !== null) {\n          if (!identifierCheck(esc)) {\n            this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n          }\n\n          word += String.fromCodePoint(esc);\n        }\n\n        chunkStart = this.state.pos;\n      } else {\n        break;\n      }\n    }\n\n    return word + this.input.slice(chunkStart, this.state.pos);\n  }\n\n  readWord(firstCode) {\n    const word = this.readWord1(firstCode);\n    const type = keywords$1.get(word);\n\n    if (type !== undefined) {\n      this.finishToken(type, tokenLabelName(type));\n    } else {\n      this.finishToken(124, word);\n    }\n  }\n\n  checkKeywordEscapes() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsKeyword(type) && this.state.containsEsc) {\n      this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, tokenLabelName(type));\n    }\n  }\n\n  updateContext(prevType) {}\n\n}\n\nclass ClassScope {\n  constructor() {\n    this.privateNames = new Set();\n    this.loneAccessors = new Map();\n    this.undefinedPrivateNames = new Map();\n  }\n\n}\nclass ClassScopeHandler {\n  constructor(raise) {\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  current() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  enter() {\n    this.stack.push(new ClassScope());\n  }\n\n  exit() {\n    const oldClassScope = this.stack.pop();\n    const current = this.current();\n\n    for (const [name, pos] of Array.from(oldClassScope.undefinedPrivateNames)) {\n      if (current) {\n        if (!current.undefinedPrivateNames.has(name)) {\n          current.undefinedPrivateNames.set(name, pos);\n        }\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }\n\n  declarePrivateName(name, elementType, pos) {\n    const {\n      privateNames,\n      loneAccessors,\n      undefinedPrivateNames\n    } = this.current();\n    let redefined = privateNames.has(name);\n\n    if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n      const accessor = redefined && loneAccessors.get(name);\n\n      if (accessor) {\n        const oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n        const newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n        const oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n        const newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n        redefined = oldKind === newKind || oldStatic !== newStatic;\n        if (!redefined) loneAccessors.delete(name);\n      } else if (!redefined) {\n        loneAccessors.set(name, elementType);\n      }\n    }\n\n    if (redefined) {\n      this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n    }\n\n    privateNames.add(name);\n    undefinedPrivateNames.delete(name);\n  }\n\n  usePrivateName(name, pos) {\n    let classScope;\n\n    for (classScope of this.stack) {\n      if (classScope.privateNames.has(name)) return;\n    }\n\n    if (classScope) {\n      classScope.undefinedPrivateNames.set(name, pos);\n    } else {\n      this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n    }\n  }\n\n}\n\nconst kExpression = 0,\n      kMaybeArrowParameterDeclaration = 1,\n      kMaybeAsyncArrowParameterDeclaration = 2,\n      kParameterDeclaration = 3;\n\nclass ExpressionScope {\n  constructor(type = kExpression) {\n    this.type = void 0;\n    this.type = type;\n  }\n\n  canBeArrowParameterDeclaration() {\n    return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n  }\n\n  isCertainlyParameterDeclaration() {\n    return this.type === kParameterDeclaration;\n  }\n\n}\n\nclass ArrowHeadParsingScope extends ExpressionScope {\n  constructor(type) {\n    super(type);\n    this.errors = new Map();\n  }\n\n  recordDeclarationError(pos, template) {\n    this.errors.set(pos, template);\n  }\n\n  clearDeclarationError(pos) {\n    this.errors.delete(pos);\n  }\n\n  iterateErrors(iterator) {\n    this.errors.forEach(iterator);\n  }\n\n}\n\nclass ExpressionScopeHandler {\n  constructor(raise) {\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  enter(scope) {\n    this.stack.push(scope);\n  }\n\n  exit() {\n    this.stack.pop();\n  }\n\n  recordParameterInitializerError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (!scope.isCertainlyParameterDeclaration()) {\n      if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, template);\n      } else {\n        return;\n      }\n\n      scope = stack[--i];\n    }\n\n    this.raise(pos, template);\n  }\n\n  recordParenthesizedIdentifierError(pos, template) {\n    const {\n      stack\n    } = this;\n    const scope = stack[stack.length - 1];\n\n    if (scope.isCertainlyParameterDeclaration()) {\n      this.raise(pos, template);\n    } else if (scope.canBeArrowParameterDeclaration()) {\n      scope.recordDeclarationError(pos, template);\n    } else {\n      return;\n    }\n  }\n\n  recordAsyncArrowParametersError(pos, template) {\n    const {\n      stack\n    } = this;\n    let i = stack.length - 1;\n    let scope = stack[i];\n\n    while (scope.canBeArrowParameterDeclaration()) {\n      if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n        scope.recordDeclarationError(pos, template);\n      }\n\n      scope = stack[--i];\n    }\n  }\n\n  validateAsPattern() {\n    const {\n      stack\n    } = this;\n    const currentScope = stack[stack.length - 1];\n    if (!currentScope.canBeArrowParameterDeclaration()) return;\n    currentScope.iterateErrors((template, pos) => {\n      this.raise(pos, template);\n      let i = stack.length - 2;\n      let scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        scope.clearDeclarationError(pos);\n        scope = stack[--i];\n      }\n    });\n  }\n\n}\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nconst PARAM = 0b0000,\n      PARAM_YIELD = 0b0001,\n      PARAM_AWAIT = 0b0010,\n      PARAM_RETURN = 0b0100,\n      PARAM_IN = 0b1000;\nclass ProductionParameterHandler {\n  constructor() {\n    this.stacks = [];\n  }\n\n  enter(flags) {\n    this.stacks.push(flags);\n  }\n\n  exit() {\n    this.stacks.pop();\n  }\n\n  currentFlags() {\n    return this.stacks[this.stacks.length - 1];\n  }\n\n  get hasAwait() {\n    return (this.currentFlags() & PARAM_AWAIT) > 0;\n  }\n\n  get hasYield() {\n    return (this.currentFlags() & PARAM_YIELD) > 0;\n  }\n\n  get hasReturn() {\n    return (this.currentFlags() & PARAM_RETURN) > 0;\n  }\n\n  get hasIn() {\n    return (this.currentFlags() & PARAM_IN) > 0;\n  }\n\n}\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nclass UtilParser extends Tokenizer {\n  addExtra(node, key, val) {\n    if (!node) return;\n    const extra = node.extra = node.extra || {};\n    extra[key] = val;\n  }\n\n  isContextual(token) {\n    return this.state.type === token && !this.state.containsEsc;\n  }\n\n  isUnparsedContextual(nameStart, name) {\n    const nameEnd = nameStart + name.length;\n\n    if (this.input.slice(nameStart, nameEnd) === name) {\n      const nextCh = this.input.charCodeAt(nameEnd);\n      return !(isIdentifierChar(nextCh) || (nextCh & 0xfc00) === 0xd800);\n    }\n\n    return false;\n  }\n\n  isLookaheadContextual(name) {\n    const next = this.nextTokenStart();\n    return this.isUnparsedContextual(next, name);\n  }\n\n  eatContextual(token) {\n    if (this.isContextual(token)) {\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  expectContextual(token, template) {\n    if (!this.eatContextual(token)) this.unexpected(null, template);\n  }\n\n  canInsertSemicolon() {\n    return this.match(131) || this.match(8) || this.hasPrecedingLineBreak();\n  }\n\n  hasPrecedingLineBreak() {\n    return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n  }\n\n  hasFollowingLineBreak() {\n    skipWhiteSpaceToLineBreak.lastIndex = this.state.end;\n    return skipWhiteSpaceToLineBreak.test(this.input);\n  }\n\n  isLineTerminator() {\n    return this.eat(13) || this.canInsertSemicolon();\n  }\n\n  semicolon(allowAsi = true) {\n    if (allowAsi ? this.isLineTerminator() : this.eat(13)) return;\n    this.raise(this.state.lastTokEnd, ErrorMessages.MissingSemicolon);\n  }\n\n  expect(type, pos) {\n    this.eat(type) || this.unexpected(pos, type);\n  }\n\n  assertNoSpace(message = \"Unexpected space.\") {\n    if (this.state.start > this.state.lastTokEnd) {\n      this.raise(this.state.lastTokEnd, {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedSpace\",\n        template: message\n      });\n    }\n  }\n\n  unexpected(pos, messageOrType = {\n    code: ErrorCodes.SyntaxError,\n    reasonCode: \"UnexpectedToken\",\n    template: \"Unexpected token\"\n  }) {\n    if (isTokenType(messageOrType)) {\n      messageOrType = {\n        code: ErrorCodes.SyntaxError,\n        reasonCode: \"UnexpectedToken\",\n        template: `Unexpected token, expected \"${tokenLabelName(messageOrType)}\"`\n      };\n    }\n\n    throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n  }\n\n  getPluginNamesFromConfigs(pluginConfigs) {\n    return pluginConfigs.map(c => {\n      if (typeof c === \"string\") {\n        return c;\n      } else {\n        return c[0];\n      }\n    });\n  }\n\n  expectPlugin(pluginConfig, pos) {\n    if (!this.hasPlugin(pluginConfig)) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: this.getPluginNamesFromConfigs([pluginConfig])\n      }, `This experimental syntax requires enabling the parser plugin: ${JSON.stringify(pluginConfig)}.`);\n    }\n\n    return true;\n  }\n\n  expectOnePlugin(pluginConfigs, pos) {\n    if (!pluginConfigs.some(c => this.hasPlugin(c))) {\n      throw this.raiseWithData(pos != null ? pos : this.state.start, {\n        missingPlugin: this.getPluginNamesFromConfigs(pluginConfigs)\n      }, `This experimental syntax requires enabling one of the following parser plugin(s): ${pluginConfigs.map(c => JSON.stringify(c)).join(\", \")}.`);\n    }\n  }\n\n  tryParse(fn, oldState = this.state.clone()) {\n    const abortSignal = {\n      node: null\n    };\n\n    try {\n      const node = fn((node = null) => {\n        abortSignal.node = node;\n        throw abortSignal;\n      });\n\n      if (this.state.errors.length > oldState.errors.length) {\n        const failState = this.state;\n        this.state = oldState;\n        this.state.tokensLength = failState.tokensLength;\n        return {\n          node,\n          error: failState.errors[oldState.errors.length],\n          thrown: false,\n          aborted: false,\n          failState\n        };\n      }\n\n      return {\n        node,\n        error: null,\n        thrown: false,\n        aborted: false,\n        failState: null\n      };\n    } catch (error) {\n      const failState = this.state;\n      this.state = oldState;\n\n      if (error instanceof SyntaxError) {\n        return {\n          node: null,\n          error,\n          thrown: true,\n          aborted: false,\n          failState\n        };\n      }\n\n      if (error === abortSignal) {\n        return {\n          node: abortSignal.node,\n          error: null,\n          thrown: false,\n          aborted: true,\n          failState\n        };\n      }\n\n      throw error;\n    }\n  }\n\n  checkExpressionErrors(refExpressionErrors, andThrow) {\n    if (!refExpressionErrors) return false;\n    const {\n      shorthandAssign,\n      doubleProto,\n      optionalParameters\n    } = refExpressionErrors;\n    const hasErrors = shorthandAssign + doubleProto + optionalParameters > -3;\n\n    if (!andThrow) {\n      return hasErrors;\n    } else if (hasErrors) {\n      if (shorthandAssign >= 0) {\n        this.raise(shorthandAssign, ErrorMessages.InvalidCoverInitializedName);\n      }\n\n      if (doubleProto >= 0) {\n        this.raise(doubleProto, ErrorMessages.DuplicateProto);\n      }\n\n      if (optionalParameters >= 0) {\n        this.unexpected(optionalParameters);\n      }\n    }\n  }\n\n  isLiteralPropertyName() {\n    return tokenIsLiteralPropertyName(this.state.type);\n  }\n\n  isPrivateName(node) {\n    return node.type === \"PrivateName\";\n  }\n\n  getPrivateNameSV(node) {\n    return node.id.name;\n  }\n\n  hasPropertyAsPrivateName(node) {\n    return (node.type === \"MemberExpression\" || node.type === \"OptionalMemberExpression\") && this.isPrivateName(node.property);\n  }\n\n  isOptionalChain(node) {\n    return node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\";\n  }\n\n  isObjectProperty(node) {\n    return node.type === \"ObjectProperty\";\n  }\n\n  isObjectMethod(node) {\n    return node.type === \"ObjectMethod\";\n  }\n\n  initializeScopes(inModule = this.options.sourceType === \"module\") {\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    const oldExportedIdentifiers = this.exportedIdentifiers;\n    this.exportedIdentifiers = new Set();\n    const oldInModule = this.inModule;\n    this.inModule = inModule;\n    const oldScope = this.scope;\n    const ScopeHandler = this.getScopeHandler();\n    this.scope = new ScopeHandler(this.raise.bind(this), this.inModule);\n    const oldProdParam = this.prodParam;\n    this.prodParam = new ProductionParameterHandler();\n    const oldClassScope = this.classScope;\n    this.classScope = new ClassScopeHandler(this.raise.bind(this));\n    const oldExpressionScope = this.expressionScope;\n    this.expressionScope = new ExpressionScopeHandler(this.raise.bind(this));\n    return () => {\n      this.state.labels = oldLabels;\n      this.exportedIdentifiers = oldExportedIdentifiers;\n      this.inModule = oldInModule;\n      this.scope = oldScope;\n      this.prodParam = oldProdParam;\n      this.classScope = oldClassScope;\n      this.expressionScope = oldExpressionScope;\n    };\n  }\n\n  enterInitialScopes() {\n    let paramFlags = PARAM;\n\n    if (this.inModule) {\n      paramFlags |= PARAM_AWAIT;\n    }\n\n    this.scope.enter(SCOPE_PROGRAM);\n    this.prodParam.enter(paramFlags);\n  }\n\n}\nclass ExpressionErrors {\n  constructor() {\n    this.shorthandAssign = -1;\n    this.doubleProto = -1;\n    this.optionalParameters = -1;\n  }\n\n}\n\nclass Node {\n  constructor(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser != null && parser.options.ranges) this.range = [pos, 0];\n    if (parser != null && parser.filename) this.loc.filename = parser.filename;\n  }\n\n}\n\nconst NodePrototype = Node.prototype;\n{\n  NodePrototype.__clone = function () {\n    const newNode = new Node();\n    const keys = Object.keys(this);\n\n    for (let i = 0, length = keys.length; i < length; i++) {\n      const key = keys[i];\n\n      if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n        newNode[key] = this[key];\n      }\n    }\n\n    return newNode;\n  };\n}\n\nfunction clonePlaceholder(node) {\n  return cloneIdentifier(node);\n}\n\nfunction cloneIdentifier(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra,\n    name\n  } = node;\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n  cloned.extra = extra;\n  cloned.name = name;\n\n  if (type === \"Placeholder\") {\n    cloned.expectedNode = node.expectedNode;\n  }\n\n  return cloned;\n}\nfunction cloneStringLiteral(node) {\n  const {\n    type,\n    start,\n    end,\n    loc,\n    range,\n    extra\n  } = node;\n\n  if (type === \"Placeholder\") {\n    return clonePlaceholder(node);\n  }\n\n  const cloned = Object.create(NodePrototype);\n  cloned.type = type;\n  cloned.start = start;\n  cloned.end = end;\n  cloned.loc = loc;\n  cloned.range = range;\n\n  if (node.raw !== undefined) {\n    cloned.raw = node.raw;\n  } else {\n    cloned.extra = extra;\n  }\n\n  cloned.value = node.value;\n  return cloned;\n}\nclass NodeUtils extends UtilParser {\n  startNode() {\n    return new Node(this, this.state.start, this.state.startLoc);\n  }\n\n  startNodeAt(pos, loc) {\n    return new Node(this, pos, loc);\n  }\n\n  startNodeAtNode(type) {\n    return this.startNodeAt(type.start, type.loc.start);\n  }\n\n  finishNode(node, type) {\n    return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n  }\n\n  finishNodeAt(node, type, pos, loc) {\n\n    node.type = type;\n    node.end = pos;\n    node.loc.end = loc;\n    if (this.options.ranges) node.range[1] = pos;\n    if (this.options.attachComment) this.processComment(node);\n    return node;\n  }\n\n  resetStartLocation(node, start, startLoc) {\n    node.start = start;\n    node.loc.start = startLoc;\n    if (this.options.ranges) node.range[0] = start;\n  }\n\n  resetEndLocation(node, end = this.state.lastTokEnd, endLoc = this.state.lastTokEndLoc) {\n    node.end = end;\n    node.loc.end = endLoc;\n    if (this.options.ranges) node.range[1] = end;\n  }\n\n  resetStartLocationFromNode(node, locationNode) {\n    this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n  }\n\n}\n\nconst reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nconst FlowErrors = makeErrorTemplates({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module.\",\n  AssignReservedType: \"Cannot overwrite reserved type %0.\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement.\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  GetterMayNotHaveThisParam: \"A getter cannot have a `this` parameter.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements.\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type.\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions.\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance.\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`.\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`.\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SetterMayNotHaveThisParam: \"A setter cannot have a `this` parameter.\",\n  SpreadVariance: \"Spread properties cannot have variance.\",\n  ThisParamAnnotationRequired: \"A type annotation is required for the `this` parameter.\",\n  ThisParamBannedInConstructor: \"Constructors cannot have a `this` parameter; constructors don't bind `this` like other functions.\",\n  ThisParamMayNotBeOptional: \"The `this` parameter cannot be optional.\",\n  ThisParamMustBeFirst: \"The `this` parameter must be the first function parameter.\",\n  ThisParamNoDefault: \"The `this` parameter may not have a default value.\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis.\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object.\",\n  UnexpectedReservedType: \"Unexpected reserved type %0.\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new.\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions.\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\".',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration.\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`.\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead.\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module.\",\n  UnterminatedFlowComment: \"Unterminated flow-comment.\"\n}, ErrorCodes.SyntaxError, \"flow\");\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(type) {\n  return tokenIsKeywordOrIdentifier(type) && type !== 93;\n}\n\nconst exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  const list1 = [];\n  const list2 = [];\n\n  for (let i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nconst FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\nvar flow = (superClass => class extends superClass {\n  constructor(...args) {\n    super(...args);\n    this.flowPragma = undefined;\n  }\n\n  getScopeHandler() {\n    return FlowScopeHandler;\n  }\n\n  shouldParseTypes() {\n    return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n  }\n\n  shouldParseEnums() {\n    return !!this.getPluginOption(\"flow\", \"enums\");\n  }\n\n  finishToken(type, val) {\n    if (type !== 125 && type !== 13 && type !== 28) {\n      if (this.flowPragma === undefined) {\n        this.flowPragma = null;\n      }\n    }\n\n    return super.finishToken(type, val);\n  }\n\n  addComment(comment) {\n    if (this.flowPragma === undefined) {\n      const matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n\n      if (!matches) ; else if (matches[1] === \"flow\") {\n        this.flowPragma = \"flow\";\n      } else if (matches[1] === \"noflow\") {\n        this.flowPragma = \"noflow\";\n      } else {\n        throw new Error(\"Unexpected flow pragma\");\n      }\n    }\n\n    return super.addComment(comment);\n  }\n\n  flowParseTypeInitialiser(tok) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(tok || 14);\n    const type = this.flowParseType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParsePredicate() {\n    const node = this.startNode();\n    const moduloPos = this.state.start;\n    this.next();\n    this.expectContextual(103);\n\n    if (this.state.lastTokStart > moduloPos + 1) {\n      this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n    }\n\n    if (this.eat(10)) {\n      node.value = this.parseExpression();\n      this.expect(11);\n      return this.finishNode(node, \"DeclaredPredicate\");\n    } else {\n      return this.finishNode(node, \"InferredPredicate\");\n    }\n  }\n\n  flowParseTypeAndPredicateInitialiser() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    this.expect(14);\n    let type = null;\n    let predicate = null;\n\n    if (this.match(50)) {\n      this.state.inType = oldInType;\n      predicate = this.flowParsePredicate();\n    } else {\n      type = this.flowParseType();\n      this.state.inType = oldInType;\n\n      if (this.match(50)) {\n        predicate = this.flowParsePredicate();\n      }\n    }\n\n    return [type, predicate];\n  }\n\n  flowParseDeclareClass(node) {\n    this.next();\n    this.flowParseInterfaceish(node, true);\n    return this.finishNode(node, \"DeclareClass\");\n  }\n\n  flowParseDeclareFunction(node) {\n    this.next();\n    const id = node.id = this.parseIdentifier();\n    const typeNode = this.startNode();\n    const typeContainer = this.startNode();\n\n    if (this.match(45)) {\n      typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      typeNode.typeParameters = null;\n    }\n\n    this.expect(10);\n    const tmp = this.flowParseFunctionTypeParams();\n    typeNode.params = tmp.params;\n    typeNode.rest = tmp.rest;\n    typeNode.this = tmp._this;\n    this.expect(11);\n    [typeNode.returnType, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n    typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n    id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n    this.resetEndLocation(id);\n    this.semicolon();\n    this.scope.declareName(node.id.name, BIND_FLOW_DECLARE_FN, node.id.start);\n    return this.finishNode(node, \"DeclareFunction\");\n  }\n\n  flowParseDeclare(node, insideModule) {\n    if (this.match(76)) {\n      return this.flowParseDeclareClass(node);\n    } else if (this.match(64)) {\n      return this.flowParseDeclareFunction(node);\n    } else if (this.match(70)) {\n      return this.flowParseDeclareVariable(node);\n    } else if (this.eatContextual(119)) {\n      if (this.match(16)) {\n        return this.flowParseDeclareModuleExports(node);\n      } else {\n        if (insideModule) {\n          this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n        }\n\n        return this.flowParseDeclareModule(node);\n      }\n    } else if (this.isContextual(122)) {\n      return this.flowParseDeclareTypeAlias(node);\n    } else if (this.isContextual(123)) {\n      return this.flowParseDeclareOpaqueType(node);\n    } else if (this.isContextual(121)) {\n      return this.flowParseDeclareInterface(node);\n    } else if (this.match(78)) {\n      return this.flowParseDeclareExportDeclaration(node, insideModule);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  flowParseDeclareVariable(node) {\n    this.next();\n    node.id = this.flowParseTypeAnnotatableIdentifier(true);\n    this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n    this.semicolon();\n    return this.finishNode(node, \"DeclareVariable\");\n  }\n\n  flowParseDeclareModule(node) {\n    this.scope.enter(SCOPE_OTHER);\n\n    if (this.match(125)) {\n      node.id = this.parseExprAtom();\n    } else {\n      node.id = this.parseIdentifier();\n    }\n\n    const bodyNode = node.body = this.startNode();\n    const body = bodyNode.body = [];\n    this.expect(5);\n\n    while (!this.match(8)) {\n      let bodyNode = this.startNode();\n\n      if (this.match(79)) {\n        this.next();\n\n        if (!this.isContextual(122) && !this.match(83)) {\n          this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n        }\n\n        this.parseImport(bodyNode);\n      } else {\n        this.expectContextual(117, FlowErrors.UnsupportedStatementInDeclareModule);\n        bodyNode = this.flowParseDeclare(bodyNode, true);\n      }\n\n      body.push(bodyNode);\n    }\n\n    this.scope.exit();\n    this.expect(8);\n    this.finishNode(bodyNode, \"BlockStatement\");\n    let kind = null;\n    let hasModuleExport = false;\n    body.forEach(bodyElement => {\n      if (isEsModuleType(bodyElement)) {\n        if (kind === \"CommonJS\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"ES\";\n      } else if (bodyElement.type === \"DeclareModuleExports\") {\n        if (hasModuleExport) {\n          this.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n        }\n\n        if (kind === \"ES\") {\n          this.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n        }\n\n        kind = \"CommonJS\";\n        hasModuleExport = true;\n      }\n    });\n    node.kind = kind || \"CommonJS\";\n    return this.finishNode(node, \"DeclareModule\");\n  }\n\n  flowParseDeclareExportDeclaration(node, insideModule) {\n    this.expect(78);\n\n    if (this.eat(61)) {\n      if (this.match(64) || this.match(76)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n      } else {\n        node.declaration = this.flowParseType();\n        this.semicolon();\n      }\n\n      node.default = true;\n      return this.finishNode(node, \"DeclareExportDeclaration\");\n    } else {\n      if (this.match(71) || this.isLet() || (this.isContextual(122) || this.isContextual(121)) && !insideModule) {\n        const label = this.state.value;\n        const suggestion = exportSuggestions[label];\n        throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n      }\n\n      if (this.match(70) || this.match(64) || this.match(76) || this.isContextual(123)) {\n        node.declaration = this.flowParseDeclare(this.startNode());\n        node.default = false;\n        return this.finishNode(node, \"DeclareExportDeclaration\");\n      } else if (this.match(51) || this.match(5) || this.isContextual(121) || this.isContextual(122) || this.isContextual(123)) {\n        node = this.parseExport(node);\n\n        if (node.type === \"ExportNamedDeclaration\") {\n          node.type = \"ExportDeclaration\";\n          node.default = false;\n          delete node.exportKind;\n        }\n\n        node.type = \"Declare\" + node.type;\n        return node;\n      }\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParseDeclareModuleExports(node) {\n    this.next();\n    this.expectContextual(104);\n    node.typeAnnotation = this.flowParseTypeAnnotation();\n    this.semicolon();\n    return this.finishNode(node, \"DeclareModuleExports\");\n  }\n\n  flowParseDeclareTypeAlias(node) {\n    this.next();\n    this.flowParseTypeAlias(node);\n    node.type = \"DeclareTypeAlias\";\n    return node;\n  }\n\n  flowParseDeclareOpaqueType(node) {\n    this.next();\n    this.flowParseOpaqueType(node, true);\n    node.type = \"DeclareOpaqueType\";\n    return node;\n  }\n\n  flowParseDeclareInterface(node) {\n    this.next();\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"DeclareInterface\");\n  }\n\n  flowParseInterfaceish(node, isClass = false) {\n    node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n    this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n    if (this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.extends = [];\n    node.implements = [];\n    node.mixins = [];\n\n    if (this.eat(77)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (!isClass && this.eat(12));\n    }\n\n    if (this.isContextual(110)) {\n      this.next();\n\n      do {\n        node.mixins.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    if (this.isContextual(106)) {\n      this.next();\n\n      do {\n        node.implements.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: isClass,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: isClass,\n      allowInexact: false\n    });\n  }\n\n  flowParseInterfaceExtends() {\n    const node = this.startNode();\n    node.id = this.flowParseQualifiedTypeIdentifier();\n\n    if (this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    } else {\n      node.typeParameters = null;\n    }\n\n    return this.finishNode(node, \"InterfaceExtends\");\n  }\n\n  flowParseInterface(node) {\n    this.flowParseInterfaceish(node);\n    return this.finishNode(node, \"InterfaceDeclaration\");\n  }\n\n  checkNotUnderscore(word) {\n    if (word === \"_\") {\n      this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n    }\n  }\n\n  checkReservedType(word, startLoc, declaration) {\n    if (!reservedTypes.has(word)) return;\n    this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n  }\n\n  flowParseRestrictedIdentifier(liberal, declaration) {\n    this.checkReservedType(this.state.value, this.state.start, declaration);\n    return this.parseIdentifier(liberal);\n  }\n\n  flowParseTypeAlias(node) {\n    node.id = this.flowParseRestrictedIdentifier(false, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.right = this.flowParseTypeInitialiser(29);\n    this.semicolon();\n    return this.finishNode(node, \"TypeAlias\");\n  }\n\n  flowParseOpaqueType(node, declare) {\n    this.expectContextual(122);\n    node.id = this.flowParseRestrictedIdentifier(true, true);\n    this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n    if (this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    } else {\n      node.typeParameters = null;\n    }\n\n    node.supertype = null;\n\n    if (this.match(14)) {\n      node.supertype = this.flowParseTypeInitialiser(14);\n    }\n\n    node.impltype = null;\n\n    if (!declare) {\n      node.impltype = this.flowParseTypeInitialiser(29);\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"OpaqueType\");\n  }\n\n  flowParseTypeParameter(requireDefault = false) {\n    const nodeStart = this.state.start;\n    const node = this.startNode();\n    const variance = this.flowParseVariance();\n    const ident = this.flowParseTypeAnnotatableIdentifier();\n    node.name = ident.name;\n    node.variance = variance;\n    node.bound = ident.typeAnnotation;\n\n    if (this.match(29)) {\n      this.eat(29);\n      node.default = this.flowParseType();\n    } else {\n      if (requireDefault) {\n        this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n      }\n    }\n\n    return this.finishNode(node, \"TypeParameter\");\n  }\n\n  flowParseTypeParameterDeclaration() {\n    const oldInType = this.state.inType;\n    const node = this.startNode();\n    node.params = [];\n    this.state.inType = true;\n\n    if (this.match(45) || this.match(134)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    let defaultRequired = false;\n\n    do {\n      const typeParameter = this.flowParseTypeParameter(defaultRequired);\n      node.params.push(typeParameter);\n\n      if (typeParameter.default) {\n        defaultRequired = true;\n      }\n\n      if (!this.match(46)) {\n        this.expect(12);\n      }\n    } while (!this.match(46));\n\n    this.expect(46);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterDeclaration\");\n  }\n\n  flowParseTypeParameterInstantiation() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(45);\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n    this.state.noAnonFunctionType = false;\n\n    while (!this.match(46)) {\n      node.params.push(this.flowParseType());\n\n      if (!this.match(46)) {\n        this.expect(12);\n      }\n    }\n\n    this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    this.expect(46);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseTypeParameterInstantiationCallOrNew() {\n    const node = this.startNode();\n    const oldInType = this.state.inType;\n    node.params = [];\n    this.state.inType = true;\n    this.expect(45);\n\n    while (!this.match(46)) {\n      node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n      if (!this.match(46)) {\n        this.expect(12);\n      }\n    }\n\n    this.expect(46);\n    this.state.inType = oldInType;\n    return this.finishNode(node, \"TypeParameterInstantiation\");\n  }\n\n  flowParseInterfaceType() {\n    const node = this.startNode();\n    this.expectContextual(121);\n    node.extends = [];\n\n    if (this.eat(77)) {\n      do {\n        node.extends.push(this.flowParseInterfaceExtends());\n      } while (this.eat(12));\n    }\n\n    node.body = this.flowParseObjectType({\n      allowStatic: false,\n      allowExact: false,\n      allowSpread: false,\n      allowProto: false,\n      allowInexact: false\n    });\n    return this.finishNode(node, \"InterfaceTypeAnnotation\");\n  }\n\n  flowParseObjectPropertyKey() {\n    return this.match(126) || this.match(125) ? this.parseExprAtom() : this.parseIdentifier(true);\n  }\n\n  flowParseObjectTypeIndexer(node, isStatic, variance) {\n    node.static = isStatic;\n\n    if (this.lookahead().type === 14) {\n      node.id = this.flowParseObjectPropertyKey();\n      node.key = this.flowParseTypeInitialiser();\n    } else {\n      node.id = null;\n      node.key = this.flowParseType();\n    }\n\n    this.expect(3);\n    node.value = this.flowParseTypeInitialiser();\n    node.variance = variance;\n    return this.finishNode(node, \"ObjectTypeIndexer\");\n  }\n\n  flowParseObjectTypeInternalSlot(node, isStatic) {\n    node.static = isStatic;\n    node.id = this.flowParseObjectPropertyKey();\n    this.expect(3);\n    this.expect(3);\n\n    if (this.match(45) || this.match(10)) {\n      node.method = true;\n      node.optional = false;\n      node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n    } else {\n      node.method = false;\n\n      if (this.eat(17)) {\n        node.optional = true;\n      }\n\n      node.value = this.flowParseTypeInitialiser();\n    }\n\n    return this.finishNode(node, \"ObjectTypeInternalSlot\");\n  }\n\n  flowParseObjectTypeMethodish(node) {\n    node.params = [];\n    node.rest = null;\n    node.typeParameters = null;\n    node.this = null;\n\n    if (this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    this.expect(10);\n\n    if (this.match(74)) {\n      node.this = this.flowParseFunctionTypeParam(true);\n      node.this.name = null;\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    while (!this.match(11) && !this.match(21)) {\n      node.params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    if (this.eat(21)) {\n      node.rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    this.expect(11);\n    node.returnType = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"FunctionTypeAnnotation\");\n  }\n\n  flowParseObjectTypeCallProperty(node, isStatic) {\n    const valueNode = this.startNode();\n    node.static = isStatic;\n    node.value = this.flowParseObjectTypeMethodish(valueNode);\n    return this.finishNode(node, \"ObjectTypeCallProperty\");\n  }\n\n  flowParseObjectType({\n    allowStatic,\n    allowExact,\n    allowSpread,\n    allowProto,\n    allowInexact\n  }) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const nodeStart = this.startNode();\n    nodeStart.callProperties = [];\n    nodeStart.properties = [];\n    nodeStart.indexers = [];\n    nodeStart.internalSlots = [];\n    let endDelim;\n    let exact;\n    let inexact = false;\n\n    if (allowExact && this.match(6)) {\n      this.expect(6);\n      endDelim = 9;\n      exact = true;\n    } else {\n      this.expect(5);\n      endDelim = 8;\n      exact = false;\n    }\n\n    nodeStart.exact = exact;\n\n    while (!this.match(endDelim)) {\n      let isStatic = false;\n      let protoStart = null;\n      let inexactStart = null;\n      const node = this.startNode();\n\n      if (allowProto && this.isContextual(111)) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          protoStart = this.state.start;\n          allowStatic = false;\n        }\n      }\n\n      if (allowStatic && this.isContextual(100)) {\n        const lookahead = this.lookahead();\n\n        if (lookahead.type !== 14 && lookahead.type !== 17) {\n          this.next();\n          isStatic = true;\n        }\n      }\n\n      const variance = this.flowParseVariance();\n\n      if (this.eat(0)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (this.eat(0)) {\n          if (variance) {\n            this.unexpected(variance.start);\n          }\n\n          nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n        } else {\n          nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n        }\n      } else if (this.match(10) || this.match(45)) {\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n      } else {\n        let kind = \"init\";\n\n        if (this.isContextual(94) || this.isContextual(99)) {\n          const lookahead = this.lookahead();\n\n          if (tokenIsLiteralPropertyName(lookahead.type)) {\n            kind = this.state.value;\n            this.next();\n          }\n        }\n\n        const propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n        if (propOrInexact === null) {\n          inexact = true;\n          inexactStart = this.state.lastTokStart;\n        } else {\n          nodeStart.properties.push(propOrInexact);\n        }\n      }\n\n      this.flowObjectTypeSemicolon();\n\n      if (inexactStart && !this.match(8) && !this.match(9)) {\n        this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n      }\n    }\n\n    this.expect(endDelim);\n\n    if (allowSpread) {\n      nodeStart.inexact = inexact;\n    }\n\n    const out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n    this.state.inType = oldInType;\n    return out;\n  }\n\n  flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n    if (this.eat(21)) {\n      const isInexactToken = this.match(12) || this.match(13) || this.match(8) || this.match(9);\n\n      if (isInexactToken) {\n        if (!allowSpread) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n        } else if (!allowInexact) {\n          this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n        }\n\n        if (variance) {\n          this.raise(variance.start, FlowErrors.InexactVariance);\n        }\n\n        return null;\n      }\n\n      if (!allowSpread) {\n        this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n      }\n\n      if (protoStart != null) {\n        this.unexpected(protoStart);\n      }\n\n      if (variance) {\n        this.raise(variance.start, FlowErrors.SpreadVariance);\n      }\n\n      node.argument = this.flowParseType();\n      return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n    } else {\n      node.key = this.flowParseObjectPropertyKey();\n      node.static = isStatic;\n      node.proto = protoStart != null;\n      node.kind = kind;\n      let optional = false;\n\n      if (this.match(45) || this.match(10)) {\n        node.method = true;\n\n        if (protoStart != null) {\n          this.unexpected(protoStart);\n        }\n\n        if (variance) {\n          this.unexpected(variance.start);\n        }\n\n        node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n        if (kind === \"get\" || kind === \"set\") {\n          this.flowCheckGetterSetterParams(node);\n        }\n\n        if (!allowSpread && node.key.name === \"constructor\" && node.value.this) {\n          this.raise(node.value.this.start, FlowErrors.ThisParamBannedInConstructor);\n        }\n      } else {\n        if (kind !== \"init\") this.unexpected();\n        node.method = false;\n\n        if (this.eat(17)) {\n          optional = true;\n        }\n\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n      }\n\n      node.optional = optional;\n      return this.finishNode(node, \"ObjectTypeProperty\");\n    }\n  }\n\n  flowCheckGetterSetterParams(property) {\n    const paramCount = property.kind === \"get\" ? 0 : 1;\n    const start = property.start;\n    const length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n    if (property.value.this) {\n      this.raise(property.value.this.start, property.kind === \"get\" ? FlowErrors.GetterMayNotHaveThisParam : FlowErrors.SetterMayNotHaveThisParam);\n    }\n\n    if (length !== paramCount) {\n      if (property.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (property.kind === \"set\" && property.value.rest) {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  flowObjectTypeSemicolon() {\n    if (!this.eat(13) && !this.eat(12) && !this.match(8) && !this.match(9)) {\n      this.unexpected();\n    }\n  }\n\n  flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n    startPos = startPos || this.state.start;\n    startLoc = startLoc || this.state.startLoc;\n    let node = id || this.flowParseRestrictedIdentifier(true);\n\n    while (this.eat(16)) {\n      const node2 = this.startNodeAt(startPos, startLoc);\n      node2.qualification = node;\n      node2.id = this.flowParseRestrictedIdentifier(true);\n      node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n    }\n\n    return node;\n  }\n\n  flowParseGenericType(startPos, startLoc, id) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.typeParameters = null;\n    node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n    if (this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    return this.finishNode(node, \"GenericTypeAnnotation\");\n  }\n\n  flowParseTypeofType() {\n    const node = this.startNode();\n    this.expect(83);\n    node.argument = this.flowParsePrimaryType();\n    return this.finishNode(node, \"TypeofTypeAnnotation\");\n  }\n\n  flowParseTupleType() {\n    const node = this.startNode();\n    node.types = [];\n    this.expect(0);\n\n    while (this.state.pos < this.length && !this.match(3)) {\n      node.types.push(this.flowParseType());\n      if (this.match(3)) break;\n      this.expect(12);\n    }\n\n    this.expect(3);\n    return this.finishNode(node, \"TupleTypeAnnotation\");\n  }\n\n  flowParseFunctionTypeParam(first) {\n    let name = null;\n    let optional = false;\n    let typeAnnotation = null;\n    const node = this.startNode();\n    const lh = this.lookahead();\n    const isThis = this.state.type === 74;\n\n    if (lh.type === 14 || lh.type === 17) {\n      if (isThis && !first) {\n        this.raise(node.start, FlowErrors.ThisParamMustBeFirst);\n      }\n\n      name = this.parseIdentifier(isThis);\n\n      if (this.eat(17)) {\n        optional = true;\n\n        if (isThis) {\n          this.raise(node.start, FlowErrors.ThisParamMayNotBeOptional);\n        }\n      }\n\n      typeAnnotation = this.flowParseTypeInitialiser();\n    } else {\n      typeAnnotation = this.flowParseType();\n    }\n\n    node.name = name;\n    node.optional = optional;\n    node.typeAnnotation = typeAnnotation;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  reinterpretTypeAsFunctionTypeParam(type) {\n    const node = this.startNodeAt(type.start, type.loc.start);\n    node.name = null;\n    node.optional = false;\n    node.typeAnnotation = type;\n    return this.finishNode(node, \"FunctionTypeParam\");\n  }\n\n  flowParseFunctionTypeParams(params = []) {\n    let rest = null;\n    let _this = null;\n\n    if (this.match(74)) {\n      _this = this.flowParseFunctionTypeParam(true);\n      _this.name = null;\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    while (!this.match(11) && !this.match(21)) {\n      params.push(this.flowParseFunctionTypeParam(false));\n\n      if (!this.match(11)) {\n        this.expect(12);\n      }\n    }\n\n    if (this.eat(21)) {\n      rest = this.flowParseFunctionTypeParam(false);\n    }\n\n    return {\n      params,\n      rest,\n      _this\n    };\n  }\n\n  flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n    switch (id.name) {\n      case \"any\":\n        return this.finishNode(node, \"AnyTypeAnnotation\");\n\n      case \"bool\":\n      case \"boolean\":\n        return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n      case \"mixed\":\n        return this.finishNode(node, \"MixedTypeAnnotation\");\n\n      case \"empty\":\n        return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n      case \"number\":\n        return this.finishNode(node, \"NumberTypeAnnotation\");\n\n      case \"string\":\n        return this.finishNode(node, \"StringTypeAnnotation\");\n\n      case \"symbol\":\n        return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n      default:\n        this.checkNotUnderscore(id.name);\n        return this.flowParseGenericType(startPos, startLoc, id);\n    }\n  }\n\n  flowParsePrimaryType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const node = this.startNode();\n    let tmp;\n    let type;\n    let isGroupedType = false;\n    const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n    switch (this.state.type) {\n      case 5:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: true\n        });\n\n      case 6:\n        return this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: true,\n          allowSpread: true,\n          allowProto: false,\n          allowInexact: false\n        });\n\n      case 0:\n        this.state.noAnonFunctionType = false;\n        type = this.flowParseTupleType();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        return type;\n\n      case 45:\n        node.typeParameters = this.flowParseTypeParameterDeclaration();\n        this.expect(10);\n        tmp = this.flowParseFunctionTypeParams();\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case 10:\n        this.next();\n\n        if (!this.match(11) && !this.match(21)) {\n          if (tokenIsIdentifier(this.state.type) || this.match(74)) {\n            const token = this.lookahead().type;\n            isGroupedType = token !== 17 && token !== 14;\n          } else {\n            isGroupedType = true;\n          }\n        }\n\n        if (isGroupedType) {\n          this.state.noAnonFunctionType = false;\n          type = this.flowParseType();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n          if (this.state.noAnonFunctionType || !(this.match(12) || this.match(11) && this.lookahead().type === 19)) {\n            this.expect(11);\n            return type;\n          } else {\n            this.eat(12);\n          }\n        }\n\n        if (type) {\n          tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n        } else {\n          tmp = this.flowParseFunctionTypeParams();\n        }\n\n        node.params = tmp.params;\n        node.rest = tmp.rest;\n        node.this = tmp._this;\n        this.expect(11);\n        this.expect(19);\n        node.returnType = this.flowParseType();\n        node.typeParameters = null;\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n      case 125:\n        return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n      case 81:\n      case 82:\n        node.value = this.match(81);\n        this.next();\n        return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n      case 49:\n        if (this.state.value === \"-\") {\n          this.next();\n\n          if (this.match(126)) {\n            return this.parseLiteralAtNode(-this.state.value, \"NumberLiteralTypeAnnotation\", node);\n          }\n\n          if (this.match(127)) {\n            return this.parseLiteralAtNode(-this.state.value, \"BigIntLiteralTypeAnnotation\", node);\n          }\n\n          throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n        }\n\n        throw this.unexpected();\n\n      case 126:\n        return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n      case 127:\n        return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n      case 84:\n        this.next();\n        return this.finishNode(node, \"VoidTypeAnnotation\");\n\n      case 80:\n        this.next();\n        return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n      case 74:\n        this.next();\n        return this.finishNode(node, \"ThisTypeAnnotation\");\n\n      case 51:\n        this.next();\n        return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n      case 83:\n        return this.flowParseTypeofType();\n\n      default:\n        if (tokenIsKeyword(this.state.type)) {\n          const label = tokenLabelName(this.state.type);\n          this.next();\n          return super.createIdentifier(node, label);\n        } else if (tokenIsIdentifier(this.state.type)) {\n          if (this.isContextual(121)) {\n            return this.flowParseInterfaceType();\n          }\n\n          return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n        }\n\n    }\n\n    throw this.unexpected();\n  }\n\n  flowParsePostfixType() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let type = this.flowParsePrimaryType();\n    let seenOptionalIndexedAccess = false;\n\n    while ((this.match(0) || this.match(18)) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const optional = this.eat(18);\n      seenOptionalIndexedAccess = seenOptionalIndexedAccess || optional;\n      this.expect(0);\n\n      if (!optional && this.match(3)) {\n        node.elementType = type;\n        this.next();\n        type = this.finishNode(node, \"ArrayTypeAnnotation\");\n      } else {\n        node.objectType = type;\n        node.indexType = this.flowParseType();\n        this.expect(3);\n\n        if (seenOptionalIndexedAccess) {\n          node.optional = optional;\n          type = this.finishNode(node, \"OptionalIndexedAccessType\");\n        } else {\n          type = this.finishNode(node, \"IndexedAccessType\");\n        }\n      }\n    }\n\n    return type;\n  }\n\n  flowParsePrefixType() {\n    const node = this.startNode();\n\n    if (this.eat(17)) {\n      node.typeAnnotation = this.flowParsePrefixType();\n      return this.finishNode(node, \"NullableTypeAnnotation\");\n    } else {\n      return this.flowParsePostfixType();\n    }\n  }\n\n  flowParseAnonFunctionWithoutParens() {\n    const param = this.flowParsePrefixType();\n\n    if (!this.state.noAnonFunctionType && this.eat(19)) {\n      const node = this.startNodeAt(param.start, param.loc.start);\n      node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n      node.rest = null;\n      node.this = null;\n      node.returnType = this.flowParseType();\n      node.typeParameters = null;\n      return this.finishNode(node, \"FunctionTypeAnnotation\");\n    }\n\n    return param;\n  }\n\n  flowParseIntersectionType() {\n    const node = this.startNode();\n    this.eat(43);\n    const type = this.flowParseAnonFunctionWithoutParens();\n    node.types = [type];\n\n    while (this.eat(43)) {\n      node.types.push(this.flowParseAnonFunctionWithoutParens());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n  }\n\n  flowParseUnionType() {\n    const node = this.startNode();\n    this.eat(41);\n    const type = this.flowParseIntersectionType();\n    node.types = [type];\n\n    while (this.eat(41)) {\n      node.types.push(this.flowParseIntersectionType());\n    }\n\n    return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n  }\n\n  flowParseType() {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n    const type = this.flowParseUnionType();\n    this.state.inType = oldInType;\n    return type;\n  }\n\n  flowParseTypeOrImplicitInstantiation() {\n    if (this.state.type === 124 && this.state.value === \"_\") {\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      const node = this.parseIdentifier();\n      return this.flowParseGenericType(startPos, startLoc, node);\n    } else {\n      return this.flowParseType();\n    }\n  }\n\n  flowParseTypeAnnotation() {\n    const node = this.startNode();\n    node.typeAnnotation = this.flowParseTypeInitialiser();\n    return this.finishNode(node, \"TypeAnnotation\");\n  }\n\n  flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n    const ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n    if (this.match(14)) {\n      ident.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(ident);\n    }\n\n    return ident;\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  flowParseVariance() {\n    let variance = null;\n\n    if (this.match(49)) {\n      variance = this.startNode();\n\n      if (this.state.value === \"+\") {\n        variance.kind = \"plus\";\n      } else {\n        variance.kind = \"minus\";\n      }\n\n      this.next();\n      this.finishNode(variance, \"Variance\");\n    }\n\n    return variance;\n  }\n\n  parseFunctionBody(node, allowExpressionBody, isMethod = false) {\n    if (allowExpressionBody) {\n      return this.forwardNoArrowParamsConversionAt(node, () => super.parseFunctionBody(node, true, isMethod));\n    }\n\n    return super.parseFunctionBody(node, false, isMethod);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      const typeNode = this.startNode();\n      [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n      node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.state.strict && this.isContextual(121)) {\n      const lookahead = this.lookahead();\n\n      if (tokenIsKeywordOrIdentifier(lookahead.type)) {\n        const node = this.startNode();\n        this.next();\n        return this.flowParseInterface(node);\n      }\n    } else if (this.shouldParseEnums() && this.isContextual(118)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    const stmt = super.parseStatement(context, topLevel);\n\n    if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n      this.flowPragma = null;\n    }\n\n    return stmt;\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type === \"Identifier\") {\n      if (expr.name === \"declare\") {\n        if (this.match(76) || tokenIsIdentifier(this.state.type) || this.match(64) || this.match(70) || this.match(78)) {\n          return this.flowParseDeclare(node);\n        }\n      } else if (tokenIsIdentifier(this.state.type)) {\n        if (expr.name === \"interface\") {\n          return this.flowParseInterface(node);\n        } else if (expr.name === \"type\") {\n          return this.flowParseTypeAlias(node);\n        } else if (expr.name === \"opaque\") {\n          return this.flowParseOpaqueType(node, false);\n        }\n      }\n    }\n\n    return super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 118) {\n      return !this.state.containsEsc;\n    }\n\n    return super.shouldParseExportDeclaration();\n  }\n\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsFlowInterfaceOrTypeOrOpaque(type) || this.shouldParseEnums() && type === 118) {\n      return this.state.containsEsc;\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseExportDefaultExpression() {\n    if (this.shouldParseEnums() && this.isContextual(118)) {\n      const node = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(node);\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.match(17)) return expr;\n\n    if (this.state.maybeInArrowParameters) {\n      const nextCh = this.lookaheadCharCode();\n\n      if (nextCh === 44 || nextCh === 61 || nextCh === 58 || nextCh === 41) {\n        this.setOptionalParametersError(refExpressionErrors);\n        return expr;\n      }\n    }\n\n    this.expect(17);\n    const state = this.state.clone();\n    const originalNoArrowAt = this.state.noArrowAt;\n    const node = this.startNodeAt(startPos, startLoc);\n    let {\n      consequent,\n      failed\n    } = this.tryParseConditionalConsequent();\n    let [valid, invalid] = this.getArrowLikeExpressions(consequent);\n\n    if (failed || invalid.length > 0) {\n      const noArrowAt = [...originalNoArrowAt];\n\n      if (invalid.length > 0) {\n        this.state = state;\n        this.state.noArrowAt = noArrowAt;\n\n        for (let i = 0; i < invalid.length; i++) {\n          noArrowAt.push(invalid[i].start);\n        }\n\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n        [valid, invalid] = this.getArrowLikeExpressions(consequent);\n      }\n\n      if (failed && valid.length > 1) {\n        this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n      }\n\n      if (failed && valid.length === 1) {\n        this.state = state;\n        noArrowAt.push(valid[0].start);\n        this.state.noArrowAt = noArrowAt;\n        ({\n          consequent,\n          failed\n        } = this.tryParseConditionalConsequent());\n      }\n    }\n\n    this.getArrowLikeExpressions(consequent, true);\n    this.state.noArrowAt = originalNoArrowAt;\n    this.expect(14);\n    node.test = expr;\n    node.consequent = consequent;\n    node.alternate = this.forwardNoArrowParamsConversionAt(node, () => this.parseMaybeAssign(undefined, undefined));\n    return this.finishNode(node, \"ConditionalExpression\");\n  }\n\n  tryParseConditionalConsequent() {\n    this.state.noArrowParamsConversionAt.push(this.state.start);\n    const consequent = this.parseMaybeAssignAllowIn();\n    const failed = !this.match(14);\n    this.state.noArrowParamsConversionAt.pop();\n    return {\n      consequent,\n      failed\n    };\n  }\n\n  getArrowLikeExpressions(node, disallowInvalid) {\n    const stack = [node];\n    const arrows = [];\n\n    while (stack.length !== 0) {\n      const node = stack.pop();\n\n      if (node.type === \"ArrowFunctionExpression\") {\n        if (node.typeParameters || !node.returnType) {\n          this.finishArrowValidation(node);\n        } else {\n          arrows.push(node);\n        }\n\n        stack.push(node.body);\n      } else if (node.type === \"ConditionalExpression\") {\n        stack.push(node.consequent);\n        stack.push(node.alternate);\n      }\n    }\n\n    if (disallowInvalid) {\n      arrows.forEach(node => this.finishArrowValidation(node));\n      return [arrows, []];\n    }\n\n    return partition(arrows, node => node.params.every(param => this.isAssignable(param, true)));\n  }\n\n  finishArrowValidation(node) {\n    var _node$extra;\n\n    this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    super.checkParams(node, false, true);\n    this.scope.exit();\n  }\n\n  forwardNoArrowParamsConversionAt(node, parse) {\n    let result;\n\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      this.state.noArrowParamsConversionAt.push(this.state.start);\n      result = parse();\n      this.state.noArrowParamsConversionAt.pop();\n    } else {\n      result = parse();\n    }\n\n    return result;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n      return;\n    }\n\n    super.assertModuleNodeAllowed(node);\n  }\n\n  parseExport(node) {\n    const decl = super.parseExport(node);\n\n    if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n      decl.exportKind = decl.exportKind || \"value\";\n    }\n\n    return decl;\n  }\n\n  parseExportDeclaration(node) {\n    if (this.isContextual(122)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n\n      if (this.match(5)) {\n        node.specifiers = this.parseExportSpecifiers(true);\n        this.parseExportFrom(node);\n        return null;\n      } else {\n        return this.flowParseTypeAlias(declarationNode);\n      }\n    } else if (this.isContextual(123)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseOpaqueType(declarationNode, false);\n    } else if (this.isContextual(121)) {\n      node.exportKind = \"type\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseInterface(declarationNode);\n    } else if (this.shouldParseEnums() && this.isContextual(118)) {\n      node.exportKind = \"value\";\n      const declarationNode = this.startNode();\n      this.next();\n      return this.flowParseEnumDeclaration(declarationNode);\n    } else {\n      return super.parseExportDeclaration(node);\n    }\n  }\n\n  eatExportStar(node) {\n    if (super.eatExportStar(...arguments)) return true;\n\n    if (this.isContextual(122) && this.lookahead().type === 51) {\n      node.exportKind = \"type\";\n      this.next();\n      this.next();\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    const pos = this.state.start;\n    const hasNamespace = super.maybeParseExportNamespaceSpecifier(node);\n\n    if (hasNamespace && node.exportKind === \"type\") {\n      this.unexpected(pos);\n    }\n\n    return hasNamespace;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    super.parseClassId(node, isStatement, optionalId);\n\n    if (this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n  }\n\n  parseClassMember(classBody, member, state) {\n    const pos = this.state.start;\n\n    if (this.isContextual(117)) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      member.declare = true;\n    }\n\n    super.parseClassMember(classBody, member, state);\n\n    if (member.declare) {\n      if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\" && member.type !== \"PropertyDefinition\") {\n        this.raise(pos, FlowErrors.DeclareClassElement);\n      } else if (member.value) {\n        this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n      }\n    }\n  }\n\n  isIterator(word) {\n    return word === \"iterator\" || word === \"asyncIterator\";\n  }\n\n  readIterator() {\n    const word = super.readWord1();\n    const fullWord = \"@@\" + word;\n\n    if (!this.isIterator(word) || !this.state.inType) {\n      this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, fullWord);\n    }\n\n    this.finishToken(124, fullWord);\n  }\n\n  getTokenFromCode(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 123 && next === 124) {\n      return this.finishOp(6, 2);\n    } else if (this.state.inType && (code === 62 || code === 60)) {\n      return this.finishOp(code === 62 ? 46 : 45, 1);\n    } else if (this.state.inType && code === 63) {\n      if (next === 46) {\n        return this.finishOp(18, 2);\n      }\n\n      return this.finishOp(17, 1);\n    } else if (isIteratorStart(code, next)) {\n      this.state.pos += 2;\n      return this.readIterator();\n    } else {\n      return super.getTokenFromCode(code);\n    }\n  }\n\n  isAssignable(node, isBinding) {\n    if (node.type === \"TypeCastExpression\") {\n      return this.isAssignable(node.expression, isBinding);\n    } else {\n      return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    if (node.type === \"TypeCastExpression\") {\n      return super.toAssignable(this.typeCastToParameter(node), isLHS);\n    } else {\n      return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n\n      if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n        exprList[i] = this.typeCastToParameter(expr);\n      }\n    }\n\n    return super.toAssignableList(exprList, trailingCommaPos, isLHS);\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    for (let i = 0; i < exprList.length; i++) {\n      var _expr$extra;\n\n      const expr = exprList[i];\n\n      if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) != null && _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n        this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n      }\n    }\n\n    return exprList;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    const node = super.parseArrayLike(close, canBePattern, isTuple, refExpressionErrors);\n\n    if (canBePattern && !this.state.maybeInArrowParameters) {\n      this.toReferencedList(node.elements);\n    }\n\n    return node;\n  }\n\n  checkLVal(expr, ...args) {\n    if (expr.type !== \"TypeCastExpression\") {\n      return super.checkLVal(expr, ...args);\n    }\n  }\n\n  parseClassProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (this.match(14)) {\n      node.typeAnnotation = this.flowParseTypeAnnotation();\n    }\n\n    return super.parseClassPrivateProperty(node);\n  }\n\n  isClassMethod() {\n    return this.match(45) || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(14) || super.isClassProperty();\n  }\n\n  isNonstaticConstructor(method) {\n    return !this.match(14) && super.isNonstaticConstructor(method);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.match(45)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n\n    if (method.params && isConstructor) {\n      const params = method.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    } else if (method.type === \"MethodDefinition\" && isConstructor && method.value.params) {\n      const params = method.value.params;\n\n      if (params.length > 0 && this.isThisParam(params[0])) {\n        this.raise(method.start, FlowErrors.ThisParamBannedInConstructor);\n      }\n    }\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    if (method.variance) {\n      this.unexpected(method.variance.start);\n    }\n\n    delete method.variance;\n\n    if (this.match(45)) {\n      method.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.match(45)) {\n      node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n    }\n\n    if (this.isContextual(106)) {\n      this.next();\n      const implemented = node.implements = [];\n\n      do {\n        const node = this.startNode();\n        node.id = this.flowParseRestrictedIdentifier(true);\n\n        if (this.match(45)) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        implemented.push(this.finishNode(node, \"ClassImplements\"));\n      } while (this.eat(12));\n    }\n  }\n\n  checkGetterSetterParams(method) {\n    super.checkGetterSetterParams(method);\n    const params = this.getObjectOrClassMethodParams(method);\n\n    if (params.length > 0) {\n      const param = params[0];\n\n      if (this.isThisParam(param) && method.kind === \"get\") {\n        this.raise(param.start, FlowErrors.GetterMayNotHaveThisParam);\n      } else if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.SetterMayNotHaveThisParam);\n      }\n    }\n  }\n\n  parsePropertyNamePrefixOperator(node) {\n    node.variance = this.flowParseVariance();\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    if (prop.variance) {\n      this.unexpected(prop.variance.start);\n    }\n\n    delete prop.variance;\n    let typeParameters;\n\n    if (this.match(45) && !isAccessor) {\n      typeParameters = this.flowParseTypeParameterDeclaration();\n      if (!this.match(10)) this.unexpected();\n    }\n\n    super.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n    if (typeParameters) {\n      (prop.value || prop).typeParameters = typeParameters;\n    }\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\") {\n        this.raise(param.start, FlowErrors.PatternIsOptional);\n      }\n\n      if (this.isThisParam(param)) {\n        this.raise(param.start, FlowErrors.ThisParamMayNotBeOptional);\n      }\n\n      param.optional = true;\n    }\n\n    if (this.match(14)) {\n      param.typeAnnotation = this.flowParseTypeAnnotation();\n    } else if (this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamAnnotationRequired);\n    }\n\n    if (this.match(29) && this.isThisParam(param)) {\n      this.raise(param.start, FlowErrors.ThisParamNoDefault);\n    }\n\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    const node = super.parseMaybeDefault(startPos, startLoc, left);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n    }\n\n    return node;\n  }\n\n  shouldParseDefaultImport(node) {\n    if (!hasTypeImportKind(node)) {\n      return super.shouldParseDefaultImport(node);\n    }\n\n    return isMaybeDefaultImport(this.state.type);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    node.importKind = \"value\";\n    let kind = null;\n\n    if (this.match(83)) {\n      kind = \"typeof\";\n    } else if (this.isContextual(122)) {\n      kind = \"type\";\n    }\n\n    if (kind) {\n      const lh = this.lookahead();\n      const {\n        type\n      } = lh;\n\n      if (kind === \"type\" && type === 51) {\n        this.unexpected(lh.start);\n      }\n\n      if (isMaybeDefaultImport(type) || type === 5 || type === 51) {\n        this.next();\n        node.importKind = kind;\n      }\n    }\n\n    return super.maybeParseDefaultImportSpecifier(node);\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n    const firstIdent = specifier.imported;\n    let specifierTypeKind = null;\n\n    if (firstIdent.type === \"Identifier\") {\n      if (firstIdent.name === \"type\") {\n        specifierTypeKind = \"type\";\n      } else if (firstIdent.name === \"typeof\") {\n        specifierTypeKind = \"typeof\";\n      }\n    }\n\n    let isBinding = false;\n\n    if (this.isContextual(89) && !this.isLookaheadContextual(\"as\")) {\n      const as_ident = this.parseIdentifier(true);\n\n      if (specifierTypeKind !== null && !tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = as_ident;\n        specifier.importKind = specifierTypeKind;\n        specifier.local = cloneIdentifier(as_ident);\n      } else {\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n        specifier.local = this.parseIdentifier();\n      }\n    } else {\n      if (specifierTypeKind !== null && tokenIsKeywordOrIdentifier(this.state.type)) {\n        specifier.imported = this.parseIdentifier(true);\n        specifier.importKind = specifierTypeKind;\n      } else {\n        if (importedIsString) {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n        }\n\n        specifier.imported = firstIdent;\n        specifier.importKind = null;\n      }\n\n      if (this.eatContextual(89)) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        isBinding = true;\n        specifier.local = cloneIdentifier(specifier.imported);\n      }\n    }\n\n    const specifierIsTypeImport = hasTypeImportKind(specifier);\n\n    if (isInTypeOnlyImport && specifierIsTypeImport) {\n      this.raise(specifier.start, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n    }\n\n    if (isInTypeOnlyImport || specifierIsTypeImport) {\n      this.checkReservedType(specifier.local.name, specifier.local.start, true);\n    }\n\n    if (isBinding && !isInTypeOnlyImport && !specifierIsTypeImport) {\n      this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    return this.finishNode(specifier, \"ImportSpecifier\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 74:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const kind = node.kind;\n\n    if (kind !== \"get\" && kind !== \"set\" && this.match(45)) {\n      node.typeParameters = this.flowParseTypeParameterDeclaration();\n    }\n\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (this.match(14)) {\n      decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n      this.state.noAnonFunctionType = true;\n      node.returnType = this.flowParseTypeAnnotation();\n      this.state.noAnonFunctionType = oldNoAnonFunctionType;\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    var _jsx;\n\n    let state = null;\n    let jsx;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(134) || this.match(45))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(refExpressionErrors, afterLeftParse), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n\n    if ((_jsx = jsx) != null && _jsx.error || this.match(45)) {\n      var _jsx2, _jsx3;\n\n      state = state || this.state.clone();\n      let typeParameters;\n      const arrow = this.tryParse(abort => {\n        var _arrowExpression$extr;\n\n        typeParameters = this.flowParseTypeParameterDeclaration();\n        const arrowExpression = this.forwardNoArrowParamsConversionAt(typeParameters, () => {\n          const result = super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n          this.resetStartLocationFromNode(result, typeParameters);\n          return result;\n        });\n        if ((_arrowExpression$extr = arrowExpression.extra) != null && _arrowExpression$extr.parenthesized) abort();\n        const expr = this.maybeUnwrapTypeCastExpression(arrowExpression);\n        if (expr.type !== \"ArrowFunctionExpression\") abort();\n        expr.typeParameters = typeParameters;\n        this.resetStartLocationFromNode(expr, typeParameters);\n        return arrowExpression;\n      }, state);\n      let arrowExpression = null;\n\n      if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n        if (!arrow.error && !arrow.aborted) {\n          if (arrow.node.async) {\n            this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n          }\n\n          return arrow.node;\n        }\n\n        arrowExpression = arrow.node;\n      }\n\n      if ((_jsx2 = jsx) != null && _jsx2.node) {\n        this.state = jsx.failState;\n        return jsx.node;\n      }\n\n      if (arrowExpression) {\n        this.state = arrow.failState;\n        return arrowExpression;\n      }\n\n      if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n      if (arrow.thrown) throw arrow.error;\n      throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n    }\n\n    return super.parseMaybeAssign(refExpressionErrors, afterLeftParse);\n  }\n\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(() => {\n        const oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = true;\n        const typeNode = this.startNode();\n        [typeNode.typeAnnotation, node.predicate] = this.flowParseTypeAndPredicateInitialiser();\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        if (this.canInsertSemicolon()) this.unexpected();\n        if (!this.match(19)) this.unexpected();\n        return typeNode;\n      });\n      if (result.thrown) return null;\n      if (result.error) this.state = result.failState;\n      node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n    }\n\n    return super.parseArrow(node);\n  }\n\n  shouldParseArrow(params) {\n    return this.match(14) || super.shouldParseArrow(params);\n  }\n\n  setArrowFunctionParameters(node, params) {\n    if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      node.params = params;\n    } else {\n      super.setArrowFunctionParameters(node, params);\n    }\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction) {\n    if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n      return;\n    }\n\n    for (let i = 0; i < node.params.length; i++) {\n      if (this.isThisParam(node.params[i]) && i > 0) {\n        this.raise(node.params[i].start, FlowErrors.ThisParamMustBeFirst);\n      }\n    }\n\n    return super.checkParams(...arguments);\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    return super.parseParenAndDistinguishExpression(canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      base = this.finishNode(node, \"CallExpression\");\n    } else if (base.type === \"Identifier\" && base.name === \"async\" && this.match(45)) {\n      const state = this.state.clone();\n      const arrow = this.tryParse(abort => this.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort(), state);\n      if (!arrow.error && !arrow.aborted) return arrow.node;\n      const result = this.tryParse(() => super.parseSubscripts(base, startPos, startLoc, noCalls), state);\n      if (result.node && !result.error) return result.node;\n\n      if (arrow.node) {\n        this.state = arrow.failState;\n        return arrow.node;\n      }\n\n      if (result.node) {\n        this.state = result.failState;\n        return result.node;\n      }\n\n      throw arrow.error || result.error;\n    }\n\n    return super.parseSubscripts(base, startPos, startLoc, noCalls);\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n    if (this.match(18) && this.isLookaheadToken_lt()) {\n      subscriptState.optionalChainMember = true;\n\n      if (noCalls) {\n        subscriptState.stop = true;\n        return base;\n      }\n\n      this.next();\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      node.typeArguments = this.flowParseTypeParameterInstantiation();\n      this.expect(10);\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      node.optional = true;\n      return this.finishCallExpression(node, true);\n    } else if (!noCalls && this.shouldParseTypes() && this.match(45)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n      const result = this.tryParse(() => {\n        node.typeArguments = this.flowParseTypeParameterInstantiationCallOrNew();\n        this.expect(10);\n        node.arguments = this.parseCallExpressionArguments(11, false);\n        if (subscriptState.optionalChainMember) node.optional = false;\n        return this.finishCallExpression(node, subscriptState.optionalChainMember);\n      });\n\n      if (result.node) {\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, subscriptState);\n  }\n\n  parseNewArguments(node) {\n    let targs = null;\n\n    if (this.shouldParseTypes() && this.match(45)) {\n      targs = this.tryParse(() => this.flowParseTypeParameterInstantiationCallOrNew()).node;\n    }\n\n    node.typeArguments = targs;\n    super.parseNewArguments(node);\n  }\n\n  parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.parseFunctionParams(node);\n    if (!this.parseArrow(node)) return;\n    return this.parseArrowExpression(node, undefined, true);\n  }\n\n  readToken_mult_modulo(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 42 && next === 47 && this.state.hasFlowComment) {\n      this.state.hasFlowComment = false;\n      this.state.pos += 2;\n      this.nextToken();\n      return;\n    }\n\n    super.readToken_mult_modulo(code);\n  }\n\n  readToken_pipe_amp(code) {\n    const next = this.input.charCodeAt(this.state.pos + 1);\n\n    if (code === 124 && next === 125) {\n      this.finishOp(9, 2);\n      return;\n    }\n\n    super.readToken_pipe_amp(code);\n  }\n\n  parseTopLevel(file, program) {\n    const fileNode = super.parseTopLevel(file, program);\n\n    if (this.state.hasFlowComment) {\n      this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n    }\n\n    return fileNode;\n  }\n\n  skipBlockComment() {\n    if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n      if (this.state.hasFlowComment) {\n        this.unexpected(null, FlowErrors.NestedFlowComment);\n      }\n\n      this.hasFlowCommentCompletion();\n      this.state.pos += this.skipFlowComment();\n      this.state.hasFlowComment = true;\n      return;\n    }\n\n    if (this.state.hasFlowComment) {\n      const end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n      if (end === -1) {\n        throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n      }\n\n      this.state.pos = end + 3;\n      return;\n    }\n\n    return super.skipBlockComment();\n  }\n\n  skipFlowComment() {\n    const {\n      pos\n    } = this.state;\n    let shiftToFirstNonWhiteSpace = 2;\n\n    while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n      shiftToFirstNonWhiteSpace++;\n    }\n\n    const ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n    const ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n    if (ch2 === 58 && ch3 === 58) {\n      return shiftToFirstNonWhiteSpace + 2;\n    }\n\n    if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n      return shiftToFirstNonWhiteSpace + 12;\n    }\n\n    if (ch2 === 58 && ch3 !== 58) {\n      return shiftToFirstNonWhiteSpace;\n    }\n\n    return false;\n  }\n\n  hasFlowCommentCompletion() {\n    const end = this.input.indexOf(\"*/\", this.state.pos);\n\n    if (end === -1) {\n      throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n    }\n  }\n\n  flowEnumErrorBooleanMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n  }\n\n  flowEnumErrorInvalidMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    const suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n    this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n  }\n\n  flowEnumErrorDuplicateMemberName(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n  }\n\n  flowEnumErrorInconsistentMemberValues(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n  }\n\n  flowEnumErrorInvalidExplicitType(pos, {\n    enumName,\n    suppliedType\n  }) {\n    return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n  }\n\n  flowEnumErrorInvalidMemberInitializer(pos, {\n    enumName,\n    explicitType,\n    memberName\n  }) {\n    let message = null;\n\n    switch (explicitType) {\n      case \"boolean\":\n      case \"number\":\n      case \"string\":\n        message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n        break;\n\n      case \"symbol\":\n        message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n        break;\n\n      default:\n        message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n    }\n\n    return this.raise(pos, message, enumName, memberName, explicitType);\n  }\n\n  flowEnumErrorNumberMemberNotInitialized(pos, {\n    enumName,\n    memberName\n  }) {\n    this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n  }\n\n  flowEnumErrorStringMemberInconsistentlyInitailized(pos, {\n    enumName\n  }) {\n    this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n  }\n\n  flowEnumMemberInit() {\n    const startPos = this.state.start;\n\n    const endOfInit = () => this.match(12) || this.match(8);\n\n    switch (this.state.type) {\n      case 126:\n        {\n          const literal = this.parseNumericLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"number\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case 125:\n        {\n          const literal = this.parseStringLiteral(this.state.value);\n\n          if (endOfInit()) {\n            return {\n              type: \"string\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      case 81:\n      case 82:\n        {\n          const literal = this.parseBooleanLiteral(this.match(81));\n\n          if (endOfInit()) {\n            return {\n              type: \"boolean\",\n              pos: literal.start,\n              value: literal\n            };\n          }\n\n          return {\n            type: \"invalid\",\n            pos: startPos\n          };\n        }\n\n      default:\n        return {\n          type: \"invalid\",\n          pos: startPos\n        };\n    }\n  }\n\n  flowEnumMemberRaw() {\n    const pos = this.state.start;\n    const id = this.parseIdentifier(true);\n    const init = this.eat(29) ? this.flowEnumMemberInit() : {\n      type: \"none\",\n      pos\n    };\n    return {\n      id,\n      init\n    };\n  }\n\n  flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n    const {\n      explicitType\n    } = context;\n\n    if (explicitType === null) {\n      return;\n    }\n\n    if (explicitType !== expectedType) {\n      this.flowEnumErrorInvalidMemberInitializer(pos, context);\n    }\n  }\n\n  flowEnumMembers({\n    enumName,\n    explicitType\n  }) {\n    const seenNames = new Set();\n    const members = {\n      booleanMembers: [],\n      numberMembers: [],\n      stringMembers: [],\n      defaultedMembers: []\n    };\n    let hasUnknownMembers = false;\n\n    while (!this.match(8)) {\n      if (this.eat(21)) {\n        hasUnknownMembers = true;\n        break;\n      }\n\n      const memberNode = this.startNode();\n      const {\n        id,\n        init\n      } = this.flowEnumMemberRaw();\n      const memberName = id.name;\n\n      if (memberName === \"\") {\n        continue;\n      }\n\n      if (/^[a-z]/.test(memberName)) {\n        this.flowEnumErrorInvalidMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      if (seenNames.has(memberName)) {\n        this.flowEnumErrorDuplicateMemberName(id.start, {\n          enumName,\n          memberName\n        });\n      }\n\n      seenNames.add(memberName);\n      const context = {\n        enumName,\n        explicitType,\n        memberName\n      };\n      memberNode.id = id;\n\n      switch (init.type) {\n        case \"boolean\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n            memberNode.init = init.value;\n            members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n            break;\n          }\n\n        case \"number\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n            memberNode.init = init.value;\n            members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n            break;\n          }\n\n        case \"string\":\n          {\n            this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n            memberNode.init = init.value;\n            members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n            break;\n          }\n\n        case \"invalid\":\n          {\n            throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n          }\n\n        case \"none\":\n          {\n            switch (explicitType) {\n              case \"boolean\":\n                this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                break;\n\n              case \"number\":\n                this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                break;\n\n              default:\n                members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n            }\n          }\n      }\n\n      if (!this.match(8)) {\n        this.expect(12);\n      }\n    }\n\n    return {\n      members,\n      hasUnknownMembers\n    };\n  }\n\n  flowEnumStringMembers(initializedMembers, defaultedMembers, {\n    enumName\n  }) {\n    if (initializedMembers.length === 0) {\n      return defaultedMembers;\n    } else if (defaultedMembers.length === 0) {\n      return initializedMembers;\n    } else if (defaultedMembers.length > initializedMembers.length) {\n      for (const member of initializedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return defaultedMembers;\n    } else {\n      for (const member of defaultedMembers) {\n        this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n          enumName\n        });\n      }\n\n      return initializedMembers;\n    }\n  }\n\n  flowEnumParseExplicitType({\n    enumName\n  }) {\n    if (this.eatContextual(97)) {\n      if (!tokenIsIdentifier(this.state.type)) {\n        throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: null\n        });\n      }\n\n      const {\n        value\n      } = this.state;\n      this.next();\n\n      if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n        this.flowEnumErrorInvalidExplicitType(this.state.start, {\n          enumName,\n          suppliedType: value\n        });\n      }\n\n      return value;\n    }\n\n    return null;\n  }\n\n  flowEnumBody(node, {\n    enumName,\n    nameLoc\n  }) {\n    const explicitType = this.flowEnumParseExplicitType({\n      enumName\n    });\n    this.expect(5);\n    const {\n      members,\n      hasUnknownMembers\n    } = this.flowEnumMembers({\n      enumName,\n      explicitType\n    });\n    node.hasUnknownMembers = hasUnknownMembers;\n\n    switch (explicitType) {\n      case \"boolean\":\n        node.explicitType = true;\n        node.members = members.booleanMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumBooleanBody\");\n\n      case \"number\":\n        node.explicitType = true;\n        node.members = members.numberMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumNumberBody\");\n\n      case \"string\":\n        node.explicitType = true;\n        node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n          enumName\n        });\n        this.expect(8);\n        return this.finishNode(node, \"EnumStringBody\");\n\n      case \"symbol\":\n        node.members = members.defaultedMembers;\n        this.expect(8);\n        return this.finishNode(node, \"EnumSymbolBody\");\n\n      default:\n        {\n          const empty = () => {\n            node.members = [];\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          };\n\n          node.explicitType = false;\n          const boolsLen = members.booleanMembers.length;\n          const numsLen = members.numberMembers.length;\n          const strsLen = members.stringMembers.length;\n          const defaultedLen = members.defaultedMembers.length;\n\n          if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n            return empty();\n          } else if (!boolsLen && !numsLen) {\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName\n            });\n            this.expect(8);\n            return this.finishNode(node, \"EnumStringBody\");\n          } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.booleanMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumBooleanBody\");\n          } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n            for (const member of members.defaultedMembers) {\n              this.flowEnumErrorNumberMemberNotInitialized(member.start, {\n                enumName,\n                memberName: member.id.name\n              });\n            }\n\n            node.members = members.numberMembers;\n            this.expect(8);\n            return this.finishNode(node, \"EnumNumberBody\");\n          } else {\n            this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n              enumName\n            });\n            return empty();\n          }\n        }\n    }\n  }\n\n  flowParseEnumDeclaration(node) {\n    const id = this.parseIdentifier();\n    node.id = id;\n    node.body = this.flowEnumBody(this.startNode(), {\n      enumName: id.name,\n      nameLoc: id.start\n    });\n    return this.finishNode(node, \"EnumDeclaration\");\n  }\n\n  isLookaheadToken_lt() {\n    const next = this.nextTokenStart();\n\n    if (this.input.charCodeAt(next) === 60) {\n      const afterNext = this.input.charCodeAt(next + 1);\n      return afterNext !== 60 && afterNext !== 61;\n    }\n\n    return false;\n  }\n\n  maybeUnwrapTypeCastExpression(node) {\n    return node.type === \"TypeCastExpression\" ? node.expression : node;\n  }\n\n});\n\nconst entities = {\n  quot: \"\\u0022\",\n  amp: \"&\",\n  apos: \"\\u0027\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\u00A0\",\n  iexcl: \"\\u00A1\",\n  cent: \"\\u00A2\",\n  pound: \"\\u00A3\",\n  curren: \"\\u00A4\",\n  yen: \"\\u00A5\",\n  brvbar: \"\\u00A6\",\n  sect: \"\\u00A7\",\n  uml: \"\\u00A8\",\n  copy: \"\\u00A9\",\n  ordf: \"\\u00AA\",\n  laquo: \"\\u00AB\",\n  not: \"\\u00AC\",\n  shy: \"\\u00AD\",\n  reg: \"\\u00AE\",\n  macr: \"\\u00AF\",\n  deg: \"\\u00B0\",\n  plusmn: \"\\u00B1\",\n  sup2: \"\\u00B2\",\n  sup3: \"\\u00B3\",\n  acute: \"\\u00B4\",\n  micro: \"\\u00B5\",\n  para: \"\\u00B6\",\n  middot: \"\\u00B7\",\n  cedil: \"\\u00B8\",\n  sup1: \"\\u00B9\",\n  ordm: \"\\u00BA\",\n  raquo: \"\\u00BB\",\n  frac14: \"\\u00BC\",\n  frac12: \"\\u00BD\",\n  frac34: \"\\u00BE\",\n  iquest: \"\\u00BF\",\n  Agrave: \"\\u00C0\",\n  Aacute: \"\\u00C1\",\n  Acirc: \"\\u00C2\",\n  Atilde: \"\\u00C3\",\n  Auml: \"\\u00C4\",\n  Aring: \"\\u00C5\",\n  AElig: \"\\u00C6\",\n  Ccedil: \"\\u00C7\",\n  Egrave: \"\\u00C8\",\n  Eacute: \"\\u00C9\",\n  Ecirc: \"\\u00CA\",\n  Euml: \"\\u00CB\",\n  Igrave: \"\\u00CC\",\n  Iacute: \"\\u00CD\",\n  Icirc: \"\\u00CE\",\n  Iuml: \"\\u00CF\",\n  ETH: \"\\u00D0\",\n  Ntilde: \"\\u00D1\",\n  Ograve: \"\\u00D2\",\n  Oacute: \"\\u00D3\",\n  Ocirc: \"\\u00D4\",\n  Otilde: \"\\u00D5\",\n  Ouml: \"\\u00D6\",\n  times: \"\\u00D7\",\n  Oslash: \"\\u00D8\",\n  Ugrave: \"\\u00D9\",\n  Uacute: \"\\u00DA\",\n  Ucirc: \"\\u00DB\",\n  Uuml: \"\\u00DC\",\n  Yacute: \"\\u00DD\",\n  THORN: \"\\u00DE\",\n  szlig: \"\\u00DF\",\n  agrave: \"\\u00E0\",\n  aacute: \"\\u00E1\",\n  acirc: \"\\u00E2\",\n  atilde: \"\\u00E3\",\n  auml: \"\\u00E4\",\n  aring: \"\\u00E5\",\n  aelig: \"\\u00E6\",\n  ccedil: \"\\u00E7\",\n  egrave: \"\\u00E8\",\n  eacute: \"\\u00E9\",\n  ecirc: \"\\u00EA\",\n  euml: \"\\u00EB\",\n  igrave: \"\\u00EC\",\n  iacute: \"\\u00ED\",\n  icirc: \"\\u00EE\",\n  iuml: \"\\u00EF\",\n  eth: \"\\u00F0\",\n  ntilde: \"\\u00F1\",\n  ograve: \"\\u00F2\",\n  oacute: \"\\u00F3\",\n  ocirc: \"\\u00F4\",\n  otilde: \"\\u00F5\",\n  ouml: \"\\u00F6\",\n  divide: \"\\u00F7\",\n  oslash: \"\\u00F8\",\n  ugrave: \"\\u00F9\",\n  uacute: \"\\u00FA\",\n  ucirc: \"\\u00FB\",\n  uuml: \"\\u00FC\",\n  yacute: \"\\u00FD\",\n  thorn: \"\\u00FE\",\n  yuml: \"\\u00FF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\n\nconst HEX_NUMBER = /^[\\da-fA-F]+$/;\nconst DECIMAL_NUMBER = /^\\d+$/;\nconst JsxErrors = makeErrorTemplates({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression.\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>.\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>.\",\n  UnexpectedSequenceExpression: \"Sequence expressions cannot be directly nested inside JSX. Did you mean to wrap it in parentheses (...)?\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text.\",\n  UnterminatedJsxContent: \"Unterminated JSX contents.\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n}, ErrorCodes.SyntaxError, \"jsx\");\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = (superClass => class extends superClass {\n  jsxReadToken() {\n    let out = \"\";\n    let chunkStart = this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n\n      switch (ch) {\n        case 60:\n        case 123:\n          if (this.state.pos === this.state.start) {\n            if (ch === 60 && this.state.canStartJSXElement) {\n              ++this.state.pos;\n              return this.finishToken(134);\n            }\n\n            return super.getTokenFromCode(ch);\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          return this.finishToken(133, out);\n\n        case 38:\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.jsxReadEntity();\n          chunkStart = this.state.pos;\n          break;\n\n        case 62:\n        case 125:\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(true);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n\n      }\n    }\n  }\n\n  jsxReadNewLine(normalizeCRLF) {\n    const ch = this.input.charCodeAt(this.state.pos);\n    let out;\n    ++this.state.pos;\n\n    if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n      ++this.state.pos;\n      out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n    } else {\n      out = String.fromCharCode(ch);\n    }\n\n    ++this.state.curLine;\n    this.state.lineStart = this.state.pos;\n    return out;\n  }\n\n  jsxReadString(quote) {\n    let out = \"\";\n    let chunkStart = ++this.state.pos;\n\n    for (;;) {\n      if (this.state.pos >= this.length) {\n        throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n      }\n\n      const ch = this.input.charCodeAt(this.state.pos);\n      if (ch === quote) break;\n\n      if (ch === 38) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadEntity();\n        chunkStart = this.state.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.state.pos);\n        out += this.jsxReadNewLine(false);\n        chunkStart = this.state.pos;\n      } else {\n        ++this.state.pos;\n      }\n    }\n\n    out += this.input.slice(chunkStart, this.state.pos++);\n    return this.finishToken(125, out);\n  }\n\n  jsxReadEntity() {\n    let str = \"\";\n    let count = 0;\n    let entity;\n    let ch = this.input[this.state.pos];\n    const startPos = ++this.state.pos;\n\n    while (this.state.pos < this.length && count++ < 10) {\n      ch = this.input[this.state.pos++];\n\n      if (ch === \";\") {\n        if (str[0] === \"#\") {\n          if (str[1] === \"x\") {\n            str = str.substr(2);\n\n            if (HEX_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 16));\n            }\n          } else {\n            str = str.substr(1);\n\n            if (DECIMAL_NUMBER.test(str)) {\n              entity = String.fromCodePoint(parseInt(str, 10));\n            }\n          }\n        } else {\n          entity = entities[str];\n        }\n\n        break;\n      }\n\n      str += ch;\n    }\n\n    if (!entity) {\n      this.state.pos = startPos;\n      return \"&\";\n    }\n\n    return entity;\n  }\n\n  jsxReadWord() {\n    let ch;\n    const start = this.state.pos;\n\n    do {\n      ch = this.input.charCodeAt(++this.state.pos);\n    } while (isIdentifierChar(ch) || ch === 45);\n\n    return this.finishToken(132, this.input.slice(start, this.state.pos));\n  }\n\n  jsxParseIdentifier() {\n    const node = this.startNode();\n\n    if (this.match(132)) {\n      node.name = this.state.value;\n    } else if (tokenIsKeyword(this.state.type)) {\n      node.name = tokenLabelName(this.state.type);\n    } else {\n      this.unexpected();\n    }\n\n    this.next();\n    return this.finishNode(node, \"JSXIdentifier\");\n  }\n\n  jsxParseNamespacedName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const name = this.jsxParseIdentifier();\n    if (!this.eat(14)) return name;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.namespace = name;\n    node.name = this.jsxParseIdentifier();\n    return this.finishNode(node, \"JSXNamespacedName\");\n  }\n\n  jsxParseElementName() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let node = this.jsxParseNamespacedName();\n\n    if (node.type === \"JSXNamespacedName\") {\n      return node;\n    }\n\n    while (this.eat(16)) {\n      const newNode = this.startNodeAt(startPos, startLoc);\n      newNode.object = node;\n      newNode.property = this.jsxParseIdentifier();\n      node = this.finishNode(newNode, \"JSXMemberExpression\");\n    }\n\n    return node;\n  }\n\n  jsxParseAttributeValue() {\n    let node;\n\n    switch (this.state.type) {\n      case 5:\n        node = this.startNode();\n        this.setContext(types.brace);\n        this.next();\n        node = this.jsxParseExpressionContainer(node, types.j_oTag);\n\n        if (node.expression.type === \"JSXEmptyExpression\") {\n          this.raise(node.start, JsxErrors.AttributeIsEmpty);\n        }\n\n        return node;\n\n      case 134:\n      case 125:\n        return this.parseExprAtom();\n\n      default:\n        throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n    }\n  }\n\n  jsxParseEmptyExpression() {\n    const node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n    return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n  }\n\n  jsxParseSpreadChild(node) {\n    this.next();\n    node.expression = this.parseExpression();\n    this.setContext(types.j_oTag);\n    this.expect(8);\n    return this.finishNode(node, \"JSXSpreadChild\");\n  }\n\n  jsxParseExpressionContainer(node, previousContext) {\n    if (this.match(8)) {\n      node.expression = this.jsxParseEmptyExpression();\n    } else {\n      const expression = this.parseExpression();\n      node.expression = expression;\n    }\n\n    this.setContext(previousContext);\n    this.expect(8);\n    return this.finishNode(node, \"JSXExpressionContainer\");\n  }\n\n  jsxParseAttribute() {\n    const node = this.startNode();\n\n    if (this.match(5)) {\n      this.setContext(types.brace);\n      this.next();\n      this.expect(21);\n      node.argument = this.parseMaybeAssignAllowIn();\n      this.setContext(types.j_oTag);\n      this.expect(8);\n      return this.finishNode(node, \"JSXSpreadAttribute\");\n    }\n\n    node.name = this.jsxParseNamespacedName();\n    node.value = this.eat(29) ? this.jsxParseAttributeValue() : null;\n    return this.finishNode(node, \"JSXAttribute\");\n  }\n\n  jsxParseOpeningElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(135)) {\n      this.expect(135);\n      return this.finishNode(node, \"JSXOpeningFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    return this.jsxParseOpeningElementAfterName(node);\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    const attributes = [];\n\n    while (!this.match(52) && !this.match(135)) {\n      attributes.push(this.jsxParseAttribute());\n    }\n\n    node.attributes = attributes;\n    node.selfClosing = this.eat(52);\n    this.expect(135);\n    return this.finishNode(node, \"JSXOpeningElement\");\n  }\n\n  jsxParseClosingElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n\n    if (this.match(135)) {\n      this.expect(135);\n      return this.finishNode(node, \"JSXClosingFragment\");\n    }\n\n    node.name = this.jsxParseElementName();\n    this.expect(135);\n    return this.finishNode(node, \"JSXClosingElement\");\n  }\n\n  jsxParseElementAt(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    const children = [];\n    const openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n    let closingElement = null;\n\n    if (!openingElement.selfClosing) {\n      contents: for (;;) {\n        switch (this.state.type) {\n          case 134:\n            startPos = this.state.start;\n            startLoc = this.state.startLoc;\n            this.next();\n\n            if (this.eat(52)) {\n              closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n\n            children.push(this.jsxParseElementAt(startPos, startLoc));\n            break;\n\n          case 133:\n            children.push(this.parseExprAtom());\n            break;\n\n          case 5:\n            {\n              const node = this.startNode();\n              this.setContext(types.brace);\n              this.next();\n\n              if (this.match(21)) {\n                children.push(this.jsxParseSpreadChild(node));\n              } else {\n                children.push(this.jsxParseExpressionContainer(node, types.j_expr));\n              }\n\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      if (isFragment(openingElement) && !isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n      } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n        this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n      } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n        }\n      }\n    }\n\n    if (isFragment(openingElement)) {\n      node.openingFragment = openingElement;\n      node.closingFragment = closingElement;\n    } else {\n      node.openingElement = openingElement;\n      node.closingElement = closingElement;\n    }\n\n    node.children = children;\n\n    if (this.match(45)) {\n      throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n    }\n\n    return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n  }\n\n  jsxParseElement() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.next();\n    return this.jsxParseElementAt(startPos, startLoc);\n  }\n\n  setContext(newContext) {\n    const {\n      context\n    } = this.state;\n    context[context.length - 1] = newContext;\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    if (this.match(133)) {\n      return this.parseLiteral(this.state.value, \"JSXText\");\n    } else if (this.match(134)) {\n      return this.jsxParseElement();\n    } else if (this.match(45) && this.input.charCodeAt(this.state.pos) !== 33) {\n      this.replaceToken(134);\n      return this.jsxParseElement();\n    } else {\n      return super.parseExprAtom(refExpressionErrors);\n    }\n  }\n\n  skipSpace() {\n    const curContext = this.curContext();\n    if (!curContext.preserveSpace) super.skipSpace();\n  }\n\n  getTokenFromCode(code) {\n    const context = this.curContext();\n\n    if (context === types.j_expr) {\n      return this.jsxReadToken();\n    }\n\n    if (context === types.j_oTag || context === types.j_cTag) {\n      if (isIdentifierStart(code)) {\n        return this.jsxReadWord();\n      }\n\n      if (code === 62) {\n        ++this.state.pos;\n        return this.finishToken(135);\n      }\n\n      if ((code === 34 || code === 39) && context === types.j_oTag) {\n        return this.jsxReadString(code);\n      }\n    }\n\n    if (code === 60 && this.state.canStartJSXElement && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n      ++this.state.pos;\n      return this.finishToken(134);\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  updateContext(prevType) {\n    const {\n      context,\n      type\n    } = this.state;\n\n    if (type === 52 && prevType === 134) {\n      context.splice(-2, 2, types.j_cTag);\n      this.state.canStartJSXElement = false;\n    } else if (type === 134) {\n      context.push(types.j_oTag);\n    } else if (type === 135) {\n      const out = context[context.length - 1];\n\n      if (out === types.j_oTag && prevType === 52 || out === types.j_cTag) {\n        context.pop();\n        this.state.canStartJSXElement = context[context.length - 1] === types.j_expr;\n      } else {\n        this.setContext(types.j_expr);\n        this.state.canStartJSXElement = true;\n      }\n    } else {\n      this.state.canStartJSXElement = tokenComesBeforeExpression(type);\n    }\n  }\n\n});\n\nclass TypeScriptScope extends Scope {\n  constructor(...args) {\n    super(...args);\n    this.types = new Set();\n    this.enums = new Set();\n    this.constEnums = new Set();\n    this.classes = new Set();\n    this.exportOnlyBindings = new Set();\n  }\n\n}\n\nclass TypeScriptScopeHandler extends ScopeHandler {\n  createScope(flags) {\n    return new TypeScriptScope(flags);\n  }\n\n  declareName(name, bindingType, pos) {\n    const scope = this.currentScope();\n\n    if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n      this.maybeExportDefined(scope, name);\n      scope.exportOnlyBindings.add(name);\n      return;\n    }\n\n    super.declareName(...arguments);\n\n    if (bindingType & BIND_KIND_TYPE) {\n      if (!(bindingType & BIND_KIND_VALUE)) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n        this.maybeExportDefined(scope, name);\n      }\n\n      scope.types.add(name);\n    }\n\n    if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.add(name);\n    if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.add(name);\n    if (bindingType & BIND_FLAGS_CLASS) scope.classes.add(name);\n  }\n\n  isRedeclaredInScope(scope, name, bindingType) {\n    if (scope.enums.has(name)) {\n      if (bindingType & BIND_FLAGS_TS_ENUM) {\n        const isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n        const wasConst = scope.constEnums.has(name);\n        return isConst !== wasConst;\n      }\n\n      return true;\n    }\n\n    if (bindingType & BIND_FLAGS_CLASS && scope.classes.has(name)) {\n      if (scope.lexical.has(name)) {\n        return !!(bindingType & BIND_KIND_VALUE);\n      } else {\n        return false;\n      }\n    }\n\n    if (bindingType & BIND_KIND_TYPE && scope.types.has(name)) {\n      return true;\n    }\n\n    return super.isRedeclaredInScope(...arguments);\n  }\n\n  checkLocalExport(id) {\n    const topLevelScope = this.scopeStack[0];\n    const {\n      name\n    } = id;\n\n    if (!topLevelScope.types.has(name) && !topLevelScope.exportOnlyBindings.has(name)) {\n      super.checkLocalExport(id);\n    }\n  }\n\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(`Unexpected ${x} value.`);\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nconst TSErrors = makeErrorTemplates({\n  AbstractMethodHasImplementation: \"Method '%0' cannot have an implementation because it is marked abstract.\",\n  AbstractPropertyHasInitializer: \"Property '%0' cannot have an initializer because it is marked abstract.\",\n  AccesorCannotDeclareThisParameter: \"'get' and 'set' accessors cannot declare 'this' parameters.\",\n  AccesorCannotHaveTypeParameters: \"An accessor cannot have type parameters.\",\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier.\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier.\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareAccessor: \"'declare' is not allowed in %0ters.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateAccessibilityModifier: \"Accessibility modifier already seen.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'.\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  ExpectedAmbientAfterExportDeclare: \"'export declare' must be followed by an ambient declaration.\",\n  ImportAliasHasImportType: \"An import alias can not use 'import type'.\",\n  IncompatibleModifiers: \"'%0' modifier cannot be used with '%1' modifier.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier.\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0').\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier.\",\n  IndexSignatureHasOverride: \"'override' modifier cannot appear on an index signature.\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier.\",\n  InvalidModifierOnTypeMember: \"'%0' modifier cannot appear on a type member.\",\n  InvalidModifiersOrder: \"'%0' modifier must precede '%1' modifier.\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MissingInterfaceName: \"'interface' declarations must be followed by an identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  NonAbstractClassHasAbstractMethod: \"Abstract methods can only appear within an abstract class.\",\n  NonClassMethodPropertyHasAbstractModifer: \"'abstract' modifier can only appear on a class, method, or property declaration.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  OverrideNotInSubClass: \"This member cannot have an 'override' modifier because its containing class does not extend another class.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0').\",\n  ReadonlyForMethodSignature: \"'readonly' modifier can only appear on a property declaration or index signature.\",\n  ReservedArrowTypeParam: \"This syntax is reserved in files with the .mts or .cts extension. Add a trailing comma, as in `<T,>() => ...`.\",\n  ReservedTypeAssertion: \"This syntax is reserved in files with the .mts or .cts extension. Use an `as` expression instead.\",\n  SetAccesorCannotHaveOptionalParameter: \"A 'set' accessor cannot have an optional parameter.\",\n  SetAccesorCannotHaveRestParameter: \"A 'set' accessor cannot have rest parameter.\",\n  SetAccesorCannotHaveReturnType: \"A 'set' accessor cannot have a return type annotation.\",\n  StaticBlockCannotHaveModifier: \"Static class blocks cannot have any modifier.\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`.\",\n  TypeImportCannotSpecifyDefaultAndNamed: \"A type-only import can specify a default import or named bindings, but not both.\",\n  TypeModifierIsUsedInTypeExports: \"The 'type' modifier cannot be used on a named export when 'export type' is used on its export statement.\",\n  TypeModifierIsUsedInTypeImports: \"The 'type' modifier cannot be used on a named import when 'import type' is used on its import statement.\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal.\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0.\"\n}, ErrorCodes.SyntaxError, \"typescript\");\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nfunction tsIsAccessModifier(modifier) {\n  return modifier === \"private\" || modifier === \"public\" || modifier === \"protected\";\n}\n\nvar typescript = (superClass => class extends superClass {\n  getScopeHandler() {\n    return TypeScriptScopeHandler;\n  }\n\n  tsIsIdentifier() {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  tsTokenCanFollowModifier() {\n    return (this.match(0) || this.match(5) || this.match(51) || this.match(21) || this.match(130) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n  }\n\n  tsNextTokenCanFollowModifier() {\n    this.next();\n    return this.tsTokenCanFollowModifier();\n  }\n\n  tsParseModifier(allowedModifiers, stopOnStartOfClassStaticBlock) {\n    if (!tokenIsIdentifier(this.state.type)) {\n      return undefined;\n    }\n\n    const modifier = this.state.value;\n\n    if (allowedModifiers.indexOf(modifier) !== -1) {\n      if (stopOnStartOfClassStaticBlock && this.tsIsStartOfStaticBlocks()) {\n        return undefined;\n      }\n\n      if (this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n        return modifier;\n      }\n    }\n\n    return undefined;\n  }\n\n  tsParseModifiers(modified, allowedModifiers, disallowedModifiers, errorTemplate, stopOnStartOfClassStaticBlock) {\n    const enforceOrder = (pos, modifier, before, after) => {\n      if (modifier === before && modified[after]) {\n        this.raise(pos, TSErrors.InvalidModifiersOrder, before, after);\n      }\n    };\n\n    const incompatible = (pos, modifier, mod1, mod2) => {\n      if (modified[mod1] && modifier === mod2 || modified[mod2] && modifier === mod1) {\n        this.raise(pos, TSErrors.IncompatibleModifiers, mod1, mod2);\n      }\n    };\n\n    for (;;) {\n      const startPos = this.state.start;\n      const modifier = this.tsParseModifier(allowedModifiers.concat(disallowedModifiers != null ? disallowedModifiers : []), stopOnStartOfClassStaticBlock);\n      if (!modifier) break;\n\n      if (tsIsAccessModifier(modifier)) {\n        if (modified.accessibility) {\n          this.raise(startPos, TSErrors.DuplicateAccessibilityModifier);\n        } else {\n          enforceOrder(startPos, modifier, modifier, \"override\");\n          enforceOrder(startPos, modifier, modifier, \"static\");\n          enforceOrder(startPos, modifier, modifier, \"readonly\");\n          modified.accessibility = modifier;\n        }\n      } else {\n        if (Object.hasOwnProperty.call(modified, modifier)) {\n          this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n        } else {\n          enforceOrder(startPos, modifier, \"static\", \"readonly\");\n          enforceOrder(startPos, modifier, \"static\", \"override\");\n          enforceOrder(startPos, modifier, \"override\", \"readonly\");\n          enforceOrder(startPos, modifier, \"abstract\", \"override\");\n          incompatible(startPos, modifier, \"declare\", \"override\");\n          incompatible(startPos, modifier, \"static\", \"abstract\");\n        }\n\n        modified[modifier] = true;\n      }\n\n      if (disallowedModifiers != null && disallowedModifiers.includes(modifier)) {\n        this.raise(startPos, errorTemplate, modifier);\n      }\n    }\n  }\n\n  tsIsListTerminator(kind) {\n    switch (kind) {\n      case \"EnumMembers\":\n      case \"TypeMembers\":\n        return this.match(8);\n\n      case \"HeritageClauseElement\":\n        return this.match(5);\n\n      case \"TupleElementTypes\":\n        return this.match(3);\n\n      case \"TypeParametersOrArguments\":\n        return this.match(46);\n    }\n\n    throw new Error(\"Unreachable\");\n  }\n\n  tsParseList(kind, parseElement) {\n    const result = [];\n\n    while (!this.tsIsListTerminator(kind)) {\n      result.push(parseElement());\n    }\n\n    return result;\n  }\n\n  tsParseDelimitedList(kind, parseElement, refTrailingCommaPos) {\n    return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true, refTrailingCommaPos));\n  }\n\n  tsParseDelimitedListWorker(kind, parseElement, expectSuccess, refTrailingCommaPos) {\n    const result = [];\n    let trailingCommaPos = -1;\n\n    for (;;) {\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      trailingCommaPos = -1;\n      const element = parseElement();\n\n      if (element == null) {\n        return undefined;\n      }\n\n      result.push(element);\n\n      if (this.eat(12)) {\n        trailingCommaPos = this.state.lastTokStart;\n        continue;\n      }\n\n      if (this.tsIsListTerminator(kind)) {\n        break;\n      }\n\n      if (expectSuccess) {\n        this.expect(12);\n      }\n\n      return undefined;\n    }\n\n    if (refTrailingCommaPos) {\n      refTrailingCommaPos.value = trailingCommaPos;\n    }\n\n    return result;\n  }\n\n  tsParseBracketedList(kind, parseElement, bracket, skipFirstToken, refTrailingCommaPos) {\n    if (!skipFirstToken) {\n      if (bracket) {\n        this.expect(0);\n      } else {\n        this.expect(45);\n      }\n    }\n\n    const result = this.tsParseDelimitedList(kind, parseElement, refTrailingCommaPos);\n\n    if (bracket) {\n      this.expect(3);\n    } else {\n      this.expect(46);\n    }\n\n    return result;\n  }\n\n  tsParseImportType() {\n    const node = this.startNode();\n    this.expect(79);\n    this.expect(10);\n\n    if (!this.match(125)) {\n      this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n    }\n\n    node.argument = this.parseExprAtom();\n    this.expect(11);\n\n    if (this.eat(16)) {\n      node.qualifier = this.tsParseEntityName(true);\n    }\n\n    if (this.match(45)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSImportType\");\n  }\n\n  tsParseEntityName(allowReservedWords) {\n    let entity = this.parseIdentifier();\n\n    while (this.eat(16)) {\n      const node = this.startNodeAtNode(entity);\n      node.left = entity;\n      node.right = this.parseIdentifier(allowReservedWords);\n      entity = this.finishNode(node, \"TSQualifiedName\");\n    }\n\n    return entity;\n  }\n\n  tsParseTypeReference() {\n    const node = this.startNode();\n    node.typeName = this.tsParseEntityName(false);\n\n    if (!this.hasPrecedingLineBreak() && this.match(45)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSTypeReference\");\n  }\n\n  tsParseThisTypePredicate(lhs) {\n    this.next();\n    const node = this.startNodeAtNode(lhs);\n    node.parameterName = lhs;\n    node.typeAnnotation = this.tsParseTypeAnnotation(false);\n    node.asserts = false;\n    return this.finishNode(node, \"TSTypePredicate\");\n  }\n\n  tsParseThisTypeNode() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"TSThisType\");\n  }\n\n  tsParseTypeQuery() {\n    const node = this.startNode();\n    this.expect(83);\n\n    if (this.match(79)) {\n      node.exprName = this.tsParseImportType();\n    } else {\n      node.exprName = this.tsParseEntityName(true);\n    }\n\n    return this.finishNode(node, \"TSTypeQuery\");\n  }\n\n  tsParseTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsEatThenParseType(77);\n    node.default = this.tsEatThenParseType(29);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsTryParseTypeParameters() {\n    if (this.match(45)) {\n      return this.tsParseTypeParameters();\n    }\n  }\n\n  tsParseTypeParameters() {\n    const node = this.startNode();\n\n    if (this.match(45) || this.match(134)) {\n      this.next();\n    } else {\n      this.unexpected();\n    }\n\n    const refTrailingCommaPos = {\n      value: -1\n    };\n    node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true, refTrailingCommaPos);\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeParameters);\n    }\n\n    if (refTrailingCommaPos.value !== -1) {\n      this.addExtra(node, \"trailingComma\", refTrailingCommaPos.value);\n    }\n\n    return this.finishNode(node, \"TSTypeParameterDeclaration\");\n  }\n\n  tsTryNextParseConstantContext() {\n    if (this.lookahead().type === 71) {\n      this.next();\n      return this.tsParseTypeReference();\n    }\n\n    return null;\n  }\n\n  tsFillSignature(returnToken, signature) {\n    const returnTokenRequired = returnToken === 19;\n    signature.typeParameters = this.tsTryParseTypeParameters();\n    this.expect(10);\n    signature.parameters = this.tsParseBindingListForSignature();\n\n    if (returnTokenRequired) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    } else if (this.match(returnToken)) {\n      signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n    }\n  }\n\n  tsParseBindingListForSignature() {\n    return this.parseBindingList(11, 41).map(pattern => {\n      if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n        this.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n      }\n\n      return pattern;\n    });\n  }\n\n  tsParseTypeMemberSemicolon() {\n    if (!this.eat(12) && !this.isLineTerminator()) {\n      this.expect(13);\n    }\n  }\n\n  tsParseSignatureMember(kind, node) {\n    this.tsFillSignature(14, node);\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, kind);\n  }\n\n  tsIsUnambiguouslyIndexSignature() {\n    this.next();\n\n    if (tokenIsIdentifier(this.state.type)) {\n      this.next();\n      return this.match(14);\n    }\n\n    return false;\n  }\n\n  tsTryParseIndexSignature(node) {\n    if (!(this.match(0) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n      return undefined;\n    }\n\n    this.expect(0);\n    const id = this.parseIdentifier();\n    id.typeAnnotation = this.tsParseTypeAnnotation();\n    this.resetEndLocation(id);\n    this.expect(3);\n    node.parameters = [id];\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n    this.tsParseTypeMemberSemicolon();\n    return this.finishNode(node, \"TSIndexSignature\");\n  }\n\n  tsParsePropertyOrMethodSignature(node, readonly) {\n    if (this.eat(17)) node.optional = true;\n    const nodeAny = node;\n\n    if (this.match(10) || this.match(45)) {\n      if (readonly) {\n        this.raise(node.start, TSErrors.ReadonlyForMethodSignature);\n      }\n\n      const method = nodeAny;\n\n      if (method.kind && this.match(45)) {\n        this.raise(this.state.pos, TSErrors.AccesorCannotHaveTypeParameters);\n      }\n\n      this.tsFillSignature(14, method);\n      this.tsParseTypeMemberSemicolon();\n\n      if (method.kind === \"get\") {\n        if (method.parameters.length > 0) {\n          this.raise(this.state.pos, ErrorMessages.BadGetterArity);\n\n          if (this.isThisParam(method.parameters[0])) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n        }\n      } else if (method.kind === \"set\") {\n        if (method.parameters.length !== 1) {\n          this.raise(this.state.pos, ErrorMessages.BadSetterArity);\n        } else {\n          const firstParameter = method.parameters[0];\n\n          if (this.isThisParam(firstParameter)) {\n            this.raise(this.state.pos, TSErrors.AccesorCannotDeclareThisParameter);\n          }\n\n          if (firstParameter.type === \"Identifier\" && firstParameter.optional) {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveOptionalParameter);\n          }\n\n          if (firstParameter.type === \"RestElement\") {\n            this.raise(this.state.pos, TSErrors.SetAccesorCannotHaveRestParameter);\n          }\n        }\n\n        if (method.typeAnnotation) {\n          this.raise(method.typeAnnotation.start, TSErrors.SetAccesorCannotHaveReturnType);\n        }\n      } else {\n        method.kind = \"method\";\n      }\n\n      return this.finishNode(method, \"TSMethodSignature\");\n    } else {\n      const property = nodeAny;\n      if (readonly) property.readonly = true;\n      const type = this.tsTryParseTypeAnnotation();\n      if (type) property.typeAnnotation = type;\n      this.tsParseTypeMemberSemicolon();\n      return this.finishNode(property, \"TSPropertySignature\");\n    }\n  }\n\n  tsParseTypeMember() {\n    const node = this.startNode();\n\n    if (this.match(10) || this.match(45)) {\n      return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n    }\n\n    if (this.match(73)) {\n      const id = this.startNode();\n      this.next();\n\n      if (this.match(10) || this.match(45)) {\n        return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n      } else {\n        node.key = this.createIdentifier(id, \"new\");\n        return this.tsParsePropertyOrMethodSignature(node, false);\n      }\n    }\n\n    this.tsParseModifiers(node, [\"readonly\"], [\"declare\", \"abstract\", \"private\", \"protected\", \"public\", \"static\", \"override\"], TSErrors.InvalidModifierOnTypeMember);\n    const idx = this.tsTryParseIndexSignature(node);\n\n    if (idx) {\n      return idx;\n    }\n\n    this.parsePropertyName(node);\n\n    if (!node.computed && node.key.type === \"Identifier\" && (node.key.name === \"get\" || node.key.name === \"set\") && this.tsTokenCanFollowModifier()) {\n      node.kind = node.key.name;\n      this.parsePropertyName(node);\n    }\n\n    return this.tsParsePropertyOrMethodSignature(node, !!node.readonly);\n  }\n\n  tsParseTypeLiteral() {\n    const node = this.startNode();\n    node.members = this.tsParseObjectTypeMembers();\n    return this.finishNode(node, \"TSTypeLiteral\");\n  }\n\n  tsParseObjectTypeMembers() {\n    this.expect(5);\n    const members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n    this.expect(8);\n    return members;\n  }\n\n  tsIsStartOfMappedType() {\n    this.next();\n\n    if (this.eat(49)) {\n      return this.isContextual(114);\n    }\n\n    if (this.isContextual(114)) {\n      this.next();\n    }\n\n    if (!this.match(0)) {\n      return false;\n    }\n\n    this.next();\n\n    if (!this.tsIsIdentifier()) {\n      return false;\n    }\n\n    this.next();\n    return this.match(54);\n  }\n\n  tsParseMappedTypeParameter() {\n    const node = this.startNode();\n    node.name = this.tsParseTypeParameterName();\n    node.constraint = this.tsExpectThenParseType(54);\n    return this.finishNode(node, \"TSTypeParameter\");\n  }\n\n  tsParseMappedType() {\n    const node = this.startNode();\n    this.expect(5);\n\n    if (this.match(49)) {\n      node.readonly = this.state.value;\n      this.next();\n      this.expectContextual(114);\n    } else if (this.eatContextual(114)) {\n      node.readonly = true;\n    }\n\n    this.expect(0);\n    node.typeParameter = this.tsParseMappedTypeParameter();\n    node.nameType = this.eatContextual(89) ? this.tsParseType() : null;\n    this.expect(3);\n\n    if (this.match(49)) {\n      node.optional = this.state.value;\n      this.next();\n      this.expect(17);\n    } else if (this.eat(17)) {\n      node.optional = true;\n    }\n\n    node.typeAnnotation = this.tsTryParseType();\n    this.semicolon();\n    this.expect(8);\n    return this.finishNode(node, \"TSMappedType\");\n  }\n\n  tsParseTupleType() {\n    const node = this.startNode();\n    node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n    let seenOptionalElement = false;\n    let labeledElements = null;\n    node.elementTypes.forEach(elementNode => {\n      var _labeledElements;\n\n      let {\n        type\n      } = elementNode;\n\n      if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n        this.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n      }\n\n      seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n      if (type === \"TSRestType\") {\n        elementNode = elementNode.typeAnnotation;\n        type = elementNode.type;\n      }\n\n      const isLabeled = type === \"TSNamedTupleMember\";\n      labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n      if (labeledElements !== isLabeled) {\n        this.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n      }\n    });\n    return this.finishNode(node, \"TSTupleType\");\n  }\n\n  tsParseTupleElementType() {\n    const {\n      start: startPos,\n      startLoc\n    } = this.state;\n    const rest = this.eat(21);\n    let type = this.tsParseType();\n    const optional = this.eat(17);\n    const labeled = this.eat(14);\n\n    if (labeled) {\n      const labeledNode = this.startNodeAtNode(type);\n      labeledNode.optional = optional;\n\n      if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n        labeledNode.label = type.typeName;\n      } else {\n        this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n        labeledNode.label = type;\n      }\n\n      labeledNode.elementType = this.tsParseType();\n      type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n    } else if (optional) {\n      const optionalTypeNode = this.startNodeAtNode(type);\n      optionalTypeNode.typeAnnotation = type;\n      type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n    }\n\n    if (rest) {\n      const restNode = this.startNodeAt(startPos, startLoc);\n      restNode.typeAnnotation = type;\n      type = this.finishNode(restNode, \"TSRestType\");\n    }\n\n    return type;\n  }\n\n  tsParseParenthesizedType() {\n    const node = this.startNode();\n    this.expect(10);\n    node.typeAnnotation = this.tsParseType();\n    this.expect(11);\n    return this.finishNode(node, \"TSParenthesizedType\");\n  }\n\n  tsParseFunctionOrConstructorType(type, abstract) {\n    const node = this.startNode();\n\n    if (type === \"TSConstructorType\") {\n      node.abstract = !!abstract;\n      if (abstract) this.next();\n      this.next();\n    }\n\n    this.tsFillSignature(19, node);\n    return this.finishNode(node, type);\n  }\n\n  tsParseLiteralTypeNode() {\n    const node = this.startNode();\n\n    node.literal = (() => {\n      switch (this.state.type) {\n        case 126:\n        case 127:\n        case 125:\n        case 81:\n        case 82:\n          return this.parseExprAtom();\n\n        default:\n          throw this.unexpected();\n      }\n    })();\n\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  tsParseTemplateLiteralType() {\n    const node = this.startNode();\n    node.literal = this.parseTemplate(false);\n    return this.finishNode(node, \"TSLiteralType\");\n  }\n\n  parseTemplateSubstitution() {\n    if (this.state.inType) return this.tsParseType();\n    return super.parseTemplateSubstitution();\n  }\n\n  tsParseThisTypeOrThisTypePredicate() {\n    const thisKeyword = this.tsParseThisTypeNode();\n\n    if (this.isContextual(109) && !this.hasPrecedingLineBreak()) {\n      return this.tsParseThisTypePredicate(thisKeyword);\n    } else {\n      return thisKeyword;\n    }\n  }\n\n  tsParseNonArrayType() {\n    switch (this.state.type) {\n      case 125:\n      case 126:\n      case 127:\n      case 81:\n      case 82:\n        return this.tsParseLiteralTypeNode();\n\n      case 49:\n        if (this.state.value === \"-\") {\n          const node = this.startNode();\n          const nextToken = this.lookahead();\n\n          if (nextToken.type !== 126 && nextToken.type !== 127) {\n            throw this.unexpected();\n          }\n\n          node.literal = this.parseMaybeUnary();\n          return this.finishNode(node, \"TSLiteralType\");\n        }\n\n        break;\n\n      case 74:\n        return this.tsParseThisTypeOrThisTypePredicate();\n\n      case 83:\n        return this.tsParseTypeQuery();\n\n      case 79:\n        return this.tsParseImportType();\n\n      case 5:\n        return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n      case 0:\n        return this.tsParseTupleType();\n\n      case 10:\n        return this.tsParseParenthesizedType();\n\n      case 25:\n      case 24:\n        return this.tsParseTemplateLiteralType();\n\n      default:\n        {\n          const {\n            type\n          } = this.state;\n\n          if (tokenIsIdentifier(type) || type === 84 || type === 80) {\n            const nodeType = type === 84 ? \"TSVoidKeyword\" : type === 80 ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n            if (nodeType !== undefined && this.lookaheadCharCode() !== 46) {\n              const node = this.startNode();\n              this.next();\n              return this.finishNode(node, nodeType);\n            }\n\n            return this.tsParseTypeReference();\n          }\n        }\n    }\n\n    throw this.unexpected();\n  }\n\n  tsParseArrayTypeOrHigher() {\n    let type = this.tsParseNonArrayType();\n\n    while (!this.hasPrecedingLineBreak() && this.eat(0)) {\n      if (this.match(3)) {\n        const node = this.startNodeAtNode(type);\n        node.elementType = type;\n        this.expect(3);\n        type = this.finishNode(node, \"TSArrayType\");\n      } else {\n        const node = this.startNodeAtNode(type);\n        node.objectType = type;\n        node.indexType = this.tsParseType();\n        this.expect(3);\n        type = this.finishNode(node, \"TSIndexedAccessType\");\n      }\n    }\n\n    return type;\n  }\n\n  tsParseTypeOperator() {\n    const node = this.startNode();\n    const operator = this.state.value;\n    this.next();\n    node.operator = operator;\n    node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n    if (operator === \"readonly\") {\n      this.tsCheckTypeAnnotationForReadOnly(node);\n    }\n\n    return this.finishNode(node, \"TSTypeOperator\");\n  }\n\n  tsCheckTypeAnnotationForReadOnly(node) {\n    switch (node.typeAnnotation.type) {\n      case \"TSTupleType\":\n      case \"TSArrayType\":\n        return;\n\n      default:\n        this.raise(node.start, TSErrors.UnexpectedReadonly);\n    }\n  }\n\n  tsParseInferType() {\n    const node = this.startNode();\n    this.expectContextual(108);\n    const typeParameter = this.startNode();\n    typeParameter.name = this.tsParseTypeParameterName();\n    node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n    return this.finishNode(node, \"TSInferType\");\n  }\n\n  tsParseTypeOperatorOrHigher() {\n    const isTypeOperator = tokenIsTSTypeOperator(this.state.type) && !this.state.containsEsc;\n    return isTypeOperator ? this.tsParseTypeOperator() : this.isContextual(108) ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n  }\n\n  tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n    const node = this.startNode();\n    const hasLeadingOperator = this.eat(operator);\n    const types = [];\n\n    do {\n      types.push(parseConstituentType());\n    } while (this.eat(operator));\n\n    if (types.length === 1 && !hasLeadingOperator) {\n      return types[0];\n    }\n\n    node.types = types;\n    return this.finishNode(node, kind);\n  }\n\n  tsParseIntersectionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), 43);\n  }\n\n  tsParseUnionTypeOrHigher() {\n    return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), 41);\n  }\n\n  tsIsStartOfFunctionType() {\n    if (this.match(45)) {\n      return true;\n    }\n\n    return this.match(10) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n  }\n\n  tsSkipParameterStart() {\n    if (tokenIsIdentifier(this.state.type) || this.match(74)) {\n      this.next();\n      return true;\n    }\n\n    if (this.match(5)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(5)) {\n          ++braceStackCounter;\n        } else if (this.match(8)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    if (this.match(0)) {\n      let braceStackCounter = 1;\n      this.next();\n\n      while (braceStackCounter > 0) {\n        if (this.match(0)) {\n          ++braceStackCounter;\n        } else if (this.match(3)) {\n          --braceStackCounter;\n        }\n\n        this.next();\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  tsIsUnambiguouslyStartOfFunctionType() {\n    this.next();\n\n    if (this.match(11) || this.match(21)) {\n      return true;\n    }\n\n    if (this.tsSkipParameterStart()) {\n      if (this.match(14) || this.match(12) || this.match(17) || this.match(29)) {\n        return true;\n      }\n\n      if (this.match(11)) {\n        this.next();\n\n        if (this.match(19)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  tsParseTypeOrTypePredicateAnnotation(returnToken) {\n    return this.tsInType(() => {\n      const t = this.startNode();\n      this.expect(returnToken);\n      const node = this.startNode();\n      const asserts = !!this.tsTryParse(this.tsParseTypePredicateAsserts.bind(this));\n\n      if (asserts && this.match(74)) {\n        let thisTypePredicate = this.tsParseThisTypeOrThisTypePredicate();\n\n        if (thisTypePredicate.type === \"TSThisType\") {\n          node.parameterName = thisTypePredicate;\n          node.asserts = true;\n          node.typeAnnotation = null;\n          thisTypePredicate = this.finishNode(node, \"TSTypePredicate\");\n        } else {\n          this.resetStartLocationFromNode(thisTypePredicate, node);\n          thisTypePredicate.asserts = true;\n        }\n\n        t.typeAnnotation = thisTypePredicate;\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const typePredicateVariable = this.tsIsIdentifier() && this.tsTryParse(this.tsParseTypePredicatePrefix.bind(this));\n\n      if (!typePredicateVariable) {\n        if (!asserts) {\n          return this.tsParseTypeAnnotation(false, t);\n        }\n\n        node.parameterName = this.parseIdentifier();\n        node.asserts = asserts;\n        node.typeAnnotation = null;\n        t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n\n      const type = this.tsParseTypeAnnotation(false);\n      node.parameterName = typePredicateVariable;\n      node.typeAnnotation = type;\n      node.asserts = asserts;\n      t.typeAnnotation = this.finishNode(node, \"TSTypePredicate\");\n      return this.finishNode(t, \"TSTypeAnnotation\");\n    });\n  }\n\n  tsTryParseTypeOrTypePredicateAnnotation() {\n    return this.match(14) ? this.tsParseTypeOrTypePredicateAnnotation(14) : undefined;\n  }\n\n  tsTryParseTypeAnnotation() {\n    return this.match(14) ? this.tsParseTypeAnnotation() : undefined;\n  }\n\n  tsTryParseType() {\n    return this.tsEatThenParseType(14);\n  }\n\n  tsParseTypePredicatePrefix() {\n    const id = this.parseIdentifier();\n\n    if (this.isContextual(109) && !this.hasPrecedingLineBreak()) {\n      this.next();\n      return id;\n    }\n  }\n\n  tsParseTypePredicateAsserts() {\n    if (this.state.type !== 102) {\n      return false;\n    }\n\n    const containsEsc = this.state.containsEsc;\n    this.next();\n\n    if (!tokenIsIdentifier(this.state.type) && !this.match(74)) {\n      return false;\n    }\n\n    if (containsEsc) {\n      this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n    }\n\n    return true;\n  }\n\n  tsParseTypeAnnotation(eatColon = true, t = this.startNode()) {\n    this.tsInType(() => {\n      if (eatColon) this.expect(14);\n      t.typeAnnotation = this.tsParseType();\n    });\n    return this.finishNode(t, \"TSTypeAnnotation\");\n  }\n\n  tsParseType() {\n    assert(this.state.inType);\n    const type = this.tsParseNonConditionalType();\n\n    if (this.hasPrecedingLineBreak() || !this.eat(77)) {\n      return type;\n    }\n\n    const node = this.startNodeAtNode(type);\n    node.checkType = type;\n    node.extendsType = this.tsParseNonConditionalType();\n    this.expect(17);\n    node.trueType = this.tsParseType();\n    this.expect(14);\n    node.falseType = this.tsParseType();\n    return this.finishNode(node, \"TSConditionalType\");\n  }\n\n  isAbstractConstructorSignature() {\n    return this.isContextual(116) && this.lookahead().type === 73;\n  }\n\n  tsParseNonConditionalType() {\n    if (this.tsIsStartOfFunctionType()) {\n      return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n    }\n\n    if (this.match(73)) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n    } else if (this.isAbstractConstructorSignature()) {\n      return this.tsParseFunctionOrConstructorType(\"TSConstructorType\", true);\n    }\n\n    return this.tsParseUnionTypeOrHigher();\n  }\n\n  tsParseTypeAssertion() {\n    if (this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(this.state.start, TSErrors.ReservedTypeAssertion);\n    }\n\n    const node = this.startNode();\n\n    const _const = this.tsTryNextParseConstantContext();\n\n    node.typeAnnotation = _const || this.tsNextThenParseType();\n    this.expect(46);\n    node.expression = this.parseMaybeUnary();\n    return this.finishNode(node, \"TSTypeAssertion\");\n  }\n\n  tsParseHeritageClause(descriptor) {\n    const originalStart = this.state.start;\n    const delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n    if (!delimitedList.length) {\n      this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n    }\n\n    return delimitedList;\n  }\n\n  tsParseExpressionWithTypeArguments() {\n    const node = this.startNode();\n    node.expression = this.tsParseEntityName(false);\n\n    if (this.match(45)) {\n      node.typeParameters = this.tsParseTypeArguments();\n    }\n\n    return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n  }\n\n  tsParseInterfaceDeclaration(node) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n      this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n    } else {\n      node.id = null;\n      this.raise(this.state.start, TSErrors.MissingInterfaceName);\n    }\n\n    node.typeParameters = this.tsTryParseTypeParameters();\n\n    if (this.eat(77)) {\n      node.extends = this.tsParseHeritageClause(\"extends\");\n    }\n\n    const body = this.startNode();\n    body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n    node.body = this.finishNode(body, \"TSInterfaceBody\");\n    return this.finishNode(node, \"TSInterfaceDeclaration\");\n  }\n\n  tsParseTypeAliasDeclaration(node) {\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n    node.typeParameters = this.tsTryParseTypeParameters();\n    node.typeAnnotation = this.tsInType(() => {\n      this.expect(29);\n\n      if (this.isContextual(107) && this.lookahead().type !== 16) {\n        const node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSIntrinsicKeyword\");\n      }\n\n      return this.tsParseType();\n    });\n    this.semicolon();\n    return this.finishNode(node, \"TSTypeAliasDeclaration\");\n  }\n\n  tsInNoContext(cb) {\n    const oldContext = this.state.context;\n    this.state.context = [oldContext[0]];\n\n    try {\n      return cb();\n    } finally {\n      this.state.context = oldContext;\n    }\n  }\n\n  tsInType(cb) {\n    const oldInType = this.state.inType;\n    this.state.inType = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.inType = oldInType;\n    }\n  }\n\n  tsEatThenParseType(token) {\n    return !this.match(token) ? undefined : this.tsNextThenParseType();\n  }\n\n  tsExpectThenParseType(token) {\n    return this.tsDoThenParseType(() => this.expect(token));\n  }\n\n  tsNextThenParseType() {\n    return this.tsDoThenParseType(() => this.next());\n  }\n\n  tsDoThenParseType(cb) {\n    return this.tsInType(() => {\n      cb();\n      return this.tsParseType();\n    });\n  }\n\n  tsParseEnumMember() {\n    const node = this.startNode();\n    node.id = this.match(125) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n    if (this.eat(29)) {\n      node.initializer = this.parseMaybeAssignAllowIn();\n    }\n\n    return this.finishNode(node, \"TSEnumMember\");\n  }\n\n  tsParseEnumDeclaration(node, isConst) {\n    if (isConst) node.const = true;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n    this.expect(5);\n    node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n    this.expect(8);\n    return this.finishNode(node, \"TSEnumDeclaration\");\n  }\n\n  tsParseModuleBlock() {\n    const node = this.startNode();\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(5);\n    this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, 8);\n    this.scope.exit();\n    return this.finishNode(node, \"TSModuleBlock\");\n  }\n\n  tsParseModuleOrNamespaceDeclaration(node, nested = false) {\n    node.id = this.parseIdentifier();\n\n    if (!nested) {\n      this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n    }\n\n    if (this.eat(16)) {\n      const inner = this.startNode();\n      this.tsParseModuleOrNamespaceDeclaration(inner, true);\n      node.body = inner;\n    } else {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseAmbientExternalModuleDeclaration(node) {\n    if (this.isContextual(105)) {\n      node.global = true;\n      node.id = this.parseIdentifier();\n    } else if (this.match(125)) {\n      node.id = this.parseExprAtom();\n    } else {\n      this.unexpected();\n    }\n\n    if (this.match(5)) {\n      this.scope.enter(SCOPE_TS_MODULE);\n      this.prodParam.enter(PARAM);\n      node.body = this.tsParseModuleBlock();\n      this.prodParam.exit();\n      this.scope.exit();\n    } else {\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"TSModuleDeclaration\");\n  }\n\n  tsParseImportEqualsDeclaration(node, isExport) {\n    node.isExport = isExport || false;\n    node.id = this.parseIdentifier();\n    this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n    this.expect(29);\n    const moduleReference = this.tsParseModuleReference();\n\n    if (node.importKind === \"type\" && moduleReference.type !== \"TSExternalModuleReference\") {\n      this.raise(moduleReference.start, TSErrors.ImportAliasHasImportType);\n    }\n\n    node.moduleReference = moduleReference;\n    this.semicolon();\n    return this.finishNode(node, \"TSImportEqualsDeclaration\");\n  }\n\n  tsIsExternalModuleReference() {\n    return this.isContextual(112) && this.lookaheadCharCode() === 40;\n  }\n\n  tsParseModuleReference() {\n    return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n  }\n\n  tsParseExternalModuleReference() {\n    const node = this.startNode();\n    this.expectContextual(112);\n    this.expect(10);\n\n    if (!this.match(125)) {\n      throw this.unexpected();\n    }\n\n    node.expression = this.parseExprAtom();\n    this.expect(11);\n    return this.finishNode(node, \"TSExternalModuleReference\");\n  }\n\n  tsLookAhead(f) {\n    const state = this.state.clone();\n    const res = f();\n    this.state = state;\n    return res;\n  }\n\n  tsTryParseAndCatch(f) {\n    const result = this.tryParse(abort => f() || abort());\n    if (result.aborted || !result.node) return undefined;\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  tsTryParse(f) {\n    const state = this.state.clone();\n    const result = f();\n\n    if (result !== undefined && result !== false) {\n      return result;\n    } else {\n      this.state = state;\n      return undefined;\n    }\n  }\n\n  tsTryParseDeclare(nany) {\n    if (this.isLineTerminator()) {\n      return;\n    }\n\n    let starttype = this.state.type;\n    let kind;\n\n    if (this.isContextual(95)) {\n      starttype = 70;\n      kind = \"let\";\n    }\n\n    return this.tsInAmbientContext(() => {\n      switch (starttype) {\n        case 64:\n          nany.declare = true;\n          return this.parseFunctionStatement(nany, false, true);\n\n        case 76:\n          nany.declare = true;\n          return this.parseClass(nany, true, false);\n\n        case 71:\n          if (this.match(71) && this.isLookaheadContextual(\"enum\")) {\n            this.expect(71);\n            this.expectContextual(118);\n            return this.tsParseEnumDeclaration(nany, true);\n          }\n\n        case 70:\n          kind = kind || this.state.value;\n          return this.parseVarStatement(nany, kind);\n\n        case 105:\n          return this.tsParseAmbientExternalModuleDeclaration(nany);\n\n        default:\n          {\n            if (tokenIsIdentifier(starttype)) {\n              return this.tsParseDeclaration(nany, this.state.value, true);\n            }\n          }\n      }\n    });\n  }\n\n  tsTryParseExportDeclaration() {\n    return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n  }\n\n  tsParseExpressionStatement(node, expr) {\n    switch (expr.name) {\n      case \"declare\":\n        {\n          const declaration = this.tsTryParseDeclare(node);\n\n          if (declaration) {\n            declaration.declare = true;\n            return declaration;\n          }\n\n          break;\n        }\n\n      case \"global\":\n        if (this.match(5)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          const mod = node;\n          mod.global = true;\n          mod.id = expr;\n          mod.body = this.tsParseModuleBlock();\n          this.scope.exit();\n          this.prodParam.exit();\n          return this.finishNode(mod, \"TSModuleDeclaration\");\n        }\n\n        break;\n\n      default:\n        return this.tsParseDeclaration(node, expr.name, false);\n    }\n  }\n\n  tsParseDeclaration(node, value, next) {\n    switch (value) {\n      case \"abstract\":\n        if (this.tsCheckLineTerminator(next) && (this.match(76) || tokenIsIdentifier(this.state.type))) {\n          return this.tsParseAbstractDeclaration(node);\n        }\n\n        break;\n\n      case \"enum\":\n        if (next || tokenIsIdentifier(this.state.type)) {\n          if (next) this.next();\n          return this.tsParseEnumDeclaration(node, false);\n        }\n\n        break;\n\n      case \"interface\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseInterfaceDeclaration(node);\n        }\n\n        break;\n\n      case \"module\":\n        if (this.tsCheckLineTerminator(next)) {\n          if (this.match(125)) {\n            return this.tsParseAmbientExternalModuleDeclaration(node);\n          } else if (tokenIsIdentifier(this.state.type)) {\n            return this.tsParseModuleOrNamespaceDeclaration(node);\n          }\n        }\n\n        break;\n\n      case \"namespace\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseModuleOrNamespaceDeclaration(node);\n        }\n\n        break;\n\n      case \"type\":\n        if (this.tsCheckLineTerminator(next) && tokenIsIdentifier(this.state.type)) {\n          return this.tsParseTypeAliasDeclaration(node);\n        }\n\n        break;\n    }\n  }\n\n  tsCheckLineTerminator(next) {\n    if (next) {\n      if (this.hasFollowingLineBreak()) return false;\n      this.next();\n      return true;\n    }\n\n    return !this.isLineTerminator();\n  }\n\n  tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n    if (!this.match(45)) {\n      return undefined;\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = true;\n    const res = this.tsTryParseAndCatch(() => {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.typeParameters = this.tsParseTypeParameters();\n      super.parseFunctionParams(node);\n      node.returnType = this.tsTryParseTypeOrTypePredicateAnnotation();\n      this.expect(19);\n      return node;\n    });\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n    if (!res) {\n      return undefined;\n    }\n\n    return this.parseArrowExpression(res, null, true);\n  }\n\n  tsParseTypeArguments() {\n    const node = this.startNode();\n    node.params = this.tsInType(() => this.tsInNoContext(() => {\n      this.expect(45);\n      return this.tsParseDelimitedList(\"TypeParametersOrArguments\", this.tsParseType.bind(this));\n    }));\n\n    if (node.params.length === 0) {\n      this.raise(node.start, TSErrors.EmptyTypeArguments);\n    }\n\n    this.expect(46);\n    return this.finishNode(node, \"TSTypeParameterInstantiation\");\n  }\n\n  tsIsDeclarationStart() {\n    return tokenIsTSDeclarationStart(this.state.type);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.tsIsDeclarationStart()) return false;\n    return super.isExportDefaultSpecifier();\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let accessibility;\n    let readonly = false;\n    let override = false;\n\n    if (allowModifiers !== undefined) {\n      const modified = {};\n      this.tsParseModifiers(modified, [\"public\", \"private\", \"protected\", \"override\", \"readonly\"]);\n      accessibility = modified.accessibility;\n      override = modified.override;\n      readonly = modified.readonly;\n\n      if (allowModifiers === false && (accessibility || readonly || override)) {\n        this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n      }\n    }\n\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (accessibility || readonly || override) {\n      const pp = this.startNodeAt(startPos, startLoc);\n\n      if (decorators.length) {\n        pp.decorators = decorators;\n      }\n\n      if (accessibility) pp.accessibility = accessibility;\n      if (readonly) pp.readonly = readonly;\n      if (override) pp.override = override;\n\n      if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n        this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n      }\n\n      pp.parameter = elt;\n      return this.finishNode(pp, \"TSParameterProperty\");\n    }\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n    }\n\n    const bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" || type === \"ClassPrivateMethod\" ? \"TSDeclareMethod\" : undefined;\n\n    if (bodilessType && !this.match(5) && this.isLineTerminator()) {\n      this.finishNode(node, bodilessType);\n      return;\n    }\n\n    if (bodilessType === \"TSDeclareFunction\" && this.state.isAmbientContext) {\n      this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n      if (node.declare) {\n        super.parseFunctionBodyAndFinish(node, bodilessType, isMethod);\n        return;\n      }\n    }\n\n    super.parseFunctionBodyAndFinish(node, type, isMethod);\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.body && node.id) {\n      this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n    } else {\n      super.registerFunctionStatementId(...arguments);\n    }\n  }\n\n  tsCheckForInvalidTypeCasts(items) {\n    items.forEach(node => {\n      if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n        this.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n      }\n    });\n  }\n\n  toReferencedList(exprList, isInParens) {\n    this.tsCheckForInvalidTypeCasts(exprList);\n    return exprList;\n  }\n\n  parseArrayLike(...args) {\n    const node = super.parseArrayLike(...args);\n\n    if (node.type === \"ArrayExpression\") {\n      this.tsCheckForInvalidTypeCasts(node.elements);\n    }\n\n    return node;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    if (!this.hasPrecedingLineBreak() && this.match(35)) {\n      this.state.canStartJSXElement = false;\n      this.next();\n      const nonNullExpression = this.startNodeAt(startPos, startLoc);\n      nonNullExpression.expression = base;\n      return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n    }\n\n    let isOptionalCall = false;\n\n    if (this.match(18) && this.lookaheadCharCode() === 60) {\n      if (noCalls) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = isOptionalCall = true;\n      this.next();\n    }\n\n    if (this.match(45)) {\n      let missingParenErrorPos;\n      const result = this.tsTryParseAndCatch(() => {\n        if (!noCalls && this.atPossibleAsyncArrow(base)) {\n          const asyncArrowFn = this.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n          if (asyncArrowFn) {\n            return asyncArrowFn;\n          }\n        }\n\n        const node = this.startNodeAt(startPos, startLoc);\n        node.callee = base;\n        const typeArguments = this.tsParseTypeArguments();\n\n        if (typeArguments) {\n          if (isOptionalCall && !this.match(10)) {\n            missingParenErrorPos = this.state.pos;\n            this.unexpected();\n          }\n\n          if (!noCalls && this.eat(10)) {\n            node.arguments = this.parseCallExpressionArguments(11, false);\n            this.tsCheckForInvalidTypeCasts(node.arguments);\n            node.typeParameters = typeArguments;\n\n            if (state.optionalChainMember) {\n              node.optional = isOptionalCall;\n            }\n\n            return this.finishCallExpression(node, state.optionalChainMember);\n          } else if (tokenIsTemplate(this.state.type)) {\n            const result = this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n            result.typeParameters = typeArguments;\n            return result;\n          }\n        }\n\n        this.unexpected();\n      });\n\n      if (missingParenErrorPos) {\n        this.unexpected(missingParenErrorPos, 10);\n      }\n\n      if (result) return result;\n    }\n\n    return super.parseSubscript(base, startPos, startLoc, noCalls, state);\n  }\n\n  parseNewArguments(node) {\n    if (this.match(45)) {\n      const typeParameters = this.tsTryParseAndCatch(() => {\n        const args = this.tsParseTypeArguments();\n        if (!this.match(10)) this.unexpected();\n        return args;\n      });\n\n      if (typeParameters) {\n        node.typeParameters = typeParameters;\n      }\n    }\n\n    super.parseNewArguments(node);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (tokenOperatorPrecedence(54) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(89)) {\n      const node = this.startNodeAt(leftStartPos, leftStartLoc);\n      node.expression = left;\n\n      const _const = this.tsTryNextParseConstantContext();\n\n      if (_const) {\n        node.typeAnnotation = _const;\n      } else {\n        node.typeAnnotation = this.tsNextThenParseType();\n      }\n\n      this.finishNode(node, \"TSAsExpression\");\n      this.reScan_lt_gt();\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n    }\n\n    return super.parseExprOp(left, leftStartPos, leftStartLoc, minPrec);\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n\n  checkDuplicateExports() {}\n\n  parseImport(node) {\n    node.importKind = \"value\";\n\n    if (tokenIsIdentifier(this.state.type) || this.match(51) || this.match(5)) {\n      let ahead = this.lookahead();\n\n      if (this.isContextual(122) && ahead.type !== 12 && ahead.type !== 93 && ahead.type !== 29) {\n        node.importKind = \"type\";\n        this.next();\n        ahead = this.lookahead();\n      }\n\n      if (tokenIsIdentifier(this.state.type) && ahead.type === 29) {\n        return this.tsParseImportEqualsDeclaration(node);\n      }\n    }\n\n    const importNode = super.parseImport(node);\n\n    if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n      this.raise(importNode.start, TSErrors.TypeImportCannotSpecifyDefaultAndNamed);\n    }\n\n    return importNode;\n  }\n\n  parseExport(node) {\n    if (this.match(79)) {\n      this.next();\n\n      if (this.isContextual(122) && this.lookaheadCharCode() !== 61) {\n        node.importKind = \"type\";\n        this.next();\n      } else {\n        node.importKind = \"value\";\n      }\n\n      return this.tsParseImportEqualsDeclaration(node, true);\n    } else if (this.eat(29)) {\n      const assign = node;\n      assign.expression = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(assign, \"TSExportAssignment\");\n    } else if (this.eatContextual(89)) {\n      const decl = node;\n      this.expectContextual(120);\n      decl.id = this.parseIdentifier();\n      this.semicolon();\n      return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n    } else {\n      if (this.isContextual(122) && this.lookahead().type === 5) {\n        this.next();\n        node.exportKind = \"type\";\n      } else {\n        node.exportKind = \"value\";\n      }\n\n      return super.parseExport(node);\n    }\n  }\n\n  isAbstractClass() {\n    return this.isContextual(116) && this.lookahead().type === 76;\n  }\n\n  parseExportDefaultExpression() {\n    if (this.isAbstractClass()) {\n      const cls = this.startNode();\n      this.next();\n      cls.abstract = true;\n      this.parseClass(cls, true, true);\n      return cls;\n    }\n\n    if (this.match(121)) {\n      const interfaceNode = this.startNode();\n      this.next();\n      const result = this.tsParseInterfaceDeclaration(interfaceNode);\n      if (result) return result;\n    }\n\n    return super.parseExportDefaultExpression();\n  }\n\n  parseStatementContent(context, topLevel) {\n    if (this.state.type === 71) {\n      const ahead = this.lookahead();\n\n      if (ahead.type === 118) {\n        const node = this.startNode();\n        this.next();\n        this.expectContextual(118);\n        return this.tsParseEnumDeclaration(node, true);\n      }\n    }\n\n    return super.parseStatementContent(context, topLevel);\n  }\n\n  parseAccessModifier() {\n    return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n  }\n\n  tsHasSomeModifiers(member, modifiers) {\n    return modifiers.some(modifier => {\n      if (tsIsAccessModifier(modifier)) {\n        return member.accessibility === modifier;\n      }\n\n      return !!member[modifier];\n    });\n  }\n\n  tsIsStartOfStaticBlocks() {\n    return this.isContextual(100) && this.lookaheadCharCode() === 123;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const modifiers = [\"declare\", \"private\", \"public\", \"protected\", \"override\", \"abstract\", \"readonly\", \"static\"];\n    this.tsParseModifiers(member, modifiers, undefined, undefined, true);\n\n    const callParseClassMemberWithIsStatic = () => {\n      if (this.tsIsStartOfStaticBlocks()) {\n        this.next();\n        this.next();\n\n        if (this.tsHasSomeModifiers(member, modifiers)) {\n          this.raise(this.state.pos, TSErrors.StaticBlockCannotHaveModifier);\n        }\n\n        this.parseClassStaticBlock(classBody, member);\n      } else {\n        this.parseClassMemberWithIsStatic(classBody, member, state, !!member.static);\n      }\n    };\n\n    if (member.declare) {\n      this.tsInAmbientContext(callParseClassMemberWithIsStatic);\n    } else {\n      callParseClassMemberWithIsStatic();\n    }\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const idx = this.tsTryParseIndexSignature(member);\n\n    if (idx) {\n      classBody.body.push(idx);\n\n      if (member.abstract) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n      }\n\n      if (member.accessibility) {\n        this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n      }\n\n      if (member.declare) {\n        this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n      }\n\n      if (member.override) {\n        this.raise(member.start, TSErrors.IndexSignatureHasOverride);\n      }\n\n      return;\n    }\n\n    if (!this.state.inAbstractClass && member.abstract) {\n      this.raise(member.start, TSErrors.NonAbstractClassHasAbstractMethod);\n    }\n\n    if (member.override) {\n      if (!state.hadSuperClass) {\n        this.raise(member.start, TSErrors.OverrideNotInSubClass);\n      }\n    }\n\n    super.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {\n    const optional = this.eat(17);\n    if (optional) methodOrProp.optional = true;\n\n    if (methodOrProp.readonly && this.match(10)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n    }\n\n    if (methodOrProp.declare && this.match(10)) {\n      this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n    }\n  }\n\n  parseExpressionStatement(node, expr) {\n    const decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n    return decl || super.parseExpressionStatement(node, expr);\n  }\n\n  shouldParseExportDeclaration() {\n    if (this.tsIsDeclarationStart()) return true;\n    return super.shouldParseExportDeclaration();\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (!this.state.maybeInArrowParameters || !this.match(17)) {\n      return super.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n    }\n\n    const result = this.tryParse(() => super.parseConditional(expr, startPos, startLoc));\n\n    if (!result.node) {\n      if (result.error) {\n        super.setOptionalParametersError(refExpressionErrors, result.error);\n      }\n\n      return expr;\n    }\n\n    if (result.error) this.state = result.failState;\n    return result.node;\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    node = super.parseParenItem(node, startPos, startLoc);\n\n    if (this.eat(17)) {\n      node.optional = true;\n      this.resetEndLocation(node);\n    }\n\n    if (this.match(14)) {\n      const typeCastNode = this.startNodeAt(startPos, startLoc);\n      typeCastNode.expression = node;\n      typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n      return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n    }\n\n    return node;\n  }\n\n  parseExportDeclaration(node) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isDeclare = this.eatContextual(117);\n\n    if (isDeclare && (this.isContextual(117) || !this.shouldParseExportDeclaration())) {\n      throw this.raise(this.state.start, TSErrors.ExpectedAmbientAfterExportDeclare);\n    }\n\n    let declaration;\n\n    if (tokenIsIdentifier(this.state.type)) {\n      declaration = this.tsTryParseExportDeclaration();\n    }\n\n    if (!declaration) {\n      declaration = super.parseExportDeclaration(node);\n    }\n\n    if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n      node.exportKind = \"type\";\n    }\n\n    if (declaration && isDeclare) {\n      this.resetStartLocation(declaration, startPos, startLoc);\n      declaration.declare = true;\n    }\n\n    return declaration;\n  }\n\n  parseClassId(node, isStatement, optionalId) {\n    if ((!isStatement || optionalId) && this.isContextual(106)) {\n      return;\n    }\n\n    super.parseClassId(node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n  }\n\n  parseClassPropertyAnnotation(node) {\n    if (!node.optional && this.eat(35)) {\n      node.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) node.typeAnnotation = type;\n  }\n\n  parseClassProperty(node) {\n    this.parseClassPropertyAnnotation(node);\n\n    if (this.state.isAmbientContext && this.match(29)) {\n      this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n    }\n\n    if (node.abstract && this.match(29)) {\n      const {\n        key\n      } = node;\n      this.raise(this.state.start, TSErrors.AbstractPropertyHasInitializer, key.type === \"Identifier\" && !node.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n    }\n\n    return super.parseClassProperty(node);\n  }\n\n  parseClassPrivateProperty(node) {\n    if (node.abstract) {\n      this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n    }\n\n    if (node.accessibility) {\n      this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n    }\n\n    this.parseClassPropertyAnnotation(node);\n    return super.parseClassPrivateProperty(node);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    const typeParameters = this.tsTryParseTypeParameters();\n\n    if (typeParameters && isConstructor) {\n      this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n    }\n\n    if (method.declare && (method.kind === \"get\" || method.kind === \"set\")) {\n      this.raise(method.start, TSErrors.DeclareAccessor, method.kind);\n    }\n\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) method.typeParameters = typeParameters;\n    super.pushClassPrivateMethod(classBody, method, isGenerator, isAsync);\n  }\n\n  declareClassPrivateMethodInScope(node, kind) {\n    if (node.type === \"TSDeclareMethod\") return;\n    if (node.type === \"MethodDefinition\" && !node.value.body) return;\n    super.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  parseClassSuper(node) {\n    super.parseClassSuper(node);\n\n    if (node.superClass && this.match(45)) {\n      node.superTypeParameters = this.tsParseTypeArguments();\n    }\n\n    if (this.eatContextual(106)) {\n      node.implements = this.tsParseHeritageClause(\"implements\");\n    }\n  }\n\n  parseObjPropValue(prop, ...args) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) prop.typeParameters = typeParameters;\n    super.parseObjPropValue(prop, ...args);\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    const typeParameters = this.tsTryParseTypeParameters();\n    if (typeParameters) node.typeParameters = typeParameters;\n    super.parseFunctionParams(node, allowModifiers);\n  }\n\n  parseVarId(decl, kind) {\n    super.parseVarId(decl, kind);\n\n    if (decl.id.type === \"Identifier\" && this.eat(35)) {\n      decl.definite = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      decl.id.typeAnnotation = type;\n      this.resetEndLocation(decl.id);\n    }\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    if (this.match(14)) {\n      node.returnType = this.tsParseTypeAnnotation();\n    }\n\n    return super.parseAsyncArrowFromCallExpression(node, call);\n  }\n\n  parseMaybeAssign(...args) {\n    var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n    let state;\n    let jsx;\n    let typeCast;\n\n    if (this.hasPlugin(\"jsx\") && (this.match(134) || this.match(45))) {\n      state = this.state.clone();\n      jsx = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!jsx.error) return jsx.node;\n      const {\n        context\n      } = this.state;\n      const currentContext = context[context.length - 1];\n\n      if (currentContext === types.j_oTag || currentContext === types.j_expr) {\n        context.pop();\n      }\n    }\n\n    if (!((_jsx = jsx) != null && _jsx.error) && !this.match(45)) {\n      return super.parseMaybeAssign(...args);\n    }\n\n    let typeParameters;\n    state = state || this.state.clone();\n    const arrow = this.tryParse(abort => {\n      var _expr$extra, _typeParameters;\n\n      typeParameters = this.tsParseTypeParameters();\n      const expr = super.parseMaybeAssign(...args);\n\n      if (expr.type !== \"ArrowFunctionExpression\" || (_expr$extra = expr.extra) != null && _expr$extra.parenthesized) {\n        abort();\n      }\n\n      if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n        this.resetStartLocationFromNode(expr, typeParameters);\n      }\n\n      expr.typeParameters = typeParameters;\n      return expr;\n    }, state);\n\n    if (!arrow.error && !arrow.aborted) {\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n\n    if (!jsx) {\n      assert(!this.hasPlugin(\"jsx\"));\n      typeCast = this.tryParse(() => super.parseMaybeAssign(...args), state);\n      if (!typeCast.error) return typeCast.node;\n    }\n\n    if ((_jsx2 = jsx) != null && _jsx2.node) {\n      this.state = jsx.failState;\n      return jsx.node;\n    }\n\n    if (arrow.node) {\n      this.state = arrow.failState;\n      if (typeParameters) this.reportReservedArrowTypeParam(typeParameters);\n      return arrow.node;\n    }\n\n    if ((_typeCast = typeCast) != null && _typeCast.node) {\n      this.state = typeCast.failState;\n      return typeCast.node;\n    }\n\n    if ((_jsx3 = jsx) != null && _jsx3.thrown) throw jsx.error;\n    if (arrow.thrown) throw arrow.error;\n    if ((_typeCast2 = typeCast) != null && _typeCast2.thrown) throw typeCast.error;\n    throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n  }\n\n  reportReservedArrowTypeParam(node) {\n    var _node$extra;\n\n    if (node.params.length === 1 && !((_node$extra = node.extra) != null && _node$extra.trailingComma) && this.getPluginOption(\"typescript\", \"disallowAmbiguousJSXLike\")) {\n      this.raise(node.start, TSErrors.ReservedArrowTypeParam);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors) {\n    if (!this.hasPlugin(\"jsx\") && this.match(45)) {\n      return this.tsParseTypeAssertion();\n    } else {\n      return super.parseMaybeUnary(refExpressionErrors);\n    }\n  }\n\n  parseArrow(node) {\n    if (this.match(14)) {\n      const result = this.tryParse(abort => {\n        const returnType = this.tsParseTypeOrTypePredicateAnnotation(14);\n        if (this.canInsertSemicolon() || !this.match(19)) abort();\n        return returnType;\n      });\n      if (result.aborted) return;\n\n      if (!result.thrown) {\n        if (result.error) this.state = result.failState;\n        node.returnType = result.node;\n      }\n    }\n\n    return super.parseArrow(node);\n  }\n\n  parseAssignableListItemTypes(param) {\n    if (this.eat(17)) {\n      if (param.type !== \"Identifier\" && !this.state.isAmbientContext && !this.state.inType) {\n        this.raise(param.start, TSErrors.PatternIsOptional);\n      }\n\n      param.optional = true;\n    }\n\n    const type = this.tsTryParseTypeAnnotation();\n    if (type) param.typeAnnotation = type;\n    this.resetEndLocation(param);\n    return param;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return this.isAssignable(node.expression, isBinding);\n\n      case \"TSParameterProperty\":\n        return true;\n\n      default:\n        return super.isAssignable(node, isBinding);\n    }\n  }\n\n  toAssignable(node, isLHS = false) {\n    switch (node.type) {\n      case \"TSTypeCastExpression\":\n        return super.toAssignable(this.typeCastToParameter(node), isLHS);\n\n      case \"TSParameterProperty\":\n        return super.toAssignable(node, isLHS);\n\n      case \"ParenthesizedExpression\":\n        return this.toAssignableParenthesizedExpression(node, isLHS);\n\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  toAssignableParenthesizedExpression(node, isLHS) {\n    switch (node.expression.type) {\n      case \"TSAsExpression\":\n      case \"TSNonNullExpression\":\n      case \"TSTypeAssertion\":\n      case \"ParenthesizedExpression\":\n        node.expression = this.toAssignable(node.expression, isLHS);\n        return node;\n\n      default:\n        return super.toAssignable(node, isLHS);\n    }\n  }\n\n  checkLVal(expr, contextDescription, ...args) {\n    var _expr$extra2;\n\n    switch (expr.type) {\n      case \"TSTypeCastExpression\":\n        return;\n\n      case \"TSParameterProperty\":\n        this.checkLVal(expr.parameter, \"parameter property\", ...args);\n        return;\n\n      case \"TSAsExpression\":\n      case \"TSTypeAssertion\":\n        if (!args[0] && contextDescription !== \"parenthesized expression\" && !((_expr$extra2 = expr.extra) != null && _expr$extra2.parenthesized)) {\n          this.raise(expr.start, ErrorMessages.InvalidLhs, contextDescription);\n          break;\n        }\n\n        this.checkLVal(expr.expression, \"parenthesized expression\", ...args);\n        return;\n\n      case \"TSNonNullExpression\":\n        this.checkLVal(expr.expression, contextDescription, ...args);\n        return;\n\n      default:\n        super.checkLVal(expr, contextDescription, ...args);\n        return;\n    }\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 74:\n        return this.parseIdentifier(true);\n\n      default:\n        return super.parseBindingAtom();\n    }\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.match(45)) {\n      const typeArguments = this.tsParseTypeArguments();\n\n      if (this.match(10)) {\n        const call = super.parseMaybeDecoratorArguments(expr);\n        call.typeParameters = typeArguments;\n        return call;\n      }\n\n      this.unexpected(this.state.start, 10);\n    }\n\n    return super.parseMaybeDecoratorArguments(expr);\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.state.isAmbientContext && this.match(12) && this.lookaheadCharCode() === close) {\n      this.next();\n    } else {\n      super.checkCommaAfterRest(close);\n    }\n  }\n\n  isClassMethod() {\n    return this.match(45) || super.isClassMethod();\n  }\n\n  isClassProperty() {\n    return this.match(35) || this.match(14) || super.isClassProperty();\n  }\n\n  parseMaybeDefault(...args) {\n    const node = super.parseMaybeDefault(...args);\n\n    if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n      this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n    }\n\n    return node;\n  }\n\n  getTokenFromCode(code) {\n    if (this.state.inType) {\n      if (code === 62) {\n        return this.finishOp(46, 1);\n      }\n\n      if (code === 60) {\n        return this.finishOp(45, 1);\n      }\n    }\n\n    return super.getTokenFromCode(code);\n  }\n\n  reScan_lt_gt() {\n    const {\n      type\n    } = this.state;\n\n    if (type === 45) {\n      this.state.pos -= 1;\n      this.readToken_lt();\n    } else if (type === 46) {\n      this.state.pos -= 1;\n      this.readToken_gt();\n    }\n  }\n\n  toAssignableList(exprList) {\n    for (let i = 0; i < exprList.length; i++) {\n      const expr = exprList[i];\n      if (!expr) continue;\n\n      switch (expr.type) {\n        case \"TSTypeCastExpression\":\n          exprList[i] = this.typeCastToParameter(expr);\n          break;\n\n        case \"TSAsExpression\":\n        case \"TSTypeAssertion\":\n          if (!this.state.maybeInArrowParameters) {\n            exprList[i] = this.typeCastToParameter(expr);\n          } else {\n            this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n          }\n\n          break;\n      }\n    }\n\n    return super.toAssignableList(...arguments);\n  }\n\n  typeCastToParameter(node) {\n    node.expression.typeAnnotation = node.typeAnnotation;\n    this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n    return node.expression;\n  }\n\n  shouldParseArrow(params) {\n    if (this.match(14)) {\n      return params.every(expr => this.isAssignable(expr, true));\n    }\n\n    return super.shouldParseArrow(params);\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(14) || super.shouldParseAsyncArrow();\n  }\n\n  canHaveLeadingDecorator() {\n    return super.canHaveLeadingDecorator() || this.isAbstractClass();\n  }\n\n  jsxParseOpeningElementAfterName(node) {\n    if (this.match(45)) {\n      const typeArguments = this.tsTryParseAndCatch(() => this.tsParseTypeArguments());\n      if (typeArguments) node.typeParameters = typeArguments;\n    }\n\n    return super.jsxParseOpeningElementAfterName(node);\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    const baseCount = super.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const firstParam = params[0];\n    const hasContextParam = firstParam && this.isThisParam(firstParam);\n    return hasContextParam ? baseCount + 1 : baseCount;\n  }\n\n  parseCatchClauseParam() {\n    const param = super.parseCatchClauseParam();\n    const type = this.tsTryParseTypeAnnotation();\n\n    if (type) {\n      param.typeAnnotation = type;\n      this.resetEndLocation(param);\n    }\n\n    return param;\n  }\n\n  tsInAmbientContext(cb) {\n    const oldIsAmbientContext = this.state.isAmbientContext;\n    this.state.isAmbientContext = true;\n\n    try {\n      return cb();\n    } finally {\n      this.state.isAmbientContext = oldIsAmbientContext;\n    }\n  }\n\n  parseClass(node, ...args) {\n    const oldInAbstractClass = this.state.inAbstractClass;\n    this.state.inAbstractClass = !!node.abstract;\n\n    try {\n      return super.parseClass(node, ...args);\n    } finally {\n      this.state.inAbstractClass = oldInAbstractClass;\n    }\n  }\n\n  tsParseAbstractDeclaration(node) {\n    if (this.match(76)) {\n      node.abstract = true;\n      return this.parseClass(node, true, false);\n    } else if (this.isContextual(121)) {\n      if (!this.hasFollowingLineBreak()) {\n        node.abstract = true;\n        this.raise(node.start, TSErrors.NonClassMethodPropertyHasAbstractModifer);\n        this.next();\n        return this.tsParseInterfaceDeclaration(node);\n      }\n    } else {\n      this.unexpected(null, 76);\n    }\n  }\n\n  parseMethod(...args) {\n    const method = super.parseMethod(...args);\n\n    if (method.abstract) {\n      const hasBody = this.hasPlugin(\"estree\") ? !!method.value.body : !!method.body;\n\n      if (hasBody) {\n        const {\n          key\n        } = method;\n        this.raise(method.start, TSErrors.AbstractMethodHasImplementation, key.type === \"Identifier\" && !method.computed ? key.name : `[${this.input.slice(key.start, key.end)}]`);\n      }\n    }\n\n    return method;\n  }\n\n  tsParseTypeParameterName() {\n    const typeName = this.parseIdentifier();\n    return typeName.name;\n  }\n\n  shouldParseAsAmbientContext() {\n    return !!this.getPluginOption(\"typescript\", \"dts\");\n  }\n\n  parse() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.parse();\n  }\n\n  getExpression() {\n    if (this.shouldParseAsAmbientContext()) {\n      this.state.isAmbientContext = true;\n    }\n\n    return super.getExpression();\n  }\n\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (!isString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(node, false, isInTypeExport);\n      return this.finishNode(node, \"ExportSpecifier\");\n    }\n\n    node.exportKind = \"value\";\n    return super.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly);\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n    if (!importedIsString && isMaybeTypeOnly) {\n      this.parseTypeOnlyImportExportSpecifier(specifier, true, isInTypeOnlyImport);\n      return this.finishNode(specifier, \"ImportSpecifier\");\n    }\n\n    specifier.importKind = \"value\";\n    return super.parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly);\n  }\n\n  parseTypeOnlyImportExportSpecifier(node, isImport, isInTypeOnlyImportExport) {\n    const leftOfAsKey = isImport ? \"imported\" : \"local\";\n    const rightOfAsKey = isImport ? \"local\" : \"exported\";\n    let leftOfAs = node[leftOfAsKey];\n    let rightOfAs;\n    let hasTypeSpecifier = false;\n    let canParseAsKeyword = true;\n    const pos = leftOfAs.start;\n\n    if (this.isContextual(89)) {\n      const firstAs = this.parseIdentifier();\n\n      if (this.isContextual(89)) {\n        const secondAs = this.parseIdentifier();\n\n        if (tokenIsKeywordOrIdentifier(this.state.type)) {\n          hasTypeSpecifier = true;\n          leftOfAs = firstAs;\n          rightOfAs = this.parseIdentifier();\n          canParseAsKeyword = false;\n        } else {\n          rightOfAs = secondAs;\n          canParseAsKeyword = false;\n        }\n      } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n        canParseAsKeyword = false;\n        rightOfAs = this.parseIdentifier();\n      } else {\n        hasTypeSpecifier = true;\n        leftOfAs = firstAs;\n      }\n    } else if (tokenIsKeywordOrIdentifier(this.state.type)) {\n      hasTypeSpecifier = true;\n      leftOfAs = this.parseIdentifier();\n    }\n\n    if (hasTypeSpecifier && isInTypeOnlyImportExport) {\n      this.raise(pos, isImport ? TSErrors.TypeModifierIsUsedInTypeImports : TSErrors.TypeModifierIsUsedInTypeExports);\n    }\n\n    node[leftOfAsKey] = leftOfAs;\n    node[rightOfAsKey] = rightOfAs;\n    const kindKey = isImport ? \"importKind\" : \"exportKind\";\n    node[kindKey] = hasTypeSpecifier ? \"type\" : \"value\";\n\n    if (canParseAsKeyword && this.eatContextual(89)) {\n      node[rightOfAsKey] = isImport ? this.parseIdentifier() : this.parseModuleExportName();\n    }\n\n    if (!node[rightOfAsKey]) {\n      node[rightOfAsKey] = cloneIdentifier(node[leftOfAsKey]);\n    }\n\n    if (isImport) {\n      this.checkLVal(node[rightOfAsKey], \"import specifier\", BIND_LEXICAL);\n    }\n  }\n\n});\n\nconst PlaceHolderErrors = makeErrorTemplates({\n  ClassNameIsRequired: \"A class name is required.\"\n}, ErrorCodes.SyntaxError);\nvar placeholders = (superClass => class extends superClass {\n  parsePlaceholder(expectedNode) {\n    if (this.match(136)) {\n      const node = this.startNode();\n      this.next();\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      node.name = super.parseIdentifier(true);\n      this.assertNoSpace(\"Unexpected space in placeholder.\");\n      this.expect(136);\n      return this.finishPlaceholder(node, expectedNode);\n    }\n  }\n\n  finishPlaceholder(node, expectedNode) {\n    const isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n    node.expectedNode = expectedNode;\n    return isFinished ? node : this.finishNode(node, \"Placeholder\");\n  }\n\n  getTokenFromCode(code) {\n    if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n      return this.finishOp(136, 2);\n    }\n\n    return super.getTokenFromCode(...arguments);\n  }\n\n  parseExprAtom() {\n    return this.parsePlaceholder(\"Expression\") || super.parseExprAtom(...arguments);\n  }\n\n  parseIdentifier() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseIdentifier(...arguments);\n  }\n\n  checkReservedWord(word) {\n    if (word !== undefined) super.checkReservedWord(...arguments);\n  }\n\n  parseBindingAtom() {\n    return this.parsePlaceholder(\"Pattern\") || super.parseBindingAtom(...arguments);\n  }\n\n  checkLVal(expr) {\n    if (expr.type !== \"Placeholder\") super.checkLVal(...arguments);\n  }\n\n  toAssignable(node) {\n    if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n      node.expectedNode = \"Pattern\";\n      return node;\n    }\n\n    return super.toAssignable(...arguments);\n  }\n\n  isLet(context) {\n    if (super.isLet(context)) {\n      return true;\n    }\n\n    if (!this.isContextual(95)) {\n      return false;\n    }\n\n    if (context) return false;\n    const nextToken = this.lookahead();\n\n    if (nextToken.type === 136) {\n      return true;\n    }\n\n    return false;\n  }\n\n  verifyBreakContinue(node) {\n    if (node.label && node.label.type === \"Placeholder\") return;\n    super.verifyBreakContinue(...arguments);\n  }\n\n  parseExpressionStatement(node, expr) {\n    if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n      return super.parseExpressionStatement(...arguments);\n    }\n\n    if (this.match(14)) {\n      const stmt = node;\n      stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n      this.next();\n      stmt.body = this.parseStatement(\"label\");\n      return this.finishNode(stmt, \"LabeledStatement\");\n    }\n\n    this.semicolon();\n    node.name = expr.name;\n    return this.finishPlaceholder(node, \"Statement\");\n  }\n\n  parseBlock() {\n    return this.parsePlaceholder(\"BlockStatement\") || super.parseBlock(...arguments);\n  }\n\n  parseFunctionId() {\n    return this.parsePlaceholder(\"Identifier\") || super.parseFunctionId(...arguments);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    const type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n\n    if (placeholder) {\n      if (this.match(77) || this.match(136) || this.match(5)) {\n        node.id = placeholder;\n      } else if (optionalId || !isStatement) {\n        node.id = null;\n        node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n        return this.finishNode(node, type);\n      } else {\n        this.unexpected(null, PlaceHolderErrors.ClassNameIsRequired);\n      }\n    } else {\n      this.parseClassId(node, isStatement, optionalId);\n    }\n\n    this.parseClassSuper(node);\n    node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, type);\n  }\n\n  parseExport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseExport(...arguments);\n\n    if (!this.isContextual(93) && !this.match(12)) {\n      node.specifiers = [];\n      node.source = null;\n      node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    this.expectPlugin(\"exportDefaultFrom\");\n    const specifier = this.startNode();\n    specifier.exported = placeholder;\n    node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n    return super.parseExport(node);\n  }\n\n  isExportDefaultSpecifier() {\n    if (this.match(61)) {\n      const next = this.nextTokenStart();\n\n      if (this.isUnparsedContextual(next, \"from\")) {\n        if (this.input.startsWith(tokenLabelName(136), this.nextTokenStartSince(next + 4))) {\n          return true;\n        }\n      }\n    }\n\n    return super.isExportDefaultSpecifier();\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (node.specifiers && node.specifiers.length > 0) {\n      return true;\n    }\n\n    return super.maybeParseExportDefaultSpecifier(...arguments);\n  }\n\n  checkExport(node) {\n    const {\n      specifiers\n    } = node;\n\n    if (specifiers != null && specifiers.length) {\n      node.specifiers = specifiers.filter(node => node.exported.type === \"Placeholder\");\n    }\n\n    super.checkExport(node);\n    node.specifiers = specifiers;\n  }\n\n  parseImport(node) {\n    const placeholder = this.parsePlaceholder(\"Identifier\");\n    if (!placeholder) return super.parseImport(...arguments);\n    node.specifiers = [];\n\n    if (!this.isContextual(93) && !this.match(12)) {\n      node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n\n    const specifier = this.startNodeAtNode(placeholder);\n    specifier.local = placeholder;\n    this.finishNode(specifier, \"ImportDefaultSpecifier\");\n    node.specifiers.push(specifier);\n\n    if (this.eat(12)) {\n      const hasStarImport = this.maybeParseStarImportSpecifier(node);\n      if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n    }\n\n    this.expectContextual(93);\n    node.source = this.parseImportSource();\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    return this.parsePlaceholder(\"StringLiteral\") || super.parseImportSource(...arguments);\n  }\n\n});\n\nvar v8intrinsic = (superClass => class extends superClass {\n  parseV8Intrinsic() {\n    if (this.match(50)) {\n      const v8IntrinsicStart = this.state.start;\n      const node = this.startNode();\n      this.next();\n\n      if (tokenIsIdentifier(this.state.type)) {\n        const name = this.parseIdentifierName(this.state.start);\n        const identifier = this.createIdentifier(node, name);\n        identifier.type = \"V8IntrinsicIdentifier\";\n\n        if (this.match(10)) {\n          return identifier;\n        }\n      }\n\n      this.unexpected(v8IntrinsicStart);\n    }\n  }\n\n  parseExprAtom() {\n    return this.parseV8Intrinsic() || super.parseExprAtom(...arguments);\n  }\n\n});\n\nfunction hasPlugin(plugins, expectedConfig) {\n  const [expectedName, expectedOptions] = typeof expectedConfig === \"string\" ? [expectedConfig, {}] : expectedConfig;\n  const expectedKeys = Object.keys(expectedOptions);\n  const expectedOptionsIsEmpty = expectedKeys.length === 0;\n  return plugins.some(p => {\n    if (typeof p === \"string\") {\n      return expectedOptionsIsEmpty && p === expectedName;\n    } else {\n      const [pluginName, pluginOptions] = p;\n\n      if (pluginName !== expectedName) {\n        return false;\n      }\n\n      for (const key of expectedKeys) {\n        if (pluginOptions[key] !== expectedOptions[key]) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  });\n}\nfunction getPluginOption(plugins, name, option) {\n  const plugin = plugins.find(plugin => {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\nconst PIPELINE_PROPOSALS = [\"minimal\", \"fsharp\", \"hack\", \"smart\"];\nconst TOPIC_TOKENS = [\"^\", \"%\", \"#\"];\nconst RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    const decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\")) {\n    const proposal = getPluginOption(plugins, \"pipelineOperator\", \"proposal\");\n\n    if (!PIPELINE_PROPOSALS.includes(proposal)) {\n      const proposalList = PIPELINE_PROPOSALS.map(p => `\"${p}\"`).join(\", \");\n      throw new Error(`\"pipelineOperator\" requires \"proposal\" option whose value must be one of: ${proposalList}.`);\n    }\n\n    const tupleSyntaxIsHash = hasPlugin(plugins, [\"recordAndTuple\", {\n      syntaxType: \"hash\"\n    }]);\n\n    if (proposal === \"hack\") {\n      if (hasPlugin(plugins, \"placeholders\")) {\n        throw new Error(\"Cannot combine placeholders plugin and Hack-style pipes.\");\n      }\n\n      if (hasPlugin(plugins, \"v8intrinsic\")) {\n        throw new Error(\"Cannot combine v8intrinsic plugin and Hack-style pipes.\");\n      }\n\n      const topicToken = getPluginOption(plugins, \"pipelineOperator\", \"topicToken\");\n\n      if (!TOPIC_TOKENS.includes(topicToken)) {\n        const tokenList = TOPIC_TOKENS.map(t => `\"${t}\"`).join(\", \");\n        throw new Error(`\"pipelineOperator\" in \"proposal\": \"hack\" mode also requires a \"topicToken\" option whose value must be one of: ${tokenList}.`);\n      }\n\n      if (topicToken === \"#\" && tupleSyntaxIsHash) {\n        throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"hack\", topicToken: \"#\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n      }\n    } else if (proposal === \"smart\" && tupleSyntaxIsHash) {\n      throw new Error('Plugin conflict between `[\"pipelineOperator\", { proposal: \"smart\" }]` and `[\"recordAndtuple\", { syntaxType: \"hash\"}]`.');\n    }\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    {\n      if (hasPlugin(plugins, \"importAssertions\")) {\n        throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n      }\n\n      const moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n      if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n        throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n      }\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(p => `'${p}'`).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"asyncDoExpressions\") && !hasPlugin(plugins, \"doExpressions\")) {\n    const error = new Error(\"'asyncDoExpressions' requires 'doExpressions', please add 'doExpressions' to parser plugins.\");\n    error.missingPlugins = \"doExpressions\";\n    throw error;\n  }\n}\nconst mixinPlugins = {\n  estree,\n  jsx,\n  flow,\n  typescript,\n  v8intrinsic,\n  placeholders\n};\nconst mixinPluginNames = Object.keys(mixinPlugins);\n\nconst defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startColumn: 0,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false,\n  attachComment: true\n};\nfunction getOptions(opts) {\n  const options = {};\n\n  for (const key of Object.keys(defaultOptions)) {\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nconst unwrapParenthesizedExpression = node => {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nclass LValParser extends NodeUtils {\n  toAssignable(node, isLHS = false) {\n    var _node$extra, _node$extra3;\n\n    let parenthesized = undefined;\n\n    if (node.type === \"ParenthesizedExpression\" || (_node$extra = node.extra) != null && _node$extra.parenthesized) {\n      parenthesized = unwrapParenthesizedExpression(node);\n\n      if (isLHS) {\n        if (parenthesized.type === \"Identifier\") {\n          this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        } else if (parenthesized.type !== \"MemberExpression\") {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      } else {\n        this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n      }\n    }\n\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break;\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n\n        for (let i = 0, length = node.properties.length, last = length - 1; i < length; i++) {\n          var _node$extra2;\n\n          const prop = node.properties[i];\n          const isLast = i === last;\n          this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n          if (isLast && prop.type === \"RestElement\" && (_node$extra2 = node.extra) != null && _node$extra2.trailingComma) {\n            this.raiseRestNotLast(node.extra.trailingComma);\n          }\n        }\n\n        break;\n\n      case \"ObjectProperty\":\n        this.toAssignable(node.value, isLHS);\n        break;\n\n      case \"SpreadElement\":\n        {\n          this.checkToRestConversion(node);\n          node.type = \"RestElement\";\n          const arg = node.argument;\n          this.toAssignable(arg, isLHS);\n          break;\n        }\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n        break;\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") {\n          this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n        }\n\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isLHS);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(parenthesized, isLHS);\n        break;\n    }\n\n    return node;\n  }\n\n  toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n    if (prop.type === \"ObjectMethod\") {\n      const error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n      this.raise(prop.key.start, error);\n    } else if (prop.type === \"SpreadElement\" && !isLast) {\n      this.raiseRestNotLast(prop.start);\n    } else {\n      this.toAssignable(prop, isLHS);\n    }\n  }\n\n  toAssignableList(exprList, trailingCommaPos, isLHS) {\n    let end = exprList.length;\n\n    if (end) {\n      const last = exprList[end - 1];\n\n      if ((last == null ? void 0 : last.type) === \"RestElement\") {\n        --end;\n      } else if ((last == null ? void 0 : last.type) === \"SpreadElement\") {\n        last.type = \"RestElement\";\n        let arg = last.argument;\n        this.toAssignable(arg, isLHS);\n        arg = unwrapParenthesizedExpression(arg);\n\n        if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n          this.unexpected(arg.start);\n        }\n\n        if (trailingCommaPos) {\n          this.raiseTrailingCommaAfterRest(trailingCommaPos);\n        }\n\n        --end;\n      }\n    }\n\n    for (let i = 0; i < end; i++) {\n      const elt = exprList[i];\n\n      if (elt) {\n        this.toAssignable(elt, isLHS);\n\n        if (elt.type === \"RestElement\") {\n          this.raiseRestNotLast(elt.start);\n        }\n      }\n    }\n\n    return exprList;\n  }\n\n  isAssignable(node, isBinding) {\n    switch (node.type) {\n      case \"Identifier\":\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        return true;\n\n      case \"ObjectExpression\":\n        {\n          const last = node.properties.length - 1;\n          return node.properties.every((prop, i) => {\n            return prop.type !== \"ObjectMethod\" && (i === last || prop.type !== \"SpreadElement\") && this.isAssignable(prop);\n          });\n        }\n\n      case \"ObjectProperty\":\n        return this.isAssignable(node.value);\n\n      case \"SpreadElement\":\n        return this.isAssignable(node.argument);\n\n      case \"ArrayExpression\":\n        return node.elements.every(element => element === null || this.isAssignable(element));\n\n      case \"AssignmentExpression\":\n        return node.operator === \"=\";\n\n      case \"ParenthesizedExpression\":\n        return this.isAssignable(node.expression);\n\n      case \"MemberExpression\":\n      case \"OptionalMemberExpression\":\n        return !isBinding;\n\n      default:\n        return false;\n    }\n  }\n\n  toReferencedList(exprList, isParenthesizedExpr) {\n    return exprList;\n  }\n\n  toReferencedListDeep(exprList, isParenthesizedExpr) {\n    this.toReferencedList(exprList, isParenthesizedExpr);\n\n    for (const expr of exprList) {\n      if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n        this.toReferencedListDeep(expr.elements);\n      }\n    }\n  }\n\n  parseSpread(refExpressionErrors, refNeedsArrowPos) {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n    return this.finishNode(node, \"SpreadElement\");\n  }\n\n  parseRestBinding() {\n    const node = this.startNode();\n    this.next();\n    node.argument = this.parseBindingAtom();\n    return this.finishNode(node, \"RestElement\");\n  }\n\n  parseBindingAtom() {\n    switch (this.state.type) {\n      case 0:\n        {\n          const node = this.startNode();\n          this.next();\n          node.elements = this.parseBindingList(3, 93, true);\n          return this.finishNode(node, \"ArrayPattern\");\n        }\n\n      case 5:\n        return this.parseObjectLike(8, true);\n    }\n\n    return this.parseIdentifier();\n  }\n\n  parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n      }\n\n      if (allowEmpty && this.match(12)) {\n        elts.push(null);\n      } else if (this.eat(close)) {\n        break;\n      } else if (this.match(21)) {\n        elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n        this.checkCommaAfterRest(closeCharCode);\n        this.expect(close);\n        break;\n      } else {\n        const decorators = [];\n\n        if (this.match(26) && this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n        }\n\n        while (this.match(26)) {\n          decorators.push(this.parseDecorator());\n        }\n\n        elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n      }\n    }\n\n    return elts;\n  }\n\n  parseBindingRestProperty(prop) {\n    this.next();\n    prop.argument = this.parseIdentifier();\n    this.checkCommaAfterRest(125);\n    return this.finishNode(prop, \"RestElement\");\n  }\n\n  parseBindingProperty() {\n    const prop = this.startNode();\n    const {\n      type,\n      start: startPos,\n      startLoc\n    } = this.state;\n\n    if (type === 21) {\n      return this.parseBindingRestProperty(prop);\n    } else {\n      this.parsePropertyName(prop);\n    }\n\n    prop.method = false;\n    this.parseObjPropValue(prop, startPos, startLoc, false, false, true, false);\n    return prop;\n  }\n\n  parseAssignableListItem(allowModifiers, decorators) {\n    const left = this.parseMaybeDefault();\n    this.parseAssignableListItemTypes(left);\n    const elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n    if (decorators.length) {\n      left.decorators = decorators;\n    }\n\n    return elt;\n  }\n\n  parseAssignableListItemTypes(param) {\n    return param;\n  }\n\n  parseMaybeDefault(startPos, startLoc, left) {\n    var _startLoc, _startPos, _left;\n\n    startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n    startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n    left = (_left = left) != null ? _left : this.parseBindingAtom();\n    if (!this.eat(29)) return left;\n    const node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssignAllowIn();\n    return this.finishNode(node, \"AssignmentPattern\");\n  }\n\n  checkLVal(expr, contextDescription, bindingType = BIND_NONE, checkClashes, disallowLetBinding, strictModeChanged = false) {\n    switch (expr.type) {\n      case \"Identifier\":\n        {\n          const {\n            name\n          } = expr;\n\n          if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n          }\n\n          if (checkClashes) {\n            if (checkClashes.has(name)) {\n              this.raise(expr.start, ErrorMessages.ParamDupe);\n            } else {\n              checkClashes.add(name);\n            }\n          }\n\n          if (disallowLetBinding && name === \"let\") {\n            this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n          }\n\n          if (!(bindingType & BIND_NONE)) {\n            this.scope.declareName(name, bindingType, expr.start);\n          }\n\n          break;\n        }\n\n      case \"MemberExpression\":\n        if (bindingType !== BIND_NONE) {\n          this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n        }\n\n        break;\n\n      case \"ObjectPattern\":\n        for (let prop of expr.properties) {\n          if (this.isObjectProperty(prop)) prop = prop.value;else if (this.isObjectMethod(prop)) continue;\n          this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n        }\n\n        break;\n\n      case \"ArrayPattern\":\n        for (const elem of expr.elements) {\n          if (elem) {\n            this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n        }\n\n        break;\n\n      case \"AssignmentPattern\":\n        this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n        break;\n\n      case \"RestElement\":\n        this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n        break;\n\n      case \"ParenthesizedExpression\":\n        this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n        break;\n\n      default:\n        {\n          this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n        }\n    }\n  }\n\n  checkToRestConversion(node) {\n    if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n      this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n    }\n  }\n\n  checkCommaAfterRest(close) {\n    if (this.match(12)) {\n      if (this.lookaheadCharCode() === close) {\n        this.raiseTrailingCommaAfterRest(this.state.start);\n      } else {\n        this.raiseRestNotLast(this.state.start);\n      }\n    }\n  }\n\n  raiseRestNotLast(pos) {\n    throw this.raise(pos, ErrorMessages.ElementAfterRest);\n  }\n\n  raiseTrailingCommaAfterRest(pos) {\n    this.raise(pos, ErrorMessages.RestTrailingComma);\n  }\n\n}\n\nconst invalidHackPipeBodies = new Map([[\"ArrowFunctionExpression\", \"arrow function\"], [\"AssignmentExpression\", \"assignment\"], [\"ConditionalExpression\", \"conditional\"], [\"YieldExpression\", \"yield\"]]);\nclass ExpressionParser extends LValParser {\n  checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n    if (prop.type === \"SpreadElement\" || this.isObjectMethod(prop) || prop.computed || prop.shorthand) {\n      return;\n    }\n\n    const key = prop.key;\n    const name = key.type === \"Identifier\" ? key.name : key.value;\n\n    if (name === \"__proto__\") {\n      if (isRecord) {\n        this.raise(key.start, ErrorMessages.RecordNoProto);\n        return;\n      }\n\n      if (protoRef.used) {\n        if (refExpressionErrors) {\n          if (refExpressionErrors.doubleProto === -1) {\n            refExpressionErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raise(key.start, ErrorMessages.DuplicateProto);\n        }\n      }\n\n      protoRef.used = true;\n    }\n  }\n\n  shouldExitDescending(expr, potentialArrowAt) {\n    return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n  }\n\n  getExpression() {\n    this.enterInitialScopes();\n    this.nextToken();\n    const expr = this.parseExpression();\n\n    if (!this.match(131)) {\n      this.unexpected();\n    }\n\n    this.finalizeRemainingComments();\n    expr.comments = this.state.comments;\n    expr.errors = this.state.errors;\n\n    if (this.options.tokens) {\n      expr.tokens = this.tokens;\n    }\n\n    return expr;\n  }\n\n  parseExpression(disallowIn, refExpressionErrors) {\n    if (disallowIn) {\n      return this.disallowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n    }\n\n    return this.allowInAnd(() => this.parseExpressionBase(refExpressionErrors));\n  }\n\n  parseExpressionBase(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const expr = this.parseMaybeAssign(refExpressionErrors);\n\n    if (this.match(12)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n\n      while (this.eat(12)) {\n        node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n      }\n\n      this.toReferencedList(node.expressions);\n      return this.finishNode(node, \"SequenceExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse) {\n    return this.disallowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse) {\n    return this.allowInAnd(() => this.parseMaybeAssign(refExpressionErrors, afterLeftParse));\n  }\n\n  setOptionalParametersError(refExpressionErrors, resultError) {\n    var _resultError$pos;\n\n    refExpressionErrors.optionalParameters = (_resultError$pos = resultError == null ? void 0 : resultError.pos) != null ? _resultError$pos : this.state.start;\n  }\n\n  parseMaybeAssign(refExpressionErrors, afterLeftParse) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    if (this.isContextual(101)) {\n      if (this.prodParam.hasYield) {\n        let left = this.parseYield();\n\n        if (afterLeftParse) {\n          left = afterLeftParse.call(this, left, startPos, startLoc);\n        }\n\n        return left;\n      }\n    }\n\n    let ownExpressionErrors;\n\n    if (refExpressionErrors) {\n      ownExpressionErrors = false;\n    } else {\n      refExpressionErrors = new ExpressionErrors();\n      ownExpressionErrors = true;\n    }\n\n    const {\n      type\n    } = this.state;\n\n    if (type === 10 || tokenIsIdentifier(type)) {\n      this.state.potentialArrowAt = this.state.start;\n    }\n\n    let left = this.parseMaybeConditional(refExpressionErrors);\n\n    if (afterLeftParse) {\n      left = afterLeftParse.call(this, left, startPos, startLoc);\n    }\n\n    if (tokenIsAssignment(this.state.type)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      const operator = this.state.value;\n      node.operator = operator;\n\n      if (this.match(29)) {\n        node.left = this.toAssignable(left, true);\n\n        if (refExpressionErrors.doubleProto >= startPos) {\n          refExpressionErrors.doubleProto = -1;\n        }\n\n        if (refExpressionErrors.shorthandAssign >= startPos) {\n          refExpressionErrors.shorthandAssign = -1;\n        }\n      } else {\n        node.left = left;\n      }\n\n      this.checkLVal(left, \"assignment expression\");\n      this.next();\n      node.right = this.parseMaybeAssign();\n      return this.finishNode(node, \"AssignmentExpression\");\n    } else if (ownExpressionErrors) {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    return left;\n  }\n\n  parseMaybeConditional(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprOps(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseConditional(expr, startPos, startLoc, refExpressionErrors);\n  }\n\n  parseConditional(expr, startPos, startLoc, refExpressionErrors) {\n    if (this.eat(17)) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssignAllowIn();\n      this.expect(14);\n      node.alternate = this.parseMaybeAssign();\n      return this.finishNode(node, \"ConditionalExpression\");\n    }\n\n    return expr;\n  }\n\n  parseMaybeUnaryOrPrivate(refExpressionErrors) {\n    return this.match(130) ? this.parsePrivateName() : this.parseMaybeUnary(refExpressionErrors);\n  }\n\n  parseExprOps(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseMaybeUnaryOrPrivate(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseExprOp(expr, startPos, startLoc, -1);\n  }\n\n  parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n    if (this.isPrivateName(left)) {\n      const value = this.getPrivateNameSV(left);\n      const {\n        start\n      } = left;\n\n      if (minPrec >= tokenOperatorPrecedence(54) || !this.prodParam.hasIn || !this.match(54)) {\n        this.raise(start, ErrorMessages.PrivateInExpectedIn, value);\n      }\n\n      this.classScope.usePrivateName(value, start);\n    }\n\n    const op = this.state.type;\n\n    if (tokenIsOperator(op) && (this.prodParam.hasIn || !this.match(54))) {\n      let prec = tokenOperatorPrecedence(op);\n\n      if (prec > minPrec) {\n        if (op === 37) {\n          this.expectPlugin(\"pipelineOperator\");\n\n          if (this.state.inFSharpPipelineDirectBody) {\n            return left;\n          }\n\n          this.checkPipelineAtInfixOperator(left, leftStartPos);\n        }\n\n        const node = this.startNodeAt(leftStartPos, leftStartLoc);\n        node.left = left;\n        node.operator = this.state.value;\n        const logical = op === 39 || op === 40;\n        const coalesce = op === 38;\n\n        if (coalesce) {\n          prec = tokenOperatorPrecedence(40);\n        }\n\n        this.next();\n\n        if (op === 37 && this.hasPlugin([\"pipelineOperator\", {\n          proposal: \"minimal\"\n        }])) {\n          if (this.state.type === 92 && this.prodParam.hasAwait) {\n            throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n          }\n        }\n\n        node.right = this.parseExprOpRightExpr(op, prec);\n        this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n        const nextOp = this.state.type;\n\n        if (coalesce && (nextOp === 39 || nextOp === 40) || logical && nextOp === 38) {\n          throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n        }\n\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n      }\n    }\n\n    return left;\n  }\n\n  parseExprOpRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n\n    switch (op) {\n      case 37:\n        switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n          case \"hack\":\n            return this.withTopicBindingContext(() => {\n              return this.parseHackPipeBody();\n            });\n\n          case \"smart\":\n            return this.withTopicBindingContext(() => {\n              if (this.prodParam.hasYield && this.isContextual(101)) {\n                throw this.raise(this.state.start, ErrorMessages.PipeBodyIsTighter, this.state.value);\n              }\n\n              return this.parseSmartPipelineBodyInStyle(this.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n            });\n\n          case \"fsharp\":\n            return this.withSoloAwaitPermittingContext(() => {\n              return this.parseFSharpPipelineBody(prec);\n            });\n        }\n\n      default:\n        return this.parseExprOpBaseRightExpr(op, prec);\n    }\n  }\n\n  parseExprOpBaseRightExpr(op, prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, tokenIsRightAssociative(op) ? prec - 1 : prec);\n  }\n\n  parseHackPipeBody() {\n    var _body$extra;\n\n    const {\n      start\n    } = this.state;\n    const body = this.parseMaybeAssign();\n\n    if (invalidHackPipeBodies.has(body.type) && !((_body$extra = body.extra) != null && _body$extra.parenthesized)) {\n      this.raise(start, ErrorMessages.PipeUnparenthesizedBody, invalidHackPipeBodies.get(body.type));\n    }\n\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(start, ErrorMessages.PipeTopicUnused);\n    }\n\n    return body;\n  }\n\n  checkExponentialAfterUnary(node) {\n    if (this.match(53)) {\n      this.raise(node.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n    }\n  }\n\n  parseMaybeUnary(refExpressionErrors, sawUnary) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const isAwait = this.isContextual(92);\n\n    if (isAwait && this.isAwaitAllowed()) {\n      this.next();\n      const expr = this.parseAwait(startPos, startLoc);\n      if (!sawUnary) this.checkExponentialAfterUnary(expr);\n      return expr;\n    }\n\n    const update = this.match(34);\n    const node = this.startNode();\n\n    if (tokenIsPrefix(this.state.type)) {\n      node.operator = this.state.value;\n      node.prefix = true;\n\n      if (this.match(68)) {\n        this.expectPlugin(\"throwExpressions\");\n      }\n\n      const isDelete = this.match(85);\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refExpressionErrors, true);\n\n      if (this.state.strict && isDelete) {\n        const arg = node.argument;\n\n        if (arg.type === \"Identifier\") {\n          this.raise(node.start, ErrorMessages.StrictDelete);\n        } else if (this.hasPropertyAsPrivateName(arg)) {\n          this.raise(node.start, ErrorMessages.DeletePrivateField);\n        }\n      }\n\n      if (!update) {\n        if (!sawUnary) this.checkExponentialAfterUnary(node);\n        return this.finishNode(node, \"UnaryExpression\");\n      }\n    }\n\n    const expr = this.parseUpdate(node, update, refExpressionErrors);\n\n    if (isAwait) {\n      const {\n        type\n      } = this.state;\n      const startsExpr = this.hasPlugin(\"v8intrinsic\") ? tokenCanStartExpression(type) : tokenCanStartExpression(type) && !this.match(50);\n\n      if (startsExpr && !this.isAmbiguousAwait()) {\n        this.raiseOverwrite(startPos, ErrorMessages.AwaitNotInAsyncContext);\n        return this.parseAwait(startPos, startLoc);\n      }\n    }\n\n    return expr;\n  }\n\n  parseUpdate(node, update, refExpressionErrors) {\n    if (update) {\n      this.checkLVal(node.argument, \"prefix operation\");\n      return this.finishNode(node, \"UpdateExpression\");\n    }\n\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let expr = this.parseExprSubscripts(refExpressionErrors);\n    if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n    while (tokenIsPostfix(this.state.type) && !this.canInsertSemicolon()) {\n      const node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.state.value;\n      node.prefix = false;\n      node.argument = expr;\n      this.checkLVal(expr, \"postfix operation\");\n      this.next();\n      expr = this.finishNode(node, \"UpdateExpression\");\n    }\n\n    return expr;\n  }\n\n  parseExprSubscripts(refExpressionErrors) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    const potentialArrowAt = this.state.potentialArrowAt;\n    const expr = this.parseExprAtom(refExpressionErrors);\n\n    if (this.shouldExitDescending(expr, potentialArrowAt)) {\n      return expr;\n    }\n\n    return this.parseSubscripts(expr, startPos, startLoc);\n  }\n\n  parseSubscripts(base, startPos, startLoc, noCalls) {\n    const state = {\n      optionalChainMember: false,\n      maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n      stop: false\n    };\n\n    do {\n      base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n      state.maybeAsyncArrow = false;\n    } while (!state.stop);\n\n    return base;\n  }\n\n  parseSubscript(base, startPos, startLoc, noCalls, state) {\n    const {\n      type\n    } = this.state;\n\n    if (!noCalls && type === 15) {\n      return this.parseBind(base, startPos, startLoc, noCalls, state);\n    } else if (tokenIsTemplate(type)) {\n      return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n    }\n\n    let optional = false;\n\n    if (type === 18) {\n      if (noCalls && this.lookaheadCharCode() === 40) {\n        state.stop = true;\n        return base;\n      }\n\n      state.optionalChainMember = optional = true;\n      this.next();\n    }\n\n    if (!noCalls && this.match(10)) {\n      return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n    } else {\n      const computed = this.eat(0);\n\n      if (computed || optional || this.eat(16)) {\n        return this.parseMember(base, startPos, startLoc, state, computed, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }\n\n  parseMember(base, startPos, startLoc, state, computed, optional) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    node.computed = computed;\n\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(3);\n    } else if (this.match(130)) {\n      if (base.type === \"Super\") {\n        this.raise(startPos, ErrorMessages.SuperPrivateField);\n      }\n\n      this.classScope.usePrivateName(this.state.value, this.state.start);\n      node.property = this.parsePrivateName();\n    } else {\n      node.property = this.parseIdentifier(true);\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n      return this.finishNode(node, \"OptionalMemberExpression\");\n    } else {\n      return this.finishNode(node, \"MemberExpression\");\n    }\n  }\n\n  parseBind(base, startPos, startLoc, noCalls, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    this.next();\n    node.callee = this.parseNoCallExpr();\n    state.stop = true;\n    return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n  }\n\n  parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    let refExpressionErrors = null;\n    this.state.maybeInArrowParameters = true;\n    this.next();\n    let node = this.startNodeAt(startPos, startLoc);\n    node.callee = base;\n\n    if (state.maybeAsyncArrow) {\n      this.expressionScope.enter(newAsyncArrowScope());\n      refExpressionErrors = new ExpressionErrors();\n    }\n\n    if (state.optionalChainMember) {\n      node.optional = optional;\n    }\n\n    if (optional) {\n      node.arguments = this.parseCallExpressionArguments(11);\n    } else {\n      node.arguments = this.parseCallExpressionArguments(11, base.type === \"Import\", base.type !== \"Super\", node, refExpressionErrors);\n    }\n\n    this.finishCallExpression(node, state.optionalChainMember);\n\n    if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n      state.stop = true;\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n    } else {\n      if (state.maybeAsyncArrow) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n        this.expressionScope.exit();\n      }\n\n      this.toReferencedArguments(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  toReferencedArguments(node, isParenthesizedExpr) {\n    this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n  }\n\n  parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n    const node = this.startNodeAt(startPos, startLoc);\n    node.tag = base;\n    node.quasi = this.parseTemplate(true);\n\n    if (state.optionalChainMember) {\n      this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n    }\n\n    return this.finishNode(node, \"TaggedTemplateExpression\");\n  }\n\n  atPossibleAsyncArrow(base) {\n    return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n  }\n\n  finishCallExpression(node, optional) {\n    if (node.callee.type === \"Import\") {\n      if (node.arguments.length === 2) {\n        {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n      }\n\n      if (node.arguments.length === 0 || node.arguments.length > 2) {\n        this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n      } else {\n        for (const arg of node.arguments) {\n          if (arg.type === \"SpreadElement\") {\n            this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n          }\n        }\n      }\n    }\n\n    return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n  }\n\n  parseCallExpressionArguments(close, dynamicImport, allowPlaceholder, nodeForExtra, refExpressionErrors) {\n    const elts = [];\n    let first = true;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n            this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n          }\n\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(false, refExpressionErrors, allowPlaceholder));\n    }\n\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return elts;\n  }\n\n  shouldParseAsyncArrow() {\n    return this.match(19) && !this.canInsertSemicolon();\n  }\n\n  parseAsyncArrowFromCallExpression(node, call) {\n    var _call$extra;\n\n    this.resetPreviousNodeTrailingComments(call);\n    this.expect(19);\n    this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n\n    if (call.innerComments) {\n      setInnerComments(node, call.innerComments);\n    }\n\n    if (call.callee.trailingComments) {\n      setInnerComments(node, call.callee.trailingComments);\n    }\n\n    return node;\n  }\n\n  parseNoCallExpr() {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  }\n\n  parseExprAtom(refExpressionErrors) {\n    let node;\n    const {\n      type\n    } = this.state;\n\n    switch (type) {\n      case 75:\n        return this.parseSuper();\n\n      case 79:\n        node = this.startNode();\n        this.next();\n\n        if (this.match(16)) {\n          return this.parseImportMetaProperty(node);\n        }\n\n        if (!this.match(10)) {\n          this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n        }\n\n        return this.finishNode(node, \"Import\");\n\n      case 74:\n        node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"ThisExpression\");\n\n      case 86:\n        {\n          return this.parseDo(this.startNode(), false);\n        }\n\n      case 52:\n      case 31:\n        {\n          this.readRegexp();\n          return this.parseRegExpLiteral(this.state.value);\n        }\n\n      case 126:\n        return this.parseNumericLiteral(this.state.value);\n\n      case 127:\n        return this.parseBigIntLiteral(this.state.value);\n\n      case 128:\n        return this.parseDecimalLiteral(this.state.value);\n\n      case 125:\n        return this.parseStringLiteral(this.state.value);\n\n      case 80:\n        return this.parseNullLiteral();\n\n      case 81:\n        return this.parseBooleanLiteral(true);\n\n      case 82:\n        return this.parseBooleanLiteral(false);\n\n      case 10:\n        {\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n        }\n\n      case 2:\n      case 1:\n        {\n          return this.parseArrayLike(this.state.type === 2 ? 4 : 3, false, true);\n        }\n\n      case 0:\n        {\n          return this.parseArrayLike(3, true, false, refExpressionErrors);\n        }\n\n      case 6:\n      case 7:\n        {\n          return this.parseObjectLike(this.state.type === 6 ? 9 : 8, false, true);\n        }\n\n      case 5:\n        {\n          return this.parseObjectLike(8, false, false, refExpressionErrors);\n        }\n\n      case 64:\n        return this.parseFunctionOrFunctionSent();\n\n      case 26:\n        this.parseDecorators();\n\n      case 76:\n        node = this.startNode();\n        this.takeDecorators(node);\n        return this.parseClass(node, false);\n\n      case 73:\n        return this.parseNewOrNewTarget();\n\n      case 25:\n      case 24:\n        return this.parseTemplate(false);\n\n      case 15:\n        {\n          node = this.startNode();\n          this.next();\n          node.object = null;\n          const callee = node.callee = this.parseNoCallExpr();\n\n          if (callee.type === \"MemberExpression\") {\n            return this.finishNode(node, \"BindExpression\");\n          } else {\n            throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n          }\n        }\n\n      case 130:\n        {\n          this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, this.state.value);\n          return this.parsePrivateName();\n        }\n\n      case 33:\n        {\n          return this.parseTopicReferenceThenEqualsSign(50, \"%\");\n        }\n\n      case 32:\n        {\n          return this.parseTopicReferenceThenEqualsSign(42, \"^\");\n        }\n\n      case 42:\n      case 50:\n      case 27:\n        {\n          const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n          if (pipeProposal) {\n            return this.parseTopicReference(pipeProposal);\n          } else {\n            throw this.unexpected();\n          }\n        }\n\n      case 45:\n        {\n          const lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n          if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n            this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n            break;\n          } else {\n            throw this.unexpected();\n          }\n        }\n\n      default:\n        if (tokenIsIdentifier(type)) {\n          if (this.isContextual(119) && this.lookaheadCharCode() === 123 && !this.hasFollowingLineBreak()) {\n            return this.parseModuleExpression();\n          }\n\n          const canBeArrow = this.state.potentialArrowAt === this.state.start;\n          const containsEsc = this.state.containsEsc;\n          const id = this.parseIdentifier();\n\n          if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n            const {\n              type\n            } = this.state;\n\n            if (type === 64) {\n              this.resetPreviousNodeTrailingComments(id);\n              this.next();\n              return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n            } else if (tokenIsIdentifier(type)) {\n              if (this.lookaheadCharCode() === 61) {\n                return this.parseAsyncArrowUnaryFunction(this.startNodeAtNode(id));\n              } else {\n                return id;\n              }\n            } else if (type === 86) {\n              this.resetPreviousNodeTrailingComments(id);\n              return this.parseDo(this.startNodeAtNode(id), true);\n            }\n          }\n\n          if (canBeArrow && this.match(19) && !this.canInsertSemicolon()) {\n            this.next();\n            return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n          }\n\n          return id;\n        } else {\n          throw this.unexpected();\n        }\n\n    }\n  }\n\n  parseTopicReferenceThenEqualsSign(topicTokenType, topicTokenValue) {\n    const pipeProposal = this.getPluginOption(\"pipelineOperator\", \"proposal\");\n\n    if (pipeProposal) {\n      this.state.type = topicTokenType;\n      this.state.value = topicTokenValue;\n      this.state.pos--;\n      this.state.end--;\n      this.state.endLoc.column--;\n      return this.parseTopicReference(pipeProposal);\n    } else {\n      throw this.unexpected();\n    }\n  }\n\n  parseTopicReference(pipeProposal) {\n    const node = this.startNode();\n    const start = this.state.start;\n    const tokenType = this.state.type;\n    this.next();\n    return this.finishTopicReference(node, start, pipeProposal, tokenType);\n  }\n\n  finishTopicReference(node, start, pipeProposal, tokenType) {\n    if (this.testTopicReferenceConfiguration(pipeProposal, start, tokenType)) {\n      let nodeType;\n\n      if (pipeProposal === \"smart\") {\n        nodeType = \"PipelinePrimaryTopicReference\";\n      } else {\n        nodeType = \"TopicReference\";\n      }\n\n      if (!this.topicReferenceIsAllowedInCurrentContext()) {\n        if (pipeProposal === \"smart\") {\n          this.raise(start, ErrorMessages.PrimaryTopicNotAllowed);\n        } else {\n          this.raise(start, ErrorMessages.PipeTopicUnbound);\n        }\n      }\n\n      this.registerTopicReference();\n      return this.finishNode(node, nodeType);\n    } else {\n      throw this.raise(start, ErrorMessages.PipeTopicUnconfiguredToken, tokenLabelName(tokenType));\n    }\n  }\n\n  testTopicReferenceConfiguration(pipeProposal, start, tokenType) {\n    switch (pipeProposal) {\n      case \"hack\":\n        {\n          return this.hasPlugin([\"pipelineOperator\", {\n            topicToken: tokenLabelName(tokenType)\n          }]);\n        }\n\n      case \"smart\":\n        return tokenType === 27;\n\n      default:\n        throw this.raise(start, ErrorMessages.PipeTopicRequiresHackPipes);\n    }\n  }\n\n  parseAsyncArrowUnaryFunction(node) {\n    this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n    const params = [this.parseIdentifier()];\n    this.prodParam.exit();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n    }\n\n    this.expect(19);\n    this.parseArrowExpression(node, params, true);\n    return node;\n  }\n\n  parseDo(node, isAsync) {\n    this.expectPlugin(\"doExpressions\");\n\n    if (isAsync) {\n      this.expectPlugin(\"asyncDoExpressions\");\n    }\n\n    node.async = isAsync;\n    this.next();\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n\n    if (isAsync) {\n      this.prodParam.enter(PARAM_AWAIT);\n      node.body = this.parseBlock();\n      this.prodParam.exit();\n    } else {\n      node.body = this.parseBlock();\n    }\n\n    this.state.labels = oldLabels;\n    return this.finishNode(node, \"DoExpression\");\n  }\n\n  parseSuper() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(10) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.SuperNotAllowed);\n    } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n      this.raise(node.start, ErrorMessages.UnexpectedSuper);\n    }\n\n    if (!this.match(10) && !this.match(0) && !this.match(16)) {\n      this.raise(node.start, ErrorMessages.UnsupportedSuper);\n    }\n\n    return this.finishNode(node, \"Super\");\n  }\n\n  parsePrivateName() {\n    const node = this.startNode();\n    const id = this.startNodeAt(this.state.start + 1, new Position(this.state.curLine, this.state.start + 1 - this.state.lineStart));\n    const name = this.state.value;\n    this.next();\n    node.id = this.createIdentifier(id, name);\n    return this.finishNode(node, \"PrivateName\");\n  }\n\n  parseFunctionOrFunctionSent() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.prodParam.hasYield && this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n      this.next();\n\n      if (this.match(98)) {\n        this.expectPlugin(\"functionSent\");\n      } else if (!this.hasPlugin(\"functionSent\")) {\n        this.unexpected();\n      }\n\n      return this.parseMetaProperty(node, meta, \"sent\");\n    }\n\n    return this.parseFunction(node);\n  }\n\n  parseMetaProperty(node, meta, propertyName) {\n    node.meta = meta;\n    const containsEsc = this.state.containsEsc;\n    node.property = this.parseIdentifier(true);\n\n    if (node.property.name !== propertyName || containsEsc) {\n      this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n    }\n\n    return this.finishNode(node, \"MetaProperty\");\n  }\n\n  parseImportMetaProperty(node) {\n    const id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n    this.next();\n\n    if (this.isContextual(96)) {\n      if (!this.inModule) {\n        this.raise(id.start, SourceTypeModuleErrorMessages.ImportMetaOutsideModule);\n      }\n\n      this.sawUnambiguousESM = true;\n    }\n\n    return this.parseMetaProperty(node, id, \"meta\");\n  }\n\n  parseLiteralAtNode(value, type, node) {\n    this.addExtra(node, \"rawValue\", value);\n    this.addExtra(node, \"raw\", this.input.slice(node.start, this.state.end));\n    node.value = value;\n    this.next();\n    return this.finishNode(node, type);\n  }\n\n  parseLiteral(value, type) {\n    const node = this.startNode();\n    return this.parseLiteralAtNode(value, type, node);\n  }\n\n  parseStringLiteral(value) {\n    return this.parseLiteral(value, \"StringLiteral\");\n  }\n\n  parseNumericLiteral(value) {\n    return this.parseLiteral(value, \"NumericLiteral\");\n  }\n\n  parseBigIntLiteral(value) {\n    return this.parseLiteral(value, \"BigIntLiteral\");\n  }\n\n  parseDecimalLiteral(value) {\n    return this.parseLiteral(value, \"DecimalLiteral\");\n  }\n\n  parseRegExpLiteral(value) {\n    const node = this.parseLiteral(value.value, \"RegExpLiteral\");\n    node.pattern = value.pattern;\n    node.flags = value.flags;\n    return node;\n  }\n\n  parseBooleanLiteral(value) {\n    const node = this.startNode();\n    node.value = value;\n    this.next();\n    return this.finishNode(node, \"BooleanLiteral\");\n  }\n\n  parseNullLiteral() {\n    const node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"NullLiteral\");\n  }\n\n  parseParenAndDistinguishExpression(canBeArrow) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    let val;\n    this.next();\n    this.expressionScope.enter(newArrowHeadScope());\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.maybeInArrowParameters = true;\n    this.state.inFSharpPipelineDirectBody = false;\n    const innerStartPos = this.state.start;\n    const innerStartLoc = this.state.startLoc;\n    const exprList = [];\n    const refExpressionErrors = new ExpressionErrors();\n    let first = true;\n    let spreadStart;\n    let optionalCommaStart;\n\n    while (!this.match(11)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12, refExpressionErrors.optionalParameters === -1 ? null : refExpressionErrors.optionalParameters);\n\n        if (this.match(11)) {\n          optionalCommaStart = this.state.start;\n          break;\n        }\n      }\n\n      if (this.match(21)) {\n        const spreadNodeStartPos = this.state.start;\n        const spreadNodeStartLoc = this.state.startLoc;\n        spreadStart = this.state.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n        this.checkCommaAfterRest(41);\n        break;\n      } else {\n        exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem));\n      }\n    }\n\n    const innerEndPos = this.state.lastTokEnd;\n    const innerEndLoc = this.state.lastTokEndLoc;\n    this.expect(11);\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let arrowNode = this.startNodeAt(startPos, startLoc);\n\n    if (canBeArrow && this.shouldParseArrow(exprList) && (arrowNode = this.parseArrow(arrowNode))) {\n      this.expressionScope.validateAsPattern();\n      this.expressionScope.exit();\n      this.parseArrowExpression(arrowNode, exprList, false);\n      return arrowNode;\n    }\n\n    this.expressionScope.exit();\n\n    if (!exprList.length) {\n      this.unexpected(this.state.lastTokStart);\n    }\n\n    if (optionalCommaStart) this.unexpected(optionalCommaStart);\n    if (spreadStart) this.unexpected(spreadStart);\n    this.checkExpressionErrors(refExpressionErrors, true);\n    this.toReferencedListDeep(exprList, true);\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNode(val, \"SequenceExpression\");\n      this.resetEndLocation(val, innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n\n    if (!this.options.createParenthesizedExpressions) {\n      this.addExtra(val, \"parenthesized\", true);\n      this.addExtra(val, \"parenStart\", startPos);\n      this.takeSurroundingComments(val, startPos, this.state.lastTokEnd);\n      return val;\n    }\n\n    const parenExpression = this.startNodeAt(startPos, startLoc);\n    parenExpression.expression = val;\n    this.finishNode(parenExpression, \"ParenthesizedExpression\");\n    return parenExpression;\n  }\n\n  shouldParseArrow(params) {\n    return !this.canInsertSemicolon();\n  }\n\n  parseArrow(node) {\n    if (this.eat(19)) {\n      return node;\n    }\n  }\n\n  parseParenItem(node, startPos, startLoc) {\n    return node;\n  }\n\n  parseNewOrNewTarget() {\n    const node = this.startNode();\n    this.next();\n\n    if (this.match(16)) {\n      const meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n      this.next();\n      const metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n      if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n        this.raise(metaProp.start, ErrorMessages.UnexpectedNewTarget);\n      }\n\n      return metaProp;\n    }\n\n    return this.parseNew(node);\n  }\n\n  parseNew(node) {\n    node.callee = this.parseNoCallExpr();\n\n    if (node.callee.type === \"Import\") {\n      this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n    } else if (this.isOptionalChain(node.callee)) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n    } else if (this.eat(18)) {\n      this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n    }\n\n    this.parseNewArguments(node);\n    return this.finishNode(node, \"NewExpression\");\n  }\n\n  parseNewArguments(node) {\n    if (this.eat(10)) {\n      const args = this.parseExprList(11);\n      this.toReferencedList(args);\n      node.arguments = args;\n    } else {\n      node.arguments = [];\n    }\n  }\n\n  parseTemplateElement(isTagged) {\n    const {\n      start,\n      end,\n      value\n    } = this.state;\n    const elemStart = start + 1;\n    const elem = this.startNodeAt(elemStart, createPositionWithColumnOffset(this.state.startLoc, 1));\n\n    if (value === null) {\n      if (!isTagged) {\n        this.raise(start + 2, ErrorMessages.InvalidEscapeSequenceTemplate);\n      }\n    }\n\n    const isTail = this.match(24);\n    const endOffset = isTail ? -1 : -2;\n    const elemEnd = end + endOffset;\n    elem.value = {\n      raw: this.input.slice(elemStart, elemEnd).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: value === null ? null : value.slice(1, endOffset)\n    };\n    elem.tail = isTail;\n    this.next();\n    this.finishNode(elem, \"TemplateElement\");\n    this.resetEndLocation(elem, elemEnd, createPositionWithColumnOffset(this.state.lastTokEndLoc, endOffset));\n    return elem;\n  }\n\n  parseTemplate(isTagged) {\n    const node = this.startNode();\n    node.expressions = [];\n    let curElt = this.parseTemplateElement(isTagged);\n    node.quasis = [curElt];\n\n    while (!curElt.tail) {\n      node.expressions.push(this.parseTemplateSubstitution());\n      this.readTemplateContinuation();\n      node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n    }\n\n    return this.finishNode(node, \"TemplateLiteral\");\n  }\n\n  parseTemplateSubstitution() {\n    return this.parseExpression();\n  }\n\n  parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n    if (isRecord) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const propHash = Object.create(null);\n    let first = true;\n    const node = this.startNode();\n    node.properties = [];\n    this.next();\n\n    while (!this.match(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n          break;\n        }\n      }\n\n      let prop;\n\n      if (isPattern) {\n        prop = this.parseBindingProperty();\n      } else {\n        prop = this.parsePropertyDefinition(refExpressionErrors);\n        this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n      }\n\n      if (isRecord && !this.isObjectProperty(prop) && prop.type !== \"SpreadElement\") {\n        this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n      }\n\n      if (prop.shorthand) {\n        this.addExtra(prop, \"shorthand\", true);\n      }\n\n      node.properties.push(prop);\n    }\n\n    this.next();\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    let type = \"ObjectExpression\";\n\n    if (isPattern) {\n      type = \"ObjectPattern\";\n    } else if (isRecord) {\n      type = \"RecordExpression\";\n    }\n\n    return this.finishNode(node, type);\n  }\n\n  maybeAsyncOrAccessorProp(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(0) || this.match(51));\n  }\n\n  parsePropertyDefinition(refExpressionErrors) {\n    let decorators = [];\n\n    if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\")) {\n        this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n      }\n\n      while (this.match(26)) {\n        decorators.push(this.parseDecorator());\n      }\n    }\n\n    const prop = this.startNode();\n    let isAsync = false;\n    let isAccessor = false;\n    let startPos;\n    let startLoc;\n\n    if (this.match(21)) {\n      if (decorators.length) this.unexpected();\n      return this.parseSpread();\n    }\n\n    if (decorators.length) {\n      prop.decorators = decorators;\n      decorators = [];\n    }\n\n    prop.method = false;\n\n    if (refExpressionErrors) {\n      startPos = this.state.start;\n      startLoc = this.state.startLoc;\n    }\n\n    let isGenerator = this.eat(51);\n    this.parsePropertyNamePrefixOperator(prop);\n    const containsEsc = this.state.containsEsc;\n    const key = this.parsePropertyName(prop);\n\n    if (!isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n      const keyName = key.name;\n\n      if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n        isAsync = true;\n        this.resetPreviousNodeTrailingComments(key);\n        isGenerator = this.eat(51);\n        this.parsePropertyName(prop);\n      }\n\n      if (keyName === \"get\" || keyName === \"set\") {\n        isAccessor = true;\n        this.resetPreviousNodeTrailingComments(key);\n        prop.kind = keyName;\n\n        if (this.match(51)) {\n          isGenerator = true;\n          this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n          this.next();\n        }\n\n        this.parsePropertyName(prop);\n      }\n    }\n\n    this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, false, isAccessor, refExpressionErrors);\n    return prop;\n  }\n\n  getGetterSetterExpectedParamCount(method) {\n    return method.kind === \"get\" ? 0 : 1;\n  }\n\n  getObjectOrClassMethodParams(method) {\n    return method.params;\n  }\n\n  checkGetterSetterParams(method) {\n    var _params;\n\n    const paramCount = this.getGetterSetterExpectedParamCount(method);\n    const params = this.getObjectOrClassMethodParams(method);\n    const start = method.start;\n\n    if (params.length !== paramCount) {\n      if (method.kind === \"get\") {\n        this.raise(start, ErrorMessages.BadGetterArity);\n      } else {\n        this.raise(start, ErrorMessages.BadSetterArity);\n      }\n    }\n\n    if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n      this.raise(start, ErrorMessages.BadSetterRestParameter);\n    }\n  }\n\n  parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n    if (isAccessor) {\n      this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n      this.checkGetterSetterParams(prop);\n      return prop;\n    }\n\n    if (isAsync || isGenerator || this.match(10)) {\n      if (isPattern) this.unexpected();\n      prop.kind = \"method\";\n      prop.method = true;\n      return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n    }\n  }\n\n  parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n    prop.shorthand = false;\n\n    if (this.eat(14)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n\n    if (!prop.computed && prop.key.type === \"Identifier\") {\n      this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else if (this.match(29)) {\n        const shorthandAssign = this.state.start;\n\n        if (refExpressionErrors != null) {\n          if (refExpressionErrors.shorthandAssign === -1) {\n            refExpressionErrors.shorthandAssign = shorthandAssign;\n          }\n        } else {\n          this.raise(shorthandAssign, ErrorMessages.InvalidCoverInitializedName);\n        }\n\n        prop.value = this.parseMaybeDefault(startPos, startLoc, cloneIdentifier(prop.key));\n      } else {\n        prop.value = cloneIdentifier(prop.key);\n      }\n\n      prop.shorthand = true;\n      return this.finishNode(prop, \"ObjectProperty\");\n    }\n  }\n\n  parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n    const node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n    if (!node) this.unexpected();\n    return node;\n  }\n\n  parsePropertyName(prop) {\n    if (this.eat(0)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssignAllowIn();\n      this.expect(3);\n    } else {\n      const {\n        type,\n        value\n      } = this.state;\n      let key;\n\n      if (tokenIsKeywordOrIdentifier(type)) {\n        key = this.parseIdentifier(true);\n      } else {\n        switch (type) {\n          case 126:\n            key = this.parseNumericLiteral(value);\n            break;\n\n          case 125:\n            key = this.parseStringLiteral(value);\n            break;\n\n          case 127:\n            key = this.parseBigIntLiteral(value);\n            break;\n\n          case 128:\n            key = this.parseDecimalLiteral(value);\n            break;\n\n          case 130:\n            {\n              const privateKeyPos = this.state.start + 1;\n              this.raise(privateKeyPos, ErrorMessages.UnexpectedPrivateField);\n              key = this.parsePrivateName();\n              break;\n            }\n\n          default:\n            throw this.unexpected();\n        }\n      }\n\n      prop.key = key;\n\n      if (type !== 130) {\n        prop.computed = false;\n      }\n    }\n\n    return prop.key;\n  }\n\n  initFunction(node, isAsync) {\n    node.id = null;\n    node.generator = false;\n    node.async = !!isAsync;\n  }\n\n  parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope = false) {\n    this.initFunction(node, isAsync);\n    node.generator = !!isGenerator;\n    const allowModifiers = isConstructor;\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n    this.parseFunctionParams(node, allowModifiers);\n    this.parseFunctionBodyAndFinish(node, type, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    return node;\n  }\n\n  parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n    if (isTuple) {\n      this.expectPlugin(\"recordAndTuple\");\n    }\n\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = false;\n    const node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n  }\n\n  parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n    this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n    let flags = functionFlags(isAsync, false);\n\n    if (!this.match(0) && this.prodParam.hasIn) {\n      flags |= PARAM_IN;\n    }\n\n    this.prodParam.enter(flags);\n    this.initFunction(node, isAsync);\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n    if (params) {\n      this.state.maybeInArrowParameters = true;\n      this.setArrowFunctionParameters(node, params, trailingCommaPos);\n    }\n\n    this.state.maybeInArrowParameters = false;\n    this.parseFunctionBody(node, true);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return this.finishNode(node, \"ArrowFunctionExpression\");\n  }\n\n  setArrowFunctionParameters(node, params, trailingCommaPos) {\n    node.params = this.toAssignableList(params, trailingCommaPos, false);\n  }\n\n  parseFunctionBodyAndFinish(node, type, isMethod = false) {\n    this.parseFunctionBody(node, false, isMethod);\n    this.finishNode(node, type);\n  }\n\n  parseFunctionBody(node, allowExpression, isMethod = false) {\n    const isExpression = allowExpression && !this.match(5);\n    this.expressionScope.enter(newExpressionScope());\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      this.checkParams(node, false, allowExpression, false);\n    } else {\n      const oldStrict = this.state.strict;\n      const oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n      node.body = this.parseBlock(true, false, hasStrictModeDirective => {\n        const nonSimple = !this.isSimpleParamList(node.params);\n\n        if (hasStrictModeDirective && nonSimple) {\n          const errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n          this.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n        }\n\n        const strictModeChanged = !oldStrict && this.state.strict;\n        this.checkParams(node, !this.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n        if (this.state.strict && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n        }\n      });\n      this.prodParam.exit();\n      this.state.labels = oldLabels;\n    }\n\n    this.expressionScope.exit();\n  }\n\n  isSimpleParamList(params) {\n    for (let i = 0, len = params.length; i < len; i++) {\n      if (params[i].type !== \"Identifier\") return false;\n    }\n\n    return true;\n  }\n\n  checkParams(node, allowDuplicates, isArrowFunction, strictModeChanged = true) {\n    const checkClashes = new Set();\n\n    for (const param of node.params) {\n      this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n    }\n  }\n\n  parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n    const elts = [];\n    let first = true;\n\n    while (!this.eat(close)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n\n        if (this.match(close)) {\n          if (nodeForExtra) {\n            this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n          }\n\n          this.next();\n          break;\n        }\n      }\n\n      elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n    }\n\n    return elts;\n  }\n\n  parseExprListItem(allowEmpty, refExpressionErrors, allowPlaceholder) {\n    let elt;\n\n    if (this.match(12)) {\n      if (!allowEmpty) {\n        this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n      }\n\n      elt = null;\n    } else if (this.match(21)) {\n      const spreadNodeStartPos = this.state.start;\n      const spreadNodeStartLoc = this.state.startLoc;\n      elt = this.parseParenItem(this.parseSpread(refExpressionErrors), spreadNodeStartPos, spreadNodeStartLoc);\n    } else if (this.match(17)) {\n      this.expectPlugin(\"partialApplication\");\n\n      if (!allowPlaceholder) {\n        this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n      }\n\n      const node = this.startNode();\n      this.next();\n      elt = this.finishNode(node, \"ArgumentPlaceholder\");\n    } else {\n      elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem);\n    }\n\n    return elt;\n  }\n\n  parseIdentifier(liberal) {\n    const node = this.startNode();\n    const name = this.parseIdentifierName(node.start, liberal);\n    return this.createIdentifier(node, name);\n  }\n\n  createIdentifier(node, name) {\n    node.name = name;\n    node.loc.identifierName = name;\n    return this.finishNode(node, \"Identifier\");\n  }\n\n  parseIdentifierName(pos, liberal) {\n    let name;\n    const {\n      start,\n      type\n    } = this.state;\n\n    if (tokenIsKeywordOrIdentifier(type)) {\n      name = this.state.value;\n    } else {\n      throw this.unexpected();\n    }\n\n    const tokenIsKeyword = tokenKeywordOrIdentifierIsKeyword(type);\n\n    if (liberal) {\n      if (tokenIsKeyword) {\n        this.replaceToken(124);\n      }\n    } else {\n      this.checkReservedWord(name, start, tokenIsKeyword, false);\n    }\n\n    this.next();\n    return name;\n  }\n\n  checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n    if (word.length > 10) {\n      return;\n    }\n\n    if (!canBeReservedWord(word)) {\n      return;\n    }\n\n    if (word === \"yield\") {\n      if (this.prodParam.hasYield) {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n    } else if (word === \"await\") {\n      if (this.prodParam.hasAwait) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        return;\n      } else if (this.scope.inStaticBlock) {\n        this.raise(startLoc, ErrorMessages.AwaitBindingIdentifierInStaticBlock);\n        return;\n      } else {\n        this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n      }\n    } else if (word === \"arguments\") {\n      if (this.scope.inClassAndNotInNonArrowFunction) {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n    }\n\n    if (checkKeywords && isKeyword(word)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n      return;\n    }\n\n    const reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n    if (reservedTest(word, this.inModule)) {\n      this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n    }\n  }\n\n  isAwaitAllowed() {\n    if (this.prodParam.hasAwait) return true;\n\n    if (this.options.allowAwaitOutsideFunction && !this.scope.inFunction) {\n      return true;\n    }\n\n    return false;\n  }\n\n  parseAwait(startPos, startLoc) {\n    const node = this.startNodeAt(startPos, startLoc);\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n    if (this.eat(51)) {\n      this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n    }\n\n    if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n      if (this.isAmbiguousAwait()) {\n        this.ambiguousScriptDifferentAst = true;\n      } else {\n        this.sawUnambiguousESM = true;\n      }\n    }\n\n    if (!this.state.soloAwait) {\n      node.argument = this.parseMaybeUnary(null, true);\n    }\n\n    return this.finishNode(node, \"AwaitExpression\");\n  }\n\n  isAmbiguousAwait() {\n    if (this.hasPrecedingLineBreak()) return true;\n    const {\n      type\n    } = this.state;\n    return type === 49 || type === 10 || type === 0 || tokenIsTemplate(type) || type === 129 || type === 52 || this.hasPlugin(\"v8intrinsic\") && type === 50;\n  }\n\n  parseYield() {\n    const node = this.startNode();\n    this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n    this.next();\n    let delegating = false;\n    let argument = null;\n\n    if (!this.hasPrecedingLineBreak()) {\n      delegating = this.eat(51);\n\n      switch (this.state.type) {\n        case 13:\n        case 131:\n        case 8:\n        case 11:\n        case 3:\n        case 9:\n        case 14:\n        case 12:\n          if (!delegating) break;\n\n        default:\n          argument = this.parseMaybeAssign();\n      }\n    }\n\n    node.delegate = delegating;\n    node.argument = argument;\n    return this.finishNode(node, \"YieldExpression\");\n  }\n\n  checkPipelineAtInfixOperator(left, leftStartPos) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      if (left.type === \"SequenceExpression\") {\n        this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n      }\n    }\n  }\n\n  checkHackPipeBodyEarlyErrors(startPos) {\n    if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipeTopicUnused);\n    }\n  }\n\n  parseSmartPipelineBodyInStyle(childExpr, startPos, startLoc) {\n    const bodyNode = this.startNodeAt(startPos, startLoc);\n\n    if (this.isSimpleReference(childExpr)) {\n      bodyNode.callee = childExpr;\n      return this.finishNode(bodyNode, \"PipelineBareFunction\");\n    } else {\n      this.checkSmartPipeTopicBodyEarlyErrors(startPos);\n      bodyNode.expression = childExpr;\n      return this.finishNode(bodyNode, \"PipelineTopicExpression\");\n    }\n  }\n\n  isSimpleReference(expression) {\n    switch (expression.type) {\n      case \"MemberExpression\":\n        return !expression.computed && this.isSimpleReference(expression.object);\n\n      case \"Identifier\":\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  checkSmartPipeTopicBodyEarlyErrors(startPos) {\n    if (this.match(19)) {\n      throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n    } else if (!this.topicReferenceWasUsedInCurrentContext()) {\n      this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n    }\n  }\n\n  withTopicBindingContext(callback) {\n    const outerContextTopicState = this.state.topicContext;\n    this.state.topicContext = {\n      maxNumOfResolvableTopics: 1,\n      maxTopicIndex: null\n    };\n\n    try {\n      return callback();\n    } finally {\n      this.state.topicContext = outerContextTopicState;\n    }\n  }\n\n  withSmartMixTopicForbiddingContext(callback) {\n    if (this.hasPlugin([\"pipelineOperator\", {\n      proposal: \"smart\"\n    }])) {\n      const outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    } else {\n      return callback();\n    }\n  }\n\n  withSoloAwaitPermittingContext(callback) {\n    const outerContextSoloAwaitState = this.state.soloAwait;\n    this.state.soloAwait = true;\n\n    try {\n      return callback();\n    } finally {\n      this.state.soloAwait = outerContextSoloAwaitState;\n    }\n  }\n\n  allowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToSet = PARAM_IN & ~flags;\n\n    if (prodParamToSet) {\n      this.prodParam.enter(flags | PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  disallowInAnd(callback) {\n    const flags = this.prodParam.currentFlags();\n    const prodParamToClear = PARAM_IN & flags;\n\n    if (prodParamToClear) {\n      this.prodParam.enter(flags & ~PARAM_IN);\n\n      try {\n        return callback();\n      } finally {\n        this.prodParam.exit();\n      }\n    }\n\n    return callback();\n  }\n\n  registerTopicReference() {\n    this.state.topicContext.maxTopicIndex = 0;\n  }\n\n  topicReferenceIsAllowedInCurrentContext() {\n    return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n  }\n\n  topicReferenceWasUsedInCurrentContext() {\n    return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n  }\n\n  parseFSharpPipelineBody(prec) {\n    const startPos = this.state.start;\n    const startLoc = this.state.startLoc;\n    this.state.potentialArrowAt = this.state.start;\n    const oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n    this.state.inFSharpPipelineDirectBody = true;\n    const ret = this.parseExprOp(this.parseMaybeUnaryOrPrivate(), startPos, startLoc, prec);\n    this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n    return ret;\n  }\n\n  parseModuleExpression() {\n    this.expectPlugin(\"moduleBlocks\");\n    const node = this.startNode();\n    this.next();\n    this.eat(5);\n    const revertScopes = this.initializeScopes(true);\n    this.enterInitialScopes();\n    const program = this.startNode();\n\n    try {\n      node.body = this.parseProgram(program, 8, \"module\");\n    } finally {\n      revertScopes();\n    }\n\n    this.eat(8);\n    return this.finishNode(node, \"ModuleExpression\");\n  }\n\n  parsePropertyNamePrefixOperator(prop) {}\n\n}\n\nconst loopLabel = {\n  kind: \"loop\"\n},\n      switchLabel = {\n  kind: \"switch\"\n};\nconst FUNC_NO_FLAGS = 0b000,\n      FUNC_STATEMENT = 0b001,\n      FUNC_HANGING_STATEMENT = 0b010,\n      FUNC_NULLABLE_ID = 0b100;\nconst loneSurrogate = /[\\uD800-\\uDFFF]/u;\nconst keywordRelationalOperator = /in(?:stanceof)?/y;\n\nfunction babel7CompatTokens(tokens) {\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    const {\n      type\n    } = token;\n\n    if (typeof type === \"number\") {\n      {\n        if (type === 130) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const hashEndPos = start + 1;\n          const hashEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          tokens.splice(i, 1, new Token({\n            type: getExportedToken(27),\n            value: \"#\",\n            start: start,\n            end: hashEndPos,\n            startLoc: loc.start,\n            endLoc: hashEndLoc\n          }), new Token({\n            type: getExportedToken(124),\n            value: value,\n            start: hashEndPos,\n            end: end,\n            startLoc: hashEndLoc,\n            endLoc: loc.end\n          }));\n          i++;\n          continue;\n        }\n\n        if (tokenIsTemplate(type)) {\n          const {\n            loc,\n            start,\n            value,\n            end\n          } = token;\n          const backquoteEnd = start + 1;\n          const backquoteEndLoc = createPositionWithColumnOffset(loc.start, 1);\n          let startToken;\n\n          if (value.charCodeAt(0) === 96) {\n            startToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          } else {\n            startToken = new Token({\n              type: getExportedToken(8),\n              value: \"}\",\n              start: start,\n              end: backquoteEnd,\n              startLoc: loc.start,\n              endLoc: backquoteEndLoc\n            });\n          }\n\n          let templateValue, templateElementEnd, templateElementEndLoc, endToken;\n\n          if (type === 24) {\n            templateElementEnd = end - 1;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -1);\n            templateValue = value.slice(1, -1);\n            endToken = new Token({\n              type: getExportedToken(22),\n              value: \"`\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          } else {\n            templateElementEnd = end - 2;\n            templateElementEndLoc = createPositionWithColumnOffset(loc.end, -2);\n            templateValue = value.slice(1, -2);\n            endToken = new Token({\n              type: getExportedToken(23),\n              value: \"${\",\n              start: templateElementEnd,\n              end: end,\n              startLoc: templateElementEndLoc,\n              endLoc: loc.end\n            });\n          }\n\n          tokens.splice(i, 1, startToken, new Token({\n            type: getExportedToken(20),\n            value: templateValue,\n            start: backquoteEnd,\n            end: templateElementEnd,\n            startLoc: backquoteEndLoc,\n            endLoc: templateElementEndLoc\n          }), endToken);\n          i += 2;\n          continue;\n        }\n      }\n      token.type = getExportedToken(type);\n    }\n  }\n\n  return tokens;\n}\n\nclass StatementParser extends ExpressionParser {\n  parseTopLevel(file, program) {\n    file.program = this.parseProgram(program);\n    file.comments = this.state.comments;\n    if (this.options.tokens) file.tokens = babel7CompatTokens(this.tokens);\n    return this.finishNode(file, \"File\");\n  }\n\n  parseProgram(program, end = 131, sourceType = this.options.sourceType) {\n    program.sourceType = sourceType;\n    program.interpreter = this.parseInterpreterDirective();\n    this.parseBlockBody(program, true, true, end);\n\n    if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n      for (const [name] of Array.from(this.scope.undefinedExports)) {\n        const pos = this.scope.undefinedExports.get(name);\n        this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n      }\n    }\n\n    return this.finishNode(program, \"Program\");\n  }\n\n  stmtToDirective(stmt) {\n    const directive = stmt;\n    directive.type = \"Directive\";\n    directive.value = directive.expression;\n    delete directive.expression;\n    const directiveLiteral = directive.value;\n    const expressionValue = directiveLiteral.value;\n    const raw = this.input.slice(directiveLiteral.start, directiveLiteral.end);\n    const val = directiveLiteral.value = raw.slice(1, -1);\n    this.addExtra(directiveLiteral, \"raw\", raw);\n    this.addExtra(directiveLiteral, \"rawValue\", val);\n    this.addExtra(directiveLiteral, \"expressionValue\", expressionValue);\n    directiveLiteral.type = \"DirectiveLiteral\";\n    return directive;\n  }\n\n  parseInterpreterDirective() {\n    if (!this.match(28)) {\n      return null;\n    }\n\n    const node = this.startNode();\n    node.value = this.state.value;\n    this.next();\n    return this.finishNode(node, \"InterpreterDirective\");\n  }\n\n  isLet(context) {\n    if (!this.isContextual(95)) {\n      return false;\n    }\n\n    return this.isLetKeyword(context);\n  }\n\n  isLetKeyword(context) {\n    const next = this.nextTokenStart();\n    const nextCh = this.codePointAtPos(next);\n\n    if (nextCh === 92 || nextCh === 91) {\n      return true;\n    }\n\n    if (context) return false;\n    if (nextCh === 123) return true;\n\n    if (isIdentifierStart(nextCh)) {\n      keywordRelationalOperator.lastIndex = next;\n\n      if (keywordRelationalOperator.test(this.input)) {\n        const endCh = this.codePointAtPos(keywordRelationalOperator.lastIndex);\n\n        if (!isIdentifierChar(endCh) && endCh !== 92) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  parseStatement(context, topLevel) {\n    if (this.match(26)) {\n      this.parseDecorators(true);\n    }\n\n    return this.parseStatementContent(context, topLevel);\n  }\n\n  parseStatementContent(context, topLevel) {\n    let starttype = this.state.type;\n    const node = this.startNode();\n    let kind;\n\n    if (this.isLet(context)) {\n      starttype = 70;\n      kind = \"let\";\n    }\n\n    switch (starttype) {\n      case 56:\n        return this.parseBreakContinueStatement(node, true);\n\n      case 59:\n        return this.parseBreakContinueStatement(node, false);\n\n      case 60:\n        return this.parseDebuggerStatement(node);\n\n      case 86:\n        return this.parseDoStatement(node);\n\n      case 87:\n        return this.parseForStatement(node);\n\n      case 64:\n        if (this.lookaheadCharCode() === 46) break;\n\n        if (context) {\n          if (this.state.strict) {\n            this.raise(this.state.start, ErrorMessages.StrictFunction);\n          } else if (context !== \"if\" && context !== \"label\") {\n            this.raise(this.state.start, ErrorMessages.SloppyFunction);\n          }\n        }\n\n        return this.parseFunctionStatement(node, false, !context);\n\n      case 76:\n        if (context) this.unexpected();\n        return this.parseClass(node, true);\n\n      case 65:\n        return this.parseIfStatement(node);\n\n      case 66:\n        return this.parseReturnStatement(node);\n\n      case 67:\n        return this.parseSwitchStatement(node);\n\n      case 68:\n        return this.parseThrowStatement(node);\n\n      case 69:\n        return this.parseTryStatement(node);\n\n      case 71:\n      case 70:\n        kind = kind || this.state.value;\n\n        if (context && kind !== \"var\") {\n          this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n        }\n\n        return this.parseVarStatement(node, kind);\n\n      case 88:\n        return this.parseWhileStatement(node);\n\n      case 72:\n        return this.parseWithStatement(node);\n\n      case 5:\n        return this.parseBlock();\n\n      case 13:\n        return this.parseEmptyStatement(node);\n\n      case 79:\n        {\n          const nextTokenCharCode = this.lookaheadCharCode();\n\n          if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n            break;\n          }\n        }\n\n      case 78:\n        {\n          if (!this.options.allowImportExportEverywhere && !topLevel) {\n            this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n          }\n\n          this.next();\n          let result;\n\n          if (starttype === 79) {\n            result = this.parseImport(node);\n\n            if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n              this.sawUnambiguousESM = true;\n            }\n          } else {\n            result = this.parseExport(node);\n\n            if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n              this.sawUnambiguousESM = true;\n            }\n          }\n\n          this.assertModuleNodeAllowed(node);\n          return result;\n        }\n\n      default:\n        {\n          if (this.isAsyncFunction()) {\n            if (context) {\n              this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n            }\n\n            this.next();\n            return this.parseFunctionStatement(node, true, !context);\n          }\n        }\n    }\n\n    const maybeName = this.state.value;\n    const expr = this.parseExpression();\n\n    if (tokenIsIdentifier(starttype) && expr.type === \"Identifier\" && this.eat(14)) {\n      return this.parseLabeledStatement(node, maybeName, expr, context);\n    } else {\n      return this.parseExpressionStatement(node, expr);\n    }\n  }\n\n  assertModuleNodeAllowed(node) {\n    if (!this.options.allowImportExportEverywhere && !this.inModule) {\n      this.raise(node.start, SourceTypeModuleErrorMessages.ImportOutsideModule);\n    }\n  }\n\n  takeDecorators(node) {\n    const decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (decorators.length) {\n      node.decorators = decorators;\n      this.resetStartLocationFromNode(node, decorators[0]);\n      this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n    }\n  }\n\n  canHaveLeadingDecorator() {\n    return this.match(76);\n  }\n\n  parseDecorators(allowExport) {\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    while (this.match(26)) {\n      const decorator = this.parseDecorator();\n      currentContextDecorators.push(decorator);\n    }\n\n    if (this.match(78)) {\n      if (!allowExport) {\n        this.unexpected();\n      }\n\n      if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n      }\n    } else if (!this.canHaveLeadingDecorator()) {\n      throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n    }\n  }\n\n  parseDecorator() {\n    this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n    const node = this.startNode();\n    this.next();\n\n    if (this.hasPlugin(\"decorators\")) {\n      this.state.decoratorStack.push([]);\n      const startPos = this.state.start;\n      const startLoc = this.state.startLoc;\n      let expr;\n\n      if (this.eat(10)) {\n        expr = this.parseExpression();\n        this.expect(11);\n      } else {\n        expr = this.parseIdentifier(false);\n\n        while (this.eat(16)) {\n          const node = this.startNodeAt(startPos, startLoc);\n          node.object = expr;\n          node.property = this.parseIdentifier(true);\n          node.computed = false;\n          expr = this.finishNode(node, \"MemberExpression\");\n        }\n      }\n\n      node.expression = this.parseMaybeDecoratorArguments(expr);\n      this.state.decoratorStack.pop();\n    } else {\n      node.expression = this.parseExprSubscripts();\n    }\n\n    return this.finishNode(node, \"Decorator\");\n  }\n\n  parseMaybeDecoratorArguments(expr) {\n    if (this.eat(10)) {\n      const node = this.startNodeAtNode(expr);\n      node.callee = expr;\n      node.arguments = this.parseCallExpressionArguments(11, false);\n      this.toReferencedList(node.arguments);\n      return this.finishNode(node, \"CallExpression\");\n    }\n\n    return expr;\n  }\n\n  parseBreakContinueStatement(node, isBreak) {\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.label = null;\n    } else {\n      node.label = this.parseIdentifier();\n      this.semicolon();\n    }\n\n    this.verifyBreakContinue(node, isBreak);\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n  }\n\n  verifyBreakContinue(node, isBreak) {\n    let i;\n\n    for (i = 0; i < this.state.labels.length; ++i) {\n      const lab = this.state.labels[i];\n\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n        if (node.label && isBreak) break;\n      }\n    }\n\n    if (i === this.state.labels.length) {\n      this.raise(node.start, ErrorMessages.IllegalBreakContinue, isBreak ? \"break\" : \"continue\");\n    }\n  }\n\n  parseDebuggerStatement(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\");\n  }\n\n  parseHeaderExpression() {\n    this.expect(10);\n    const val = this.parseExpression();\n    this.expect(11);\n    return val;\n  }\n\n  parseDoStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"do\"));\n    this.state.labels.pop();\n    this.expect(88);\n    node.test = this.parseHeaderExpression();\n    this.eat(13);\n    return this.finishNode(node, \"DoWhileStatement\");\n  }\n\n  parseForStatement(node) {\n    this.next();\n    this.state.labels.push(loopLabel);\n    let awaitAt = -1;\n\n    if (this.isAwaitAllowed() && this.eatContextual(92)) {\n      awaitAt = this.state.lastTokStart;\n    }\n\n    this.scope.enter(SCOPE_OTHER);\n    this.expect(10);\n\n    if (this.match(13)) {\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, null);\n    }\n\n    const startsWithLet = this.isContextual(95);\n    const isLet = startsWithLet && this.isLetKeyword();\n\n    if (this.match(70) || this.match(71) || isLet) {\n      const init = this.startNode();\n      const kind = isLet ? \"let\" : this.state.value;\n      this.next();\n      this.parseVar(init, true, kind);\n      this.finishNode(init, \"VariableDeclaration\");\n\n      if ((this.match(54) || this.isContextual(97)) && init.declarations.length === 1) {\n        return this.parseForIn(node, init, awaitAt);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n\n    const startsWithAsync = this.isContextual(91);\n    const refExpressionErrors = new ExpressionErrors();\n    const init = this.parseExpression(true, refExpressionErrors);\n    const isForOf = this.isContextual(97);\n\n    if (isForOf) {\n      if (startsWithLet) {\n        this.raise(init.start, ErrorMessages.ForOfLet);\n      } else if (awaitAt === -1 && startsWithAsync && init.type === \"Identifier\") {\n        this.raise(init.start, ErrorMessages.ForOfAsync);\n      }\n    }\n\n    if (isForOf || this.match(54)) {\n      this.toAssignable(init, true);\n      const description = isForOf ? \"for-of statement\" : \"for-in statement\";\n      this.checkLVal(init, description);\n      return this.parseForIn(node, init, awaitAt);\n    } else {\n      this.checkExpressionErrors(refExpressionErrors, true);\n    }\n\n    if (awaitAt > -1) {\n      this.unexpected(awaitAt);\n    }\n\n    return this.parseFor(node, init);\n  }\n\n  parseFunctionStatement(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n  }\n\n  parseIfStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(62) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\");\n  }\n\n  parseReturnStatement(node) {\n    if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n      this.raise(this.state.start, ErrorMessages.IllegalReturn);\n    }\n\n    this.next();\n\n    if (this.isLineTerminator()) {\n      node.argument = null;\n    } else {\n      node.argument = this.parseExpression();\n      this.semicolon();\n    }\n\n    return this.finishNode(node, \"ReturnStatement\");\n  }\n\n  parseSwitchStatement(node) {\n    this.next();\n    node.discriminant = this.parseHeaderExpression();\n    const cases = node.cases = [];\n    this.expect(5);\n    this.state.labels.push(switchLabel);\n    this.scope.enter(SCOPE_OTHER);\n    let cur;\n\n    for (let sawDefault; !this.match(8);) {\n      if (this.match(57) || this.match(61)) {\n        const isCase = this.match(57);\n        if (cur) this.finishNode(cur, \"SwitchCase\");\n        cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) {\n            this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n          }\n\n          sawDefault = true;\n          cur.test = null;\n        }\n\n        this.expect(14);\n      } else {\n        if (cur) {\n          cur.consequent.push(this.parseStatement(null));\n        } else {\n          this.unexpected();\n        }\n      }\n    }\n\n    this.scope.exit();\n    if (cur) this.finishNode(cur, \"SwitchCase\");\n    this.next();\n    this.state.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\");\n  }\n\n  parseThrowStatement(node) {\n    this.next();\n\n    if (this.hasPrecedingLineBreak()) {\n      this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n    }\n\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\");\n  }\n\n  parseCatchClauseParam() {\n    const param = this.parseBindingAtom();\n    const simple = param.type === \"Identifier\";\n    this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n    this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n    return param;\n  }\n\n  parseTryStatement(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n\n    if (this.match(58)) {\n      const clause = this.startNode();\n      this.next();\n\n      if (this.match(10)) {\n        this.expect(10);\n        clause.param = this.parseCatchClauseParam();\n        this.expect(11);\n      } else {\n        clause.param = null;\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      clause.body = this.withSmartMixTopicForbiddingContext(() => this.parseBlock(false, false));\n      this.scope.exit();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n\n    node.finalizer = this.eat(63) ? this.parseBlock() : null;\n\n    if (!node.handler && !node.finalizer) {\n      this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n    }\n\n    return this.finishNode(node, \"TryStatement\");\n  }\n\n  parseVarStatement(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\");\n  }\n\n  parseWhileStatement(node) {\n    this.next();\n    node.test = this.parseHeaderExpression();\n    this.state.labels.push(loopLabel);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"while\"));\n    this.state.labels.pop();\n    return this.finishNode(node, \"WhileStatement\");\n  }\n\n  parseWithStatement(node) {\n    if (this.state.strict) {\n      this.raise(this.state.start, ErrorMessages.StrictWith);\n    }\n\n    this.next();\n    node.object = this.parseHeaderExpression();\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"with\"));\n    return this.finishNode(node, \"WithStatement\");\n  }\n\n  parseEmptyStatement(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\");\n  }\n\n  parseLabeledStatement(node, maybeName, expr, context) {\n    for (const label of this.state.labels) {\n      if (label.name === maybeName) {\n        this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n      }\n    }\n\n    const kind = tokenIsLoop(this.state.type) ? \"loop\" : this.match(67) ? \"switch\" : null;\n\n    for (let i = this.state.labels.length - 1; i >= 0; i--) {\n      const label = this.state.labels[i];\n\n      if (label.statementStart === node.start) {\n        label.statementStart = this.state.start;\n        label.kind = kind;\n      } else {\n        break;\n      }\n    }\n\n    this.state.labels.push({\n      name: maybeName,\n      kind: kind,\n      statementStart: this.state.start\n    });\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.state.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\");\n  }\n\n  parseExpressionStatement(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\");\n  }\n\n  parseBlock(allowDirectives = false, createNewLexicalScope = true, afterBlockParse) {\n    const node = this.startNode();\n\n    if (allowDirectives) {\n      this.state.strictErrors.clear();\n    }\n\n    this.expect(5);\n\n    if (createNewLexicalScope) {\n      this.scope.enter(SCOPE_OTHER);\n    }\n\n    this.parseBlockBody(node, allowDirectives, false, 8, afterBlockParse);\n\n    if (createNewLexicalScope) {\n      this.scope.exit();\n    }\n\n    return this.finishNode(node, \"BlockStatement\");\n  }\n\n  isValidDirective(stmt) {\n    return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n  }\n\n  parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n    const body = node.body = [];\n    const directives = node.directives = [];\n    this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n  }\n\n  parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n    const oldStrict = this.state.strict;\n    let hasStrictModeDirective = false;\n    let parsedNonDirective = false;\n\n    while (!this.match(end)) {\n      const stmt = this.parseStatement(null, topLevel);\n\n      if (directives && !parsedNonDirective) {\n        if (this.isValidDirective(stmt)) {\n          const directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        this.state.strictErrors.clear();\n      }\n\n      body.push(stmt);\n    }\n\n    if (afterBlockParse) {\n      afterBlockParse.call(this, hasStrictModeDirective);\n    }\n\n    if (!oldStrict) {\n      this.setStrict(false);\n    }\n\n    this.next();\n  }\n\n  parseFor(node, init) {\n    node.init = init;\n    this.semicolon(false);\n    node.test = this.match(13) ? null : this.parseExpression();\n    this.semicolon(false);\n    node.update = this.match(11) ? null : this.parseExpression();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, \"ForStatement\");\n  }\n\n  parseForIn(node, init, awaitAt) {\n    const isForIn = this.match(54);\n    this.next();\n\n    if (isForIn) {\n      if (awaitAt > -1) this.unexpected(awaitAt);\n    } else {\n      node.await = awaitAt > -1;\n    }\n\n    if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n      this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n    }\n\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n    this.expect(11);\n    node.body = this.withSmartMixTopicForbiddingContext(() => this.parseStatement(\"for\"));\n    this.scope.exit();\n    this.state.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n  }\n\n  parseVar(node, isFor, kind) {\n    const declarations = node.declarations = [];\n    const isTypescript = this.hasPlugin(\"typescript\");\n    node.kind = kind;\n\n    for (;;) {\n      const decl = this.startNode();\n      this.parseVarId(decl, kind);\n\n      if (this.eat(29)) {\n        decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n      } else {\n        if (kind === \"const\" && !(this.match(54) || this.isContextual(97))) {\n          if (!isTypescript) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n          }\n        } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(54) || this.isContextual(97)))) {\n          this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n        }\n\n        decl.init = null;\n      }\n\n      declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(12)) break;\n    }\n\n    return node;\n  }\n\n  parseVarId(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n  }\n\n  parseFunction(node, statement = FUNC_NO_FLAGS, isAsync = false) {\n    const isStatement = statement & FUNC_STATEMENT;\n    const isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n    const requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n    this.initFunction(node, isAsync);\n\n    if (this.match(51) && isHangingStatement) {\n      this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n    }\n\n    node.generator = this.eat(51);\n\n    if (isStatement) {\n      node.id = this.parseFunctionId(requireId);\n    }\n\n    const oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n    this.state.maybeInArrowParameters = false;\n    this.scope.enter(SCOPE_FUNCTION);\n    this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n    if (!isStatement) {\n      node.id = this.parseFunctionId();\n    }\n\n    this.parseFunctionParams(node, false);\n    this.withSmartMixTopicForbiddingContext(() => {\n      this.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n    });\n    this.prodParam.exit();\n    this.scope.exit();\n\n    if (isStatement && !isHangingStatement) {\n      this.registerFunctionStatementId(node);\n    }\n\n    this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n    return node;\n  }\n\n  parseFunctionId(requireId) {\n    return requireId || tokenIsIdentifier(this.state.type) ? this.parseIdentifier() : null;\n  }\n\n  parseFunctionParams(node, allowModifiers) {\n    this.expect(10);\n    this.expressionScope.enter(newParameterDeclarationScope());\n    node.params = this.parseBindingList(11, 41, false, allowModifiers);\n    this.expressionScope.exit();\n  }\n\n  registerFunctionStatementId(node) {\n    if (!node.id) return;\n    this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n  }\n\n  parseClass(node, isStatement, optionalId) {\n    this.next();\n    this.takeDecorators(node);\n    const oldStrict = this.state.strict;\n    this.state.strict = true;\n    this.parseClassId(node, isStatement, optionalId);\n    this.parseClassSuper(node);\n    node.body = this.parseClassBody(!!node.superClass, oldStrict);\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n  }\n\n  isClassProperty() {\n    return this.match(29) || this.match(13) || this.match(8);\n  }\n\n  isClassMethod() {\n    return this.match(10);\n  }\n\n  isNonstaticConstructor(method) {\n    return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n  }\n\n  parseClassBody(hadSuperClass, oldStrict) {\n    this.classScope.enter();\n    const state = {\n      hadConstructor: false,\n      hadSuperClass\n    };\n    let decorators = [];\n    const classBody = this.startNode();\n    classBody.body = [];\n    this.expect(5);\n    this.withSmartMixTopicForbiddingContext(() => {\n      while (!this.match(8)) {\n        if (this.eat(13)) {\n          if (decorators.length > 0) {\n            throw this.raise(this.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n          }\n\n          continue;\n        }\n\n        if (this.match(26)) {\n          decorators.push(this.parseDecorator());\n          continue;\n        }\n\n        const member = this.startNode();\n\n        if (decorators.length) {\n          member.decorators = decorators;\n          this.resetStartLocationFromNode(member, decorators[0]);\n          decorators = [];\n        }\n\n        this.parseClassMember(classBody, member, state);\n\n        if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n          this.raise(member.start, ErrorMessages.DecoratorConstructor);\n        }\n      }\n    });\n    this.state.strict = oldStrict;\n    this.next();\n\n    if (decorators.length) {\n      throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n    }\n\n    this.classScope.exit();\n    return this.finishNode(classBody, \"ClassBody\");\n  }\n\n  parseClassMemberFromModifier(classBody, member) {\n    const key = this.parseIdentifier(true);\n\n    if (this.isClassMethod()) {\n      const method = member;\n      method.kind = \"method\";\n      method.computed = false;\n      method.key = key;\n      method.static = false;\n      this.pushClassMethod(classBody, method, false, false, false, false);\n      return true;\n    } else if (this.isClassProperty()) {\n      const prop = member;\n      prop.computed = false;\n      prop.key = key;\n      prop.static = false;\n      classBody.body.push(this.parseClassProperty(prop));\n      return true;\n    }\n\n    this.resetPreviousNodeTrailingComments(key);\n    return false;\n  }\n\n  parseClassMember(classBody, member, state) {\n    const isStatic = this.isContextual(100);\n\n    if (isStatic) {\n      if (this.parseClassMemberFromModifier(classBody, member)) {\n        return;\n      }\n\n      if (this.eat(5)) {\n        this.parseClassStaticBlock(classBody, member);\n        return;\n      }\n    }\n\n    this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n  }\n\n  parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n    const publicMethod = member;\n    const privateMethod = member;\n    const publicProp = member;\n    const privateProp = member;\n    const method = publicMethod;\n    const publicMember = publicMethod;\n    member.static = isStatic;\n    this.parsePropertyNamePrefixOperator(member);\n\n    if (this.eat(51)) {\n      method.kind = \"method\";\n      const isPrivateName = this.match(130);\n      this.parseClassElementName(method);\n\n      if (isPrivateName) {\n        this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n        return;\n      }\n\n      if (this.isNonstaticConstructor(publicMethod)) {\n        this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n      }\n\n      this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n      return;\n    }\n\n    const isContextual = tokenIsIdentifier(this.state.type) && !this.state.containsEsc;\n    const isPrivate = this.match(130);\n    const key = this.parseClassElementName(member);\n    const maybeQuestionTokenStart = this.state.start;\n    this.parsePostMemberNameModifiers(publicMember);\n\n    if (this.isClassMethod()) {\n      method.kind = \"method\";\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        return;\n      }\n\n      const isConstructor = this.isNonstaticConstructor(publicMethod);\n      let allowsDirectSuper = false;\n\n      if (isConstructor) {\n        publicMethod.kind = \"constructor\";\n\n        if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n          this.raise(key.start, ErrorMessages.DuplicateConstructor);\n        }\n\n        if (isConstructor && this.hasPlugin(\"typescript\") && member.override) {\n          this.raise(key.start, ErrorMessages.OverrideOnConstructor);\n        }\n\n        state.hadConstructor = true;\n        allowsDirectSuper = state.hadSuperClass;\n      }\n\n      this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n    } else if (this.isClassProperty()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else if (isContextual && key.name === \"async\" && !this.isLineTerminator()) {\n      this.resetPreviousNodeTrailingComments(key);\n      const isGenerator = this.eat(51);\n\n      if (publicMember.optional) {\n        this.unexpected(maybeQuestionTokenStart);\n      }\n\n      method.kind = \"method\";\n      const isPrivate = this.match(130);\n      this.parseClassElementName(method);\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n      }\n    } else if (isContextual && (key.name === \"get\" || key.name === \"set\") && !(this.match(51) && this.isLineTerminator())) {\n      this.resetPreviousNodeTrailingComments(key);\n      method.kind = key.name;\n      const isPrivate = this.match(130);\n      this.parseClassElementName(publicMethod);\n\n      if (isPrivate) {\n        this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n      } else {\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n      }\n\n      this.checkGetterSetterParams(publicMethod);\n    } else if (this.isLineTerminator()) {\n      if (isPrivate) {\n        this.pushClassPrivateProperty(classBody, privateProp);\n      } else {\n        this.pushClassProperty(classBody, publicProp);\n      }\n    } else {\n      this.unexpected();\n    }\n  }\n\n  parseClassElementName(member) {\n    const {\n      type,\n      value,\n      start\n    } = this.state;\n\n    if ((type === 124 || type === 125) && member.static && value === \"prototype\") {\n      this.raise(start, ErrorMessages.StaticPrototype);\n    }\n\n    if (type === 130) {\n      if (value === \"constructor\") {\n        this.raise(start, ErrorMessages.ConstructorClassPrivateField);\n      }\n\n      const key = this.parsePrivateName();\n      member.key = key;\n      return key;\n    }\n\n    return this.parsePropertyName(member);\n  }\n\n  parseClassStaticBlock(classBody, member) {\n    var _member$decorators;\n\n    this.scope.enter(SCOPE_CLASS | SCOPE_STATIC_BLOCK | SCOPE_SUPER);\n    const oldLabels = this.state.labels;\n    this.state.labels = [];\n    this.prodParam.enter(PARAM);\n    const body = member.body = [];\n    this.parseBlockOrModuleBlockBody(body, undefined, false, 8);\n    this.prodParam.exit();\n    this.scope.exit();\n    this.state.labels = oldLabels;\n    classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n    if ((_member$decorators = member.decorators) != null && _member$decorators.length) {\n      this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n    }\n  }\n\n  pushClassProperty(classBody, prop) {\n    if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n      this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n    }\n\n    classBody.body.push(this.parseClassProperty(prop));\n  }\n\n  pushClassPrivateProperty(classBody, prop) {\n    const node = this.parseClassPrivateProperty(prop);\n    classBody.body.push(node);\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), CLASS_ELEMENT_OTHER, node.key.start);\n  }\n\n  pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n    classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n  }\n\n  pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n    const node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n    classBody.body.push(node);\n    const kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n    this.declareClassPrivateMethodInScope(node, kind);\n  }\n\n  declareClassPrivateMethodInScope(node, kind) {\n    this.classScope.declarePrivateName(this.getPrivateNameSV(node.key), kind, node.key.start);\n  }\n\n  parsePostMemberNameModifiers(methodOrProp) {}\n\n  parseClassPrivateProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassPrivateProperty\");\n  }\n\n  parseClassProperty(node) {\n    this.parseInitializer(node);\n    this.semicolon();\n    return this.finishNode(node, \"ClassProperty\");\n  }\n\n  parseInitializer(node) {\n    this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n    this.expressionScope.enter(newExpressionScope());\n    this.prodParam.enter(PARAM);\n    node.value = this.eat(29) ? this.parseMaybeAssignAllowIn() : null;\n    this.expressionScope.exit();\n    this.prodParam.exit();\n    this.scope.exit();\n  }\n\n  parseClassId(node, isStatement, optionalId, bindingType = BIND_CLASS) {\n    if (tokenIsIdentifier(this.state.type)) {\n      node.id = this.parseIdentifier();\n\n      if (isStatement) {\n        this.checkLVal(node.id, \"class name\", bindingType);\n      }\n    } else {\n      if (optionalId || !isStatement) {\n        node.id = null;\n      } else {\n        this.unexpected(null, ErrorMessages.MissingClassName);\n      }\n    }\n  }\n\n  parseClassSuper(node) {\n    node.superClass = this.eat(77) ? this.parseExprSubscripts() : null;\n  }\n\n  parseExport(node) {\n    const hasDefault = this.maybeParseExportDefaultSpecifier(node);\n    const parseAfterDefault = !hasDefault || this.eat(12);\n    const hasStar = parseAfterDefault && this.eatExportStar(node);\n    const hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n    const parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(12));\n    const isFromRequired = hasDefault || hasStar;\n\n    if (hasStar && !hasNamespace) {\n      if (hasDefault) this.unexpected();\n      this.parseExportFrom(node, true);\n      return this.finishNode(node, \"ExportAllDeclaration\");\n    }\n\n    const hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n    if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n      throw this.unexpected(null, 5);\n    }\n\n    let hasDeclaration;\n\n    if (isFromRequired || hasSpecifiers) {\n      hasDeclaration = false;\n      this.parseExportFrom(node, isFromRequired);\n    } else {\n      hasDeclaration = this.maybeParseExportDeclaration(node);\n    }\n\n    if (isFromRequired || hasSpecifiers || hasDeclaration) {\n      this.checkExport(node, true, false, !!node.source);\n      return this.finishNode(node, \"ExportNamedDeclaration\");\n    }\n\n    if (this.eat(61)) {\n      node.declaration = this.parseExportDefaultExpression();\n      this.checkExport(node, true, true);\n      return this.finishNode(node, \"ExportDefaultDeclaration\");\n    }\n\n    throw this.unexpected(null, 5);\n  }\n\n  eatExportStar(node) {\n    return this.eat(51);\n  }\n\n  maybeParseExportDefaultSpecifier(node) {\n    if (this.isExportDefaultSpecifier()) {\n      this.expectPlugin(\"exportDefaultFrom\");\n      const specifier = this.startNode();\n      specifier.exported = this.parseIdentifier(true);\n      node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamespaceSpecifier(node) {\n    if (this.isContextual(89)) {\n      if (!node.specifiers) node.specifiers = [];\n      const specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n      this.next();\n      specifier.exported = this.parseModuleExportName();\n      node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportNamedSpecifiers(node) {\n    if (this.match(5)) {\n      if (!node.specifiers) node.specifiers = [];\n      const isTypeExport = node.exportKind === \"type\";\n      node.specifiers.push(...this.parseExportSpecifiers(isTypeExport));\n      node.source = null;\n      node.declaration = null;\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseExportDeclaration(node) {\n    if (this.shouldParseExportDeclaration()) {\n      node.specifiers = [];\n      node.source = null;\n\n      if (this.hasPlugin(\"importAssertions\")) {\n        node.assertions = [];\n      }\n\n      node.declaration = this.parseExportDeclaration(node);\n      return true;\n    }\n\n    return false;\n  }\n\n  isAsyncFunction() {\n    if (!this.isContextual(91)) return false;\n    const next = this.nextTokenStart();\n    return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n  }\n\n  parseExportDefaultExpression() {\n    const expr = this.startNode();\n    const isAsync = this.isAsyncFunction();\n\n    if (this.match(64) || isAsync) {\n      this.next();\n\n      if (isAsync) {\n        this.next();\n      }\n\n      return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n    } else if (this.match(76)) {\n      return this.parseClass(expr, true, true);\n    } else if (this.match(26)) {\n      if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n        this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n      }\n\n      this.parseDecorators(false);\n      return this.parseClass(expr, true, true);\n    } else if (this.match(71) || this.match(70) || this.isLet()) {\n      throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n    } else {\n      const res = this.parseMaybeAssignAllowIn();\n      this.semicolon();\n      return res;\n    }\n  }\n\n  parseExportDeclaration(node) {\n    return this.parseStatement(null);\n  }\n\n  isExportDefaultSpecifier() {\n    const {\n      type\n    } = this.state;\n\n    if (tokenIsIdentifier(type)) {\n      if (type === 91 && !this.state.containsEsc || type === 95) {\n        return false;\n      }\n\n      if ((type === 122 || type === 121) && !this.state.containsEsc) {\n        const {\n          type: nextType\n        } = this.lookahead();\n\n        if (tokenIsIdentifier(nextType) && nextType !== 93 || nextType === 5) {\n          this.expectOnePlugin([\"flow\", \"typescript\"]);\n          return false;\n        }\n      }\n    } else if (!this.match(61)) {\n      return false;\n    }\n\n    const next = this.nextTokenStart();\n    const hasFrom = this.isUnparsedContextual(next, \"from\");\n\n    if (this.input.charCodeAt(next) === 44 || tokenIsIdentifier(this.state.type) && hasFrom) {\n      return true;\n    }\n\n    if (this.match(61) && hasFrom) {\n      const nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n      return nextAfterFrom === 34 || nextAfterFrom === 39;\n    }\n\n    return false;\n  }\n\n  parseExportFrom(node, expect) {\n    if (this.eatContextual(93)) {\n      node.source = this.parseImportSource();\n      this.checkExport(node);\n      const assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      }\n    } else if (expect) {\n      this.unexpected();\n    }\n\n    this.semicolon();\n  }\n\n  shouldParseExportDeclaration() {\n    const {\n      type\n    } = this.state;\n\n    if (type === 26) {\n      this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n      if (this.hasPlugin(\"decorators\")) {\n        if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        } else {\n          return true;\n        }\n      }\n    }\n\n    return type === 70 || type === 71 || type === 64 || type === 76 || this.isLet() || this.isAsyncFunction();\n  }\n\n  checkExport(node, checkNames, isDefault, isFrom) {\n    if (checkNames) {\n      if (isDefault) {\n        this.checkDuplicateExports(node, \"default\");\n\n        if (this.hasPlugin(\"exportDefaultFrom\")) {\n          var _declaration$extra;\n\n          const declaration = node.declaration;\n\n          if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) != null && _declaration$extra.parenthesized)) {\n            this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n          }\n        }\n      } else if (node.specifiers && node.specifiers.length) {\n        for (const specifier of node.specifiers) {\n          const {\n            exported\n          } = specifier;\n          const exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n          this.checkDuplicateExports(specifier, exportedName);\n\n          if (!isFrom && specifier.local) {\n            const {\n              local\n            } = specifier;\n\n            if (local.type !== \"Identifier\") {\n              this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.value, exportedName);\n            } else {\n              this.checkReservedWord(local.name, local.start, true, false);\n              this.scope.checkLocalExport(local);\n            }\n          }\n        }\n      } else if (node.declaration) {\n        if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n          const id = node.declaration.id;\n          if (!id) throw new Error(\"Assertion failure\");\n          this.checkDuplicateExports(node, id.name);\n        } else if (node.declaration.type === \"VariableDeclaration\") {\n          for (const declaration of node.declaration.declarations) {\n            this.checkDeclaration(declaration.id);\n          }\n        }\n      }\n    }\n\n    const currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n    if (currentContextDecorators.length) {\n      throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n    }\n  }\n\n  checkDeclaration(node) {\n    if (node.type === \"Identifier\") {\n      this.checkDuplicateExports(node, node.name);\n    } else if (node.type === \"ObjectPattern\") {\n      for (const prop of node.properties) {\n        this.checkDeclaration(prop);\n      }\n    } else if (node.type === \"ArrayPattern\") {\n      for (const elem of node.elements) {\n        if (elem) {\n          this.checkDeclaration(elem);\n        }\n      }\n    } else if (node.type === \"ObjectProperty\") {\n      this.checkDeclaration(node.value);\n    } else if (node.type === \"RestElement\") {\n      this.checkDeclaration(node.argument);\n    } else if (node.type === \"AssignmentPattern\") {\n      this.checkDeclaration(node.left);\n    }\n  }\n\n  checkDuplicateExports(node, name) {\n    if (this.exportedIdentifiers.has(name)) {\n      this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n    }\n\n    this.exportedIdentifiers.add(name);\n  }\n\n  parseExportSpecifiers(isInTypeExport) {\n    const nodes = [];\n    let first = true;\n    this.expect(5);\n\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n\n      const isMaybeTypeOnly = this.isContextual(122);\n      const isString = this.match(125);\n      const node = this.startNode();\n      node.local = this.parseModuleExportName();\n      nodes.push(this.parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly));\n    }\n\n    return nodes;\n  }\n\n  parseExportSpecifier(node, isString, isInTypeExport, isMaybeTypeOnly) {\n    if (this.eatContextual(89)) {\n      node.exported = this.parseModuleExportName();\n    } else if (isString) {\n      node.exported = cloneStringLiteral(node.local);\n    } else if (!node.exported) {\n      node.exported = cloneIdentifier(node.local);\n    }\n\n    return this.finishNode(node, \"ExportSpecifier\");\n  }\n\n  parseModuleExportName() {\n    if (this.match(125)) {\n      const result = this.parseStringLiteral(this.state.value);\n      const surrogate = result.value.match(loneSurrogate);\n\n      if (surrogate) {\n        this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n      }\n\n      return result;\n    }\n\n    return this.parseIdentifier(true);\n  }\n\n  parseImport(node) {\n    node.specifiers = [];\n\n    if (!this.match(125)) {\n      const hasDefault = this.maybeParseDefaultImportSpecifier(node);\n      const parseNext = !hasDefault || this.eat(12);\n      const hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n      if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n      this.expectContextual(93);\n    }\n\n    node.source = this.parseImportSource();\n    const assertions = this.maybeParseImportAssertions();\n\n    if (assertions) {\n      node.assertions = assertions;\n    } else {\n      const attributes = this.maybeParseModuleAttributes();\n\n      if (attributes) {\n        node.attributes = attributes;\n      }\n    }\n\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\");\n  }\n\n  parseImportSource() {\n    if (!this.match(125)) this.unexpected();\n    return this.parseExprAtom();\n  }\n\n  shouldParseDefaultImport(node) {\n    return tokenIsIdentifier(this.state.type);\n  }\n\n  parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n    specifier.local = this.parseIdentifier();\n    this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n    node.specifiers.push(this.finishNode(specifier, type));\n  }\n\n  parseAssertEntries() {\n    const attrs = [];\n    const attrNames = new Set();\n\n    do {\n      if (this.match(8)) {\n        break;\n      }\n\n      const node = this.startNode();\n      const keyName = this.state.value;\n\n      if (attrNames.has(keyName)) {\n        this.raise(this.state.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n      }\n\n      attrNames.add(keyName);\n\n      if (this.match(125)) {\n        node.key = this.parseStringLiteral(keyName);\n      } else {\n        node.key = this.parseIdentifier(true);\n      }\n\n      this.expect(14);\n\n      if (!this.match(125)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(12));\n\n    return attrs;\n  }\n\n  maybeParseModuleAttributes() {\n    if (this.match(72) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"moduleAttributes\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"moduleAttributes\")) return [];\n      return null;\n    }\n\n    const attrs = [];\n    const attributes = new Set();\n\n    do {\n      const node = this.startNode();\n      node.key = this.parseIdentifier(true);\n\n      if (node.key.name !== \"type\") {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n      }\n\n      if (attributes.has(node.key.name)) {\n        this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n      }\n\n      attributes.add(node.key.name);\n      this.expect(14);\n\n      if (!this.match(125)) {\n        throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n      }\n\n      node.value = this.parseStringLiteral(this.state.value);\n      this.finishNode(node, \"ImportAttribute\");\n      attrs.push(node);\n    } while (this.eat(12));\n\n    return attrs;\n  }\n\n  maybeParseImportAssertions() {\n    if (this.isContextual(90) && !this.hasPrecedingLineBreak()) {\n      this.expectPlugin(\"importAssertions\");\n      this.next();\n    } else {\n      if (this.hasPlugin(\"importAssertions\")) return [];\n      return null;\n    }\n\n    this.eat(5);\n    const attrs = this.parseAssertEntries();\n    this.eat(8);\n    return attrs;\n  }\n\n  maybeParseDefaultImportSpecifier(node) {\n    if (this.shouldParseDefaultImport(node)) {\n      this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  maybeParseStarImportSpecifier(node) {\n    if (this.match(51)) {\n      const specifier = this.startNode();\n      this.next();\n      this.expectContextual(89);\n      this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n      return true;\n    }\n\n    return false;\n  }\n\n  parseNamedImportSpecifiers(node) {\n    let first = true;\n    this.expect(5);\n\n    while (!this.eat(8)) {\n      if (first) {\n        first = false;\n      } else {\n        if (this.eat(14)) {\n          throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n        }\n\n        this.expect(12);\n        if (this.eat(8)) break;\n      }\n\n      const specifier = this.startNode();\n      const importedIsString = this.match(125);\n      const isMaybeTypeOnly = this.isContextual(122);\n      specifier.imported = this.parseModuleExportName();\n      const importSpecifier = this.parseImportSpecifier(specifier, importedIsString, node.importKind === \"type\" || node.importKind === \"typeof\", isMaybeTypeOnly);\n      node.specifiers.push(importSpecifier);\n    }\n  }\n\n  parseImportSpecifier(specifier, importedIsString, isInTypeOnlyImport, isMaybeTypeOnly) {\n    if (this.eatContextual(89)) {\n      specifier.local = this.parseIdentifier();\n    } else {\n      const {\n        imported\n      } = specifier;\n\n      if (importedIsString) {\n        throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n      }\n\n      this.checkReservedWord(imported.name, specifier.start, true, true);\n\n      if (!specifier.local) {\n        specifier.local = cloneIdentifier(imported);\n      }\n    }\n\n    this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n    return this.finishNode(specifier, \"ImportSpecifier\");\n  }\n\n  isThisParam(param) {\n    return param.type === \"Identifier\" && param.name === \"this\";\n  }\n\n}\n\nclass Parser extends StatementParser {\n  constructor(options, input) {\n    options = getOptions(options);\n    super(options, input);\n    this.options = options;\n    this.initializeScopes();\n    this.plugins = pluginsMap(this.options.plugins);\n    this.filename = options.sourceFilename;\n  }\n\n  getScopeHandler() {\n    return ScopeHandler;\n  }\n\n  parse() {\n    this.enterInitialScopes();\n    const file = this.startNode();\n    const program = this.startNode();\n    this.nextToken();\n    file.errors = null;\n    this.parseTopLevel(file, program);\n    file.errors = this.state.errors;\n    return file;\n  }\n\n}\n\nfunction pluginsMap(plugins) {\n  const pluginMap = new Map();\n\n  for (const plugin of plugins) {\n    const [name, options] = Array.isArray(plugin) ? plugin : [plugin, {}];\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      const parser = getParser(options, input);\n      const ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\nfunction parseExpression(input, options) {\n  const parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction generateExportedTokenTypes(internalTokenTypes) {\n  const tokenTypes = {};\n\n  for (const typeName of Object.keys(internalTokenTypes)) {\n    tokenTypes[typeName] = getExportedToken(internalTokenTypes[typeName]);\n  }\n\n  return tokenTypes;\n}\n\nconst tokTypes = generateExportedTokenTypes(tt);\n\nfunction getParser(options, input) {\n  let cls = Parser;\n\n  if (options != null && options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nconst parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  const pluginList = mixinPluginNames.filter(name => hasPlugin(pluginsFromOptions, name));\n  const key = pluginList.join(\"/\");\n  let cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (const plugin of pluginList) {\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = tokTypes;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.codeFrameColumns = codeFrameColumns;\nexports.default = _default;\n\nvar _highlight = require(\"@babel/highlight\");\n\nlet deprecationWarningShown = false;\n\nfunction getDefs(chalk) {\n  return {\n    gutter: chalk.grey,\n    marker: chalk.red.bold,\n    message: chalk.red.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\n\nfunction getMarkerLines(loc, source, opts) {\n  const startLoc = Object.assign({\n    column: 0,\n    line: -1\n  }, loc.start);\n  const endLoc = Object.assign({}, startLoc, loc.end);\n  const {\n    linesAbove = 2,\n    linesBelow = 3\n  } = opts || {};\n  const startLine = startLoc.line;\n  const startColumn = startLoc.column;\n  const endLine = endLoc.line;\n  const endColumn = endLoc.column;\n  let start = Math.max(startLine - (linesAbove + 1), 0);\n  let end = Math.min(source.length, endLine + linesBelow);\n\n  if (startLine === -1) {\n    start = 0;\n  }\n\n  if (endLine === -1) {\n    end = source.length;\n  }\n\n  const lineDiff = endLine - startLine;\n  const markerLines = {};\n\n  if (lineDiff) {\n    for (let i = 0; i <= lineDiff; i++) {\n      const lineNumber = i + startLine;\n\n      if (!startColumn) {\n        markerLines[lineNumber] = true;\n      } else if (i === 0) {\n        const sourceLength = source[lineNumber - 1].length;\n        markerLines[lineNumber] = [startColumn, sourceLength - startColumn + 1];\n      } else if (i === lineDiff) {\n        markerLines[lineNumber] = [0, endColumn];\n      } else {\n        const sourceLength = source[lineNumber - i].length;\n        markerLines[lineNumber] = [0, sourceLength];\n      }\n    }\n  } else {\n    if (startColumn === endColumn) {\n      if (startColumn) {\n        markerLines[startLine] = [startColumn, 0];\n      } else {\n        markerLines[startLine] = true;\n      }\n    } else {\n      markerLines[startLine] = [startColumn, endColumn - startColumn];\n    }\n  }\n\n  return {\n    start,\n    end,\n    markerLines\n  };\n}\n\nfunction codeFrameColumns(rawLines, loc, opts = {}) {\n  const highlighted = (opts.highlightCode || opts.forceColor) && (0, _highlight.shouldHighlight)(opts);\n  const chalk = (0, _highlight.getChalk)(opts);\n  const defs = getDefs(chalk);\n\n  const maybeHighlight = (chalkFn, string) => {\n    return highlighted ? chalkFn(string) : string;\n  };\n\n  const lines = rawLines.split(NEWLINE);\n  const {\n    start,\n    end,\n    markerLines\n  } = getMarkerLines(loc, lines, opts);\n  const hasColumns = loc.start && typeof loc.start.column === \"number\";\n  const numberMaxWidth = String(end).length;\n  const highlightedLines = highlighted ? (0, _highlight.default)(rawLines, opts) : rawLines;\n  let frame = highlightedLines.split(NEWLINE, end).slice(start, end).map((line, index) => {\n    const number = start + 1 + index;\n    const paddedNumber = ` ${number}`.slice(-numberMaxWidth);\n    const gutter = ` ${paddedNumber} |`;\n    const hasMarker = markerLines[number];\n    const lastMarkerLine = !markerLines[number + 1];\n\n    if (hasMarker) {\n      let markerLine = \"\";\n\n      if (Array.isArray(hasMarker)) {\n        const markerSpacing = line.slice(0, Math.max(hasMarker[0] - 1, 0)).replace(/[^\\t]/g, \" \");\n        const numberOfMarkers = hasMarker[1] || 1;\n        markerLine = [\"\\n \", maybeHighlight(defs.gutter, gutter.replace(/\\d/g, \" \")), \" \", markerSpacing, maybeHighlight(defs.marker, \"^\").repeat(numberOfMarkers)].join(\"\");\n\n        if (lastMarkerLine && opts.message) {\n          markerLine += \" \" + maybeHighlight(defs.message, opts.message);\n        }\n      }\n\n      return [maybeHighlight(defs.marker, \">\"), maybeHighlight(defs.gutter, gutter), line.length > 0 ? ` ${line}` : \"\", markerLine].join(\"\");\n    } else {\n      return ` ${maybeHighlight(defs.gutter, gutter)}${line.length > 0 ? ` ${line}` : \"\"}`;\n    }\n  }).join(\"\\n\");\n\n  if (opts.message && !hasColumns) {\n    frame = `${\" \".repeat(numberMaxWidth + 1)}${opts.message}\\n${frame}`;\n  }\n\n  if (highlighted) {\n    return chalk.reset(frame);\n  } else {\n    return frame;\n  }\n}\n\nfunction _default(rawLines, lineNumber, colNumber, opts = {}) {\n  if (!deprecationWarningShown) {\n    deprecationWarningShown = true;\n    const message = \"Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.\";\n\n    if (process.emitWarning) {\n      process.emitWarning(message, \"DeprecationWarning\");\n    } else {\n      const deprecationError = new Error(message);\n      deprecationError.name = \"DeprecationWarning\";\n      console.warn(new Error(message));\n    }\n  }\n\n  colNumber = Math.max(colNumber, 0);\n  const location = {\n    start: {\n      column: colNumber,\n      line: lineNumber\n    }\n  };\n  return codeFrameColumns(rawLines, location, opts);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.merge = merge;\nexports.normalizeReplacements = normalizeReplacements;\nexports.validate = validate;\nconst _excluded = [\"placeholderWhitelist\", \"placeholderPattern\", \"preserveComments\", \"syntacticPlaceholders\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction merge(a, b) {\n  const {\n    placeholderWhitelist = a.placeholderWhitelist,\n    placeholderPattern = a.placeholderPattern,\n    preserveComments = a.preserveComments,\n    syntacticPlaceholders = a.syntacticPlaceholders\n  } = b;\n  return {\n    parser: Object.assign({}, a.parser, b.parser),\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  };\n}\n\nfunction validate(opts) {\n  if (opts != null && typeof opts !== \"object\") {\n    throw new Error(\"Unknown template options.\");\n  }\n\n  const _ref = opts || {},\n        {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = _ref,\n        parser = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  if (placeholderWhitelist != null && !(placeholderWhitelist instanceof Set)) {\n    throw new Error(\"'.placeholderWhitelist' must be a Set, null, or undefined\");\n  }\n\n  if (placeholderPattern != null && !(placeholderPattern instanceof RegExp) && placeholderPattern !== false) {\n    throw new Error(\"'.placeholderPattern' must be a RegExp, false, null, or undefined\");\n  }\n\n  if (preserveComments != null && typeof preserveComments !== \"boolean\") {\n    throw new Error(\"'.preserveComments' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders != null && typeof syntacticPlaceholders !== \"boolean\") {\n    throw new Error(\"'.syntacticPlaceholders' must be a boolean, null, or undefined\");\n  }\n\n  if (syntacticPlaceholders === true && (placeholderWhitelist != null || placeholderPattern != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  return {\n    parser,\n    placeholderWhitelist: placeholderWhitelist || undefined,\n    placeholderPattern: placeholderPattern == null ? undefined : placeholderPattern,\n    preserveComments: preserveComments == null ? undefined : preserveComments,\n    syntacticPlaceholders: syntacticPlaceholders == null ? undefined : syntacticPlaceholders\n  };\n}\n\nfunction normalizeReplacements(replacements) {\n  if (Array.isArray(replacements)) {\n    return replacements.reduce((acc, replacement, i) => {\n      acc[\"$\" + i] = replacement;\n      return acc;\n    }, {});\n  } else if (typeof replacements === \"object\" || replacements == null) {\n    return replacements || undefined;\n  }\n\n  throw new Error(\"Template replacements must be an array, object, null, or undefined\");\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseAndBuildMetadata;\n\nvar _t = require(\"@babel/types\");\n\nvar _parser = require(\"@babel/parser\");\n\nvar _codeFrame = require(\"@babel/code-frame\");\n\nconst {\n  isCallExpression,\n  isExpressionStatement,\n  isFunction,\n  isIdentifier,\n  isJSXIdentifier,\n  isNewExpression,\n  isPlaceholder,\n  isStatement,\n  isStringLiteral,\n  removePropertiesDeep,\n  traverse\n} = _t;\nconst PATTERN = /^[_$A-Z0-9]+$/;\n\nfunction parseAndBuildMetadata(formatter, code, opts) {\n  const {\n    placeholderWhitelist,\n    placeholderPattern,\n    preserveComments,\n    syntacticPlaceholders\n  } = opts;\n  const ast = parseWithCodeFrame(code, opts.parser, syntacticPlaceholders);\n  removePropertiesDeep(ast, {\n    preserveComments\n  });\n  formatter.validate(ast);\n  const syntactic = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const legacy = {\n    placeholders: [],\n    placeholderNames: new Set()\n  };\n  const isLegacyRef = {\n    value: undefined\n  };\n  traverse(ast, placeholderVisitorHandler, {\n    syntactic,\n    legacy,\n    isLegacyRef,\n    placeholderWhitelist,\n    placeholderPattern,\n    syntacticPlaceholders\n  });\n  return Object.assign({\n    ast\n  }, isLegacyRef.value ? legacy : syntactic);\n}\n\nfunction placeholderVisitorHandler(node, ancestors, state) {\n  var _state$placeholderWhi;\n\n  let name;\n\n  if (isPlaceholder(node)) {\n    if (state.syntacticPlaceholders === false) {\n      throw new Error(\"%%foo%%-style placeholders can't be used when \" + \"'.syntacticPlaceholders' is false.\");\n    } else {\n      name = node.name.name;\n      state.isLegacyRef.value = false;\n    }\n  } else if (state.isLegacyRef.value === false || state.syntacticPlaceholders) {\n    return;\n  } else if (isIdentifier(node) || isJSXIdentifier(node)) {\n    name = node.name;\n    state.isLegacyRef.value = true;\n  } else if (isStringLiteral(node)) {\n    name = node.value;\n    state.isLegacyRef.value = true;\n  } else {\n    return;\n  }\n\n  if (!state.isLegacyRef.value && (state.placeholderPattern != null || state.placeholderWhitelist != null)) {\n    throw new Error(\"'.placeholderWhitelist' and '.placeholderPattern' aren't compatible\" + \" with '.syntacticPlaceholders: true'\");\n  }\n\n  if (state.isLegacyRef.value && (state.placeholderPattern === false || !(state.placeholderPattern || PATTERN).test(name)) && !((_state$placeholderWhi = state.placeholderWhitelist) != null && _state$placeholderWhi.has(name))) {\n    return;\n  }\n\n  ancestors = ancestors.slice();\n  const {\n    node: parent,\n    key\n  } = ancestors[ancestors.length - 1];\n  let type;\n\n  if (isStringLiteral(node) || isPlaceholder(node, {\n    expectedNode: \"StringLiteral\"\n  })) {\n    type = \"string\";\n  } else if (isNewExpression(parent) && key === \"arguments\" || isCallExpression(parent) && key === \"arguments\" || isFunction(parent) && key === \"params\") {\n    type = \"param\";\n  } else if (isExpressionStatement(parent) && !isPlaceholder(node)) {\n    type = \"statement\";\n    ancestors = ancestors.slice(0, -1);\n  } else if (isStatement(node) && isPlaceholder(node)) {\n    type = \"statement\";\n  } else {\n    type = \"other\";\n  }\n\n  const {\n    placeholders,\n    placeholderNames\n  } = state.isLegacyRef.value ? state.legacy : state.syntactic;\n  placeholders.push({\n    name,\n    type,\n    resolve: ast => resolveAncestors(ast, ancestors),\n    isDuplicate: placeholderNames.has(name)\n  });\n  placeholderNames.add(name);\n}\n\nfunction resolveAncestors(ast, ancestors) {\n  let parent = ast;\n\n  for (let i = 0; i < ancestors.length - 1; i++) {\n    const {\n      key,\n      index\n    } = ancestors[i];\n\n    if (index === undefined) {\n      parent = parent[key];\n    } else {\n      parent = parent[key][index];\n    }\n  }\n\n  const {\n    key,\n    index\n  } = ancestors[ancestors.length - 1];\n  return {\n    parent,\n    key,\n    index\n  };\n}\n\nfunction parseWithCodeFrame(code, parserOpts, syntacticPlaceholders) {\n  const plugins = (parserOpts.plugins || []).slice();\n\n  if (syntacticPlaceholders !== false) {\n    plugins.push(\"placeholders\");\n  }\n\n  parserOpts = Object.assign({\n    allowReturnOutsideFunction: true,\n    allowSuperOutsideMethod: true,\n    sourceType: \"module\"\n  }, parserOpts, {\n    plugins\n  });\n\n  try {\n    return (0, _parser.parse)(code, parserOpts);\n  } catch (err) {\n    const loc = err.loc;\n\n    if (loc) {\n      err.message += \"\\n\" + (0, _codeFrame.codeFrameColumns)(code, {\n        start: loc\n      });\n      err.code = \"BABEL_TEMPLATE_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar rdif;\n\tvar gdif;\n\tvar bdif;\n\tvar h;\n\tvar s;\n\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar v = Math.max(r, g, b);\n\tvar diff = v - Math.min(r, g, b);\n\tvar diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = s = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = populatePlaceholders;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  blockStatement,\n  cloneNode,\n  emptyStatement,\n  expressionStatement,\n  identifier,\n  isStatement,\n  isStringLiteral,\n  stringLiteral,\n  validate\n} = _t;\n\nfunction populatePlaceholders(metadata, replacements) {\n  const ast = cloneNode(metadata.ast);\n\n  if (replacements) {\n    metadata.placeholders.forEach(placeholder => {\n      if (!Object.prototype.hasOwnProperty.call(replacements, placeholder.name)) {\n        const placeholderName = placeholder.name;\n        throw new Error(`Error: No substitution given for \"${placeholderName}\". If this is not meant to be a\n            placeholder you may want to consider passing one of the following options to @babel/template:\n            - { placeholderPattern: false, placeholderWhitelist: new Set(['${placeholderName}'])}\n            - { placeholderPattern: /^${placeholderName}$/ }`);\n      }\n    });\n    Object.keys(replacements).forEach(key => {\n      if (!metadata.placeholderNames.has(key)) {\n        throw new Error(`Unknown substitution \"${key}\" given`);\n      }\n    });\n  }\n\n  metadata.placeholders.slice().reverse().forEach(placeholder => {\n    try {\n      applyReplacement(placeholder, ast, replacements && replacements[placeholder.name] || null);\n    } catch (e) {\n      e.message = `@babel/template placeholder \"${placeholder.name}\": ${e.message}`;\n      throw e;\n    }\n  });\n  return ast;\n}\n\nfunction applyReplacement(placeholder, ast, replacement) {\n  if (placeholder.isDuplicate) {\n    if (Array.isArray(replacement)) {\n      replacement = replacement.map(node => cloneNode(node));\n    } else if (typeof replacement === \"object\") {\n      replacement = cloneNode(replacement);\n    }\n  }\n\n  const {\n    parent,\n    key,\n    index\n  } = placeholder.resolve(ast);\n\n  if (placeholder.type === \"string\") {\n    if (typeof replacement === \"string\") {\n      replacement = stringLiteral(replacement);\n    }\n\n    if (!replacement || !isStringLiteral(replacement)) {\n      throw new Error(\"Expected string substitution\");\n    }\n  } else if (placeholder.type === \"statement\") {\n    if (index === undefined) {\n      if (!replacement) {\n        replacement = emptyStatement();\n      } else if (Array.isArray(replacement)) {\n        replacement = blockStatement(replacement);\n      } else if (typeof replacement === \"string\") {\n        replacement = expressionStatement(identifier(replacement));\n      } else if (!isStatement(replacement)) {\n        replacement = expressionStatement(replacement);\n      }\n    } else {\n      if (replacement && !Array.isArray(replacement)) {\n        if (typeof replacement === \"string\") {\n          replacement = identifier(replacement);\n        }\n\n        if (!isStatement(replacement)) {\n          replacement = expressionStatement(replacement);\n        }\n      }\n    }\n  } else if (placeholder.type === \"param\") {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (index === undefined) throw new Error(\"Assertion failure.\");\n  } else {\n    if (typeof replacement === \"string\") {\n      replacement = identifier(replacement);\n    }\n\n    if (Array.isArray(replacement)) {\n      throw new Error(\"Cannot replace single expression with an array.\");\n    }\n  }\n\n  if (index === undefined) {\n    validate(parent, key, replacement);\n    parent[key] = replacement;\n  } else {\n    const items = parent[key].slice();\n\n    if (placeholder.type === \"statement\" || placeholder.type === \"param\") {\n      if (replacement == null) {\n        items.splice(index, 1);\n      } else if (Array.isArray(replacement)) {\n        items.splice(index, 1, ...replacement);\n      } else {\n        items[index] = replacement;\n      }\n    } else {\n      items[index] = replacement;\n    }\n\n    validate(parent, key, items);\n    parent[key] = items;\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.statements = exports.statement = exports.smart = exports.program = exports.expression = void 0;\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  assertExpressionStatement\n} = _t;\n\nfunction makeStatementFormatter(fn) {\n  return {\n    code: str => `/* @babel/template */;\\n${str}`,\n    validate: () => {},\n    unwrap: ast => {\n      return fn(ast.program.body.slice(1));\n    }\n  };\n}\n\nconst smart = makeStatementFormatter(body => {\n  if (body.length > 1) {\n    return body;\n  } else {\n    return body[0];\n  }\n});\nexports.smart = smart;\nconst statements = makeStatementFormatter(body => body);\nexports.statements = statements;\nconst statement = makeStatementFormatter(body => {\n  if (body.length === 0) {\n    throw new Error(\"Found nothing to return.\");\n  }\n\n  if (body.length > 1) {\n    throw new Error(\"Found multiple statements but wanted one\");\n  }\n\n  return body[0];\n});\nexports.statement = statement;\nconst expression = {\n  code: str => `(\\n${str}\\n)`,\n  validate: ast => {\n    if (ast.program.body.length > 1) {\n      throw new Error(\"Found multiple statements but wanted one\");\n    }\n\n    if (expression.unwrap(ast).start === 0) {\n      throw new Error(\"Parse result included parens.\");\n    }\n  },\n  unwrap: ({\n    program\n  }) => {\n    const [stmt] = program.body;\n    assertExpressionStatement(stmt);\n    return stmt.expression;\n  }\n};\nexports.expression = expression;\nconst program = {\n  code: str => str,\n  validate: () => {},\n  unwrap: ast => ast.program\n};\nexports.program = program;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createTemplateBuilder;\n\nvar _options = require(\"./options\");\n\nvar _string = require(\"./string\");\n\nvar _literal = require(\"./literal\");\n\nconst NO_PLACEHOLDER = (0, _options.validate)({\n  placeholderPattern: false\n});\n\nfunction createTemplateBuilder(formatter, defaultOpts) {\n  const templateFnCache = new WeakMap();\n  const templateAstCache = new WeakMap();\n  const cachedOpts = defaultOpts || (0, _options.validate)(null);\n  return Object.assign((tpl, ...args) => {\n    if (typeof tpl === \"string\") {\n      if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n      return extendedTrace((0, _string.default)(formatter, tpl, (0, _options.merge)(cachedOpts, (0, _options.validate)(args[0]))));\n    } else if (Array.isArray(tpl)) {\n      let builder = templateFnCache.get(tpl);\n\n      if (!builder) {\n        builder = (0, _literal.default)(formatter, tpl, cachedOpts);\n        templateFnCache.set(tpl, builder);\n      }\n\n      return extendedTrace(builder(args));\n    } else if (typeof tpl === \"object\" && tpl) {\n      if (args.length > 0) throw new Error(\"Unexpected extra params.\");\n      return createTemplateBuilder(formatter, (0, _options.merge)(cachedOpts, (0, _options.validate)(tpl)));\n    }\n\n    throw new Error(`Unexpected template param ${typeof tpl}`);\n  }, {\n    ast: (tpl, ...args) => {\n      if (typeof tpl === \"string\") {\n        if (args.length > 1) throw new Error(\"Unexpected extra params.\");\n        return (0, _string.default)(formatter, tpl, (0, _options.merge)((0, _options.merge)(cachedOpts, (0, _options.validate)(args[0])), NO_PLACEHOLDER))();\n      } else if (Array.isArray(tpl)) {\n        let builder = templateAstCache.get(tpl);\n\n        if (!builder) {\n          builder = (0, _literal.default)(formatter, tpl, (0, _options.merge)(cachedOpts, NO_PLACEHOLDER));\n          templateAstCache.set(tpl, builder);\n        }\n\n        return builder(args)();\n      }\n\n      throw new Error(`Unexpected template param ${typeof tpl}`);\n    }\n  });\n}\n\nfunction extendedTrace(fn) {\n  let rootStack = \"\";\n\n  try {\n    throw new Error();\n  } catch (error) {\n    if (error.stack) {\n      rootStack = error.stack.split(\"\\n\").slice(3).join(\"\\n\");\n    }\n  }\n\n  return arg => {\n    try {\n      return fn(arg);\n    } catch (err) {\n      err.stack += `\\n    =============\\n${rootStack}`;\n      throw err;\n    }\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stringTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction stringTemplate(formatter, code, opts) {\n  code = formatter.code(code);\n  let metadata;\n  return arg => {\n    const replacements = (0, _options.normalizeReplacements)(arg);\n    if (!metadata) metadata = (0, _parse.default)(formatter, code, opts);\n    return formatter.unwrap((0, _populate.default)(metadata, replacements));\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = highlight;\nexports.getChalk = getChalk;\nexports.shouldHighlight = shouldHighlight;\n\nvar _jsTokens = require(\"js-tokens\");\n\nvar _helperValidatorIdentifier = require(\"@babel/helper-validator-identifier\");\n\nvar _chalk = require(\"chalk\");\n\nconst sometimesKeywords = new Set([\"as\", \"async\", \"from\", \"get\", \"of\", \"set\"]);\n\nfunction getDefs(chalk) {\n  return {\n    keyword: chalk.cyan,\n    capitalized: chalk.yellow,\n    jsxIdentifier: chalk.yellow,\n    punctuator: chalk.yellow,\n    number: chalk.magenta,\n    string: chalk.green,\n    regex: chalk.magenta,\n    comment: chalk.grey,\n    invalid: chalk.white.bgRed.bold\n  };\n}\n\nconst NEWLINE = /\\r\\n|[\\n\\r\\u2028\\u2029]/;\nconst BRACKET = /^[()[\\]{}]$/;\nlet tokenize;\n{\n  const JSX_TAG = /^[a-z][\\w-]*$/i;\n\n  const getTokenType = function (token, offset, text) {\n    if (token.type === \"name\") {\n      if ((0, _helperValidatorIdentifier.isKeyword)(token.value) || (0, _helperValidatorIdentifier.isStrictReservedWord)(token.value, true) || sometimesKeywords.has(token.value)) {\n        return \"keyword\";\n      }\n\n      if (JSX_TAG.test(token.value) && (text[offset - 1] === \"<\" || text.substr(offset - 2, 2) == \"</\")) {\n        return \"jsxIdentifier\";\n      }\n\n      if (token.value[0] !== token.value[0].toLowerCase()) {\n        return \"capitalized\";\n      }\n    }\n\n    if (token.type === \"punctuator\" && BRACKET.test(token.value)) {\n      return \"bracket\";\n    }\n\n    if (token.type === \"invalid\" && (token.value === \"@\" || token.value === \"#\")) {\n      return \"punctuator\";\n    }\n\n    return token.type;\n  };\n\n  tokenize = function* (text) {\n    let match;\n\n    while (match = _jsTokens.default.exec(text)) {\n      const token = _jsTokens.matchToToken(match);\n\n      yield {\n        type: getTokenType(token, match.index, text),\n        value: token.value\n      };\n    }\n  };\n}\n\nfunction highlightTokens(defs, text) {\n  let highlighted = \"\";\n\n  for (const {\n    type,\n    value\n  } of tokenize(text)) {\n    const colorize = defs[type];\n\n    if (colorize) {\n      highlighted += value.split(NEWLINE).map(str => colorize(str)).join(\"\\n\");\n    } else {\n      highlighted += value;\n    }\n  }\n\n  return highlighted;\n}\n\nfunction shouldHighlight(options) {\n  return !!_chalk.supportsColor || options.forceColor;\n}\n\nfunction getChalk(options) {\n  return options.forceColor ? new _chalk.constructor({\n    enabled: true,\n    level: 1\n  }) : _chalk;\n}\n\nfunction highlight(code, options = {}) {\n  if (shouldHighlight(options)) {\n    const chalk = getChalk(options);\n    const defs = getDefs(chalk);\n    return highlightTokens(defs, code);\n  } else {\n    return code;\n  }\n}","'use strict';\nconst escapeStringRegexp = require('escape-string-regexp');\nconst ansiStyles = require('ansi-styles');\nconst stdoutColor = require('supports-color').stdout;\n\nconst template = require('./templates.js');\n\nconst isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');\n\n// `supportsColor.level` → `ansiStyles.color[name]` mapping\nconst levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];\n\n// `color-convert` models to exclude from the Chalk API due to conflicts and such\nconst skipModels = new Set(['gray']);\n\nconst styles = Object.create(null);\n\nfunction applyOptions(obj, options) {\n\toptions = options || {};\n\n\t// Detect level if not set manually\n\tconst scLevel = stdoutColor ? stdoutColor.level : 0;\n\tobj.level = options.level === undefined ? scLevel : options.level;\n\tobj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;\n}\n\nfunction Chalk(options) {\n\t// We check for this.template here since calling `chalk.constructor()`\n\t// by itself will have a `this` of a previously constructed chalk object\n\tif (!this || !(this instanceof Chalk) || this.template) {\n\t\tconst chalk = {};\n\t\tapplyOptions(chalk, options);\n\n\t\tchalk.template = function () {\n\t\t\tconst args = [].slice.call(arguments);\n\t\t\treturn chalkTag.apply(null, [chalk.template].concat(args));\n\t\t};\n\n\t\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\t\tObject.setPrototypeOf(chalk.template, chalk);\n\n\t\tchalk.template.constructor = Chalk;\n\n\t\treturn chalk.template;\n\t}\n\n\tapplyOptions(this, options);\n}\n\n// Use bright blue on Windows as the normal blue color is illegible\nif (isSimpleWindowsTerm) {\n\tansiStyles.blue.open = '\\u001B[94m';\n}\n\nfor (const key of Object.keys(ansiStyles)) {\n\tansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n\n\tstyles[key] = {\n\t\tget() {\n\t\t\tconst codes = ansiStyles[key];\n\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\treturn build.call(this, this._styles || [], true, 'visible');\n\t}\n};\n\nansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');\nfor (const model of Object.keys(ansiStyles.color.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.color.close,\n\t\t\t\t\tcloseRe: ansiStyles.color.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');\nfor (const model of Object.keys(ansiStyles.bgColor.ansi)) {\n\tif (skipModels.has(model)) {\n\t\tcontinue;\n\t}\n\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst level = this.level;\n\t\t\treturn function () {\n\t\t\t\tconst open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);\n\t\t\t\tconst codes = {\n\t\t\t\t\topen,\n\t\t\t\t\tclose: ansiStyles.bgColor.close,\n\t\t\t\t\tcloseRe: ansiStyles.bgColor.closeRe\n\t\t\t\t};\n\t\t\t\treturn build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, styles);\n\nfunction build(_styles, _empty, key) {\n\tconst builder = function () {\n\t\treturn applyStyle.apply(builder, arguments);\n\t};\n\n\tbuilder._styles = _styles;\n\tbuilder._empty = _empty;\n\n\tconst self = this;\n\n\tObject.defineProperty(builder, 'level', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.level;\n\t\t},\n\t\tset(level) {\n\t\t\tself.level = level;\n\t\t}\n\t});\n\n\tObject.defineProperty(builder, 'enabled', {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn self.enabled;\n\t\t},\n\t\tset(enabled) {\n\t\t\tself.enabled = enabled;\n\t\t}\n\t});\n\n\t// See below for fix regarding invisible grey/dim combination on Windows\n\tbuilder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';\n\n\t// `__proto__` is used because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tbuilder.__proto__ = proto; // eslint-disable-line no-proto\n\n\treturn builder;\n}\n\nfunction applyStyle() {\n\t// Support varags, but simply cast to string in case there's only one arg\n\tconst args = arguments;\n\tconst argsLen = args.length;\n\tlet str = String(arguments[0]);\n\n\tif (argsLen === 0) {\n\t\treturn '';\n\t}\n\n\tif (argsLen > 1) {\n\t\t// Don't slice `arguments`, it prevents V8 optimizations\n\t\tfor (let a = 1; a < argsLen; a++) {\n\t\t\tstr += ' ' + args[a];\n\t\t}\n\t}\n\n\tif (!this.enabled || this.level <= 0 || !str) {\n\t\treturn this._empty ? '' : str;\n\t}\n\n\t// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,\n\t// see https://github.com/chalk/chalk/issues/58\n\t// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.\n\tconst originalDim = ansiStyles.dim.open;\n\tif (isSimpleWindowsTerm && this.hasGrey) {\n\t\tansiStyles.dim.open = '';\n\t}\n\n\tfor (const code of this._styles.slice().reverse()) {\n\t\t// Replace any instances already present with a re-opening code\n\t\t// otherwise only the part of the string until said closing code\n\t\t// will be colored, and the rest will simply be 'plain'.\n\t\tstr = code.open + str.replace(code.closeRe, code.open) + code.close;\n\n\t\t// Close the styling before a linebreak and reopen\n\t\t// after next line to fix a bleed issue on macOS\n\t\t// https://github.com/chalk/chalk/pull/92\n\t\tstr = str.replace(/\\r?\\n/g, `${code.close}$&${code.open}`);\n\t}\n\n\t// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue\n\tansiStyles.dim.open = originalDim;\n\n\treturn str;\n}\n\nfunction chalkTag(chalk, strings) {\n\tif (!Array.isArray(strings)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn [].slice.call(arguments, 1).join(' ');\n\t}\n\n\tconst args = [].slice.call(arguments, 2);\n\tconst parts = [strings.raw[0]];\n\n\tfor (let i = 1; i < strings.length; i++) {\n\t\tparts.push(String(args[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'));\n\t\tparts.push(String(strings.raw[i]));\n\t}\n\n\treturn template(chalk, parts.join(''));\n}\n\nObject.defineProperties(Chalk.prototype, styles);\n\nmodule.exports = Chalk(); // eslint-disable-line new-cap\nmodule.exports.supportsColor = stdoutColor;\nmodule.exports.default = module.exports; // For TypeScript\n","'use strict';\nconst colorConvert = require('color-convert');\n\nconst wrapAnsi16 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => function () {\n\tconst code = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => function () {\n\tconst rgb = fn.apply(colorConvert, arguments);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\t\t\tgray: [90, 39],\n\n\t\t\t// Bright color\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Fix humans\n\tstyles.color.grey = styles.color.gray;\n\n\tfor (const groupName of Object.keys(styles)) {\n\t\tconst group = styles[groupName];\n\n\t\tfor (const styleName of Object.keys(group)) {\n\t\t\tconst style = group[styleName];\n\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\n\t\tObject.defineProperty(styles, 'codes', {\n\t\t\tvalue: codes,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tconst ansi2ansi = n => n;\n\tconst rgb2rgb = (r, g, b) => [r, g, b];\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 0)\n\t};\n\tstyles.color.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 0)\n\t};\n\n\tstyles.bgColor.ansi = {\n\t\tansi: wrapAnsi16(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi256 = {\n\t\tansi256: wrapAnsi256(ansi2ansi, 10)\n\t};\n\tstyles.bgColor.ansi16m = {\n\t\trgb: wrapAnsi16m(rgb2rgb, 10)\n\t};\n\n\tfor (let key of Object.keys(colorConvert)) {\n\t\tif (typeof colorConvert[key] !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst suite = colorConvert[key];\n\n\t\tif (key === 'ansi16') {\n\t\t\tkey = 'ansi';\n\t\t}\n\n\t\tif ('ansi16' in suite) {\n\t\t\tstyles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);\n\t\t\tstyles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);\n\t\t}\n\n\t\tif ('ansi256' in suite) {\n\t\t\tstyles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);\n\t\t\tstyles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);\n\t\t}\n\n\t\tif ('rgb' in suite) {\n\t\t\tstyles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);\n\t\t\tstyles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);\n\t\t}\n\t}\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","'use strict';\nmodule.exports = {\n\tstdout: false,\n\tstderr: false\n};\n","'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tif ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, args) {\n\tconst results = [];\n\tconst chunks = args.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tif (!isNaN(chunk)) {\n\t\t\tresults.push(Number(chunk));\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const styleName of Object.keys(enabled)) {\n\t\tif (Array.isArray(enabled[styleName])) {\n\t\t\tif (!(styleName in current)) {\n\t\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t\t}\n\n\t\t\tif (enabled[styleName].length > 0) {\n\t\t\t\tcurrent = current[styleName].apply(current, enabled[styleName]);\n\t\t\t} else {\n\t\t\t\tcurrent = current[styleName];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, tmp) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {\n\t\tif (escapeChar) {\n\t\t\tchunk.push(unescape(escapeChar));\n\t\t} else if (style) {\n\t\t\tconst str = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(chr);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMsg);\n\t}\n\n\treturn chunks.join('');\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = literalTemplate;\n\nvar _options = require(\"./options\");\n\nvar _parse = require(\"./parse\");\n\nvar _populate = require(\"./populate\");\n\nfunction literalTemplate(formatter, tpl, opts) {\n  const {\n    metadata,\n    names\n  } = buildLiteralData(formatter, tpl, opts);\n  return arg => {\n    const defaultReplacements = {};\n    arg.forEach((replacement, i) => {\n      defaultReplacements[names[i]] = replacement;\n    });\n    return arg => {\n      const replacements = (0, _options.normalizeReplacements)(arg);\n\n      if (replacements) {\n        Object.keys(replacements).forEach(key => {\n          if (Object.prototype.hasOwnProperty.call(defaultReplacements, key)) {\n            throw new Error(\"Unexpected replacement overlap.\");\n          }\n        });\n      }\n\n      return formatter.unwrap((0, _populate.default)(metadata, replacements ? Object.assign(replacements, defaultReplacements) : defaultReplacements));\n    };\n  };\n}\n\nfunction buildLiteralData(formatter, tpl, opts) {\n  let names;\n  let nameSet;\n  let metadata;\n  let prefix = \"\";\n\n  do {\n    prefix += \"$\";\n    const result = buildTemplateCode(tpl, prefix);\n    names = result.names;\n    nameSet = new Set(names);\n    metadata = (0, _parse.default)(formatter, formatter.code(result.code), {\n      parser: opts.parser,\n      placeholderWhitelist: new Set(result.names.concat(opts.placeholderWhitelist ? Array.from(opts.placeholderWhitelist) : [])),\n      placeholderPattern: opts.placeholderPattern,\n      preserveComments: opts.preserveComments,\n      syntacticPlaceholders: opts.syntacticPlaceholders\n    });\n  } while (metadata.placeholders.some(placeholder => placeholder.isDuplicate && nameSet.has(placeholder.name)));\n\n  return {\n    metadata,\n    names\n  };\n}\n\nfunction buildTemplateCode(tpl, prefix) {\n  const names = [];\n  let code = tpl[0];\n\n  for (let i = 1; i < tpl.length; i++) {\n    const value = `${prefix}${i - 1}`;\n    names.push(value);\n    code += value + tpl[i];\n  }\n\n  return {\n    names,\n    code\n  };\n}"],"sourceRoot":""}