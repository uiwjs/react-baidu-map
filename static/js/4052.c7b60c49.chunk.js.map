{"version":3,"file":"static/js/4052.c7b60c49.chunk.js","mappings":"gHAAA","sources":["../../packages/overview-map-control/README.md"],"sourcesContent":["export default \"OverviewMapControl 缩略地图控件\\n===\\n\\n缩略地图控件。你也可以使用 `Map` 组件 `widget` 属性来设置控件更方便。\\n\\n```jsx\\nimport { OverviewMapControl, useOverviewMapControl } from '@uiw/react-baidu-map';\\n// 或者单独安装使用\\nimport OverviewMapControl, { useOverviewMapControl } from '@uiw/react-baidu-map-overview-map-control';\\n```\\n\\n### 基本用法\\n\\n<!--rehype:bgWhite=true&noScroll=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport React, { useState, useRef } from 'react';\\nimport { Map, APILoader, OverviewMapControl } from '@uiw/react-baidu-map';\\n\\nconst Example = () => {\\n  const [show, setShow] = useState(true);\\n  return (\\n    <div>\\n      <button onClick={() => setShow(!show)}>\\n        {show ? '关闭' : '开启'}\\n      </button>\\n      <Map zoom={13} style={{ height: 300 }}>\\n        {show && (\\n          <OverviewMapControl isOpen />\\n        )}\\n        <OverviewMapControl\\n          isOpen\\n          visiable={show}\\n          offset={new BMap.Size(40, 40)}\\n          anchor={BMAP_ANCHOR_TOP_RIGHT}\\n          onViewChanged={() => {\\n            console.log('onViewChanged ..')\\n          }}\\n        />\\n      </Map>\\n    </div>\\n  );\\n}\\n\\nReactDOM.render((\\n  <div style={{ width: '100%' }}>\\n    <APILoader akay=\\\"GTrnXa5hwXGwgQnTBG28SHBubErMKm3f\\\">\\n      <Example />\\n    </APILoader>\\n  </div>\\n), _mount_);\\n```\\n\\n\\n### 使用 hooks\\n\\n`overviewMapControl`, `setGeolocationControl`\\n\\n<!--rehype:bgWhite=true&codeSandbox=true&codePen=true-->\\n```jsx\\nimport ReactDOM from 'react-dom';\\nimport { useRef, useEffect, useState } from 'react';\\nimport { Map, APILoader, useMap, useOverviewMapControl } from '@uiw/react-baidu-map';\\n\\nconst Example = () => {\\n  const divElm = useRef(null);\\n  const [show, setShow] = useState(true);\\n  const { setContainer, map } = useMap();\\n  const { overviewMapControl } = useOverviewMapControl({\\n    map, anchor: BMAP_NAVIGATION_CONTROL_LARGE, visiable: show, isOpen: true,\\n  });\\n\\n  useEffect(() => {\\n    if (divElm.current && !map) {\\n      setContainer(divElm.current);\\n    }\\n  }, [map]);\\n  return (\\n    <>\\n      <button onClick={() => setShow(!show)}>\\n        {show ? '关闭' : '开启'}\\n      </button>\\n      <div ref={divElm} style={{ height: '100%' }} />\\n    </>\\n  );\\n}\\n\\nconst Demo = () => (\\n  <div style={{ width: '100%', height: '300px' }}>\\n    <APILoader akay=\\\"GTrnXa5hwXGwgQnTBG28SHBubErMKm3f\\\">\\n      <Example />\\n    </APILoader>\\n  </div>\\n);\\nReactDOM.render(<Demo />, _mount_);\\n```\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n| ----- | ----- | ----- | ----- |\\n| visiable | 覆盖物是否可见。 | `boolean` | - |\\n| anchor | 控件的位置偏移值。| `ControlAnchor` | `BMAP_ANCHOR_TOP_RIGHT` |\\n| offset | 控件的水平偏移值。 | `BMap.Size` | - |\\n| size | 缩略地图控件的大小 | `BMap.Size` | - |\\n| isOpen | 缩略地图添加到地图后的开合状态，默认为关闭。 | `boolean` | - |\\n\\n### 事件\\n\\n| 参数 | 说明 | 类型 |\\n| ----- | ----- | ----- |\\n| onViewChanged | 缩略地图开合状态发生变化后触发此事件 | (event: { type: any, target: any, isOpen: boolean }) => void; |\\n| onViewChanging | 缩略地图开合状态发生变化过程中触发此事件 | (event: { type: any, target: any }) => void; |\\n\";"],"names":[],"sourceRoot":""}